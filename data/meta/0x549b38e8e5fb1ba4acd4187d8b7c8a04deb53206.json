{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.15;\r\n\r\ncontract EthereumLottery {\r\n    function admin() constant returns (address);\r\n    function needsInitialization() constant returns (bool);\r\n    function initLottery(uint _jackpot, uint _numTickets, uint _ticketPrice);\r\n}\r\n\r\ncontract LotteryAdmin {\r\n    address public owner;\r\n    address public admin;\r\n    address public proposedOwner;\r\n\r\n    address public ethereumLottery;\r\n\r\n    uint public dailyAdminAllowance;\r\n\r\n    uint public lastAllowancePaymentTimestamp;\r\n    uint public nextProfile;\r\n\r\n    event Deposit(address indexed _from, uint _value);\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdminOrOwner {\r\n        require(msg.sender == owner || msg.sender == admin);\r\n        _;\r\n    }\r\n\r\n    function LotteryAdmin(address _ethereumLottery) {\r\n        owner = msg.sender;\r\n        admin = msg.sender;\r\n        ethereumLottery = _ethereumLottery;\r\n\r\n        dailyAdminAllowance = 50 finney;\r\n    }\r\n\r\n    function () payable {\r\n        Deposit(msg.sender, msg.value);\r\n    }\r\n\r\n    function allowsAllowance() constant returns (bool) {\r\n        return now - lastAllowancePaymentTimestamp >= 24 hours;\r\n    }\r\n\r\n    function requestAllowance() onlyAdminOrOwner {\r\n        require(allowsAllowance());\r\n\r\n        lastAllowancePaymentTimestamp = now;\r\n        admin.transfer(dailyAdminAllowance);\r\n    }\r\n\r\n    function needsInitialization() constant returns (bool) {\r\n        if (EthereumLottery(ethereumLottery).admin() != address(this)) {\r\n            return false;\r\n        }\r\n\r\n        return EthereumLottery(ethereumLottery).needsInitialization();\r\n    }\r\n\r\n    function initLottery(uint _nextProfile, uint _jackpot,\r\n                         uint _numTickets, uint _ticketPrice)\r\n             onlyAdminOrOwner {\r\n        nextProfile = _nextProfile;\r\n        EthereumLottery(ethereumLottery).initLottery(\r\n            _jackpot, _numTickets, _ticketPrice);\r\n    }\r\n\r\n    function withdraw(uint _value) onlyOwner {\r\n        owner.transfer(_value);\r\n    }\r\n\r\n    function setConfiguration(uint _dailyAdminAllowance) onlyOwner {\r\n        dailyAdminAllowance = _dailyAdminAllowance;\r\n    }\r\n\r\n    function setLottery(address _ethereumLottery) onlyOwner {\r\n        ethereumLottery = _ethereumLottery;\r\n    }\r\n\r\n    function setAdmin(address _admin) onlyOwner {\r\n        admin = _admin;\r\n    }\r\n\r\n    function proposeOwner(address _owner) onlyOwner {\r\n        proposedOwner = _owner;\r\n    }\r\n\r\n    function acceptOwnership() {\r\n        require(proposedOwner != 0);\r\n        require(msg.sender == proposedOwner);\r\n        owner = proposedOwner;\r\n    }\r\n\r\n    function destruct() onlyOwner {\r\n        selfdestruct(owner);\r\n    }\r\n}",
	"ContractName": "LotteryAdmin",
	"CompilerVersion": "v0.4.17+commit.bdeb9e52"
}