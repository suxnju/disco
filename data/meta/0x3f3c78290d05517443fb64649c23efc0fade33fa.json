{
	"Language": "Solidity",
	"Source": "/**\r\n *Submitted for verification at Etherscan.io on 2019-11-15\r\n*/\r\n\r\npragma solidity 0.4.25;\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract StockShares is Ownable {\r\n    event Transfer(address indexed fromAddress, uint256 value);\r\n    event Withdraw(address indexed toAddress, uint256 value);\r\n    \r\n    function () payable public {\r\n        require(msg.value > 0);\r\n        require(msg.sender != address(0));\r\n        emit Transfer(msg.sender, msg.value);\r\n    }\r\n    \r\n    function withdraw (address toAddress, uint256 amount) onlyOwner public  {\r\n        require(amount > 0);\r\n        require(address(this).balance >= amount);\r\n        require(toAddress != address(0));\r\n        toAddress.transfer(amount);\r\n        emit Withdraw(toAddress, amount);\r\n    }\r\n    \r\n}",
	"ContractName": "StockShares",
	"CompilerVersion": "v0.4.25+commit.59dbf8f1"
}