{
	"Language": "Solidity",
	"Source": "pragma solidity >=0.4.25 <0.6.0;\r\ninterface token {\r\n    function transfer(address receiver, uint amount);\r\n}\r\n\r\ncontract Crowdsale {\r\n    address public beneficiary;  \r\n    uint public fundingGoal;   \r\n    uint public amountRaised;   \r\n    uint public deadline;      \r\n    uint public price;    \r\n    token public tokenReward;   \r\n\r\n    mapping(address => uint256) public balanceOf;\r\n    bool public fundingGoalReached = false;  \r\n    bool public crowdsaleClosed = false;   \r\n\r\n    event GoalReached(address recipient, uint totalAmountRaised);\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n    event LogAmount(uint amount);\r\n\r\n    \r\n    function Crowdsale(\r\n        address ifSuccessfulSendTo,\r\n        uint fundingGoalInEthers,\r\n        uint durationInMinutes,\r\n        uint weiCostOfEachToken,\r\n        address addressOfTokenUsedAsReward) {\r\n            beneficiary = ifSuccessfulSendTo;\r\n            fundingGoal = fundingGoalInEthers * 1 ether;\r\n            deadline = now + durationInMinutes * 1 minutes;\r\n            price = weiCostOfEachToken * 1 wei;\r\n            tokenReward = token(addressOfTokenUsedAsReward);   \r\n    }\r\n\r\n    \r\n    function () payable {\r\n        require(!crowdsaleClosed);\r\n        uint amount = msg.value;\r\n        balanceOf[msg.sender] += amount;\r\n        amountRaised += amount;\r\n        LogAmount(amount);\r\n        tokenReward.transfer(msg.sender, 2000 * (amount / price));\r\n        FundTransfer(msg.sender, amount, true);\r\n    }\r\n\r\n    \r\n    modifier afterDeadline() { if (now >= deadline) _; }\r\n\r\n    function checkGoalReached() afterDeadline {\r\n        fundingGoalReached = true;\r\n        GoalReached(beneficiary, amountRaised);\r\n        crowdsaleClosed = true;\r\n    }\r\n\r\n\r\n    function safeWithdrawal() afterDeadline {\r\n    \r\n    if (fundingGoalReached && beneficiary == msg.sender) {\r\n            if (beneficiary.send(amountRaised)) {\r\n                FundTransfer(beneficiary, amountRaised, false);/**/\r\n            } else {\r\n                //If we fail to send the funds to beneficiary, unlock funders balance\r\n                fundingGoalReached = false;\r\n            }\r\n        }\r\n    }\r\n}",
	"ContractName": "Crowdsale",
	"CompilerVersion": "v0.4.25+commit.59dbf8f1"
}