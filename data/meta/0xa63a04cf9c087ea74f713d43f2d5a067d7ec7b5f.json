{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.23;\r\n\r\ncontract BaseToken {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require(_to != 0x0);\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);\r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n        Transfer(_from, _to, _value);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public\r\n        returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract BurnToken is BaseToken {\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);\r\n        balanceOf[msg.sender] -= _value;\r\n        totalSupply -= _value;\r\n        Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n        require(balanceOf[_from] >= _value);\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        balanceOf[_from] -= _value;\r\n        allowance[_from][msg.sender] -= _value;\r\n        totalSupply -= _value;\r\n        Burn(_from, _value);\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract ICOToken is BaseToken {\r\n    // 1 ether = icoRatio token\r\n    uint256 public icoRatio;\r\n    uint256 public icoEndtime;\r\n    address public icoSender;\r\n    address public icoHolder;\r\n\r\n    event ICO(address indexed from, uint256 indexed value, uint256 tokenValue);\r\n    event Withdraw(address indexed from, address indexed holder, uint256 value);\r\n\r\n    modifier onlyBefore() {\r\n        if (now > icoEndtime) {\r\n            revert();\r\n        }\r\n        _;\r\n    }\r\n\r\n    function() public payable onlyBefore {\r\n        uint256 tokenValue = (msg.value * icoRatio * 10 ** uint256(decimals)) / (1 ether / 1 wei);\r\n        if (tokenValue == 0 || balanceOf[icoSender] < tokenValue) {\r\n            revert();\r\n        }\r\n        _transfer(icoSender, msg.sender, tokenValue);\r\n        ICO(msg.sender, msg.value, tokenValue);\r\n    }\r\n\r\n    function withdraw() {\r\n        uint256 balance = this.balance;\r\n        icoHolder.transfer(balance);\r\n        Withdraw(msg.sender, icoHolder, balance);\r\n    }\r\n}\r\n\r\ncontract CustomToken is BaseToken, BurnToken, ICOToken {\r\n    function CustomToken() public {\r\n        totalSupply = 10000000000000000000000000000;\r\n        balanceOf[0x3389460502c67478A0BE1078cbC33a38C5484926] = totalSupply;\r\n        name = 'Libra';\r\n        symbol = 'LBR';\r\n        decimals = 18;\r\n        icoRatio = 10000;\r\n        icoEndtime = 1677668400;\r\n        icoSender = 0x3389460502c67478A0BE1078cbC33a38C5484926;\r\n        icoHolder = 0x3389460502c67478A0BE1078cbC33a38C5484926;\r\n    }\r\n}",
	"ContractName": "CustomToken",
	"CompilerVersion": "v0.4.23+commit.124ca40d"
}