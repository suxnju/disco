{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.11;\r\n\r\n\r\ncontract CarTaxiCrowdsale {\r\n    function soldTokensOnPreIco() constant returns (uint256);\r\n    function soldTokensOnIco() constant returns (uint256);\r\n}\r\n\r\ncontract CarTaxiToken {\r\n    function balanceOf(address owner) constant returns (uint256 balance);\r\n    function getOwnerCount() constant returns (uint256 value);\r\n}\r\n\r\ncontract CarTaxiBonus {\r\n\r\n    CarTaxiCrowdsale public carTaxiCrowdsale;\r\n    CarTaxiToken public carTaxiToken;\r\n\r\n\r\n    address public owner;\r\n    address public carTaxiCrowdsaleAddress = 0x77CeFf4173a56cd22b6184Fa59c668B364aE55B8;\r\n    address public carTaxiTokenAddress = 0x662aBcAd0b7f345AB7FfB1b1fbb9Df7894f18e66;\r\n\r\n    uint constant BASE = 1000000000000000000;\r\n    uint public totalTokens;\r\n    uint public totalBonuses;\r\n    uint public iteration = 0;\r\n    \r\n    bool init = false;\r\n\r\n    //mapping (address => bool) private contributors;\r\n\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function setOwner(address _owner) public onlyOwner{\r\n        require(_owner != 0x0);\r\n        owner = _owner;\r\n    }\r\n\r\n    function CarTaxiBonus() {\r\n        owner = msg.sender;\r\n        carTaxiCrowdsale = CarTaxiCrowdsale(carTaxiCrowdsaleAddress);\r\n        carTaxiToken = CarTaxiToken(carTaxiTokenAddress);\r\n    }\r\n\r\n    function sendValue(address addr, uint256 val) public onlyOwner{\r\n        addr.transfer(val);\r\n    }\r\n\r\n    function setTotalTokens(uint256 _totalTokens) public onlyOwner{\r\n        totalTokens = _totalTokens;\r\n    }\r\n\r\n    function setTotalBonuses(uint256 _totalBonuses) public onlyOwner{\r\n        totalBonuses = _totalBonuses;\r\n    }\r\n\r\n    function sendAuto(address addr) public onlyOwner{\r\n\r\n        uint256 addrTokens = carTaxiToken.balanceOf(addr);\r\n\r\n        require(addrTokens > 0);\r\n        require(totalTokens > 0);\r\n\r\n        uint256 pie = addrTokens * totalBonuses / totalTokens;\r\n\r\n        addr.transfer(pie);\r\n        \r\n    }\r\n\r\n    function withdrawEther() public onlyOwner {\r\n        require(this.balance > 0);\r\n        owner.transfer(this.balance);\r\n    }\r\n    \r\n    function () payable { }\r\n  \r\n}",
	"ContractName": "CarTaxiBonus",
	"CompilerVersion": "v0.4.17-nightly.2017.9.21+commit.725b4fc2"
}