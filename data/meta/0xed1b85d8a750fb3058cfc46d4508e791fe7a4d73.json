{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.5.0;\r\n\r\ncontract Wallet {\r\n    bytes32 keyHash;\r\n\r\n    constructor(bytes32 _keyHash) public payable {\r\n        keyHash = _keyHash;\r\n    }\r\n    \r\n    function withdraw(bytes memory key) public payable {\r\n        uint256 balanceBeforeMsg = address(this).balance - msg.value;\r\n        require(msg.value >= balanceBeforeMsg * 2, \"balance required\");\r\n        require(sha256(key) == keyHash, \"invalid key\");\r\n        selfdestruct(msg.sender);\r\n    }\r\n}",
	"ContractName": "Wallet",
	"CompilerVersion": "v0.5.3+commit.10d17f24"
}