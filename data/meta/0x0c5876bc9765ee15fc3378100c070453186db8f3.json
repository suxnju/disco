{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.16;\r\n\r\ninterface token { // \u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0442\u043e\u043a\u0435\u043d\u0430 \r\n    function totalSupply() constant public returns (uint256 _totalSupply); \r\n    function balanceOf(address _owner) public constant returns (uint balance); \r\n    function transfer(address _to, uint256 _value) public returns (bool success); \r\n    function serviceTransfer(address _to, uint256 _value) public returns (bool success);\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n    \r\n    function Ownable() public { \r\n        owner = msg.sender;\r\n    }\r\n \r\n    modifier onlyOwner() { \r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n \r\n    function transferOwnership(address _owner) public onlyOwner { \r\n        owner = _owner;\r\n    }\r\n    \r\n}\r\n\r\ncontract RobotCoinSeller is Ownable{\r\n\r\n    token  public robotCoin;\r\n    uint256 public salePrice; \r\n    \r\n    uint public start;\r\n    uint public period;  \r\n\r\n    bool public saleIsOn;\r\n\r\n    function setSaleState(bool _saleIsOn) public onlyOwner{\r\n    saleIsOn = _saleIsOn;\r\n  }\r\n    \r\n\r\n    function RobotCoinSeller () public { \r\n        robotCoin = token(0x472B07087BBfE6689CA519e4fDcDEb499C5F8b76); \r\n        salePrice = 1000000000000000;\r\n        start = 1518652800;\r\n        period = 89;\r\n        saleIsOn = false;\r\n    }\r\n        \r\n    function setSaleTime(uint newStart, uint newPeriod) public onlyOwner{\r\n      start = newStart;\r\n      period = newPeriod;\r\n    }\r\n        \r\n    function setRobotCoinContract(address newRobotCoin) public onlyOwner { \r\n        robotCoin = token(newRobotCoin);\r\n    }\r\n\r\n    function setSalePrice(uint256 newSalePrice) public onlyOwner { \r\n        salePrice = newSalePrice;\r\n    }\r\n\r\n    function() external payable { \r\n        require(now > start && now < start + period*24*60*60);\r\n        require(saleIsOn);\r\n        robotCoin.serviceTransfer(msg.sender, msg.value * 1000 / salePrice );\r\n    }\r\n\r\n    function transferEther(uint256 etherAmmount) public onlyOwner{ \r\n        require(this.balance >= etherAmmount); \r\n        owner.transfer(etherAmmount); \r\n    }\r\n\r\n}",
	"ContractName": "RobotCoinSeller",
	"CompilerVersion": "v0.4.20-nightly.2018.1.24+commit.b177352a"
}