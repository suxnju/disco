{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.24;\r\n\r\ncontract Ownable {\r\n\tevent OwnershipRenounced(address indexed previousOwner); \r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier notOwner(address _addr) {\r\n\t\trequire(_addr != owner);\r\n\t\t_;\r\n\t}\r\n\r\n\taddress public owner;\r\n\r\n\tconstructor() \r\n\t\tpublic \r\n\t{\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tfunction renounceOwnership()\r\n\t\texternal\r\n\t\tonlyOwner \r\n\t{\r\n\t\temit OwnershipRenounced(owner);\r\n\t\towner = address(0);\r\n\t}\r\n\r\n\tfunction transferOwnership(address _newOwner) \r\n\t\texternal\r\n\t\tonlyOwner\r\n\t\tnotOwner(_newOwner)\r\n\t{\r\n\t\trequire(_newOwner != address(0));\r\n\t\temit OwnershipTransferred(owner, _newOwner);\r\n\t\towner = _newOwner;\r\n\t}\r\n}\r\n\r\ncontract TimeLockedWallet is Ownable {\r\n\tuint256 public unlockTime;\r\n\r\n\tconstructor(uint256 _unlockTime) \r\n\t\tpublic\r\n\t{\r\n\t\tunlockTime = _unlockTime;\r\n\t}\r\n\r\n\tfunction()\r\n\t\tpublic\r\n\t\tpayable\r\n\t{\r\n\t}\r\n\r\n\tfunction locked()\r\n\t\tpublic\r\n\t\tview\r\n\t\treturns (bool)\r\n\t{\r\n\t\treturn now <= unlockTime;\r\n\t}\r\n\r\n\tfunction claim()\r\n\t\texternal\r\n\t\tonlyOwner\r\n\t{\r\n\t\trequire(!locked());\r\n\t\tselfdestruct(owner);\r\n\t}\t\r\n}",
	"ContractName": "TimeLockedWallet",
	"CompilerVersion": "v0.4.24+commit.e67f0147"
}