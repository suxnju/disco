{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.23;\r\n\r\ncontract CoinCj // @eachvar\r\n{\r\n    // ======== \u521d\u59cb\u5316\u4ee3\u5e01\u76f8\u5173\u903b\u8f91 ==============\r\n    // \u5730\u5740\u4fe1\u606f\r\n    address public admin_address = 0x587b13913F4c708A4F033318056E4b6BA956A6F5; // @eachvar\r\n    address public account_address = 0xf988dC2F225C64CcdeA064Dad60DD4A95776f483; // @eachvar \u521d\u59cb\u5316\u540e\u8f6c\u5165\u4ee3\u5e01\u7684\u5730\u5740\r\n    \r\n    // \u5b9a\u4e49\u8d26\u6237\u4f59\u989d\r\n    mapping(address => uint256) balances;\r\n    \r\n    // solidity \u4f1a\u81ea\u52a8\u4e3a public \u53d8\u91cf\u6dfb\u52a0\u65b9\u6cd5\uff0c\u6709\u4e86\u4e0b\u8fb9\u8fd9\u4e9b\u53d8\u91cf\uff0c\u5c31\u80fd\u83b7\u5f97\u4ee3\u5e01\u7684\u57fa\u672c\u4fe1\u606f\u4e86\r\n    string public name = \"chuangjiu\"; // @eachvar\r\n    string public symbol = \"CJ\"; // @eachvar\r\n    uint8 public decimals = 18; // @eachvar\r\n    uint256 initSupply = 100000000; // @eachvar\r\n    uint256 public totalSupply = 0; // @eachvar\r\n\r\n    // \u751f\u6210\u4ee3\u5e01\uff0c\u5e76\u8f6c\u5165\u5230 account_address \u5730\u5740\r\n    constructor() \r\n    payable \r\n    public\r\n    {\r\n        totalSupply = mul(initSupply, 10**uint256(decimals));\r\n        balances[account_address] = totalSupply;\r\n\r\n        \r\n    }\r\n\r\n    function balanceOf( address _addr ) public view returns ( uint )\r\n    {\r\n        return balances[_addr];\r\n    }\r\n\r\n    // ========== \u8f6c\u8d26\u76f8\u5173\u903b\u8f91 ====================\r\n    event Transfer(\r\n        address indexed from, \r\n        address indexed to, \r\n        uint256 value\r\n    ); \r\n\r\n    function transfer(\r\n        address _to, \r\n        uint256 _value\r\n    ) \r\n    public \r\n    returns (bool) \r\n    {\r\n        require(_to != address(0));\r\n        require(_value <= balances[msg.sender]);\r\n\r\n        balances[msg.sender] = sub(balances[msg.sender],_value);\r\n\r\n            \r\n\r\n        balances[_to] = add(balances[_to], _value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    // ========= \u6388\u6743\u8f6c\u8d26\u76f8\u5173\u903b\u8f91 =============\r\n    \r\n    mapping (address => mapping (address => uint256)) internal allowed;\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool)\r\n    {\r\n        require(_to != address(0));\r\n        require(_value <= balances[_from]);\r\n        require(_value <= allowed[_from][msg.sender]);\r\n\r\n        balances[_from] = sub(balances[_from], _value);\r\n        \r\n        \r\n        balances[_to] = add(balances[_to], _value);\r\n        allowed[_from][msg.sender] = sub(allowed[_from][msg.sender], _value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(\r\n        address _spender, \r\n        uint256 _value\r\n    ) \r\n    public \r\n    returns (bool) \r\n    {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(\r\n        address _owner,\r\n        address _spender\r\n    )\r\n    public\r\n    view\r\n    returns (uint256)\r\n    {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function increaseApproval(\r\n        address _spender,\r\n        uint256 _addedValue\r\n    )\r\n    public\r\n    returns (bool)\r\n    {\r\n        allowed[msg.sender][_spender] = add(allowed[msg.sender][_spender], _addedValue);\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseApproval(\r\n        address _spender,\r\n        uint256 _subtractedValue\r\n    )\r\n    public\r\n    returns (bool)\r\n    {\r\n        uint256 oldValue = allowed[msg.sender][_spender];\r\n\r\n        if (_subtractedValue > oldValue) {\r\n            allowed[msg.sender][_spender] = 0;\r\n        } \r\n        else \r\n        {\r\n            allowed[msg.sender][_spender] = sub(oldValue, _subtractedValue);\r\n        }\r\n        \r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    \r\n    // ========= \u76f4\u6295\u76f8\u5173\u903b\u8f91 ===============\r\n    bool public direct_drop_switch = true; // \u662f\u5426\u5f00\u542f\u76f4\u6295 @eachvar\r\n    uint256 public direct_drop_rate = 1000; // \u5151\u6362\u6bd4\u4f8b\uff0c\u6ce8\u610f\u8fd9\u91cc\u662feth\u4e3a\u5355\u4f4d\uff0c\u9700\u8981\u6362\u7b97\u5230wei @eachvar\r\n    address public direct_drop_address = 0x587b13913F4c708A4F033318056E4b6BA956A6F5; // \u7528\u4e8e\u53d1\u653e\u76f4\u6295\u4ee3\u5e01\u7684\u8d26\u6237 @eachvar\r\n    address public direct_drop_withdraw_address = 0x587b13913F4c708A4F033318056E4b6BA956A6F5; // \u76f4\u6295\u63d0\u73b0\u5730\u5740 @eachvar\r\n\r\n    bool public direct_drop_range = false; // \u662f\u5426\u542f\u7528\u76f4\u6295\u6709\u6548\u671f @eachvar\r\n    uint256 public direct_drop_range_start = 1549219320; // \u6709\u6548\u671f\u5f00\u59cb @eachvar\r\n    uint256 public direct_drop_range_end = 1580755320; // \u6709\u6548\u671f\u7ed3\u675f @eachvar\r\n\r\n    event TokenPurchase\r\n    (\r\n        address indexed purchaser,\r\n        address indexed beneficiary,\r\n        uint256 value,\r\n        uint256 amount\r\n    );\r\n\r\n    // \u652f\u6301\u4e3a\u522b\u4eba\u8d2d\u4e70\r\n    function buyTokens( address _beneficiary ) \r\n    public \r\n    payable // \u63a5\u6536\u652f\u4ed8\r\n    returns (bool)\r\n    {\r\n        require(direct_drop_switch);\r\n        require(_beneficiary != address(0));\r\n\r\n        // \u68c0\u67e5\u6709\u6548\u671f\u5f00\u5173\r\n        if( direct_drop_range )\r\n        {\r\n            // \u5f53\u524d\u65f6\u95f4\u5fc5\u987b\u5728\u6709\u6548\u671f\u5185\r\n            // solium-disable-next-line security/no-block-members\r\n            require(block.timestamp >= direct_drop_range_start && block.timestamp <= direct_drop_range_end);\r\n\r\n        }\r\n        \r\n        // \u8ba1\u7b97\u6839\u636e\u5151\u6362\u6bd4\u4f8b\uff0c\u5e94\u8be5\u8f6c\u79fb\u7684\u4ee3\u5e01\u6570\u91cf\r\n        // uint256 tokenAmount = mul(div(msg.value, 10**18), direct_drop_rate);\r\n        \r\n        uint256 tokenAmount = div(mul(msg.value,direct_drop_rate ), 10**18); //\u6b64\u5904\u7528 18\u6b21\u65b9\uff0c\u8fd9\u662f wei to  ether \u7684\u6362\u7b97\uff0c\u4e0d\u662f\u4ee3\u5e01\u7684\uff0c\u6240\u4ee5\u4e0d\u7528 decimals,\u5148\u4e58\u540e\u9664\uff0c\u5426\u5219\u53ef\u80fd\u4e3a\u96f6\r\n        uint256 decimalsAmount = mul( 10**uint256(decimals), tokenAmount);\r\n        \r\n        // \u9996\u5148\u68c0\u67e5\u4ee3\u5e01\u53d1\u653e\u8d26\u6237\u4f59\u989d\r\n        require\r\n        (\r\n            balances[direct_drop_address] >= decimalsAmount\r\n        );\r\n\r\n        assert\r\n        (\r\n            decimalsAmount > 0\r\n        );\r\n\r\n        \r\n        // \u7136\u540e\u5f00\u59cb\u8f6c\u8d26\r\n        uint256 all = add(balances[direct_drop_address], balances[_beneficiary]);\r\n\r\n        balances[direct_drop_address] = sub(balances[direct_drop_address], decimalsAmount);\r\n\r\n            \r\n\r\n        balances[_beneficiary] = add(balances[_beneficiary], decimalsAmount);\r\n        \r\n        assert\r\n        (\r\n            all == add(balances[direct_drop_address], balances[_beneficiary])\r\n        );\r\n\r\n        // \u53d1\u9001\u4e8b\u4ef6\r\n        emit TokenPurchase\r\n        (\r\n            msg.sender,\r\n            _beneficiary,\r\n            msg.value,\r\n            tokenAmount\r\n        );\r\n\r\n        return true;\r\n\r\n    } \r\n    \r\n\r\n     \r\n    // ========== \u4ee3\u7801\u9500\u6bc1\u76f8\u5173\u903b\u8f91 ================\r\n    event Burn(address indexed burner, uint256 value);\r\n\r\n    function burn(uint256 _value) public \r\n    {\r\n        _burn(msg.sender, _value);\r\n    }\r\n\r\n    function _burn(address _who, uint256 _value) internal \r\n    {\r\n        require(_value <= balances[_who]);\r\n        \r\n        balances[_who] = sub(balances[_who], _value);\r\n\r\n            \r\n\r\n        totalSupply = sub(totalSupply, _value);\r\n        emit Burn(_who, _value);\r\n        emit Transfer(_who, address(0), _value);\r\n    }\r\n    \r\n    \r\n    // ============== admin \u76f8\u5173\u51fd\u6570 ==================\r\n    modifier admin_only()\r\n    {\r\n        require(msg.sender==admin_address);\r\n        _;\r\n    }\r\n\r\n    function setAdmin( address new_admin_address ) \r\n    public \r\n    admin_only \r\n    returns (bool)\r\n    {\r\n        require(new_admin_address != address(0));\r\n        admin_address = new_admin_address;\r\n        return true;\r\n    }\r\n\r\n    \r\n    // \u76f4\u6295\u7ba1\u7406\r\n    function setDirectDrop( bool status )\r\n    public\r\n    admin_only\r\n    returns (bool)\r\n    {\r\n        direct_drop_switch = status;\r\n        return true;\r\n    }\r\n    \r\n    // ETH\u63d0\u73b0\r\n    function withDraw()\r\n    public\r\n    {\r\n        // \u7ba1\u7406\u5458\u548c\u4e4b\u524d\u8bbe\u5b9a\u7684\u63d0\u73b0\u8d26\u53f7\u53ef\u4ee5\u53d1\u8d77\u63d0\u73b0\uff0c\u4f46\u94b1\u4e00\u5b9a\u662f\u8fdb\u63d0\u73b0\u8d26\u53f7\r\n        require(msg.sender == admin_address || msg.sender == direct_drop_withdraw_address);\r\n        require(address(this).balance > 0);\r\n        // \u5168\u90e8\u8f6c\u5230\u76f4\u6295\u63d0\u73b0\u4e2d\r\n        direct_drop_withdraw_address.transfer(address(this).balance);\r\n    }\r\n        // ======================================\r\n    /// \u9ed8\u8ba4\u51fd\u6570\r\n    function () external payable\r\n    {\r\n                \r\n                buyTokens(msg.sender);\r\n        \r\n        \r\n           \r\n    }\r\n\r\n    // ========== \u516c\u7528\u51fd\u6570 ===============\r\n    // \u4e3b\u8981\u5c31\u662f safemath\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) \r\n    {\r\n        if (a == 0) \r\n        {\r\n            return 0;\r\n        }\r\n\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) \r\n    {\r\n        return a / b;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) \r\n    {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) \r\n    {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n\r\n}",
	"ContractName": "CoinCj",
	"CompilerVersion": "v0.4.24+commit.e67f0147"
}