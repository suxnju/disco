{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.8;\r\n\r\ncontract token { function transferFrom(address sender, address receiver, uint amount){  } }\r\n\r\ncontract Crowdsale {\r\n    address public beneficiary;\r\n    address public tokenAdmin;\r\n    uint public fundingGoal; uint public amountRaised; uint public deadline; uint public price;\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n    bool fundingGoalReached = false;\r\n    event GoalReached(address beneficiary, uint amountRaised);\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n    bool public crowdsaleClosed = false;\r\n\r\n    /* data structure to hold information about campaign contributors */\r\n\r\n    /*  at initialization, setup the owner */\r\n    function Crowdsale() {\r\n        beneficiary = 0xDbe120fD820a0A4cc9E715f0cbD47d94f5c23638;\r\n        // Token admin address with total supply. Admin must approve transctions!\r\n        tokenAdmin = 0x934b1498F515E74C6Ec5524A53086e4A02a9F2b8;\r\n        // Finding goal in ether\r\n        fundingGoal = 1 * 1 ether;\r\n        // Length of sale in weeks\r\n        deadline = now + 5 * 1 weeks;\r\n        // Price of 1 token in ethers / decimals\r\n        price = 0.01 / 100 * 1 ether;\r\n        // Token used as reward address\r\n        tokenReward = token(0xb16dab600fc05702132602f4922c0e89e2985b9a);\r\n    }\r\n\r\n    /* The function without name is the default function that is called whenever anyone sends funds to a contract */\r\n    function () payable {\r\n        if (crowdsaleClosed) revert();\r\n        uint amount = msg.value;\r\n        balanceOf[msg.sender] = amount;\r\n        amountRaised += amount;\r\n        tokenReward.transferFrom(tokenAdmin, msg.sender, amount / price);\r\n        FundTransfer(msg.sender, amount, true);\r\n    }\r\n\r\n    modifier afterDeadline() { if (now >= deadline) _; }\r\n\r\n    /* checks if the goal or time limit has been reached and ends the campaign */\r\n    function checkGoalReached() afterDeadline {\r\n        if (amountRaised >= fundingGoal){\r\n            fundingGoalReached = true;\r\n            GoalReached(beneficiary, amountRaised);\r\n        }\r\n        crowdsaleClosed = true;\r\n    }\r\n\r\n    function safeWithdrawal() afterDeadline {\r\n        if (beneficiary == msg.sender) {\r\n            if (beneficiary.send(amountRaised)) {\r\n                FundTransfer(beneficiary, amountRaised, false);\r\n            }\r\n        }\r\n    }\r\n}",
	"ContractName": "Crowdsale",
	"CompilerVersion": "v0.4.14+commit.c2215d46"
}