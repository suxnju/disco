{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.5.0;\r\n//import 'openzeppelin-solidity/contracts/token/ERC20/ERC20.sol';\r\n\r\n\r\ncontract zeroXWrapper {\r\n    \r\n    event forwarderCall (bool success);\r\n\r\n    function zeroXSwap (address to, address forwarder, bytes memory args) public payable{\r\n    \t(bool success, bytes memory returnData) = forwarder.call.value(msg.value)(args);\r\n    \temit forwarderCall(success);\r\n    }\r\n\r\n    function () external payable {\r\n        \r\n    }\r\n\r\n}",
	"ContractName": "zeroXWrapper",
	"CompilerVersion": "v0.5.0+commit.1d4f565a"
}