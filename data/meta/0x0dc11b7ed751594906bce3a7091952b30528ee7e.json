{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.17;\r\n\r\ncontract DickMeasurementContest {\r\n\r\n    uint lastBlock;\r\n    address owner;\r\n\r\n    modifier onlyowner {\r\n        require (msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function DickMeasurementContest() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function () public payable {}\r\n\r\n    function mineIsBigger() public payable {\r\n        if (msg.value > this.balance) {\r\n            owner = msg.sender;\r\n            lastBlock = now;\r\n        }\r\n    }\r\n\r\n    function withdraw() public onlyowner {\r\n        // if there are no contestants within 3 days\r\n        // the winner is allowed to take the money\r\n        require(now > lastBlock + 3 days);\r\n        msg.sender.transfer(this.balance);\r\n    }\r\n\r\n    function kill() public onlyowner {\r\n        if(this.balance == 0) {  \r\n            selfdestruct(msg.sender);\r\n        }\r\n    }\r\n}",
	"ContractName": "DickMeasurementContest",
	"CompilerVersion": "v0.4.20+commit.3155dd80"
}