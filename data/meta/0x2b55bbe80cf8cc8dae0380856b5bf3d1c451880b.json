{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.18;\r\n\r\ncontract EternalWealth {\r\n    \r\n    uint public doomsday;\r\n    address owner;\r\n    address public savior;\r\n    uint public blessings = 0;\r\n    uint public tithes = 0;\r\n    uint public lifePoints = 0;\r\n    \r\n    function EternalWealth() public payable {\r\n        owner = msg.sender;\r\n        doomsday = now + 3 hours;\r\n        savior = msg.sender;\r\n        blessings += msg.value;\r\n    }\r\n    \r\n    function ExtendLife() public payable {\r\n\r\n        require(msg.value >= 0.001 ether);\r\n\r\n        if (now > doomsday) {\r\n            revert();\r\n        }\r\n    \r\n        blessings += msg.value * 8 / 10;\r\n        tithes += msg.value * 2 / 10;\r\n        savior = msg.sender;\r\n        doomsday = now + 30 minutes;\r\n        lifePoints += 1;\r\n    }\r\n    \r\n\r\n    function ClaimBlessings() public {\r\n        require(msg.sender == savior);\r\n        require(now > doomsday);\r\n        uint pendingBlessings = blessings;\r\n        blessings = 0;\r\n        savior.transfer(pendingBlessings);\r\n    }\r\n    \r\n    function WithdrawTithes() public {\r\n        uint pendingTithes = tithes;\r\n        tithes = 0;\r\n        owner.transfer(pendingTithes);\r\n    }\r\n    \r\n}",
	"ContractName": "EternalWealth",
	"CompilerVersion": "v0.4.18+commit.9cf6e910"
}