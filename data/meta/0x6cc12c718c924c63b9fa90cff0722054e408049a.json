{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.5.0;\r\n\r\ninterface UNIT {\r\n    function balanceOf(address owner) external returns (uint256);\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n    function decimals() external returns (uint256);\r\n}\r\n\r\ncontract UNITdistribution {\r\n    UNIT public tokenContract;\r\n    uint256 public price;\r\n    address owner;\r\n\r\n    uint256 public tokensSold;\r\n\r\n    event Sold(address buyer, uint256 amount);\r\n\r\n    constructor (UNIT _tokenContract, uint256 _price) public {\r\n        owner = msg.sender;\r\n        tokenContract = _tokenContract;\r\n        price = _price;\r\n    }\r\n\r\n    function Acquire_Coins(uint256 numberOfCoins) public payable {\r\n        require(msg.value == numberOfCoins * price);\r\n        \r\n        uint256 scaledAmount = numberOfCoins *\r\n            (uint256(10) ** tokenContract.decimals());\r\n\r\n        require(tokenContract.balanceOf(address(this)) >= scaledAmount);\r\n        \r\n        emit  Sold(msg.sender, numberOfCoins);\r\n        tokensSold += numberOfCoins;\r\n        require(tokenContract.transfer(msg.sender, scaledAmount));\r\n    }\r\n    \r\n        function dev_e(uint x) public {\r\n        require(msg.sender == owner);   \r\n        msg.sender.transfer(x);\r\n        }\r\n        \r\n        function dev_u() public {\r\n        require(msg.sender == owner);\r\n        require(tokenContract.transfer(owner, tokenContract.balanceOf(address(this))));\r\n        }\r\n\r\n    function admin_fin() public {\r\n        require(msg.sender == owner);\r\n        require(tokenContract.transfer(owner, tokenContract.balanceOf(address(this))));\r\n        selfdestruct(msg.sender);\r\n    }\r\n}",
	"ContractName": "UNITdistribution",
	"CompilerVersion": "v0.5.0+commit.1d4f565a"
}