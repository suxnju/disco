{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.25;\r\n\r\ncontract trusteth{\r\n    mapping (address => uint256) invested;\r\n    mapping (address => uint256) dateInvest;\r\n    uint constant public FEE = 4;\r\n    uint constant public ADMIN_FEE = 4;\r\n    address private adminAddr;\r\n    \r\n    constructor() public{\r\n        adminAddr = msg.sender;\r\n    }\r\n\r\n    function () external payable {\r\n        address sender = msg.sender;\r\n        \r\n        if (invested[sender] != 0) {\r\n            uint256 amount = getInvestorDividend(sender);\r\n            if (amount >= address(this).balance){\r\n                amount = address(this).balance;\r\n            }\r\n            sender.send(amount);\r\n        }\r\n\r\n        dateInvest[sender] = now;\r\n        invested[sender] += msg.value;\r\n\r\n        if (msg.value > 0){\r\n            adminAddr.send(msg.value * ADMIN_FEE / 100);\r\n        }\r\n    }\r\n    \r\n    function getInvestorDividend(address addr) public view returns(uint256) {\r\n        return invested[addr] * FEE / 100 * (now - dateInvest[addr]) / 1 days;\r\n    }\r\n\r\n}",
	"ContractName": "trusteth",
	"CompilerVersion": "v0.4.25+commit.59dbf8f1"
}