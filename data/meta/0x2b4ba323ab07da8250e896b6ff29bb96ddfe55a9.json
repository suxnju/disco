{
	"Language": "Vyper",
	"Source": "contract ERC20():\r\n    def balanceOf(_owner: address) -> uint256: constant\r\n    def decimals() -> uint256: constant\r\n\r\nMIN_PRICE: constant(uint256) = 1000000 # 10**6\r\nMAX_PRICE: constant(uint256) = 100000000000000000000000000 # 10**(8 + 18)\r\nPRICE_MULTIPLIER: constant(uint256) = 100000000 # 10**8\r\n\r\nPriceUpdated: event({token_address: indexed(address), new_price: indexed(uint256)})\r\nTokenAddressUpdated: event({token_address: indexed(address), token_index: indexed(int128)})\r\n\r\nname: public(string[16])\r\nowner: public(address)\r\nsupported_tokens: public(address[5])\r\nnormalized_token_prices: public(map(address, uint256))\r\n\r\n@public\r\ndef __init__():\r\n    self.owner = msg.sender\r\n    self.name = 'PriceOracle'\r\n\r\n@public\r\n@constant\r\ndef poolSize(contract_address: address) -> uint256:\r\n    token_address: address\r\n    total: uint256 = 0\r\n\r\n    for ind in range(5):\r\n        token_address = self.supported_tokens[ind]\r\n        if token_address != ZERO_ADDRESS:\r\n            contract_balance: uint256 = ERC20(token_address).balanceOf(contract_address)\r\n            total += contract_balance * self.normalized_token_prices[token_address] / PRICE_MULTIPLIER\r\n\r\n    return total\r\n\r\n@public\r\ndef updateTokenAddress(token_address: address, ind: int128) -> bool:\r\n    assert msg.sender == self.owner\r\n\r\n    self.supported_tokens[ind] = token_address\r\n    log.TokenAddressUpdated(token_address, ind)\r\n\r\n    return True\r\n\r\n@public\r\n# Token price is as uint256:\r\n# normalized_usd_price = usd_price * PRICE_MULTIPLIER * 10**(stablecoinswap.decimals - token.decimals)\r\n# Example: USD price for USDC = $0.97734655, normalized_usd_price = 97734655000000000000\r\ndef updatePrice(token_address: address, normalized_usd_price: uint256) -> bool:\r\n    assert msg.sender == self.owner\r\n    assert MIN_PRICE <= normalized_usd_price and normalized_usd_price <= MAX_PRICE\r\n\r\n    self.normalized_token_prices[token_address] = normalized_usd_price\r\n    log.PriceUpdated(token_address, normalized_usd_price)\r\n\r\n    return True",
	"ContractName": "Vyper_contract",
	"CompilerVersion": "vyper:0.1.0b9"
}