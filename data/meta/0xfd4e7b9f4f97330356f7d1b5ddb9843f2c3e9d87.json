{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.24;\r\n\r\ncontract TCOMDividend {\r\n\r\n    string public name = \"TCOM Dividend\";\r\n    string public symbol = \"TCOMD\";\r\n\r\n    // This code assumes decimals is zero\r\n    uint8 public decimals = 0;\r\n\r\n    uint256 public totalSupply = 10000 * (uint256(10) ** decimals);\r\n\r\n    mapping(address => uint256) public balanceOf;\r\n\r\n    constructor() public {\r\n        // Initially assign all tokens to the contract's creator.\r\n        balanceOf[msg.sender] = totalSupply;\r\n        emit Transfer(address(0), msg.sender, totalSupply);\r\n    }\r\n\r\n    mapping(address => uint256) public dividendBalanceOf;\r\n\r\n    uint256 public dividendPerToken;\r\n\r\n    mapping(address => uint256) public dividendCreditedTo;\r\n\r\n    function update(address account) internal {\r\n        uint256 owed =\r\n        dividendPerToken - dividendCreditedTo[account];\r\n        dividendBalanceOf[account] += balanceOf[account] * owed;\r\n        dividendCreditedTo[account] = dividendPerToken;\r\n    }\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    function () public payable {\r\n        dividendPerToken += msg.value / totalSupply;  // ignoring remainder\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= value);\r\n\r\n        update(msg.sender);  // <-- added to simple ERC20 contract\r\n        update(to);          // <-- added to simple ERC20 contract\r\n\r\n        balanceOf[msg.sender] -= value;\r\n        balanceOf[to] += value;\r\n\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value)\r\n    public\r\n    returns (bool success)\r\n    {\r\n        require(value <= balanceOf[from]);\r\n        require(value <= allowance[from][msg.sender]);\r\n\r\n        update(from);        // <-- added to simple ERC20 contract\r\n        update(to);          // <-- added to simple ERC20 contract\r\n\r\n        balanceOf[from] -= value;\r\n        balanceOf[to] += value;\r\n        allowance[from][msg.sender] -= value;\r\n        emit Transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function withdraw() public {\r\n        update(msg.sender);\r\n        uint256 amount = dividendBalanceOf[msg.sender];\r\n        dividendBalanceOf[msg.sender] = 0;\r\n        msg.sender.transfer(amount);\r\n    }\r\n\r\n    function approve(address spender, uint256 value)\r\n    public\r\n    returns (bool success)\r\n    {\r\n        allowance[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n}",
	"ContractName": "TCOMDividend",
	"CompilerVersion": "v0.4.24+commit.e67f0147"
}