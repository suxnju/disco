{
	"Language": "Solidity",
	"Source": "pragma solidity >=0.4.22 <0.6.0;\r\n\r\ncontract BWSERC20\r\n{\r\n    string public standard = 'https://leeks.cc';\r\n    string public name=\"Bretton Woods system\"; //\u4ee3\u5e01\u540d\u79f0\r\n    string public symbol=\"BWS\"; //\u4ee3\u5e01\u7b26\u53f7\r\n    uint8 public decimals = 18;  //\u4ee3\u5e01\u5355\u4f4d\uff0c\u5c55\u793a\u7684\u5c0f\u6570\u70b9\u540e\u9762\u591a\u5c11\u4e2a0,\u548c\u4ee5\u592a\u5e01\u4e00\u6837\u540e\u9762\u662f\u662f18\u4e2a0\r\n    uint256 public totalSupply=100000000 ether; //\u4ee3\u5e01\u603b\u91cf\r\n\r\n    uint256 public st_bws_pool;//\u5e01\u4ed3\r\n    uint256 public st_ready_for_listing;//\u51c6\u5907\u4e0a\u5e02\u3000\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    mapping (address => uint32) public CredibleContract;//\u53ef\u4fe1\u4efb\u7684\u667a\u80fd\u5408\u7ea6\uff0c\u4e3b\u8981\u662f\u540e\u671f\u7684\u6e38\u620f\u4e4b\u7c7b\u7684\r\n    /* \u5728\u533a\u5757\u94fe\u4e0a\u521b\u5efa\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7528\u4ee5\u901a\u77e5\u5ba2\u6237\u7aef*/\r\n    event Transfer(address indexed from, address indexed to, uint256 value);  //\u8f6c\u5e10\u901a\u77e5\u4e8b\u4ef6\r\n    event Burn(address indexed from, uint256 value);  //\u51cf\u53bb\u7528\u6237\u4f59\u989d\u4e8b\u4ef6\r\n    \r\n    function _transfer(address _from, address _to, uint256 _value) internal;\r\n    \r\n    function transfer(address _to, uint256 _value) public ;\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    \r\n    function approve(address _spender, uint256 _value) public returns (bool success) ;\r\n    \r\n    //\u7ba1\u7406\u5458\u53ef\u4ee5\u89e3\u95011400\u4e07\u5e01\u5230\u6307\u5b9a\u5730\u5740\r\n    function unlock_listing(address _to) public;\r\n    //\u7ba1\u7406\u5458\u6307\u5b9a\u53ef\u4fe1\u7684\u5408\u7ea6\u5730\u5740\uff0c\u8fd9\u4e9b\u5730\u5740\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u654f\u611f\u64cd\u4f5c\uff0c\u6bd4\u5982\u4ece\u5e01\u4ed3\u53d6\u8d70\u80a1\u5e01\u53d1\u653e\u7ed9\u6307\u5b9a\u73a9\u5bb6\r\n    function set_CredibleContract(address tract_address) public;\r\n    \r\n    //\u4ece\u5e01\u4ed3\u53d6\u51fa\u6307\u5b9a\u91cf\u7684bws\u7ed9\u6307\u5b9a\u73a9\u5bb6\r\n    function TransferFromPool(address _to ,uint256 _value)public;\r\n}\r\n\r\ncontract BWS_ICO\r\n{\r\n    //address ad=address();\r\n    BWSERC20 public st_bws_erc = BWSERC20(0x95eBEBf79Bf59b6DeE7e7709D0F67Bae81DCA09C);//\u521d\u59cb\u5316\u8be5\u5408\u7ea6\r\n    uint160 private st_random;\r\n    uint32 private st_rnd_index=0;\r\n    event BackBWSNumber(address add_r,uint32 BWS,uint32 Bei);\r\n    event BSWtoETH(uint256 eth);\r\n    address payable st_admin;\r\n    //\r\n    constructor()public\r\n    {\r\n        st_admin=msg.sender;\r\n        st_random=uint160(msg.sender);\r\n    }\r\n    //\u968f\u673a\u6570\r\n    function GetRandom(uint32 num)private returns(uint32)\r\n    {\r\n        require(num>0);\r\n        \r\n        uint32 [50] memory prime=[uint32(1),2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227];\r\n        uint160 random=st_random/2+uint160(msg.sender);\r\n        random/=prime[st_rnd_index];\r\n        st_random=uint160(ripemd160(abi.encode(random)));\r\n        uint32 ret=uint32(st_random % num);\r\n        if(++st_rnd_index==50)\r\n        {\r\n            st_rnd_index=0;\r\n        }\r\n        return ret;\r\n    }\r\n    //\u5e78\u8fd0\u5927\u8f6c\u76d8\r\n    function wheel_of_fortune()public payable\r\n    {\r\n        require(msg.value>=0.02 ether,\"\u6bcf\u6b21\u6e38\u620f\u5fc5\u987b0.02ETH\");\r\n        uint32 rnd=GetRandom(1000);//0~1000\u7684\u968f\u673a\u6570\r\n        uint32 multiple=0;\r\n        if(rnd<=50)multiple=5;\r\n        else if(rnd<=150)multiple=8;\r\n        else if(rnd<=650)multiple=10;\r\n        else if(rnd<=844)multiple=15;\r\n        else if(rnd<=944)multiple=20;\r\n        else if(rnd<=994)multiple=30;\r\n        else if(rnd<=999)multiple=50;\r\n        else if(rnd==1000)multiple=100;\r\n        \r\n        uint256 value=msg.value*10000;\r\n        require(multiple>=5 && multiple <=100,\"\u968f\u673a\u6570\u4e0d\u6b63\u5e38\");\r\n        value=value*multiple/10;\r\n        \r\n        uint256 this_bws=st_bws_erc.balanceOf(address(this));\r\n        assert(this_bws>=value);\r\n        \r\n        //\u63d0\u53d6\u4e00\u534a\u8d44\u91d1\r\n        st_admin.transfer(msg.value/2);\r\n        \r\n        st_bws_erc.transfer(msg.sender,value);\r\n        \r\n        emit BackBWSNumber(msg.sender,uint32(value/10000000000000000),multiple);\r\n    }\r\n    //\u5151\u5956\r\n    function GetETHformBWS(uint256 bws)public\r\n    {\r\n        require(bws>0,\"bws\u4e3a0\");\r\n        uint256 my_bws=st_bws_erc.balanceOf(msg.sender);\r\n        require(bws<=my_bws,\"BWS\u6570\u91cf\u4e0d\u8db3\");\r\n        address add=address(this);\r\n        uint256 pool_eth = add.balance;\r\n        require(pool_eth>=bws/20000,\"\u5151\u5e01\u6c60\u8d44\u91d1\u4e0d\u8db3\");\r\n        \r\n        uint256 allowance=st_bws_erc.allowance(msg.sender,add);\r\n        require(allowance>=bws,\"\u672c\u5408\u7ea6\u6743\u9650\u4e0d\u8db3\uff0c\u8bf7\u7ed9\u672c\u5408\u7ea6\u6388\u6743\");\r\n        \r\n        st_bws_erc.transferFrom(msg.sender,add,bws);\r\n        \r\n        msg.sender.transfer(bws/20000);\r\n        \r\n        emit BSWtoETH(bws/20000);\r\n    }\r\n    //\u9500\u6bc1\u5408\u7ea6\r\n    function DeleteContract()public\r\n    {\r\n        require(msg.sender==st_admin);\r\n        st_bws_erc.transfer(st_admin,st_bws_erc.balanceOf(address(this)));\r\n          \r\n        selfdestruct(st_admin);\r\n    }\r\n}",
	"ContractName": "BWS_ICO",
	"CompilerVersion": "v0.5.1+commit.c8a2cb62"
}