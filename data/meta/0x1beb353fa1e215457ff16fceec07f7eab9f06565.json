{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.25;\r\n\r\ncontract EscrowWallet {\r\n\r\n  event Requested(address indexed _receiver, uint256 _amount, uint256 balance);\r\n  event Approved(address indexed _receiver, uint256 _amount, uint256 balance);\r\n  event Declined(address indexed _whom, address indexed _receiver);\r\n  event Received(address indexed _payer, uint256 _amount);\r\n\r\n  mapping (address => uint256) private requested;\r\n\r\n  address private escrow;\r\n  address private owner;\r\n\r\n  constructor(address _escrow) public payable {\r\n      escrow = _escrow;\r\n      owner  = msg.sender;\r\n  }\r\n\r\n  function () external payable {\r\n    emit Received(msg.sender, msg.value);\r\n  }\r\n\r\n  function Request(address _receiver, uint256 _amount) public {\r\n    require(msg.sender == owner);\r\n    require(_receiver != address(0) && _receiver != address(this));\r\n    require(_amount > 0);\r\n    require(requested[_receiver] == 0);\r\n\r\n    requested[_receiver] = _amount;\r\n    emit Requested(_receiver, _amount, address(this).balance);\r\n  }\r\n\r\n  function Approve(address _receiver, uint256 _amount) public {\r\n    require(msg.sender == escrow);\r\n    require(_amount > 0);\r\n    require(requested[_receiver] == _amount);\r\n\r\n    requested[_receiver] = 0;\r\n    _receiver.transfer(_amount);\r\n    emit Approved(_receiver, _amount, address(this).balance);\r\n  }\r\n\r\n  function Decline(address _receiver) public {\r\n    require(msg.sender == escrow || msg.sender == owner);\r\n\r\n    requested[_receiver] = 0;\r\n    emit Declined(msg.sender, _receiver);\r\n  }\r\n}",
	"ContractName": "EscrowWallet",
	"CompilerVersion": "v0.4.25+commit.59dbf8f1"
}