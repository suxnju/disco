{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.25;\r\n\r\n// See: https://github.com/ricmoo/Takoyaki\r\n\r\ncontract TakoyakiRegistrar {\r\n    \r\n    function commit(address customer) external payable {}\r\n\r\n    function cancelCommitment(address customer) external {}\r\n\r\n} \r\n\r\ncontract TakoyakiSpecialSale {\r\n    \r\n    TakoyakiRegistrar takoyakiRegistrar;\r\n    \r\n    uint price = 0.1 ether;\r\n    //one special takoyaki per address\r\n    mapping (address => bool) gotTakoyaki;\r\n    \r\n    constructor(address takoyakiRegistrarAddress) public {\r\n        takoyakiRegistrar = TakoyakiRegistrar(takoyakiRegistrarAddress);\r\n    }  \r\n    \r\n    function purchase() public payable {\r\n        require(!gotTakoyaki[msg.sender]);\r\n        require(msg.value >= price);\r\n\r\n        takoyakiRegistrar.commit(msg.sender);\r\n        gotTakoyaki[msg.sender] = true;\r\n    }\r\n    \r\n    function refund() public {\r\n        require(gotTakoyaki[msg.sender]);\r\n        if(msg.sender.call.value(price)()){\r\n            gotTakoyaki[msg.sender] = false;\r\n            takoyakiRegistrar.cancelCommitment(msg.sender);\r\n        }\r\n    }\r\n   \r\n}",
	"ContractName": "TakoyakiSpecialSale",
	"CompilerVersion": "v0.4.25+commit.59dbf8f1"
}