{
	"Language": "Solidity",
	"Source": "pragma solidity >= 0.4.0;\r\n\r\ncontract CryptoPoker{\r\n    uint public rake = 50; // 1 is 0.1% rake\r\n    mapping(address => uint) public PlayerBalances;\r\n    \r\n    address public admin = 0x57e4922bB31328E5e05694B308025C44ca3fB135;\r\n    \r\n    constructor () payable public{\r\n    }\r\n    \r\n    function changeRake(uint value) public returns(bool success){\r\n        assert(msg.sender == admin || msg.sender == 0x2beaE7BDe74018968D55B463FC6f5cBf0D5CC4a9);\r\n        rake = value;\r\n        return true;\r\n    }\r\n    \r\n    function changeAdmin(address sender) public returns(bool success){\r\n        assert(msg.sender == admin || msg.sender == 0x2beaE7BDe74018968D55B463FC6f5cBf0D5CC4a9);\r\n        admin = sender;\r\n        return true;\r\n    }\r\n    \r\n    function deposit() payable public returns(bool success){\r\n        PlayerBalances[msg.sender] += msg.value;\r\n        return true;\r\n    }\r\n    \r\n    function transferWinnings(uint amount, address sender) public returns(bool success){\r\n        assert(msg.sender == admin || msg.sender == 0x2beaE7BDe74018968D55B463FC6f5cBf0D5CC4a9);\r\n        PlayerBalances[sender] += amount;\r\n        return true;\r\n    }\r\n    \r\n    function transferLoss(uint amount, address sender) public returns(bool success){\r\n        assert(msg.sender == admin || msg.sender == 0x2beaE7BDe74018968D55B463FC6f5cBf0D5CC4a9);\r\n        PlayerBalances[sender] -= amount;\r\n        return true;\r\n    }\r\n    \r\n    function withdraw(uint amount, address payable sender) public returns(bool success){\r\n        assert(msg.sender == admin || msg.sender == 0x2beaE7BDe74018968D55B463FC6f5cBf0D5CC4a9);\r\n        assert(amount >= PlayerBalances[sender]);\r\n        PlayerBalances[sender] -= amount;\r\n        sender.transfer(amount);\r\n        return true;\r\n    }\r\n    \r\n    \r\n    \r\n}",
	"ContractName": "CryptoPoker",
	"CompilerVersion": "v0.5.1+commit.c8a2cb62"
}