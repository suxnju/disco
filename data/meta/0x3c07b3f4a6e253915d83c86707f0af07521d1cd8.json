{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.14;\r\n\r\n contract ERC20Interface {\r\n     function totalSupply() constant returns (uint256 totalSupply);\r\n     function balanceOf(address _owner) constant returns (uint256 balance);\r\n     function transfer(address _to, uint256 _value) returns (bool success);\r\n     function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n     function approve(address _spender, uint256 _value) returns (bool success);\r\n     function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n     event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n     event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n }\r\n  \r\n contract APIHeaven is ERC20Interface {\r\n     string public constant symbol = \"\u2601\";\r\n     string public constant name = \"API Heaven clouds\";\r\n     uint8 public constant decimals = 0;\r\n     uint256 _totalSupply = 1000000000000000; \r\n     \r\n     uint256 public cloudsPerEth = 300000;\r\n     \r\n     address public owner;\r\n\r\n     bool public selling = false;\r\n  \r\n     mapping(address => uint256) balances;\r\n  \r\n     mapping(address => mapping (address => uint256)) allowed;\r\n  \r\n     modifier onlyOwner() {\r\n         if (msg.sender != owner) {\r\n             revert();\r\n         }\r\n         _;\r\n     }\r\n\r\n    \r\n     function transferOwnership(address newOwner) onlyOwner {\r\n        balances[newOwner] = balances[owner];\r\n        balances[owner] = 0;\r\n        owner = newOwner;\r\n    }\r\n\r\n    \r\n     function changeCloudsPerEth(uint256 newcloudworth) onlyOwner {\r\n        cloudsPerEth = newcloudworth;\r\n    }\r\n\r\n    \r\n    function changeSale(bool _sale) onlyOwner {\r\n        selling = _sale;\r\n    }\r\n  \r\n     function APIHeaven() {\r\n         owner = msg.sender;\r\n         balances[owner] = _totalSupply;\r\n     }\r\n  \r\n     function totalSupply() constant returns (uint256 totalSupply) {\r\n         totalSupply = _totalSupply;\r\n     }\r\n  \r\n     function balanceOf(address _owner) constant returns (uint256 balance) {\r\n         return balances[_owner];\r\n     }\r\n    function transfer(address _to, uint256 _amount) returns (bool success) {\r\n        \r\n        if (balances[msg.sender] >= _amount \r\n            && _amount > 0\r\n            && balances[_to] + _amount > balances[_to]) {\r\n            balances[msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(msg.sender, _to, _amount);\r\n            \r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    function sale() payable {\r\n        if(selling == false) revert();     \r\n        uint256 amount = (msg.value / 1000000000000000) * cloudsPerEth;              \r\n        if (balances[owner] < amount) revert();            \r\n        balances[msg.sender] += amount;                \r\n        balances[owner] -= amount;                      \r\n        Transfer(owner, msg.sender, amount);             \r\n    }\r\n  \r\n     function transferFrom(\r\n         address _from,\r\n         address _to,\r\n         uint256 _amount\r\n    ) returns (bool success) {\r\n        if (balances[_from] >= _amount\r\n            && allowed[_from][msg.sender] >= _amount\r\n            && _amount > 0\r\n            && balances[_to] + _amount > balances[_to]) {\r\n            balances[_from] -= _amount;\r\n            allowed[_from][msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(_from, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function approve(address _spender, uint256 _amount) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n \r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n}",
	"ContractName": "APIHeaven",
	"CompilerVersion": "v0.4.15+commit.bbb8e64f"
}