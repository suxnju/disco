{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.15;\r\n\r\ncontract token { function transfer(address receiver, uint amount); }\r\n\r\ncontract SchmeckleTokenSale {\r\n  int public currentStage;\r\n  uint public priceInWei;\r\n  uint public availableTokensOnCurrentStage;\r\n  token public tokenReward;\r\n  event SaleStageUp(int newSaleStage, uint newTokenPrice);\r\n\r\n  address beneficiary;\r\n  uint decimalBase;\r\n  uint totalAmount;\r\n\r\n  function SchmeckleTokenSale() {\r\n      beneficiary = msg.sender;\r\n      priceInWei = 100 szabo;\r\n      decimalBase = 1000000000000000000;\r\n      tokenReward = token(0xD7a1BF3Cc676Fc7111cAD65972C8499c9B98Fb6f);\r\n      availableTokensOnCurrentStage = 538000;\r\n      totalAmount = 0;\r\n      currentStage = -3;\r\n  }\r\n\r\n  function () payable {\r\n      uint amount = msg.value;\r\n\r\n      if (amount < 1 finney) revert();\r\n\r\n      uint tokens = amount * decimalBase / priceInWei;\r\n\r\n      if (tokens > availableTokensOnCurrentStage * decimalBase) revert();\r\n\r\n      if (currentStage > 21) revert();\r\n\r\n      totalAmount += amount;\r\n      availableTokensOnCurrentStage -= tokens / decimalBase + 1;\r\n      if (totalAmount >= 3 ether && currentStage == -3) {\r\n          currentStage = -2;\r\n          priceInWei = 500 szabo;\r\n          SaleStageUp(currentStage, priceInWei);\r\n      }\r\n      if (totalAmount >= 42 ether && currentStage == -2) {\r\n          currentStage = -1;\r\n          priceInWei = 1000 szabo;\r\n          SaleStageUp(currentStage, priceInWei);\r\n      }\r\n      if (availableTokensOnCurrentStage < 1000 && currentStage >= 0) {\r\n          currentStage++;\r\n          priceInWei = priceInWei * 2;\r\n          availableTokensOnCurrentStage = 1000000;\r\n          SaleStageUp(currentStage, priceInWei);\r\n      }\r\n\r\n      tokenReward.transfer(msg.sender, tokens);\r\n  }\r\n\r\n  modifier onlyBeneficiary {\r\n      if (msg.sender != beneficiary) revert();\r\n      _;\r\n  }\r\n\r\n function withdraw(address recipient, uint amount) onlyBeneficiary {\r\n      if (recipient == 0x0) revert();\r\n      recipient.transfer(amount);\r\n }\r\n\r\n function launchSale() onlyBeneficiary () {\r\n      if (currentStage > -1) revert();\r\n      currentStage = 0;\r\n      priceInWei = priceInWei * 2;\r\n      availableTokensOnCurrentStage = 2100000;\r\n      SaleStageUp(currentStage, priceInWei);\r\n }\r\n}",
	"ContractName": "SchmeckleTokenSale",
	"CompilerVersion": "v0.4.15+commit.bbb8e64f"
}