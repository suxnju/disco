{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.13;\r\n\r\ncontract Database\r\n{\r\n    address public m_Owner;\r\n    address public m_Owner2;\r\n    address public m_Creator;\r\n    mapping(address => mapping(uint256 => mapping(uint256 => bytes32))) public m_Data;\r\n\r\n    modifier OnlyOwner()\r\n    {\r\n        require(msg.sender == m_Owner || msg.sender == m_Owner2);\r\n\r\n        _;\r\n    }\r\n\r\n    function() public payable\r\n    {\r\n\r\n    }\r\n\r\n    function Database() public\r\n    {\r\n        m_Owner = address(0);\r\n        m_Owner2 = address(0);\r\n        m_Creator = msg.sender;\r\n    }\r\n\r\n    function ChangeOwner(address new_owner) public\r\n    {\r\n        require(msg.sender == m_Owner || msg.sender == m_Creator || msg.sender == m_Owner2);\r\n\r\n        m_Owner = new_owner;\r\n    }\r\n\r\n    function ChangeOwner2(address new_owner2) public\r\n    {\r\n        require(msg.sender == m_Owner || msg.sender == m_Creator || msg.sender == m_Owner2);\r\n\r\n        m_Owner2 = new_owner2;\r\n    }\r\n\r\n    function Store(address user, uint256 category, uint256 index, bytes32 data) public OnlyOwner()\r\n    {\r\n        m_Data[user][category][index] = data;\r\n    }\r\n\r\n    function Load(address user, uint256 category, uint256 index) public view returns (bytes32)\r\n    {\r\n        return m_Data[user][category][index];\r\n    }\r\n\r\n    function TransferFunds(address target, uint256 transfer_amount) public OnlyOwner()\r\n    {\r\n        target.transfer(transfer_amount);\r\n    }\r\n}",
	"ContractName": "Database",
	"CompilerVersion": "v0.4.19+commit.c4cbbb05"
}