{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.17;\r\n\r\ncontract Lottery {\r\n    \r\n    address public manager;\r\n    address[] public players;\r\n    address public winner;\r\n    event Transfer(address indexed to, uint256 value);\r\n    \r\n    function Lottery () public {\r\n        manager = msg.sender;\r\n    }\r\n    \r\n    //\u6295\u6ce8\r\n    function enter() public payable {\r\n        //\u6700\u5c0f\u91d1\u989d\r\n        require(msg.value > .01 ether);\r\n        \r\n        players.push(msg.sender);\r\n        \r\n    }\r\n    \r\n    function random() private view returns (uint) {\r\n        return uint(keccak256(block.difficulty, now, players));\r\n    }\r\n    \r\n    function pickWinner() public restricted returns (address[]) {\r\n        uint index = random() % players.length;\r\n        winner =  players[index];\r\n        winner.transfer(this.balance);\r\n        emit Transfer(winner,this.balance);\r\n        players = new address[](0);\r\n        return players;\r\n    }\r\n    \r\n    modifier restricted(){\r\n        require(msg.sender == manager);\r\n        _;\r\n    }\r\n\r\n    function getContractBalance() public view returns (uint) {\r\n        return this.balance;\r\n    }\r\n\r\n    function getPlayers() public view returns (address[]){\r\n        return players;\r\n    }\r\n}",
	"ContractName": "Lottery",
	"CompilerVersion": "v0.4.23+commit.124ca40d"
}