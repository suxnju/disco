{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.11;\r\n\r\ncontract MiningRig {\r\n    // \u8b66\u544a\r\n    string public warning = \"\u8acb\u5404\u4f4d\u8981\u6709\u8010\u5fc3\u7b49\u5019\u4ea4\u6613\u5b8c\u6210\u5594\";\r\n    \r\n    // \u5408\u7d04\u90e8\u7f72\u8005\r\n    address public owner = 0x0;\r\n    \r\n    // \u5408\u7d04\u505c\u6b62\u5408\u8cc7\u7684\u5340\u584a\uff0c\u521d\u59cb 0 \r\n    uint public closeBlock = 0;\r\n    \r\n    // \u5927\u5bb6\u4e00\u8d77\u5408\u8cc7\u7684\u7e3d\u65b0\u53f0\u5e63\r\n    uint public totalNTD = 0;\r\n    \r\n    // \u9019\u500b\u5408\u7d04\u904e\u53bb\u7e3d\u5171\u88ab\u63d0\u9818\u904e\u7684 reward\r\n    uint public totalWithdrew = 0;\r\n    \r\n    // \u4f7f\u7528\u8005\u5404\u81ea\u5408\u8cc7\u7684\u65b0\u53f0\u5e63\r\n    mapping(address => uint) public usersNTD;\r\n    \r\n    // \u4f7f\u7528\u8005\u63d0\u9818\u904e\u7684 ether\r\n    mapping(address => uint) public usersWithdrew;\r\n    \r\n    // \u53ea\u80fd owner \u624d\u884c \u7684\u4fee\u98fe\u5b50\r\n    modifier onlyOwner () {\r\n        assert(owner == msg.sender);\r\n        _;\r\n    }\r\n    \r\n    // \u5728\u95dc\u9589\u5408\u8cc7\u524d\u624d\u884c \u7684\u4fee\u98fe\u5b50\r\n    modifier beforeCloseBlock () {\r\n        assert(block.number <= closeBlock);\r\n        _;\r\n    }\r\n    \r\n    // \u5728\u95dc\u9589\u5408\u8cc7\u5f8c\u624d\u884c \u7684\u4fee\u98fe\u5b50\r\n    modifier afterCloseBlock () {\r\n        assert(block.number > closeBlock);\r\n        _;\r\n    }\r\n    \r\n    // \u53ea\u6709\u6709\u5408\u8cc7\u904e\u7684\u4eba\u624d\u884c \u7684\u4fee\u98fe\u5b50\r\n    modifier onlyMember () {\r\n        assert(usersNTD[msg.sender] != 0);\r\n        _;\r\n    }\r\n    \r\n    // \u5efa\u69cb\u5b50\r\n    function MiningRig () {\r\n        owner = msg.sender;\r\n        closeBlock = block.number + 5760; // \u4e00\u5929\u7684 block \u6578\r\n    }\r\n    \r\n    // \u5408\u8cc7\uff0c\u7531\u8209\u8fa6\u4eba\u8a3b\u518a (\u56e0\u70ba\u662f\u5408\u8cc7\u65b0\u53f0\u5e63\uff0c\u6240\u4ee5\u5fc5\u9808\u4e2d\u5fc3\u5316)\r\n    function Register (address theUser, uint NTD) onlyOwner beforeCloseBlock {\r\n        usersNTD[theUser] += NTD;\r\n        totalNTD += NTD;\r\n    }\r\n    \r\n    // \u53cd\u5408\u8cc7\r\n    function Unregister (address theUser, uint NTD) onlyOwner beforeCloseBlock {\r\n        assert(usersNTD[theUser] >= NTD);\r\n        \r\n        usersNTD[theUser] -= NTD;\r\n        totalNTD -= NTD;\r\n    }\r\n    \r\n    // \u63d0\u9818\u6240\u5206\u914d\u4e4b\u4ee5\u592a\u5e63\r\n    function Withdraw () onlyMember afterCloseBlock {\r\n        // \u9019\u500b\u5408\u7d04\u66fe\u7d93\u5f97\u5230\u904e\u7684 ether \u7b49\u65bc\u73fe\u6709 balance + \u66fe\u7d93\u88ab\u63d0\u9818\u904e\u7684\r\n        uint everMined = this.balance + totalWithdrew;\r\n        \r\n        // \u9019\u500b user \u7e3d\u5171\u7d42\u7a76\u53ef\u4ee5\u9818\u7684\r\n        uint totalUserCanWithdraw = everMined * usersNTD[msg.sender] / totalNTD;\r\n        \r\n        // \u9019\u500b user \u73fe\u5728\u9084\u53ef\u4ee5\u9818\u7684\r\n        uint userCanWithdrawNow = totalUserCanWithdraw - usersWithdrew[msg.sender];\r\n        \r\n        // \u9632\u6b62 reentrance \u653b\u64ca\uff0c\u5148\u6539\u72c0\u614b\r\n        totalWithdrew += userCanWithdrawNow;\r\n        usersWithdrew[msg.sender] += userCanWithdrawNow;\r\n\r\n        assert(userCanWithdrawNow > 0);\r\n        \r\n        msg.sender.transfer(userCanWithdrawNow);\r\n    }\r\n    \r\n    // \u8cbc\u73fe\u8f49\u8b93\r\n    // \u8f49\u8b93\u4e4b\u524d\u5fc5\u9808\u628a\u80fd\u9818\u7684 ether \u9818\u5b8c\r\n    function Cashing (address targetAddress, uint permilleToCashing) onlyMember afterCloseBlock {\r\n        //permilleToCashing \u662f\u5343\u5206\u6bd4\r\n        assert(permilleToCashing <= 1000);\r\n        assert(permilleToCashing > 0);\r\n        \r\n        // \u9019\u500b\u5408\u7d04\u66fe\u7d93\u5f97\u5230\u904e\u7684 ether \u7b49\u65bc\u73fe\u6709 balance + \u66fe\u7d93\u88ab\u63d0\u9818\u904e\u7684\r\n        uint everMined = this.balance + totalWithdrew;\r\n        \r\n        // \u9019\u500b\u8981\u767c\u8d77\u8f49\u8b93\u7684 user \u7e3d\u5171\u7d42\u7a76\u53ef\u4ee5\u9818\u7684\r\n        uint totalUserCanWithdraw = everMined * usersNTD[msg.sender] / totalNTD;\r\n        \r\n        // \u9019\u500b\u8981\u767c\u8d77\u8f49\u8b93\u7684 user \u73fe\u5728\u9084\u53ef\u4ee5\u9818\u7684\r\n        uint userCanWithdrawNow = totalUserCanWithdraw - usersWithdrew[msg.sender];\r\n        \r\n        // \u8981\u63a5\u6536\u8f49\u8b93\u7684 user \u7e3d\u5171\u7d42\u7a76\u53ef\u4ee5\u9818\u7684\r\n        uint totalTargetUserCanWithdraw = everMined * usersNTD[targetAddress] / totalNTD;\r\n        \r\n        // \u8981\u63a5\u6536\u8f49\u8b93\u7684 user \u73fe\u5728\u9084\u53ef\u4ee5\u9818\u7684\r\n        uint targetUserCanWithdrawNow = totalTargetUserCanWithdraw - usersWithdrew[targetAddress];\r\n        \r\n        // \u767c\u8d77\u8f49\u8b93\u53ca\u63a5\u6536\u8f49\u8b93\u4e4b\u524d\uff0c\u96d9\u65b9\u7686\u9700\u8981\u6de8\u7a7a\u53ef\u63d0\u9818 ether\r\n        assert(userCanWithdrawNow == 0);\r\n        assert(targetUserCanWithdrawNow == 0);\r\n        \r\n        uint NTDToTransfer = usersNTD[msg.sender] * permilleToCashing / 1000;\r\n        uint WithdrewToTransfer = usersWithdrew[msg.sender] * permilleToCashing / 1000;\r\n        \r\n        usersNTD[msg.sender] -= NTDToTransfer;\r\n        usersWithdrew[msg.sender] -= WithdrewToTransfer;\r\n        \r\n        usersNTD[targetAddress] += NTDToTransfer;\r\n        usersWithdrew[targetAddress] += WithdrewToTransfer;\r\n    }\r\n    \r\n    function ContractBalance () constant returns (uint) {\r\n        return this.balance;\r\n    }\r\n    \r\n    function ContractTotalMined() constant returns (uint) {\r\n        return this.balance + totalWithdrew;\r\n    }\r\n    \r\n    function MyTotalNTD () constant returns (uint) {\r\n        return usersNTD[msg.sender];\r\n    }\r\n    \r\n    function MyTotalWithdrew () constant returns (uint) {\r\n        return usersWithdrew[msg.sender];\r\n    }\r\n \r\n    function () payable {}\r\n}",
	"ContractName": "MiningRig",
	"CompilerVersion": "v0.4.11+commit.68ef5810"
}