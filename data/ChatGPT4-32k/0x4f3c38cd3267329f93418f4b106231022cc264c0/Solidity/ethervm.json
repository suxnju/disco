{
	"address": "0x4f3c38cd3267329f93418f4b106231022cc264c0",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Unfortunately, the decompiled code you provided is not structured properly to allow the development of a direct Solidity version. The decompiled code appears to be incomplete, contains invalid syntax, includes jump commands which are not valid in Solidity, and has unhandled termination statements.\n\nHowever, I can provide you with a basic template of a smart contract in Solidity to give you a starting point:\n\n```solidity\npragma solidity ^0.8.6;\n\ncontract MyContract {\n    mapping(address => uint256) public balances;\n\n    function deposit() public payable {\n        require(msg.value > 0, \"Deposit amount must be greater than 0\");\n        balances[msg.sender] += msg.value;\n    }\n\n    function withdraw(uint256 _amount) public {\n        require(balances[msg.sender] >= _amount, \"Insufficient balance\");\n        balances[msg.sender] -= _amount;\n        payable(msg.sender).transfer(_amount);\n    }\n\n    function getBalance() public view returns (uint256) {\n        return balances[msg.sender];\n    }\n}\n```\n\nThis contract allows a user to deposit Ether into the contract and withdraw it. The user's balance is stored in a mapping. The `deposit` function allows a user to send Ether to the contract, and the `withdraw` function allows a user to withdraw Ether from the contract. The `getBalance` function allows a user to check their balance.\n\nPlease provide a more detailed and correct decompiled code for a more accurate translation into Solidity.",
				"role": "assistant"
			}
		}
	],
	"created": 1700474970,
	"id": "chatcmpl-8MvVaid6xIVm5YOHzVfUYbsiNsqNI",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp53 = block.number < storage[keccak256(memory[0xc0:0xe0]) + 0x04];\n            memory[0xc0:0xe0] = 0x0b;\n            var temp54 = (storage[keccak256(memory[0xc0:0xe0]) + 0x01] > 0x00) & temp53;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp55 = storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n            memory[0xc0:0xe0] = 0x0b;\n            var temp56 = (storage[keccak256(memory[0xc0:0xe0]) + 0x02] < temp55) & temp54;\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x00:0x20] = !storage[keccak256(memory[0xc0:0xe0])] & temp56;\n            var-1 = memory[0x00:0x20];\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp52 = !storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x00:0x20] = (storage[keccak256(memory[0xc0:0xe0])] > 0x00) | temp52;\n            var-1 = memory[0x00:0x20];\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0xe0]) + 0x05];\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0xe0]) + 0x03];\n        \n            if (block.number > memory[0x0180:0x01a0]) {\n                memory[0xc0:0xe0] = 0x0b;\n            \n                if (!storage[keccak256(memory[0xc0:0xe0]) + 0x07]) {\n                    var-1 = 0x00;\n                    goto label_0217;\n                } else if (block.number >= memory[0x0180:0x01a0]) {\n                    var-1 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                    var0 = storage[keccak256(memory[0xc0:0xe0]) + 0x07];\n                \n                    if (block.number < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp50 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                \n                    if ((storage[keccak256(memory[0xc0:0xe0]) + 0x07] * temp50) / var0 != var-1) { revert(memory[0x00:0x00]); }\n                \n                    if (block.number < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp51 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                    var-1 = storage[keccak256(memory[0xc0:0xe0]) + 0x07] * temp51;\n                \n                label_0217:\n                    memory[0xc0:0xe0] = 0x0b;\n                \n                    if (memory[0x0160:0x0180] < storage[keccak256(memory[0xc0:0xe0]) + 0x06]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xc0:0xe0] = 0x0b;\n                    var0 = memory[0x0160:0x0180] - storage[keccak256(memory[0xc0:0xe0]) + 0x06];\n                \n                    if (var-1 <= var0) {\n                        memory[0x01a0:0x01c0] = var-1;\n                    \n                        if (memory[0x0160:0x0180] < memory[0x01a0:0x01c0]) { revert(memory[0x00:0x00]); }\n                    \n                    label_0272:\n                        memory[0x00:0x20] = memory[0x0160:0x0180] - memory[0x01a0:0x01c0];\n                        var-1 = memory[0x00:0x20];\n                        // Error: Could not resolve jump destination!\n                    } else {\n                        var1 = var0;\n                        memory[0x01a0:0x01c0] = var1;\n                    \n                        if (memory[0x0160:0x0180] >= memory[0x01a0:0x01c0]) { goto label_0272; }\n                        else { revert(memory[0x00:0x00]); }\n                    }\n                } else { revert(memory[0x00:0x00]); }\n            } else {\n                memory[0x00:0x20] = memory[0x0160:0x0180];\n                var-1 = memory[0x00:0x20];\n                // Error: Could not resolve jump destination!\n            }\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            var-1 = memory[0x0140:0x0160];\n            var0 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            memory[0x0160:0x0180] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0180:0x01a0] = 0x00;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x03;\n            memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (memory[0x01a0:0x01c0] <= 0x00) {\n                memory[0x00:0x20] = memory[0x0180:0x01a0];\n                var-2 = memory[0x00:0x20];\n                // Error: Could not resolve jump destination!\n            } else {\n                memory[0x0200:0x0220] = 0x08c379a0;\n                memory[0x0220:0x0240] = 0x20;\n                memory[0x0240:0x0260] = 0x27;\n                memory[0x0260:0x0280] = 0x49732062696464657220616e642061756374696f6e206e6f742066696e616c69;\n                memory[0x0280:0x02a0] = 0x7365642079657400000000000000000000000000000000000000000000000000;\n                var-2 = memory[0x0140:0x0160];\n                var-1 = memory[0x0160:0x0180];\n                var0 = memory[0x0180:0x01a0];\n                var1 = memory[0x01a0:0x01c0];\n                var2 = 0x06;\n                // Unhandled termination\n            }\n        } else if (memory[0x00:0x20] != 0xa3169b14) {\n            if (memory[0x00:0x20] != 0x40fff189) {\n                if (memory[0x00:0x20] != 0x454a2ab3) {\n                    if (memory[0x00:0x20] != 0x579632a9) {\n                        if (0x00) {\n                            memory[0x0160:0x0180] = var-1;\n                            memory[0x0140:0x0160] = var-2;\n                            memory[0x0180:0x01a0] = 0x08c379a0;\n                            memory[0x01a0:0x01c0] = 0x20;\n                            memory[0x01c0:0x01e0] = 0x10;\n                            memory[0x01e0:0x0200] = 0x4e6f206c6f636b757020746f20656e6400000000000000000000000000000000;\n                            memory[0xc0:0xe0] = 0x0b;\n                        \n                            if (storage[keccak256(memory[0xc0:0xe0]) + 0x01] <= 0x00) { revert(memory[0x019c:0x0220]); }\n                        \n                            memory[0xc0:0xe0] = 0x0b;\n                            memory[0x0220:0x0240] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                            memory[0x0240:0x0260] = 0x00;\n                        \n                            if (block.timestamp + 0x4f1a00 < block.timestamp) { revert(memory[0x00:0x00]); }\n                        \n                            storage[0x02] = block.timestamp + 0x4f1a00;\n                        \n                            if (!memory[0x0140:0x0160]) {\n                                memory[0x0340:0x0360] = 0x00;\n                                var-2 = 0x0360;\n                                memory[var-2:var-2 + 0x20] = 0x00;\n                                var-1 = 0xc8;\n                                var0 = memory[0x0360:0x0380];\n                            \n                                if (var0 >= 0xc8) { revert(memory[0x00:0x00]); }\n                            \n                            label_1BCF:\n                                memory[0xc0:0xe0] = 0x04;\n                                memory[0x0340:0x0360] = storage[keccak256(memory[0xc0:0xe0]) + var0];\n                            \n                                if (!memory[0x0340:0x0360]) { goto label_1E8B; }\n                            \n                                if (!memory[0x0140:0x0160]) {\n                                label_1E32:\n                                    memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                    memory[0xc0:0xe0] = 0x03;\n                                    storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                    memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                    memory[0xc0:0xe0] = 0x0d;\n                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                \n                                    if (!storage[keccak256(memory[0xc0:0xe0])]) {\n                                        var temp18 = var-2;\n                                        var temp19 = memory[temp18:temp18 + 0x20] + 0x01;\n                                        memory[temp18:temp18 + 0x20] = temp19;\n                                    \n                                        if (var-1 != temp19) {\n                                        label_1BBE:\n                                            var0 = memory[0x0360:0x0380];\n                                        \n                                            if (var0 < 0xc8) { goto label_1BCF; }\n                                            else { revert(memory[0x00:0x00]); }\n                                        } else {\n                                        label_1E8B:\n                                            memory[0xc0:0xe0] = 0x04;\n                                            var temp20 = keccak256(memory[0xc0:0xe0]);\n                                            storage[temp20] = 0x00;\n                                            storage[temp20 + 0x01] = 0x00;\n                                            storage[temp20 + 0x02] = 0x00;\n                                            storage[temp20 + 0x03] = 0x00;\n                                            storage[temp20 + 0x04] = 0x00;\n                                            storage[temp20 + 0x05] = 0x00;\n                                            storage[temp20 + 0x06] = 0x00;\n                                            storage[temp20 + 0x07] = 0x00;\n                                            storage[temp20 + 0x08] = 0x00;\n                                            storage[temp20 + 0x09] = 0x00;\n                                            storage[temp20 + 0x0a] = 0x00;\n                                            storage[temp20 + 0x0b] = 0x00;\n                                            storage[temp20 + 0x0c] = 0x00;\n                                            storage[temp20 + 0x0d] = 0x00;\n                                            storage[temp20 + 0x0e] = 0x00;\n                                            storage[temp20 + 0x0f] = 0x00;\n                                            storage[temp20 + 0x10] = 0x00;\n                                            storage[temp20 + 0x11] = 0x00;\n                                            storage[temp20 + 0x12] = 0x00;\n                                            storage[temp20 + 0x13] = 0x00;\n                                            storage[temp20 + 0x14] = 0x00;\n                                            storage[temp20 + 0x15] = 0x00;\n                                            storage[temp20 + 0x16] = 0x00;\n                                            storage[temp20 + 0x17] = 0x00;\n                                            storage[temp20 + 0x18] = 0x00;\n                                            storage[temp20 + 0x19] = 0x00;\n                                            storage[temp20 + 0x1a] = 0x00;\n                                            storage[temp20 + 0x1b] = 0x00;\n                                            storage[temp20 + 0x1c] = 0x00;\n                                            storage[temp20 + 0x1d] = 0x00;\n                                            storage[temp20 + 0x1e] = 0x00;\n                                            storage[temp20 + 0x1f] = 0x00;\n                                            storage[temp20 + 0x20] = 0x00;\n                                            storage[temp20 + 0x21] = 0x00;\n                                            storage[temp20 + 0x22] = 0x00;\n                                            storage[temp20 + 0x23] = 0x00;\n                                            storage[temp20 + 0x24] = 0x00;\n                                            storage[temp20 + 0x25] = 0x00;\n                                            storage[temp20 + 0x26] = 0x00;\n                                            storage[temp20 + 0x27] = 0x00;\n                                            storage[temp20 + 0x28] = 0x00;\n                                            storage[temp20 + 0x29] = 0x00;\n                                            storage[temp20 + 0x2a] = 0x00;\n                                            storage[temp20 + 0x2b] = 0x00;\n                                            storage[temp20 + 0x2c] = 0x00;\n                                            storage[temp20 + 0x2d] = 0x00;\n                                            storage[temp20 + 0x2e] = 0x00;\n                                            storage[temp20 + 0x2f] = 0x00;\n                                            storage[temp20 + 0x30] = 0x00;\n                                            storage[temp20 + 0x31] = 0x00;\n                                            storage[temp20 + 0x32] = 0x00;\n                                            storage[temp20 + 0x33] = 0x00;\n                                            storage[temp20 + 0x34] = 0x00;\n                                            storage[temp20 + 0x35] = 0x00;\n                                            storage[temp20 + 0x36] = 0x00;\n                                            storage[temp20 + 0x37] = 0x00;\n                                            storage[temp20 + 0x38] = 0x00;\n                                            storage[temp20 + 0x39] = 0x00;\n                                            storage[temp20 + 0x3a] = 0x00;\n                                            storage[temp20 + 0x3b] = 0x00;\n                                            storage[temp20 + 0x3c] = 0x00;\n                                            storage[temp20 + 0x3d] = 0x00;\n                                            storage[temp20 + 0x3e] = 0x00;\n                                            storage[temp20 + 0x3f] = 0x00;\n                                            storage[temp20 + 0x40] = 0x00;\n                                            storage[temp20 + 0x41] = 0x00;\n                                            storage[temp20 + 0x42] = 0x00;\n                                            storage[temp20 + 0x43] = 0x00;\n                                            storage[temp20 + 0x44] = 0x00;\n                                            storage[temp20 + 0x45] = 0x00;\n                                            storage[temp20 + 0x46] = 0x00;\n                                            storage[temp20 + 0x47] = 0x00;\n                                            storage[temp20 + 0x48] = 0x00;\n                                            storage[temp20 + 0x49] = 0x00;\n                                            storage[temp20 + 0x4a] = 0x00;\n                                            storage[temp20 + 0x4b] = 0x00;\n                                            storage[temp20 + 0x4c] = 0x00;\n                                            storage[temp20 + 0x4d] = 0x00;\n                                            storage[temp20 + 0x4e] = 0x00;\n                                            storage[temp20 + 0x4f] = 0x00;\n                                            storage[temp20 + 0x50] = 0x00;\n                                            storage[temp20 + 0x51] = 0x00;\n                                            storage[temp20 + 0x52] = 0x00;\n                                            storage[temp20 + 0x53] = 0x00;\n                                            storage[temp20 + 0x54] = 0x00;\n                                            storage[temp20 + 0x55] = 0x00;\n                                            storage[temp20 + 0x56] = 0x00;\n                                            storage[temp20 + 0x57] = 0x00;\n                                            storage[temp20 + 0x58] = 0x00;\n                                            storage[temp20 + 0x59] = 0x00;\n                                            storage[temp20 + 0x5a] = 0x00;\n                                            storage[temp20 + 0x5b] = 0x00;\n                                            storage[temp20 + 0x5c] = 0x00;\n                                            storage[temp20 + 0x5d] = 0x00;\n                                            storage[temp20 + 0x5e] = 0x00;\n                                            storage[temp20 + 0x5f] = 0x00;\n                                            storage[temp20 + 0x60] = 0x00;\n                                            storage[temp20 + 0x61] = 0x00;\n                                            storage[temp20 + 0x62] = 0x00;\n                                            storage[temp20 + 0x63] = 0x00;\n                                            storage[temp20 + 0x64] = 0x00;\n                                            storage[temp20 + 0x65] = 0x00;\n                                            storage[temp20 + 0x66] = 0x00;\n                                            storage[temp20 + 0x67] = 0x00;\n                                            storage[temp20 + 0x68] = 0x00;\n                                            storage[temp20 + 0x69] = 0x00;\n                                            storage[temp20 + 0x6a] = 0x00;\n                                            storage[temp20 + 0x6b] = 0x00;\n                                            storage[temp20 + 0x6c] = 0x00;\n                                            storage[temp20 + 0x6d] = 0x00;\n                                            storage[temp20 + 0x6e] = 0x00;\n                                            storage[temp20 + 0x6f] = 0x00;\n                                            storage[temp20 + 0x70] = 0x00;\n                                            storage[temp20 + 0x71] = 0x00;\n                                            storage[temp20 + 0x72] = 0x00;\n                                            storage[temp20 + 0x73] = 0x00;\n                                            storage[temp20 + 0x74] = 0x00;\n                                            storage[temp20 + 0x75] = 0x00;\n                                            storage[temp20 + 0x76] = 0x00;\n                                            storage[temp20 + 0x77] = 0x00;\n                                            storage[temp20 + 0x78] = 0x00;\n                                            storage[temp20 + 0x79] = 0x00;\n                                            storage[temp20 + 0x7a] = 0x00;\n                                            storage[temp20 + 0x7b] = 0x00;\n                                            storage[temp20 + 0x7c] = 0x00;\n                                            storage[temp20 + 0x7d] = 0x00;\n                                            storage[temp20 + 0x7e] = 0x00;\n                                            storage[temp20 + 0x7f] = 0x00;\n                                            storage[temp20 + 0x80] = 0x00;\n                                            storage[temp20 + 0x81] = 0x00;\n                                            storage[temp20 + 0x82] = 0x00;\n                                            storage[temp20 + 0x83] = 0x00;\n                                            storage[temp20 + 0x84] = 0x00;\n                                            storage[temp20 + 0x85] = 0x00;\n                                            storage[temp20 + 0x86] = 0x00;\n                                            storage[temp20 + 0x87] = 0x00;\n                                            storage[temp20 + 0x88] = 0x00;\n                                            storage[temp20 + 0x89] = 0x00;\n                                            storage[temp20 + 0x8a] = 0x00;\n                                            storage[temp20 + 0x8b] = 0x00;\n                                            storage[temp20 + 0x8c] = 0x00;\n                                            storage[temp20 + 0x8d] = 0x00;\n                                            storage[temp20 + 0x8e] = 0x00;\n                                            storage[temp20 + 0x8f] = 0x00;\n                                            storage[temp20 + 0x90] = 0x00;\n                                            storage[temp20 + 0x91] = 0x00;\n                                            storage[temp20 + 0x92] = 0x00;\n                                            storage[temp20 + 0x93] = 0x00;\n                                            storage[temp20 + 0x94] = 0x00;\n                                            storage[temp20 + 0x95] = 0x00;\n                                            storage[temp20 + 0x96] = 0x00;\n                                            storage[temp20 + 0x97] = 0x00;\n                                            storage[temp20 + 0x98] = 0x00;\n                                            storage[temp20 + 0x99] = 0x00;\n                                            storage[temp20 + 0x9a] = 0x00;\n                                            storage[temp20 + 0x9b] = 0x00;\n                                            storage[temp20 + 0x9c] = 0x00;\n                                            storage[temp20 + 0x9d] = 0x00;\n                                            storage[temp20 + 0x9e] = 0x00;\n                                            storage[temp20 + 0x9f] = 0x00;\n                                            storage[temp20 + 0xa0] = 0x00;\n                                            storage[temp20 + 0xa1] = 0x00;\n                                            storage[temp20 + 0xa2] = 0x00;\n                                            storage[temp20 + 0xa3] = 0x00;\n                                            storage[temp20 + 0xa4] = 0x00;\n                                            storage[temp20 + 0xa5] = 0x00;\n                                            storage[temp20 + 0xa6] = 0x00;\n                                            storage[temp20 + 0xa7] = 0x00;\n                                            storage[temp20 + 0xa8] = 0x00;\n                                            storage[temp20 + 0xa9] = 0x00;\n                                            storage[temp20 + 0xaa] = 0x00;\n                                            storage[temp20 + 0xab] = 0x00;\n                                            storage[temp20 + 0xac] = 0x00;\n                                            storage[temp20 + 0xad] = 0x00;\n                                            storage[temp20 + 0xae] = 0x00;\n                                            storage[temp20 + 0xaf] = 0x00;\n                                            storage[temp20 + 0xb0] = 0x00;\n                                            storage[temp20 + 0xb1] = 0x00;\n                                            storage[temp20 + 0xb2] = 0x00;\n                                            storage[temp20 + 0xb3] = 0x00;\n                                            storage[temp20 + 0xb4] = 0x00;\n                                            storage[temp20 + 0xb5] = 0x00;\n                                            storage[temp20 + 0xb6] = 0x00;\n                                            storage[temp20 + 0xb7] = 0x00;\n                                            storage[temp20 + 0xb8] = 0x00;\n                                            storage[temp20 + 0xb9] = 0x00;\n                                            storage[temp20 + 0xba] = 0x00;\n                                            storage[temp20 + 0xbb] = 0x00;\n                                            storage[temp20 + 0xbc] = 0x00;\n                                            storage[temp20 + 0xbd] = 0x00;\n                                            storage[temp20 + 0xbe] = 0x00;\n                                            storage[temp20 + 0xbf] = 0x00;\n                                            storage[temp20 + 0xc0] = 0x00;\n                                            storage[temp20 + 0xc1] = 0x00;\n                                            storage[temp20 + 0xc2] = 0x00;\n                                            storage[temp20 + 0xc3] = 0x00;\n                                            storage[temp20 + 0xc4] = 0x00;\n                                            storage[temp20 + 0xc5] = 0x00;\n                                            storage[temp20 + 0xc6] = 0x00;\n                                            storage[temp20 + 0xc7] = 0x00;\n                                            memory[0xc0:0xe0] = 0x0b;\n                                            var temp21 = keccak256(memory[0xc0:0xe0]);\n                                            storage[temp21] = 0x00;\n                                            storage[temp21 + 0x01] = 0x00;\n                                            storage[temp21 + 0x02] = 0x00;\n                                            storage[temp21 + 0x03] = 0x00;\n                                            storage[temp21 + 0x04] = 0x00;\n                                            storage[temp21 + 0x05] = 0x00;\n                                            storage[temp21 + 0x06] = 0x00;\n                                            storage[temp21 + 0x07] = 0x00;\n                                            storage[temp21 + 0x08] = 0x00;\n                                            storage[temp21 + 0x09] = 0x00;\n                                            storage[temp21 + 0x0a] = 0x00;\n                                            // Error: Could not resolve jump destination!\n                                        }\n                                    } else {\n                                        memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                        var temp22 = var-2;\n                                        var temp23 = memory[temp22:temp22 + 0x20] + 0x01;\n                                        memory[temp22:temp22 + 0x20] = temp23;\n                                    \n                                        if (var-1 != temp23) { goto label_1BBE; }\n                                        else { goto label_1E8B; }\n                                    }\n                                } else {\n                                    memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                    memory[0xc0:0xe0] = 0x0d;\n                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                \n                                    if (!storage[keccak256(memory[0xc0:0xe0])]) {\n                                        memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        var0 = keccak256(memory[0xc0:0x0100]);\n                                        var1 = storage[var0];\n                                        memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                        memory[0xc0:0xe0] = 0x03;\n                                    \n                                        if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                            var temp24 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            var temp25 = storage[keccak256(memory[0xc0:0x0100])];\n                                            var temp26 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if ((storage[keccak256(memory[0xc0:0x0100])] * temp26) / temp25 != temp24) { revert(memory[0x00:0x00]); }\n                                        \n                                            var temp27 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if (storage[var0] + storage[keccak256(memory[0xc0:0x0100])] * temp27 < var1) { revert(memory[0x00:0x00]); }\n                                        \n                                        label_1DBB:\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                                var temp28 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var temp29 = storage[keccak256(memory[0xc0:0x0100])];\n                                                var temp30 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                            \n                                                if ((storage[keccak256(memory[0xc0:0x0100])] * temp30) / temp29 != temp28) { revert(memory[0x00:0x00]); }\n                                            \n                                                var temp31 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var1 = storage[keccak256(memory[0xc0:0x0100])] * temp31;\n                                            \n                                            label_1E2A:\n                                                var temp32 = var0;\n                                                storage[temp32] = storage[temp32] + var1;\n                                                goto label_1E32;\n                                            } else {\n                                                var1 = 0x00;\n                                                goto label_1E2A;\n                                            }\n                                        } else {\n                                            var2 = 0x00;\n                                        \n                                            if (storage[var0] + var2 >= var1) { goto label_1DBB; }\n                                            else { revert(memory[0x00:0x00]); }\n                                        }\n                                    } else {\n                                        memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                        memory[0xc0:0xe0] = 0x0d;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = keccak256(memory[0xc0:0xe0]) + 0x02;\n                                        var1 = storage[var0];\n                                        memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                        memory[0xc0:0xe0] = 0x03;\n                                    \n                                        if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                            var temp33 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            var temp34 = storage[keccak256(memory[0xc0:0x0100])];\n                                            var temp35 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if ((storage[keccak256(memory[0xc0:0x0100])] * temp35) / temp34 != temp33) { revert(memory[0x00:0x00]); }\n                                        \n                                            var temp36 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            var2 = storage[keccak256(memory[0xc0:0x0100])] * temp36;\n                                        \n                                        label_1CA3:\n                                        \n                                            if (storage[var0] + var2 < var1) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                                var temp37 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var temp38 = storage[keccak256(memory[0xc0:0x0100])];\n                                                var temp39 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                            \n                                                if ((storage[keccak256(memory[0xc0:0x0100])] * temp39) / temp38 != temp37) { revert(memory[0x00:0x00]); }\n                                            \n                                                var temp40 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var1 = storage[keccak256(memory[0xc0:0x0100])] * temp40;\n                                            \n                                            label_1D20:\n                                                var temp41 = var0;\n                                                storage[temp41] = storage[temp41] + var1;\n                                                goto label_1E32;\n                                            } else {\n                                                var1 = 0x00;\n                                                goto label_1D20;\n                                            }\n                                        } else {\n                                            var2 = 0x00;\n                                            goto label_1CA3;\n                                        }\n                                    }\n                                }\n                            } else {\n                                memory[0x02a0:0x02c0] = 0x08c379a0;\n                                memory[0x02c0:0x02e0] = 0x20;\n                                memory[0x02e0:0x0300] = 0x0d;\n                                memory[0x0300:0x0320] = 0x4e6f742066696e616c6973656400000000000000000000000000000000000000;\n                                var-2 = memory[0x0140:0x0160];\n                                var-1 = memory[0x0160:0x0180];\n                                var0 = memory[0x0180:0x01a0];\n                                var1 = memory[0x01a0:0x01c0];\n                                var2 = memory[0x01c0:0x01e0];\n                                var3 = memory[0x01e0:0x0200];\n                                var4 = memory[0x0200:0x0220];\n                                var5 = memory[0x0220:0x0240];\n                                var6 = memory[0x0240:0x0260];\n                                var var7 = 0x06;\n                                // Unhandled termination\n                            }\n                        } else if (memory[0x00:0x20] != 0xc5f0204c) {\n                            if (memory[0x00:0x20] != 0x287d274b) {\n                                if (memory[0x00:0x20] != 0x2e1bc98f) {\n                                    if (memory[0x00:0x20] != 0xa0b5323f) {\n                                        if (0x00) {\n                                            // Error: StackRead before write???\n                                            var var-2;\n                                            // Error: StackRead before write???\n                                            var var-1;\n                                            // Error: StackRead before write???\n                                            var var-3;\n                                            memory[0x0180:0x01a0] = var-1;\n                                            memory[0x0140:0x0160] = var-2;\n                                            memory[0x0160:0x0180] = var-3;\n                                        \n                                            if (!0x0186a0) { revert(memory[0x00:0x00]); }\n                                        \n                                            var-3 = 0x0186a0;\n                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                            memory[0xc0:0xe0] = 0x09;\n                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        \n                                            if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) {\n                                                var temp12 = memory[0x0160:0x0180];\n                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                memory[0xc0:0xe0] = 0x09;\n                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                var temp13 = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                var temp14 = memory[0x0160:0x0180];\n                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                memory[0xc0:0xe0] = 0x09;\n                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                            \n                                                if ((storage[keccak256(memory[0xc0:0xe0]) + 0x01] * temp14) / temp13 != temp12) { revert(memory[0x00:0x00]); }\n                                            \n                                                var temp15 = memory[0x0160:0x0180];\n                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                memory[0xc0:0xe0] = 0x09;\n                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                var-2 = storage[keccak256(memory[0xc0:0xe0]) + 0x01] * temp15;\n                                            \n                                            label_2C6B:\n                                                memory[0x01a0:0x01c0] = var-2 / var-3;\n                                                memory[0x01c0:0x01e0] = 0x08c379a0;\n                                                memory[0x01e0:0x0200] = 0x20;\n                                                memory[0x0200:0x0220] = 0x10;\n                                                memory[0x0220:0x0240] = 0x52657761726473206465706c6574656400000000000000000000000000000000;\n                                                var temp16 = memory[0x01a0:0x01c0];\n                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                memory[0xc0:0xe0] = 0x09;\n                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                            \n                                                if (storage[keccak256(memory[0xc0:0xe0])] < temp16) { revert(memory[0x01dc:0x0260]); }\n                                            \n                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                memory[0xc0:0xe0] = 0x09;\n                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                var-3 = keccak256(memory[0xc0:0xe0]);\n                                            \n                                                if (storage[var-3] < memory[0x01a0:0x01c0]) { revert(memory[0x00:0x00]); }\n                                            \n                                                var temp17 = var-3;\n                                                storage[temp17] = storage[temp17] - memory[0x01a0:0x01c0];\n                                                memory[0x00:0x20] = memory[0x01a0:0x01c0];\n                                                var-3 = memory[0x00:0x20];\n                                                // Error: Could not resolve jump destination!\n                                            } else {\n                                                var-2 = 0x00;\n                                                goto label_2C6B;\n                                            }\n                                        } else if (memory[0x00:0x20] != 0x90d209ca) {\n                                            if (memory[0x00:0x20] != 0xc396f524) {\n                                                if (memory[0x00:0x20] != 0xe335cfab) {\n                                                    if (memory[0x00:0x20] != 0x7e00ab0a) {\n                                                        if (memory[0x00:0x20] != 0x5a58cd4c) {\n                                                            if (memory[0x00:0x20] != 0xdd627dff) {\n                                                                if (memory[0x00:0x20] != 0x704fdd68) {\n                                                                    if (memory[0x00:0x20] != 0xb9f890de) {\n                                                                        if (memory[0x00:0x20] != 0x190eaaba) {\n                                                                            if (memory[0x00:0x20] != 0x151a67b4) {\n                                                                                if (memory[0x00:0x20] != 0xa9215db4) {\n                                                                                    if (memory[0x00:0x20] != 0x714436f2) {\n                                                                                        if (memory[0x00:0x20] != 0x83e98bc3) {\n                                                                                            if (memory[0x00:0x20] != 0x8146f323) {\n                                                                                                if (memory[0x00:0x20] != 0xeb91d37e) {\n                                                                                                    if (memory[0x00:0x20] != 0xbac4159d) {\n                                                                                                        if (memory[0x00:0x20] != 0x8da5cb5b) {\n                                                                                                            if (memory[0x00:0x20] != 0x573c0b0e) {\n                                                                                                                if (memory[0x00:0x20] != 0x9031d1a8) {\n                                                                                                                    if (memory[0x00:0x20] != 0xc10c9515) {\n                                                                                                                        if (memory[0x00:0x20] != 0x38494a1a) {\n                                                                                                                            if (memory[0x00:0x20] != 0x25abfdd0) {\n                                                                                                                                if (memory[0x00:0x20] != 0xca0341c6) {\n                                                                                                                                    if (memory[0x00:0x20] != 0x74d18447) {\n                                                                                                                                        if (memory[0x00:0x20] != 0x43b8063a) {\n                                                                                                                                            if (memory[0x00:0x20] != 0xd2572c8b) {\n                                                                                                                                                if (memory[0x00:0x20] != 0x78be921f) {\n                                                                                                                                                    if (memory[0x00:0x20] != 0x5d85af0c) {\n                                                                                                                                                        if (memory[0x00:0x20] != 0xca964f6d) {\n                                                                                                                                                            if (memory[0x00:0x20] != 0x965ac0af) {\n                                                                                                                                                                if (memory[0x00:0x20] != 0xfbc6ef00) {\n                                                                                                                                                                    if (memory[0x00:0x20] != 0x8cf0d66f) {\n                                                                                                                                                                        if (memory[0x00:0x20] != 0x20f8d74c) {\n                                                                                                                                                                            if (memory[0x00:0x20] != 0x0d9be7dd) {\n                                                                                                                                                                                if (memory[0x00:0x20] != 0x6ebcddb8) {\n                                                                                                                                                                                    if (memory[0x00:0x20] != 0x85245104) {\n                                                                                                                                                                                        if (memory[0x00:0x20] != 0xfc614adb) {\n                                                                                                                                                                                            if (memory[0x00:0x20] != 0xa912a558) {\n                                                                                                                                                                                                if (memory[0x00:0x20] != 0x96bcc37f) {\n                                                                                                                                                                                                    if (memory[0x00:0x20] != 0x39c6dd93) {\n                                                                                                                                                                                                        if (memory[0x00:0x20] != 0x5a8776be) {\n                                                                                                                                                                                                            if (memory[0x00:0x20] != 0x4179e36e) {\n                                                                                                                                                                                                                if (memory[0x00:0x20] != 0x078690d2) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                var var0 = msg.data[0x04:0x24];\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                                                                                                memory[0xc0:0xe0] = 0x0d;\n                                                                                                                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                                                                var0 = msg.data[0x04:0x24];\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                                                                                                memory[0xc0:0xe0] = 0x0d;\n                                                                                                                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                                                                                                                                        \n                                                                                                                                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                        \n                                                                                                                                                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                                                                                            memory[0xc0:0xe0] = 0x0d;\n                                                                                                                                                                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                                                                        memory[0x00:0x20] = storage[0x0c];\n                                                                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x0a];\n                                                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x09];\n                                                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n                                                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                                                        memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x07];\n                                                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x06];\n                                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x05];\n                                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x04];\n                                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                                        memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x03];\n                                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                        memory[0x00:0x20] = storage[0x0a];\n                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                                                                                \n                                                                                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                                \n                                                                                                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                                    memory[0xc0:0xe0] = 0x09;\n                                                                                                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                var0 = msg.data[0x04:0x24];\n                                                                                                                                            \n                                                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                            \n                                                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                                memory[0xc0:0xe0] = 0x09;\n                                                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                                                                        \n                                                                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                        \n                                                                                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                            memory[0xc0:0xe0] = 0x09;\n                                                                                                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                                                                    \n                                                                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                    \n                                                                                                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                        memory[0xc0:0xe0] = 0x08;\n                                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                } else if (!msg.value) {\n                                                                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                                                                \n                                                                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                \n                                                                                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                    memory[0xc0:0xe0] = 0x07;\n                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                            } else if (!msg.value) {\n                                                                                                                                var0 = msg.data[0x04:0x24];\n                                                                                                                            \n                                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                            \n                                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                memory[0xc0:0xe0] = 0x06;\n                                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                return memory[0x00:0x20];\n                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                        } else if (!msg.value) {\n                                                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                                                        \n                                                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                        \n                                                                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                            memory[0xc0:0xe0] = 0x06;\n                                                                                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                            return memory[0x00:0x20];\n                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                    } else if (!msg.value) {\n                                                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                                                    \n                                                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                    \n                                                                                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                        memory[0xc0:0xe0] = 0x06;\n                                                                                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                        return memory[0x00:0x20];\n                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                } else if (!msg.value) {\n                                                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                                                \n                                                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                \n                                                                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                    memory[0xc0:0xe0] = 0x05;\n                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                                    return memory[0x00:0x20];\n                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                            } else if (!msg.value) {\n                                                                                                                memory[0x00:0x20] = storage[0x02];\n                                                                                                                return memory[0x00:0x20];\n                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                        } else if (!msg.value) {\n                                                                                                            memory[0x00:0x20] = storage[0x01];\n                                                                                                            return memory[0x00:0x20];\n                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                    } else if (!msg.value) {\n                                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                                    \n                                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                    \n                                                                                                        memory[0x0140:0x0160] = 0xce96fe20;\n                                                                                                        memory[0x0160:0x0180] = msg.data[0x04:0x24];\n                                                                                                        var0 = memory[0x0160:0x0180];\n                                                                                                        var var1 = 0x06;\n                                                                                                        // Unhandled termination\n                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                } else if (!msg.value) {\n                                                                                                    var0 = 0x06;\n                                                                                                    // Unhandled termination\n                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                            } else if (!msg.value) {\n                                                                                                var0 = 0x06;\n                                                                                                // Unhandled termination\n                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                        } else if (!msg.value) {\n                                                                                            var0 = 0x06;\n                                                                                            // Unhandled termination\n                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                    } else if (!msg.value) {\n                                                                                        memory[0x0160:0x0180] = 0x08c379a0;\n                                                                                        memory[0x0180:0x01a0] = 0x20;\n                                                                                        memory[0x01a0:0x01c0] = 0x13;\n                                                                                        memory[0x01c0:0x01e0] = 0x536c6f7473206e6f74207965742066696e616c00000000000000000000000000;\n                                                                                        var0 = 0x06;\n                                                                                        // Unhandled termination\n                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                } else if (!msg.value) {\n                                                                                    memory[0x0160:0x0180] = 0x08c379a0;\n                                                                                    memory[0x0180:0x01a0] = 0x20;\n                                                                                    memory[0x01a0:0x01c0] = 0x15;\n                                                                                    memory[0x01c0:0x01e0] = 0x5374616b657273206e6f74207965742066696e616c0000000000000000000000;\n                                                                                    var0 = 0x06;\n                                                                                    // Unhandled termination\n                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                            } else if (!msg.value) {\n                                                                                var0 = msg.data[0x04:0x24];\n                                                                            \n                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0160:0x0180] = 0x08c379a0;\n                                                                                memory[0x0180:0x01a0] = 0x20;\n                                                                                memory[0x01a0:0x01c0] = 0x13;\n                                                                                memory[0x01c0:0x01e0] = 0x536c6f7473206e6f74207965742066696e616c00000000000000000000000000;\n                                                                                var0 = 0x06;\n                                                                                // Unhandled termination\n                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                        } else if (!msg.value) {\n                                                                            memory[0x00:0x20] = 0x0186a0;\n                                                                            return memory[0x00:0x20];\n                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                    } else if (!msg.value) {\n                                                                        memory[0x00:0x20] = storage[0x00];\n                                                                        return memory[0x00:0x20];\n                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                } else if (!msg.value) {\n                                                                    var0 = msg.data[0x04:0x24];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x0140:0x0160] = 0x08c379a0;\n                                                                    memory[0x0160:0x0180] = 0x20;\n                                                                    memory[0x0180:0x01a0] = 0x0a;\n                                                                    memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                                                                \n                                                                    if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                                                                \n                                                                    memory[0x01e0:0x0200] = 0x08c379a0;\n                                                                    memory[0x0200:0x0220] = 0x20;\n                                                                    memory[0x0220:0x0240] = 0x15;\n                                                                    memory[0x0240:0x0260] = 0x4e6f7420612076697274546f6b656e486f6c6465720000000000000000000000;\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x0d;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                \n                                                                    if (!storage[keccak256(memory[0xc0:0xe0])]) { revert(memory[0x01fc:0x0280]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x0d;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                    storage[keccak256(memory[0xc0:0xe0]) + 0x01] = msg.data[0x24:0x44];\n                                                                    stop();\n                                                                } else { revert(memory[0x00:0x00]); }\n                                                            } else if (!msg.value) {\n                                                                var0 = msg.data[0x04:0x24];\n                                                            \n                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var0 = msg.data[0x24:0x44];\n                                                            \n                                                                if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var0 = msg.data[0x64:0x84];\n                                                            \n                                                                if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0x0140:0x0160] = 0x08c379a0;\n                                                                memory[0x0160:0x0180] = 0x20;\n                                                                memory[0x0180:0x01a0] = 0x0a;\n                                                                memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                                                            \n                                                                if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                                                            \n                                                                memory[0x01e0:0x0200] = 0x08c379a0;\n                                                                memory[0x0200:0x0220] = 0x20;\n                                                                memory[0x0220:0x0240] = 0x18;\n                                                                memory[0x0240:0x0260] = 0x41646472657373206861732061637469766520736c6f74730000000000000000;\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x01fc:0x0280]); }\n                                                            \n                                                                memory[0x0280:0x02a0] = 0x08c379a0;\n                                                                memory[0x02a0:0x02c0] = 0x20;\n                                                                memory[0x02c0:0x02e0] = 0x27;\n                                                                memory[0x02e0:0x0300] = 0x416464726573732068617320706f7369746976652073656c665374616b657244;\n                                                                memory[0x0300:0x0320] = 0x65706f7369747300000000000000000000000000000000000000000000000000;\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x07;\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x029c:0x0340]); }\n                                                            \n                                                                memory[0x0340:0x0360] = 0x08c379a0;\n                                                                memory[0x0360:0x0380] = 0x20;\n                                                                memory[0x0380:0x03a0] = 0x1b;\n                                                                memory[0x03a0:0x03c0] = 0x41646472657373206861732072656d61696e696e675265776172640000000000;\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x09;\n                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0xe0])]) { revert(memory[0x035c:0x03e0]); }\n                                                            \n                                                                memory[0x03e0:0x0400] = 0x08c379a0;\n                                                                memory[0x0400:0x0420] = 0x20;\n                                                                memory[0x0420:0x0440] = 0x1c;\n                                                                memory[0x0440:0x0460] = 0x416464726573732068617320706f73697469766520706c656467657300000000;\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x06;\n                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0xe0])]) { revert(memory[0x03fc:0x0480]); }\n                                                            \n                                                                memory[0x0480:0x04a0] = 0x08c379a0;\n                                                                memory[0x04a0:0x04c0] = 0x20;\n                                                                memory[0x04c0:0x04e0] = 0x25;\n                                                                memory[0x04e0:0x0500] = 0x4164647265737320686173206120706f6f6c20696e206f6e676f696e67206175;\n                                                                memory[0x0500:0x0520] = 0x6374696f6e000000000000000000000000000000000000000000000000000000;\n                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                var temp0 = !storage[keccak256(memory[0xc0:0xe0])];\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x09;\n                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                            \n                                                                if (!((storage[keccak256(memory[0xc0:0xe0]) + 0x02] < storage[0x0a]) | temp0)) { revert(memory[0x049c:0x0540]); }\n                                                            \n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x0d;\n                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                memory[0x0540:0x0560] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                            \n                                                                if (!(!msg.data[0x24:0x44] & (memory[0x0540:0x0560] > 0x00))) {\n                                                                label_3F5A:\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x0d;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                    storage[keccak256(memory[0xc0:0xe0])] = msg.data[0x24:0x44];\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x0d;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                    storage[keccak256(memory[0xc0:0xe0]) + 0x01] = msg.data[0x44:0x64];\n                                                                    stop();\n                                                                } else if (!msg.data[0x64:0x84]) {\n                                                                    var0 = 0x0c;\n                                                                \n                                                                    if (storage[var0] + memory[0x0540:0x0560] < storage[var0]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var temp1 = var0;\n                                                                    storage[temp1] = storage[temp1] + memory[0x0540:0x0560];\n                                                                \n                                                                label_3F3B:\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x0d;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                    storage[keccak256(memory[0xc0:0xe0]) + 0x02] = 0x00;\n                                                                    goto label_3F5A;\n                                                                } else {\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x07;\n                                                                    var temp2 = keccak256(memory[0xc0:0x0100]);\n                                                                    var0 = temp2;\n                                                                \n                                                                    if (storage[var0] + memory[0x0540:0x0560] < storage[var0]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var temp3 = var0;\n                                                                    storage[temp3] = storage[temp3] + memory[0x0540:0x0560];\n                                                                    goto label_3F3B;\n                                                                }\n                                                            } else { revert(memory[0x00:0x00]); }\n                                                        } else if (!msg.value) {\n                                                            memory[0x0140:0x0160] = 0x08c379a0;\n                                                            memory[0x0160:0x0180] = 0x20;\n                                                            memory[0x0180:0x01a0] = 0x0a;\n                                                            memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                                                        \n                                                            if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                                                        \n                                                            memory[0x01e0:0x0200] = 0x08c379a0;\n                                                            memory[0x0200:0x0220] = 0x20;\n                                                            memory[0x0220:0x0240] = 0x0f;\n                                                            memory[0x0240:0x0260] = 0x496e206c6f636b75702070686173650000000000000000000000000000000000;\n                                                            memory[0xc0:0xe0] = 0x0b;\n                                                        \n                                                            if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x01fc:0x0280]); }\n                                                        \n                                                            memory[0x0280:0x02a0] = 0x08c379a0;\n                                                            memory[0x02a0:0x02c0] = 0x20;\n                                                            memory[0x02c0:0x02e0] = 0x1a;\n                                                            memory[0x02e0:0x0300] = 0x6561726c6965737444656c657465206e6f742072656163686564000000000000;\n                                                        \n                                                            if (block.timestamp < storage[0x02]) { revert(memory[0x029c:0x0320]); }\n                                                        \n                                                            if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0340:0x0360] = 0x70a08231;\n                                                            memory[0x0360:0x0380] = address(this);\n                                                            var temp4;\n                                                            temp4, memory[0x03c0:0x03e0] = address(storage[0x00]).staticcall.gas(msg.gas)(memory[0x035c:0x0380]);\n                                                        \n                                                            if (!temp4) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0320:0x0340] = memory[0x03c0:0x03e0];\n                                                        \n                                                            if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0400:0x0420] = 0xa9059cbb;\n                                                            memory[0x0420:0x0440] = storage[0x01];\n                                                            memory[0x0440:0x0460] = memory[0x0320:0x0340];\n                                                            var temp5;\n                                                            temp5, memory[0x04a0:0x04c0] = address(storage[0x00]).call.gas(msg.gas)(memory[0x041c:0x0460]);\n                                                        \n                                                            if (!temp5) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x03e0:0x0400] = memory[0x04a0:0x04c0];\n                                                            memory[0x04c0:0x04e0] = 0x08c379a0;\n                                                            memory[0x04e0:0x0500] = 0x20;\n                                                            memory[0x0500:0x0520] = 0x0f;\n                                                            memory[0x0520:0x0540] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n                                                        \n                                                            if (memory[0x03e0:0x0400]) { selfdestruct(storage[0x01]); }\n                                                            else { revert(memory[0x04dc:0x0560]); }\n                                                        } else { revert(memory[0x00:0x00]); }\n                                                    } else if (!msg.value) {\n                                                        memory[0x0140:0x0160] = 0x00;\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        var temp6 = !storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x06;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                    \n                                                        if (!((storage[keccak256(memory[0xc0:0xe0]) + 0x01] < storage[0x0a]) | temp6)) {\n                                                        label_38F0:\n                                                        \n                                                            if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0180:0x01a0] = 0xa9059cbb;\n                                                            memory[0x01a0:0x01c0] = msg.sender;\n                                                            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n                                                            var temp7;\n                                                            temp7, memory[0x0220:0x0240] = address(storage[0x00]).call.gas(msg.gas)(memory[0x019c:0x01e0]);\n                                                        \n                                                            if (!temp7) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0160:0x0180] = memory[0x0220:0x0240];\n                                                            memory[0x0240:0x0260] = 0x08c379a0;\n                                                            memory[0x0260:0x0280] = 0x20;\n                                                            memory[0x0280:0x02a0] = 0x0f;\n                                                            memory[0x02a0:0x02c0] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n                                                        \n                                                            if (!memory[0x0160:0x0180]) { revert(memory[0x025c:0x02e0]); }\n                                                        \n                                                            memory[0x02e0:0x0300] = memory[0x0140:0x0160];\n                                                            log(memory[0x02e0:0x0300], [0x319886960989451362e0df29ecf7a2b292784275dcc71a52dd1e11eefcc73393, msg.sender]);\n                                                            memory[0x00:0x20] = memory[0x0140:0x0160];\n                                                            return memory[0x00:0x20];\n                                                        } else {\n                                                            var0 = 0x0140;\n                                                            var temp8 = memory[var0:var0 + 0x20];\n                                                            memory[0xe0:0x0100] = msg.sender;\n                                                            memory[0xc0:0xe0] = 0x06;\n                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                        \n                                                            if (memory[var0:var0 + 0x20] + storage[keccak256(memory[0xc0:0xe0])] < temp8) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.sender;\n                                                            memory[0xc0:0xe0] = 0x06;\n                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                            var temp9 = var0;\n                                                            memory[temp9:temp9 + 0x20] = memory[temp9:temp9 + 0x20] + storage[keccak256(memory[0xc0:0xe0])];\n                                                            memory[0xe0:0x0100] = msg.sender;\n                                                            memory[0xc0:0xe0] = 0x06;\n                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                            var temp10 = keccak256(memory[0xc0:0xe0]);\n                                                            storage[temp10] = 0x00;\n                                                            storage[temp10 + 0x01] = 0x00;\n                                                            storage[temp10 + 0x02] = 0x00;\n                                                            goto label_38F0;\n                                                        }\n                                                    } else { revert(memory[0x00:0x00]); }\n                                                } else if (!msg.value) {\n                                                    memory[0x0140:0x0160] = 0x00;\n                                                    memory[0xe0:0x0100] = msg.sender;\n                                                    memory[0xc0:0xe0] = 0x0d;\n                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                \n                                                    if (!storage[keccak256(memory[0xc0:0xe0])]) {\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x07;\n                                                        memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        var0 = memory[0x0140:0x0160];\n                                                        var1 = memory[0x0160:0x0180];\n                                                        var var2 = memory[0x0180:0x01a0];\n                                                        memory[0x01c0:0x01e0] = 0xce96fe20;\n                                                        memory[0x01e0:0x0200] = msg.sender;\n                                                        var var3 = memory[0x01e0:0x0200];\n                                                        var var4 = 0x06;\n                                                        // Unhandled termination\n                                                    } else {\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x0d;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x0d;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                        storage[keccak256(memory[0xc0:0xe0]) + 0x02] = 0x00;\n                                                    \n                                                        if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0320:0x0340] = 0xa9059cbb;\n                                                        memory[0x0340:0x0360] = msg.sender;\n                                                        memory[0x0360:0x0380] = memory[0x0140:0x0160];\n                                                        var temp11;\n                                                        temp11, memory[0x03c0:0x03e0] = address(storage[0x00]).call.gas(msg.gas)(memory[0x033c:0x0380]);\n                                                    \n                                                        if (!temp11) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0300:0x0320] = memory[0x03c0:0x03e0];\n                                                        memory[0x03e0:0x0400] = 0x08c379a0;\n                                                        memory[0x0400:0x0420] = 0x20;\n                                                        memory[0x0420:0x0440] = 0x0f;\n                                                        memory[0x0440:0x0460] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n                                                    \n                                                        if (!memory[0x0300:0x0320]) { revert(memory[0x03fc:0x0480]); }\n                                                    \n                                                        memory[0x0480:0x04a0] = memory[0x0140:0x0160];\n                                                        log(memory[0x0480:0x04a0], [0xbd0f93dba4ea8f4fd8b7fa83e8559d5fa7fabd5300477bfaf2e99524609f17c5, msg.sender]);\n                                                        memory[0x00:0x20] = memory[0x0140:0x0160];\n                                                        return memory[0x00:0x20];\n                                                    }\n                                                } else { revert(memory[0x00:0x00]); }\n                                            } else if (!msg.value) {\n                                                var0 = msg.data[0x04:0x24];\n                                            \n                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                            \n                                                memory[0x0140:0x0160] = storage[0x0a];\n                                                memory[0x01a0:0x01c0] = 0x08c379a0;\n                                                memory[0x01c0:0x01e0] = 0x20;\n                                                memory[0x01e0:0x0200] = 0x14;\n                                                memory[0x0200:0x0220] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                                                var0 = memory[0x0140:0x0160];\n                                                var1 = 0x06;\n                                                // Unhandled termination\n                                            } else { revert(memory[0x00:0x00]); }\n                                        } else if (!msg.value) {\n                                            var0 = msg.data[0x24:0x44];\n                                        \n                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0x0140:0x0160] = 0x08c379a0;\n                                            memory[0x0160:0x0180] = 0x20;\n                                            memory[0x0180:0x01a0] = 0x0f;\n                                            memory[0x01a0:0x01c0] = 0x4e6f742063757272656e74204149440000000000000000000000000000000000;\n                                        \n                                            if (msg.data[0x04:0x24] != storage[0x0a]) { revert(memory[0x015c:0x01e0]); }\n                                        \n                                            memory[0x0220:0x0240] = 0x08c379a0;\n                                            memory[0x0240:0x0260] = 0x20;\n                                            memory[0x0260:0x0280] = 0x14;\n                                            memory[0x0280:0x02a0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                                            var0 = memory[0x0140:0x0160];\n                                            var1 = memory[0x0160:0x0180];\n                                            var2 = memory[0x0180:0x01a0];\n                                            var3 = memory[0x01a0:0x01c0];\n                                            var4 = memory[0x01c0:0x01e0];\n                                            var var5 = 0x06;\n                                            // Unhandled termination\n                                        } else { revert(memory[0x00:0x00]); }\n                                    } else if (!msg.value) {\n                                        memory[0x01a0:0x01c0] = 0x08c379a0;\n                                        memory[0x01c0:0x01e0] = 0x20;\n                                        memory[0x01e0:0x0200] = 0x1d;\n                                        memory[0x0200:0x0220] = 0x42696464696e67207068617365206f6620414944206e6f74206f766572000000;\n                                        memory[0xe0:0x0100] = msg.sender;\n                                        memory[0xc0:0xe0] = 0x09;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = storage[keccak256(memory[0xc0:0xe0]) + 0x02] < storage[0x0a];\n                                        var1 = memory[0x0140:0x0160];\n                                        var2 = 0x06;\n                                        // Unhandled termination\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    memory[0x0140:0x0160] = 0x08c379a0;\n                                    memory[0x0160:0x0180] = 0x20;\n                                    memory[0x0180:0x01a0] = 0x13;\n                                    memory[0x01a0:0x01c0] = 0x4e6f742063757272656e742061756374696f6e00000000000000000000000000;\n                                \n                                    if (msg.data[0x04:0x24] != storage[0x0a]) { revert(memory[0x015c:0x01e0]); }\n                                \n                                    memory[0x0220:0x0240] = 0x08c379a0;\n                                    memory[0x0240:0x0260] = 0x20;\n                                    memory[0x0260:0x0280] = 0x14;\n                                    memory[0x0280:0x02a0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                                    var0 = memory[0x0140:0x0160];\n                                    var1 = memory[0x0160:0x0180];\n                                    var2 = memory[0x0180:0x01a0];\n                                    var3 = memory[0x01a0:0x01c0];\n                                    var4 = memory[0x01c0:0x01e0];\n                                    var5 = 0x06;\n                                    // Unhandled termination\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                var0 = msg.data[0x04:0x24];\n                            \n                                if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0x0140:0x0160] = 0x08c379a0;\n                                memory[0x0160:0x0180] = 0x20;\n                                memory[0x0180:0x01a0] = 0x0a;\n                                memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                            \n                                if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                            \n                                var0 = memory[0x0140:0x0160];\n                                var1 = memory[0x0160:0x0180];\n                                var2 = memory[0x0180:0x01a0];\n                                var3 = memory[0x01a0:0x01c0];\n                                var4 = memory[0x01c0:0x01e0];\n                                memory[0x0200:0x0220] = 0x2acd2e64;\n                                memory[0x0220:0x0240] = msg.data[0x04:0x24];\n                                var5 = memory[0x0220:0x0240];\n                                var var6 = 0x06;\n                                // Unhandled termination\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            memory[0x0140:0x0160] = 0x08c379a0;\n                            memory[0x0160:0x0180] = 0x20;\n                            memory[0x0180:0x01a0] = 0x2e;\n                            memory[0x01a0:0x01c0] = 0x41756374696f6e206e6f742066696e616c6973656420796574206f72206e6f20;\n                            memory[0x01c0:0x01e0] = 0x61756374696f6e20746f20656e64000000000000000000000000000000000000;\n                            memory[0xc0:0xe0] = 0x0b;\n                        \n                            if (storage[keccak256(memory[0xc0:0xe0])] <= 0x00) { revert(memory[0x015c:0x0200]); }\n                        \n                            memory[0x0200:0x0220] = 0x08c379a0;\n                            memory[0x0220:0x0240] = 0x20;\n                            memory[0x0240:0x0260] = 0x0f;\n                            memory[0x0260:0x0280] = 0x4c6f636b7570206e6f74206f7665720000000000000000000000000000000000;\n                            memory[0xc0:0xe0] = 0x0b;\n                        \n                            if (block.number < storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x021c:0x02a0]); }\n                        \n                            memory[0x02a0:0x02c0] = 0x0140;\n                            var0 = memory[memory[0x02a0:0x02c0]:memory[0x02a0:0x02c0] + 0x20];\n                            memory[0x02a0:0x02c0] = memory[0x02a0:0x02c0] + 0x20;\n                        \n                            if (memory[0x02a0:0x02c0] >= 0x02a0) {\n                            label_2581:\n                                memory[0x02c0:0x02e0] = 0x2acd2e64;\n                                memory[0x02e0:0x0300] = 0x01;\n                                var1 = memory[0x02e0:0x0300];\n                                var2 = 0x06;\n                                // Unhandled termination\n                            } else {\n                            label_257D:\n                                var1 = memory[memory[0x02a0:0x02c0]:memory[0x02a0:0x02c0] + 0x20];\n                                memory[0x02a0:0x02c0] = memory[0x02a0:0x02c0] + 0x20;\n                            \n                                if (memory[0x02a0:0x02c0] >= 0x02a0) { goto label_2581; }\n                                else { goto label_257D; }\n                            }\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        var0 = memory[0x0140:0x0160];\n                        var1 = 0x06;\n                        // Unhandled termination\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    memory[0x0160:0x0180] = 0x08c379a0;\n                    memory[0x0180:0x01a0] = 0x20;\n                    memory[0x01a0:0x01c0] = 0x14;\n                    memory[0x01c0:0x01e0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                    var0 = 0x06;\n                    // Unhandled termination\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0x0140:0x0160] = 0x08c379a0;\n                memory[0x0160:0x0180] = 0x20;\n                memory[0x0180:0x01a0] = 0x0a;\n                memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n            \n                if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n            \n                memory[0x01e0:0x0200] = 0x08c379a0;\n                memory[0x0200:0x0220] = 0x20;\n                memory[0x0220:0x0240] = 0x0f;\n                memory[0x0240:0x0260] = 0x41756374696f6e206f6e676f696e670000000000000000000000000000000000;\n                memory[0xc0:0xe0] = 0x0b;\n            \n                if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x01fc:0x0280]); }\n            \n                memory[0x0280:0x02a0] = storage[0x0c];\n                storage[0x0c] = 0x00;\n            \n                if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n            \n                if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n            \n                memory[0x02c0:0x02e0] = 0xa9059cbb;\n                memory[0x02e0:0x0300] = storage[0x01];\n                memory[0x0300:0x0320] = memory[0x0280:0x02a0];\n                var temp42;\n                temp42, memory[0x0360:0x0380] = address(storage[0x00]).call.gas(msg.gas)(memory[0x02dc:0x0320]);\n            \n                if (!temp42) { revert(memory[0x00:0x00]); }\n            \n                memory[0x02a0:0x02c0] = memory[0x0360:0x0380];\n                memory[0x0380:0x03a0] = 0x08c379a0;\n                memory[0x03a0:0x03c0] = 0x20;\n                memory[0x03c0:0x03e0] = 0x0f;\n                memory[0x03e0:0x0400] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n            \n                if (memory[0x02a0:0x02c0]) { stop(); }\n                else { revert(memory[0x039c:0x0420]); }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x0140:0x0160] = 0x08c379a0;\n            memory[0x0160:0x0180] = 0x20;\n            memory[0x0180:0x01a0] = 0x0a;\n            memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n        \n            if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n        \n            memory[0x01e0:0x0200] = 0x08c379a0;\n            memory[0x0200:0x0220] = 0x20;\n            memory[0x0220:0x0240] = 0x12;\n            memory[0x0240:0x0260] = 0x496e76616c69642073746172745374616b650000000000000000000000000000;\n        \n            if (msg.data[0x24:0x44] <= msg.data[0x44:0x64]) { revert(memory[0x01fc:0x0280]); }\n        \n            memory[0x0280:0x02a0] = 0x08c379a0;\n            memory[0x02a0:0x02c0] = 0x20;\n            memory[0x02c0:0x02e0] = 0x12;\n            memory[0x02e0:0x0300] = 0x496e76616c6420736c6f74206e756d6265720000000000000000000000000000;\n        \n            if (!((msg.data[0xa4:0xc4] > 0x00) & (msg.data[0xa4:0xc4] <= 0xc8))) { revert(memory[0x029c:0x0320]); }\n        \n            memory[0x0320:0x0340] = 0x08c379a0;\n            memory[0x0340:0x0360] = 0x20;\n            memory[0x0360:0x0380] = 0x1a;\n            memory[0x0380:0x03a0] = 0x5374617274206265666f72652063757272656e7420626c6f636b000000000000;\n        \n            if (msg.data[0x04:0x24] < block.number) { revert(memory[0x033c:0x03c0]); }\n        \n            memory[0x03c0:0x03e0] = 0x08c379a0;\n            memory[0x03e0:0x0400] = 0x20;\n            memory[0x0400:0x0420] = 0x22;\n            memory[0x0420:0x0440] = 0x52657365727665207374616b652068617320746f206265206174206c65617374;\n            memory[0x0440:0x0460] = 0x2031000000000000000000000000000000000000000000000000000000000000;\n        \n            if (msg.data[0x44:0x64] <= 0x00) { revert(memory[0x03dc:0x0480]); }\n        \n            memory[0x0480:0x04a0] = 0x08c379a0;\n            memory[0x04a0:0x04c0] = 0x20;\n            memory[0x04c0:0x04e0] = 0x13;\n            memory[0x04e0:0x0500] = 0x456e642063757272656e742061756374696f6e00000000000000000000000000;\n            memory[0xc0:0xe0] = 0x0b;\n        \n            if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x049c:0x0520]); }\n        \n            var0 = 0x0a;\n        \n            if (storage[var0] + 0x01 < storage[var0]) { revert(memory[0x00:0x00]); }\n        \n            var temp43 = var0;\n            storage[temp43] = storage[temp43] + 0x01;\n        \n            if (!msg.data[0x64:0x84]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x64:0x84];\n            var1 = 0x01;\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x24:0x44] - msg.data[0x44:0x64];\n            var3 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var3 < var2) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var2 < var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01;\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x24:0x44] - msg.data[0x44:0x64];\n            var3 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var3 < var2) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0520:0x0540] = (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var2) - var1 / var0;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24] + msg.data[0x64:0x84];\n            var1 = 0x19;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] + var1 < var0) { revert(memory[0x00:0x00]); }\n        \n            var0 = 0x19;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0540:0x0560] = msg.data[0x04:0x24] + msg.data[0x64:0x84] + var0;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x03] = msg.data[0x04:0x24];\n            var temp44 = memory[0x0540:0x0560];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x04] = temp44;\n        \n            if (memory[0x0540:0x0560] + msg.data[0x84:0xa4] < memory[0x0540:0x0560]) { revert(memory[0x00:0x00]); }\n        \n            var temp45 = memory[0x0540:0x0560] + msg.data[0x84:0xa4];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x01] = temp45;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x05] = msg.data[0x24:0x44];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x06] = msg.data[0x44:0x64];\n            var temp46 = memory[0x0520:0x0540];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x07] = temp46;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x08] = msg.data[0xa4:0xc4];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0])] = 0x00;\n            var0 = 0x0c;\n        \n            if (storage[var0] + msg.data[0xc4:0xe4] < storage[var0]) { revert(memory[0x00:0x00]); }\n        \n            var temp47 = var0;\n            storage[temp47] = storage[temp47] + msg.data[0xc4:0xe4];\n            memory[0xc0:0xe0] = 0x0b;\n        \n            if (!storage[keccak256(memory[0xc0:0xe0]) + 0x08]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xc0:0xe0] = 0x0b;\n            var temp48 = storage[0x0c] / storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x09] = temp48;\n        \n            if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0580:0x05a0] = 0x23b872dd;\n            memory[0x05a0:0x05c0] = msg.sender;\n            memory[0x05c0:0x05e0] = address(this);\n            memory[0x05e0:0x0600] = msg.data[0xc4:0xe4];\n            var temp49;\n            temp49, memory[0x0640:0x0660] = address(storage[0x00]).call.gas(msg.gas)(memory[0x059c:0x0600]);\n        \n            if (!temp49) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0560:0x0580] = memory[0x0640:0x0660];\n            memory[0x0660:0x0680] = 0x08c379a0;\n            memory[0x0680:0x06a0] = 0x20;\n            memory[0x06a0:0x06c0] = 0x0f;\n            memory[0x06c0:0x06e0] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n        \n            if (!memory[0x0560:0x0580]) { revert(memory[0x067c:0x0700]); }\n        \n            memory[0x0700:0x0720] = storage[0x0a];\n            memory[0x0720:0x0740] = msg.data[0x04:0x24];\n            memory[0x0740:0x0760] = memory[0x0540:0x0560];\n        \n            if (memory[0x0540:0x0560] + msg.data[0x84:0xa4] < memory[0x0540:0x0560]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0760:0x0780] = memory[0x0540:0x0560] + msg.data[0x84:0xa4];\n            memory[0x0780:0x07a0] = msg.data[0x24:0x44];\n            memory[0x07a0:0x07c0] = msg.data[0x44:0x64];\n            memory[0x07c0:0x07e0] = memory[0x0520:0x0540];\n            memory[0x07e0:0x0800] = msg.data[0xa4:0xc4];\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x0800:0x0820] = storage[keccak256(memory[0xc0:0xe0]) + 0x09];\n            log(memory[0x0700:0x0820], [0xede627ce4bced8a9b0a39e006c0a1d534d530222904131c567cc925f8090e972]);\n            stop();\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp53 = block.number < storage[keccak256(memory[0xc0:0xe0]) + 0x04];\n            memory[0xc0:0xe0] = 0x0b;\n            var temp54 = (storage[keccak256(memory[0xc0:0xe0]) + 0x01] > 0x00) & temp53;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp55 = storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n            memory[0xc0:0xe0] = 0x0b;\n            var temp56 = (storage[keccak256(memory[0xc0:0xe0]) + 0x02] < temp55) & temp54;\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x00:0x20] = !storage[keccak256(memory[0xc0:0xe0])] & temp56;\n            var-1 = memory[0x00:0x20];\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp52 = !storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x00:0x20] = (storage[keccak256(memory[0xc0:0xe0])] > 0x00) | temp52;\n            var-1 = memory[0x00:0x20];\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0xe0]) + 0x05];\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0xe0]) + 0x03];\n        \n            if (block.number > memory[0x0180:0x01a0]) {\n                memory[0xc0:0xe0] = 0x0b;\n            \n                if (!storage[keccak256(memory[0xc0:0xe0]) + 0x07]) {\n                    var-1 = 0x00;\n                    goto label_0217;\n                } else if (block.number >= memory[0x0180:0x01a0]) {\n                    var-1 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                    var0 = storage[keccak256(memory[0xc0:0xe0]) + 0x07];\n                \n                    if (block.number < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp50 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                \n                    if ((storage[keccak256(memory[0xc0:0xe0]) + 0x07] * temp50) / var0 != var-1) { revert(memory[0x00:0x00]); }\n                \n                    if (block.number < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp51 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                    var-1 = storage[keccak256(memory[0xc0:0xe0]) + 0x07] * temp51;\n                \n                label_0217:\n                    memory[0xc0:0xe0] = 0x0b;\n                \n                    if (memory[0x0160:0x0180] < storage[keccak256(memory[0xc0:0xe0]) + 0x06]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xc0:0xe0] = 0x0b;\n                    var0 = memory[0x0160:0x0180] - storage[keccak256(memory[0xc0:0xe0]) + 0x06];\n                \n                    if (var-1 <= var0) {\n                        memory[0x01a0:0x01c0] = var-1;\n                    \n                        if (memory[0x0160:0x0180] < memory[0x01a0:0x01c0]) { revert(memory[0x00:0x00]); }\n                    \n                    label_0272:\n                        memory[0x00:0x20] = memory[0x0160:0x0180] - memory[0x01a0:0x01c0];\n                        var-1 = memory[0x00:0x20];\n                        // Error: Could not resolve jump destination!\n                    } else {\n                        var1 = var0;\n                        memory[0x01a0:0x01c0] = var1;\n                    \n                        if (memory[0x0160:0x0180] >= memory[0x01a0:0x01c0]) { goto label_0272; }\n                        else { revert(memory[0x00:0x00]); }\n                    }\n                } else { revert(memory[0x00:0x00]); }\n            } else {\n                memory[0x00:0x20] = memory[0x0160:0x0180];\n                var-1 = memory[0x00:0x20];\n                // Error: Could not resolve jump destination!\n            }\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            var-1 = memory[0x0140:0x0160];\n            var0 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            memory[0x0160:0x0180] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0180:0x01a0] = 0x00;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x03;\n            memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (memory[0x01a0:0x01c0] <= 0x00) {\n                memory[0x00:0x20] = memory[0x0180:0x01a0];\n                var-2 = memory[0x00:0x20];\n                // Error: Could not resolve jump destination!\n            } else {\n                memory[0x0200:0x0220] = 0x08c379a0;\n                memory[0x0220:0x0240] = 0x20;\n                memory[0x0240:0x0260] = 0x27;\n                memory[0x0260:0x0280] = 0x49732062696464657220616e642061756374696f6e206e6f742066696e616c69;\n                memory[0x0280:0x02a0] = 0x7365642079657400000000000000000000000000000000000000000000000000;\n                var-2 = memory[0x0140:0x0160];\n                var-1 = memory[0x0160:0x0180];\n                var0 = memory[0x0180:0x01a0];\n                var1 = memory[0x01a0:0x01c0];\n                var2 = 0x06;\n                // Unhandled termination\n            }\n        } else if (memory[0x00:0x20] != 0xa3169b14) {\n            if (memory[0x00:0x20] != 0x40fff189) {\n                if (memory[0x00:0x20] != 0x454a2ab3) {\n                    if (memory[0x00:0x20] != 0x579632a9) {\n                        if (0x00) {\n                            memory[0x0160:0x0180] = var-1;\n                            memory[0x0140:0x0160] = var-2;\n                            memory[0x0180:0x01a0] = 0x08c379a0;\n                            memory[0x01a0:0x01c0] = 0x20;\n                            memory[0x01c0:0x01e0] = 0x10;\n                            memory[0x01e0:0x0200] = 0x4e6f206c6f636b757020746f20656e6400000000000000000000000000000000;\n                            memory[0xc0:0xe0] = 0x0b;\n                        \n                            if (storage[keccak256(memory[0xc0:0xe0]) + 0x01] <= 0x00) { revert(memory[0x019c:0x0220]); }\n                        \n                            memory[0xc0:0xe0] = 0x0b;\n                            memory[0x0220:0x0240] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                            memory[0x0240:0x0260] = 0x00;\n                        \n                            if (block.timestamp + 0x4f1a00 < block.timestamp) { revert(memory[0x00:0x00]); }\n                        \n                            storage[0x02] = block.timestamp + 0x4f1a00;\n                        \n                            if (!memory[0x0140:0x0160]) {\n                                memory[0x0340:0x0360] = 0x00;\n                                var-2 = 0x0360;\n                                memory[var-2:var-2 + 0x20] = 0x00;\n                                var-1 = 0xc8;\n                                var0 = memory[0x0360:0x0380];\n                            \n                                if (var0 >= 0xc8) { revert(memory[0x00:0x00]); }\n                            \n                            label_1BCF:\n                                memory[0xc0:0xe0] = 0x04;\n                                memory[0x0340:0x0360] = storage[keccak256(memory[0xc0:0xe0]) + var0];\n                            \n                                if (!memory[0x0340:0x0360]) { goto label_1E8B; }\n                            \n                                if (!memory[0x0140:0x0160]) {\n                                label_1E32:\n                                    memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                    memory[0xc0:0xe0] = 0x03;\n                                    storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                    memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                    memory[0xc0:0xe0] = 0x0d;\n                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                \n                                    if (!storage[keccak256(memory[0xc0:0xe0])]) {\n                                        var temp18 = var-2;\n                                        var temp19 = memory[temp18:temp18 + 0x20] + 0x01;\n                                        memory[temp18:temp18 + 0x20] = temp19;\n                                    \n                                        if (var-1 != temp19) {\n                                        label_1BBE:\n                                            var0 = memory[0x0360:0x0380];\n                                        \n                                            if (var0 < 0xc8) { goto label_1BCF; }\n                                            else { revert(memory[0x00:0x00]); }\n                                        } else {\n                                        label_1E8B:\n                                            memory[0xc0:0xe0] = 0x04;\n                                            var temp20 = keccak256(memory[0xc0:0xe0]);\n                                            storage[temp20] = 0x00;\n                                            storage[temp20 + 0x01] = 0x00;\n                                            storage[temp20 + 0x02] = 0x00;\n                                            storage[temp20 + 0x03] = 0x00;\n                                            storage[temp20 + 0x04] = 0x00;\n                                            storage[temp20 + 0x05] = 0x00;\n                                            storage[temp20 + 0x06] = 0x00;\n                                            storage[temp20 + 0x07] = 0x00;\n                                            storage[temp20 + 0x08] = 0x00;\n                                            storage[temp20 + 0x09] = 0x00;\n                                            storage[temp20 + 0x0a] = 0x00;\n                                            storage[temp20 + 0x0b] = 0x00;\n                                            storage[temp20 + 0x0c] = 0x00;\n                                            storage[temp20 + 0x0d] = 0x00;\n                                            storage[temp20 + 0x0e] = 0x00;\n                                            storage[temp20 + 0x0f] = 0x00;\n                                            storage[temp20 + 0x10] = 0x00;\n                                            storage[temp20 + 0x11] = 0x00;\n                                            storage[temp20 + 0x12] = 0x00;\n                                            storage[temp20 + 0x13] = 0x00;\n                                            storage[temp20 + 0x14] = 0x00;\n                                            storage[temp20 + 0x15] = 0x00;\n                                            storage[temp20 + 0x16] = 0x00;\n                                            storage[temp20 + 0x17] = 0x00;\n                                            storage[temp20 + 0x18] = 0x00;\n                                            storage[temp20 + 0x19] = 0x00;\n                                            storage[temp20 + 0x1a] = 0x00;\n                                            storage[temp20 + 0x1b] = 0x00;\n                                            storage[temp20 + 0x1c] = 0x00;\n                                            storage[temp20 + 0x1d] = 0x00;\n                                            storage[temp20 + 0x1e] = 0x00;\n                                            storage[temp20 + 0x1f] = 0x00;\n                                            storage[temp20 + 0x20] = 0x00;\n                                            storage[temp20 + 0x21] = 0x00;\n                                            storage[temp20 + 0x22] = 0x00;\n                                            storage[temp20 + 0x23] = 0x00;\n                                            storage[temp20 + 0x24] = 0x00;\n                                            storage[temp20 + 0x25] = 0x00;\n                                            storage[temp20 + 0x26] = 0x00;\n                                            storage[temp20 + 0x27] = 0x00;\n                                            storage[temp20 + 0x28] = 0x00;\n                                            storage[temp20 + 0x29] = 0x00;\n                                            storage[temp20 + 0x2a] = 0x00;\n                                            storage[temp20 + 0x2b] = 0x00;\n                                            storage[temp20 + 0x2c] = 0x00;\n                                            storage[temp20 + 0x2d] = 0x00;\n                                            storage[temp20 + 0x2e] = 0x00;\n                                            storage[temp20 + 0x2f] = 0x00;\n                                            storage[temp20 + 0x30] = 0x00;\n                                            storage[temp20 + 0x31] = 0x00;\n                                            storage[temp20 + 0x32] = 0x00;\n                                            storage[temp20 + 0x33] = 0x00;\n                                            storage[temp20 + 0x34] = 0x00;\n                                            storage[temp20 + 0x35] = 0x00;\n                                            storage[temp20 + 0x36] = 0x00;\n                                            storage[temp20 + 0x37] = 0x00;\n                                            storage[temp20 + 0x38] = 0x00;\n                                            storage[temp20 + 0x39] = 0x00;\n                                            storage[temp20 + 0x3a] = 0x00;\n                                            storage[temp20 + 0x3b] = 0x00;\n                                            storage[temp20 + 0x3c] = 0x00;\n                                            storage[temp20 + 0x3d] = 0x00;\n                                            storage[temp20 + 0x3e] = 0x00;\n                                            storage[temp20 + 0x3f] = 0x00;\n                                            storage[temp20 + 0x40] = 0x00;\n                                            storage[temp20 + 0x41] = 0x00;\n                                            storage[temp20 + 0x42] = 0x00;\n                                            storage[temp20 + 0x43] = 0x00;\n                                            storage[temp20 + 0x44] = 0x00;\n                                            storage[temp20 + 0x45] = 0x00;\n                                            storage[temp20 + 0x46] = 0x00;\n                                            storage[temp20 + 0x47] = 0x00;\n                                            storage[temp20 + 0x48] = 0x00;\n                                            storage[temp20 + 0x49] = 0x00;\n                                            storage[temp20 + 0x4a] = 0x00;\n                                            storage[temp20 + 0x4b] = 0x00;\n                                            storage[temp20 + 0x4c] = 0x00;\n                                            storage[temp20 + 0x4d] = 0x00;\n                                            storage[temp20 + 0x4e] = 0x00;\n                                            storage[temp20 + 0x4f] = 0x00;\n                                            storage[temp20 + 0x50] = 0x00;\n                                            storage[temp20 + 0x51] = 0x00;\n                                            storage[temp20 + 0x52] = 0x00;\n                                            storage[temp20 + 0x53] = 0x00;\n                                            storage[temp20 + 0x54] = 0x00;\n                                            storage[temp20 + 0x55] = 0x00;\n                                            storage[temp20 + 0x56] = 0x00;\n                                            storage[temp20 + 0x57] = 0x00;\n                                            storage[temp20 + 0x58] = 0x00;\n                                            storage[temp20 + 0x59] = 0x00;\n                                            storage[temp20 + 0x5a] = 0x00;\n                                            storage[temp20 + 0x5b] = 0x00;\n                                            storage[temp20 + 0x5c] = 0x00;\n                                            storage[temp20 + 0x5d] = 0x00;\n                                            storage[temp20 + 0x5e] = 0x00;\n                                            storage[temp20 + 0x5f] = 0x00;\n                                            storage[temp20 + 0x60] = 0x00;\n                                            storage[temp20 + 0x61] = 0x00;\n                                            storage[temp20 + 0x62] = 0x00;\n                                            storage[temp20 + 0x63] = 0x00;\n                                            storage[temp20 + 0x64] = 0x00;\n                                            storage[temp20 + 0x65] = 0x00;\n                                            storage[temp20 + 0x66] = 0x00;\n                                            storage[temp20 + 0x67] = 0x00;\n                                            storage[temp20 + 0x68] = 0x00;\n                                            storage[temp20 + 0x69] = 0x00;\n                                            storage[temp20 + 0x6a] = 0x00;\n                                            storage[temp20 + 0x6b] = 0x00;\n                                            storage[temp20 + 0x6c] = 0x00;\n                                            storage[temp20 + 0x6d] = 0x00;\n                                            storage[temp20 + 0x6e] = 0x00;\n                                            storage[temp20 + 0x6f] = 0x00;\n                                            storage[temp20 + 0x70] = 0x00;\n                                            storage[temp20 + 0x71] = 0x00;\n                                            storage[temp20 + 0x72] = 0x00;\n                                            storage[temp20 + 0x73] = 0x00;\n                                            storage[temp20 + 0x74] = 0x00;\n                                            storage[temp20 + 0x75] = 0x00;\n                                            storage[temp20 + 0x76] = 0x00;\n                                            storage[temp20 + 0x77] = 0x00;\n                                            storage[temp20 + 0x78] = 0x00;\n                                            storage[temp20 + 0x79] = 0x00;\n                                            storage[temp20 + 0x7a] = 0x00;\n                                            storage[temp20 + 0x7b] = 0x00;\n                                            storage[temp20 + 0x7c] = 0x00;\n                                            storage[temp20 + 0x7d] = 0x00;\n                                            storage[temp20 + 0x7e] = 0x00;\n                                            storage[temp20 + 0x7f] = 0x00;\n                                            storage[temp20 + 0x80] = 0x00;\n                                            storage[temp20 + 0x81] = 0x00;\n                                            storage[temp20 + 0x82] = 0x00;\n                                            storage[temp20 + 0x83] = 0x00;\n                                            storage[temp20 + 0x84] = 0x00;\n                                            storage[temp20 + 0x85] = 0x00;\n                                            storage[temp20 + 0x86] = 0x00;\n                                            storage[temp20 + 0x87] = 0x00;\n                                            storage[temp20 + 0x88] = 0x00;\n                                            storage[temp20 + 0x89] = 0x00;\n                                            storage[temp20 + 0x8a] = 0x00;\n                                            storage[temp20 + 0x8b] = 0x00;\n                                            storage[temp20 + 0x8c] = 0x00;\n                                            storage[temp20 + 0x8d] = 0x00;\n                                            storage[temp20 + 0x8e] = 0x00;\n                                            storage[temp20 + 0x8f] = 0x00;\n                                            storage[temp20 + 0x90] = 0x00;\n                                            storage[temp20 + 0x91] = 0x00;\n                                            storage[temp20 + 0x92] = 0x00;\n                                            storage[temp20 + 0x93] = 0x00;\n                                            storage[temp20 + 0x94] = 0x00;\n                                            storage[temp20 + 0x95] = 0x00;\n                                            storage[temp20 + 0x96] = 0x00;\n                                            storage[temp20 + 0x97] = 0x00;\n                                            storage[temp20 + 0x98] = 0x00;\n                                            storage[temp20 + 0x99] = 0x00;\n                                            storage[temp20 + 0x9a] = 0x00;\n                                            storage[temp20 + 0x9b] = 0x00;\n                                            storage[temp20 + 0x9c] = 0x00;\n                                            storage[temp20 + 0x9d] = 0x00;\n                                            storage[temp20 + 0x9e] = 0x00;\n                                            storage[temp20 + 0x9f] = 0x00;\n                                            storage[temp20 + 0xa0] = 0x00;\n                                            storage[temp20 + 0xa1] = 0x00;\n                                            storage[temp20 + 0xa2] = 0x00;\n                                            storage[temp20 + 0xa3] = 0x00;\n                                            storage[temp20 + 0xa4] = 0x00;\n                                            storage[temp20 + 0xa5] = 0x00;\n                                            storage[temp20 + 0xa6] = 0x00;\n                                            storage[temp20 + 0xa7] = 0x00;\n                                            storage[temp20 + 0xa8] = 0x00;\n                                            storage[temp20 + 0xa9] = 0x00;\n                                            storage[temp20 + 0xaa] = 0x00;\n                                            storage[temp20 + 0xab] = 0x00;\n                                            storage[temp20 + 0xac] = 0x00;\n                                            storage[temp20 + 0xad] = 0x00;\n                                            storage[temp20 + 0xae] = 0x00;\n                                            storage[temp20 + 0xaf] = 0x00;\n                                            storage[temp20 + 0xb0] = 0x00;\n                                            storage[temp20 + 0xb1] = 0x00;\n                                            storage[temp20 + 0xb2] = 0x00;\n                                            storage[temp20 + 0xb3] = 0x00;\n                                            storage[temp20 + 0xb4] = 0x00;\n                                            storage[temp20 + 0xb5] = 0x00;\n                                            storage[temp20 + 0xb6] = 0x00;\n                                            storage[temp20 + 0xb7] = 0x00;\n                                            storage[temp20 + 0xb8] = 0x00;\n                                            storage[temp20 + 0xb9] = 0x00;\n                                            storage[temp20 + 0xba] = 0x00;\n                                            storage[temp20 + 0xbb] = 0x00;\n                                            storage[temp20 + 0xbc] = 0x00;\n                                            storage[temp20 + 0xbd] = 0x00;\n                                            storage[temp20 + 0xbe] = 0x00;\n                                            storage[temp20 + 0xbf] = 0x00;\n                                            storage[temp20 + 0xc0] = 0x00;\n                                            storage[temp20 + 0xc1] = 0x00;\n                                            storage[temp20 + 0xc2] = 0x00;\n                                            storage[temp20 + 0xc3] = 0x00;\n                                            storage[temp20 + 0xc4] = 0x00;\n                                            storage[temp20 + 0xc5] = 0x00;\n                                            storage[temp20 + 0xc6] = 0x00;\n                                            storage[temp20 + 0xc7] = 0x00;\n                                            memory[0xc0:0xe0] = 0x0b;\n                                            var temp21 = keccak256(memory[0xc0:0xe0]);\n                                            storage[temp21] = 0x00;\n                                            storage[temp21 + 0x01] = 0x00;\n                                            storage[temp21 + 0x02] = 0x00;\n                                            storage[temp21 + 0x03] = 0x00;\n                                            storage[temp21 + 0x04] = 0x00;\n                                            storage[temp21 + 0x05] = 0x00;\n                                            storage[temp21 + 0x06] = 0x00;\n                                            storage[temp21 + 0x07] = 0x00;\n                                            storage[temp21 + 0x08] = 0x00;\n                                            storage[temp21 + 0x09] = 0x00;\n                                            storage[temp21 + 0x0a] = 0x00;\n                                            // Error: Could not resolve jump destination!\n                                        }\n                                    } else {\n                                        memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                        var temp22 = var-2;\n                                        var temp23 = memory[temp22:temp22 + 0x20] + 0x01;\n                                        memory[temp22:temp22 + 0x20] = temp23;\n                                    \n                                        if (var-1 != temp23) { goto label_1BBE; }\n                                        else { goto label_1E8B; }\n                                    }\n                                } else {\n                                    memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                    memory[0xc0:0xe0] = 0x0d;\n                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                \n                                    if (!storage[keccak256(memory[0xc0:0xe0])]) {\n                                        memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        var0 = keccak256(memory[0xc0:0x0100]);\n                                        var1 = storage[var0];\n                                        memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                        memory[0xc0:0xe0] = 0x03;\n                                    \n                                        if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                            var temp24 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            var temp25 = storage[keccak256(memory[0xc0:0x0100])];\n                                            var temp26 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if ((storage[keccak256(memory[0xc0:0x0100])] * temp26) / temp25 != temp24) { revert(memory[0x00:0x00]); }\n                                        \n                                            var temp27 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if (storage[var0] + storage[keccak256(memory[0xc0:0x0100])] * temp27 < var1) { revert(memory[0x00:0x00]); }\n                                        \n                                        label_1DBB:\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                                var temp28 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var temp29 = storage[keccak256(memory[0xc0:0x0100])];\n                                                var temp30 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                            \n                                                if ((storage[keccak256(memory[0xc0:0x0100])] * temp30) / temp29 != temp28) { revert(memory[0x00:0x00]); }\n                                            \n                                                var temp31 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var1 = storage[keccak256(memory[0xc0:0x0100])] * temp31;\n                                            \n                                            label_1E2A:\n                                                var temp32 = var0;\n                                                storage[temp32] = storage[temp32] + var1;\n                                                goto label_1E32;\n                                            } else {\n                                                var1 = 0x00;\n                                                goto label_1E2A;\n                                            }\n                                        } else {\n                                            var2 = 0x00;\n                                        \n                                            if (storage[var0] + var2 >= var1) { goto label_1DBB; }\n                                            else { revert(memory[0x00:0x00]); }\n                                        }\n                                    } else {\n                                        memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                        memory[0xc0:0xe0] = 0x0d;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = keccak256(memory[0xc0:0xe0]) + 0x02;\n                                        var1 = storage[var0];\n                                        memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                        memory[0xc0:0xe0] = 0x03;\n                                    \n                                        if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                            var temp33 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            var temp34 = storage[keccak256(memory[0xc0:0x0100])];\n                                            var temp35 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if ((storage[keccak256(memory[0xc0:0x0100])] * temp35) / temp34 != temp33) { revert(memory[0x00:0x00]); }\n                                        \n                                            var temp36 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            var2 = storage[keccak256(memory[0xc0:0x0100])] * temp36;\n                                        \n                                        label_1CA3:\n                                        \n                                            if (storage[var0] + var2 < var1) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                                var temp37 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var temp38 = storage[keccak256(memory[0xc0:0x0100])];\n                                                var temp39 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                            \n                                                if ((storage[keccak256(memory[0xc0:0x0100])] * temp39) / temp38 != temp37) { revert(memory[0x00:0x00]); }\n                                            \n                                                var temp40 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var1 = storage[keccak256(memory[0xc0:0x0100])] * temp40;\n                                            \n                                            label_1D20:\n                                                var temp41 = var0;\n                                                storage[temp41] = storage[temp41] + var1;\n                                                goto label_1E32;\n                                            } else {\n                                                var1 = 0x00;\n                                                goto label_1D20;\n                                            }\n                                        } else {\n                                            var2 = 0x00;\n                                            goto label_1CA3;\n                                        }\n                                    }\n                                }\n                            } else {\n                                memory[0x02a0:0x02c0] = 0x08c379a0;\n                                memory[0x02c0:0x02e0] = 0x20;\n                                memory[0x02e0:0x0300] = 0x0d;\n                                memory[0x0300:0x0320] = 0x4e6f742066696e616c6973656400000000000000000000000000000000000000;\n                                var-2 = memory[0x0140:0x0160];\n                                var-1 = memory[0x0160:0x0180];\n                                var0 = memory[0x0180:0x01a0];\n                                var1 = memory[0x01a0:0x01c0];\n                                var2 = memory[0x01c0:0x01e0];\n                                var3 = memory[0x01e0:0x0200];\n                                var4 = memory[0x0200:0x0220];\n                                var5 = memory[0x0220:0x0240];\n                                var6 = memory[0x0240:0x0260];\n                                var var7 = 0x06;\n                                // Unhandled termination\n                            }\n                        } else if (memory[0x00:0x20] != 0xc5f0204c) {\n                            if (memory[0x00:0x20] != 0x287d274b) {\n                                if (memory[0x00:0x20] != 0x2e1bc98f) {\n                                    if (memory[0x00:0x20] != 0xa0b5323f) {\n                                        if (0x00) {\n                                            // Error: StackRead before write???\n                                            var var-2;\n                                            // Error: StackRead before write???\n                                            var var-1;\n                                            // Error: StackRead before write???\n                                            var var-3;\n                                            memory[0x0180:0x01a0] = var-1;\n                                            memory[0x0140:0x0160] = var-2;\n                                            memory[0x0160:0x0180] = var-3;\n                                        \n                                            if (!0x0186a0) { revert(memory[0x00:0x00]); }\n                                        \n                                            var-3 = 0x0186a0;\n                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                            memory[0xc0:0xe0] = 0x09;\n                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        \n                                            if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) {\n                                                var temp12 = memory[0x0160:0x0180];\n                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                memory[0xc0:0xe0] = 0x09;\n                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                var temp13 = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                var temp14 = memory[0x0160:0x0180];\n                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                memory[0xc0:0xe0] = 0x09;\n                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                            \n                                                if ((storage[keccak256(memory[0xc0:0xe0]) + 0x01] * temp14) / temp13 != temp12) { revert(memory[0x00:0x00]); }\n                                            \n                                                var temp15 = memory[0x0160:0x0180];\n                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                memory[0xc0:0xe0] = 0x09;\n                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                var-2 = storage[keccak256(memory[0xc0:0xe0]) + 0x01] * temp15;\n                                            \n                                            label_2C6B:\n                                                memory[0x01a0:0x01c0] = var-2 / var-3;\n                                                memory[0x01c0:0x01e0] = 0x08c379a0;\n                                                memory[0x01e0:0x0200] = 0x20;\n                                                memory[0x0200:0x0220] = 0x10;\n                                                memory[0x0220:0x0240] = 0x52657761726473206465706c6574656400000000000000000000000000000000;\n                                                var temp16 = memory[0x01a0:0x01c0];\n                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                memory[0xc0:0xe0] = 0x09;\n                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                            \n                                                if (storage[keccak256(memory[0xc0:0xe0])] < temp16) { revert(memory[0x01dc:0x0260]); }\n                                            \n                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                memory[0xc0:0xe0] = 0x09;\n                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                var-3 = keccak256(memory[0xc0:0xe0]);\n                                            \n                                                if (storage[var-3] < memory[0x01a0:0x01c0]) { revert(memory[0x00:0x00]); }\n                                            \n                                                var temp17 = var-3;\n                                                storage[temp17] = storage[temp17] - memory[0x01a0:0x01c0];\n                                                memory[0x00:0x20] = memory[0x01a0:0x01c0];\n                                                var-3 = memory[0x00:0x20];\n                                                // Error: Could not resolve jump destination!\n                                            } else {\n                                                var-2 = 0x00;\n                                                goto label_2C6B;\n                                            }\n                                        } else if (memory[0x00:0x20] != 0x90d209ca) {\n                                            if (memory[0x00:0x20] != 0xc396f524) {\n                                                if (memory[0x00:0x20] != 0xe335cfab) {\n                                                    if (memory[0x00:0x20] != 0x7e00ab0a) {\n                                                        if (memory[0x00:0x20] != 0x5a58cd4c) {\n                                                            if (memory[0x00:0x20] != 0xdd627dff) {\n                                                                if (memory[0x00:0x20] != 0x704fdd68) {\n                                                                    if (memory[0x00:0x20] != 0xb9f890de) {\n                                                                        if (memory[0x00:0x20] != 0x190eaaba) {\n                                                                            if (memory[0x00:0x20] != 0x151a67b4) {\n                                                                                if (memory[0x00:0x20] != 0xa9215db4) {\n                                                                                    if (memory[0x00:0x20] != 0x714436f2) {\n                                                                                        if (memory[0x00:0x20] != 0x83e98bc3) {\n                                                                                            if (memory[0x00:0x20] != 0x8146f323) {\n                                                                                                if (memory[0x00:0x20] != 0xeb91d37e) {\n                                                                                                    if (memory[0x00:0x20] != 0xbac4159d) {\n                                                                                                        if (memory[0x00:0x20] != 0x8da5cb5b) {\n                                                                                                            if (memory[0x00:0x20] != 0x573c0b0e) {\n                                                                                                                if (memory[0x00:0x20] != 0x9031d1a8) {\n                                                                                                                    if (memory[0x00:0x20] != 0xc10c9515) {\n                                                                                                                        if (memory[0x00:0x20] != 0x38494a1a) {\n                                                                                                                            if (memory[0x00:0x20] != 0x25abfdd0) {\n                                                                                                                                if (memory[0x00:0x20] != 0xca0341c6) {\n                                                                                                                                    if (memory[0x00:0x20] != 0x74d18447) {\n                                                                                                                                        if (memory[0x00:0x20] != 0x43b8063a) {\n                                                                                                                                            if (memory[0x00:0x20] != 0xd2572c8b) {\n                                                                                                                                                if (memory[0x00:0x20] != 0x78be921f) {\n                                                                                                                                                    if (memory[0x00:0x20] != 0x5d85af0c) {\n                                                                                                                                                        if (memory[0x00:0x20] != 0xca964f6d) {\n                                                                                                                                                            if (memory[0x00:0x20] != 0x965ac0af) {\n                                                                                                                                                                if (memory[0x00:0x20] != 0xfbc6ef00) {\n                                                                                                                                                                    if (memory[0x00:0x20] != 0x8cf0d66f) {\n                                                                                                                                                                        if (memory[0x00:0x20] != 0x20f8d74c) {\n                                                                                                                                                                            if (memory[0x00:0x20] != 0x0d9be7dd) {\n                                                                                                                                                                                if (memory[0x00:0x20] != 0x6ebcddb8) {\n                                                                                                                                                                                    if (memory[0x00:0x20] != 0x85245104) {\n                                                                                                                                                                                        if (memory[0x00:0x20] != 0xfc614adb) {\n                                                                                                                                                                                            if (memory[0x00:0x20] != 0xa912a558) {\n                                                                                                                                                                                                if (memory[0x00:0x20] != 0x96bcc37f) {\n                                                                                                                                                                                                    if (memory[0x00:0x20] != 0x39c6dd93) {\n                                                                                                                                                                                                        if (memory[0x00:0x20] != 0x5a8776be) {\n                                                                                                                                                                                                            if (memory[0x00:0x20] != 0x4179e36e) {\n                                                                                                                                                                                                                if (memory[0x00:0x20] != 0x078690d2) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                var var0 = msg.data[0x04:0x24];\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                                                                                                memory[0xc0:0xe0] = 0x0d;\n                                                                                                                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                                                                var0 = msg.data[0x04:0x24];\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                                                                                                memory[0xc0:0xe0] = 0x0d;\n                                                                                                                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                                                                                                                                        \n                                                                                                                                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                        \n                                                                                                                                                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                                                                                            memory[0xc0:0xe0] = 0x0d;\n                                                                                                                                                                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                                                                        memory[0x00:0x20] = storage[0x0c];\n                                                                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x0a];\n                                                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x09];\n                                                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n                                                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                                                        memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x07];\n                                                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x06];\n                                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x05];\n                                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x04];\n                                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                                        memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x03];\n                                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                        memory[0x00:0x20] = storage[0x0a];\n                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                                                                                \n                                                                                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                                \n                                                                                                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                                    memory[0xc0:0xe0] = 0x09;\n                                                                                                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                var0 = msg.data[0x04:0x24];\n                                                                                                                                            \n                                                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                            \n                                                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                                memory[0xc0:0xe0] = 0x09;\n                                                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                                                                        \n                                                                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                        \n                                                                                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                            memory[0xc0:0xe0] = 0x09;\n                                                                                                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                                                                    \n                                                                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                    \n                                                                                                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                        memory[0xc0:0xe0] = 0x08;\n                                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                } else if (!msg.value) {\n                                                                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                                                                \n                                                                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                \n                                                                                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                    memory[0xc0:0xe0] = 0x07;\n                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                            } else if (!msg.value) {\n                                                                                                                                var0 = msg.data[0x04:0x24];\n                                                                                                                            \n                                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                            \n                                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                memory[0xc0:0xe0] = 0x06;\n                                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                return memory[0x00:0x20];\n                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                        } else if (!msg.value) {\n                                                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                                                        \n                                                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                        \n                                                                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                            memory[0xc0:0xe0] = 0x06;\n                                                                                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                            return memory[0x00:0x20];\n                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                    } else if (!msg.value) {\n                                                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                                                    \n                                                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                    \n                                                                                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                        memory[0xc0:0xe0] = 0x06;\n                                                                                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                        return memory[0x00:0x20];\n                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                } else if (!msg.value) {\n                                                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                                                \n                                                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                \n                                                                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                    memory[0xc0:0xe0] = 0x05;\n                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                                    return memory[0x00:0x20];\n                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                            } else if (!msg.value) {\n                                                                                                                memory[0x00:0x20] = storage[0x02];\n                                                                                                                return memory[0x00:0x20];\n                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                        } else if (!msg.value) {\n                                                                                                            memory[0x00:0x20] = storage[0x01];\n                                                                                                            return memory[0x00:0x20];\n                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                    } else if (!msg.value) {\n                                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                                    \n                                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                    \n                                                                                                        memory[0x0140:0x0160] = 0xce96fe20;\n                                                                                                        memory[0x0160:0x0180] = msg.data[0x04:0x24];\n                                                                                                        var0 = memory[0x0160:0x0180];\n                                                                                                        var var1 = 0x06;\n                                                                                                        // Unhandled termination\n                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                } else if (!msg.value) {\n                                                                                                    var0 = 0x06;\n                                                                                                    // Unhandled termination\n                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                            } else if (!msg.value) {\n                                                                                                var0 = 0x06;\n                                                                                                // Unhandled termination\n                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                        } else if (!msg.value) {\n                                                                                            var0 = 0x06;\n                                                                                            // Unhandled termination\n                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                    } else if (!msg.value) {\n                                                                                        memory[0x0160:0x0180] = 0x08c379a0;\n                                                                                        memory[0x0180:0x01a0] = 0x20;\n                                                                                        memory[0x01a0:0x01c0] = 0x13;\n                                                                                        memory[0x01c0:0x01e0] = 0x536c6f7473206e6f74207965742066696e616c00000000000000000000000000;\n                                                                                        var0 = 0x06;\n                                                                                        // Unhandled termination\n                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                } else if (!msg.value) {\n                                                                                    memory[0x0160:0x0180] = 0x08c379a0;\n                                                                                    memory[0x0180:0x01a0] = 0x20;\n                                                                                    memory[0x01a0:0x01c0] = 0x15;\n                                                                                    memory[0x01c0:0x01e0] = 0x5374616b657273206e6f74207965742066696e616c0000000000000000000000;\n                                                                                    var0 = 0x06;\n                                                                                    // Unhandled termination\n                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                            } else if (!msg.value) {\n                                                                                var0 = msg.data[0x04:0x24];\n                                                                            \n                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0160:0x0180] = 0x08c379a0;\n                                                                                memory[0x0180:0x01a0] = 0x20;\n                                                                                memory[0x01a0:0x01c0] = 0x13;\n                                                                                memory[0x01c0:0x01e0] = 0x536c6f7473206e6f74207965742066696e616c00000000000000000000000000;\n                                                                                var0 = 0x06;\n                                                                                // Unhandled termination\n                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                        } else if (!msg.value) {\n                                                                            memory[0x00:0x20] = 0x0186a0;\n                                                                            return memory[0x00:0x20];\n                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                    } else if (!msg.value) {\n                                                                        memory[0x00:0x20] = storage[0x00];\n                                                                        return memory[0x00:0x20];\n                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                } else if (!msg.value) {\n                                                                    var0 = msg.data[0x04:0x24];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x0140:0x0160] = 0x08c379a0;\n                                                                    memory[0x0160:0x0180] = 0x20;\n                                                                    memory[0x0180:0x01a0] = 0x0a;\n                                                                    memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                                                                \n                                                                    if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                                                                \n                                                                    memory[0x01e0:0x0200] = 0x08c379a0;\n                                                                    memory[0x0200:0x0220] = 0x20;\n                                                                    memory[0x0220:0x0240] = 0x15;\n                                                                    memory[0x0240:0x0260] = 0x4e6f7420612076697274546f6b656e486f6c6465720000000000000000000000;\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x0d;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                \n                                                                    if (!storage[keccak256(memory[0xc0:0xe0])]) { revert(memory[0x01fc:0x0280]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x0d;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                    storage[keccak256(memory[0xc0:0xe0]) + 0x01] = msg.data[0x24:0x44];\n                                                                    stop();\n                                                                } else { revert(memory[0x00:0x00]); }\n                                                            } else if (!msg.value) {\n                                                                var0 = msg.data[0x04:0x24];\n                                                            \n                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var0 = msg.data[0x24:0x44];\n                                                            \n                                                                if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var0 = msg.data[0x64:0x84];\n                                                            \n                                                                if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0x0140:0x0160] = 0x08c379a0;\n                                                                memory[0x0160:0x0180] = 0x20;\n                                                                memory[0x0180:0x01a0] = 0x0a;\n                                                                memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                                                            \n                                                                if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                                                            \n                                                                memory[0x01e0:0x0200] = 0x08c379a0;\n                                                                memory[0x0200:0x0220] = 0x20;\n                                                                memory[0x0220:0x0240] = 0x18;\n                                                                memory[0x0240:0x0260] = 0x41646472657373206861732061637469766520736c6f74730000000000000000;\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x01fc:0x0280]); }\n                                                            \n                                                                memory[0x0280:0x02a0] = 0x08c379a0;\n                                                                memory[0x02a0:0x02c0] = 0x20;\n                                                                memory[0x02c0:0x02e0] = 0x27;\n                                                                memory[0x02e0:0x0300] = 0x416464726573732068617320706f7369746976652073656c665374616b657244;\n                                                                memory[0x0300:0x0320] = 0x65706f7369747300000000000000000000000000000000000000000000000000;\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x07;\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x029c:0x0340]); }\n                                                            \n                                                                memory[0x0340:0x0360] = 0x08c379a0;\n                                                                memory[0x0360:0x0380] = 0x20;\n                                                                memory[0x0380:0x03a0] = 0x1b;\n                                                                memory[0x03a0:0x03c0] = 0x41646472657373206861732072656d61696e696e675265776172640000000000;\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x09;\n                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0xe0])]) { revert(memory[0x035c:0x03e0]); }\n                                                            \n                                                                memory[0x03e0:0x0400] = 0x08c379a0;\n                                                                memory[0x0400:0x0420] = 0x20;\n                                                                memory[0x0420:0x0440] = 0x1c;\n                                                                memory[0x0440:0x0460] = 0x416464726573732068617320706f73697469766520706c656467657300000000;\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x06;\n                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0xe0])]) { revert(memory[0x03fc:0x0480]); }\n                                                            \n                                                                memory[0x0480:0x04a0] = 0x08c379a0;\n                                                                memory[0x04a0:0x04c0] = 0x20;\n                                                                memory[0x04c0:0x04e0] = 0x25;\n                                                                memory[0x04e0:0x0500] = 0x4164647265737320686173206120706f6f6c20696e206f6e676f696e67206175;\n                                                                memory[0x0500:0x0520] = 0x6374696f6e000000000000000000000000000000000000000000000000000000;\n                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                var temp0 = !storage[keccak256(memory[0xc0:0xe0])];\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x09;\n                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                            \n                                                                if (!((storage[keccak256(memory[0xc0:0xe0]) + 0x02] < storage[0x0a]) | temp0)) { revert(memory[0x049c:0x0540]); }\n                                                            \n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x0d;\n                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                memory[0x0540:0x0560] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                            \n                                                                if (!(!msg.data[0x24:0x44] & (memory[0x0540:0x0560] > 0x00))) {\n                                                                label_3F5A:\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x0d;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                    storage[keccak256(memory[0xc0:0xe0])] = msg.data[0x24:0x44];\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x0d;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                    storage[keccak256(memory[0xc0:0xe0]) + 0x01] = msg.data[0x44:0x64];\n                                                                    stop();\n                                                                } else if (!msg.data[0x64:0x84]) {\n                                                                    var0 = 0x0c;\n                                                                \n                                                                    if (storage[var0] + memory[0x0540:0x0560] < storage[var0]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var temp1 = var0;\n                                                                    storage[temp1] = storage[temp1] + memory[0x0540:0x0560];\n                                                                \n                                                                label_3F3B:\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x0d;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                    storage[keccak256(memory[0xc0:0xe0]) + 0x02] = 0x00;\n                                                                    goto label_3F5A;\n                                                                } else {\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x07;\n                                                                    var temp2 = keccak256(memory[0xc0:0x0100]);\n                                                                    var0 = temp2;\n                                                                \n                                                                    if (storage[var0] + memory[0x0540:0x0560] < storage[var0]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var temp3 = var0;\n                                                                    storage[temp3] = storage[temp3] + memory[0x0540:0x0560];\n                                                                    goto label_3F3B;\n                                                                }\n                                                            } else { revert(memory[0x00:0x00]); }\n                                                        } else if (!msg.value) {\n                                                            memory[0x0140:0x0160] = 0x08c379a0;\n                                                            memory[0x0160:0x0180] = 0x20;\n                                                            memory[0x0180:0x01a0] = 0x0a;\n                                                            memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                                                        \n                                                            if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                                                        \n                                                            memory[0x01e0:0x0200] = 0x08c379a0;\n                                                            memory[0x0200:0x0220] = 0x20;\n                                                            memory[0x0220:0x0240] = 0x0f;\n                                                            memory[0x0240:0x0260] = 0x496e206c6f636b75702070686173650000000000000000000000000000000000;\n                                                            memory[0xc0:0xe0] = 0x0b;\n                                                        \n                                                            if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x01fc:0x0280]); }\n                                                        \n                                                            memory[0x0280:0x02a0] = 0x08c379a0;\n                                                            memory[0x02a0:0x02c0] = 0x20;\n                                                            memory[0x02c0:0x02e0] = 0x1a;\n                                                            memory[0x02e0:0x0300] = 0x6561726c6965737444656c657465206e6f742072656163686564000000000000;\n                                                        \n                                                            if (block.timestamp < storage[0x02]) { revert(memory[0x029c:0x0320]); }\n                                                        \n                                                            if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0340:0x0360] = 0x70a08231;\n                                                            memory[0x0360:0x0380] = address(this);\n                                                            var temp4;\n                                                            temp4, memory[0x03c0:0x03e0] = address(storage[0x00]).staticcall.gas(msg.gas)(memory[0x035c:0x0380]);\n                                                        \n                                                            if (!temp4) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0320:0x0340] = memory[0x03c0:0x03e0];\n                                                        \n                                                            if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0400:0x0420] = 0xa9059cbb;\n                                                            memory[0x0420:0x0440] = storage[0x01];\n                                                            memory[0x0440:0x0460] = memory[0x0320:0x0340];\n                                                            var temp5;\n                                                            temp5, memory[0x04a0:0x04c0] = address(storage[0x00]).call.gas(msg.gas)(memory[0x041c:0x0460]);\n                                                        \n                                                            if (!temp5) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x03e0:0x0400] = memory[0x04a0:0x04c0];\n                                                            memory[0x04c0:0x04e0] = 0x08c379a0;\n                                                            memory[0x04e0:0x0500] = 0x20;\n                                                            memory[0x0500:0x0520] = 0x0f;\n                                                            memory[0x0520:0x0540] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n                                                        \n                                                            if (memory[0x03e0:0x0400]) { selfdestruct(storage[0x01]); }\n                                                            else { revert(memory[0x04dc:0x0560]); }\n                                                        } else { revert(memory[0x00:0x00]); }\n                                                    } else if (!msg.value) {\n                                                        memory[0x0140:0x0160] = 0x00;\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        var temp6 = !storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x06;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                    \n                                                        if (!((storage[keccak256(memory[0xc0:0xe0]) + 0x01] < storage[0x0a]) | temp6)) {\n                                                        label_38F0:\n                                                        \n                                                            if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0180:0x01a0] = 0xa9059cbb;\n                                                            memory[0x01a0:0x01c0] = msg.sender;\n                                                            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n                                                            var temp7;\n                                                            temp7, memory[0x0220:0x0240] = address(storage[0x00]).call.gas(msg.gas)(memory[0x019c:0x01e0]);\n                                                        \n                                                            if (!temp7) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0160:0x0180] = memory[0x0220:0x0240];\n                                                            memory[0x0240:0x0260] = 0x08c379a0;\n                                                            memory[0x0260:0x0280] = 0x20;\n                                                            memory[0x0280:0x02a0] = 0x0f;\n                                                            memory[0x02a0:0x02c0] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n                                                        \n                                                            if (!memory[0x0160:0x0180]) { revert(memory[0x025c:0x02e0]); }\n                                                        \n                                                            memory[0x02e0:0x0300] = memory[0x0140:0x0160];\n                                                            log(memory[0x02e0:0x0300], [0x319886960989451362e0df29ecf7a2b292784275dcc71a52dd1e11eefcc73393, msg.sender]);\n                                                            memory[0x00:0x20] = memory[0x0140:0x0160];\n                                                            return memory[0x00:0x20];\n                                                        } else {\n                                                            var0 = 0x0140;\n                                                            var temp8 = memory[var0:var0 + 0x20];\n                                                            memory[0xe0:0x0100] = msg.sender;\n                                                            memory[0xc0:0xe0] = 0x06;\n                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                        \n                                                            if (memory[var0:var0 + 0x20] + storage[keccak256(memory[0xc0:0xe0])] < temp8) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.sender;\n                                                            memory[0xc0:0xe0] = 0x06;\n                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                            var temp9 = var0;\n                                                            memory[temp9:temp9 + 0x20] = memory[temp9:temp9 + 0x20] + storage[keccak256(memory[0xc0:0xe0])];\n                                                            memory[0xe0:0x0100] = msg.sender;\n                                                            memory[0xc0:0xe0] = 0x06;\n                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                            var temp10 = keccak256(memory[0xc0:0xe0]);\n                                                            storage[temp10] = 0x00;\n                                                            storage[temp10 + 0x01] = 0x00;\n                                                            storage[temp10 + 0x02] = 0x00;\n                                                            goto label_38F0;\n                                                        }\n                                                    } else { revert(memory[0x00:0x00]); }\n                                                } else if (!msg.value) {\n                                                    memory[0x0140:0x0160] = 0x00;\n                                                    memory[0xe0:0x0100] = msg.sender;\n                                                    memory[0xc0:0xe0] = 0x0d;\n                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                \n                                                    if (!storage[keccak256(memory[0xc0:0xe0])]) {\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x07;\n                                                        memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        var0 = memory[0x0140:0x0160];\n                                                        var1 = memory[0x0160:0x0180];\n                                                        var var2 = memory[0x0180:0x01a0];\n                                                        memory[0x01c0:0x01e0] = 0xce96fe20;\n                                                        memory[0x01e0:0x0200] = msg.sender;\n                                                        var var3 = memory[0x01e0:0x0200];\n                                                        var var4 = 0x06;\n                                                        // Unhandled termination\n                                                    } else {\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x0d;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x0d;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                        storage[keccak256(memory[0xc0:0xe0]) + 0x02] = 0x00;\n                                                    \n                                                        if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0320:0x0340] = 0xa9059cbb;\n                                                        memory[0x0340:0x0360] = msg.sender;\n                                                        memory[0x0360:0x0380] = memory[0x0140:0x0160];\n                                                        var temp11;\n                                                        temp11, memory[0x03c0:0x03e0] = address(storage[0x00]).call.gas(msg.gas)(memory[0x033c:0x0380]);\n                                                    \n                                                        if (!temp11) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0300:0x0320] = memory[0x03c0:0x03e0];\n                                                        memory[0x03e0:0x0400] = 0x08c379a0;\n                                                        memory[0x0400:0x0420] = 0x20;\n                                                        memory[0x0420:0x0440] = 0x0f;\n                                                        memory[0x0440:0x0460] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n                                                    \n                                                        if (!memory[0x0300:0x0320]) { revert(memory[0x03fc:0x0480]); }\n                                                    \n                                                        memory[0x0480:0x04a0] = memory[0x0140:0x0160];\n                                                        log(memory[0x0480:0x04a0], [0xbd0f93dba4ea8f4fd8b7fa83e8559d5fa7fabd5300477bfaf2e99524609f17c5, msg.sender]);\n                                                        memory[0x00:0x20] = memory[0x0140:0x0160];\n                                                        return memory[0x00:0x20];\n                                                    }\n                                                } else { revert(memory[0x00:0x00]); }\n                                            } else if (!msg.value) {\n                                                var0 = msg.data[0x04:0x24];\n                                            \n                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                            \n                                                memory[0x0140:0x0160] = storage[0x0a];\n                                                memory[0x01a0:0x01c0] = 0x08c379a0;\n                                                memory[0x01c0:0x01e0] = 0x20;\n                                                memory[0x01e0:0x0200] = 0x14;\n                                                memory[0x0200:0x0220] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                                                var0 = memory[0x0140:0x0160];\n                                                var1 = 0x06;\n                                                // Unhandled termination\n                                            } else { revert(memory[0x00:0x00]); }\n                                        } else if (!msg.value) {\n                                            var0 = msg.data[0x24:0x44];\n                                        \n                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0x0140:0x0160] = 0x08c379a0;\n                                            memory[0x0160:0x0180] = 0x20;\n                                            memory[0x0180:0x01a0] = 0x0f;\n                                            memory[0x01a0:0x01c0] = 0x4e6f742063757272656e74204149440000000000000000000000000000000000;\n                                        \n                                            if (msg.data[0x04:0x24] != storage[0x0a]) { revert(memory[0x015c:0x01e0]); }\n                                        \n                                            memory[0x0220:0x0240] = 0x08c379a0;\n                                            memory[0x0240:0x0260] = 0x20;\n                                            memory[0x0260:0x0280] = 0x14;\n                                            memory[0x0280:0x02a0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                                            var0 = memory[0x0140:0x0160];\n                                            var1 = memory[0x0160:0x0180];\n                                            var2 = memory[0x0180:0x01a0];\n                                            var3 = memory[0x01a0:0x01c0];\n                                            var4 = memory[0x01c0:0x01e0];\n                                            var var5 = 0x06;\n                                            // Unhandled termination\n                                        } else { revert(memory[0x00:0x00]); }\n                                    } else if (!msg.value) {\n                                        memory[0x01a0:0x01c0] = 0x08c379a0;\n                                        memory[0x01c0:0x01e0] = 0x20;\n                                        memory[0x01e0:0x0200] = 0x1d;\n                                        memory[0x0200:0x0220] = 0x42696464696e67207068617365206f6620414944206e6f74206f766572000000;\n                                        memory[0xe0:0x0100] = msg.sender;\n                                        memory[0xc0:0xe0] = 0x09;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = storage[keccak256(memory[0xc0:0xe0]) + 0x02] < storage[0x0a];\n                                        var1 = memory[0x0140:0x0160];\n                                        var2 = 0x06;\n                                        // Unhandled termination\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    memory[0x0140:0x0160] = 0x08c379a0;\n                                    memory[0x0160:0x0180] = 0x20;\n                                    memory[0x0180:0x01a0] = 0x13;\n                                    memory[0x01a0:0x01c0] = 0x4e6f742063757272656e742061756374696f6e00000000000000000000000000;\n                                \n                                    if (msg.data[0x04:0x24] != storage[0x0a]) { revert(memory[0x015c:0x01e0]); }\n                                \n                                    memory[0x0220:0x0240] = 0x08c379a0;\n                                    memory[0x0240:0x0260] = 0x20;\n                                    memory[0x0260:0x0280] = 0x14;\n                                    memory[0x0280:0x02a0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                                    var0 = memory[0x0140:0x0160];\n                                    var1 = memory[0x0160:0x0180];\n                                    var2 = memory[0x0180:0x01a0];\n                                    var3 = memory[0x01a0:0x01c0];\n                                    var4 = memory[0x01c0:0x01e0];\n                                    var5 = 0x06;\n                                    // Unhandled termination\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                var0 = msg.data[0x04:0x24];\n                            \n                                if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0x0140:0x0160] = 0x08c379a0;\n                                memory[0x0160:0x0180] = 0x20;\n                                memory[0x0180:0x01a0] = 0x0a;\n                                memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                            \n                                if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                            \n                                var0 = memory[0x0140:0x0160];\n                                var1 = memory[0x0160:0x0180];\n                                var2 = memory[0x0180:0x01a0];\n                                var3 = memory[0x01a0:0x01c0];\n                                var4 = memory[0x01c0:0x01e0];\n                                memory[0x0200:0x0220] = 0x2acd2e64;\n                                memory[0x0220:0x0240] = msg.data[0x04:0x24];\n                                var5 = memory[0x0220:0x0240];\n                                var var6 = 0x06;\n                                // Unhandled termination\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            memory[0x0140:0x0160] = 0x08c379a0;\n                            memory[0x0160:0x0180] = 0x20;\n                            memory[0x0180:0x01a0] = 0x2e;\n                            memory[0x01a0:0x01c0] = 0x41756374696f6e206e6f742066696e616c6973656420796574206f72206e6f20;\n                            memory[0x01c0:0x01e0] = 0x61756374696f6e20746f20656e64000000000000000000000000000000000000;\n                            memory[0xc0:0xe0] = 0x0b;\n                        \n                            if (storage[keccak256(memory[0xc0:0xe0])] <= 0x00) { revert(memory[0x015c:0x0200]); }\n                        \n                            memory[0x0200:0x0220] = 0x08c379a0;\n                            memory[0x0220:0x0240] = 0x20;\n                            memory[0x0240:0x0260] = 0x0f;\n                            memory[0x0260:0x0280] = 0x4c6f636b7570206e6f74206f7665720000000000000000000000000000000000;\n                            memory[0xc0:0xe0] = 0x0b;\n                        \n                            if (block.number < storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x021c:0x02a0]); }\n                        \n                            memory[0x02a0:0x02c0] = 0x0140;\n                            var0 = memory[memory[0x02a0:0x02c0]:memory[0x02a0:0x02c0] + 0x20];\n                            memory[0x02a0:0x02c0] = memory[0x02a0:0x02c0] + 0x20;\n                        \n                            if (memory[0x02a0:0x02c0] >= 0x02a0) {\n                            label_2581:\n                                memory[0x02c0:0x02e0] = 0x2acd2e64;\n                                memory[0x02e0:0x0300] = 0x01;\n                                var1 = memory[0x02e0:0x0300];\n                                var2 = 0x06;\n                                // Unhandled termination\n                            } else {\n                            label_257D:\n                                var1 = memory[memory[0x02a0:0x02c0]:memory[0x02a0:0x02c0] + 0x20];\n                                memory[0x02a0:0x02c0] = memory[0x02a0:0x02c0] + 0x20;\n                            \n                                if (memory[0x02a0:0x02c0] >= 0x02a0) { goto label_2581; }\n                                else { goto label_257D; }\n                            }\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        var0 = memory[0x0140:0x0160];\n                        var1 = 0x06;\n                        // Unhandled termination\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    memory[0x0160:0x0180] = 0x08c379a0;\n                    memory[0x0180:0x01a0] = 0x20;\n                    memory[0x01a0:0x01c0] = 0x14;\n                    memory[0x01c0:0x01e0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                    var0 = 0x06;\n                    // Unhandled termination\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0x0140:0x0160] = 0x08c379a0;\n                memory[0x0160:0x0180] = 0x20;\n                memory[0x0180:0x01a0] = 0x0a;\n                memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n            \n                if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n            \n                memory[0x01e0:0x0200] = 0x08c379a0;\n                memory[0x0200:0x0220] = 0x20;\n                memory[0x0220:0x0240] = 0x0f;\n                memory[0x0240:0x0260] = 0x41756374696f6e206f6e676f696e670000000000000000000000000000000000;\n                memory[0xc0:0xe0] = 0x0b;\n            \n                if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x01fc:0x0280]); }\n            \n                memory[0x0280:0x02a0] = storage[0x0c];\n                storage[0x0c] = 0x00;\n            \n                if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n            \n                if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n            \n                memory[0x02c0:0x02e0] = 0xa9059cbb;\n                memory[0x02e0:0x0300] = storage[0x01];\n                memory[0x0300:0x0320] = memory[0x0280:0x02a0];\n                var temp42;\n                temp42, memory[0x0360:0x0380] = address(storage[0x00]).call.gas(msg.gas)(memory[0x02dc:0x0320]);\n            \n                if (!temp42) { revert(memory[0x00:0x00]); }\n            \n                memory[0x02a0:0x02c0] = memory[0x0360:0x0380];\n                memory[0x0380:0x03a0] = 0x08c379a0;\n                memory[0x03a0:0x03c0] = 0x20;\n                memory[0x03c0:0x03e0] = 0x0f;\n                memory[0x03e0:0x0400] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n            \n                if (memory[0x02a0:0x02c0]) { stop(); }\n                else { revert(memory[0x039c:0x0420]); }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x0140:0x0160] = 0x08c379a0;\n            memory[0x0160:0x0180] = 0x20;\n            memory[0x0180:0x01a0] = 0x0a;\n            memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n        \n            if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n        \n            memory[0x01e0:0x0200] = 0x08c379a0;\n            memory[0x0200:0x0220] = 0x20;\n            memory[0x0220:0x0240] = 0x12;\n            memory[0x0240:0x0260] = 0x496e76616c69642073746172745374616b650000000000000000000000000000;\n        \n            if (msg.data[0x24:0x44] <= msg.data[0x44:0x64]) { revert(memory[0x01fc:0x0280]); }\n        \n            memory[0x0280:0x02a0] = 0x08c379a0;\n            memory[0x02a0:0x02c0] = 0x20;\n            memory[0x02c0:0x02e0] = 0x12;\n            memory[0x02e0:0x0300] = 0x496e76616c6420736c6f74206e756d6265720000000000000000000000000000;\n        \n            if (!((msg.data[0xa4:0xc4] > 0x00) & (msg.data[0xa4:0xc4] <= 0xc8))) { revert(memory[0x029c:0x0320]); }\n        \n            memory[0x0320:0x0340] = 0x08c379a0;\n            memory[0x0340:0x0360] = 0x20;\n            memory[0x0360:0x0380] = 0x1a;\n            memory[0x0380:0x03a0] = 0x5374617274206265666f72652063757272656e7420626c6f636b000000000000;\n        \n            if (msg.data[0x04:0x24] < block.number) { revert(memory[0x033c:0x03c0]); }\n        \n            memory[0x03c0:0x03e0] = 0x08c379a0;\n            memory[0x03e0:0x0400] = 0x20;\n            memory[0x0400:0x0420] = 0x22;\n            memory[0x0420:0x0440] = 0x52657365727665207374616b652068617320746f206265206174206c65617374;\n            memory[0x0440:0x0460] = 0x2031000000000000000000000000000000000000000000000000000000000000;\n        \n            if (msg.data[0x44:0x64] <= 0x00) { revert(memory[0x03dc:0x0480]); }\n        \n            memory[0x0480:0x04a0] = 0x08c379a0;\n            memory[0x04a0:0x04c0] = 0x20;\n            memory[0x04c0:0x04e0] = 0x13;\n            memory[0x04e0:0x0500] = 0x456e642063757272656e742061756374696f6e00000000000000000000000000;\n            memory[0xc0:0xe0] = 0x0b;\n        \n            if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x049c:0x0520]); }\n        \n            var0 = 0x0a;\n        \n            if (storage[var0] + 0x01 < storage[var0]) { revert(memory[0x00:0x00]); }\n        \n            var temp43 = var0;\n            storage[temp43] = storage[temp43] + 0x01;\n        \n            if (!msg.data[0x64:0x84]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x64:0x84];\n            var1 = 0x01;\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x24:0x44] - msg.data[0x44:0x64];\n            var3 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var3 < var2) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var2 < var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01;\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x24:0x44] - msg.data[0x44:0x64];\n            var3 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var3 < var2) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0520:0x0540] = (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var2) - var1 / var0;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24] + msg.data[0x64:0x84];\n            var1 = 0x19;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] + var1 < var0) { revert(memory[0x00:0x00]); }\n        \n            var0 = 0x19;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0540:0x0560] = msg.data[0x04:0x24] + msg.data[0x64:0x84] + var0;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x03] = msg.data[0x04:0x24];\n            var temp44 = memory[0x0540:0x0560];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x04] = temp44;\n        \n            if (memory[0x0540:0x0560] + msg.data[0x84:0xa4] < memory[0x0540:0x0560]) { revert(memory[0x00:0x00]); }\n        \n            var temp45 = memory[0x0540:0x0560] + msg.data[0x84:0xa4];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x01] = temp45;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x05] = msg.data[0x24:0x44];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x06] = msg.data[0x44:0x64];\n            var temp46 = memory[0x0520:0x0540];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x07] = temp46;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x08] = msg.data[0xa4:0xc4];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0])] = 0x00;\n            var0 = 0x0c;\n        \n            if (storage[var0] + msg.data[0xc4:0xe4] < storage[var0]) { revert(memory[0x00:0x00]); }\n        \n            var temp47 = var0;\n            storage[temp47] = storage[temp47] + msg.data[0xc4:0xe4];\n            memory[0xc0:0xe0] = 0x0b;\n        \n            if (!storage[keccak256(memory[0xc0:0xe0]) + 0x08]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xc0:0xe0] = 0x0b;\n            var temp48 = storage[0x0c] / storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x09] = temp48;\n        \n            if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0580:0x05a0] = 0x23b872dd;\n            memory[0x05a0:0x05c0] = msg.sender;\n            memory[0x05c0:0x05e0] = address(this);\n            memory[0x05e0:0x0600] = msg.data[0xc4:0xe4];\n            var temp49;\n            temp49, memory[0x0640:0x0660] = address(storage[0x00]).call.gas(msg.gas)(memory[0x059c:0x0600]);\n        \n            if (!temp49) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0560:0x0580] = memory[0x0640:0x0660];\n            memory[0x0660:0x0680] = 0x08c379a0;\n            memory[0x0680:0x06a0] = 0x20;\n            memory[0x06a0:0x06c0] = 0x0f;\n            memory[0x06c0:0x06e0] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n        \n            if (!memory[0x0560:0x0580]) { revert(memory[0x067c:0x0700]); }\n        \n            memory[0x0700:0x0720] = storage[0x0a];\n            memory[0x0720:0x0740] = msg.data[0x04:0x24];\n            memory[0x0740:0x0760] = memory[0x0540:0x0560];\n        \n            if (memory[0x0540:0x0560] + msg.data[0x84:0xa4] < memory[0x0540:0x0560]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0760:0x0780] = memory[0x0540:0x0560] + msg.data[0x84:0xa4];\n            memory[0x0780:0x07a0] = msg.data[0x24:0x44];\n            memory[0x07a0:0x07c0] = msg.data[0x44:0x64];\n            memory[0x07c0:0x07e0] = memory[0x0520:0x0540];\n            memory[0x07e0:0x0800] = msg.data[0xa4:0xc4];\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x0800:0x0820] = storage[keccak256(memory[0xc0:0xe0]) + 0x09];\n            log(memory[0x0700:0x0820], [0xede627ce4bced8a9b0a39e006c0a1d534d530222904131c567cc925f8090e972]);\n            stop();\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp53 = block.number < storage[keccak256(memory[0xc0:0xe0]) + 0x04];\n            memory[0xc0:0xe0] = 0x0b;\n            var temp54 = (storage[keccak256(memory[0xc0:0xe0]) + 0x01] > 0x00) & temp53;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp55 = storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n            memory[0xc0:0xe0] = 0x0b;\n            var temp56 = (storage[keccak256(memory[0xc0:0xe0]) + 0x02] < temp55) & temp54;\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x00:0x20] = !storage[keccak256(memory[0xc0:0xe0])] & temp56;\n            var-1 = memory[0x00:0x20];\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp52 = !storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x00:0x20] = (storage[keccak256(memory[0xc0:0xe0])] > 0x00) | temp52;\n            var-1 = memory[0x00:0x20];\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0xe0]) + 0x05];\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0xe0]) + 0x03];\n        \n            if (block.number > memory[0x0180:0x01a0]) {\n                memory[0xc0:0xe0] = 0x0b;\n            \n                if (!storage[keccak256(memory[0xc0:0xe0]) + 0x07]) {\n                    var-1 = 0x00;\n                    goto label_0217;\n                } else if (block.number >= memory[0x0180:0x01a0]) {\n                    var-1 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                    var0 = storage[keccak256(memory[0xc0:0xe0]) + 0x07];\n                \n                    if (block.number < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp50 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                \n                    if ((storage[keccak256(memory[0xc0:0xe0]) + 0x07] * temp50) / var0 != var-1) { revert(memory[0x00:0x00]); }\n                \n                    if (block.number < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp51 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                    var-1 = storage[keccak256(memory[0xc0:0xe0]) + 0x07] * temp51;\n                \n                label_0217:\n                    memory[0xc0:0xe0] = 0x0b;\n                \n                    if (memory[0x0160:0x0180] < storage[keccak256(memory[0xc0:0xe0]) + 0x06]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xc0:0xe0] = 0x0b;\n                    var0 = memory[0x0160:0x0180] - storage[keccak256(memory[0xc0:0xe0]) + 0x06];\n                \n                    if (var-1 <= var0) {\n                        memory[0x01a0:0x01c0] = var-1;\n                    \n                        if (memory[0x0160:0x0180] < memory[0x01a0:0x01c0]) { revert(memory[0x00:0x00]); }\n                    \n                    label_0272:\n                        memory[0x00:0x20] = memory[0x0160:0x0180] - memory[0x01a0:0x01c0];\n                        var-1 = memory[0x00:0x20];\n                        // Error: Could not resolve jump destination!\n                    } else {\n                        var1 = var0;\n                        memory[0x01a0:0x01c0] = var1;\n                    \n                        if (memory[0x0160:0x0180] >= memory[0x01a0:0x01c0]) { goto label_0272; }\n                        else { revert(memory[0x00:0x00]); }\n                    }\n                } else { revert(memory[0x00:0x00]); }\n            } else {\n                memory[0x00:0x20] = memory[0x0160:0x0180];\n                var-1 = memory[0x00:0x20];\n                // Error: Could not resolve jump destination!\n            }\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            var-1 = memory[0x0140:0x0160];\n            var0 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            memory[0x0160:0x0180] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0180:0x01a0] = 0x00;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x03;\n            memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (memory[0x01a0:0x01c0] <= 0x00) {\n                memory[0x00:0x20] = memory[0x0180:0x01a0];\n                var-2 = memory[0x00:0x20];\n                // Error: Could not resolve jump destination!\n            } else {\n                memory[0x0200:0x0220] = 0x08c379a0;\n                memory[0x0220:0x0240] = 0x20;\n                memory[0x0240:0x0260] = 0x27;\n                memory[0x0260:0x0280] = 0x49732062696464657220616e642061756374696f6e206e6f742066696e616c69;\n                memory[0x0280:0x02a0] = 0x7365642079657400000000000000000000000000000000000000000000000000;\n                var-2 = memory[0x0140:0x0160];\n                var-1 = memory[0x0160:0x0180];\n                var0 = memory[0x0180:0x01a0];\n                var1 = memory[0x01a0:0x01c0];\n                var2 = 0x06;\n                // Unhandled termination\n            }\n        } else if (memory[0x00:0x20] != 0xa3169b14) {\n            if (memory[0x00:0x20] != 0x40fff189) {\n                if (memory[0x00:0x20] != 0x454a2ab3) {\n                    if (memory[0x00:0x20] != 0x579632a9) {\n                        if (0x00) {\n                            memory[0x0160:0x0180] = var-1;\n                            memory[0x0140:0x0160] = var-2;\n                            memory[0x0180:0x01a0] = 0x08c379a0;\n                            memory[0x01a0:0x01c0] = 0x20;\n                            memory[0x01c0:0x01e0] = 0x10;\n                            memory[0x01e0:0x0200] = 0x4e6f206c6f636b757020746f20656e6400000000000000000000000000000000;\n                            memory[0xc0:0xe0] = 0x0b;\n                        \n                            if (storage[keccak256(memory[0xc0:0xe0]) + 0x01] <= 0x00) { revert(memory[0x019c:0x0220]); }\n                        \n                            memory[0xc0:0xe0] = 0x0b;\n                            memory[0x0220:0x0240] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                            memory[0x0240:0x0260] = 0x00;\n                        \n                            if (block.timestamp + 0x4f1a00 < block.timestamp) { revert(memory[0x00:0x00]); }\n                        \n                            storage[0x02] = block.timestamp + 0x4f1a00;\n                        \n                            if (!memory[0x0140:0x0160]) {\n                                memory[0x0340:0x0360] = 0x00;\n                                var-2 = 0x0360;\n                                memory[var-2:var-2 + 0x20] = 0x00;\n                                var-1 = 0xc8;\n                                var0 = memory[0x0360:0x0380];\n                            \n                                if (var0 >= 0xc8) { revert(memory[0x00:0x00]); }\n                            \n                            label_1BCF:\n                                memory[0xc0:0xe0] = 0x04;\n                                memory[0x0340:0x0360] = storage[keccak256(memory[0xc0:0xe0]) + var0];\n                            \n                                if (!memory[0x0340:0x0360]) { goto label_1E8B; }\n                            \n                                if (!memory[0x0140:0x0160]) {\n                                label_1E32:\n                                    memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                    memory[0xc0:0xe0] = 0x03;\n                                    storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                    memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                    memory[0xc0:0xe0] = 0x0d;\n                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                \n                                    if (!storage[keccak256(memory[0xc0:0xe0])]) {\n                                        var temp18 = var-2;\n                                        var temp19 = memory[temp18:temp18 + 0x20] + 0x01;\n                                        memory[temp18:temp18 + 0x20] = temp19;\n                                    \n                                        if (var-1 != temp19) {\n                                        label_1BBE:\n                                            var0 = memory[0x0360:0x0380];\n                                        \n                                            if (var0 < 0xc8) { goto label_1BCF; }\n                                            else { revert(memory[0x00:0x00]); }\n                                        } else {\n                                        label_1E8B:\n                                            memory[0xc0:0xe0] = 0x04;\n                                            var temp20 = keccak256(memory[0xc0:0xe0]);\n                                            storage[temp20] = 0x00;\n                                            storage[temp20 + 0x01] = 0x00;\n                                            storage[temp20 + 0x02] = 0x00;\n                                            storage[temp20 + 0x03] = 0x00;\n                                            storage[temp20 + 0x04] = 0x00;\n                                            storage[temp20 + 0x05] = 0x00;\n                                            storage[temp20 + 0x06] = 0x00;\n                                            storage[temp20 + 0x07] = 0x00;\n                                            storage[temp20 + 0x08] = 0x00;\n                                            storage[temp20 + 0x09] = 0x00;\n                                            storage[temp20 + 0x0a] = 0x00;\n                                            storage[temp20 + 0x0b] = 0x00;\n                                            storage[temp20 + 0x0c] = 0x00;\n                                            storage[temp20 + 0x0d] = 0x00;\n                                            storage[temp20 + 0x0e] = 0x00;\n                                            storage[temp20 + 0x0f] = 0x00;\n                                            storage[temp20 + 0x10] = 0x00;\n                                            storage[temp20 + 0x11] = 0x00;\n                                            storage[temp20 + 0x12] = 0x00;\n                                            storage[temp20 + 0x13] = 0x00;\n                                            storage[temp20 + 0x14] = 0x00;\n                                            storage[temp20 + 0x15] = 0x00;\n                                            storage[temp20 + 0x16] = 0x00;\n                                            storage[temp20 + 0x17] = 0x00;\n                                            storage[temp20 + 0x18] = 0x00;\n                                            storage[temp20 + 0x19] = 0x00;\n                                            storage[temp20 + 0x1a] = 0x00;\n                                            storage[temp20 + 0x1b] = 0x00;\n                                            storage[temp20 + 0x1c] = 0x00;\n                                            storage[temp20 + 0x1d] = 0x00;\n                                            storage[temp20 + 0x1e] = 0x00;\n                                            storage[temp20 + 0x1f] = 0x00;\n                                            storage[temp20 + 0x20] = 0x00;\n                                            storage[temp20 + 0x21] = 0x00;\n                                            storage[temp20 + 0x22] = 0x00;\n                                            storage[temp20 + 0x23] = 0x00;\n                                            storage[temp20 + 0x24] = 0x00;\n                                            storage[temp20 + 0x25] = 0x00;\n                                            storage[temp20 + 0x26] = 0x00;\n                                            storage[temp20 + 0x27] = 0x00;\n                                            storage[temp20 + 0x28] = 0x00;\n                                            storage[temp20 + 0x29] = 0x00;\n                                            storage[temp20 + 0x2a] = 0x00;\n                                            storage[temp20 + 0x2b] = 0x00;\n                                            storage[temp20 + 0x2c] = 0x00;\n                                            storage[temp20 + 0x2d] = 0x00;\n                                            storage[temp20 + 0x2e] = 0x00;\n                                            storage[temp20 + 0x2f] = 0x00;\n                                            storage[temp20 + 0x30] = 0x00;\n                                            storage[temp20 + 0x31] = 0x00;\n                                            storage[temp20 + 0x32] = 0x00;\n                                            storage[temp20 + 0x33] = 0x00;\n                                            storage[temp20 + 0x34] = 0x00;\n                                            storage[temp20 + 0x35] = 0x00;\n                                            storage[temp20 + 0x36] = 0x00;\n                                            storage[temp20 + 0x37] = 0x00;\n                                            storage[temp20 + 0x38] = 0x00;\n                                            storage[temp20 + 0x39] = 0x00;\n                                            storage[temp20 + 0x3a] = 0x00;\n                                            storage[temp20 + 0x3b] = 0x00;\n                                            storage[temp20 + 0x3c] = 0x00;\n                                            storage[temp20 + 0x3d] = 0x00;\n                                            storage[temp20 + 0x3e] = 0x00;\n                                            storage[temp20 + 0x3f] = 0x00;\n                                            storage[temp20 + 0x40] = 0x00;\n                                            storage[temp20 + 0x41] = 0x00;\n                                            storage[temp20 + 0x42] = 0x00;\n                                            storage[temp20 + 0x43] = 0x00;\n                                            storage[temp20 + 0x44] = 0x00;\n                                            storage[temp20 + 0x45] = 0x00;\n                                            storage[temp20 + 0x46] = 0x00;\n                                            storage[temp20 + 0x47] = 0x00;\n                                            storage[temp20 + 0x48] = 0x00;\n                                            storage[temp20 + 0x49] = 0x00;\n                                            storage[temp20 + 0x4a] = 0x00;\n                                            storage[temp20 + 0x4b] = 0x00;\n                                            storage[temp20 + 0x4c] = 0x00;\n                                            storage[temp20 + 0x4d] = 0x00;\n                                            storage[temp20 + 0x4e] = 0x00;\n                                            storage[temp20 + 0x4f] = 0x00;\n                                            storage[temp20 + 0x50] = 0x00;\n                                            storage[temp20 + 0x51] = 0x00;\n                                            storage[temp20 + 0x52] = 0x00;\n                                            storage[temp20 + 0x53] = 0x00;\n                                            storage[temp20 + 0x54] = 0x00;\n                                            storage[temp20 + 0x55] = 0x00;\n                                            storage[temp20 + 0x56] = 0x00;\n                                            storage[temp20 + 0x57] = 0x00;\n                                            storage[temp20 + 0x58] = 0x00;\n                                            storage[temp20 + 0x59] = 0x00;\n                                            storage[temp20 + 0x5a] = 0x00;\n                                            storage[temp20 + 0x5b] = 0x00;\n                                            storage[temp20 + 0x5c] = 0x00;\n                                            storage[temp20 + 0x5d] = 0x00;\n                                            storage[temp20 + 0x5e] = 0x00;\n                                            storage[temp20 + 0x5f] = 0x00;\n                                            storage[temp20 + 0x60] = 0x00;\n                                            storage[temp20 + 0x61] = 0x00;\n                                            storage[temp20 + 0x62] = 0x00;\n                                            storage[temp20 + 0x63] = 0x00;\n                                            storage[temp20 + 0x64] = 0x00;\n                                            storage[temp20 + 0x65] = 0x00;\n                                            storage[temp20 + 0x66] = 0x00;\n                                            storage[temp20 + 0x67] = 0x00;\n                                            storage[temp20 + 0x68] = 0x00;\n                                            storage[temp20 + 0x69] = 0x00;\n                                            storage[temp20 + 0x6a] = 0x00;\n                                            storage[temp20 + 0x6b] = 0x00;\n                                            storage[temp20 + 0x6c] = 0x00;\n                                            storage[temp20 + 0x6d] = 0x00;\n                                            storage[temp20 + 0x6e] = 0x00;\n                                            storage[temp20 + 0x6f] = 0x00;\n                                            storage[temp20 + 0x70] = 0x00;\n                                            storage[temp20 + 0x71] = 0x00;\n                                            storage[temp20 + 0x72] = 0x00;\n                                            storage[temp20 + 0x73] = 0x00;\n                                            storage[temp20 + 0x74] = 0x00;\n                                            storage[temp20 + 0x75] = 0x00;\n                                            storage[temp20 + 0x76] = 0x00;\n                                            storage[temp20 + 0x77] = 0x00;\n                                            storage[temp20 + 0x78] = 0x00;\n                                            storage[temp20 + 0x79] = 0x00;\n                                            storage[temp20 + 0x7a] = 0x00;\n                                            storage[temp20 + 0x7b] = 0x00;\n                                            storage[temp20 + 0x7c] = 0x00;\n                                            storage[temp20 + 0x7d] = 0x00;\n                                            storage[temp20 + 0x7e] = 0x00;\n                                            storage[temp20 + 0x7f] = 0x00;\n                                            storage[temp20 + 0x80] = 0x00;\n                                            storage[temp20 + 0x81] = 0x00;\n                                            storage[temp20 + 0x82] = 0x00;\n                                            storage[temp20 + 0x83] = 0x00;\n                                            storage[temp20 + 0x84] = 0x00;\n                                            storage[temp20 + 0x85] = 0x00;\n                                            storage[temp20 + 0x86] = 0x00;\n                                            storage[temp20 + 0x87] = 0x00;\n                                            storage[temp20 + 0x88] = 0x00;\n                                            storage[temp20 + 0x89] = 0x00;\n                                            storage[temp20 + 0x8a] = 0x00;\n                                            storage[temp20 + 0x8b] = 0x00;\n                                            storage[temp20 + 0x8c] = 0x00;\n                                            storage[temp20 + 0x8d] = 0x00;\n                                            storage[temp20 + 0x8e] = 0x00;\n                                            storage[temp20 + 0x8f] = 0x00;\n                                            storage[temp20 + 0x90] = 0x00;\n                                            storage[temp20 + 0x91] = 0x00;\n                                            storage[temp20 + 0x92] = 0x00;\n                                            storage[temp20 + 0x93] = 0x00;\n                                            storage[temp20 + 0x94] = 0x00;\n                                            storage[temp20 + 0x95] = 0x00;\n                                            storage[temp20 + 0x96] = 0x00;\n                                            storage[temp20 + 0x97] = 0x00;\n                                            storage[temp20 + 0x98] = 0x00;\n                                            storage[temp20 + 0x99] = 0x00;\n                                            storage[temp20 + 0x9a] = 0x00;\n                                            storage[temp20 + 0x9b] = 0x00;\n                                            storage[temp20 + 0x9c] = 0x00;\n                                            storage[temp20 + 0x9d] = 0x00;\n                                            storage[temp20 + 0x9e] = 0x00;\n                                            storage[temp20 + 0x9f] = 0x00;\n                                            storage[temp20 + 0xa0] = 0x00;\n                                            storage[temp20 + 0xa1] = 0x00;\n                                            storage[temp20 + 0xa2] = 0x00;\n                                            storage[temp20 + 0xa3] = 0x00;\n                                            storage[temp20 + 0xa4] = 0x00;\n                                            storage[temp20 + 0xa5] = 0x00;\n                                            storage[temp20 + 0xa6] = 0x00;\n                                            storage[temp20 + 0xa7] = 0x00;\n                                            storage[temp20 + 0xa8] = 0x00;\n                                            storage[temp20 + 0xa9] = 0x00;\n                                            storage[temp20 + 0xaa] = 0x00;\n                                            storage[temp20 + 0xab] = 0x00;\n                                            storage[temp20 + 0xac] = 0x00;\n                                            storage[temp20 + 0xad] = 0x00;\n                                            storage[temp20 + 0xae] = 0x00;\n                                            storage[temp20 + 0xaf] = 0x00;\n                                            storage[temp20 + 0xb0] = 0x00;\n                                            storage[temp20 + 0xb1] = 0x00;\n                                            storage[temp20 + 0xb2] = 0x00;\n                                            storage[temp20 + 0xb3] = 0x00;\n                                            storage[temp20 + 0xb4] = 0x00;\n                                            storage[temp20 + 0xb5] = 0x00;\n                                            storage[temp20 + 0xb6] = 0x00;\n                                            storage[temp20 + 0xb7] = 0x00;\n                                            storage[temp20 + 0xb8] = 0x00;\n                                            storage[temp20 + 0xb9] = 0x00;\n                                            storage[temp20 + 0xba] = 0x00;\n                                            storage[temp20 + 0xbb] = 0x00;\n                                            storage[temp20 + 0xbc] = 0x00;\n                                            storage[temp20 + 0xbd] = 0x00;\n                                            storage[temp20 + 0xbe] = 0x00;\n                                            storage[temp20 + 0xbf] = 0x00;\n                                            storage[temp20 + 0xc0] = 0x00;\n                                            storage[temp20 + 0xc1] = 0x00;\n                                            storage[temp20 + 0xc2] = 0x00;\n                                            storage[temp20 + 0xc3] = 0x00;\n                                            storage[temp20 + 0xc4] = 0x00;\n                                            storage[temp20 + 0xc5] = 0x00;\n                                            storage[temp20 + 0xc6] = 0x00;\n                                            storage[temp20 + 0xc7] = 0x00;\n                                            memory[0xc0:0xe0] = 0x0b;\n                                            var temp21 = keccak256(memory[0xc0:0xe0]);\n                                            storage[temp21] = 0x00;\n                                            storage[temp21 + 0x01] = 0x00;\n                                            storage[temp21 + 0x02] = 0x00;\n                                            storage[temp21 + 0x03] = 0x00;\n                                            storage[temp21 + 0x04] = 0x00;\n                                            storage[temp21 + 0x05] = 0x00;\n                                            storage[temp21 + 0x06] = 0x00;\n                                            storage[temp21 + 0x07] = 0x00;\n                                            storage[temp21 + 0x08] = 0x00;\n                                            storage[temp21 + 0x09] = 0x00;\n                                            storage[temp21 + 0x0a] = 0x00;\n                                            // Error: Could not resolve jump destination!\n                                        }\n                                    } else {\n                                        memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                        var temp22 = var-2;\n                                        var temp23 = memory[temp22:temp22 + 0x20] + 0x01;\n                                        memory[temp22:temp22 + 0x20] = temp23;\n                                    \n                                        if (var-1 != temp23) { goto label_1BBE; }\n                                        else { goto label_1E8B; }\n                                    }\n                                } else {\n                                    memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                    memory[0xc0:0xe0] = 0x0d;\n                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                \n                                    if (!storage[keccak256(memory[0xc0:0xe0])]) {\n                                        memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        var0 = keccak256(memory[0xc0:0x0100]);\n                                        var1 = storage[var0];\n                                        memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                        memory[0xc0:0xe0] = 0x03;\n                                    \n                                        if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                            var temp24 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            var temp25 = storage[keccak256(memory[0xc0:0x0100])];\n                                            var temp26 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if ((storage[keccak256(memory[0xc0:0x0100])] * temp26) / temp25 != temp24) { revert(memory[0x00:0x00]); }\n                                        \n                                            var temp27 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if (storage[var0] + storage[keccak256(memory[0xc0:0x0100])] * temp27 < var1) { revert(memory[0x00:0x00]); }\n                                        \n                                        label_1DBB:\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                                var temp28 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var temp29 = storage[keccak256(memory[0xc0:0x0100])];\n                                                var temp30 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                            \n                                                if ((storage[keccak256(memory[0xc0:0x0100])] * temp30) / temp29 != temp28) { revert(memory[0x00:0x00]); }\n                                            \n                                                var temp31 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var1 = storage[keccak256(memory[0xc0:0x0100])] * temp31;\n                                            \n                                            label_1E2A:\n                                                var temp32 = var0;\n                                                storage[temp32] = storage[temp32] + var1;\n                                                goto label_1E32;\n                                            } else {\n                                                var1 = 0x00;\n                                                goto label_1E2A;\n                                            }\n                                        } else {\n                                            var2 = 0x00;\n                                        \n                                            if (storage[var0] + var2 >= var1) { goto label_1DBB; }\n                                            else { revert(memory[0x00:0x00]); }\n                                        }\n                                    } else {\n                                        memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                        memory[0xc0:0xe0] = 0x0d;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = keccak256(memory[0xc0:0xe0]) + 0x02;\n                                        var1 = storage[var0];\n                                        memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                        memory[0xc0:0xe0] = 0x03;\n                                    \n                                        if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                            var temp33 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            var temp34 = storage[keccak256(memory[0xc0:0x0100])];\n                                            var temp35 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if ((storage[keccak256(memory[0xc0:0x0100])] * temp35) / temp34 != temp33) { revert(memory[0x00:0x00]); }\n                                        \n                                            var temp36 = memory[0x0240:0x0260];\n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            var2 = storage[keccak256(memory[0xc0:0x0100])] * temp36;\n                                        \n                                        label_1CA3:\n                                        \n                                            if (storage[var0] + var2 < var1) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                                var temp37 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var temp38 = storage[keccak256(memory[0xc0:0x0100])];\n                                                var temp39 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                            \n                                                if ((storage[keccak256(memory[0xc0:0x0100])] * temp39) / temp38 != temp37) { revert(memory[0x00:0x00]); }\n                                            \n                                                var temp40 = memory[0x0240:0x0260];\n                                                memory[0xe0:0x0100] = memory[0x0340:0x0360];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var1 = storage[keccak256(memory[0xc0:0x0100])] * temp40;\n                                            \n                                            label_1D20:\n                                                var temp41 = var0;\n                                                storage[temp41] = storage[temp41] + var1;\n                                                goto label_1E32;\n                                            } else {\n                                                var1 = 0x00;\n                                                goto label_1D20;\n                                            }\n                                        } else {\n                                            var2 = 0x00;\n                                            goto label_1CA3;\n                                        }\n                                    }\n                                }\n                            } else {\n                                memory[0x02a0:0x02c0] = 0x08c379a0;\n                                memory[0x02c0:0x02e0] = 0x20;\n                                memory[0x02e0:0x0300] = 0x0d;\n                                memory[0x0300:0x0320] = 0x4e6f742066696e616c6973656400000000000000000000000000000000000000;\n                                var-2 = memory[0x0140:0x0160];\n                                var-1 = memory[0x0160:0x0180];\n                                var0 = memory[0x0180:0x01a0];\n                                var1 = memory[0x01a0:0x01c0];\n                                var2 = memory[0x01c0:0x01e0];\n                                var3 = memory[0x01e0:0x0200];\n                                var4 = memory[0x0200:0x0220];\n                                var5 = memory[0x0220:0x0240];\n                                var6 = memory[0x0240:0x0260];\n                                var var7 = 0x06;\n                                // Unhandled termination\n                            }\n                        } else if (memory[0x00:0x20] != 0xc5f0204c) {\n                            if (memory[0x00:0x20] != 0x287d274b) {\n                                if (memory[0x00:0x20] != 0x2e1bc98f) {\n                                    if (memory[0x00:0x20] != 0xa0b5323f) {\n                                        if (0x00) {\n                                            // Error: StackRead before write???\n                                            var var-2;\n                                            // Error: StackRead before write???\n                                            var var-1;\n                                            // Error: StackRead before write???\n                                            var var-3;\n                                            memory[0x0180:0x01a0] = var-1;\n                                            memory[0x0140:0x0160] = var-2;\n                                            memory[0x0160:0x0180] = var-3;\n                                        \n                                            if (!0x0186a0) { revert(memory[0x00:0x00]); }\n                                        \n                                            var-3 = 0x0186a0;\n                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                            memory[0xc0:0xe0] = 0x09;\n                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        \n                                            if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) {\n                                                var temp12 = memory[0x0160:0x0180];\n                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                memory[0xc0:0xe0] = 0x09;\n                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                var temp13 = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                var temp14 = memory[0x0160:0x0180];\n                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                memory[0xc0:0xe0] = 0x09;\n                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                            \n                                                if ((storage[keccak256(memory[0xc0:0xe0]) + 0x01] * temp14) / temp13 != temp12) { revert(memory[0x00:0x00]); }\n                                            \n                                                var temp15 = memory[0x0160:0x0180];\n                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                memory[0xc0:0xe0] = 0x09;\n                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                var-2 = storage[keccak256(memory[0xc0:0xe0]) + 0x01] * temp15;\n                                            \n                                            label_2C6B:\n                                                memory[0x01a0:0x01c0] = var-2 / var-3;\n                                                memory[0x01c0:0x01e0] = 0x08c379a0;\n                                                memory[0x01e0:0x0200] = 0x20;\n                                                memory[0x0200:0x0220] = 0x10;\n                                                memory[0x0220:0x0240] = 0x52657761726473206465706c6574656400000000000000000000000000000000;\n                                                var temp16 = memory[0x01a0:0x01c0];\n                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                memory[0xc0:0xe0] = 0x09;\n                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                            \n                                                if (storage[keccak256(memory[0xc0:0xe0])] < temp16) { revert(memory[0x01dc:0x0260]); }\n                                            \n                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                memory[0xc0:0xe0] = 0x09;\n                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                var-3 = keccak256(memory[0xc0:0xe0]);\n                                            \n                                                if (storage[var-3] < memory[0x01a0:0x01c0]) { revert(memory[0x00:0x00]); }\n                                            \n                                                var temp17 = var-3;\n                                                storage[temp17] = storage[temp17] - memory[0x01a0:0x01c0];\n                                                memory[0x00:0x20] = memory[0x01a0:0x01c0];\n                                                var-3 = memory[0x00:0x20];\n                                                // Error: Could not resolve jump destination!\n                                            } else {\n                                                var-2 = 0x00;\n                                                goto label_2C6B;\n                                            }\n                                        } else if (memory[0x00:0x20] != 0x90d209ca) {\n                                            if (memory[0x00:0x20] != 0xc396f524) {\n                                                if (memory[0x00:0x20] != 0xe335cfab) {\n                                                    if (memory[0x00:0x20] != 0x7e00ab0a) {\n                                                        if (memory[0x00:0x20] != 0x5a58cd4c) {\n                                                            if (memory[0x00:0x20] != 0xdd627dff) {\n                                                                if (memory[0x00:0x20] != 0x704fdd68) {\n                                                                    if (memory[0x00:0x20] != 0xb9f890de) {\n                                                                        if (memory[0x00:0x20] != 0x190eaaba) {\n                                                                            if (memory[0x00:0x20] != 0x151a67b4) {\n                                                                                if (memory[0x00:0x20] != 0xa9215db4) {\n                                                                                    if (memory[0x00:0x20] != 0x714436f2) {\n                                                                                        if (memory[0x00:0x20] != 0x83e98bc3) {\n                                                                                            if (memory[0x00:0x20] != 0x8146f323) {\n                                                                                                if (memory[0x00:0x20] != 0xeb91d37e) {\n                                                                                                    if (memory[0x00:0x20] != 0xbac4159d) {\n                                                                                                        if (memory[0x00:0x20] != 0x8da5cb5b) {\n                                                                                                            if (memory[0x00:0x20] != 0x573c0b0e) {\n                                                                                                                if (memory[0x00:0x20] != 0x9031d1a8) {\n                                                                                                                    if (memory[0x00:0x20] != 0xc10c9515) {\n                                                                                                                        if (memory[0x00:0x20] != 0x38494a1a) {\n                                                                                                                            if (memory[0x00:0x20] != 0x25abfdd0) {\n                                                                                                                                if (memory[0x00:0x20] != 0xca0341c6) {\n                                                                                                                                    if (memory[0x00:0x20] != 0x74d18447) {\n                                                                                                                                        if (memory[0x00:0x20] != 0x43b8063a) {\n                                                                                                                                            if (memory[0x00:0x20] != 0xd2572c8b) {\n                                                                                                                                                if (memory[0x00:0x20] != 0x78be921f) {\n                                                                                                                                                    if (memory[0x00:0x20] != 0x5d85af0c) {\n                                                                                                                                                        if (memory[0x00:0x20] != 0xca964f6d) {\n                                                                                                                                                            if (memory[0x00:0x20] != 0x965ac0af) {\n                                                                                                                                                                if (memory[0x00:0x20] != 0xfbc6ef00) {\n                                                                                                                                                                    if (memory[0x00:0x20] != 0x8cf0d66f) {\n                                                                                                                                                                        if (memory[0x00:0x20] != 0x20f8d74c) {\n                                                                                                                                                                            if (memory[0x00:0x20] != 0x0d9be7dd) {\n                                                                                                                                                                                if (memory[0x00:0x20] != 0x6ebcddb8) {\n                                                                                                                                                                                    if (memory[0x00:0x20] != 0x85245104) {\n                                                                                                                                                                                        if (memory[0x00:0x20] != 0xfc614adb) {\n                                                                                                                                                                                            if (memory[0x00:0x20] != 0xa912a558) {\n                                                                                                                                                                                                if (memory[0x00:0x20] != 0x96bcc37f) {\n                                                                                                                                                                                                    if (memory[0x00:0x20] != 0x39c6dd93) {\n                                                                                                                                                                                                        if (memory[0x00:0x20] != 0x5a8776be) {\n                                                                                                                                                                                                            if (memory[0x00:0x20] != 0x4179e36e) {\n                                                                                                                                                                                                                if (memory[0x00:0x20] != 0x078690d2) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                var var0 = msg.data[0x04:0x24];\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                                                                                                memory[0xc0:0xe0] = 0x0d;\n                                                                                                                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                                                                var0 = msg.data[0x04:0x24];\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                            \n                                                                                                                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                                                                                                memory[0xc0:0xe0] = 0x0d;\n                                                                                                                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                                                                                                                                        \n                                                                                                                                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                        \n                                                                                                                                                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                                                                                            memory[0xc0:0xe0] = 0x0d;\n                                                                                                                                                                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                                                                        memory[0x00:0x20] = storage[0x0c];\n                                                                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x0a];\n                                                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x09];\n                                                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n                                                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                                                        memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x07];\n                                                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x06];\n                                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x05];\n                                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x04];\n                                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                                        memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x03];\n                                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                        memory[0x00:0x20] = storage[0x0a];\n                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                                                                                \n                                                                                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                                \n                                                                                                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                                    memory[0xc0:0xe0] = 0x09;\n                                                                                                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                var0 = msg.data[0x04:0x24];\n                                                                                                                                            \n                                                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                            \n                                                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                                memory[0xc0:0xe0] = 0x09;\n                                                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                                                                        \n                                                                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                        \n                                                                                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                            memory[0xc0:0xe0] = 0x09;\n                                                                                                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                                                                    \n                                                                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                    \n                                                                                                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                        memory[0xc0:0xe0] = 0x08;\n                                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                } else if (!msg.value) {\n                                                                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                                                                \n                                                                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                \n                                                                                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                    memory[0xc0:0xe0] = 0x07;\n                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                            } else if (!msg.value) {\n                                                                                                                                var0 = msg.data[0x04:0x24];\n                                                                                                                            \n                                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                            \n                                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                memory[0xc0:0xe0] = 0x06;\n                                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                return memory[0x00:0x20];\n                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                        } else if (!msg.value) {\n                                                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                                                        \n                                                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                        \n                                                                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                            memory[0xc0:0xe0] = 0x06;\n                                                                                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                            return memory[0x00:0x20];\n                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                    } else if (!msg.value) {\n                                                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                                                    \n                                                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                    \n                                                                                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                        memory[0xc0:0xe0] = 0x06;\n                                                                                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                        return memory[0x00:0x20];\n                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                } else if (!msg.value) {\n                                                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                                                \n                                                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                \n                                                                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                    memory[0xc0:0xe0] = 0x05;\n                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                                    return memory[0x00:0x20];\n                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                            } else if (!msg.value) {\n                                                                                                                memory[0x00:0x20] = storage[0x02];\n                                                                                                                return memory[0x00:0x20];\n                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                        } else if (!msg.value) {\n                                                                                                            memory[0x00:0x20] = storage[0x01];\n                                                                                                            return memory[0x00:0x20];\n                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                    } else if (!msg.value) {\n                                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                                    \n                                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                    \n                                                                                                        memory[0x0140:0x0160] = 0xce96fe20;\n                                                                                                        memory[0x0160:0x0180] = msg.data[0x04:0x24];\n                                                                                                        var0 = memory[0x0160:0x0180];\n                                                                                                        var var1 = 0x06;\n                                                                                                        // Unhandled termination\n                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                } else if (!msg.value) {\n                                                                                                    var0 = 0x06;\n                                                                                                    // Unhandled termination\n                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                            } else if (!msg.value) {\n                                                                                                var0 = 0x06;\n                                                                                                // Unhandled termination\n                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                        } else if (!msg.value) {\n                                                                                            var0 = 0x06;\n                                                                                            // Unhandled termination\n                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                    } else if (!msg.value) {\n                                                                                        memory[0x0160:0x0180] = 0x08c379a0;\n                                                                                        memory[0x0180:0x01a0] = 0x20;\n                                                                                        memory[0x01a0:0x01c0] = 0x13;\n                                                                                        memory[0x01c0:0x01e0] = 0x536c6f7473206e6f74207965742066696e616c00000000000000000000000000;\n                                                                                        var0 = 0x06;\n                                                                                        // Unhandled termination\n                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                } else if (!msg.value) {\n                                                                                    memory[0x0160:0x0180] = 0x08c379a0;\n                                                                                    memory[0x0180:0x01a0] = 0x20;\n                                                                                    memory[0x01a0:0x01c0] = 0x15;\n                                                                                    memory[0x01c0:0x01e0] = 0x5374616b657273206e6f74207965742066696e616c0000000000000000000000;\n                                                                                    var0 = 0x06;\n                                                                                    // Unhandled termination\n                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                            } else if (!msg.value) {\n                                                                                var0 = msg.data[0x04:0x24];\n                                                                            \n                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0160:0x0180] = 0x08c379a0;\n                                                                                memory[0x0180:0x01a0] = 0x20;\n                                                                                memory[0x01a0:0x01c0] = 0x13;\n                                                                                memory[0x01c0:0x01e0] = 0x536c6f7473206e6f74207965742066696e616c00000000000000000000000000;\n                                                                                var0 = 0x06;\n                                                                                // Unhandled termination\n                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                        } else if (!msg.value) {\n                                                                            memory[0x00:0x20] = 0x0186a0;\n                                                                            return memory[0x00:0x20];\n                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                    } else if (!msg.value) {\n                                                                        memory[0x00:0x20] = storage[0x00];\n                                                                        return memory[0x00:0x20];\n                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                } else if (!msg.value) {\n                                                                    var0 = msg.data[0x04:0x24];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x0140:0x0160] = 0x08c379a0;\n                                                                    memory[0x0160:0x0180] = 0x20;\n                                                                    memory[0x0180:0x01a0] = 0x0a;\n                                                                    memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                                                                \n                                                                    if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                                                                \n                                                                    memory[0x01e0:0x0200] = 0x08c379a0;\n                                                                    memory[0x0200:0x0220] = 0x20;\n                                                                    memory[0x0220:0x0240] = 0x15;\n                                                                    memory[0x0240:0x0260] = 0x4e6f7420612076697274546f6b656e486f6c6465720000000000000000000000;\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x0d;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                \n                                                                    if (!storage[keccak256(memory[0xc0:0xe0])]) { revert(memory[0x01fc:0x0280]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x0d;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                    storage[keccak256(memory[0xc0:0xe0]) + 0x01] = msg.data[0x24:0x44];\n                                                                    stop();\n                                                                } else { revert(memory[0x00:0x00]); }\n                                                            } else if (!msg.value) {\n                                                                var0 = msg.data[0x04:0x24];\n                                                            \n                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var0 = msg.data[0x24:0x44];\n                                                            \n                                                                if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var0 = msg.data[0x64:0x84];\n                                                            \n                                                                if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0x0140:0x0160] = 0x08c379a0;\n                                                                memory[0x0160:0x0180] = 0x20;\n                                                                memory[0x0180:0x01a0] = 0x0a;\n                                                                memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                                                            \n                                                                if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                                                            \n                                                                memory[0x01e0:0x0200] = 0x08c379a0;\n                                                                memory[0x0200:0x0220] = 0x20;\n                                                                memory[0x0220:0x0240] = 0x18;\n                                                                memory[0x0240:0x0260] = 0x41646472657373206861732061637469766520736c6f74730000000000000000;\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x01fc:0x0280]); }\n                                                            \n                                                                memory[0x0280:0x02a0] = 0x08c379a0;\n                                                                memory[0x02a0:0x02c0] = 0x20;\n                                                                memory[0x02c0:0x02e0] = 0x27;\n                                                                memory[0x02e0:0x0300] = 0x416464726573732068617320706f7369746976652073656c665374616b657244;\n                                                                memory[0x0300:0x0320] = 0x65706f7369747300000000000000000000000000000000000000000000000000;\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x07;\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x029c:0x0340]); }\n                                                            \n                                                                memory[0x0340:0x0360] = 0x08c379a0;\n                                                                memory[0x0360:0x0380] = 0x20;\n                                                                memory[0x0380:0x03a0] = 0x1b;\n                                                                memory[0x03a0:0x03c0] = 0x41646472657373206861732072656d61696e696e675265776172640000000000;\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x09;\n                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0xe0])]) { revert(memory[0x035c:0x03e0]); }\n                                                            \n                                                                memory[0x03e0:0x0400] = 0x08c379a0;\n                                                                memory[0x0400:0x0420] = 0x20;\n                                                                memory[0x0420:0x0440] = 0x1c;\n                                                                memory[0x0440:0x0460] = 0x416464726573732068617320706f73697469766520706c656467657300000000;\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x06;\n                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0xe0])]) { revert(memory[0x03fc:0x0480]); }\n                                                            \n                                                                memory[0x0480:0x04a0] = 0x08c379a0;\n                                                                memory[0x04a0:0x04c0] = 0x20;\n                                                                memory[0x04c0:0x04e0] = 0x25;\n                                                                memory[0x04e0:0x0500] = 0x4164647265737320686173206120706f6f6c20696e206f6e676f696e67206175;\n                                                                memory[0x0500:0x0520] = 0x6374696f6e000000000000000000000000000000000000000000000000000000;\n                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                var temp0 = !storage[keccak256(memory[0xc0:0xe0])];\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x09;\n                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                            \n                                                                if (!((storage[keccak256(memory[0xc0:0xe0]) + 0x02] < storage[0x0a]) | temp0)) { revert(memory[0x049c:0x0540]); }\n                                                            \n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = 0x0d;\n                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                memory[0x0540:0x0560] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                            \n                                                                if (!(!msg.data[0x24:0x44] & (memory[0x0540:0x0560] > 0x00))) {\n                                                                label_3F5A:\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x0d;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                    storage[keccak256(memory[0xc0:0xe0])] = msg.data[0x24:0x44];\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x0d;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                    storage[keccak256(memory[0xc0:0xe0]) + 0x01] = msg.data[0x44:0x64];\n                                                                    stop();\n                                                                } else if (!msg.data[0x64:0x84]) {\n                                                                    var0 = 0x0c;\n                                                                \n                                                                    if (storage[var0] + memory[0x0540:0x0560] < storage[var0]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var temp1 = var0;\n                                                                    storage[temp1] = storage[temp1] + memory[0x0540:0x0560];\n                                                                \n                                                                label_3F3B:\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x0d;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                    storage[keccak256(memory[0xc0:0xe0]) + 0x02] = 0x00;\n                                                                    goto label_3F5A;\n                                                                } else {\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = 0x07;\n                                                                    var temp2 = keccak256(memory[0xc0:0x0100]);\n                                                                    var0 = temp2;\n                                                                \n                                                                    if (storage[var0] + memory[0x0540:0x0560] < storage[var0]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var temp3 = var0;\n                                                                    storage[temp3] = storage[temp3] + memory[0x0540:0x0560];\n                                                                    goto label_3F3B;\n                                                                }\n                                                            } else { revert(memory[0x00:0x00]); }\n                                                        } else if (!msg.value) {\n                                                            memory[0x0140:0x0160] = 0x08c379a0;\n                                                            memory[0x0160:0x0180] = 0x20;\n                                                            memory[0x0180:0x01a0] = 0x0a;\n                                                            memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                                                        \n                                                            if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                                                        \n                                                            memory[0x01e0:0x0200] = 0x08c379a0;\n                                                            memory[0x0200:0x0220] = 0x20;\n                                                            memory[0x0220:0x0240] = 0x0f;\n                                                            memory[0x0240:0x0260] = 0x496e206c6f636b75702070686173650000000000000000000000000000000000;\n                                                            memory[0xc0:0xe0] = 0x0b;\n                                                        \n                                                            if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x01fc:0x0280]); }\n                                                        \n                                                            memory[0x0280:0x02a0] = 0x08c379a0;\n                                                            memory[0x02a0:0x02c0] = 0x20;\n                                                            memory[0x02c0:0x02e0] = 0x1a;\n                                                            memory[0x02e0:0x0300] = 0x6561726c6965737444656c657465206e6f742072656163686564000000000000;\n                                                        \n                                                            if (block.timestamp < storage[0x02]) { revert(memory[0x029c:0x0320]); }\n                                                        \n                                                            if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0340:0x0360] = 0x70a08231;\n                                                            memory[0x0360:0x0380] = address(this);\n                                                            var temp4;\n                                                            temp4, memory[0x03c0:0x03e0] = address(storage[0x00]).staticcall.gas(msg.gas)(memory[0x035c:0x0380]);\n                                                        \n                                                            if (!temp4) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0320:0x0340] = memory[0x03c0:0x03e0];\n                                                        \n                                                            if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0400:0x0420] = 0xa9059cbb;\n                                                            memory[0x0420:0x0440] = storage[0x01];\n                                                            memory[0x0440:0x0460] = memory[0x0320:0x0340];\n                                                            var temp5;\n                                                            temp5, memory[0x04a0:0x04c0] = address(storage[0x00]).call.gas(msg.gas)(memory[0x041c:0x0460]);\n                                                        \n                                                            if (!temp5) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x03e0:0x0400] = memory[0x04a0:0x04c0];\n                                                            memory[0x04c0:0x04e0] = 0x08c379a0;\n                                                            memory[0x04e0:0x0500] = 0x20;\n                                                            memory[0x0500:0x0520] = 0x0f;\n                                                            memory[0x0520:0x0540] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n                                                        \n                                                            if (memory[0x03e0:0x0400]) { selfdestruct(storage[0x01]); }\n                                                            else { revert(memory[0x04dc:0x0560]); }\n                                                        } else { revert(memory[0x00:0x00]); }\n                                                    } else if (!msg.value) {\n                                                        memory[0x0140:0x0160] = 0x00;\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        var temp6 = !storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x06;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                    \n                                                        if (!((storage[keccak256(memory[0xc0:0xe0]) + 0x01] < storage[0x0a]) | temp6)) {\n                                                        label_38F0:\n                                                        \n                                                            if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0180:0x01a0] = 0xa9059cbb;\n                                                            memory[0x01a0:0x01c0] = msg.sender;\n                                                            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n                                                            var temp7;\n                                                            temp7, memory[0x0220:0x0240] = address(storage[0x00]).call.gas(msg.gas)(memory[0x019c:0x01e0]);\n                                                        \n                                                            if (!temp7) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0160:0x0180] = memory[0x0220:0x0240];\n                                                            memory[0x0240:0x0260] = 0x08c379a0;\n                                                            memory[0x0260:0x0280] = 0x20;\n                                                            memory[0x0280:0x02a0] = 0x0f;\n                                                            memory[0x02a0:0x02c0] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n                                                        \n                                                            if (!memory[0x0160:0x0180]) { revert(memory[0x025c:0x02e0]); }\n                                                        \n                                                            memory[0x02e0:0x0300] = memory[0x0140:0x0160];\n                                                            log(memory[0x02e0:0x0300], [0x319886960989451362e0df29ecf7a2b292784275dcc71a52dd1e11eefcc73393, msg.sender]);\n                                                            memory[0x00:0x20] = memory[0x0140:0x0160];\n                                                            return memory[0x00:0x20];\n                                                        } else {\n                                                            var0 = 0x0140;\n                                                            var temp8 = memory[var0:var0 + 0x20];\n                                                            memory[0xe0:0x0100] = msg.sender;\n                                                            memory[0xc0:0xe0] = 0x06;\n                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                        \n                                                            if (memory[var0:var0 + 0x20] + storage[keccak256(memory[0xc0:0xe0])] < temp8) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.sender;\n                                                            memory[0xc0:0xe0] = 0x06;\n                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                            var temp9 = var0;\n                                                            memory[temp9:temp9 + 0x20] = memory[temp9:temp9 + 0x20] + storage[keccak256(memory[0xc0:0xe0])];\n                                                            memory[0xe0:0x0100] = msg.sender;\n                                                            memory[0xc0:0xe0] = 0x06;\n                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                            var temp10 = keccak256(memory[0xc0:0xe0]);\n                                                            storage[temp10] = 0x00;\n                                                            storage[temp10 + 0x01] = 0x00;\n                                                            storage[temp10 + 0x02] = 0x00;\n                                                            goto label_38F0;\n                                                        }\n                                                    } else { revert(memory[0x00:0x00]); }\n                                                } else if (!msg.value) {\n                                                    memory[0x0140:0x0160] = 0x00;\n                                                    memory[0xe0:0x0100] = msg.sender;\n                                                    memory[0xc0:0xe0] = 0x0d;\n                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                \n                                                    if (!storage[keccak256(memory[0xc0:0xe0])]) {\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x07;\n                                                        memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        var0 = memory[0x0140:0x0160];\n                                                        var1 = memory[0x0160:0x0180];\n                                                        var var2 = memory[0x0180:0x01a0];\n                                                        memory[0x01c0:0x01e0] = 0xce96fe20;\n                                                        memory[0x01e0:0x0200] = msg.sender;\n                                                        var var3 = memory[0x01e0:0x0200];\n                                                        var var4 = 0x06;\n                                                        // Unhandled termination\n                                                    } else {\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x0d;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x0d;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                        storage[keccak256(memory[0xc0:0xe0]) + 0x02] = 0x00;\n                                                    \n                                                        if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0320:0x0340] = 0xa9059cbb;\n                                                        memory[0x0340:0x0360] = msg.sender;\n                                                        memory[0x0360:0x0380] = memory[0x0140:0x0160];\n                                                        var temp11;\n                                                        temp11, memory[0x03c0:0x03e0] = address(storage[0x00]).call.gas(msg.gas)(memory[0x033c:0x0380]);\n                                                    \n                                                        if (!temp11) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0300:0x0320] = memory[0x03c0:0x03e0];\n                                                        memory[0x03e0:0x0400] = 0x08c379a0;\n                                                        memory[0x0400:0x0420] = 0x20;\n                                                        memory[0x0420:0x0440] = 0x0f;\n                                                        memory[0x0440:0x0460] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n                                                    \n                                                        if (!memory[0x0300:0x0320]) { revert(memory[0x03fc:0x0480]); }\n                                                    \n                                                        memory[0x0480:0x04a0] = memory[0x0140:0x0160];\n                                                        log(memory[0x0480:0x04a0], [0xbd0f93dba4ea8f4fd8b7fa83e8559d5fa7fabd5300477bfaf2e99524609f17c5, msg.sender]);\n                                                        memory[0x00:0x20] = memory[0x0140:0x0160];\n                                                        return memory[0x00:0x20];\n                                                    }\n                                                } else { revert(memory[0x00:0x00]); }\n                                            } else if (!msg.value) {\n                                                var0 = msg.data[0x04:0x24];\n                                            \n                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                            \n                                                memory[0x0140:0x0160] = storage[0x0a];\n                                                memory[0x01a0:0x01c0] = 0x08c379a0;\n                                                memory[0x01c0:0x01e0] = 0x20;\n                                                memory[0x01e0:0x0200] = 0x14;\n                                                memory[0x0200:0x0220] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                                                var0 = memory[0x0140:0x0160];\n                                                var1 = 0x06;\n                                                // Unhandled termination\n                                            } else { revert(memory[0x00:0x00]); }\n                                        } else if (!msg.value) {\n                                            var0 = msg.data[0x24:0x44];\n                                        \n                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0x0140:0x0160] = 0x08c379a0;\n                                            memory[0x0160:0x0180] = 0x20;\n                                            memory[0x0180:0x01a0] = 0x0f;\n                                            memory[0x01a0:0x01c0] = 0x4e6f742063757272656e74204149440000000000000000000000000000000000;\n                                        \n                                            if (msg.data[0x04:0x24] != storage[0x0a]) { revert(memory[0x015c:0x01e0]); }\n                                        \n                                            memory[0x0220:0x0240] = 0x08c379a0;\n                                            memory[0x0240:0x0260] = 0x20;\n                                            memory[0x0260:0x0280] = 0x14;\n                                            memory[0x0280:0x02a0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                                            var0 = memory[0x0140:0x0160];\n                                            var1 = memory[0x0160:0x0180];\n                                            var2 = memory[0x0180:0x01a0];\n                                            var3 = memory[0x01a0:0x01c0];\n                                            var4 = memory[0x01c0:0x01e0];\n                                            var var5 = 0x06;\n                                            // Unhandled termination\n                                        } else { revert(memory[0x00:0x00]); }\n                                    } else if (!msg.value) {\n                                        memory[0x01a0:0x01c0] = 0x08c379a0;\n                                        memory[0x01c0:0x01e0] = 0x20;\n                                        memory[0x01e0:0x0200] = 0x1d;\n                                        memory[0x0200:0x0220] = 0x42696464696e67207068617365206f6620414944206e6f74206f766572000000;\n                                        memory[0xe0:0x0100] = msg.sender;\n                                        memory[0xc0:0xe0] = 0x09;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = storage[keccak256(memory[0xc0:0xe0]) + 0x02] < storage[0x0a];\n                                        var1 = memory[0x0140:0x0160];\n                                        var2 = 0x06;\n                                        // Unhandled termination\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    memory[0x0140:0x0160] = 0x08c379a0;\n                                    memory[0x0160:0x0180] = 0x20;\n                                    memory[0x0180:0x01a0] = 0x13;\n                                    memory[0x01a0:0x01c0] = 0x4e6f742063757272656e742061756374696f6e00000000000000000000000000;\n                                \n                                    if (msg.data[0x04:0x24] != storage[0x0a]) { revert(memory[0x015c:0x01e0]); }\n                                \n                                    memory[0x0220:0x0240] = 0x08c379a0;\n                                    memory[0x0240:0x0260] = 0x20;\n                                    memory[0x0260:0x0280] = 0x14;\n                                    memory[0x0280:0x02a0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                                    var0 = memory[0x0140:0x0160];\n                                    var1 = memory[0x0160:0x0180];\n                                    var2 = memory[0x0180:0x01a0];\n                                    var3 = memory[0x01a0:0x01c0];\n                                    var4 = memory[0x01c0:0x01e0];\n                                    var5 = 0x06;\n                                    // Unhandled termination\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                var0 = msg.data[0x04:0x24];\n                            \n                                if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0x0140:0x0160] = 0x08c379a0;\n                                memory[0x0160:0x0180] = 0x20;\n                                memory[0x0180:0x01a0] = 0x0a;\n                                memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                            \n                                if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                            \n                                var0 = memory[0x0140:0x0160];\n                                var1 = memory[0x0160:0x0180];\n                                var2 = memory[0x0180:0x01a0];\n                                var3 = memory[0x01a0:0x01c0];\n                                var4 = memory[0x01c0:0x01e0];\n                                memory[0x0200:0x0220] = 0x2acd2e64;\n                                memory[0x0220:0x0240] = msg.data[0x04:0x24];\n                                var5 = memory[0x0220:0x0240];\n                                var var6 = 0x06;\n                                // Unhandled termination\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            memory[0x0140:0x0160] = 0x08c379a0;\n                            memory[0x0160:0x0180] = 0x20;\n                            memory[0x0180:0x01a0] = 0x2e;\n                            memory[0x01a0:0x01c0] = 0x41756374696f6e206e6f742066696e616c6973656420796574206f72206e6f20;\n                            memory[0x01c0:0x01e0] = 0x61756374696f6e20746f20656e64000000000000000000000000000000000000;\n                            memory[0xc0:0xe0] = 0x0b;\n                        \n                            if (storage[keccak256(memory[0xc0:0xe0])] <= 0x00) { revert(memory[0x015c:0x0200]); }\n                        \n                            memory[0x0200:0x0220] = 0x08c379a0;\n                            memory[0x0220:0x0240] = 0x20;\n                            memory[0x0240:0x0260] = 0x0f;\n                            memory[0x0260:0x0280] = 0x4c6f636b7570206e6f74206f7665720000000000000000000000000000000000;\n                            memory[0xc0:0xe0] = 0x0b;\n                        \n                            if (block.number < storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x021c:0x02a0]); }\n                        \n                            memory[0x02a0:0x02c0] = 0x0140;\n                            var0 = memory[memory[0x02a0:0x02c0]:memory[0x02a0:0x02c0] + 0x20];\n                            memory[0x02a0:0x02c0] = memory[0x02a0:0x02c0] + 0x20;\n                        \n                            if (memory[0x02a0:0x02c0] >= 0x02a0) {\n                            label_2581:\n                                memory[0x02c0:0x02e0] = 0x2acd2e64;\n                                memory[0x02e0:0x0300] = 0x01;\n                                var1 = memory[0x02e0:0x0300];\n                                var2 = 0x06;\n                                // Unhandled termination\n                            } else {\n                            label_257D:\n                                var1 = memory[memory[0x02a0:0x02c0]:memory[0x02a0:0x02c0] + 0x20];\n                                memory[0x02a0:0x02c0] = memory[0x02a0:0x02c0] + 0x20;\n                            \n                                if (memory[0x02a0:0x02c0] >= 0x02a0) { goto label_2581; }\n                                else { goto label_257D; }\n                            }\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        var0 = memory[0x0140:0x0160];\n                        var1 = 0x06;\n                        // Unhandled termination\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    memory[0x0160:0x0180] = 0x08c379a0;\n                    memory[0x0180:0x01a0] = 0x20;\n                    memory[0x01a0:0x01c0] = 0x14;\n                    memory[0x01c0:0x01e0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                    var0 = 0x06;\n                    // Unhandled termination\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0x0140:0x0160] = 0x08c379a0;\n                memory[0x0160:0x0180] = 0x20;\n                memory[0x0180:0x01a0] = 0x0a;\n                memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n            \n                if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n            \n                memory[0x01e0:0x0200] = 0x08c379a0;\n                memory[0x0200:0x0220] = 0x20;\n                memory[0x0220:0x0240] = 0x0f;\n                memory[0x0240:0x0260] = 0x41756374696f6e206f6e676f696e670000000000000000000000000000000000;\n                memory[0xc0:0xe0] = 0x0b;\n            \n                if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x01fc:0x0280]); }\n            \n                memory[0x0280:0x02a0] = storage[0x0c];\n                storage[0x0c] = 0x00;\n            \n                if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n            \n                if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n            \n                memory[0x02c0:0x02e0] = 0xa9059cbb;\n                memory[0x02e0:0x0300] = storage[0x01];\n                memory[0x0300:0x0320] = memory[0x0280:0x02a0];\n                var temp42;\n                temp42, memory[0x0360:0x0380] = address(storage[0x00]).call.gas(msg.gas)(memory[0x02dc:0x0320]);\n            \n                if (!temp42) { revert(memory[0x00:0x00]); }\n            \n                memory[0x02a0:0x02c0] = memory[0x0360:0x0380];\n                memory[0x0380:0x03a0] = 0x08c379a0;\n                memory[0x03a0:0x03c0] = 0x20;\n                memory[0x03c0:0x03e0] = 0x0f;\n                memory[0x03e0:0x0400] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n            \n                if (memory[0x02a0:0x02c0]) { stop(); }\n                else { revert(memory[0x039c:0x0420]); }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x0140:0x0160] = 0x08c379a0;\n            memory[0x0160:0x0180] = 0x20;\n            memory[0x0180:0x01a0] = 0x0a;\n            memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n        \n            if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n        \n            memory[0x01e0:0x0200] = 0x08c379a0;\n            memory[0x0200:0x0220] = 0x20;\n            memory[0x0220:0x0240] = 0x12;\n            memory[0x0240:0x0260] = 0x496e76616c69642073746172745374616b650000000000000000000000000000;\n        \n            if (msg.data[0x24:0x44] <= msg.data[0x44:0x64]) { revert(memory[0x01fc:0x0280]); }\n        \n            memory[0x0280:0x02a0] = 0x08c379a0;\n            memory[0x02a0:0x02c0] = 0x20;\n            memory[0x02c0:0x02e0] = 0x12;\n            memory[0x02e0:0x0300] = 0x496e76616c6420736c6f74206e756d6265720000000000000000000000000000;\n        \n            if (!((msg.data[0xa4:0xc4] > 0x00) & (msg.data[0xa4:0xc4] <= 0xc8))) { revert(memory[0x029c:0x0320]); }\n        \n            memory[0x0320:0x0340] = 0x08c379a0;\n            memory[0x0340:0x0360] = 0x20;\n            memory[0x0360:0x0380] = 0x1a;\n            memory[0x0380:0x03a0] = 0x5374617274206265666f72652063757272656e7420626c6f636b000000000000;\n        \n            if (msg.data[0x04:0x24] < block.number) { revert(memory[0x033c:0x03c0]); }\n        \n            memory[0x03c0:0x03e0] = 0x08c379a0;\n            memory[0x03e0:0x0400] = 0x20;\n            memory[0x0400:0x0420] = 0x22;\n            memory[0x0420:0x0440] = 0x52657365727665207374616b652068617320746f206265206174206c65617374;\n            memory[0x0440:0x0460] = 0x2031000000000000000000000000000000000000000000000000000000000000;\n        \n            if (msg.data[0x44:0x64] <= 0x00) { revert(memory[0x03dc:0x0480]); }\n        \n            memory[0x0480:0x04a0] = 0x08c379a0;\n            memory[0x04a0:0x04c0] = 0x20;\n            memory[0x04c0:0x04e0] = 0x13;\n            memory[0x04e0:0x0500] = 0x456e642063757272656e742061756374696f6e00000000000000000000000000;\n            memory[0xc0:0xe0] = 0x0b;\n        \n            if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x049c:0x0520]); }\n        \n            var0 = 0x0a;\n        \n            if (storage[var0] + 0x01 < storage[var0]) { revert(memory[0x00:0x00]); }\n        \n            var temp43 = var0;\n            storage[temp43] = storage[temp43] + 0x01;\n        \n            if (!msg.data[0x64:0x84]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x64:0x84];\n            var1 = 0x01;\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x24:0x44] - msg.data[0x44:0x64];\n            var3 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var3 < var2) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var2 < var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01;\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x24:0x44] - msg.data[0x44:0x64];\n            var3 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var3 < var2) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0520:0x0540] = (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var2) - var1 / var0;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24] + msg.data[0x64:0x84];\n            var1 = 0x19;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] + var1 < var0) { revert(memory[0x00:0x00]); }\n        \n            var0 = 0x19;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0540:0x0560] = msg.data[0x04:0x24] + msg.data[0x64:0x84] + var0;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x03] = msg.data[0x04:0x24];\n            var temp44 = memory[0x0540:0x0560];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x04] = temp44;\n        \n            if (memory[0x0540:0x0560] + msg.data[0x84:0xa4] < memory[0x0540:0x0560]) { revert(memory[0x00:0x00]); }\n        \n            var temp45 = memory[0x0540:0x0560] + msg.data[0x84:0xa4];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x01] = temp45;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x05] = msg.data[0x24:0x44];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x06] = msg.data[0x44:0x64];\n            var temp46 = memory[0x0520:0x0540];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x07] = temp46;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x08] = msg.data[0xa4:0xc4];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0])] = 0x00;\n            var0 = 0x0c;\n        \n            if (storage[var0] + msg.data[0xc4:0xe4] < storage[var0]) { revert(memory[0x00:0x00]); }\n        \n            var temp47 = var0;\n            storage[temp47] = storage[temp47] + msg.data[0xc4:0xe4];\n            memory[0xc0:0xe0] = 0x0b;\n        \n            if (!storage[keccak256(memory[0xc0:0xe0]) + 0x08]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xc0:0xe0] = 0x0b;\n            var temp48 = storage[0x0c] / storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x09] = temp48;\n        \n            if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0580:0x05a0] = 0x23b872dd;\n            memory[0x05a0:0x05c0] = msg.sender;\n            memory[0x05c0:0x05e0] = address(this);\n            memory[0x05e0:0x0600] = msg.data[0xc4:0xe4];\n            var temp49;\n            temp49, memory[0x0640:0x0660] = address(storage[0x00]).call.gas(msg.gas)(memory[0x059c:0x0600]);\n        \n            if (!temp49) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0560:0x0580] = memory[0x0640:0x0660];\n            memory[0x0660:0x0680] = 0x08c379a0;\n            memory[0x0680:0x06a0] = 0x20;\n            memory[0x06a0:0x06c0] = 0x0f;\n            memory[0x06c0:0x06e0] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n        \n            if (!memory[0x0560:0x0580]) { revert(memory[0x067c:0x0700]); }\n        \n            memory[0x0700:0x0720] = storage[0x0a];\n            memory[0x0720:0x0740] = msg.data[0x04:0x24];\n            memory[0x0740:0x0760] = memory[0x0540:0x0560];\n        \n            if (memory[0x0540:0x0560] + msg.data[0x84:0xa4] < memory[0x0540:0x0560]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0760:0x0780] = memory[0x0540:0x0560] + msg.data[0x84:0xa4];\n            memory[0x0780:0x07a0] = msg.data[0x24:0x44];\n            memory[0x07a0:0x07c0] = msg.data[0x44:0x64];\n            memory[0x07c0:0x07e0] = memory[0x0520:0x0540];\n            memory[0x07e0:0x0800] = msg.data[0xa4:0xc4];\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x0800:0x0820] = storage[keccak256(memory[0xc0:0xe0]) + 0x09];\n            log(memory[0x0700:0x0820], [0xede627ce4bced8a9b0a39e006c0a1d534d530222904131c567cc925f8090e972]);\n            stop();\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
	"status": "1",
	"time_cost": 36.002230644226074,
	"usage": {
		"completion_tokens": 301,
		"prompt_tokens": 28201,
		"total_tokens": 28502
	}
}