{
	"address": "0x269a6ffb97325e8e371f067fea216c9f62848833",
	"input_format": "DecompiledCode",
	"ir": "# Palkeoramix decompiler. \n\nconst name = 'Blockchain of 3 Kindoms'\nconst symbol = 'BO3K'\nconst Admin = 0x3ac98f5ea4946f58439d551e20ed12091af0f597\nconst LEADER_FEE = 3 * 10^16\n\ndef storage:\n  stor0 is uint256 at storage 0\n  adminRevenue is uint256 at storage 1\n  stor3 is uint256 at storage 3\n  stor4 is uint8 at storage 4\n  roundID is uint256 at storage 5\n  _teamID is uint256 at storage 6\n  stor7 is uint256 at storage 7\n  stor8 is uint256 at storage 8\n  stor9 is uint256 at storage 9\n  teamData is mapping of struct at storage 14\n  roundData is mapping of struct at storage 15\n  team is mapping of struct at storage 16\n  stor169F is uint256 at storage 0x169f97de0d9a84d840042b17d3c6b9638b3d6fd9024c9eb0c7a306a17b49f890\n  stor169F is uint256 at storage 0x169f97de0d9a84d840042b17d3c6b9638b3d6fd9024c9eb0c7a306a17b49f891\n  stor169F is uint256 at storage 0x169f97de0d9a84d840042b17d3c6b9638b3d6fd9024c9eb0c7a306a17b49f896\n  stor169F is uint8 at storage 0x169f97de0d9a84d840042b17d3c6b9638b3d6fd9024c9eb0c7a306a17b49f897\n\ndef getTeam(uint256 _teamId): # not payable\n  return team[_teamId][caller].field_1536\n\ndef getRoundData(uint256 _roundId): # not payable\n  return roundData[_roundId].field_0, \n         roundData[_roundId].field_1280,\n         roundData[_roundId].field_1024,\n         bool(roundData[_roundId].field_2048)\n\ndef roundID(): # not payable\n  return roundID\n\ndef getPlayerFlagAmount(uint256 _roundID): # not payable\n  return team[_roundID][caller].field_256\n\ndef getPot(uint256 _roundID): # not payable\n  return roundData[_roundID].field_1280\n\ndef getTeamData(uint256 _roundID, uint256 _tID): # not payable\n  return teamData[_roundID][_tID].field_256, teamData[_roundID][_tID].field_0\n\ndef getGeneral(uint256 _roundID): # not payable\n  return bool(team[_roundID][caller].field_1800), team[_roundID][caller].field_2048\n\ndef getGeneralProfit(uint256 _roundID): # not payable\n  return team[_roundID][caller].field_768\n\ndef getTotalFlagAmount(uint256 _roundID): # not payable\n  return roundData[_roundID].field_768\n\ndef getUpdatedTime(uint256 _roundID): # not payable\n  return roundData[_roundID].field_1792\n\ndef getAdminRevenue(): # not payable\n  return adminRevenue\n\ndef _teamID(): # not payable\n  return _teamID\n\ndef getIsActive(): # not payable\n  return bool(stor4)\n\ndef getTotalEth(uint256 _roundID): # not payable\n  return roundData[_roundID].field_1024\n\n#\n#  Regular functions\n#\n\ndef _fallback(?) payable: # default function\n  revert\n\ndef getBonus(uint256 _tokens): # not payable\n  return (team[_tokens][caller].field_1024 + team[_tokens][caller].field_512)\n\ndef isLegalTime(): # not payable\n  if block.timestamp < roundData[stor5].field_256:\n      return block.timestamp >= roundData[stor5].field_256\n  return block.timestamp <= roundData[stor5].field_512\n\ndef getRemainTime(): # not payable\n  if bool(stor4) != 1:\n      revert with 0, 'Did not activated'\n  if block.timestamp > roundData[stor5].field_256:\n      revert with 0, 'SafeMath sub failed'\n  return (roundData[stor5].field_256 - block.timestamp)\n\ndef activate(): # not payable\n  if 0xabb29fd841c9b919c3b681194c6173f30ff7055d != caller:\n      revert with 0, 'msg sender error'\n  if stor4:\n      revert with 0, 'Has activated'\n  stor4 = 1\n  roundID = 1\n  stor169F = block.timestamp\n  stor169F = block.timestamp + (24 * 3600)\n  stor169F = 0\n  stor169F = 0\n\ndef withdrawAdminRevenue(): # not payable\n  require 0x3ac98f5ea4946f58439d551e20ed12091af0f597 == caller\n  call 0x3ac98f5ea4946f58439d551e20ed12091af0f597 with:\n     value adminRevenue wei\n       gas 2300 * is_zero(value) wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  adminRevenue = 0\n\ndef getTime(uint256 _roundID): # not payable\n  if block.timestamp < roundData[stor5].field_256:\n      return 0\n  if roundData[stor5].field_512 < block.timestamp:\n      return 0\n  if block.timestamp > roundData[_roundID].field_512:\n      revert with 0, 'SafeMath sub failed'\n  return roundData[_roundID].field_256, roundData[_roundID].field_512 - block.timestamp\n\ndef getDistributedETH(uint256 _roundID): # not payable\n  if roundData[_roundID].field_1280 > roundData[_roundID].field_1024:\n      revert with 0, 'SafeMath sub failed'\n  if stor0 > roundData[_roundID].field_1024 - roundData[_roundID].field_1280:\n      revert with 0, 'SafeMath sub failed'\n  return (roundData[_roundID].field_1024 - roundData[_roundID].field_1280 - stor0)\n\ndef becomeGeneral(uint256 _generalID) payable: \n  if call.value < 3 * 10^16:\n      revert with 0, 'Not enough money or not player'\n  if not team[stor5][caller].field_1792:\n      revert with 0, 'Not enough money or not player'\n  call caller with:\n     value 3 * 10^16 wei\n       gas 0 wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  team[stor5][caller].field_1800 = 1\n  team[stor5][caller].field_2048 = _generalID\n\ndef getFlagRevenue(uint256 _round): # not payable\n  if not team[_round][caller].field_256:\n      if team[_round][caller].field_1280 > 0:\n          revert with 0, 'SafeMath sub failed'\n      return -team[_round][caller].field_1280\n  if roundData[_round].field_1536 * team[_round][caller].field_256 / team[_round][caller].field_256 != roundData[_round].field_1536:\n      revert with 0, 'SafeMath mul failed'\n  if team[_round][caller].field_1280 > roundData[_round].field_1536 * team[_round][caller].field_256 / 10^18:\n      revert with 0, 'SafeMath sub failed'\n  return ((roundData[_round].field_1536 * team[_round][caller].field_256 / 10^18) - team[_round][caller].field_1280)\n\ndef buyFlag(uint256 _tID, address refferedAddr) payable: \n  if bool(stor4) != 1:\n      revert with 0, 'Did not activated'\n  if ext_code.size(caller):\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Addresses not owned by human are forbidden'\n  if call.value < 10^11:\n      revert with 0, 'ground limit'\n  if call.value > 100000 * 10^18:\n      revert with 0, 'floor limit'\n  if _tID != 1:\n      if _tID != 2:\n          if _tID != 3:\n              revert with 0, 'Invalid Team ID!'\n  _teamID = _tID\n  if block.timestamp < roundData[stor5].field_256:\n      if block.timestamp >= roundData[stor5].field_256:\n          require roundData[stor5].field_512 < block.timestamp\n      require not roundData[stor5].field_2048\n      roundData[stor5].field_2048 = 1\n      if bool(stor4) != 1:\n          revert with 0, 'Did not activated'\n      if block.timestamp >= roundData[stor5].field_256:\n          if roundData[stor5].field_512 >= block.timestamp:\n              revert with 0, 'The round has not finished'\n      if roundData[stor5].field_1280:\n          if stor7 * roundData[stor5].field_1280 / roundData[stor5].field_1280 != stor7:\n              revert with 0, 'SafeMath mul failed'\n          require stor7 * roundData[stor5].field_1280 == (1000 * stor7 * roundData[stor5].field_1280 / 1000) + (stor7 * roundData[stor5].field_1280 % 1000)\n      if roundData[stor5].field_1280:\n          if stor8 * roundData[stor5].field_1280 / roundData[stor5].field_1280 != stor8:\n              revert with 0, 'SafeMath mul failed'\n          require stor8 * roundData[stor5].field_1280 == (1000 * stor8 * roundData[stor5].field_1280 / 1000) + (stor8 * roundData[stor5].field_1280 % 1000)\n      if roundData[stor5].field_1280:\n          if stor9 * roundData[stor5].field_1280 / roundData[stor5].field_1280 != stor9:\n              revert with 0, 'SafeMath mul failed'\n  else:\n      if roundData[stor5].field_512 >= block.timestamp:\n          if bool(stor4) != 1:\n              revert with 0, 'Did not activated'\n          if call.value < 10^11:\n              revert with 0, 'ground limit'\n          if call.value > 100000 * 10^18:\n              revert with 0, 'floor limit'\n          if roundData[stor5].field_1024:\n              if 10^18 * roundData[stor5].field_1024 / roundData[stor5].field_1024 != 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              if 10^18 * roundData[stor5].field_1024:\n                  if 312500000000000000000000000 * 10^18 * roundData[stor5].field_1024 / 10^18 * roundData[stor5].field_1024 != 312500000 * 10^18:\n                      revert with 0, 'SafeMath mul failed'\n                  if (312500000000000000000000000 * 10^18 * roundData[stor5].field_1024) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * roundData[stor5].field_1024:\n                      revert with 0, 'SafeMath add failed'\n      else:\n          if block.timestamp >= roundData[stor5].field_256:\n              require roundData[stor5].field_512 < block.timestamp\n          require not roundData[stor5].field_2048\n          roundData[stor5].field_2048 = 1\n          if bool(stor4) != 1:\n              revert with 0, 'Did not activated'\n          if block.timestamp >= roundData[stor5].field_256:\n              if roundData[stor5].field_512 >= block.timestamp:\n                  revert with 0, 'The round has not finished'\n          if roundData[stor5].field_1280:\n              if stor7 * roundData[stor5].field_1280 / roundData[stor5].field_1280 != stor7:\n                  revert with 0, 'SafeMath mul failed'\n              require stor7 * roundData[stor5].field_1280 == (1000 * stor7 * roundData[stor5].field_1280 / 1000) + (stor7 * roundData[stor5].field_1280 % 1000)\n          if roundData[stor5].field_1280:\n              if stor8 * roundData[stor5].field_1280 / roundData[stor5].field_1280 != stor8:\n                  revert with 0, 'SafeMath mul failed'\n              require stor8 * roundData[stor5].field_1280 == (1000 * stor8 * roundData[stor5].field_1280 / 1000) + (stor8 * roundData[stor5].field_1280 % 1000)\n          if roundData[stor5].field_1280:\n              if stor9 * roundData[stor5].field_1280 / roundData[stor5].field_1280 != stor9:\n                  revert with 0, 'SafeMath mul failed'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef getTeamBonus(uint256 _roundID): # not payable\n  if not roundData[_roundID].field_1280:\n      if block.timestamp < roundData[stor5].field_256:\n          if team[_roundID][caller].field_1536 != stor3:\n              return 0\n          if team[_roundID][caller].field_2304:\n              return 0\n      else:\n          if roundData[stor5].field_512 < block.timestamp:\n              if team[_roundID][caller].field_1536 != stor3:\n                  return 0\n              if team[_roundID][caller].field_2304:\n                  return 0\n          else:\n              if _roundID != roundID:\n                  if team[_roundID][caller].field_1536 != stor3:\n                      return 0\n                  if team[_roundID][caller].field_2304:\n                      return 0\n      if team[_roundID][caller].field_256:\n          if 0 / team[_roundID][caller].field_256:\n              revert with 0, 'SafeMath mul failed'\n      require teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 > 0\n      if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n          require not teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 * 0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256\n          if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n              return (0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256)\n  else:\n      if stor8 * roundData[_roundID].field_1280 / roundData[_roundID].field_1280 != stor8:\n          revert with 0, 'SafeMath mul failed'\n      require stor8 * roundData[_roundID].field_1280 == (1000 * stor8 * roundData[_roundID].field_1280 / 1000) + (stor8 * roundData[_roundID].field_1280 % 1000)\n      if block.timestamp < roundData[stor5].field_256:\n          if team[_roundID][caller].field_1536 != stor3:\n              return 0\n          if team[_roundID][caller].field_2304:\n              return 0\n      else:\n          if roundData[stor5].field_512 < block.timestamp:\n              if team[_roundID][caller].field_1536 != stor3:\n                  return 0\n              if team[_roundID][caller].field_2304:\n                  return 0\n          else:\n              if _roundID != roundID:\n                  if team[_roundID][caller].field_1536 != stor3:\n                      return 0\n                  if team[_roundID][caller].field_2304:\n                      return 0\n      if not team[_roundID][caller].field_256:\n          require teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 > 0\n          if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n              require not teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 * 0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256\n              if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                  return (0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256)\n      else:\n          if stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 / team[_roundID][caller].field_256 != stor8 * roundData[_roundID].field_1280 / 1000:\n              revert with 0, 'SafeMath mul failed'\n          require teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 > 0\n          if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n              require stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 == (teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 * stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + (stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 % teamData[_roundID][stor16[_roundID][caller].field_1536].field_256)\n              if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                  return (stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256)\n  revert\n\ndef getAllRevenue(uint256 _roundID): # not payable\n  if not team[_roundID][caller].field_256:\n      if team[_roundID][caller].field_1280 > 0:\n          revert with 0, 'SafeMath sub failed'\n      if not roundData[_roundID].field_1280:\n          if block.timestamp < roundData[stor5].field_256:\n              if team[_roundID][caller].field_1536 != stor3:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              if team[_roundID][caller].field_2304:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          else:\n              if roundData[stor5].field_512 < block.timestamp:\n                  if team[_roundID][caller].field_1536 != stor3:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                  if team[_roundID][caller].field_2304:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              else:\n                  if _roundID != roundID:\n                      if team[_roundID][caller].field_1536 != stor3:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                      if team[_roundID][caller].field_2304:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          if team[_roundID][caller].field_256:\n              if 0 / team[_roundID][caller].field_256:\n                  revert with 0, 'SafeMath mul failed'\n          require teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 > 0\n          if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n              require not teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 * 0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256\n              if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                  return ((0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n      else:\n          if stor8 * roundData[_roundID].field_1280 / roundData[_roundID].field_1280 != stor8:\n              revert with 0, 'SafeMath mul failed'\n          require stor8 * roundData[_roundID].field_1280 == (1000 * stor8 * roundData[_roundID].field_1280 / 1000) + (stor8 * roundData[_roundID].field_1280 % 1000)\n          if block.timestamp < roundData[stor5].field_256:\n              if team[_roundID][caller].field_1536 != stor3:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              if team[_roundID][caller].field_2304:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          else:\n              if roundData[stor5].field_512 < block.timestamp:\n                  if team[_roundID][caller].field_1536 != stor3:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                  if team[_roundID][caller].field_2304:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              else:\n                  if _roundID != roundID:\n                      if team[_roundID][caller].field_1536 != stor3:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                      if team[_roundID][caller].field_2304:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          if not team[_roundID][caller].field_256:\n              require teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 > 0\n              if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                  require not teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 * 0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256\n                  if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                      return ((0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          else:\n              if stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 / team[_roundID][caller].field_256 != stor8 * roundData[_roundID].field_1280 / 1000:\n                  revert with 0, 'SafeMath mul failed'\n              require teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 > 0\n              if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                  require stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 == (teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 * stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + (stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 % teamData[_roundID][stor16[_roundID][caller].field_1536].field_256)\n                  if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                      return ((stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n  else:\n      if roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / team[_roundID][caller].field_256 != roundData[_roundID].field_1536:\n          revert with 0, 'SafeMath mul failed'\n      if team[_roundID][caller].field_1280 > roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18:\n          revert with 0, 'SafeMath sub failed'\n      if not roundData[_roundID].field_1280:\n          if block.timestamp < roundData[stor5].field_256:\n              if team[_roundID][caller].field_1536 != stor3:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              if team[_roundID][caller].field_2304:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          else:\n              if roundData[stor5].field_512 < block.timestamp:\n                  if team[_roundID][caller].field_1536 != stor3:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                  if team[_roundID][caller].field_2304:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              else:\n                  if _roundID != roundID:\n                      if team[_roundID][caller].field_1536 != stor3:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                      if team[_roundID][caller].field_2304:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          if team[_roundID][caller].field_256:\n              if 0 / team[_roundID][caller].field_256:\n                  revert with 0, 'SafeMath mul failed'\n          require teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 > 0\n          if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n              require not teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 * 0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256\n              if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                  return ((0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n      else:\n          if stor8 * roundData[_roundID].field_1280 / roundData[_roundID].field_1280 != stor8:\n              revert with 0, 'SafeMath mul failed'\n          require stor8 * roundData[_roundID].field_1280 == (1000 * stor8 * roundData[_roundID].field_1280 / 1000) + (stor8 * roundData[_roundID].field_1280 % 1000)\n          if block.timestamp < roundData[stor5].field_256:\n              if team[_roundID][caller].field_1536 != stor3:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              if team[_roundID][caller].field_2304:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          else:\n              if roundData[stor5].field_512 < block.timestamp:\n                  if team[_roundID][caller].field_1536 != stor3:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                  if team[_roundID][caller].field_2304:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              else:\n                  if _roundID != roundID:\n                      if team[_roundID][caller].field_1536 != stor3:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                      if team[_roundID][caller].field_2304:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          if not team[_roundID][caller].field_256:\n              require teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 > 0\n              if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                  require not teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 * 0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256\n                  if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                      return ((0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          else:\n              if stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 / team[_roundID][caller].field_256 != stor8 * roundData[_roundID].field_1280 / 1000:\n                  revert with 0, 'SafeMath mul failed'\n              require teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 > 0\n              if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                  require stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 == (teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 * stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + (stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 % teamData[_roundID][stor16[_roundID][caller].field_1536].field_256)\n                  if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                      return ((stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n  revert\n\ndef getFlagPrice(): # not payable\n  if block.timestamp < roundData[stor5].field_256:\n      return 75 * 10^12\n  if roundData[stor5].field_512 < block.timestamp:\n      return 75 * 10^12\n  if roundData[stor5].field_768 + 10^18 < roundData[stor5].field_768:\n      revert with 0, 'SafeMath add failed'\n  if 10^18 > roundData[stor5].field_768 + 10^18:\n      revert with 0, 'SafeMath sub failed'\n  if not roundData[stor5].field_768:\n      if not roundData[stor5].field_768:\n          if not roundData[stor5].field_768 + 10^18:\n              if not roundData[stor5].field_768 + 10^18:\n                  return 0\n              if (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18 / roundData[stor5].field_768 + 10^18 != roundData[stor5].field_768 + 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              if (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              if 0 > (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18)\n          if (10^18 * roundData[stor5].field_768) + 1000000000000000000 * 10^18 / roundData[stor5].field_768 + 10^18 != 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 149999843750000 != (10^18 * roundData[stor5].field_768) + 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if not roundData[stor5].field_768 + 10^18:\n              if (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if 0 > (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18)\n          if (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18 / roundData[stor5].field_768 + 10^18 != roundData[stor5].field_768 + 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if 0 > ((149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18)\n      if roundData[stor5].field_768 * roundData[stor5].field_768 / roundData[stor5].field_768 != roundData[stor5].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if 78125000 * roundData[stor5].field_768 * roundData[stor5].field_768 / 78125000 != roundData[stor5].field_768 * roundData[stor5].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if 78125000 * roundData[stor5].field_768 * roundData[stor5].field_768 < 78125000 * roundData[stor5].field_768 * roundData[stor5].field_768:\n          revert with 0, 'SafeMath add failed'\n      if not roundData[stor5].field_768 + 10^18:\n          if not roundData[stor5].field_768 + 10^18:\n              if 78125000 * roundData[stor5].field_768 * roundData[stor5].field_768 / 1000000000000000000 * 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              return -(78125000 * roundData[stor5].field_768 * roundData[stor5].field_768 / 1000000000000000000 * 10^18)\n          if (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18 / roundData[stor5].field_768 + 10^18 != roundData[stor5].field_768 + 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * roundData[stor5].field_768 * roundData[stor5].field_768 / 1000000000000000000 * 10^18 > (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768 / 1000000000000000000 * 10^18))\n      if (10^18 * roundData[stor5].field_768) + 1000000000000000000 * 10^18 / roundData[stor5].field_768 + 10^18 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 149999843750000 != (10^18 * roundData[stor5].field_768) + 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if not roundData[stor5].field_768 + 10^18:\n          if (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if 78125000 * roundData[stor5].field_768 * roundData[stor5].field_768 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18) - (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768 / 1000000000000000000 * 10^18))\n      if (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18 / roundData[stor5].field_768 + 10^18 != roundData[stor5].field_768 + 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if 78125000 * roundData[stor5].field_768 * roundData[stor5].field_768 / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return ((((149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768 / 1000000000000000000 * 10^18))\n  if 10^18 * roundData[stor5].field_768 / roundData[stor5].field_768 != 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if 149999843750000 * 10^18 * roundData[stor5].field_768 / 149999843750000 != 10^18 * roundData[stor5].field_768:\n      revert with 0, 'SafeMath mul failed'\n  if not roundData[stor5].field_768:\n      if 149999843750000 * 10^18 * roundData[stor5].field_768 / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if not roundData[stor5].field_768 + 10^18:\n          if not roundData[stor5].field_768 + 10^18:\n              if 149999843750000 * 10^18 * roundData[stor5].field_768 / 2 / 1000000000000000000 * 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              return -(149999843750000 * 10^18 * roundData[stor5].field_768 / 2 / 1000000000000000000 * 10^18)\n          if (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18 / roundData[stor5].field_768 + 10^18 != roundData[stor5].field_768 + 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if 149999843750000 * 10^18 * roundData[stor5].field_768 / 2 / 1000000000000000000 * 10^18 > (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * roundData[stor5].field_768 / 2 / 1000000000000000000 * 10^18))\n      if (10^18 * roundData[stor5].field_768) + 1000000000000000000 * 10^18 / roundData[stor5].field_768 + 10^18 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 149999843750000 != (10^18 * roundData[stor5].field_768) + 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if not roundData[stor5].field_768 + 10^18:\n          if (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if 149999843750000 * 10^18 * roundData[stor5].field_768 / 2 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * roundData[stor5].field_768 / 2 / 1000000000000000000 * 10^18))\n      if (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18 / roundData[stor5].field_768 + 10^18 != roundData[stor5].field_768 + 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if 149999843750000 * 10^18 * roundData[stor5].field_768 / 2 / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return ((((149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * roundData[stor5].field_768 / 2 / 1000000000000000000 * 10^18))\n  if roundData[stor5].field_768 * roundData[stor5].field_768 / roundData[stor5].field_768 != roundData[stor5].field_768:\n      revert with 0, 'SafeMath mul failed'\n  if 78125000 * roundData[stor5].field_768 * roundData[stor5].field_768 / 78125000 != roundData[stor5].field_768 * roundData[stor5].field_768:\n      revert with 0, 'SafeMath mul failed'\n  if (149999843750000 * 10^18 * roundData[stor5].field_768 / 2) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) < 78125000 * roundData[stor5].field_768 * roundData[stor5].field_768:\n      revert with 0, 'SafeMath add failed'\n  if not roundData[stor5].field_768 + 10^18:\n      if not roundData[stor5].field_768 + 10^18:\n          if (149999843750000 * 10^18 * roundData[stor5].field_768 / 2) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) / 1000000000000000000 * 10^18 > 0:\n              revert with 0, 'SafeMath sub failed'\n          return -((149999843750000 * 10^18 * roundData[stor5].field_768 / 2) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) / 1000000000000000000 * 10^18)\n      if (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18 / roundData[stor5].field_768 + 10^18 != roundData[stor5].field_768 + 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * roundData[stor5].field_768 / 2) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) / 1000000000000000000 * 10^18 > (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return (((156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * roundData[stor5].field_768 / 2) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) / 1000000000000000000 * 10^18))\n  if (10^18 * roundData[stor5].field_768) + 1000000000000000000 * 10^18 / roundData[stor5].field_768 + 10^18 != 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 149999843750000 != (10^18 * roundData[stor5].field_768) + 1000000000000000000 * 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if not roundData[stor5].field_768 + 10^18:\n      if (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if (149999843750000 * 10^18 * roundData[stor5].field_768 / 2) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return (((149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * roundData[stor5].field_768 / 2) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) / 1000000000000000000 * 10^18))\n  if (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18 / roundData[stor5].field_768 + 10^18 != roundData[stor5].field_768 + 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * roundData[stor5].field_768) + (roundData[stor5].field_768 * roundData[stor5].field_768) + 1000000000000000000 * 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if (149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n      revert with 0, 'SafeMath add failed'\n  if (149999843750000 * 10^18 * roundData[stor5].field_768 / 2) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n      revert with 0, 'SafeMath sub failed'\n  return ((((149999843750000 * 10^18 * roundData[stor5].field_768) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * roundData[stor5].field_768) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * roundData[stor5].field_768 / 2) + (78125000 * roundData[stor5].field_768 * roundData[stor5].field_768) / 1000000000000000000 * 10^18))\n\ndef getAllWithdrawableRevenue(uint256 _roundID): # not payable\n  if block.timestamp >= roundData[stor5].field_256:\n      if roundData[stor5].field_512 >= block.timestamp:\n          if _roundID == roundID:\n              if not team[_roundID][caller].field_256:\n                  if team[_roundID][caller].field_1280 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              if roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / team[_roundID][caller].field_256 != roundData[_roundID].field_1536:\n                  revert with 0, 'SafeMath mul failed'\n              if team[_roundID][caller].field_1280 > roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n  if not team[_roundID][caller].field_256:\n      if team[_roundID][caller].field_1280 > 0:\n          revert with 0, 'SafeMath sub failed'\n      if not roundData[_roundID].field_1280:\n          if block.timestamp < roundData[stor5].field_256:\n              if team[_roundID][caller].field_1536 != stor3:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              if team[_roundID][caller].field_2304:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          else:\n              if roundData[stor5].field_512 < block.timestamp:\n                  if team[_roundID][caller].field_1536 != stor3:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                  if team[_roundID][caller].field_2304:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              else:\n                  if _roundID != roundID:\n                      if team[_roundID][caller].field_1536 != stor3:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                      if team[_roundID][caller].field_2304:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          if team[_roundID][caller].field_256:\n              if 0 / team[_roundID][caller].field_256:\n                  revert with 0, 'SafeMath mul failed'\n          require teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 > 0\n          if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n              require not teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 * 0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256\n              if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                  return ((0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n      else:\n          if stor8 * roundData[_roundID].field_1280 / roundData[_roundID].field_1280 != stor8:\n              revert with 0, 'SafeMath mul failed'\n          require stor8 * roundData[_roundID].field_1280 == (1000 * stor8 * roundData[_roundID].field_1280 / 1000) + (stor8 * roundData[_roundID].field_1280 % 1000)\n          if block.timestamp < roundData[stor5].field_256:\n              if team[_roundID][caller].field_1536 != stor3:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              if team[_roundID][caller].field_2304:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          else:\n              if roundData[stor5].field_512 < block.timestamp:\n                  if team[_roundID][caller].field_1536 != stor3:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                  if team[_roundID][caller].field_2304:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              else:\n                  if _roundID != roundID:\n                      if team[_roundID][caller].field_1536 != stor3:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                      if team[_roundID][caller].field_2304:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          if not team[_roundID][caller].field_256:\n              require teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 > 0\n              if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                  require not teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 * 0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256\n                  if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                      return ((0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          else:\n              if stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 / team[_roundID][caller].field_256 != stor8 * roundData[_roundID].field_1280 / 1000:\n                  revert with 0, 'SafeMath mul failed'\n              require teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 > 0\n              if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                  require stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 == (teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 * stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + (stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 % teamData[_roundID][stor16[_roundID][caller].field_1536].field_256)\n                  if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                      return ((stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n  else:\n      if roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / team[_roundID][caller].field_256 != roundData[_roundID].field_1536:\n          revert with 0, 'SafeMath mul failed'\n      if team[_roundID][caller].field_1280 > roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18:\n          revert with 0, 'SafeMath sub failed'\n      if not roundData[_roundID].field_1280:\n          if block.timestamp < roundData[stor5].field_256:\n              if team[_roundID][caller].field_1536 != stor3:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              if team[_roundID][caller].field_2304:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          else:\n              if roundData[stor5].field_512 < block.timestamp:\n                  if team[_roundID][caller].field_1536 != stor3:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                  if team[_roundID][caller].field_2304:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              else:\n                  if _roundID != roundID:\n                      if team[_roundID][caller].field_1536 != stor3:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                      if team[_roundID][caller].field_2304:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          if team[_roundID][caller].field_256:\n              if 0 / team[_roundID][caller].field_256:\n                  revert with 0, 'SafeMath mul failed'\n          require teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 > 0\n          if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n              require not teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 * 0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256\n              if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                  return ((0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n      else:\n          if stor8 * roundData[_roundID].field_1280 / roundData[_roundID].field_1280 != stor8:\n              revert with 0, 'SafeMath mul failed'\n          require stor8 * roundData[_roundID].field_1280 == (1000 * stor8 * roundData[_roundID].field_1280 / 1000) + (stor8 * roundData[_roundID].field_1280 % 1000)\n          if block.timestamp < roundData[stor5].field_256:\n              if team[_roundID][caller].field_1536 != stor3:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              if team[_roundID][caller].field_2304:\n                  return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          else:\n              if roundData[stor5].field_512 < block.timestamp:\n                  if team[_roundID][caller].field_1536 != stor3:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                  if team[_roundID][caller].field_2304:\n                      return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n              else:\n                  if _roundID != roundID:\n                      if team[_roundID][caller].field_1536 != stor3:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n                      if team[_roundID][caller].field_2304:\n                          return (team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          if not team[_roundID][caller].field_256:\n              require teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 > 0\n              if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                  require not teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 * 0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256\n                  if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                      return ((0 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n          else:\n              if stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 / team[_roundID][caller].field_256 != stor8 * roundData[_roundID].field_1280 / 1000:\n                  revert with 0, 'SafeMath mul failed'\n              require teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 > 0\n              if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                  require stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 == (teamData[_roundID][stor16[_roundID][caller].field_1536].field_256 * stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + (stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 % teamData[_roundID][stor16[_roundID][caller].field_1536].field_256)\n                  if teamData[_roundID][stor16[_roundID][caller].field_1536].field_256:\n                      return ((stor8 * roundData[_roundID].field_1280 / 1000 * team[_roundID][caller].field_256 / teamData[_roundID][stor16[_roundID][caller].field_1536].field_256) + team[_roundID][caller].field_1024 + team[_roundID][caller].field_512 + (roundData[_roundID].field_1536 * team[_roundID][caller].field_256 / 10^18) - team[_roundID][caller].field_1280 + team[_roundID][caller].field_768)\n  revert\n\ndef getFlagPriceByFlags(uint256 _roundID, uint256 _flagAmount): # not payable\n  if not _flagAmount:\n      if roundData[_roundID].field_768 < roundData[_roundID].field_768:\n          revert with 0, 'SafeMath add failed'\n      if 0 > roundData[_roundID].field_768:\n          revert with 0, 'SafeMath sub failed'\n      if not roundData[_roundID].field_768:\n          if not roundData[_roundID].field_768:\n              if not roundData[_roundID].field_768:\n                  if not roundData[_roundID].field_768:\n                      return 0\n                  if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n                      revert with 0, 'SafeMath mul failed'\n                  if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                      revert with 0, 'SafeMath mul failed'\n                  if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                      revert with 0, 'SafeMath add failed'\n                  if 0 > 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18:\n                      revert with 0, 'SafeMath sub failed'\n                  return (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18)\n              if 10^18 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 149999843750000 != 10^18 * roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath mul failed'\n              if not roundData[_roundID].field_768:\n                  if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  if 0 > 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18:\n                      revert with 0, 'SafeMath sub failed'\n                  return (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18)\n              if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath mul failed'\n              if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath mul failed'\n              if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath add failed'\n              if 0 > (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18)\n          if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath add failed'\n          if not roundData[_roundID].field_768:\n              if not roundData[_roundID].field_768:\n                  if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  return -(78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18)\n              if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath mul failed'\n              if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath mul failed'\n              if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath add failed'\n              if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18 > 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              else:\n                  return 0\n          if 10^18 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 149999843750000 != 10^18 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if not roundData[_roundID].field_768:\n              if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18 > 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18) - (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18))\n          if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath add failed'\n          if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18) - (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18))\n      if 10^18 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 149999843750000 != 10^18 * roundData[_roundID].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if not roundData[_roundID].field_768:\n          if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if not roundData[_roundID].field_768:\n              if not roundData[_roundID].field_768:\n                  if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  return -(149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18)\n              if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath mul failed'\n              if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath mul failed'\n              if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath add failed'\n              if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18 > 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18))\n          if 10^18 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 149999843750000 != 10^18 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if not roundData[_roundID].field_768:\n              if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18 > 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              else:\n                  return 0\n          if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath add failed'\n          if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18))\n      if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n          revert with 0, 'SafeMath add failed'\n      if not roundData[_roundID].field_768:\n          if not roundData[_roundID].field_768:\n              if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              return -((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18)\n          if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath add failed'\n          if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18 > 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return ((78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18))\n      if 10^18 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 149999843750000 != 10^18 * roundData[_roundID].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if not roundData[_roundID].field_768:\n          if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18 > 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return ((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18))\n      if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n          revert with 0, 'SafeMath add failed'\n      if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      else:\n          return 0\n  if 10^18 * _flagAmount / _flagAmount != 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if not _flagAmount:\n      if roundData[_roundID].field_768 < roundData[_roundID].field_768:\n          revert with 0, 'SafeMath add failed'\n      if 10^18 * _flagAmount > roundData[_roundID].field_768:\n          revert with 0, 'SafeMath sub failed'\n      if not roundData[_roundID].field_768 - (10^18 * _flagAmount):\n          if not roundData[_roundID].field_768 - (10^18 * _flagAmount):\n              if not roundData[_roundID].field_768:\n                  if not roundData[_roundID].field_768:\n                      return 0\n                  if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n                      revert with 0, 'SafeMath mul failed'\n                  if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                      revert with 0, 'SafeMath mul failed'\n                  if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                      revert with 0, 'SafeMath add failed'\n                  if 0 > 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18:\n                      revert with 0, 'SafeMath sub failed'\n                  return (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18)\n              if 10^18 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 149999843750000 != 10^18 * roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath mul failed'\n              if not roundData[_roundID].field_768:\n                  if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  if 0 > 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18:\n                      revert with 0, 'SafeMath sub failed'\n                  return (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18)\n              if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath mul failed'\n              if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath mul failed'\n              if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath add failed'\n              if 0 > (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18)\n          if (roundData[_roundID].field_768 * roundData[_roundID].field_768) - (10^18 * _flagAmount * roundData[_roundID].field_768) - (10^18 * roundData[_roundID].field_768 * _flagAmount) + (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) / roundData[_roundID].field_768 - (10^18 * _flagAmount) != roundData[_roundID].field_768 - (10^18 * _flagAmount):\n              revert with 0, 'SafeMath mul failed'\n          if (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 78125000 != (roundData[_roundID].field_768 * roundData[_roundID].field_768) - (10^18 * _flagAmount * roundData[_roundID].field_768) - (10^18 * roundData[_roundID].field_768 * _flagAmount) + (1000000000000000000 * 10^18 * _flagAmount * _flagAmount):\n              revert with 0, 'SafeMath mul failed'\n          if not roundData[_roundID].field_768:\n              if not roundData[_roundID].field_768:\n                  if (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  return -((78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18)\n              if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath mul failed'\n              if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath mul failed'\n              if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath add failed'\n              if (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18 > 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18) - ((78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18))\n          if 10^18 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 149999843750000 != 10^18 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if not roundData[_roundID].field_768:\n              if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18 > 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18) - ((78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18))\n          if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath add failed'\n          if (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18) - ((78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18))\n      if (10^18 * roundData[_roundID].field_768) - (1000000000000000000 * 10^18 * _flagAmount) / roundData[_roundID].field_768 - (10^18 * _flagAmount) != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 149999843750000 != (10^18 * roundData[_roundID].field_768) - (1000000000000000000 * 10^18 * _flagAmount):\n          revert with 0, 'SafeMath mul failed'\n      if not roundData[_roundID].field_768 - (10^18 * _flagAmount):\n          if (149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if not roundData[_roundID].field_768:\n              if not roundData[_roundID].field_768:\n                  if (149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2 / 1000000000000000000 * 10^18 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  return -((149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2 / 1000000000000000000 * 10^18)\n              if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath mul failed'\n              if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath mul failed'\n              if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath add failed'\n              if (149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2 / 1000000000000000000 * 10^18 > 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2 / 1000000000000000000 * 10^18))\n          if 10^18 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 149999843750000 != 10^18 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if not roundData[_roundID].field_768:\n              if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if (149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2 / 1000000000000000000 * 10^18 > 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2 / 1000000000000000000 * 10^18))\n          if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath add failed'\n          if (149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2 / 1000000000000000000 * 10^18))\n      if (roundData[_roundID].field_768 * roundData[_roundID].field_768) - (10^18 * _flagAmount * roundData[_roundID].field_768) - (10^18 * roundData[_roundID].field_768 * _flagAmount) + (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) / roundData[_roundID].field_768 - (10^18 * _flagAmount) != roundData[_roundID].field_768 - (10^18 * _flagAmount):\n          revert with 0, 'SafeMath mul failed'\n      if (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 78125000 != (roundData[_roundID].field_768 * roundData[_roundID].field_768) - (10^18 * _flagAmount * roundData[_roundID].field_768) - (10^18 * roundData[_roundID].field_768 * _flagAmount) + (1000000000000000000 * 10^18 * _flagAmount * _flagAmount):\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if not roundData[_roundID].field_768:\n          if not roundData[_roundID].field_768:\n              if ((149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              return -(((149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18)\n          if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n              revert with 0, 'SafeMath add failed'\n          if ((149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18 > 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return ((78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18) - (((149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18))\n      if 10^18 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 149999843750000 != 10^18 * roundData[_roundID].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if not roundData[_roundID].field_768:\n          if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if ((149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18 > 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return ((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18) - (((149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18))\n      if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n          revert with 0, 'SafeMath add failed'\n      if ((149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return (((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18) - (((149999843750000 * 10^18 * roundData[_roundID].field_768) - (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) - (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) - (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) / 1000000000000000000 * 10^18))\n  if 10^18 * _flagAmount / _flagAmount != 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if (10^18 * _flagAmount) + roundData[_roundID].field_768 < roundData[_roundID].field_768:\n      revert with 0, 'SafeMath add failed'\n  if 10^18 * _flagAmount > (10^18 * _flagAmount) + roundData[_roundID].field_768:\n      revert with 0, 'SafeMath sub failed'\n  if not roundData[_roundID].field_768:\n      if not roundData[_roundID].field_768:\n          if not (10^18 * _flagAmount) + roundData[_roundID].field_768:\n              if not (10^18 * _flagAmount) + roundData[_roundID].field_768:\n                  return 0\n              if (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768) / (10^18 * _flagAmount) + roundData[_roundID].field_768 != (10^18 * _flagAmount) + roundData[_roundID].field_768:\n                  revert with 0, 'SafeMath mul failed'\n              if (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 78125000 != (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768):\n                  revert with 0, 'SafeMath mul failed'\n              if 0 > (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18)\n          if (1000000000000000000 * 10^18 * _flagAmount) + (10^18 * roundData[_roundID].field_768) / (10^18 * _flagAmount) + roundData[_roundID].field_768 != 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 149999843750000 != (1000000000000000000 * 10^18 * _flagAmount) + (10^18 * roundData[_roundID].field_768):\n              revert with 0, 'SafeMath mul failed'\n          if not (10^18 * _flagAmount) + roundData[_roundID].field_768:\n              if (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if 0 > (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 / 1000000000000000000 * 10^18)\n          if (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768) / (10^18 * _flagAmount) + roundData[_roundID].field_768 != (10^18 * _flagAmount) + roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 78125000 != (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768):\n              revert with 0, 'SafeMath mul failed'\n          if (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if 0 > ((0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18)\n      if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n          revert with 0, 'SafeMath add failed'\n      if not (10^18 * _flagAmount) + roundData[_roundID].field_768:\n          if not (10^18 * _flagAmount) + roundData[_roundID].field_768:\n              if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              return -(78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18)\n          if (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768) / (10^18 * _flagAmount) + roundData[_roundID].field_768 != (10^18 * _flagAmount) + roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 78125000 != (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768):\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18 > (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18) - (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18))\n      if (1000000000000000000 * 10^18 * _flagAmount) + (10^18 * roundData[_roundID].field_768) / (10^18 * _flagAmount) + roundData[_roundID].field_768 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 149999843750000 != (1000000000000000000 * 10^18 * _flagAmount) + (10^18 * roundData[_roundID].field_768):\n          revert with 0, 'SafeMath mul failed'\n      if not (10^18 * _flagAmount) + roundData[_roundID].field_768:\n          if (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18 > (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 / 1000000000000000000 * 10^18) - (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18))\n      if (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768) / (10^18 * _flagAmount) + roundData[_roundID].field_768 != (10^18 * _flagAmount) + roundData[_roundID].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 78125000 != (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768):\n          revert with 0, 'SafeMath mul failed'\n      if (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18 > ((0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return ((((0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18) - (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 1000000000000000000 * 10^18))\n  if 10^18 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 149999843750000 != 10^18 * roundData[_roundID].field_768:\n      revert with 0, 'SafeMath mul failed'\n  if not roundData[_roundID].field_768:\n      if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if not (10^18 * _flagAmount) + roundData[_roundID].field_768:\n          if not (10^18 * _flagAmount) + roundData[_roundID].field_768:\n              if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              return -(149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18)\n          if (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768) / (10^18 * _flagAmount) + roundData[_roundID].field_768 != (10^18 * _flagAmount) + roundData[_roundID].field_768:\n              revert with 0, 'SafeMath mul failed'\n          if (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 78125000 != (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768):\n              revert with 0, 'SafeMath mul failed'\n          if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18 > (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18))\n      if (1000000000000000000 * 10^18 * _flagAmount) + (10^18 * roundData[_roundID].field_768) / (10^18 * _flagAmount) + roundData[_roundID].field_768 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 149999843750000 != (1000000000000000000 * 10^18 * _flagAmount) + (10^18 * roundData[_roundID].field_768):\n          revert with 0, 'SafeMath mul failed'\n      if not (10^18 * _flagAmount) + roundData[_roundID].field_768:\n          if (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18 > (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18))\n      if (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768) / (10^18 * _flagAmount) + roundData[_roundID].field_768 != (10^18 * _flagAmount) + roundData[_roundID].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 78125000 != (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768):\n          revert with 0, 'SafeMath mul failed'\n      if (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if 149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18 > ((0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return ((((0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2 / 1000000000000000000 * 10^18))\n  if roundData[_roundID].field_768 * roundData[_roundID].field_768 / roundData[_roundID].field_768 != roundData[_roundID].field_768:\n      revert with 0, 'SafeMath mul failed'\n  if 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768 / 78125000 != roundData[_roundID].field_768 * roundData[_roundID].field_768:\n      revert with 0, 'SafeMath mul failed'\n  if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) < 78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768:\n      revert with 0, 'SafeMath add failed'\n  if not (10^18 * _flagAmount) + roundData[_roundID].field_768:\n      if not (10^18 * _flagAmount) + roundData[_roundID].field_768:\n          if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18 > 0:\n              revert with 0, 'SafeMath sub failed'\n          return -((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18)\n      if (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768) / (10^18 * _flagAmount) + roundData[_roundID].field_768 != (10^18 * _flagAmount) + roundData[_roundID].field_768:\n          revert with 0, 'SafeMath mul failed'\n      if (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 78125000 != (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768):\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18 > (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return (((78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18))\n  if (1000000000000000000 * 10^18 * _flagAmount) + (10^18 * roundData[_roundID].field_768) / (10^18 * _flagAmount) + roundData[_roundID].field_768 != 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 149999843750000 != (1000000000000000000 * 10^18 * _flagAmount) + (10^18 * roundData[_roundID].field_768):\n      revert with 0, 'SafeMath mul failed'\n  if not (10^18 * _flagAmount) + roundData[_roundID].field_768:\n      if (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18 > (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return (((0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18))\n  if (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768) / (10^18 * _flagAmount) + roundData[_roundID].field_768 != (10^18 * _flagAmount) + roundData[_roundID].field_768:\n      revert with 0, 'SafeMath mul failed'\n  if (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 78125000 != (1000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (10^18 * roundData[_roundID].field_768 * _flagAmount) + (10^18 * _flagAmount * roundData[_roundID].field_768) + (roundData[_roundID].field_768 * roundData[_roundID].field_768):\n      revert with 0, 'SafeMath mul failed'\n  if (0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2 < 0:\n      revert with 0, 'SafeMath add failed'\n  if (149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18 > ((0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18:\n      revert with 0, 'SafeMath sub failed'\n  return ((((0x66a2519f4ce084becaa29127238e58970000000000 * _flagAmount) + (149999843750000 * 10^18 * roundData[_roundID].field_768) / 2) + (78125000000000000000000000 * 10^18 * _flagAmount * _flagAmount) + (78125000 * 10^18 * roundData[_roundID].field_768 * _flagAmount) + (78125000 * 10^18 * _flagAmount * roundData[_roundID].field_768) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * roundData[_roundID].field_768 / 2) + (78125000 * roundData[_roundID].field_768 * roundData[_roundID].field_768) / 1000000000000000000 * 10^18))\n\ndef withdraw(uint256 amount): # not payable\n  if bool(stor4) != 1:\n      revert with 0, 'Did not activated'\n  if ext_code.size(caller):\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Addresses not owned by human are forbidden'\n  if bool(team[amount][caller].field_1792) != 1:\n      revert with 0, 'Not Registered Before'\n  if not team[amount][caller].field_256:\n      if team[amount][caller].field_1280 > 0:\n          revert with 0, 'SafeMath sub failed'\n      if block.timestamp < roundData[stor5].field_256:\n          if not roundData[amount].field_1280:\n              if block.timestamp < roundData[stor5].field_256:\n                  if team[amount][caller].field_1536 != stor3:\n                      call caller with:\n                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                           gas 2300 * is_zero(value) wei\n                  else:\n                      if team[amount][caller].field_2304:\n                          call caller with:\n                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n                      else:\n                          if team[amount][caller].field_256:\n                              if 0 / team[amount][caller].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                          require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                          require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                          call caller with:\n                             value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n              else:\n                  if roundData[stor5].field_512 < block.timestamp:\n                      if team[amount][caller].field_1536 != stor3:\n                          call caller with:\n                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n                      else:\n                          if team[amount][caller].field_2304:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_256:\n                                  if 0 / team[amount][caller].field_256:\n                                      revert with 0, 'SafeMath mul failed'\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              call caller with:\n                                 value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                  else:\n                      if amount == roundID:\n                          if team[amount][caller].field_256:\n                              if 0 / team[amount][caller].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                          require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                          require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                          call caller with:\n                             value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n                      else:\n                          if team[amount][caller].field_1536 != stor3:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_2304:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_256:\n                                      if 0 / team[amount][caller].field_256:\n                                          revert with 0, 'SafeMath mul failed'\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n          else:\n              if stor8 * roundData[amount].field_1280 / roundData[amount].field_1280 != stor8:\n                  revert with 0, 'SafeMath mul failed'\n              require stor8 * roundData[amount].field_1280 == (1000 * stor8 * roundData[amount].field_1280 / 1000) + (stor8 * roundData[amount].field_1280 % 1000)\n              if block.timestamp < roundData[stor5].field_256:\n                  if team[amount][caller].field_1536 != stor3:\n                      call caller with:\n                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                           gas 2300 * is_zero(value) wei\n                  else:\n                      if team[amount][caller].field_2304:\n                          call caller with:\n                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n                      else:\n                          if not team[amount][caller].field_256:\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              call caller with:\n                                 value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                  revert with 0, 'SafeMath mul failed'\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              call caller with:\n                                 value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n              else:\n                  if roundData[stor5].field_512 < block.timestamp:\n                      if team[amount][caller].field_1536 != stor3:\n                          call caller with:\n                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n                      else:\n                          if team[amount][caller].field_2304:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if not team[amount][caller].field_256:\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                      revert with 0, 'SafeMath mul failed'\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                  else:\n                      if amount == roundID:\n                          if not team[amount][caller].field_256:\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              call caller with:\n                                 value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                  revert with 0, 'SafeMath mul failed'\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              call caller with:\n                                 value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                      else:\n                          if team[amount][caller].field_1536 != stor3:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_2304:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if not team[amount][caller].field_256:\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n      else:\n          if roundData[stor5].field_512 < block.timestamp:\n              if not roundData[amount].field_1280:\n                  if block.timestamp < roundData[stor5].field_256:\n                      if team[amount][caller].field_1536 != stor3:\n                          call caller with:\n                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n                      else:\n                          if team[amount][caller].field_2304:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_256:\n                                  if 0 / team[amount][caller].field_256:\n                                      revert with 0, 'SafeMath mul failed'\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              call caller with:\n                                 value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                  else:\n                      if roundData[stor5].field_512 < block.timestamp:\n                          if team[amount][caller].field_1536 != stor3:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_2304:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_256:\n                                      if 0 / team[amount][caller].field_256:\n                                          revert with 0, 'SafeMath mul failed'\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                      else:\n                          if amount == roundID:\n                              if team[amount][caller].field_256:\n                                  if 0 / team[amount][caller].field_256:\n                                      revert with 0, 'SafeMath mul failed'\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              call caller with:\n                                 value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_1536 != stor3:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_2304:\n                                      call caller with:\n                                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if team[amount][caller].field_256:\n                                          if 0 / team[amount][caller].field_256:\n                                              revert with 0, 'SafeMath mul failed'\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n              else:\n                  if stor8 * roundData[amount].field_1280 / roundData[amount].field_1280 != stor8:\n                      revert with 0, 'SafeMath mul failed'\n                  require stor8 * roundData[amount].field_1280 == (1000 * stor8 * roundData[amount].field_1280 / 1000) + (stor8 * roundData[amount].field_1280 % 1000)\n                  if block.timestamp < roundData[stor5].field_256:\n                      if team[amount][caller].field_1536 != stor3:\n                          call caller with:\n                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n                      else:\n                          if team[amount][caller].field_2304:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if not team[amount][caller].field_256:\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                      revert with 0, 'SafeMath mul failed'\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                  else:\n                      if roundData[stor5].field_512 < block.timestamp:\n                          if team[amount][caller].field_1536 != stor3:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_2304:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if not team[amount][caller].field_256:\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                      else:\n                          if amount == roundID:\n                              if not team[amount][caller].field_256:\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                      revert with 0, 'SafeMath mul failed'\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_1536 != stor3:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_2304:\n                                      call caller with:\n                                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if not team[amount][caller].field_256:\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          call caller with:\n                                             value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                               gas 2300 * is_zero(value) wei\n                                      else:\n                                          if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                              revert with 0, 'SafeMath mul failed'\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          call caller with:\n                                             value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                               gas 2300 * is_zero(value) wei\n          else:\n              if not roundData[amount].field_2048:\n                  call caller with:\n                     value -team[amount][caller].field_1280 + team[amount][caller].field_512 + team[amount][caller].field_768 + team[amount][caller].field_1024 wei\n                       gas 2300 * is_zero(value) wei\n              else:\n                  if not roundData[amount].field_1280:\n                      if block.timestamp < roundData[stor5].field_256:\n                          if team[amount][caller].field_1536 != stor3:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_2304:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_256:\n                                      if 0 / team[amount][caller].field_256:\n                                          revert with 0, 'SafeMath mul failed'\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                      else:\n                          if roundData[stor5].field_512 < block.timestamp:\n                              if team[amount][caller].field_1536 != stor3:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_2304:\n                                      call caller with:\n                                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if team[amount][caller].field_256:\n                                          if 0 / team[amount][caller].field_256:\n                                              revert with 0, 'SafeMath mul failed'\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                          else:\n                              if amount == roundID:\n                                  if team[amount][caller].field_256:\n                                      if 0 / team[amount][caller].field_256:\n                                          revert with 0, 'SafeMath mul failed'\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_1536 != stor3:\n                                      call caller with:\n                                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if team[amount][caller].field_2304:\n                                          call caller with:\n                                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                               gas 2300 * is_zero(value) wei\n                                      else:\n                                          if team[amount][caller].field_256:\n                                              if 0 / team[amount][caller].field_256:\n                                                  revert with 0, 'SafeMath mul failed'\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          call caller with:\n                                             value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                               gas 2300 * is_zero(value) wei\n                  else:\n                      if stor8 * roundData[amount].field_1280 / roundData[amount].field_1280 != stor8:\n                          revert with 0, 'SafeMath mul failed'\n                      require stor8 * roundData[amount].field_1280 == (1000 * stor8 * roundData[amount].field_1280 / 1000) + (stor8 * roundData[amount].field_1280 % 1000)\n                      if block.timestamp < roundData[stor5].field_256:\n                          if team[amount][caller].field_1536 != stor3:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_2304:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if not team[amount][caller].field_256:\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                      else:\n                          if roundData[stor5].field_512 < block.timestamp:\n                              if team[amount][caller].field_1536 != stor3:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_2304:\n                                      call caller with:\n                                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if not team[amount][caller].field_256:\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          call caller with:\n                                             value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                               gas 2300 * is_zero(value) wei\n                                      else:\n                                          if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                              revert with 0, 'SafeMath mul failed'\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          call caller with:\n                                             value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                               gas 2300 * is_zero(value) wei\n                          else:\n                              if amount == roundID:\n                                  if not team[amount][caller].field_256:\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_1536 != stor3:\n                                      call caller with:\n                                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if team[amount][caller].field_2304:\n                                          call caller with:\n                                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                               gas 2300 * is_zero(value) wei\n                                      else:\n                                          if not team[amount][caller].field_256:\n                                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                              require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                              call caller with:\n                                                 value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                                   gas 2300 * is_zero(value) wei\n                                          else:\n                                              if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                                  revert with 0, 'SafeMath mul failed'\n                                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                              require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                              call caller with:\n                                                 value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 - team[amount][caller].field_1280 wei\n                                                   gas 2300 * is_zero(value) wei\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      team[amount][caller].field_1024 = 0\n      team[amount][caller].field_768 = 0\n      team[amount][caller].field_512 = 0\n      if 0 < -team[amount][caller].field_1280:\n          revert with 0, 'SafeMath add failed'\n      team[amount][caller].field_1280 = 0\n      team[amount][caller].field_2304 = 1\n      log onWithdraw(\n            address withdrawAddr=team[amount][caller].field_1024,\n            uint256 discountRevenue=team[amount][caller].field_768,\n            uint256 refferedRevenue=team[amount][caller].field_512,\n            uint256 winRevenue=-team[amount][caller].field_1280,\n            uint256 flagRevenue=caller)\n  else:\n      if roundData[amount].field_1536 * team[amount][caller].field_256 / team[amount][caller].field_256 != roundData[amount].field_1536:\n          revert with 0, 'SafeMath mul failed'\n      if team[amount][caller].field_1280 > roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18:\n          revert with 0, 'SafeMath sub failed'\n      if block.timestamp < roundData[stor5].field_256:\n          if not roundData[amount].field_1280:\n              if block.timestamp < roundData[stor5].field_256:\n                  if team[amount][caller].field_1536 != stor3:\n                      call caller with:\n                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                           gas 2300 * is_zero(value) wei\n                  else:\n                      if team[amount][caller].field_2304:\n                          call caller with:\n                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n                      else:\n                          if team[amount][caller].field_256:\n                              if 0 / team[amount][caller].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                          require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                          require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                          call caller with:\n                             value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n              else:\n                  if roundData[stor5].field_512 < block.timestamp:\n                      if team[amount][caller].field_1536 != stor3:\n                          call caller with:\n                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n                      else:\n                          if team[amount][caller].field_2304:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_256:\n                                  if 0 / team[amount][caller].field_256:\n                                      revert with 0, 'SafeMath mul failed'\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              call caller with:\n                                 value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                  else:\n                      if amount == roundID:\n                          if team[amount][caller].field_256:\n                              if 0 / team[amount][caller].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                          require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                          require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                          call caller with:\n                             value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n                      else:\n                          if team[amount][caller].field_1536 != stor3:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_2304:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_256:\n                                      if 0 / team[amount][caller].field_256:\n                                          revert with 0, 'SafeMath mul failed'\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n          else:\n              if stor8 * roundData[amount].field_1280 / roundData[amount].field_1280 != stor8:\n                  revert with 0, 'SafeMath mul failed'\n              require stor8 * roundData[amount].field_1280 == (1000 * stor8 * roundData[amount].field_1280 / 1000) + (stor8 * roundData[amount].field_1280 % 1000)\n              if block.timestamp < roundData[stor5].field_256:\n                  if team[amount][caller].field_1536 != stor3:\n                      call caller with:\n                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                           gas 2300 * is_zero(value) wei\n                  else:\n                      if team[amount][caller].field_2304:\n                          call caller with:\n                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n                      else:\n                          if not team[amount][caller].field_256:\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              call caller with:\n                                 value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                  revert with 0, 'SafeMath mul failed'\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              call caller with:\n                                 value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n              else:\n                  if roundData[stor5].field_512 < block.timestamp:\n                      if team[amount][caller].field_1536 != stor3:\n                          call caller with:\n                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n                      else:\n                          if team[amount][caller].field_2304:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if not team[amount][caller].field_256:\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                      revert with 0, 'SafeMath mul failed'\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                  else:\n                      if amount == roundID:\n                          if not team[amount][caller].field_256:\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              call caller with:\n                                 value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                  revert with 0, 'SafeMath mul failed'\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              call caller with:\n                                 value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                      else:\n                          if team[amount][caller].field_1536 != stor3:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_2304:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if not team[amount][caller].field_256:\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n      else:\n          if roundData[stor5].field_512 < block.timestamp:\n              if not roundData[amount].field_1280:\n                  if block.timestamp < roundData[stor5].field_256:\n                      if team[amount][caller].field_1536 != stor3:\n                          call caller with:\n                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n                      else:\n                          if team[amount][caller].field_2304:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_256:\n                                  if 0 / team[amount][caller].field_256:\n                                      revert with 0, 'SafeMath mul failed'\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              call caller with:\n                                 value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                  else:\n                      if roundData[stor5].field_512 < block.timestamp:\n                          if team[amount][caller].field_1536 != stor3:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_2304:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_256:\n                                      if 0 / team[amount][caller].field_256:\n                                          revert with 0, 'SafeMath mul failed'\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                      else:\n                          if amount == roundID:\n                              if team[amount][caller].field_256:\n                                  if 0 / team[amount][caller].field_256:\n                                      revert with 0, 'SafeMath mul failed'\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                              call caller with:\n                                 value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_1536 != stor3:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_2304:\n                                      call caller with:\n                                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if team[amount][caller].field_256:\n                                          if 0 / team[amount][caller].field_256:\n                                              revert with 0, 'SafeMath mul failed'\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n              else:\n                  if stor8 * roundData[amount].field_1280 / roundData[amount].field_1280 != stor8:\n                      revert with 0, 'SafeMath mul failed'\n                  require stor8 * roundData[amount].field_1280 == (1000 * stor8 * roundData[amount].field_1280 / 1000) + (stor8 * roundData[amount].field_1280 % 1000)\n                  if block.timestamp < roundData[stor5].field_256:\n                      if team[amount][caller].field_1536 != stor3:\n                          call caller with:\n                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                               gas 2300 * is_zero(value) wei\n                      else:\n                          if team[amount][caller].field_2304:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if not team[amount][caller].field_256:\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                      revert with 0, 'SafeMath mul failed'\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                  else:\n                      if roundData[stor5].field_512 < block.timestamp:\n                          if team[amount][caller].field_1536 != stor3:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_2304:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if not team[amount][caller].field_256:\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                      else:\n                          if amount == roundID:\n                              if not team[amount][caller].field_256:\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                      revert with 0, 'SafeMath mul failed'\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_1536 != stor3:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_2304:\n                                      call caller with:\n                                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if not team[amount][caller].field_256:\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          call caller with:\n                                             value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                               gas 2300 * is_zero(value) wei\n                                      else:\n                                          if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                              revert with 0, 'SafeMath mul failed'\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          call caller with:\n                                             value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                               gas 2300 * is_zero(value) wei\n          else:\n              if not roundData[amount].field_2048:\n                  call caller with:\n                     value (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 + team[amount][caller].field_512 + team[amount][caller].field_768 + team[amount][caller].field_1024 wei\n                       gas 2300 * is_zero(value) wei\n              else:\n                  if not roundData[amount].field_1280:\n                      if block.timestamp < roundData[stor5].field_256:\n                          if team[amount][caller].field_1536 != stor3:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_2304:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_256:\n                                      if 0 / team[amount][caller].field_256:\n                                          revert with 0, 'SafeMath mul failed'\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                      else:\n                          if roundData[stor5].field_512 < block.timestamp:\n                              if team[amount][caller].field_1536 != stor3:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_2304:\n                                      call caller with:\n                                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if team[amount][caller].field_256:\n                                          if 0 / team[amount][caller].field_256:\n                                              revert with 0, 'SafeMath mul failed'\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                          else:\n                              if amount == roundID:\n                                  if team[amount][caller].field_256:\n                                      if 0 / team[amount][caller].field_256:\n                                          revert with 0, 'SafeMath mul failed'\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                  call caller with:\n                                     value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_1536 != stor3:\n                                      call caller with:\n                                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if team[amount][caller].field_2304:\n                                          call caller with:\n                                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                               gas 2300 * is_zero(value) wei\n                                      else:\n                                          if team[amount][caller].field_256:\n                                              if 0 / team[amount][caller].field_256:\n                                                  revert with 0, 'SafeMath mul failed'\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          call caller with:\n                                             value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                               gas 2300 * is_zero(value) wei\n                  else:\n                      if stor8 * roundData[amount].field_1280 / roundData[amount].field_1280 != stor8:\n                          revert with 0, 'SafeMath mul failed'\n                      require stor8 * roundData[amount].field_1280 == (1000 * stor8 * roundData[amount].field_1280 / 1000) + (stor8 * roundData[amount].field_1280 % 1000)\n                      if block.timestamp < roundData[stor5].field_256:\n                          if team[amount][caller].field_1536 != stor3:\n                              call caller with:\n                                 value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                   gas 2300 * is_zero(value) wei\n                          else:\n                              if team[amount][caller].field_2304:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if not team[amount][caller].field_256:\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                      else:\n                          if roundData[stor5].field_512 < block.timestamp:\n                              if team[amount][caller].field_1536 != stor3:\n                                  call caller with:\n                                     value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                       gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_2304:\n                                      call caller with:\n                                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if not team[amount][caller].field_256:\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          call caller with:\n                                             value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                               gas 2300 * is_zero(value) wei\n                                      else:\n                                          if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                              revert with 0, 'SafeMath mul failed'\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                          require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                          call caller with:\n                                             value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                               gas 2300 * is_zero(value) wei\n                          else:\n                              if amount == roundID:\n                                  if not team[amount][caller].field_256:\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                      require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                      call caller with:\n                                         value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                              else:\n                                  if team[amount][caller].field_1536 != stor3:\n                                      call caller with:\n                                         value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                           gas 2300 * is_zero(value) wei\n                                  else:\n                                      if team[amount][caller].field_2304:\n                                          call caller with:\n                                             value team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                               gas 2300 * is_zero(value) wei\n                                      else:\n                                          if not team[amount][caller].field_256:\n                                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                              require not teamData[amount][stor16[amount][caller].field_1536].field_256 * 0 / teamData[amount][stor16[amount][caller].field_1536].field_256\n                                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                              call caller with:\n                                                 value (0 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                                   gas 2300 * is_zero(value) wei\n                                          else:\n                                              if stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / team[amount][caller].field_256 != stor8 * roundData[amount].field_1280 / 1000:\n                                                  revert with 0, 'SafeMath mul failed'\n                                              require teamData[amount][stor16[amount][caller].field_1536].field_256 > 0\n                                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                              require stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 == (teamData[amount][stor16[amount][caller].field_1536].field_256 * stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 % teamData[amount][stor16[amount][caller].field_1536].field_256)\n                                              require teamData[amount][stor16[amount][caller].field_1536].field_256\n                                              call caller with:\n                                                 value (stor8 * roundData[amount].field_1280 / 1000 * team[amount][caller].field_256 / teamData[amount][stor16[amount][caller].field_1536].field_256) + team[amount][caller].field_1024 + team[amount][caller].field_768 + team[amount][caller].field_512 + (roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280 wei\n                                                   gas 2300 * is_zero(value) wei\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      team[amount][caller].field_1024 = 0\n      team[amount][caller].field_768 = 0\n      team[amount][caller].field_512 = 0\n      if team[amount][caller].field_1280 < 0:\n          revert with 0, 'SafeMath add failed'\n      team[amount][caller].field_1280 = roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18\n      team[amount][caller].field_2304 = 1\n      log onWithdraw(\n            address withdrawAddr=team[amount][caller].field_1024,\n            uint256 discountRevenue=team[amount][caller].field_768,\n            uint256 refferedRevenue=team[amount][caller].field_512,\n            uint256 winRevenue=(roundData[amount].field_1536 * team[amount][caller].field_256 / 10^18) - team[amount][caller].field_1280,\n            uint256 flagRevenue=caller)\n\n",
	"language": "Solidity",
	"status": "This model's maximum context length is 32768 tokens. However, your messages resulted in 73931 tokens. Please reduce the length of the messages."
}