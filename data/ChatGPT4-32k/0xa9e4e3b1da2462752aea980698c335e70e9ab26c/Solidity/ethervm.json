{
	"address": "0xa9e4e3b1da2462752aea980698c335e70e9ab26c",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "The original code appears to be a smart contract for an Ethereum Pyramid scheme. The Solidity equivalent of the contract might look something like below. Please note that this is a simplified version, and may not cover all original functionalities:\n\n```Solidity\npragma solidity ^0.4.24;\n\ncontract PyramidScheme {\n    uint constant INITIAL_MULTIPLIER = 100;\n    uint constant FEE_PERCENTAGE = 10;\n    uint constant MAX_PARTICIPANTS = 25;\n\n    address owner;\n    uint multiplier;\n    uint balance;\n    uint fees;\n    uint participants;\n    mapping(address => uint) participantBalances;\n\n    constructor() public {\n        owner = msg.sender;\n        multiplier = INITIAL_MULTIPLIER;\n    }\n\n    function join() payable public {\n        require(participants < MAX_PARTICIPANTS, \"Maximum number of participants reached\");\n        require(msg.value > 0, \"No ether sent\");\n\n        uint fee = msg.value * FEE_PERCENTAGE / 100;\n        fees += fee;\n\n        uint deposit = msg.value - fee;\n        balance += deposit;\n\n        participantBalances[msg.sender] += deposit * multiplier / 100;\n        participants++;\n    }\n\n    function collectFees(uint amount) public {\n        require(msg.sender == owner, \"Only the owner can collect fees\");\n        require(amount <= fees, \"Amount exceeds available fees\");\n\n        fees -= amount;\n        msg.sender.transfer(amount);\n    }\n\n    function collectEarnings() public {\n        require(participantBalances[msg.sender] > 0, \"No earnings to collect\");\n\n        uint payout = participantBalances[msg.sender];\n        require(balance >= payout, \"Not enough funds in contract\");\n\n        balance -= payout;\n        participantBalances[msg.sender] = 0;\n        msg.sender.transfer(payout);\n    }\n\n    function currentMultiplier() public view returns(uint) {\n        return multiplier;\n    }\n\n    function changeMultiplier(uint newMultiplier) public {\n        require(msg.sender == owner, \"Only the owner can change the multiplier\");\n        multiplier = newMultiplier;\n    }\n}\n```",
				"role": "assistant"
			}
		}
	],
	"created": 1700473619,
	"id": "chatcmpl-8Mv9nTZNMsa4zFJ1V0cC2Aj9csH4l",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n    \n        if (!msg.data.length) {\n        label_00AE:\n            var var0 = 0x03b4;\n            var var1 = 0x03b6;\n            var var2 = 0x00;\n        \n            if (msg.value >= 0x0de0b6b3a7640000) {\n                func_0453(var2);\n                func_03B6();\n                stop();\n            } else {\n                func_00C7(var2);\n                func_03B6();\n                stop();\n            }\n        } else {\n        label_000B:\n            var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (var0 == 0x09dfdc71) {\n                // Dispatch table entry for currentPyramidBalanceApproximately()\n                var temp0 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp0 + 0x20;\n                memory[temp0:temp0 + 0x20] = 0x00;\n                var temp1 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp1 + 0x0100;\n                memory[temp1:temp1 + 0x20] = 0xca;\n                memory[temp1 + 0x20:temp1 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                var2 = temp1;\n                var1 = storage[0x00] / 0x0de0b6b3a7640000;\n            \n            label_03B8:\n                var temp2 = memory[0x40:0x60];\n                var var3 = temp2;\n                memory[var3:var3 + 0x20] = var1;\n                var temp3 = var3 + 0x20;\n                var var4 = temp3;\n                var temp4 = var4 + 0x20;\n                memory[var4:var4 + 0x20] = temp4 - var3;\n                var temp5 = var2;\n                memory[temp4:temp4 + 0x20] = memory[temp5:temp5 + 0x20];\n                var temp6 = temp4 + 0x20;\n                var temp7 = memory[temp5:temp5 + 0x20];\n                memory[temp6:temp6 + temp7] = address(0x04).call.gas((temp7 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp5 + 0x20:temp5 + 0x20 + temp7]);\n                var var5 = temp7 + temp6;\n                var var6 = temp7 & 0x1f;\n            \n                if (!var6) {\n                    var temp8 = memory[0x40:0x60];\n                    return memory[temp8:temp8 + var5 - temp8];\n                } else {\n                    var temp9 = var6;\n                    var temp10 = var5 - temp9;\n                    memory[temp10:temp10 + 0x20] = ~(0x0100 ** (0x20 - temp9) - 0x01) & memory[temp10:temp10 + 0x20];\n                    var temp11 = memory[0x40:0x60];\n                    return memory[temp11:temp11 + (temp10 + 0x20) - temp11];\n                }\n            } else if (var0 == 0x253459e3) {\n                // Dispatch table entry for feesSeperateFromBalanceApproximately()\n                var temp12 = memory[0x40:0x60];\n                memory[temp12:temp12 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                var temp13 = memory[0x40:0x60];\n                return memory[temp13:temp13 + temp12 - temp13 + 0x20];\n            } else if (var0 == 0x4229616d) {\n                // Dispatch table entry for collectPercentOfFees(uint256)\n                var1 = 0x03b4;\n                var2 = msg.data[0x04:0x24];\n                var3 = 0x00;\n                var temp14 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp14 & msg.sender != temp14 & storage[0x05]) {\n                    func_0573(var2, var3);\n                    stop();\n                } else {\n                    var4 = var3 == storage[0x01];\n                \n                    if (var4) {\n                        if (!var4) {\n                        label_0538:\n                            var temp15 = memory[0x40:0x60];\n                            var temp16 = var2 * (storage[0x01] / 0x64);\n                            var3 = temp16;\n                            memory[temp15:temp15 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(var3)(memory[temp15:temp15 + 0x00]);\n                            storage[0x01] = storage[0x01] - var3;\n                            func_0573(var2, var3);\n                            // Error: Could not resolve method call return address!\n                        } else {\n                        label_0169:\n                        \n                        label_0002:\n                            memory[0x40:0x60] = var3;\n                        \n                            if (!msg.data.length) { goto label_00AE; }\n                            else { goto label_000B; }\n                        }\n                    } else if (var2 <= 0x64) { goto label_0538; }\n                    else { goto label_0169; }\n                }\n            } else if (var0 == 0x57d4021b) {\n                // Dispatch table entry for nextPayoutWhenPyramidBalanceTotalsApproximately()\n                var1 = 0x0120;\n                var2 = 0x00;\n                var3 = 0x0de0b6b3a7640000;\n                var4 = 0x06;\n                var5 = storage[0x04];\n            \n                if (var5 >= storage[var4]) { goto label_0002; }\n            \n                var1 = nextPayoutWhenPyramidBalanceTotalsApproximately(var2, var3, var4, var5);\n            \n            label_0120:\n                var temp17 = memory[0x40:0x60];\n                memory[temp17:temp17 + 0x20] = var1;\n                var temp18 = memory[0x40:0x60];\n                return memory[temp18:temp18 + temp17 - temp18 + 0x20];\n            } else if (var0 == 0x686f2c90) {\n                // Dispatch table entry for collectAllFees()\n                var1 = 0x03b4;\n                var temp19 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp19 & msg.sender != temp19 & storage[0x05]) {\n                    func_03B6();\n                    stop();\n                } else {\n                    func_01C9();\n                    stop();\n                }\n            } else if (var0 == 0x6fbaaa1e) {\n                // Dispatch table entry for currentMultiplier()\n                var temp20 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp20 + 0x20;\n                memory[temp20:temp20 + 0x20] = 0x00;\n                var temp21 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp21 + 0x0140;\n                memory[temp21:temp21 + 0x20] = 0x011f;\n                memory[temp21 + 0x20:temp21 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                var2 = temp21;\n                var1 = storage[0x03];\n                goto label_03B8;\n            } else if (var0 == 0x8a5fb3ca) {\n                // Dispatch table entry for currentFeePercentage()\n                var temp22 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp22 + 0x20;\n                memory[temp22:temp22 + 0x20] = 0x00;\n                var temp23 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp23 + 0xc0;\n                memory[temp23:temp23 + 0x20] = 0x84;\n                memory[temp23 + 0x20:temp23 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                var2 = temp23;\n                var1 = storage[0x02];\n                goto label_03B8;\n            } else if (var0 == 0x9dbc4f9b) {\n                // Dispatch table entry for participantDetails(uint256)\n                var1 = 0x042d;\n                var2 = msg.data[0x04:0x24];\n                var3 = 0x00;\n                var4 = var3;\n            \n                if (var2 > storage[0x06]) {\n                    var1, var2 = func_02C6(var2, var3, var4);\n                    var temp24 = memory[0x40:0x60];\n                    memory[temp24:temp24 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                    var temp25 = temp24 + 0x20;\n                    memory[temp25:temp25 + 0x20] = var2;\n                    var temp26 = memory[0x40:0x60];\n                    return memory[temp26:temp26 + (temp25 + 0x20) - temp26];\n                } else {\n                    var5 = 0x06;\n                    var6 = var2;\n                \n                    if (var6 >= storage[var5]) { goto label_0002; }\n                \n                    var temp27 = var5;\n                    memory[var4:var4 + 0x20] = temp27;\n                    var temp28 = var2;\n                    var3 = storage[temp28 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                    var5 = 0x0de0b6b3a7640000;\n                    var6 = temp27;\n                    var var7 = temp28;\n                \n                    if (var7 >= storage[var6]) { goto label_0002; }\n                \n                    var temp29 = memory[0x00:0x20];\n                    memory[0x00:0x20] = code[0x0999:0x09b9];\n                    var temp30 = memory[0x00:0x20];\n                    memory[0x00:0x20] = temp29;\n                    var4 = storage[temp30 + var2 * 0x02] / var5;\n                    var1, var2 = func_02C6(var2, var3, var4);\n                    // Error: Could not resolve method call return address!\n                }\n            } else if (var0 == 0xa26dbf26) {\n                // Dispatch table entry for totalParticipants()\n                var1 = storage[0x06];\n                goto label_0120;\n            } else if (var0 == 0xa6f9dae1) {\n                // Dispatch table entry for changeOwner(address)\n                var1 = 0x03b4;\n                var2 = msg.data[0x04:0x24];\n                var temp31 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp31 & msg.sender != temp31 & storage[0x05]) {\n                    func_00CF(var2);\n                    stop();\n                } else {\n                    func_02F2(var2);\n                    stop();\n                }\n            } else if (var0 == 0xb4022950) {\n                // Dispatch table entry for collectFeesInEther(uint256)\n                var1 = 0x03b4;\n                var2 = msg.data[0x04:0x24];\n                var temp32 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp32 & msg.sender != temp32 & storage[0x05]) {\n                    func_00CF(var2);\n                    stop();\n                } else {\n                    func_0325(var2);\n                    stop();\n                }\n            } else if (var0 == 0xced92670) {\n                // Dispatch table entry for changeMultiplier(uint256)\n                var1 = 0x03b4;\n                var2 = msg.data[0x04:0x24];\n                var temp33 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp33 & msg.sender != temp33 & storage[0x05]) {\n                    func_00CF(var2);\n                    stop();\n                } else {\n                    func_0363(var2);\n                    stop();\n                }\n            } else if (var0 == 0xd11f13df) {\n                // Dispatch table entry for numberOfParticipantsWaitingForPayout()\n                var1 = storage[0x06] - storage[0x04];\n                goto label_0120;\n            } else if (var0 == 0xfae14192) {\n                // Dispatch table entry for changeFeePercentage(uint256)\n                var1 = 0x03b4;\n                var2 = msg.data[0x04:0x24];\n                var temp34 = 0x02 ** 0xa0 - 0x01;\n            \n                if (storage[0x05] & temp34 != temp34 & msg.sender) {\n                    func_00CF(var2);\n                    stop();\n                } else {\n                    func_03A7(var2);\n                    stop();\n                }\n            } else { goto label_00AE; }\n        }\n    }\n    \n    function func_00C7(var arg0) {\n        storage[0x01] = msg.value + storage[0x01];\n    }\n    \n    function func_00CF(var arg0) {}\n    \n    function nextPayoutWhenPyramidBalanceTotalsApproximately(var arg0, var arg1, var arg2, var arg3) returns (var r0) {\n        memory[arg0:arg0 + 0x20] = arg2;\n        var temp0 = memory[0x00:0x20];\n        memory[0x00:0x20] = code[0x0999:0x09b9];\n        var temp1 = memory[0x00:0x20];\n        memory[0x00:0x20] = temp0;\n        return storage[temp1 + arg3 * 0x02] / arg1;\n    }\n    \n    function func_01B0() {\n        var temp0 = 0x02 ** 0xa0 - 0x01;\n    \n        if (temp0 & msg.sender != temp0 & storage[0x05]) {\n            func_03B6();\n            // Error: Could not resolve method call return address!\n        } else {\n            func_01C9();\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function func_01C9() {\n        if (storage[0x01] != 0x00) {\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(storage[0x01])(memory[temp0:temp0 + 0x00]);\n            storage[0x01] = 0x00;\n            return;\n        } else {\n        label_0002:\n            memory[0x40:0x60] = returnAddress0;\n        \n            if (!msg.data.length) {\n            label_00AE:\n                returnAddress0 = 0x03b4;\n                var var0 = 0x03b6;\n                var var1 = 0x00;\n            \n                if (msg.value >= 0x0de0b6b3a7640000) {\n                    func_0453(var1);\n                    func_03B6();\n                    stop();\n                } else {\n                    func_00C7(var1);\n                    func_03B6();\n                    stop();\n                }\n            } else {\n                returnAddress0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n            \n                if (returnAddress0 == 0x09dfdc71) {\n                    var temp1 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp1 + 0x20;\n                    memory[temp1:temp1 + 0x20] = 0x00;\n                    var temp2 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp2 + 0x0100;\n                    memory[temp2:temp2 + 0x20] = 0xca;\n                    memory[temp2 + 0x20:temp2 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                    var1 = temp2;\n                    var0 = storage[0x00] / 0x0de0b6b3a7640000;\n                \n                label_03B8:\n                    var temp3 = memory[0x40:0x60];\n                    var var2 = temp3;\n                    memory[var2:var2 + 0x20] = var0;\n                    var temp4 = var2 + 0x20;\n                    var var3 = temp4;\n                    var temp5 = var3 + 0x20;\n                    memory[var3:var3 + 0x20] = temp5 - var2;\n                    var temp6 = var1;\n                    memory[temp5:temp5 + 0x20] = memory[temp6:temp6 + 0x20];\n                    var temp7 = temp5 + 0x20;\n                    var temp8 = memory[temp6:temp6 + 0x20];\n                    memory[temp7:temp7 + temp8] = address(0x04).call.gas((temp8 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp6 + 0x20:temp6 + 0x20 + temp8]);\n                    var var4 = temp8 + temp7;\n                    var var5 = temp8 & 0x1f;\n                \n                    if (!var5) {\n                        var temp9 = memory[0x40:0x60];\n                        return memory[temp9:temp9 + var4 - temp9];\n                    } else {\n                        var temp10 = var5;\n                        var temp11 = var4 - temp10;\n                        memory[temp11:temp11 + 0x20] = ~(0x0100 ** (0x20 - temp10) - 0x01) & memory[temp11:temp11 + 0x20];\n                        var temp12 = memory[0x40:0x60];\n                        return memory[temp12:temp12 + (temp11 + 0x20) - temp12];\n                    }\n                } else if (returnAddress0 == 0x253459e3) {\n                    var temp13 = memory[0x40:0x60];\n                    memory[temp13:temp13 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                    var temp14 = memory[0x40:0x60];\n                    return memory[temp14:temp14 + temp13 - temp14 + 0x20];\n                } else if (returnAddress0 == 0x4229616d) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var2 = 0x00;\n                    var temp15 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp15 & msg.sender != temp15 & storage[0x05]) {\n                        func_0573(var1, var2);\n                        stop();\n                    } else {\n                        var3 = var2 == storage[0x01];\n                    \n                        if (var3) {\n                            if (!var3) {\n                            label_0538:\n                                var temp16 = memory[0x40:0x60];\n                                var temp17 = var1 * (storage[0x01] / 0x64);\n                                var2 = temp17;\n                                memory[temp16:temp16 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(var2)(memory[temp16:temp16 + 0x00]);\n                                storage[0x01] = storage[0x01] - var2;\n                                func_0573(var1, var2);\n                                // Error: Could not resolve method call return address!\n                            } else {\n                            label_0169:\n                                goto label_0002;\n                            }\n                        } else if (var1 <= 0x64) { goto label_0538; }\n                        else { goto label_0169; }\n                    }\n                } else if (returnAddress0 == 0x57d4021b) {\n                    var0 = 0x0120;\n                    var1 = 0x00;\n                    var2 = 0x0de0b6b3a7640000;\n                    var3 = 0x06;\n                    var4 = storage[0x04];\n                \n                    if (var4 >= storage[var3]) { goto label_0002; }\n                \n                    var0 = nextPayoutWhenPyramidBalanceTotalsApproximately(var1, var2, var3, var4);\n                \n                label_0120:\n                    var temp18 = memory[0x40:0x60];\n                    memory[temp18:temp18 + 0x20] = var0;\n                    var temp19 = memory[0x40:0x60];\n                    return memory[temp19:temp19 + temp18 - temp19 + 0x20];\n                } else if (returnAddress0 == 0x686f2c90) {\n                    var0 = 0x03b4;\n                    var temp20 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp20 & msg.sender != temp20 & storage[0x05]) {\n                        func_03B6();\n                        stop();\n                    } else {\n                        func_01C9();\n                        stop();\n                    }\n                } else if (returnAddress0 == 0x6fbaaa1e) {\n                    var temp21 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp21 + 0x20;\n                    memory[temp21:temp21 + 0x20] = 0x00;\n                    var temp22 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp22 + 0x0140;\n                    memory[temp22:temp22 + 0x20] = 0x011f;\n                    memory[temp22 + 0x20:temp22 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                    var1 = temp22;\n                    var0 = storage[0x03];\n                    goto label_03B8;\n                } else if (returnAddress0 == 0x8a5fb3ca) {\n                    var temp23 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp23 + 0x20;\n                    memory[temp23:temp23 + 0x20] = 0x00;\n                    var temp24 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp24 + 0xc0;\n                    memory[temp24:temp24 + 0x20] = 0x84;\n                    memory[temp24 + 0x20:temp24 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                    var1 = temp24;\n                    var0 = storage[0x02];\n                    goto label_03B8;\n                } else if (returnAddress0 == 0x9dbc4f9b) {\n                    var0 = 0x042d;\n                    var1 = msg.data[0x04:0x24];\n                    var2 = 0x00;\n                    var3 = var2;\n                \n                    if (var1 > storage[0x06]) {\n                        var0, var1 = func_02C6(var1, var2, var3);\n                        var temp25 = memory[0x40:0x60];\n                        memory[temp25:temp25 + 0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                        var temp26 = temp25 + 0x20;\n                        memory[temp26:temp26 + 0x20] = var1;\n                        var temp27 = memory[0x40:0x60];\n                        return memory[temp27:temp27 + (temp26 + 0x20) - temp27];\n                    } else {\n                        var4 = 0x06;\n                        var5 = var1;\n                    \n                        if (var5 >= storage[var4]) { goto label_0002; }\n                    \n                        var temp28 = var4;\n                        memory[var3:var3 + 0x20] = temp28;\n                        var temp29 = var1;\n                        var2 = storage[temp29 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                        var4 = 0x0de0b6b3a7640000;\n                        var5 = temp28;\n                        var var6 = temp29;\n                    \n                        if (var6 >= storage[var5]) { goto label_0002; }\n                    \n                        var temp30 = memory[0x00:0x20];\n                        memory[0x00:0x20] = code[0x0999:0x09b9];\n                        var temp31 = memory[0x00:0x20];\n                        memory[0x00:0x20] = temp30;\n                        var3 = storage[temp31 + var1 * 0x02] / var4;\n                        var0, var1 = func_02C6(var1, var2, var3);\n                        // Error: Could not resolve method call return address!\n                    }\n                } else if (returnAddress0 == 0xa26dbf26) {\n                    var0 = storage[0x06];\n                    goto label_0120;\n                } else if (returnAddress0 == 0xa6f9dae1) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp32 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp32 & msg.sender != temp32 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_02F2(var1);\n                        stop();\n                    }\n                } else if (returnAddress0 == 0xb4022950) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp33 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp33 & msg.sender != temp33 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_0325(var1);\n                        stop();\n                    }\n                } else if (returnAddress0 == 0xced92670) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp34 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp34 & msg.sender != temp34 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_0363(var1);\n                        stop();\n                    }\n                } else if (returnAddress0 == 0xd11f13df) {\n                    var0 = storage[0x06] - storage[0x04];\n                    goto label_0120;\n                } else if (returnAddress0 == 0xfae14192) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp35 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (storage[0x05] & temp35 != temp35 & msg.sender) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_03A7(var1);\n                        stop();\n                    }\n                } else { goto label_00AE; }\n            }\n        }\n    }\n    \n    function func_02C6(var arg0, var arg1, var arg2) returns (var r0, var arg0) {\n        arg0 = arg2;\n        r0 = arg1;\n        return r0, arg0;\n    }\n    \n    function func_02F2(var arg0) {\n        storage[0x05] = arg0 | (storage[0x05] & ~(0x02 ** 0xa0 - 0x01));\n    }\n    \n    function func_0325(var arg0) {\n        var temp0 = arg0 * 0x0de0b6b3a7640000;\n        arg0 = temp0;\n    \n        if (arg0 <= storage[0x01]) {\n        label_04F7:\n        \n            if (storage[0x01] != 0x00) {\n                var temp1 = memory[0x40:0x60];\n                var temp2 = arg0;\n                memory[temp1:temp1 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(temp2)(memory[temp1:temp1 + 0x00]);\n                storage[0x01] = storage[0x01] - temp2;\n                return;\n            } else {\n            label_0002:\n                memory[0x40:0x60] = arg0;\n            \n                if (!msg.data.length) {\n                label_00AE:\n                    arg0 = 0x03b4;\n                    var var0 = 0x03b6;\n                    var var1 = 0x00;\n                \n                    if (msg.value >= 0x0de0b6b3a7640000) {\n                        func_0453(var1);\n                        func_03B6();\n                        stop();\n                    } else {\n                        func_00C7(var1);\n                        func_03B6();\n                        stop();\n                    }\n                } else {\n                    arg0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                \n                    if (arg0 == 0x09dfdc71) {\n                        var temp3 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp3 + 0x20;\n                        memory[temp3:temp3 + 0x20] = 0x00;\n                        var temp4 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp4 + 0x0100;\n                        memory[temp4:temp4 + 0x20] = 0xca;\n                        memory[temp4 + 0x20:temp4 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                        var1 = temp4;\n                        var0 = storage[0x00] / 0x0de0b6b3a7640000;\n                    \n                    label_03B8:\n                        var temp5 = memory[0x40:0x60];\n                        var var2 = temp5;\n                        memory[var2:var2 + 0x20] = var0;\n                        var temp6 = var2 + 0x20;\n                        var var3 = temp6;\n                        var temp7 = var3 + 0x20;\n                        memory[var3:var3 + 0x20] = temp7 - var2;\n                        var temp8 = var1;\n                        memory[temp7:temp7 + 0x20] = memory[temp8:temp8 + 0x20];\n                        var temp9 = temp7 + 0x20;\n                        var temp10 = memory[temp8:temp8 + 0x20];\n                        memory[temp9:temp9 + temp10] = address(0x04).call.gas((temp10 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp8 + 0x20:temp8 + 0x20 + temp10]);\n                        var var4 = temp10 + temp9;\n                        var var5 = temp10 & 0x1f;\n                    \n                        if (!var5) {\n                            var temp11 = memory[0x40:0x60];\n                            return memory[temp11:temp11 + var4 - temp11];\n                        } else {\n                            var temp12 = var5;\n                            var temp13 = var4 - temp12;\n                            memory[temp13:temp13 + 0x20] = ~(0x0100 ** (0x20 - temp12) - 0x01) & memory[temp13:temp13 + 0x20];\n                            var temp14 = memory[0x40:0x60];\n                            return memory[temp14:temp14 + (temp13 + 0x20) - temp14];\n                        }\n                    } else if (arg0 == 0x253459e3) {\n                        var temp15 = memory[0x40:0x60];\n                        memory[temp15:temp15 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                        var temp16 = memory[0x40:0x60];\n                        return memory[temp16:temp16 + temp15 - temp16 + 0x20];\n                    } else if (arg0 == 0x4229616d) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var2 = 0x00;\n                        var temp17 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp17 & msg.sender != temp17 & storage[0x05]) {\n                            func_0573(var1, var2);\n                            stop();\n                        } else {\n                            var3 = var2 == storage[0x01];\n                        \n                            if (var3) {\n                                if (!var3) {\n                                label_0538:\n                                    var temp18 = memory[0x40:0x60];\n                                    var temp19 = var1 * (storage[0x01] / 0x64);\n                                    var2 = temp19;\n                                    memory[temp18:temp18 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(var2)(memory[temp18:temp18 + 0x00]);\n                                    storage[0x01] = storage[0x01] - var2;\n                                    func_0573(var1, var2);\n                                    // Error: Could not resolve method call return address!\n                                } else {\n                                label_0169:\n                                    goto label_0002;\n                                }\n                            } else if (var1 <= 0x64) { goto label_0538; }\n                            else { goto label_0169; }\n                        }\n                    } else if (arg0 == 0x57d4021b) {\n                        var0 = 0x0120;\n                        var1 = 0x00;\n                        var2 = 0x0de0b6b3a7640000;\n                        var3 = 0x06;\n                        var4 = storage[0x04];\n                    \n                        if (var4 >= storage[var3]) { goto label_0002; }\n                    \n                        var0 = nextPayoutWhenPyramidBalanceTotalsApproximately(var1, var2, var3, var4);\n                    \n                    label_0120:\n                        var temp20 = memory[0x40:0x60];\n                        memory[temp20:temp20 + 0x20] = var0;\n                        var temp21 = memory[0x40:0x60];\n                        return memory[temp21:temp21 + temp20 - temp21 + 0x20];\n                    } else if (arg0 == 0x686f2c90) {\n                        var0 = 0x03b4;\n                        var temp22 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp22 & msg.sender != temp22 & storage[0x05]) {\n                            func_03B6();\n                            stop();\n                        } else {\n                            func_01C9();\n                            stop();\n                        }\n                    } else if (arg0 == 0x6fbaaa1e) {\n                        var temp23 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp23 + 0x20;\n                        memory[temp23:temp23 + 0x20] = 0x00;\n                        var temp24 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp24 + 0x0140;\n                        memory[temp24:temp24 + 0x20] = 0x011f;\n                        memory[temp24 + 0x20:temp24 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                        var1 = temp24;\n                        var0 = storage[0x03];\n                        goto label_03B8;\n                    } else if (arg0 == 0x8a5fb3ca) {\n                        var temp25 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp25 + 0x20;\n                        memory[temp25:temp25 + 0x20] = 0x00;\n                        var temp26 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp26 + 0xc0;\n                        memory[temp26:temp26 + 0x20] = 0x84;\n                        memory[temp26 + 0x20:temp26 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                        var1 = temp26;\n                        var0 = storage[0x02];\n                        goto label_03B8;\n                    } else if (arg0 == 0x9dbc4f9b) {\n                        var0 = 0x042d;\n                        var1 = msg.data[0x04:0x24];\n                        var2 = 0x00;\n                        var3 = var2;\n                    \n                        if (var1 > storage[0x06]) {\n                            var0, var1 = func_02C6(var1, var2, var3);\n                            var temp27 = memory[0x40:0x60];\n                            memory[temp27:temp27 + 0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                            var temp28 = temp27 + 0x20;\n                            memory[temp28:temp28 + 0x20] = var1;\n                            var temp29 = memory[0x40:0x60];\n                            return memory[temp29:temp29 + (temp28 + 0x20) - temp29];\n                        } else {\n                            var4 = 0x06;\n                            var5 = var1;\n                        \n                            if (var5 >= storage[var4]) { goto label_0002; }\n                        \n                            var temp30 = var4;\n                            memory[var3:var3 + 0x20] = temp30;\n                            var temp31 = var1;\n                            var2 = storage[temp31 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                            var4 = 0x0de0b6b3a7640000;\n                            var5 = temp30;\n                            var var6 = temp31;\n                        \n                            if (var6 >= storage[var5]) { goto label_0002; }\n                        \n                            var temp32 = memory[0x00:0x20];\n                            memory[0x00:0x20] = code[0x0999:0x09b9];\n                            var temp33 = memory[0x00:0x20];\n                            memory[0x00:0x20] = temp32;\n                            var3 = storage[temp33 + var1 * 0x02] / var4;\n                            var0, var1 = func_02C6(var1, var2, var3);\n                            // Error: Could not resolve method call return address!\n                        }\n                    } else if (arg0 == 0xa26dbf26) {\n                        var0 = storage[0x06];\n                        goto label_0120;\n                    } else if (arg0 == 0xa6f9dae1) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp34 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp34 & msg.sender != temp34 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_02F2(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xb4022950) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp35 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp35 & msg.sender != temp35 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_0325(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xced92670) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp36 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp36 & msg.sender != temp36 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_0363(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xd11f13df) {\n                        var0 = storage[0x06] - storage[0x04];\n                        goto label_0120;\n                    } else if (arg0 == 0xfae14192) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp37 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (storage[0x05] & temp37 != temp37 & msg.sender) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_03A7(var1);\n                            stop();\n                        }\n                    } else { goto label_00AE; }\n                }\n            }\n        } else {\n            var0 = 0x04f7;\n            func_01B0();\n            goto label_04F7;\n        }\n    }\n    \n    function func_0363(var arg0) {\n        var var0 = arg0 > 0x012c;\n    \n        if (var0) {\n            if (!var0) {\n            label_0577:\n                storage[0x03] = arg0;\n                return;\n            } else {\n            label_0378:\n            \n            label_0002:\n                memory[0x40:0x60] = arg0;\n            \n                if (!msg.data.length) {\n                label_00AE:\n                    arg0 = 0x03b4;\n                    var0 = 0x03b6;\n                    var var1 = 0x00;\n                \n                    if (msg.value >= 0x0de0b6b3a7640000) {\n                        func_0453(var1);\n                        func_03B6();\n                        stop();\n                    } else {\n                        func_00C7(var1);\n                        func_03B6();\n                        stop();\n                    }\n                } else {\n                    arg0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                \n                    if (arg0 == 0x09dfdc71) {\n                        var temp0 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp0 + 0x20;\n                        memory[temp0:temp0 + 0x20] = 0x00;\n                        var temp1 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp1 + 0x0100;\n                        memory[temp1:temp1 + 0x20] = 0xca;\n                        memory[temp1 + 0x20:temp1 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                        var1 = temp1;\n                        var0 = storage[0x00] / 0x0de0b6b3a7640000;\n                    \n                    label_03B8:\n                        var temp2 = memory[0x40:0x60];\n                        var var2 = temp2;\n                        memory[var2:var2 + 0x20] = var0;\n                        var temp3 = var2 + 0x20;\n                        var var3 = temp3;\n                        var temp4 = var3 + 0x20;\n                        memory[var3:var3 + 0x20] = temp4 - var2;\n                        var temp5 = var1;\n                        memory[temp4:temp4 + 0x20] = memory[temp5:temp5 + 0x20];\n                        var temp6 = temp4 + 0x20;\n                        var temp7 = memory[temp5:temp5 + 0x20];\n                        memory[temp6:temp6 + temp7] = address(0x04).call.gas((temp7 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp5 + 0x20:temp5 + 0x20 + temp7]);\n                        var var4 = temp7 + temp6;\n                        var var5 = temp7 & 0x1f;\n                    \n                        if (!var5) {\n                            var temp8 = memory[0x40:0x60];\n                            return memory[temp8:temp8 + var4 - temp8];\n                        } else {\n                            var temp9 = var5;\n                            var temp10 = var4 - temp9;\n                            memory[temp10:temp10 + 0x20] = ~(0x0100 ** (0x20 - temp9) - 0x01) & memory[temp10:temp10 + 0x20];\n                            var temp11 = memory[0x40:0x60];\n                            return memory[temp11:temp11 + (temp10 + 0x20) - temp11];\n                        }\n                    } else if (arg0 == 0x253459e3) {\n                        var temp12 = memory[0x40:0x60];\n                        memory[temp12:temp12 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                        var temp13 = memory[0x40:0x60];\n                        return memory[temp13:temp13 + temp12 - temp13 + 0x20];\n                    } else if (arg0 == 0x4229616d) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var2 = 0x00;\n                        var temp14 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp14 & msg.sender != temp14 & storage[0x05]) {\n                            func_0573(var1, var2);\n                            stop();\n                        } else {\n                            var3 = var2 == storage[0x01];\n                        \n                            if (var3) {\n                                if (!var3) {\n                                label_0538:\n                                    var temp15 = memory[0x40:0x60];\n                                    var temp16 = var1 * (storage[0x01] / 0x64);\n                                    var2 = temp16;\n                                    memory[temp15:temp15 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(var2)(memory[temp15:temp15 + 0x00]);\n                                    storage[0x01] = storage[0x01] - var2;\n                                    func_0573(var1, var2);\n                                    // Error: Could not resolve method call return address!\n                                } else {\n                                label_0169:\n                                    goto label_0002;\n                                }\n                            } else if (var1 <= 0x64) { goto label_0538; }\n                            else { goto label_0169; }\n                        }\n                    } else if (arg0 == 0x57d4021b) {\n                        var0 = 0x0120;\n                        var1 = 0x00;\n                        var2 = 0x0de0b6b3a7640000;\n                        var3 = 0x06;\n                        var4 = storage[0x04];\n                    \n                        if (var4 >= storage[var3]) { goto label_0002; }\n                    \n                        var0 = nextPayoutWhenPyramidBalanceTotalsApproximately(var1, var2, var3, var4);\n                    \n                    label_0120:\n                        var temp17 = memory[0x40:0x60];\n                        memory[temp17:temp17 + 0x20] = var0;\n                        var temp18 = memory[0x40:0x60];\n                        return memory[temp18:temp18 + temp17 - temp18 + 0x20];\n                    } else if (arg0 == 0x686f2c90) {\n                        var0 = 0x03b4;\n                        var temp19 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp19 & msg.sender != temp19 & storage[0x05]) {\n                            func_03B6();\n                            stop();\n                        } else {\n                            func_01C9();\n                            stop();\n                        }\n                    } else if (arg0 == 0x6fbaaa1e) {\n                        var temp20 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp20 + 0x20;\n                        memory[temp20:temp20 + 0x20] = 0x00;\n                        var temp21 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp21 + 0x0140;\n                        memory[temp21:temp21 + 0x20] = 0x011f;\n                        memory[temp21 + 0x20:temp21 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                        var1 = temp21;\n                        var0 = storage[0x03];\n                        goto label_03B8;\n                    } else if (arg0 == 0x8a5fb3ca) {\n                        var temp22 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp22 + 0x20;\n                        memory[temp22:temp22 + 0x20] = 0x00;\n                        var temp23 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp23 + 0xc0;\n                        memory[temp23:temp23 + 0x20] = 0x84;\n                        memory[temp23 + 0x20:temp23 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                        var1 = temp23;\n                        var0 = storage[0x02];\n                        goto label_03B8;\n                    } else if (arg0 == 0x9dbc4f9b) {\n                        var0 = 0x042d;\n                        var1 = msg.data[0x04:0x24];\n                        var2 = 0x00;\n                        var3 = var2;\n                    \n                        if (var1 > storage[0x06]) {\n                            var0, var1 = func_02C6(var1, var2, var3);\n                            var temp24 = memory[0x40:0x60];\n                            memory[temp24:temp24 + 0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                            var temp25 = temp24 + 0x20;\n                            memory[temp25:temp25 + 0x20] = var1;\n                            var temp26 = memory[0x40:0x60];\n                            return memory[temp26:temp26 + (temp25 + 0x20) - temp26];\n                        } else {\n                            var4 = 0x06;\n                            var5 = var1;\n                        \n                            if (var5 >= storage[var4]) { goto label_0002; }\n                        \n                            var temp27 = var4;\n                            memory[var3:var3 + 0x20] = temp27;\n                            var temp28 = var1;\n                            var2 = storage[temp28 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                            var4 = 0x0de0b6b3a7640000;\n                            var5 = temp27;\n                            var var6 = temp28;\n                        \n                            if (var6 >= storage[var5]) { goto label_0002; }\n                        \n                            var temp29 = memory[0x00:0x20];\n                            memory[0x00:0x20] = code[0x0999:0x09b9];\n                            var temp30 = memory[0x00:0x20];\n                            memory[0x00:0x20] = temp29;\n                            var3 = storage[temp30 + var1 * 0x02] / var4;\n                            var0, var1 = func_02C6(var1, var2, var3);\n                            // Error: Could not resolve method call return address!\n                        }\n                    } else if (arg0 == 0xa26dbf26) {\n                        var0 = storage[0x06];\n                        goto label_0120;\n                    } else if (arg0 == 0xa6f9dae1) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp31 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp31 & msg.sender != temp31 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_02F2(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xb4022950) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp32 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp32 & msg.sender != temp32 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_0325(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xced92670) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp33 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp33 & msg.sender != temp33 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_0363(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xd11f13df) {\n                        var0 = storage[0x06] - storage[0x04];\n                        goto label_0120;\n                    } else if (arg0 == 0xfae14192) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp34 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (storage[0x05] & temp34 != temp34 & msg.sender) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_03A7(var1);\n                            stop();\n                        }\n                    } else { goto label_00AE; }\n                }\n            }\n        } else if (arg0 >= 0x78) { goto label_0577; }\n        else { goto label_0378; }\n    }\n    \n    function func_03A7(var arg0) {\n        if (arg0 <= 0x0a) {\n            storage[0x02] = arg0;\n            return;\n        } else {\n        label_0002:\n            memory[0x40:0x60] = arg0;\n        \n            if (!msg.data.length) {\n            label_00AE:\n                arg0 = 0x03b4;\n                var var0 = 0x03b6;\n                var var1 = 0x00;\n            \n                if (msg.value >= 0x0de0b6b3a7640000) {\n                    func_0453(var1);\n                    func_03B6();\n                    stop();\n                } else {\n                    func_00C7(var1);\n                    func_03B6();\n                    stop();\n                }\n            } else {\n                arg0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n            \n                if (arg0 == 0x09dfdc71) {\n                    var temp0 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp0 + 0x20;\n                    memory[temp0:temp0 + 0x20] = 0x00;\n                    var temp1 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp1 + 0x0100;\n                    memory[temp1:temp1 + 0x20] = 0xca;\n                    memory[temp1 + 0x20:temp1 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                    var1 = temp1;\n                    var0 = storage[0x00] / 0x0de0b6b3a7640000;\n                \n                label_03B8:\n                    var temp2 = memory[0x40:0x60];\n                    var var2 = temp2;\n                    memory[var2:var2 + 0x20] = var0;\n                    var temp3 = var2 + 0x20;\n                    var var3 = temp3;\n                    var temp4 = var3 + 0x20;\n                    memory[var3:var3 + 0x20] = temp4 - var2;\n                    var temp5 = var1;\n                    memory[temp4:temp4 + 0x20] = memory[temp5:temp5 + 0x20];\n                    var temp6 = temp4 + 0x20;\n                    var temp7 = memory[temp5:temp5 + 0x20];\n                    memory[temp6:temp6 + temp7] = address(0x04).call.gas((temp7 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp5 + 0x20:temp5 + 0x20 + temp7]);\n                    var var4 = temp7 + temp6;\n                    var var5 = temp7 & 0x1f;\n                \n                    if (!var5) {\n                        var temp8 = memory[0x40:0x60];\n                        return memory[temp8:temp8 + var4 - temp8];\n                    } else {\n                        var temp9 = var5;\n                        var temp10 = var4 - temp9;\n                        memory[temp10:temp10 + 0x20] = ~(0x0100 ** (0x20 - temp9) - 0x01) & memory[temp10:temp10 + 0x20];\n                        var temp11 = memory[0x40:0x60];\n                        return memory[temp11:temp11 + (temp10 + 0x20) - temp11];\n                    }\n                } else if (arg0 == 0x253459e3) {\n                    var temp12 = memory[0x40:0x60];\n                    memory[temp12:temp12 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                    var temp13 = memory[0x40:0x60];\n                    return memory[temp13:temp13 + temp12 - temp13 + 0x20];\n                } else if (arg0 == 0x4229616d) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var2 = 0x00;\n                    var temp14 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp14 & msg.sender != temp14 & storage[0x05]) {\n                        func_0573(var1, var2);\n                        stop();\n                    } else {\n                        var3 = var2 == storage[0x01];\n                    \n                        if (var3) {\n                            if (!var3) {\n                            label_0538:\n                                var temp15 = memory[0x40:0x60];\n                                var temp16 = var1 * (storage[0x01] / 0x64);\n                                var2 = temp16;\n                                memory[temp15:temp15 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(var2)(memory[temp15:temp15 + 0x00]);\n                                storage[0x01] = storage[0x01] - var2;\n                                func_0573(var1, var2);\n                                // Error: Could not resolve method call return address!\n                            } else {\n                            label_0169:\n                                goto label_0002;\n                            }\n                        } else if (var1 <= 0x64) { goto label_0538; }\n                        else { goto label_0169; }\n                    }\n                } else if (arg0 == 0x57d4021b) {\n                    var0 = 0x0120;\n                    var1 = 0x00;\n                    var2 = 0x0de0b6b3a7640000;\n                    var3 = 0x06;\n                    var4 = storage[0x04];\n                \n                    if (var4 >= storage[var3]) { goto label_0002; }\n                \n                    var0 = nextPayoutWhenPyramidBalanceTotalsApproximately(var1, var2, var3, var4);\n                \n                label_0120:\n                    var temp17 = memory[0x40:0x60];\n                    memory[temp17:temp17 + 0x20] = var0;\n                    var temp18 = memory[0x40:0x60];\n                    return memory[temp18:temp18 + temp17 - temp18 + 0x20];\n                } else if (arg0 == 0x686f2c90) {\n                    var0 = 0x03b4;\n                    var temp19 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp19 & msg.sender != temp19 & storage[0x05]) {\n                        func_03B6();\n                        stop();\n                    } else {\n                        func_01C9();\n                        stop();\n                    }\n                } else if (arg0 == 0x6fbaaa1e) {\n                    var temp20 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp20 + 0x20;\n                    memory[temp20:temp20 + 0x20] = 0x00;\n                    var temp21 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp21 + 0x0140;\n                    memory[temp21:temp21 + 0x20] = 0x011f;\n                    memory[temp21 + 0x20:temp21 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                    var1 = temp21;\n                    var0 = storage[0x03];\n                    goto label_03B8;\n                } else if (arg0 == 0x8a5fb3ca) {\n                    var temp22 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp22 + 0x20;\n                    memory[temp22:temp22 + 0x20] = 0x00;\n                    var temp23 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp23 + 0xc0;\n                    memory[temp23:temp23 + 0x20] = 0x84;\n                    memory[temp23 + 0x20:temp23 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                    var1 = temp23;\n                    var0 = storage[0x02];\n                    goto label_03B8;\n                } else if (arg0 == 0x9dbc4f9b) {\n                    var0 = 0x042d;\n                    var1 = msg.data[0x04:0x24];\n                    var2 = 0x00;\n                    var3 = var2;\n                \n                    if (var1 > storage[0x06]) {\n                        var0, var1 = func_02C6(var1, var2, var3);\n                        var temp24 = memory[0x40:0x60];\n                        memory[temp24:temp24 + 0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                        var temp25 = temp24 + 0x20;\n                        memory[temp25:temp25 + 0x20] = var1;\n                        var temp26 = memory[0x40:0x60];\n                        return memory[temp26:temp26 + (temp25 + 0x20) - temp26];\n                    } else {\n                        var4 = 0x06;\n                        var5 = var1;\n                    \n                        if (var5 >= storage[var4]) { goto label_0002; }\n                    \n                        var temp27 = var4;\n                        memory[var3:var3 + 0x20] = temp27;\n                        var temp28 = var1;\n                        var2 = storage[temp28 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                        var4 = 0x0de0b6b3a7640000;\n                        var5 = temp27;\n                        var var6 = temp28;\n                    \n                        if (var6 >= storage[var5]) { goto label_0002; }\n                    \n                        var temp29 = memory[0x00:0x20];\n                        memory[0x00:0x20] = code[0x0999:0x09b9];\n                        var temp30 = memory[0x00:0x20];\n                        memory[0x00:0x20] = temp29;\n                        var3 = storage[temp30 + var1 * 0x02] / var4;\n                        var0, var1 = func_02C6(var1, var2, var3);\n                        // Error: Could not resolve method call return address!\n                    }\n                } else if (arg0 == 0xa26dbf26) {\n                    var0 = storage[0x06];\n                    goto label_0120;\n                } else if (arg0 == 0xa6f9dae1) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp31 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp31 & msg.sender != temp31 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_02F2(var1);\n                        stop();\n                    }\n                } else if (arg0 == 0xb4022950) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp32 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp32 & msg.sender != temp32 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_0325(var1);\n                        stop();\n                    }\n                } else if (arg0 == 0xced92670) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp33 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp33 & msg.sender != temp33 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_0363(var1);\n                        stop();\n                    }\n                } else if (arg0 == 0xd11f13df) {\n                    var0 = storage[0x06] - storage[0x04];\n                    goto label_0120;\n                } else if (arg0 == 0xfae14192) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp34 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (storage[0x05] & temp34 != temp34 & msg.sender) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_03A7(var1);\n                        stop();\n                    }\n                } else { goto label_00AE; }\n            }\n        }\n    }\n    \n    function func_03B6() {}\n    \n    function func_0453(var arg0) {\n        arg0 = storage[0x02];\n    \n        if (msg.value < 0x02b5e3af16b1880000) {\n            var var0 = 0x00cf;\n            var var1 = arg0;\n            var var2 = 0x00;\n            var var3 = 0x06;\n            var var4 = storage[var3];\n            var temp0 = var4 + 0x01;\n            var var5 = temp0;\n            var var6 = var3;\n            var var7 = var5;\n            var temp1 = storage[var6];\n            var var8 = temp1;\n            storage[var6] = var7;\n        \n            if (!var8 > var7) {\n                func_0581(var1, var2, var3, var4, var5, var6, var7, var8);\n                func_00CF(arg0);\n                // Error: Could not resolve method call return address!\n            } else {\n            label_048D:\n                memory[0x00:0x20] = var6;\n                var temp2 = keccak256(memory[0x00:0x20]);\n                var temp3 = temp2 + var8 * 0x02;\n                var8 = 0x0581;\n                var var10 = temp2 + var7 * 0x02;\n                var var9 = temp3;\n            \n                if (var9 <= var10) {\n                    var8 = func_05E5(var9, var10);\n                    func_0581(var1, var2, var3, var4, var5, var6, var7, var8);\n                    // Error: Could not resolve method call return address!\n                } else {\n                label_04B0:\n                    var temp4 = var10;\n                    storage[temp4] = storage[temp4] & ~(0x02 ** 0xa0 - 0x01);\n                    var10 = temp4 + 0x01;\n                    storage[var10] = 0x00;\n                \n                    if (var9 > var10) { goto label_04B0; }\n                \n                    var8 = func_05E5(var9, var10);\n                    // Error: Could not resolve method call return address!\n                }\n            }\n        } else {\n            var temp5 = arg0 / 0x02;\n            arg0 = temp5;\n            var0 = 0x00cf;\n            var1 = arg0;\n            var2 = 0x00;\n            var3 = 0x06;\n            var4 = storage[var3];\n            var temp6 = var4 + 0x01;\n            var5 = temp6;\n            var6 = var3;\n            var7 = var5;\n            var temp7 = storage[var6];\n            var8 = temp7;\n            storage[var6] = var7;\n        \n            if (!var8 <= var7) { goto label_048D; }\n        \n            func_0581(var1, var2, var3, var4, var5, var6, var7, var8);\n            func_00CF(arg0);\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function func_0573(var arg0, var arg1) {}\n    \n    function func_0581(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6, var arg7) {\n        memory[0x00:0x20] = arg2;\n        var temp0 = arg3 * 0x02 + keccak256(memory[0x00:0x20]);\n        var temp1 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp1 + 0x40;\n        var temp2 = msg.sender;\n        memory[temp1:temp1 + 0x20] = temp2;\n        var temp3 = (msg.value * storage[0x03]) / 0x64;\n        memory[temp1 + 0x20:temp1 + 0x20 + 0x20] = temp3;\n        storage[temp0] = (storage[temp0] & ~(0x02 ** 0xa0 - 0x01)) | temp2;\n        storage[temp0 + 0x01] = temp3;\n    \n        if (storage[0x06] == 0x0a) {\n            storage[0x03] = 0xc8;\n            goto label_05FA;\n        } else if (storage[0x06] != 0x19) {\n        label_05FA:\n            var temp4 = arg0;\n            var temp5 = msg.value;\n            storage[0x00] = storage[0x00] + (temp5 * (0x64 - temp4)) / 0x64;\n            storage[0x01] = (temp4 * temp5) / 0x64 + storage[0x01];\n            arg2 = 0x06;\n            arg3 = storage[0x04];\n        \n            if (arg3 >= storage[arg2]) {\n            label_0002:\n                memory[0x40:0x60] = arg3;\n            \n                if (!msg.data.length) {\n                label_00AE:\n                    arg3 = 0x03b4;\n                    arg4 = 0x03b6;\n                    arg5 = 0x00;\n                \n                    if (msg.value >= 0x0de0b6b3a7640000) {\n                        func_0453(arg5);\n                        func_03B6();\n                        stop();\n                    } else {\n                        func_00C7(arg5);\n                        func_03B6();\n                        stop();\n                    }\n                } else {\n                    arg3 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                \n                    if (arg3 == 0x09dfdc71) {\n                        var temp6 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp6 + 0x20;\n                        memory[temp6:temp6 + 0x20] = 0x00;\n                        var temp7 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp7 + 0x0100;\n                        memory[temp7:temp7 + 0x20] = 0xca;\n                        memory[temp7 + 0x20:temp7 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                        arg5 = temp7;\n                        arg4 = storage[0x00] / 0x0de0b6b3a7640000;\n                    \n                    label_03B8:\n                        var temp8 = memory[0x40:0x60];\n                        arg6 = temp8;\n                        memory[arg6:arg6 + 0x20] = arg4;\n                        var temp9 = arg6 + 0x20;\n                        arg7 = temp9;\n                        var temp10 = arg7 + 0x20;\n                        memory[arg7:arg7 + 0x20] = temp10 - arg6;\n                        var temp11 = arg5;\n                        memory[temp10:temp10 + 0x20] = memory[temp11:temp11 + 0x20];\n                        var temp12 = temp10 + 0x20;\n                        var temp13 = memory[temp11:temp11 + 0x20];\n                        memory[temp12:temp12 + temp13] = address(0x04).call.gas((temp13 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp11 + 0x20:temp11 + 0x20 + temp13]);\n                        var var0 = temp13 + temp12;\n                        var var1 = temp13 & 0x1f;\n                    \n                        if (!var1) {\n                            var temp14 = memory[0x40:0x60];\n                            return memory[temp14:temp14 + var0 - temp14];\n                        } else {\n                            var temp15 = var1;\n                            var temp16 = var0 - temp15;\n                            memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                            var temp17 = memory[0x40:0x60];\n                            return memory[temp17:temp17 + (temp16 + 0x20) - temp17];\n                        }\n                    } else if (arg3 == 0x253459e3) {\n                        var temp18 = memory[0x40:0x60];\n                        memory[temp18:temp18 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                        var temp19 = memory[0x40:0x60];\n                        return memory[temp19:temp19 + temp18 - temp19 + 0x20];\n                    } else if (arg3 == 0x4229616d) {\n                        arg4 = 0x03b4;\n                        arg5 = msg.data[0x04:0x24];\n                        arg6 = 0x00;\n                        var temp20 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp20 & msg.sender != temp20 & storage[0x05]) {\n                            func_0573(arg5, arg6);\n                            stop();\n                        } else {\n                            arg7 = arg6 == storage[0x01];\n                        \n                            if (arg7) {\n                                if (!arg7) {\n                                label_0538:\n                                    var temp21 = memory[0x40:0x60];\n                                    var temp22 = arg5 * (storage[0x01] / 0x64);\n                                    arg6 = temp22;\n                                    memory[temp21:temp21 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(arg6)(memory[temp21:temp21 + 0x00]);\n                                    storage[0x01] = storage[0x01] - arg6;\n                                    func_0573(arg5, arg6);\n                                    // Error: Could not resolve method call return address!\n                                } else {\n                                label_0169:\n                                    goto label_0002;\n                                }\n                            } else if (arg5 <= 0x64) { goto label_0538; }\n                            else { goto label_0169; }\n                        }\n                    } else if (arg3 == 0x57d4021b) {\n                        arg4 = 0x0120;\n                        arg5 = 0x00;\n                        arg6 = 0x0de0b6b3a7640000;\n                        arg7 = 0x06;\n                        var0 = storage[0x04];\n                    \n                        if (var0 >= storage[arg7]) { goto label_0002; }\n                    \n                        arg4 = nextPayoutWhenPyramidBalanceTotalsApproximately(arg5, arg6, arg7, var0);\n                    \n                    label_0120:\n                        var temp23 = memory[0x40:0x60];\n                        memory[temp23:temp23 + 0x20] = arg4;\n                        var temp24 = memory[0x40:0x60];\n                        return memory[temp24:temp24 + temp23 - temp24 + 0x20];\n                    } else if (arg3 == 0x686f2c90) {\n                        arg4 = 0x03b4;\n                        var temp25 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp25 & msg.sender != temp25 & storage[0x05]) {\n                            func_03B6();\n                            stop();\n                        } else {\n                            func_01C9();\n                            stop();\n                        }\n                    } else if (arg3 == 0x6fbaaa1e) {\n                        var temp26 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp26 + 0x20;\n                        memory[temp26:temp26 + 0x20] = 0x00;\n                        var temp27 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp27 + 0x0140;\n                        memory[temp27:temp27 + 0x20] = 0x011f;\n                        memory[temp27 + 0x20:temp27 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                        arg5 = temp27;\n                        arg4 = storage[0x03];\n                        goto label_03B8;\n                    } else if (arg3 == 0x8a5fb3ca) {\n                        var temp28 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp28 + 0x20;\n                        memory[temp28:temp28 + 0x20] = 0x00;\n                        var temp29 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp29 + 0xc0;\n                        memory[temp29:temp29 + 0x20] = 0x84;\n                        memory[temp29 + 0x20:temp29 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                        arg5 = temp29;\n                        arg4 = storage[0x02];\n                        goto label_03B8;\n                    } else if (arg3 == 0x9dbc4f9b) {\n                        arg4 = 0x042d;\n                        arg5 = msg.data[0x04:0x24];\n                        arg6 = 0x00;\n                        arg7 = arg6;\n                    \n                        if (arg5 > storage[0x06]) {\n                            arg4, arg5 = func_02C6(arg5, arg6, arg7);\n                            var temp30 = memory[0x40:0x60];\n                            memory[temp30:temp30 + 0x20] = arg4 & 0x02 ** 0xa0 - 0x01;\n                            var temp31 = temp30 + 0x20;\n                            memory[temp31:temp31 + 0x20] = arg5;\n                            var temp32 = memory[0x40:0x60];\n                            return memory[temp32:temp32 + (temp31 + 0x20) - temp32];\n                        } else {\n                            var0 = 0x06;\n                            var1 = arg5;\n                        \n                            if (var1 >= storage[var0]) { goto label_0002; }\n                        \n                            var temp33 = var0;\n                            memory[arg7:arg7 + 0x20] = temp33;\n                            var temp34 = arg5;\n                            arg6 = storage[temp34 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                            var0 = 0x0de0b6b3a7640000;\n                            var1 = temp33;\n                            var var2 = temp34;\n                        \n                            if (var2 >= storage[var1]) { goto label_0002; }\n                        \n                            var temp35 = memory[0x00:0x20];\n                            memory[0x00:0x20] = code[0x0999:0x09b9];\n                            var temp36 = memory[0x00:0x20];\n                            memory[0x00:0x20] = temp35;\n                            arg7 = storage[temp36 + arg5 * 0x02] / var0;\n                            arg4, arg5 = func_02C6(arg5, arg6, arg7);\n                            // Error: Could not resolve method call return address!\n                        }\n                    } else if (arg3 == 0xa26dbf26) {\n                        arg4 = storage[0x06];\n                        goto label_0120;\n                    } else if (arg3 == 0xa6f9dae1) {\n                        arg4 = 0x03b4;\n                        arg5 = msg.data[0x04:0x24];\n                        var temp37 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp37 & msg.sender != temp37 & storage[0x05]) {\n                            func_00CF(arg5);\n                            stop();\n                        } else {\n                            func_02F2(arg5);\n                            stop();\n                        }\n                    } else if (arg3 == 0xb4022950) {\n                        arg4 = 0x03b4;\n                        arg5 = msg.data[0x04:0x24];\n                        var temp38 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp38 & msg.sender != temp38 & storage[0x05]) {\n                            func_00CF(arg5);\n                            stop();\n                        } else {\n                            func_0325(arg5);\n                            stop();\n                        }\n                    } else if (arg3 == 0xced92670) {\n                        arg4 = 0x03b4;\n                        arg5 = msg.data[0x04:0x24];\n                        var temp39 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp39 & msg.sender != temp39 & storage[0x05]) {\n                            func_00CF(arg5);\n                            stop();\n                        } else {\n                            func_0363(arg5);\n                            stop();\n                        }\n                    } else if (arg3 == 0xd11f13df) {\n                        arg4 = storage[0x06] - storage[0x04];\n                        goto label_0120;\n                    } else if (arg3 == 0xfae14192) {\n                        arg4 = 0x03b4;\n                        arg5 = msg.data[0x04:0x24];\n                        var temp40 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (storage[0x05] & temp40 != temp40 & msg.sender) {\n                            func_00CF(arg5);\n                            stop();\n                        } else {\n                            func_03A7(arg5);\n                            stop();\n                        }\n                    } else { goto label_00AE; }\n                }\n            } else {\n            label_0631:\n                memory[0x00:0x20] = arg2;\n            \n                if (storage[0x00] <= storage[arg3 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f + 0x01]) {\n                    func_0573(arg0, arg1);\n                    // Error: Could not resolve method call return address!\n                } else {\n                    arg2 = 0x06;\n                    arg3 = storage[0x04];\n                \n                    if (arg3 >= storage[arg2]) { goto label_0002; }\n                \n                    var temp41 = memory[0x00:0x20];\n                    memory[0x00:0x20] = code[0x0999:0x09b9];\n                    var temp42 = memory[0x00:0x20];\n                    memory[0x00:0x20] = temp41;\n                    arg1 = storage[temp42 + arg3 * 0x02];\n                    arg3 = storage[0x04];\n                \n                    if (arg3 >= storage[arg2]) { goto label_0002; }\n                \n                    var temp43 = memory[0x40:0x60];\n                    memory[temp43:temp43 + 0x00] = address(storage[arg3 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(arg1)(memory[temp43:temp43 + 0x00]);\n                    arg2 = 0x06;\n                    arg3 = storage[0x04];\n                \n                    if (arg3 >= storage[arg2]) { goto label_0002; }\n                \n                    memory[0x00:0x20] = arg2;\n                    var temp44 = memory[0x00:0x20];\n                    memory[0x00:0x20] = code[0x0999:0x09b9];\n                    var temp45 = memory[0x00:0x20];\n                    memory[0x00:0x20] = temp44;\n                    storage[0x00] = storage[0x00] - storage[temp45 + arg3 * 0x02];\n                    storage[0x04] = storage[0x04] + 0x01;\n                    arg2 = 0x06;\n                    arg3 = storage[0x04];\n                \n                    if (arg3 >= storage[arg2]) { goto label_0002; }\n                    else { goto label_0631; }\n                }\n            }\n        } else {\n            storage[0x03] = 0x96;\n            var temp46 = arg0;\n            var temp47 = msg.value;\n            storage[0x00] = storage[0x00] + (temp47 * (0x64 - temp46)) / 0x64;\n            storage[0x01] = (temp46 * temp47) / 0x64 + storage[0x01];\n            arg2 = 0x06;\n            arg3 = storage[0x04];\n        \n            if (arg3 >= storage[arg2]) { goto label_0002; }\n            else { goto label_0631; }\n        }\n    }\n    \n    function func_05E5(var arg0, var arg1) returns (var r0) { return arg0; }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n    \n        if (!msg.data.length) {\n        label_00AE:\n            var var0 = 0x03b4;\n            var var1 = 0x03b6;\n            var var2 = 0x00;\n        \n            if (msg.value >= 0x0de0b6b3a7640000) {\n                func_0453(var2);\n                func_03B6();\n                stop();\n            } else {\n                func_00C7(var2);\n                func_03B6();\n                stop();\n            }\n        } else {\n        label_000B:\n            var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (var0 == 0x09dfdc71) {\n                // Dispatch table entry for currentPyramidBalanceApproximately()\n                var temp0 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp0 + 0x20;\n                memory[temp0:temp0 + 0x20] = 0x00;\n                var temp1 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp1 + 0x0100;\n                memory[temp1:temp1 + 0x20] = 0xca;\n                memory[temp1 + 0x20:temp1 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                var2 = temp1;\n                var1 = storage[0x00] / 0x0de0b6b3a7640000;\n            \n            label_03B8:\n                var temp2 = memory[0x40:0x60];\n                var var3 = temp2;\n                memory[var3:var3 + 0x20] = var1;\n                var temp3 = var3 + 0x20;\n                var var4 = temp3;\n                var temp4 = var4 + 0x20;\n                memory[var4:var4 + 0x20] = temp4 - var3;\n                var temp5 = var2;\n                memory[temp4:temp4 + 0x20] = memory[temp5:temp5 + 0x20];\n                var temp6 = temp4 + 0x20;\n                var temp7 = memory[temp5:temp5 + 0x20];\n                memory[temp6:temp6 + temp7] = address(0x04).call.gas((temp7 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp5 + 0x20:temp5 + 0x20 + temp7]);\n                var var5 = temp7 + temp6;\n                var var6 = temp7 & 0x1f;\n            \n                if (!var6) {\n                    var temp8 = memory[0x40:0x60];\n                    return memory[temp8:temp8 + var5 - temp8];\n                } else {\n                    var temp9 = var6;\n                    var temp10 = var5 - temp9;\n                    memory[temp10:temp10 + 0x20] = ~(0x0100 ** (0x20 - temp9) - 0x01) & memory[temp10:temp10 + 0x20];\n                    var temp11 = memory[0x40:0x60];\n                    return memory[temp11:temp11 + (temp10 + 0x20) - temp11];\n                }\n            } else if (var0 == 0x253459e3) {\n                // Dispatch table entry for feesSeperateFromBalanceApproximately()\n                var temp12 = memory[0x40:0x60];\n                memory[temp12:temp12 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                var temp13 = memory[0x40:0x60];\n                return memory[temp13:temp13 + temp12 - temp13 + 0x20];\n            } else if (var0 == 0x4229616d) {\n                // Dispatch table entry for collectPercentOfFees(uint256)\n                var1 = 0x03b4;\n                var2 = msg.data[0x04:0x24];\n                var3 = 0x00;\n                var temp14 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp14 & msg.sender != temp14 & storage[0x05]) {\n                    func_0573(var2, var3);\n                    stop();\n                } else {\n                    var4 = var3 == storage[0x01];\n                \n                    if (var4) {\n                        if (!var4) {\n                        label_0538:\n                            var temp15 = memory[0x40:0x60];\n                            var temp16 = var2 * (storage[0x01] / 0x64);\n                            var3 = temp16;\n                            memory[temp15:temp15 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(var3)(memory[temp15:temp15 + 0x00]);\n                            storage[0x01] = storage[0x01] - var3;\n                            func_0573(var2, var3);\n                            // Error: Could not resolve method call return address!\n                        } else {\n                        label_0169:\n                        \n                        label_0002:\n                            memory[0x40:0x60] = var3;\n                        \n                            if (!msg.data.length) { goto label_00AE; }\n                            else { goto label_000B; }\n                        }\n                    } else if (var2 <= 0x64) { goto label_0538; }\n                    else { goto label_0169; }\n                }\n            } else if (var0 == 0x57d4021b) {\n                // Dispatch table entry for nextPayoutWhenPyramidBalanceTotalsApproximately()\n                var1 = 0x0120;\n                var2 = 0x00;\n                var3 = 0x0de0b6b3a7640000;\n                var4 = 0x06;\n                var5 = storage[0x04];\n            \n                if (var5 >= storage[var4]) { goto label_0002; }\n            \n                var1 = nextPayoutWhenPyramidBalanceTotalsApproximately(var2, var3, var4, var5);\n            \n            label_0120:\n                var temp17 = memory[0x40:0x60];\n                memory[temp17:temp17 + 0x20] = var1;\n                var temp18 = memory[0x40:0x60];\n                return memory[temp18:temp18 + temp17 - temp18 + 0x20];\n            } else if (var0 == 0x686f2c90) {\n                // Dispatch table entry for collectAllFees()\n                var1 = 0x03b4;\n                var temp19 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp19 & msg.sender != temp19 & storage[0x05]) {\n                    func_03B6();\n                    stop();\n                } else {\n                    func_01C9();\n                    stop();\n                }\n            } else if (var0 == 0x6fbaaa1e) {\n                // Dispatch table entry for currentMultiplier()\n                var temp20 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp20 + 0x20;\n                memory[temp20:temp20 + 0x20] = 0x00;\n                var temp21 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp21 + 0x0140;\n                memory[temp21:temp21 + 0x20] = 0x011f;\n                memory[temp21 + 0x20:temp21 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                var2 = temp21;\n                var1 = storage[0x03];\n                goto label_03B8;\n            } else if (var0 == 0x8a5fb3ca) {\n                // Dispatch table entry for currentFeePercentage()\n                var temp22 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp22 + 0x20;\n                memory[temp22:temp22 + 0x20] = 0x00;\n                var temp23 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp23 + 0xc0;\n                memory[temp23:temp23 + 0x20] = 0x84;\n                memory[temp23 + 0x20:temp23 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                var2 = temp23;\n                var1 = storage[0x02];\n                goto label_03B8;\n            } else if (var0 == 0x9dbc4f9b) {\n                // Dispatch table entry for participantDetails(uint256)\n                var1 = 0x042d;\n                var2 = msg.data[0x04:0x24];\n                var3 = 0x00;\n                var4 = var3;\n            \n                if (var2 > storage[0x06]) {\n                    var1, var2 = func_02C6(var2, var3, var4);\n                    var temp24 = memory[0x40:0x60];\n                    memory[temp24:temp24 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                    var temp25 = temp24 + 0x20;\n                    memory[temp25:temp25 + 0x20] = var2;\n                    var temp26 = memory[0x40:0x60];\n                    return memory[temp26:temp26 + (temp25 + 0x20) - temp26];\n                } else {\n                    var5 = 0x06;\n                    var6 = var2;\n                \n                    if (var6 >= storage[var5]) { goto label_0002; }\n                \n                    var temp27 = var5;\n                    memory[var4:var4 + 0x20] = temp27;\n                    var temp28 = var2;\n                    var3 = storage[temp28 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                    var5 = 0x0de0b6b3a7640000;\n                    var6 = temp27;\n                    var var7 = temp28;\n                \n                    if (var7 >= storage[var6]) { goto label_0002; }\n                \n                    var temp29 = memory[0x00:0x20];\n                    memory[0x00:0x20] = code[0x0999:0x09b9];\n                    var temp30 = memory[0x00:0x20];\n                    memory[0x00:0x20] = temp29;\n                    var4 = storage[temp30 + var2 * 0x02] / var5;\n                    var1, var2 = func_02C6(var2, var3, var4);\n                    // Error: Could not resolve method call return address!\n                }\n            } else if (var0 == 0xa26dbf26) {\n                // Dispatch table entry for totalParticipants()\n                var1 = storage[0x06];\n                goto label_0120;\n            } else if (var0 == 0xa6f9dae1) {\n                // Dispatch table entry for changeOwner(address)\n                var1 = 0x03b4;\n                var2 = msg.data[0x04:0x24];\n                var temp31 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp31 & msg.sender != temp31 & storage[0x05]) {\n                    func_00CF(var2);\n                    stop();\n                } else {\n                    func_02F2(var2);\n                    stop();\n                }\n            } else if (var0 == 0xb4022950) {\n                // Dispatch table entry for collectFeesInEther(uint256)\n                var1 = 0x03b4;\n                var2 = msg.data[0x04:0x24];\n                var temp32 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp32 & msg.sender != temp32 & storage[0x05]) {\n                    func_00CF(var2);\n                    stop();\n                } else {\n                    func_0325(var2);\n                    stop();\n                }\n            } else if (var0 == 0xced92670) {\n                // Dispatch table entry for changeMultiplier(uint256)\n                var1 = 0x03b4;\n                var2 = msg.data[0x04:0x24];\n                var temp33 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp33 & msg.sender != temp33 & storage[0x05]) {\n                    func_00CF(var2);\n                    stop();\n                } else {\n                    func_0363(var2);\n                    stop();\n                }\n            } else if (var0 == 0xd11f13df) {\n                // Dispatch table entry for numberOfParticipantsWaitingForPayout()\n                var1 = storage[0x06] - storage[0x04];\n                goto label_0120;\n            } else if (var0 == 0xfae14192) {\n                // Dispatch table entry for changeFeePercentage(uint256)\n                var1 = 0x03b4;\n                var2 = msg.data[0x04:0x24];\n                var temp34 = 0x02 ** 0xa0 - 0x01;\n            \n                if (storage[0x05] & temp34 != temp34 & msg.sender) {\n                    func_00CF(var2);\n                    stop();\n                } else {\n                    func_03A7(var2);\n                    stop();\n                }\n            } else { goto label_00AE; }\n        }\n    }\n    \n    function func_00C7(var arg0) {\n        storage[0x01] = msg.value + storage[0x01];\n    }\n    \n    function func_00CF(var arg0) {}\n    \n    function nextPayoutWhenPyramidBalanceTotalsApproximately(var arg0, var arg1, var arg2, var arg3) returns (var r0) {\n        memory[arg0:arg0 + 0x20] = arg2;\n        var temp0 = memory[0x00:0x20];\n        memory[0x00:0x20] = code[0x0999:0x09b9];\n        var temp1 = memory[0x00:0x20];\n        memory[0x00:0x20] = temp0;\n        return storage[temp1 + arg3 * 0x02] / arg1;\n    }\n    \n    function func_01B0() {\n        var temp0 = 0x02 ** 0xa0 - 0x01;\n    \n        if (temp0 & msg.sender != temp0 & storage[0x05]) {\n            func_03B6();\n            // Error: Could not resolve method call return address!\n        } else {\n            func_01C9();\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function func_01C9() {\n        if (storage[0x01] != 0x00) {\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(storage[0x01])(memory[temp0:temp0 + 0x00]);\n            storage[0x01] = 0x00;\n            return;\n        } else {\n        label_0002:\n            memory[0x40:0x60] = returnAddress0;\n        \n            if (!msg.data.length) {\n            label_00AE:\n                returnAddress0 = 0x03b4;\n                var var0 = 0x03b6;\n                var var1 = 0x00;\n            \n                if (msg.value >= 0x0de0b6b3a7640000) {\n                    func_0453(var1);\n                    func_03B6();\n                    stop();\n                } else {\n                    func_00C7(var1);\n                    func_03B6();\n                    stop();\n                }\n            } else {\n                returnAddress0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n            \n                if (returnAddress0 == 0x09dfdc71) {\n                    var temp1 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp1 + 0x20;\n                    memory[temp1:temp1 + 0x20] = 0x00;\n                    var temp2 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp2 + 0x0100;\n                    memory[temp2:temp2 + 0x20] = 0xca;\n                    memory[temp2 + 0x20:temp2 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                    var1 = temp2;\n                    var0 = storage[0x00] / 0x0de0b6b3a7640000;\n                \n                label_03B8:\n                    var temp3 = memory[0x40:0x60];\n                    var var2 = temp3;\n                    memory[var2:var2 + 0x20] = var0;\n                    var temp4 = var2 + 0x20;\n                    var var3 = temp4;\n                    var temp5 = var3 + 0x20;\n                    memory[var3:var3 + 0x20] = temp5 - var2;\n                    var temp6 = var1;\n                    memory[temp5:temp5 + 0x20] = memory[temp6:temp6 + 0x20];\n                    var temp7 = temp5 + 0x20;\n                    var temp8 = memory[temp6:temp6 + 0x20];\n                    memory[temp7:temp7 + temp8] = address(0x04).call.gas((temp8 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp6 + 0x20:temp6 + 0x20 + temp8]);\n                    var var4 = temp8 + temp7;\n                    var var5 = temp8 & 0x1f;\n                \n                    if (!var5) {\n                        var temp9 = memory[0x40:0x60];\n                        return memory[temp9:temp9 + var4 - temp9];\n                    } else {\n                        var temp10 = var5;\n                        var temp11 = var4 - temp10;\n                        memory[temp11:temp11 + 0x20] = ~(0x0100 ** (0x20 - temp10) - 0x01) & memory[temp11:temp11 + 0x20];\n                        var temp12 = memory[0x40:0x60];\n                        return memory[temp12:temp12 + (temp11 + 0x20) - temp12];\n                    }\n                } else if (returnAddress0 == 0x253459e3) {\n                    var temp13 = memory[0x40:0x60];\n                    memory[temp13:temp13 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                    var temp14 = memory[0x40:0x60];\n                    return memory[temp14:temp14 + temp13 - temp14 + 0x20];\n                } else if (returnAddress0 == 0x4229616d) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var2 = 0x00;\n                    var temp15 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp15 & msg.sender != temp15 & storage[0x05]) {\n                        func_0573(var1, var2);\n                        stop();\n                    } else {\n                        var3 = var2 == storage[0x01];\n                    \n                        if (var3) {\n                            if (!var3) {\n                            label_0538:\n                                var temp16 = memory[0x40:0x60];\n                                var temp17 = var1 * (storage[0x01] / 0x64);\n                                var2 = temp17;\n                                memory[temp16:temp16 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(var2)(memory[temp16:temp16 + 0x00]);\n                                storage[0x01] = storage[0x01] - var2;\n                                func_0573(var1, var2);\n                                // Error: Could not resolve method call return address!\n                            } else {\n                            label_0169:\n                                goto label_0002;\n                            }\n                        } else if (var1 <= 0x64) { goto label_0538; }\n                        else { goto label_0169; }\n                    }\n                } else if (returnAddress0 == 0x57d4021b) {\n                    var0 = 0x0120;\n                    var1 = 0x00;\n                    var2 = 0x0de0b6b3a7640000;\n                    var3 = 0x06;\n                    var4 = storage[0x04];\n                \n                    if (var4 >= storage[var3]) { goto label_0002; }\n                \n                    var0 = nextPayoutWhenPyramidBalanceTotalsApproximately(var1, var2, var3, var4);\n                \n                label_0120:\n                    var temp18 = memory[0x40:0x60];\n                    memory[temp18:temp18 + 0x20] = var0;\n                    var temp19 = memory[0x40:0x60];\n                    return memory[temp19:temp19 + temp18 - temp19 + 0x20];\n                } else if (returnAddress0 == 0x686f2c90) {\n                    var0 = 0x03b4;\n                    var temp20 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp20 & msg.sender != temp20 & storage[0x05]) {\n                        func_03B6();\n                        stop();\n                    } else {\n                        func_01C9();\n                        stop();\n                    }\n                } else if (returnAddress0 == 0x6fbaaa1e) {\n                    var temp21 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp21 + 0x20;\n                    memory[temp21:temp21 + 0x20] = 0x00;\n                    var temp22 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp22 + 0x0140;\n                    memory[temp22:temp22 + 0x20] = 0x011f;\n                    memory[temp22 + 0x20:temp22 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                    var1 = temp22;\n                    var0 = storage[0x03];\n                    goto label_03B8;\n                } else if (returnAddress0 == 0x8a5fb3ca) {\n                    var temp23 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp23 + 0x20;\n                    memory[temp23:temp23 + 0x20] = 0x00;\n                    var temp24 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp24 + 0xc0;\n                    memory[temp24:temp24 + 0x20] = 0x84;\n                    memory[temp24 + 0x20:temp24 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                    var1 = temp24;\n                    var0 = storage[0x02];\n                    goto label_03B8;\n                } else if (returnAddress0 == 0x9dbc4f9b) {\n                    var0 = 0x042d;\n                    var1 = msg.data[0x04:0x24];\n                    var2 = 0x00;\n                    var3 = var2;\n                \n                    if (var1 > storage[0x06]) {\n                        var0, var1 = func_02C6(var1, var2, var3);\n                        var temp25 = memory[0x40:0x60];\n                        memory[temp25:temp25 + 0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                        var temp26 = temp25 + 0x20;\n                        memory[temp26:temp26 + 0x20] = var1;\n                        var temp27 = memory[0x40:0x60];\n                        return memory[temp27:temp27 + (temp26 + 0x20) - temp27];\n                    } else {\n                        var4 = 0x06;\n                        var5 = var1;\n                    \n                        if (var5 >= storage[var4]) { goto label_0002; }\n                    \n                        var temp28 = var4;\n                        memory[var3:var3 + 0x20] = temp28;\n                        var temp29 = var1;\n                        var2 = storage[temp29 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                        var4 = 0x0de0b6b3a7640000;\n                        var5 = temp28;\n                        var var6 = temp29;\n                    \n                        if (var6 >= storage[var5]) { goto label_0002; }\n                    \n                        var temp30 = memory[0x00:0x20];\n                        memory[0x00:0x20] = code[0x0999:0x09b9];\n                        var temp31 = memory[0x00:0x20];\n                        memory[0x00:0x20] = temp30;\n                        var3 = storage[temp31 + var1 * 0x02] / var4;\n                        var0, var1 = func_02C6(var1, var2, var3);\n                        // Error: Could not resolve method call return address!\n                    }\n                } else if (returnAddress0 == 0xa26dbf26) {\n                    var0 = storage[0x06];\n                    goto label_0120;\n                } else if (returnAddress0 == 0xa6f9dae1) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp32 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp32 & msg.sender != temp32 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_02F2(var1);\n                        stop();\n                    }\n                } else if (returnAddress0 == 0xb4022950) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp33 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp33 & msg.sender != temp33 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_0325(var1);\n                        stop();\n                    }\n                } else if (returnAddress0 == 0xced92670) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp34 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp34 & msg.sender != temp34 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_0363(var1);\n                        stop();\n                    }\n                } else if (returnAddress0 == 0xd11f13df) {\n                    var0 = storage[0x06] - storage[0x04];\n                    goto label_0120;\n                } else if (returnAddress0 == 0xfae14192) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp35 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (storage[0x05] & temp35 != temp35 & msg.sender) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_03A7(var1);\n                        stop();\n                    }\n                } else { goto label_00AE; }\n            }\n        }\n    }\n    \n    function func_02C6(var arg0, var arg1, var arg2) returns (var r0, var arg0) {\n        arg0 = arg2;\n        r0 = arg1;\n        return r0, arg0;\n    }\n    \n    function func_02F2(var arg0) {\n        storage[0x05] = arg0 | (storage[0x05] & ~(0x02 ** 0xa0 - 0x01));\n    }\n    \n    function func_0325(var arg0) {\n        var temp0 = arg0 * 0x0de0b6b3a7640000;\n        arg0 = temp0;\n    \n        if (arg0 <= storage[0x01]) {\n        label_04F7:\n        \n            if (storage[0x01] != 0x00) {\n                var temp1 = memory[0x40:0x60];\n                var temp2 = arg0;\n                memory[temp1:temp1 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(temp2)(memory[temp1:temp1 + 0x00]);\n                storage[0x01] = storage[0x01] - temp2;\n                return;\n            } else {\n            label_0002:\n                memory[0x40:0x60] = arg0;\n            \n                if (!msg.data.length) {\n                label_00AE:\n                    arg0 = 0x03b4;\n                    var var0 = 0x03b6;\n                    var var1 = 0x00;\n                \n                    if (msg.value >= 0x0de0b6b3a7640000) {\n                        func_0453(var1);\n                        func_03B6();\n                        stop();\n                    } else {\n                        func_00C7(var1);\n                        func_03B6();\n                        stop();\n                    }\n                } else {\n                    arg0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                \n                    if (arg0 == 0x09dfdc71) {\n                        var temp3 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp3 + 0x20;\n                        memory[temp3:temp3 + 0x20] = 0x00;\n                        var temp4 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp4 + 0x0100;\n                        memory[temp4:temp4 + 0x20] = 0xca;\n                        memory[temp4 + 0x20:temp4 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                        var1 = temp4;\n                        var0 = storage[0x00] / 0x0de0b6b3a7640000;\n                    \n                    label_03B8:\n                        var temp5 = memory[0x40:0x60];\n                        var var2 = temp5;\n                        memory[var2:var2 + 0x20] = var0;\n                        var temp6 = var2 + 0x20;\n                        var var3 = temp6;\n                        var temp7 = var3 + 0x20;\n                        memory[var3:var3 + 0x20] = temp7 - var2;\n                        var temp8 = var1;\n                        memory[temp7:temp7 + 0x20] = memory[temp8:temp8 + 0x20];\n                        var temp9 = temp7 + 0x20;\n                        var temp10 = memory[temp8:temp8 + 0x20];\n                        memory[temp9:temp9 + temp10] = address(0x04).call.gas((temp10 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp8 + 0x20:temp8 + 0x20 + temp10]);\n                        var var4 = temp10 + temp9;\n                        var var5 = temp10 & 0x1f;\n                    \n                        if (!var5) {\n                            var temp11 = memory[0x40:0x60];\n                            return memory[temp11:temp11 + var4 - temp11];\n                        } else {\n                            var temp12 = var5;\n                            var temp13 = var4 - temp12;\n                            memory[temp13:temp13 + 0x20] = ~(0x0100 ** (0x20 - temp12) - 0x01) & memory[temp13:temp13 + 0x20];\n                            var temp14 = memory[0x40:0x60];\n                            return memory[temp14:temp14 + (temp13 + 0x20) - temp14];\n                        }\n                    } else if (arg0 == 0x253459e3) {\n                        var temp15 = memory[0x40:0x60];\n                        memory[temp15:temp15 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                        var temp16 = memory[0x40:0x60];\n                        return memory[temp16:temp16 + temp15 - temp16 + 0x20];\n                    } else if (arg0 == 0x4229616d) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var2 = 0x00;\n                        var temp17 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp17 & msg.sender != temp17 & storage[0x05]) {\n                            func_0573(var1, var2);\n                            stop();\n                        } else {\n                            var3 = var2 == storage[0x01];\n                        \n                            if (var3) {\n                                if (!var3) {\n                                label_0538:\n                                    var temp18 = memory[0x40:0x60];\n                                    var temp19 = var1 * (storage[0x01] / 0x64);\n                                    var2 = temp19;\n                                    memory[temp18:temp18 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(var2)(memory[temp18:temp18 + 0x00]);\n                                    storage[0x01] = storage[0x01] - var2;\n                                    func_0573(var1, var2);\n                                    // Error: Could not resolve method call return address!\n                                } else {\n                                label_0169:\n                                    goto label_0002;\n                                }\n                            } else if (var1 <= 0x64) { goto label_0538; }\n                            else { goto label_0169; }\n                        }\n                    } else if (arg0 == 0x57d4021b) {\n                        var0 = 0x0120;\n                        var1 = 0x00;\n                        var2 = 0x0de0b6b3a7640000;\n                        var3 = 0x06;\n                        var4 = storage[0x04];\n                    \n                        if (var4 >= storage[var3]) { goto label_0002; }\n                    \n                        var0 = nextPayoutWhenPyramidBalanceTotalsApproximately(var1, var2, var3, var4);\n                    \n                    label_0120:\n                        var temp20 = memory[0x40:0x60];\n                        memory[temp20:temp20 + 0x20] = var0;\n                        var temp21 = memory[0x40:0x60];\n                        return memory[temp21:temp21 + temp20 - temp21 + 0x20];\n                    } else if (arg0 == 0x686f2c90) {\n                        var0 = 0x03b4;\n                        var temp22 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp22 & msg.sender != temp22 & storage[0x05]) {\n                            func_03B6();\n                            stop();\n                        } else {\n                            func_01C9();\n                            stop();\n                        }\n                    } else if (arg0 == 0x6fbaaa1e) {\n                        var temp23 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp23 + 0x20;\n                        memory[temp23:temp23 + 0x20] = 0x00;\n                        var temp24 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp24 + 0x0140;\n                        memory[temp24:temp24 + 0x20] = 0x011f;\n                        memory[temp24 + 0x20:temp24 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                        var1 = temp24;\n                        var0 = storage[0x03];\n                        goto label_03B8;\n                    } else if (arg0 == 0x8a5fb3ca) {\n                        var temp25 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp25 + 0x20;\n                        memory[temp25:temp25 + 0x20] = 0x00;\n                        var temp26 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp26 + 0xc0;\n                        memory[temp26:temp26 + 0x20] = 0x84;\n                        memory[temp26 + 0x20:temp26 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                        var1 = temp26;\n                        var0 = storage[0x02];\n                        goto label_03B8;\n                    } else if (arg0 == 0x9dbc4f9b) {\n                        var0 = 0x042d;\n                        var1 = msg.data[0x04:0x24];\n                        var2 = 0x00;\n                        var3 = var2;\n                    \n                        if (var1 > storage[0x06]) {\n                            var0, var1 = func_02C6(var1, var2, var3);\n                            var temp27 = memory[0x40:0x60];\n                            memory[temp27:temp27 + 0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                            var temp28 = temp27 + 0x20;\n                            memory[temp28:temp28 + 0x20] = var1;\n                            var temp29 = memory[0x40:0x60];\n                            return memory[temp29:temp29 + (temp28 + 0x20) - temp29];\n                        } else {\n                            var4 = 0x06;\n                            var5 = var1;\n                        \n                            if (var5 >= storage[var4]) { goto label_0002; }\n                        \n                            var temp30 = var4;\n                            memory[var3:var3 + 0x20] = temp30;\n                            var temp31 = var1;\n                            var2 = storage[temp31 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                            var4 = 0x0de0b6b3a7640000;\n                            var5 = temp30;\n                            var var6 = temp31;\n                        \n                            if (var6 >= storage[var5]) { goto label_0002; }\n                        \n                            var temp32 = memory[0x00:0x20];\n                            memory[0x00:0x20] = code[0x0999:0x09b9];\n                            var temp33 = memory[0x00:0x20];\n                            memory[0x00:0x20] = temp32;\n                            var3 = storage[temp33 + var1 * 0x02] / var4;\n                            var0, var1 = func_02C6(var1, var2, var3);\n                            // Error: Could not resolve method call return address!\n                        }\n                    } else if (arg0 == 0xa26dbf26) {\n                        var0 = storage[0x06];\n                        goto label_0120;\n                    } else if (arg0 == 0xa6f9dae1) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp34 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp34 & msg.sender != temp34 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_02F2(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xb4022950) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp35 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp35 & msg.sender != temp35 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_0325(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xced92670) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp36 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp36 & msg.sender != temp36 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_0363(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xd11f13df) {\n                        var0 = storage[0x06] - storage[0x04];\n                        goto label_0120;\n                    } else if (arg0 == 0xfae14192) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp37 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (storage[0x05] & temp37 != temp37 & msg.sender) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_03A7(var1);\n                            stop();\n                        }\n                    } else { goto label_00AE; }\n                }\n            }\n        } else {\n            var0 = 0x04f7;\n            func_01B0();\n            goto label_04F7;\n        }\n    }\n    \n    function func_0363(var arg0) {\n        var var0 = arg0 > 0x012c;\n    \n        if (var0) {\n            if (!var0) {\n            label_0577:\n                storage[0x03] = arg0;\n                return;\n            } else {\n            label_0378:\n            \n            label_0002:\n                memory[0x40:0x60] = arg0;\n            \n                if (!msg.data.length) {\n                label_00AE:\n                    arg0 = 0x03b4;\n                    var0 = 0x03b6;\n                    var var1 = 0x00;\n                \n                    if (msg.value >= 0x0de0b6b3a7640000) {\n                        func_0453(var1);\n                        func_03B6();\n                        stop();\n                    } else {\n                        func_00C7(var1);\n                        func_03B6();\n                        stop();\n                    }\n                } else {\n                    arg0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                \n                    if (arg0 == 0x09dfdc71) {\n                        var temp0 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp0 + 0x20;\n                        memory[temp0:temp0 + 0x20] = 0x00;\n                        var temp1 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp1 + 0x0100;\n                        memory[temp1:temp1 + 0x20] = 0xca;\n                        memory[temp1 + 0x20:temp1 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                        var1 = temp1;\n                        var0 = storage[0x00] / 0x0de0b6b3a7640000;\n                    \n                    label_03B8:\n                        var temp2 = memory[0x40:0x60];\n                        var var2 = temp2;\n                        memory[var2:var2 + 0x20] = var0;\n                        var temp3 = var2 + 0x20;\n                        var var3 = temp3;\n                        var temp4 = var3 + 0x20;\n                        memory[var3:var3 + 0x20] = temp4 - var2;\n                        var temp5 = var1;\n                        memory[temp4:temp4 + 0x20] = memory[temp5:temp5 + 0x20];\n                        var temp6 = temp4 + 0x20;\n                        var temp7 = memory[temp5:temp5 + 0x20];\n                        memory[temp6:temp6 + temp7] = address(0x04).call.gas((temp7 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp5 + 0x20:temp5 + 0x20 + temp7]);\n                        var var4 = temp7 + temp6;\n                        var var5 = temp7 & 0x1f;\n                    \n                        if (!var5) {\n                            var temp8 = memory[0x40:0x60];\n                            return memory[temp8:temp8 + var4 - temp8];\n                        } else {\n                            var temp9 = var5;\n                            var temp10 = var4 - temp9;\n                            memory[temp10:temp10 + 0x20] = ~(0x0100 ** (0x20 - temp9) - 0x01) & memory[temp10:temp10 + 0x20];\n                            var temp11 = memory[0x40:0x60];\n                            return memory[temp11:temp11 + (temp10 + 0x20) - temp11];\n                        }\n                    } else if (arg0 == 0x253459e3) {\n                        var temp12 = memory[0x40:0x60];\n                        memory[temp12:temp12 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                        var temp13 = memory[0x40:0x60];\n                        return memory[temp13:temp13 + temp12 - temp13 + 0x20];\n                    } else if (arg0 == 0x4229616d) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var2 = 0x00;\n                        var temp14 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp14 & msg.sender != temp14 & storage[0x05]) {\n                            func_0573(var1, var2);\n                            stop();\n                        } else {\n                            var3 = var2 == storage[0x01];\n                        \n                            if (var3) {\n                                if (!var3) {\n                                label_0538:\n                                    var temp15 = memory[0x40:0x60];\n                                    var temp16 = var1 * (storage[0x01] / 0x64);\n                                    var2 = temp16;\n                                    memory[temp15:temp15 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(var2)(memory[temp15:temp15 + 0x00]);\n                                    storage[0x01] = storage[0x01] - var2;\n                                    func_0573(var1, var2);\n                                    // Error: Could not resolve method call return address!\n                                } else {\n                                label_0169:\n                                    goto label_0002;\n                                }\n                            } else if (var1 <= 0x64) { goto label_0538; }\n                            else { goto label_0169; }\n                        }\n                    } else if (arg0 == 0x57d4021b) {\n                        var0 = 0x0120;\n                        var1 = 0x00;\n                        var2 = 0x0de0b6b3a7640000;\n                        var3 = 0x06;\n                        var4 = storage[0x04];\n                    \n                        if (var4 >= storage[var3]) { goto label_0002; }\n                    \n                        var0 = nextPayoutWhenPyramidBalanceTotalsApproximately(var1, var2, var3, var4);\n                    \n                    label_0120:\n                        var temp17 = memory[0x40:0x60];\n                        memory[temp17:temp17 + 0x20] = var0;\n                        var temp18 = memory[0x40:0x60];\n                        return memory[temp18:temp18 + temp17 - temp18 + 0x20];\n                    } else if (arg0 == 0x686f2c90) {\n                        var0 = 0x03b4;\n                        var temp19 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp19 & msg.sender != temp19 & storage[0x05]) {\n                            func_03B6();\n                            stop();\n                        } else {\n                            func_01C9();\n                            stop();\n                        }\n                    } else if (arg0 == 0x6fbaaa1e) {\n                        var temp20 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp20 + 0x20;\n                        memory[temp20:temp20 + 0x20] = 0x00;\n                        var temp21 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp21 + 0x0140;\n                        memory[temp21:temp21 + 0x20] = 0x011f;\n                        memory[temp21 + 0x20:temp21 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                        var1 = temp21;\n                        var0 = storage[0x03];\n                        goto label_03B8;\n                    } else if (arg0 == 0x8a5fb3ca) {\n                        var temp22 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp22 + 0x20;\n                        memory[temp22:temp22 + 0x20] = 0x00;\n                        var temp23 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp23 + 0xc0;\n                        memory[temp23:temp23 + 0x20] = 0x84;\n                        memory[temp23 + 0x20:temp23 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                        var1 = temp23;\n                        var0 = storage[0x02];\n                        goto label_03B8;\n                    } else if (arg0 == 0x9dbc4f9b) {\n                        var0 = 0x042d;\n                        var1 = msg.data[0x04:0x24];\n                        var2 = 0x00;\n                        var3 = var2;\n                    \n                        if (var1 > storage[0x06]) {\n                            var0, var1 = func_02C6(var1, var2, var3);\n                            var temp24 = memory[0x40:0x60];\n                            memory[temp24:temp24 + 0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                            var temp25 = temp24 + 0x20;\n                            memory[temp25:temp25 + 0x20] = var1;\n                            var temp26 = memory[0x40:0x60];\n                            return memory[temp26:temp26 + (temp25 + 0x20) - temp26];\n                        } else {\n                            var4 = 0x06;\n                            var5 = var1;\n                        \n                            if (var5 >= storage[var4]) { goto label_0002; }\n                        \n                            var temp27 = var4;\n                            memory[var3:var3 + 0x20] = temp27;\n                            var temp28 = var1;\n                            var2 = storage[temp28 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                            var4 = 0x0de0b6b3a7640000;\n                            var5 = temp27;\n                            var var6 = temp28;\n                        \n                            if (var6 >= storage[var5]) { goto label_0002; }\n                        \n                            var temp29 = memory[0x00:0x20];\n                            memory[0x00:0x20] = code[0x0999:0x09b9];\n                            var temp30 = memory[0x00:0x20];\n                            memory[0x00:0x20] = temp29;\n                            var3 = storage[temp30 + var1 * 0x02] / var4;\n                            var0, var1 = func_02C6(var1, var2, var3);\n                            // Error: Could not resolve method call return address!\n                        }\n                    } else if (arg0 == 0xa26dbf26) {\n                        var0 = storage[0x06];\n                        goto label_0120;\n                    } else if (arg0 == 0xa6f9dae1) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp31 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp31 & msg.sender != temp31 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_02F2(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xb4022950) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp32 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp32 & msg.sender != temp32 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_0325(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xced92670) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp33 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp33 & msg.sender != temp33 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_0363(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xd11f13df) {\n                        var0 = storage[0x06] - storage[0x04];\n                        goto label_0120;\n                    } else if (arg0 == 0xfae14192) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp34 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (storage[0x05] & temp34 != temp34 & msg.sender) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_03A7(var1);\n                            stop();\n                        }\n                    } else { goto label_00AE; }\n                }\n            }\n        } else if (arg0 >= 0x78) { goto label_0577; }\n        else { goto label_0378; }\n    }\n    \n    function func_03A7(var arg0) {\n        if (arg0 <= 0x0a) {\n            storage[0x02] = arg0;\n            return;\n        } else {\n        label_0002:\n            memory[0x40:0x60] = arg0;\n        \n            if (!msg.data.length) {\n            label_00AE:\n                arg0 = 0x03b4;\n                var var0 = 0x03b6;\n                var var1 = 0x00;\n            \n                if (msg.value >= 0x0de0b6b3a7640000) {\n                    func_0453(var1);\n                    func_03B6();\n                    stop();\n                } else {\n                    func_00C7(var1);\n                    func_03B6();\n                    stop();\n                }\n            } else {\n                arg0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n            \n                if (arg0 == 0x09dfdc71) {\n                    var temp0 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp0 + 0x20;\n                    memory[temp0:temp0 + 0x20] = 0x00;\n                    var temp1 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp1 + 0x0100;\n                    memory[temp1:temp1 + 0x20] = 0xca;\n                    memory[temp1 + 0x20:temp1 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                    var1 = temp1;\n                    var0 = storage[0x00] / 0x0de0b6b3a7640000;\n                \n                label_03B8:\n                    var temp2 = memory[0x40:0x60];\n                    var var2 = temp2;\n                    memory[var2:var2 + 0x20] = var0;\n                    var temp3 = var2 + 0x20;\n                    var var3 = temp3;\n                    var temp4 = var3 + 0x20;\n                    memory[var3:var3 + 0x20] = temp4 - var2;\n                    var temp5 = var1;\n                    memory[temp4:temp4 + 0x20] = memory[temp5:temp5 + 0x20];\n                    var temp6 = temp4 + 0x20;\n                    var temp7 = memory[temp5:temp5 + 0x20];\n                    memory[temp6:temp6 + temp7] = address(0x04).call.gas((temp7 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp5 + 0x20:temp5 + 0x20 + temp7]);\n                    var var4 = temp7 + temp6;\n                    var var5 = temp7 & 0x1f;\n                \n                    if (!var5) {\n                        var temp8 = memory[0x40:0x60];\n                        return memory[temp8:temp8 + var4 - temp8];\n                    } else {\n                        var temp9 = var5;\n                        var temp10 = var4 - temp9;\n                        memory[temp10:temp10 + 0x20] = ~(0x0100 ** (0x20 - temp9) - 0x01) & memory[temp10:temp10 + 0x20];\n                        var temp11 = memory[0x40:0x60];\n                        return memory[temp11:temp11 + (temp10 + 0x20) - temp11];\n                    }\n                } else if (arg0 == 0x253459e3) {\n                    var temp12 = memory[0x40:0x60];\n                    memory[temp12:temp12 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                    var temp13 = memory[0x40:0x60];\n                    return memory[temp13:temp13 + temp12 - temp13 + 0x20];\n                } else if (arg0 == 0x4229616d) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var2 = 0x00;\n                    var temp14 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp14 & msg.sender != temp14 & storage[0x05]) {\n                        func_0573(var1, var2);\n                        stop();\n                    } else {\n                        var3 = var2 == storage[0x01];\n                    \n                        if (var3) {\n                            if (!var3) {\n                            label_0538:\n                                var temp15 = memory[0x40:0x60];\n                                var temp16 = var1 * (storage[0x01] / 0x64);\n                                var2 = temp16;\n                                memory[temp15:temp15 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(var2)(memory[temp15:temp15 + 0x00]);\n                                storage[0x01] = storage[0x01] - var2;\n                                func_0573(var1, var2);\n                                // Error: Could not resolve method call return address!\n                            } else {\n                            label_0169:\n                                goto label_0002;\n                            }\n                        } else if (var1 <= 0x64) { goto label_0538; }\n                        else { goto label_0169; }\n                    }\n                } else if (arg0 == 0x57d4021b) {\n                    var0 = 0x0120;\n                    var1 = 0x00;\n                    var2 = 0x0de0b6b3a7640000;\n                    var3 = 0x06;\n                    var4 = storage[0x04];\n                \n                    if (var4 >= storage[var3]) { goto label_0002; }\n                \n                    var0 = nextPayoutWhenPyramidBalanceTotalsApproximately(var1, var2, var3, var4);\n                \n                label_0120:\n                    var temp17 = memory[0x40:0x60];\n                    memory[temp17:temp17 + 0x20] = var0;\n                    var temp18 = memory[0x40:0x60];\n                    return memory[temp18:temp18 + temp17 - temp18 + 0x20];\n                } else if (arg0 == 0x686f2c90) {\n                    var0 = 0x03b4;\n                    var temp19 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp19 & msg.sender != temp19 & storage[0x05]) {\n                        func_03B6();\n                        stop();\n                    } else {\n                        func_01C9();\n                        stop();\n                    }\n                } else if (arg0 == 0x6fbaaa1e) {\n                    var temp20 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp20 + 0x20;\n                    memory[temp20:temp20 + 0x20] = 0x00;\n                    var temp21 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp21 + 0x0140;\n                    memory[temp21:temp21 + 0x20] = 0x011f;\n                    memory[temp21 + 0x20:temp21 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                    var1 = temp21;\n                    var0 = storage[0x03];\n                    goto label_03B8;\n                } else if (arg0 == 0x8a5fb3ca) {\n                    var temp22 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp22 + 0x20;\n                    memory[temp22:temp22 + 0x20] = 0x00;\n                    var temp23 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp23 + 0xc0;\n                    memory[temp23:temp23 + 0x20] = 0x84;\n                    memory[temp23 + 0x20:temp23 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                    var1 = temp23;\n                    var0 = storage[0x02];\n                    goto label_03B8;\n                } else if (arg0 == 0x9dbc4f9b) {\n                    var0 = 0x042d;\n                    var1 = msg.data[0x04:0x24];\n                    var2 = 0x00;\n                    var3 = var2;\n                \n                    if (var1 > storage[0x06]) {\n                        var0, var1 = func_02C6(var1, var2, var3);\n                        var temp24 = memory[0x40:0x60];\n                        memory[temp24:temp24 + 0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                        var temp25 = temp24 + 0x20;\n                        memory[temp25:temp25 + 0x20] = var1;\n                        var temp26 = memory[0x40:0x60];\n                        return memory[temp26:temp26 + (temp25 + 0x20) - temp26];\n                    } else {\n                        var4 = 0x06;\n                        var5 = var1;\n                    \n                        if (var5 >= storage[var4]) { goto label_0002; }\n                    \n                        var temp27 = var4;\n                        memory[var3:var3 + 0x20] = temp27;\n                        var temp28 = var1;\n                        var2 = storage[temp28 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                        var4 = 0x0de0b6b3a7640000;\n                        var5 = temp27;\n                        var var6 = temp28;\n                    \n                        if (var6 >= storage[var5]) { goto label_0002; }\n                    \n                        var temp29 = memory[0x00:0x20];\n                        memory[0x00:0x20] = code[0x0999:0x09b9];\n                        var temp30 = memory[0x00:0x20];\n                        memory[0x00:0x20] = temp29;\n                        var3 = storage[temp30 + var1 * 0x02] / var4;\n                        var0, var1 = func_02C6(var1, var2, var3);\n                        // Error: Could not resolve method call return address!\n                    }\n                } else if (arg0 == 0xa26dbf26) {\n                    var0 = storage[0x06];\n                    goto label_0120;\n                } else if (arg0 == 0xa6f9dae1) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp31 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp31 & msg.sender != temp31 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_02F2(var1);\n                        stop();\n                    }\n                } else if (arg0 == 0xb4022950) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp32 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp32 & msg.sender != temp32 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_0325(var1);\n                        stop();\n                    }\n                } else if (arg0 == 0xced92670) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp33 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp33 & msg.sender != temp33 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_0363(var1);\n                        stop();\n                    }\n                } else if (arg0 == 0xd11f13df) {\n                    var0 = storage[0x06] - storage[0x04];\n                    goto label_0120;\n                } else if (arg0 == 0xfae14192) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp34 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (storage[0x05] & temp34 != temp34 & msg.sender) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_03A7(var1);\n                        stop();\n                    }\n                } else { goto label_00AE; }\n            }\n        }\n    }\n    \n    function func_03B6() {}\n    \n    function func_0453(var arg0) {\n        arg0 = storage[0x02];\n    \n        if (msg.value < 0x02b5e3af16b1880000) {\n            var var0 = 0x00cf;\n            var var1 = arg0;\n            var var2 = 0x00;\n            var var3 = 0x06;\n            var var4 = storage[var3];\n            var temp0 = var4 + 0x01;\n            var var5 = temp0;\n            var var6 = var3;\n            var var7 = var5;\n            var temp1 = storage[var6];\n            var var8 = temp1;\n            storage[var6] = var7;\n        \n            if (!var8 > var7) {\n                func_0581(var1, var2, var3, var4, var5, var6, var7, var8);\n                func_00CF(arg0);\n                // Error: Could not resolve method call return address!\n            } else {\n            label_048D:\n                memory[0x00:0x20] = var6;\n                var temp2 = keccak256(memory[0x00:0x20]);\n                var temp3 = temp2 + var8 * 0x02;\n                var8 = 0x0581;\n                var var10 = temp2 + var7 * 0x02;\n                var var9 = temp3;\n            \n                if (var9 <= var10) {\n                    var8 = func_05E5(var9, var10);\n                    func_0581(var1, var2, var3, var4, var5, var6, var7, var8);\n                    // Error: Could not resolve method call return address!\n                } else {\n                label_04B0:\n                    var temp4 = var10;\n                    storage[temp4] = storage[temp4] & ~(0x02 ** 0xa0 - 0x01);\n                    var10 = temp4 + 0x01;\n                    storage[var10] = 0x00;\n                \n                    if (var9 > var10) { goto label_04B0; }\n                \n                    var8 = func_05E5(var9, var10);\n                    // Error: Could not resolve method call return address!\n                }\n            }\n        } else {\n            var temp5 = arg0 / 0x02;\n            arg0 = temp5;\n            var0 = 0x00cf;\n            var1 = arg0;\n            var2 = 0x00;\n            var3 = 0x06;\n            var4 = storage[var3];\n            var temp6 = var4 + 0x01;\n            var5 = temp6;\n            var6 = var3;\n            var7 = var5;\n            var temp7 = storage[var6];\n            var8 = temp7;\n            storage[var6] = var7;\n        \n            if (!var8 <= var7) { goto label_048D; }\n        \n            func_0581(var1, var2, var3, var4, var5, var6, var7, var8);\n            func_00CF(arg0);\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function func_0573(var arg0, var arg1) {}\n    \n    function func_0581(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6, var arg7) {\n        memory[0x00:0x20] = arg2;\n        var temp0 = arg3 * 0x02 + keccak256(memory[0x00:0x20]);\n        var temp1 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp1 + 0x40;\n        var temp2 = msg.sender;\n        memory[temp1:temp1 + 0x20] = temp2;\n        var temp3 = (msg.value * storage[0x03]) / 0x64;\n        memory[temp1 + 0x20:temp1 + 0x20 + 0x20] = temp3;\n        storage[temp0] = (storage[temp0] & ~(0x02 ** 0xa0 - 0x01)) | temp2;\n        storage[temp0 + 0x01] = temp3;\n    \n        if (storage[0x06] == 0x0a) {\n            storage[0x03] = 0xc8;\n            goto label_05FA;\n        } else if (storage[0x06] != 0x19) {\n        label_05FA:\n            var temp4 = arg0;\n            var temp5 = msg.value;\n            storage[0x00] = storage[0x00] + (temp5 * (0x64 - temp4)) / 0x64;\n            storage[0x01] = (temp4 * temp5) / 0x64 + storage[0x01];\n            arg2 = 0x06;\n            arg3 = storage[0x04];\n        \n            if (arg3 >= storage[arg2]) {\n            label_0002:\n                memory[0x40:0x60] = arg3;\n            \n                if (!msg.data.length) {\n                label_00AE:\n                    arg3 = 0x03b4;\n                    arg4 = 0x03b6;\n                    arg5 = 0x00;\n                \n                    if (msg.value >= 0x0de0b6b3a7640000) {\n                        func_0453(arg5);\n                        func_03B6();\n                        stop();\n                    } else {\n                        func_00C7(arg5);\n                        func_03B6();\n                        stop();\n                    }\n                } else {\n                    arg3 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                \n                    if (arg3 == 0x09dfdc71) {\n                        var temp6 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp6 + 0x20;\n                        memory[temp6:temp6 + 0x20] = 0x00;\n                        var temp7 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp7 + 0x0100;\n                        memory[temp7:temp7 + 0x20] = 0xca;\n                        memory[temp7 + 0x20:temp7 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                        arg5 = temp7;\n                        arg4 = storage[0x00] / 0x0de0b6b3a7640000;\n                    \n                    label_03B8:\n                        var temp8 = memory[0x40:0x60];\n                        arg6 = temp8;\n                        memory[arg6:arg6 + 0x20] = arg4;\n                        var temp9 = arg6 + 0x20;\n                        arg7 = temp9;\n                        var temp10 = arg7 + 0x20;\n                        memory[arg7:arg7 + 0x20] = temp10 - arg6;\n                        var temp11 = arg5;\n                        memory[temp10:temp10 + 0x20] = memory[temp11:temp11 + 0x20];\n                        var temp12 = temp10 + 0x20;\n                        var temp13 = memory[temp11:temp11 + 0x20];\n                        memory[temp12:temp12 + temp13] = address(0x04).call.gas((temp13 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp11 + 0x20:temp11 + 0x20 + temp13]);\n                        var var0 = temp13 + temp12;\n                        var var1 = temp13 & 0x1f;\n                    \n                        if (!var1) {\n                            var temp14 = memory[0x40:0x60];\n                            return memory[temp14:temp14 + var0 - temp14];\n                        } else {\n                            var temp15 = var1;\n                            var temp16 = var0 - temp15;\n                            memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                            var temp17 = memory[0x40:0x60];\n                            return memory[temp17:temp17 + (temp16 + 0x20) - temp17];\n                        }\n                    } else if (arg3 == 0x253459e3) {\n                        var temp18 = memory[0x40:0x60];\n                        memory[temp18:temp18 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                        var temp19 = memory[0x40:0x60];\n                        return memory[temp19:temp19 + temp18 - temp19 + 0x20];\n                    } else if (arg3 == 0x4229616d) {\n                        arg4 = 0x03b4;\n                        arg5 = msg.data[0x04:0x24];\n                        arg6 = 0x00;\n                        var temp20 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp20 & msg.sender != temp20 & storage[0x05]) {\n                            func_0573(arg5, arg6);\n                            stop();\n                        } else {\n                            arg7 = arg6 == storage[0x01];\n                        \n                            if (arg7) {\n                                if (!arg7) {\n                                label_0538:\n                                    var temp21 = memory[0x40:0x60];\n                                    var temp22 = arg5 * (storage[0x01] / 0x64);\n                                    arg6 = temp22;\n                                    memory[temp21:temp21 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(arg6)(memory[temp21:temp21 + 0x00]);\n                                    storage[0x01] = storage[0x01] - arg6;\n                                    func_0573(arg5, arg6);\n                                    // Error: Could not resolve method call return address!\n                                } else {\n                                label_0169:\n                                    goto label_0002;\n                                }\n                            } else if (arg5 <= 0x64) { goto label_0538; }\n                            else { goto label_0169; }\n                        }\n                    } else if (arg3 == 0x57d4021b) {\n                        arg4 = 0x0120;\n                        arg5 = 0x00;\n                        arg6 = 0x0de0b6b3a7640000;\n                        arg7 = 0x06;\n                        var0 = storage[0x04];\n                    \n                        if (var0 >= storage[arg7]) { goto label_0002; }\n                    \n                        arg4 = nextPayoutWhenPyramidBalanceTotalsApproximately(arg5, arg6, arg7, var0);\n                    \n                    label_0120:\n                        var temp23 = memory[0x40:0x60];\n                        memory[temp23:temp23 + 0x20] = arg4;\n                        var temp24 = memory[0x40:0x60];\n                        return memory[temp24:temp24 + temp23 - temp24 + 0x20];\n                    } else if (arg3 == 0x686f2c90) {\n                        arg4 = 0x03b4;\n                        var temp25 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp25 & msg.sender != temp25 & storage[0x05]) {\n                            func_03B6();\n                            stop();\n                        } else {\n                            func_01C9();\n                            stop();\n                        }\n                    } else if (arg3 == 0x6fbaaa1e) {\n                        var temp26 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp26 + 0x20;\n                        memory[temp26:temp26 + 0x20] = 0x00;\n                        var temp27 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp27 + 0x0140;\n                        memory[temp27:temp27 + 0x20] = 0x011f;\n                        memory[temp27 + 0x20:temp27 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                        arg5 = temp27;\n                        arg4 = storage[0x03];\n                        goto label_03B8;\n                    } else if (arg3 == 0x8a5fb3ca) {\n                        var temp28 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp28 + 0x20;\n                        memory[temp28:temp28 + 0x20] = 0x00;\n                        var temp29 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp29 + 0xc0;\n                        memory[temp29:temp29 + 0x20] = 0x84;\n                        memory[temp29 + 0x20:temp29 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                        arg5 = temp29;\n                        arg4 = storage[0x02];\n                        goto label_03B8;\n                    } else if (arg3 == 0x9dbc4f9b) {\n                        arg4 = 0x042d;\n                        arg5 = msg.data[0x04:0x24];\n                        arg6 = 0x00;\n                        arg7 = arg6;\n                    \n                        if (arg5 > storage[0x06]) {\n                            arg4, arg5 = func_02C6(arg5, arg6, arg7);\n                            var temp30 = memory[0x40:0x60];\n                            memory[temp30:temp30 + 0x20] = arg4 & 0x02 ** 0xa0 - 0x01;\n                            var temp31 = temp30 + 0x20;\n                            memory[temp31:temp31 + 0x20] = arg5;\n                            var temp32 = memory[0x40:0x60];\n                            return memory[temp32:temp32 + (temp31 + 0x20) - temp32];\n                        } else {\n                            var0 = 0x06;\n                            var1 = arg5;\n                        \n                            if (var1 >= storage[var0]) { goto label_0002; }\n                        \n                            var temp33 = var0;\n                            memory[arg7:arg7 + 0x20] = temp33;\n                            var temp34 = arg5;\n                            arg6 = storage[temp34 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                            var0 = 0x0de0b6b3a7640000;\n                            var1 = temp33;\n                            var var2 = temp34;\n                        \n                            if (var2 >= storage[var1]) { goto label_0002; }\n                        \n                            var temp35 = memory[0x00:0x20];\n                            memory[0x00:0x20] = code[0x0999:0x09b9];\n                            var temp36 = memory[0x00:0x20];\n                            memory[0x00:0x20] = temp35;\n                            arg7 = storage[temp36 + arg5 * 0x02] / var0;\n                            arg4, arg5 = func_02C6(arg5, arg6, arg7);\n                            // Error: Could not resolve method call return address!\n                        }\n                    } else if (arg3 == 0xa26dbf26) {\n                        arg4 = storage[0x06];\n                        goto label_0120;\n                    } else if (arg3 == 0xa6f9dae1) {\n                        arg4 = 0x03b4;\n                        arg5 = msg.data[0x04:0x24];\n                        var temp37 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp37 & msg.sender != temp37 & storage[0x05]) {\n                            func_00CF(arg5);\n                            stop();\n                        } else {\n                            func_02F2(arg5);\n                            stop();\n                        }\n                    } else if (arg3 == 0xb4022950) {\n                        arg4 = 0x03b4;\n                        arg5 = msg.data[0x04:0x24];\n                        var temp38 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp38 & msg.sender != temp38 & storage[0x05]) {\n                            func_00CF(arg5);\n                            stop();\n                        } else {\n                            func_0325(arg5);\n                            stop();\n                        }\n                    } else if (arg3 == 0xced92670) {\n                        arg4 = 0x03b4;\n                        arg5 = msg.data[0x04:0x24];\n                        var temp39 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp39 & msg.sender != temp39 & storage[0x05]) {\n                            func_00CF(arg5);\n                            stop();\n                        } else {\n                            func_0363(arg5);\n                            stop();\n                        }\n                    } else if (arg3 == 0xd11f13df) {\n                        arg4 = storage[0x06] - storage[0x04];\n                        goto label_0120;\n                    } else if (arg3 == 0xfae14192) {\n                        arg4 = 0x03b4;\n                        arg5 = msg.data[0x04:0x24];\n                        var temp40 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (storage[0x05] & temp40 != temp40 & msg.sender) {\n                            func_00CF(arg5);\n                            stop();\n                        } else {\n                            func_03A7(arg5);\n                            stop();\n                        }\n                    } else { goto label_00AE; }\n                }\n            } else {\n            label_0631:\n                memory[0x00:0x20] = arg2;\n            \n                if (storage[0x00] <= storage[arg3 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f + 0x01]) {\n                    func_0573(arg0, arg1);\n                    // Error: Could not resolve method call return address!\n                } else {\n                    arg2 = 0x06;\n                    arg3 = storage[0x04];\n                \n                    if (arg3 >= storage[arg2]) { goto label_0002; }\n                \n                    var temp41 = memory[0x00:0x20];\n                    memory[0x00:0x20] = code[0x0999:0x09b9];\n                    var temp42 = memory[0x00:0x20];\n                    memory[0x00:0x20] = temp41;\n                    arg1 = storage[temp42 + arg3 * 0x02];\n                    arg3 = storage[0x04];\n                \n                    if (arg3 >= storage[arg2]) { goto label_0002; }\n                \n                    var temp43 = memory[0x40:0x60];\n                    memory[temp43:temp43 + 0x00] = address(storage[arg3 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(arg1)(memory[temp43:temp43 + 0x00]);\n                    arg2 = 0x06;\n                    arg3 = storage[0x04];\n                \n                    if (arg3 >= storage[arg2]) { goto label_0002; }\n                \n                    memory[0x00:0x20] = arg2;\n                    var temp44 = memory[0x00:0x20];\n                    memory[0x00:0x20] = code[0x0999:0x09b9];\n                    var temp45 = memory[0x00:0x20];\n                    memory[0x00:0x20] = temp44;\n                    storage[0x00] = storage[0x00] - storage[temp45 + arg3 * 0x02];\n                    storage[0x04] = storage[0x04] + 0x01;\n                    arg2 = 0x06;\n                    arg3 = storage[0x04];\n                \n                    if (arg3 >= storage[arg2]) { goto label_0002; }\n                    else { goto label_0631; }\n                }\n            }\n        } else {\n            storage[0x03] = 0x96;\n            var temp46 = arg0;\n            var temp47 = msg.value;\n            storage[0x00] = storage[0x00] + (temp47 * (0x64 - temp46)) / 0x64;\n            storage[0x01] = (temp46 * temp47) / 0x64 + storage[0x01];\n            arg2 = 0x06;\n            arg3 = storage[0x04];\n        \n            if (arg3 >= storage[arg2]) { goto label_0002; }\n            else { goto label_0631; }\n        }\n    }\n    \n    function func_05E5(var arg0, var arg1) returns (var r0) { return arg0; }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n    \n        if (!msg.data.length) {\n        label_00AE:\n            var var0 = 0x03b4;\n            var var1 = 0x03b6;\n            var var2 = 0x00;\n        \n            if (msg.value >= 0x0de0b6b3a7640000) {\n                func_0453(var2);\n                func_03B6();\n                stop();\n            } else {\n                func_00C7(var2);\n                func_03B6();\n                stop();\n            }\n        } else {\n        label_000B:\n            var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (var0 == 0x09dfdc71) {\n                // Dispatch table entry for currentPyramidBalanceApproximately()\n                var temp0 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp0 + 0x20;\n                memory[temp0:temp0 + 0x20] = 0x00;\n                var temp1 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp1 + 0x0100;\n                memory[temp1:temp1 + 0x20] = 0xca;\n                memory[temp1 + 0x20:temp1 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                var2 = temp1;\n                var1 = storage[0x00] / 0x0de0b6b3a7640000;\n            \n            label_03B8:\n                var temp2 = memory[0x40:0x60];\n                var var3 = temp2;\n                memory[var3:var3 + 0x20] = var1;\n                var temp3 = var3 + 0x20;\n                var var4 = temp3;\n                var temp4 = var4 + 0x20;\n                memory[var4:var4 + 0x20] = temp4 - var3;\n                var temp5 = var2;\n                memory[temp4:temp4 + 0x20] = memory[temp5:temp5 + 0x20];\n                var temp6 = temp4 + 0x20;\n                var temp7 = memory[temp5:temp5 + 0x20];\n                memory[temp6:temp6 + temp7] = address(0x04).call.gas((temp7 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp5 + 0x20:temp5 + 0x20 + temp7]);\n                var var5 = temp7 + temp6;\n                var var6 = temp7 & 0x1f;\n            \n                if (!var6) {\n                    var temp8 = memory[0x40:0x60];\n                    return memory[temp8:temp8 + var5 - temp8];\n                } else {\n                    var temp9 = var6;\n                    var temp10 = var5 - temp9;\n                    memory[temp10:temp10 + 0x20] = ~(0x0100 ** (0x20 - temp9) - 0x01) & memory[temp10:temp10 + 0x20];\n                    var temp11 = memory[0x40:0x60];\n                    return memory[temp11:temp11 + (temp10 + 0x20) - temp11];\n                }\n            } else if (var0 == 0x253459e3) {\n                // Dispatch table entry for feesSeperateFromBalanceApproximately()\n                var temp12 = memory[0x40:0x60];\n                memory[temp12:temp12 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                var temp13 = memory[0x40:0x60];\n                return memory[temp13:temp13 + temp12 - temp13 + 0x20];\n            } else if (var0 == 0x4229616d) {\n                // Dispatch table entry for collectPercentOfFees(uint256)\n                var1 = 0x03b4;\n                var2 = msg.data[0x04:0x24];\n                var3 = 0x00;\n                var temp14 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp14 & msg.sender != temp14 & storage[0x05]) {\n                    func_0573(var2, var3);\n                    stop();\n                } else {\n                    var4 = var3 == storage[0x01];\n                \n                    if (var4) {\n                        if (!var4) {\n                        label_0538:\n                            var temp15 = memory[0x40:0x60];\n                            var temp16 = var2 * (storage[0x01] / 0x64);\n                            var3 = temp16;\n                            memory[temp15:temp15 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(var3)(memory[temp15:temp15 + 0x00]);\n                            storage[0x01] = storage[0x01] - var3;\n                            func_0573(var2, var3);\n                            // Error: Could not resolve method call return address!\n                        } else {\n                        label_0169:\n                        \n                        label_0002:\n                            memory[0x40:0x60] = var3;\n                        \n                            if (!msg.data.length) { goto label_00AE; }\n                            else { goto label_000B; }\n                        }\n                    } else if (var2 <= 0x64) { goto label_0538; }\n                    else { goto label_0169; }\n                }\n            } else if (var0 == 0x57d4021b) {\n                // Dispatch table entry for nextPayoutWhenPyramidBalanceTotalsApproximately()\n                var1 = 0x0120;\n                var2 = 0x00;\n                var3 = 0x0de0b6b3a7640000;\n                var4 = 0x06;\n                var5 = storage[0x04];\n            \n                if (var5 >= storage[var4]) { goto label_0002; }\n            \n                var1 = nextPayoutWhenPyramidBalanceTotalsApproximately(var2, var3, var4, var5);\n            \n            label_0120:\n                var temp17 = memory[0x40:0x60];\n                memory[temp17:temp17 + 0x20] = var1;\n                var temp18 = memory[0x40:0x60];\n                return memory[temp18:temp18 + temp17 - temp18 + 0x20];\n            } else if (var0 == 0x686f2c90) {\n                // Dispatch table entry for collectAllFees()\n                var1 = 0x03b4;\n                var temp19 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp19 & msg.sender != temp19 & storage[0x05]) {\n                    func_03B6();\n                    stop();\n                } else {\n                    func_01C9();\n                    stop();\n                }\n            } else if (var0 == 0x6fbaaa1e) {\n                // Dispatch table entry for currentMultiplier()\n                var temp20 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp20 + 0x20;\n                memory[temp20:temp20 + 0x20] = 0x00;\n                var temp21 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp21 + 0x0140;\n                memory[temp21:temp21 + 0x20] = 0x011f;\n                memory[temp21 + 0x20:temp21 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                var2 = temp21;\n                var1 = storage[0x03];\n                goto label_03B8;\n            } else if (var0 == 0x8a5fb3ca) {\n                // Dispatch table entry for currentFeePercentage()\n                var temp22 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp22 + 0x20;\n                memory[temp22:temp22 + 0x20] = 0x00;\n                var temp23 = memory[0x40:0x60];\n                memory[0x40:0x60] = temp23 + 0xc0;\n                memory[temp23:temp23 + 0x20] = 0x84;\n                memory[temp23 + 0x20:temp23 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                var2 = temp23;\n                var1 = storage[0x02];\n                goto label_03B8;\n            } else if (var0 == 0x9dbc4f9b) {\n                // Dispatch table entry for participantDetails(uint256)\n                var1 = 0x042d;\n                var2 = msg.data[0x04:0x24];\n                var3 = 0x00;\n                var4 = var3;\n            \n                if (var2 > storage[0x06]) {\n                    var1, var2 = func_02C6(var2, var3, var4);\n                    var temp24 = memory[0x40:0x60];\n                    memory[temp24:temp24 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                    var temp25 = temp24 + 0x20;\n                    memory[temp25:temp25 + 0x20] = var2;\n                    var temp26 = memory[0x40:0x60];\n                    return memory[temp26:temp26 + (temp25 + 0x20) - temp26];\n                } else {\n                    var5 = 0x06;\n                    var6 = var2;\n                \n                    if (var6 >= storage[var5]) { goto label_0002; }\n                \n                    var temp27 = var5;\n                    memory[var4:var4 + 0x20] = temp27;\n                    var temp28 = var2;\n                    var3 = storage[temp28 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                    var5 = 0x0de0b6b3a7640000;\n                    var6 = temp27;\n                    var var7 = temp28;\n                \n                    if (var7 >= storage[var6]) { goto label_0002; }\n                \n                    var temp29 = memory[0x00:0x20];\n                    memory[0x00:0x20] = code[0x0999:0x09b9];\n                    var temp30 = memory[0x00:0x20];\n                    memory[0x00:0x20] = temp29;\n                    var4 = storage[temp30 + var2 * 0x02] / var5;\n                    var1, var2 = func_02C6(var2, var3, var4);\n                    // Error: Could not resolve method call return address!\n                }\n            } else if (var0 == 0xa26dbf26) {\n                // Dispatch table entry for totalParticipants()\n                var1 = storage[0x06];\n                goto label_0120;\n            } else if (var0 == 0xa6f9dae1) {\n                // Dispatch table entry for changeOwner(address)\n                var1 = 0x03b4;\n                var2 = msg.data[0x04:0x24];\n                var temp31 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp31 & msg.sender != temp31 & storage[0x05]) {\n                    func_00CF(var2);\n                    stop();\n                } else {\n                    func_02F2(var2);\n                    stop();\n                }\n            } else if (var0 == 0xb4022950) {\n                // Dispatch table entry for collectFeesInEther(uint256)\n                var1 = 0x03b4;\n                var2 = msg.data[0x04:0x24];\n                var temp32 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp32 & msg.sender != temp32 & storage[0x05]) {\n                    func_00CF(var2);\n                    stop();\n                } else {\n                    func_0325(var2);\n                    stop();\n                }\n            } else if (var0 == 0xced92670) {\n                // Dispatch table entry for changeMultiplier(uint256)\n                var1 = 0x03b4;\n                var2 = msg.data[0x04:0x24];\n                var temp33 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp33 & msg.sender != temp33 & storage[0x05]) {\n                    func_00CF(var2);\n                    stop();\n                } else {\n                    func_0363(var2);\n                    stop();\n                }\n            } else if (var0 == 0xd11f13df) {\n                // Dispatch table entry for numberOfParticipantsWaitingForPayout()\n                var1 = storage[0x06] - storage[0x04];\n                goto label_0120;\n            } else if (var0 == 0xfae14192) {\n                // Dispatch table entry for changeFeePercentage(uint256)\n                var1 = 0x03b4;\n                var2 = msg.data[0x04:0x24];\n                var temp34 = 0x02 ** 0xa0 - 0x01;\n            \n                if (storage[0x05] & temp34 != temp34 & msg.sender) {\n                    func_00CF(var2);\n                    stop();\n                } else {\n                    func_03A7(var2);\n                    stop();\n                }\n            } else { goto label_00AE; }\n        }\n    }\n    \n    function func_00C7(var arg0) {\n        storage[0x01] = msg.value + storage[0x01];\n    }\n    \n    function func_00CF(var arg0) {}\n    \n    function nextPayoutWhenPyramidBalanceTotalsApproximately(var arg0, var arg1, var arg2, var arg3) returns (var r0) {\n        memory[arg0:arg0 + 0x20] = arg2;\n        var temp0 = memory[0x00:0x20];\n        memory[0x00:0x20] = code[0x0999:0x09b9];\n        var temp1 = memory[0x00:0x20];\n        memory[0x00:0x20] = temp0;\n        return storage[temp1 + arg3 * 0x02] / arg1;\n    }\n    \n    function func_01B0() {\n        var temp0 = 0x02 ** 0xa0 - 0x01;\n    \n        if (temp0 & msg.sender != temp0 & storage[0x05]) {\n            func_03B6();\n            // Error: Could not resolve method call return address!\n        } else {\n            func_01C9();\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function func_01C9() {\n        if (storage[0x01] != 0x00) {\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(storage[0x01])(memory[temp0:temp0 + 0x00]);\n            storage[0x01] = 0x00;\n            return;\n        } else {\n        label_0002:\n            memory[0x40:0x60] = returnAddress0;\n        \n            if (!msg.data.length) {\n            label_00AE:\n                returnAddress0 = 0x03b4;\n                var var0 = 0x03b6;\n                var var1 = 0x00;\n            \n                if (msg.value >= 0x0de0b6b3a7640000) {\n                    func_0453(var1);\n                    func_03B6();\n                    stop();\n                } else {\n                    func_00C7(var1);\n                    func_03B6();\n                    stop();\n                }\n            } else {\n                returnAddress0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n            \n                if (returnAddress0 == 0x09dfdc71) {\n                    var temp1 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp1 + 0x20;\n                    memory[temp1:temp1 + 0x20] = 0x00;\n                    var temp2 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp2 + 0x0100;\n                    memory[temp2:temp2 + 0x20] = 0xca;\n                    memory[temp2 + 0x20:temp2 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                    var1 = temp2;\n                    var0 = storage[0x00] / 0x0de0b6b3a7640000;\n                \n                label_03B8:\n                    var temp3 = memory[0x40:0x60];\n                    var var2 = temp3;\n                    memory[var2:var2 + 0x20] = var0;\n                    var temp4 = var2 + 0x20;\n                    var var3 = temp4;\n                    var temp5 = var3 + 0x20;\n                    memory[var3:var3 + 0x20] = temp5 - var2;\n                    var temp6 = var1;\n                    memory[temp5:temp5 + 0x20] = memory[temp6:temp6 + 0x20];\n                    var temp7 = temp5 + 0x20;\n                    var temp8 = memory[temp6:temp6 + 0x20];\n                    memory[temp7:temp7 + temp8] = address(0x04).call.gas((temp8 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp6 + 0x20:temp6 + 0x20 + temp8]);\n                    var var4 = temp8 + temp7;\n                    var var5 = temp8 & 0x1f;\n                \n                    if (!var5) {\n                        var temp9 = memory[0x40:0x60];\n                        return memory[temp9:temp9 + var4 - temp9];\n                    } else {\n                        var temp10 = var5;\n                        var temp11 = var4 - temp10;\n                        memory[temp11:temp11 + 0x20] = ~(0x0100 ** (0x20 - temp10) - 0x01) & memory[temp11:temp11 + 0x20];\n                        var temp12 = memory[0x40:0x60];\n                        return memory[temp12:temp12 + (temp11 + 0x20) - temp12];\n                    }\n                } else if (returnAddress0 == 0x253459e3) {\n                    var temp13 = memory[0x40:0x60];\n                    memory[temp13:temp13 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                    var temp14 = memory[0x40:0x60];\n                    return memory[temp14:temp14 + temp13 - temp14 + 0x20];\n                } else if (returnAddress0 == 0x4229616d) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var2 = 0x00;\n                    var temp15 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp15 & msg.sender != temp15 & storage[0x05]) {\n                        func_0573(var1, var2);\n                        stop();\n                    } else {\n                        var3 = var2 == storage[0x01];\n                    \n                        if (var3) {\n                            if (!var3) {\n                            label_0538:\n                                var temp16 = memory[0x40:0x60];\n                                var temp17 = var1 * (storage[0x01] / 0x64);\n                                var2 = temp17;\n                                memory[temp16:temp16 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(var2)(memory[temp16:temp16 + 0x00]);\n                                storage[0x01] = storage[0x01] - var2;\n                                func_0573(var1, var2);\n                                // Error: Could not resolve method call return address!\n                            } else {\n                            label_0169:\n                                goto label_0002;\n                            }\n                        } else if (var1 <= 0x64) { goto label_0538; }\n                        else { goto label_0169; }\n                    }\n                } else if (returnAddress0 == 0x57d4021b) {\n                    var0 = 0x0120;\n                    var1 = 0x00;\n                    var2 = 0x0de0b6b3a7640000;\n                    var3 = 0x06;\n                    var4 = storage[0x04];\n                \n                    if (var4 >= storage[var3]) { goto label_0002; }\n                \n                    var0 = nextPayoutWhenPyramidBalanceTotalsApproximately(var1, var2, var3, var4);\n                \n                label_0120:\n                    var temp18 = memory[0x40:0x60];\n                    memory[temp18:temp18 + 0x20] = var0;\n                    var temp19 = memory[0x40:0x60];\n                    return memory[temp19:temp19 + temp18 - temp19 + 0x20];\n                } else if (returnAddress0 == 0x686f2c90) {\n                    var0 = 0x03b4;\n                    var temp20 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp20 & msg.sender != temp20 & storage[0x05]) {\n                        func_03B6();\n                        stop();\n                    } else {\n                        func_01C9();\n                        stop();\n                    }\n                } else if (returnAddress0 == 0x6fbaaa1e) {\n                    var temp21 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp21 + 0x20;\n                    memory[temp21:temp21 + 0x20] = 0x00;\n                    var temp22 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp22 + 0x0140;\n                    memory[temp22:temp22 + 0x20] = 0x011f;\n                    memory[temp22 + 0x20:temp22 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                    var1 = temp22;\n                    var0 = storage[0x03];\n                    goto label_03B8;\n                } else if (returnAddress0 == 0x8a5fb3ca) {\n                    var temp23 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp23 + 0x20;\n                    memory[temp23:temp23 + 0x20] = 0x00;\n                    var temp24 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp24 + 0xc0;\n                    memory[temp24:temp24 + 0x20] = 0x84;\n                    memory[temp24 + 0x20:temp24 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                    var1 = temp24;\n                    var0 = storage[0x02];\n                    goto label_03B8;\n                } else if (returnAddress0 == 0x9dbc4f9b) {\n                    var0 = 0x042d;\n                    var1 = msg.data[0x04:0x24];\n                    var2 = 0x00;\n                    var3 = var2;\n                \n                    if (var1 > storage[0x06]) {\n                        var0, var1 = func_02C6(var1, var2, var3);\n                        var temp25 = memory[0x40:0x60];\n                        memory[temp25:temp25 + 0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                        var temp26 = temp25 + 0x20;\n                        memory[temp26:temp26 + 0x20] = var1;\n                        var temp27 = memory[0x40:0x60];\n                        return memory[temp27:temp27 + (temp26 + 0x20) - temp27];\n                    } else {\n                        var4 = 0x06;\n                        var5 = var1;\n                    \n                        if (var5 >= storage[var4]) { goto label_0002; }\n                    \n                        var temp28 = var4;\n                        memory[var3:var3 + 0x20] = temp28;\n                        var temp29 = var1;\n                        var2 = storage[temp29 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                        var4 = 0x0de0b6b3a7640000;\n                        var5 = temp28;\n                        var var6 = temp29;\n                    \n                        if (var6 >= storage[var5]) { goto label_0002; }\n                    \n                        var temp30 = memory[0x00:0x20];\n                        memory[0x00:0x20] = code[0x0999:0x09b9];\n                        var temp31 = memory[0x00:0x20];\n                        memory[0x00:0x20] = temp30;\n                        var3 = storage[temp31 + var1 * 0x02] / var4;\n                        var0, var1 = func_02C6(var1, var2, var3);\n                        // Error: Could not resolve method call return address!\n                    }\n                } else if (returnAddress0 == 0xa26dbf26) {\n                    var0 = storage[0x06];\n                    goto label_0120;\n                } else if (returnAddress0 == 0xa6f9dae1) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp32 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp32 & msg.sender != temp32 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_02F2(var1);\n                        stop();\n                    }\n                } else if (returnAddress0 == 0xb4022950) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp33 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp33 & msg.sender != temp33 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_0325(var1);\n                        stop();\n                    }\n                } else if (returnAddress0 == 0xced92670) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp34 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp34 & msg.sender != temp34 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_0363(var1);\n                        stop();\n                    }\n                } else if (returnAddress0 == 0xd11f13df) {\n                    var0 = storage[0x06] - storage[0x04];\n                    goto label_0120;\n                } else if (returnAddress0 == 0xfae14192) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp35 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (storage[0x05] & temp35 != temp35 & msg.sender) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_03A7(var1);\n                        stop();\n                    }\n                } else { goto label_00AE; }\n            }\n        }\n    }\n    \n    function func_02C6(var arg0, var arg1, var arg2) returns (var r0, var arg0) {\n        arg0 = arg2;\n        r0 = arg1;\n        return r0, arg0;\n    }\n    \n    function func_02F2(var arg0) {\n        storage[0x05] = arg0 | (storage[0x05] & ~(0x02 ** 0xa0 - 0x01));\n    }\n    \n    function func_0325(var arg0) {\n        var temp0 = arg0 * 0x0de0b6b3a7640000;\n        arg0 = temp0;\n    \n        if (arg0 <= storage[0x01]) {\n        label_04F7:\n        \n            if (storage[0x01] != 0x00) {\n                var temp1 = memory[0x40:0x60];\n                var temp2 = arg0;\n                memory[temp1:temp1 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(temp2)(memory[temp1:temp1 + 0x00]);\n                storage[0x01] = storage[0x01] - temp2;\n                return;\n            } else {\n            label_0002:\n                memory[0x40:0x60] = arg0;\n            \n                if (!msg.data.length) {\n                label_00AE:\n                    arg0 = 0x03b4;\n                    var var0 = 0x03b6;\n                    var var1 = 0x00;\n                \n                    if (msg.value >= 0x0de0b6b3a7640000) {\n                        func_0453(var1);\n                        func_03B6();\n                        stop();\n                    } else {\n                        func_00C7(var1);\n                        func_03B6();\n                        stop();\n                    }\n                } else {\n                    arg0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                \n                    if (arg0 == 0x09dfdc71) {\n                        var temp3 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp3 + 0x20;\n                        memory[temp3:temp3 + 0x20] = 0x00;\n                        var temp4 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp4 + 0x0100;\n                        memory[temp4:temp4 + 0x20] = 0xca;\n                        memory[temp4 + 0x20:temp4 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                        var1 = temp4;\n                        var0 = storage[0x00] / 0x0de0b6b3a7640000;\n                    \n                    label_03B8:\n                        var temp5 = memory[0x40:0x60];\n                        var var2 = temp5;\n                        memory[var2:var2 + 0x20] = var0;\n                        var temp6 = var2 + 0x20;\n                        var var3 = temp6;\n                        var temp7 = var3 + 0x20;\n                        memory[var3:var3 + 0x20] = temp7 - var2;\n                        var temp8 = var1;\n                        memory[temp7:temp7 + 0x20] = memory[temp8:temp8 + 0x20];\n                        var temp9 = temp7 + 0x20;\n                        var temp10 = memory[temp8:temp8 + 0x20];\n                        memory[temp9:temp9 + temp10] = address(0x04).call.gas((temp10 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp8 + 0x20:temp8 + 0x20 + temp10]);\n                        var var4 = temp10 + temp9;\n                        var var5 = temp10 & 0x1f;\n                    \n                        if (!var5) {\n                            var temp11 = memory[0x40:0x60];\n                            return memory[temp11:temp11 + var4 - temp11];\n                        } else {\n                            var temp12 = var5;\n                            var temp13 = var4 - temp12;\n                            memory[temp13:temp13 + 0x20] = ~(0x0100 ** (0x20 - temp12) - 0x01) & memory[temp13:temp13 + 0x20];\n                            var temp14 = memory[0x40:0x60];\n                            return memory[temp14:temp14 + (temp13 + 0x20) - temp14];\n                        }\n                    } else if (arg0 == 0x253459e3) {\n                        var temp15 = memory[0x40:0x60];\n                        memory[temp15:temp15 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                        var temp16 = memory[0x40:0x60];\n                        return memory[temp16:temp16 + temp15 - temp16 + 0x20];\n                    } else if (arg0 == 0x4229616d) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var2 = 0x00;\n                        var temp17 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp17 & msg.sender != temp17 & storage[0x05]) {\n                            func_0573(var1, var2);\n                            stop();\n                        } else {\n                            var3 = var2 == storage[0x01];\n                        \n                            if (var3) {\n                                if (!var3) {\n                                label_0538:\n                                    var temp18 = memory[0x40:0x60];\n                                    var temp19 = var1 * (storage[0x01] / 0x64);\n                                    var2 = temp19;\n                                    memory[temp18:temp18 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(var2)(memory[temp18:temp18 + 0x00]);\n                                    storage[0x01] = storage[0x01] - var2;\n                                    func_0573(var1, var2);\n                                    // Error: Could not resolve method call return address!\n                                } else {\n                                label_0169:\n                                    goto label_0002;\n                                }\n                            } else if (var1 <= 0x64) { goto label_0538; }\n                            else { goto label_0169; }\n                        }\n                    } else if (arg0 == 0x57d4021b) {\n                        var0 = 0x0120;\n                        var1 = 0x00;\n                        var2 = 0x0de0b6b3a7640000;\n                        var3 = 0x06;\n                        var4 = storage[0x04];\n                    \n                        if (var4 >= storage[var3]) { goto label_0002; }\n                    \n                        var0 = nextPayoutWhenPyramidBalanceTotalsApproximately(var1, var2, var3, var4);\n                    \n                    label_0120:\n                        var temp20 = memory[0x40:0x60];\n                        memory[temp20:temp20 + 0x20] = var0;\n                        var temp21 = memory[0x40:0x60];\n                        return memory[temp21:temp21 + temp20 - temp21 + 0x20];\n                    } else if (arg0 == 0x686f2c90) {\n                        var0 = 0x03b4;\n                        var temp22 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp22 & msg.sender != temp22 & storage[0x05]) {\n                            func_03B6();\n                            stop();\n                        } else {\n                            func_01C9();\n                            stop();\n                        }\n                    } else if (arg0 == 0x6fbaaa1e) {\n                        var temp23 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp23 + 0x20;\n                        memory[temp23:temp23 + 0x20] = 0x00;\n                        var temp24 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp24 + 0x0140;\n                        memory[temp24:temp24 + 0x20] = 0x011f;\n                        memory[temp24 + 0x20:temp24 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                        var1 = temp24;\n                        var0 = storage[0x03];\n                        goto label_03B8;\n                    } else if (arg0 == 0x8a5fb3ca) {\n                        var temp25 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp25 + 0x20;\n                        memory[temp25:temp25 + 0x20] = 0x00;\n                        var temp26 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp26 + 0xc0;\n                        memory[temp26:temp26 + 0x20] = 0x84;\n                        memory[temp26 + 0x20:temp26 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                        var1 = temp26;\n                        var0 = storage[0x02];\n                        goto label_03B8;\n                    } else if (arg0 == 0x9dbc4f9b) {\n                        var0 = 0x042d;\n                        var1 = msg.data[0x04:0x24];\n                        var2 = 0x00;\n                        var3 = var2;\n                    \n                        if (var1 > storage[0x06]) {\n                            var0, var1 = func_02C6(var1, var2, var3);\n                            var temp27 = memory[0x40:0x60];\n                            memory[temp27:temp27 + 0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                            var temp28 = temp27 + 0x20;\n                            memory[temp28:temp28 + 0x20] = var1;\n                            var temp29 = memory[0x40:0x60];\n                            return memory[temp29:temp29 + (temp28 + 0x20) - temp29];\n                        } else {\n                            var4 = 0x06;\n                            var5 = var1;\n                        \n                            if (var5 >= storage[var4]) { goto label_0002; }\n                        \n                            var temp30 = var4;\n                            memory[var3:var3 + 0x20] = temp30;\n                            var temp31 = var1;\n                            var2 = storage[temp31 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                            var4 = 0x0de0b6b3a7640000;\n                            var5 = temp30;\n                            var var6 = temp31;\n                        \n                            if (var6 >= storage[var5]) { goto label_0002; }\n                        \n                            var temp32 = memory[0x00:0x20];\n                            memory[0x00:0x20] = code[0x0999:0x09b9];\n                            var temp33 = memory[0x00:0x20];\n                            memory[0x00:0x20] = temp32;\n                            var3 = storage[temp33 + var1 * 0x02] / var4;\n                            var0, var1 = func_02C6(var1, var2, var3);\n                            // Error: Could not resolve method call return address!\n                        }\n                    } else if (arg0 == 0xa26dbf26) {\n                        var0 = storage[0x06];\n                        goto label_0120;\n                    } else if (arg0 == 0xa6f9dae1) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp34 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp34 & msg.sender != temp34 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_02F2(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xb4022950) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp35 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp35 & msg.sender != temp35 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_0325(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xced92670) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp36 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp36 & msg.sender != temp36 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_0363(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xd11f13df) {\n                        var0 = storage[0x06] - storage[0x04];\n                        goto label_0120;\n                    } else if (arg0 == 0xfae14192) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp37 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (storage[0x05] & temp37 != temp37 & msg.sender) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_03A7(var1);\n                            stop();\n                        }\n                    } else { goto label_00AE; }\n                }\n            }\n        } else {\n            var0 = 0x04f7;\n            func_01B0();\n            goto label_04F7;\n        }\n    }\n    \n    function func_0363(var arg0) {\n        var var0 = arg0 > 0x012c;\n    \n        if (var0) {\n            if (!var0) {\n            label_0577:\n                storage[0x03] = arg0;\n                return;\n            } else {\n            label_0378:\n            \n            label_0002:\n                memory[0x40:0x60] = arg0;\n            \n                if (!msg.data.length) {\n                label_00AE:\n                    arg0 = 0x03b4;\n                    var0 = 0x03b6;\n                    var var1 = 0x00;\n                \n                    if (msg.value >= 0x0de0b6b3a7640000) {\n                        func_0453(var1);\n                        func_03B6();\n                        stop();\n                    } else {\n                        func_00C7(var1);\n                        func_03B6();\n                        stop();\n                    }\n                } else {\n                    arg0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                \n                    if (arg0 == 0x09dfdc71) {\n                        var temp0 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp0 + 0x20;\n                        memory[temp0:temp0 + 0x20] = 0x00;\n                        var temp1 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp1 + 0x0100;\n                        memory[temp1:temp1 + 0x20] = 0xca;\n                        memory[temp1 + 0x20:temp1 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                        var1 = temp1;\n                        var0 = storage[0x00] / 0x0de0b6b3a7640000;\n                    \n                    label_03B8:\n                        var temp2 = memory[0x40:0x60];\n                        var var2 = temp2;\n                        memory[var2:var2 + 0x20] = var0;\n                        var temp3 = var2 + 0x20;\n                        var var3 = temp3;\n                        var temp4 = var3 + 0x20;\n                        memory[var3:var3 + 0x20] = temp4 - var2;\n                        var temp5 = var1;\n                        memory[temp4:temp4 + 0x20] = memory[temp5:temp5 + 0x20];\n                        var temp6 = temp4 + 0x20;\n                        var temp7 = memory[temp5:temp5 + 0x20];\n                        memory[temp6:temp6 + temp7] = address(0x04).call.gas((temp7 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp5 + 0x20:temp5 + 0x20 + temp7]);\n                        var var4 = temp7 + temp6;\n                        var var5 = temp7 & 0x1f;\n                    \n                        if (!var5) {\n                            var temp8 = memory[0x40:0x60];\n                            return memory[temp8:temp8 + var4 - temp8];\n                        } else {\n                            var temp9 = var5;\n                            var temp10 = var4 - temp9;\n                            memory[temp10:temp10 + 0x20] = ~(0x0100 ** (0x20 - temp9) - 0x01) & memory[temp10:temp10 + 0x20];\n                            var temp11 = memory[0x40:0x60];\n                            return memory[temp11:temp11 + (temp10 + 0x20) - temp11];\n                        }\n                    } else if (arg0 == 0x253459e3) {\n                        var temp12 = memory[0x40:0x60];\n                        memory[temp12:temp12 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                        var temp13 = memory[0x40:0x60];\n                        return memory[temp13:temp13 + temp12 - temp13 + 0x20];\n                    } else if (arg0 == 0x4229616d) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var2 = 0x00;\n                        var temp14 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp14 & msg.sender != temp14 & storage[0x05]) {\n                            func_0573(var1, var2);\n                            stop();\n                        } else {\n                            var3 = var2 == storage[0x01];\n                        \n                            if (var3) {\n                                if (!var3) {\n                                label_0538:\n                                    var temp15 = memory[0x40:0x60];\n                                    var temp16 = var1 * (storage[0x01] / 0x64);\n                                    var2 = temp16;\n                                    memory[temp15:temp15 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(var2)(memory[temp15:temp15 + 0x00]);\n                                    storage[0x01] = storage[0x01] - var2;\n                                    func_0573(var1, var2);\n                                    // Error: Could not resolve method call return address!\n                                } else {\n                                label_0169:\n                                    goto label_0002;\n                                }\n                            } else if (var1 <= 0x64) { goto label_0538; }\n                            else { goto label_0169; }\n                        }\n                    } else if (arg0 == 0x57d4021b) {\n                        var0 = 0x0120;\n                        var1 = 0x00;\n                        var2 = 0x0de0b6b3a7640000;\n                        var3 = 0x06;\n                        var4 = storage[0x04];\n                    \n                        if (var4 >= storage[var3]) { goto label_0002; }\n                    \n                        var0 = nextPayoutWhenPyramidBalanceTotalsApproximately(var1, var2, var3, var4);\n                    \n                    label_0120:\n                        var temp17 = memory[0x40:0x60];\n                        memory[temp17:temp17 + 0x20] = var0;\n                        var temp18 = memory[0x40:0x60];\n                        return memory[temp18:temp18 + temp17 - temp18 + 0x20];\n                    } else if (arg0 == 0x686f2c90) {\n                        var0 = 0x03b4;\n                        var temp19 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp19 & msg.sender != temp19 & storage[0x05]) {\n                            func_03B6();\n                            stop();\n                        } else {\n                            func_01C9();\n                            stop();\n                        }\n                    } else if (arg0 == 0x6fbaaa1e) {\n                        var temp20 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp20 + 0x20;\n                        memory[temp20:temp20 + 0x20] = 0x00;\n                        var temp21 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp21 + 0x0140;\n                        memory[temp21:temp21 + 0x20] = 0x011f;\n                        memory[temp21 + 0x20:temp21 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                        var1 = temp21;\n                        var0 = storage[0x03];\n                        goto label_03B8;\n                    } else if (arg0 == 0x8a5fb3ca) {\n                        var temp22 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp22 + 0x20;\n                        memory[temp22:temp22 + 0x20] = 0x00;\n                        var temp23 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp23 + 0xc0;\n                        memory[temp23:temp23 + 0x20] = 0x84;\n                        memory[temp23 + 0x20:temp23 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                        var1 = temp23;\n                        var0 = storage[0x02];\n                        goto label_03B8;\n                    } else if (arg0 == 0x9dbc4f9b) {\n                        var0 = 0x042d;\n                        var1 = msg.data[0x04:0x24];\n                        var2 = 0x00;\n                        var3 = var2;\n                    \n                        if (var1 > storage[0x06]) {\n                            var0, var1 = func_02C6(var1, var2, var3);\n                            var temp24 = memory[0x40:0x60];\n                            memory[temp24:temp24 + 0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                            var temp25 = temp24 + 0x20;\n                            memory[temp25:temp25 + 0x20] = var1;\n                            var temp26 = memory[0x40:0x60];\n                            return memory[temp26:temp26 + (temp25 + 0x20) - temp26];\n                        } else {\n                            var4 = 0x06;\n                            var5 = var1;\n                        \n                            if (var5 >= storage[var4]) { goto label_0002; }\n                        \n                            var temp27 = var4;\n                            memory[var3:var3 + 0x20] = temp27;\n                            var temp28 = var1;\n                            var2 = storage[temp28 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                            var4 = 0x0de0b6b3a7640000;\n                            var5 = temp27;\n                            var var6 = temp28;\n                        \n                            if (var6 >= storage[var5]) { goto label_0002; }\n                        \n                            var temp29 = memory[0x00:0x20];\n                            memory[0x00:0x20] = code[0x0999:0x09b9];\n                            var temp30 = memory[0x00:0x20];\n                            memory[0x00:0x20] = temp29;\n                            var3 = storage[temp30 + var1 * 0x02] / var4;\n                            var0, var1 = func_02C6(var1, var2, var3);\n                            // Error: Could not resolve method call return address!\n                        }\n                    } else if (arg0 == 0xa26dbf26) {\n                        var0 = storage[0x06];\n                        goto label_0120;\n                    } else if (arg0 == 0xa6f9dae1) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp31 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp31 & msg.sender != temp31 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_02F2(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xb4022950) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp32 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp32 & msg.sender != temp32 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_0325(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xced92670) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp33 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp33 & msg.sender != temp33 & storage[0x05]) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_0363(var1);\n                            stop();\n                        }\n                    } else if (arg0 == 0xd11f13df) {\n                        var0 = storage[0x06] - storage[0x04];\n                        goto label_0120;\n                    } else if (arg0 == 0xfae14192) {\n                        var0 = 0x03b4;\n                        var1 = msg.data[0x04:0x24];\n                        var temp34 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (storage[0x05] & temp34 != temp34 & msg.sender) {\n                            func_00CF(var1);\n                            stop();\n                        } else {\n                            func_03A7(var1);\n                            stop();\n                        }\n                    } else { goto label_00AE; }\n                }\n            }\n        } else if (arg0 >= 0x78) { goto label_0577; }\n        else { goto label_0378; }\n    }\n    \n    function func_03A7(var arg0) {\n        if (arg0 <= 0x0a) {\n            storage[0x02] = arg0;\n            return;\n        } else {\n        label_0002:\n            memory[0x40:0x60] = arg0;\n        \n            if (!msg.data.length) {\n            label_00AE:\n                arg0 = 0x03b4;\n                var var0 = 0x03b6;\n                var var1 = 0x00;\n            \n                if (msg.value >= 0x0de0b6b3a7640000) {\n                    func_0453(var1);\n                    func_03B6();\n                    stop();\n                } else {\n                    func_00C7(var1);\n                    func_03B6();\n                    stop();\n                }\n            } else {\n                arg0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n            \n                if (arg0 == 0x09dfdc71) {\n                    var temp0 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp0 + 0x20;\n                    memory[temp0:temp0 + 0x20] = 0x00;\n                    var temp1 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp1 + 0x0100;\n                    memory[temp1:temp1 + 0x20] = 0xca;\n                    memory[temp1 + 0x20:temp1 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                    var1 = temp1;\n                    var0 = storage[0x00] / 0x0de0b6b3a7640000;\n                \n                label_03B8:\n                    var temp2 = memory[0x40:0x60];\n                    var var2 = temp2;\n                    memory[var2:var2 + 0x20] = var0;\n                    var temp3 = var2 + 0x20;\n                    var var3 = temp3;\n                    var temp4 = var3 + 0x20;\n                    memory[var3:var3 + 0x20] = temp4 - var2;\n                    var temp5 = var1;\n                    memory[temp4:temp4 + 0x20] = memory[temp5:temp5 + 0x20];\n                    var temp6 = temp4 + 0x20;\n                    var temp7 = memory[temp5:temp5 + 0x20];\n                    memory[temp6:temp6 + temp7] = address(0x04).call.gas((temp7 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp5 + 0x20:temp5 + 0x20 + temp7]);\n                    var var4 = temp7 + temp6;\n                    var var5 = temp7 & 0x1f;\n                \n                    if (!var5) {\n                        var temp8 = memory[0x40:0x60];\n                        return memory[temp8:temp8 + var4 - temp8];\n                    } else {\n                        var temp9 = var5;\n                        var temp10 = var4 - temp9;\n                        memory[temp10:temp10 + 0x20] = ~(0x0100 ** (0x20 - temp9) - 0x01) & memory[temp10:temp10 + 0x20];\n                        var temp11 = memory[0x40:0x60];\n                        return memory[temp11:temp11 + (temp10 + 0x20) - temp11];\n                    }\n                } else if (arg0 == 0x253459e3) {\n                    var temp12 = memory[0x40:0x60];\n                    memory[temp12:temp12 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                    var temp13 = memory[0x40:0x60];\n                    return memory[temp13:temp13 + temp12 - temp13 + 0x20];\n                } else if (arg0 == 0x4229616d) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var2 = 0x00;\n                    var temp14 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp14 & msg.sender != temp14 & storage[0x05]) {\n                        func_0573(var1, var2);\n                        stop();\n                    } else {\n                        var3 = var2 == storage[0x01];\n                    \n                        if (var3) {\n                            if (!var3) {\n                            label_0538:\n                                var temp15 = memory[0x40:0x60];\n                                var temp16 = var1 * (storage[0x01] / 0x64);\n                                var2 = temp16;\n                                memory[temp15:temp15 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(var2)(memory[temp15:temp15 + 0x00]);\n                                storage[0x01] = storage[0x01] - var2;\n                                func_0573(var1, var2);\n                                // Error: Could not resolve method call return address!\n                            } else {\n                            label_0169:\n                                goto label_0002;\n                            }\n                        } else if (var1 <= 0x64) { goto label_0538; }\n                        else { goto label_0169; }\n                    }\n                } else if (arg0 == 0x57d4021b) {\n                    var0 = 0x0120;\n                    var1 = 0x00;\n                    var2 = 0x0de0b6b3a7640000;\n                    var3 = 0x06;\n                    var4 = storage[0x04];\n                \n                    if (var4 >= storage[var3]) { goto label_0002; }\n                \n                    var0 = nextPayoutWhenPyramidBalanceTotalsApproximately(var1, var2, var3, var4);\n                \n                label_0120:\n                    var temp17 = memory[0x40:0x60];\n                    memory[temp17:temp17 + 0x20] = var0;\n                    var temp18 = memory[0x40:0x60];\n                    return memory[temp18:temp18 + temp17 - temp18 + 0x20];\n                } else if (arg0 == 0x686f2c90) {\n                    var0 = 0x03b4;\n                    var temp19 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp19 & msg.sender != temp19 & storage[0x05]) {\n                        func_03B6();\n                        stop();\n                    } else {\n                        func_01C9();\n                        stop();\n                    }\n                } else if (arg0 == 0x6fbaaa1e) {\n                    var temp20 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp20 + 0x20;\n                    memory[temp20:temp20 + 0x20] = 0x00;\n                    var temp21 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp21 + 0x0140;\n                    memory[temp21:temp21 + 0x20] = 0x011f;\n                    memory[temp21 + 0x20:temp21 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                    var1 = temp21;\n                    var0 = storage[0x03];\n                    goto label_03B8;\n                } else if (arg0 == 0x8a5fb3ca) {\n                    var temp22 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp22 + 0x20;\n                    memory[temp22:temp22 + 0x20] = 0x00;\n                    var temp23 = memory[0x40:0x60];\n                    memory[0x40:0x60] = temp23 + 0xc0;\n                    memory[temp23:temp23 + 0x20] = 0x84;\n                    memory[temp23 + 0x20:temp23 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                    var1 = temp23;\n                    var0 = storage[0x02];\n                    goto label_03B8;\n                } else if (arg0 == 0x9dbc4f9b) {\n                    var0 = 0x042d;\n                    var1 = msg.data[0x04:0x24];\n                    var2 = 0x00;\n                    var3 = var2;\n                \n                    if (var1 > storage[0x06]) {\n                        var0, var1 = func_02C6(var1, var2, var3);\n                        var temp24 = memory[0x40:0x60];\n                        memory[temp24:temp24 + 0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                        var temp25 = temp24 + 0x20;\n                        memory[temp25:temp25 + 0x20] = var1;\n                        var temp26 = memory[0x40:0x60];\n                        return memory[temp26:temp26 + (temp25 + 0x20) - temp26];\n                    } else {\n                        var4 = 0x06;\n                        var5 = var1;\n                    \n                        if (var5 >= storage[var4]) { goto label_0002; }\n                    \n                        var temp27 = var4;\n                        memory[var3:var3 + 0x20] = temp27;\n                        var temp28 = var1;\n                        var2 = storage[temp28 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                        var4 = 0x0de0b6b3a7640000;\n                        var5 = temp27;\n                        var var6 = temp28;\n                    \n                        if (var6 >= storage[var5]) { goto label_0002; }\n                    \n                        var temp29 = memory[0x00:0x20];\n                        memory[0x00:0x20] = code[0x0999:0x09b9];\n                        var temp30 = memory[0x00:0x20];\n                        memory[0x00:0x20] = temp29;\n                        var3 = storage[temp30 + var1 * 0x02] / var4;\n                        var0, var1 = func_02C6(var1, var2, var3);\n                        // Error: Could not resolve method call return address!\n                    }\n                } else if (arg0 == 0xa26dbf26) {\n                    var0 = storage[0x06];\n                    goto label_0120;\n                } else if (arg0 == 0xa6f9dae1) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp31 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp31 & msg.sender != temp31 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_02F2(var1);\n                        stop();\n                    }\n                } else if (arg0 == 0xb4022950) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp32 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp32 & msg.sender != temp32 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_0325(var1);\n                        stop();\n                    }\n                } else if (arg0 == 0xced92670) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp33 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (temp33 & msg.sender != temp33 & storage[0x05]) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_0363(var1);\n                        stop();\n                    }\n                } else if (arg0 == 0xd11f13df) {\n                    var0 = storage[0x06] - storage[0x04];\n                    goto label_0120;\n                } else if (arg0 == 0xfae14192) {\n                    var0 = 0x03b4;\n                    var1 = msg.data[0x04:0x24];\n                    var temp34 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (storage[0x05] & temp34 != temp34 & msg.sender) {\n                        func_00CF(var1);\n                        stop();\n                    } else {\n                        func_03A7(var1);\n                        stop();\n                    }\n                } else { goto label_00AE; }\n            }\n        }\n    }\n    \n    function func_03B6() {}\n    \n    function func_0453(var arg0) {\n        arg0 = storage[0x02];\n    \n        if (msg.value < 0x02b5e3af16b1880000) {\n            var var0 = 0x00cf;\n            var var1 = arg0;\n            var var2 = 0x00;\n            var var3 = 0x06;\n            var var4 = storage[var3];\n            var temp0 = var4 + 0x01;\n            var var5 = temp0;\n            var var6 = var3;\n            var var7 = var5;\n            var temp1 = storage[var6];\n            var var8 = temp1;\n            storage[var6] = var7;\n        \n            if (!var8 > var7) {\n                func_0581(var1, var2, var3, var4, var5, var6, var7, var8);\n                func_00CF(arg0);\n                // Error: Could not resolve method call return address!\n            } else {\n            label_048D:\n                memory[0x00:0x20] = var6;\n                var temp2 = keccak256(memory[0x00:0x20]);\n                var temp3 = temp2 + var8 * 0x02;\n                var8 = 0x0581;\n                var var10 = temp2 + var7 * 0x02;\n                var var9 = temp3;\n            \n                if (var9 <= var10) {\n                    var8 = func_05E5(var9, var10);\n                    func_0581(var1, var2, var3, var4, var5, var6, var7, var8);\n                    // Error: Could not resolve method call return address!\n                } else {\n                label_04B0:\n                    var temp4 = var10;\n                    storage[temp4] = storage[temp4] & ~(0x02 ** 0xa0 - 0x01);\n                    var10 = temp4 + 0x01;\n                    storage[var10] = 0x00;\n                \n                    if (var9 > var10) { goto label_04B0; }\n                \n                    var8 = func_05E5(var9, var10);\n                    // Error: Could not resolve method call return address!\n                }\n            }\n        } else {\n            var temp5 = arg0 / 0x02;\n            arg0 = temp5;\n            var0 = 0x00cf;\n            var1 = arg0;\n            var2 = 0x00;\n            var3 = 0x06;\n            var4 = storage[var3];\n            var temp6 = var4 + 0x01;\n            var5 = temp6;\n            var6 = var3;\n            var7 = var5;\n            var temp7 = storage[var6];\n            var8 = temp7;\n            storage[var6] = var7;\n        \n            if (!var8 <= var7) { goto label_048D; }\n        \n            func_0581(var1, var2, var3, var4, var5, var6, var7, var8);\n            func_00CF(arg0);\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function func_0573(var arg0, var arg1) {}\n    \n    function func_0581(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6, var arg7) {\n        memory[0x00:0x20] = arg2;\n        var temp0 = arg3 * 0x02 + keccak256(memory[0x00:0x20]);\n        var temp1 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp1 + 0x40;\n        var temp2 = msg.sender;\n        memory[temp1:temp1 + 0x20] = temp2;\n        var temp3 = (msg.value * storage[0x03]) / 0x64;\n        memory[temp1 + 0x20:temp1 + 0x20 + 0x20] = temp3;\n        storage[temp0] = (storage[temp0] & ~(0x02 ** 0xa0 - 0x01)) | temp2;\n        storage[temp0 + 0x01] = temp3;\n    \n        if (storage[0x06] == 0x0a) {\n            storage[0x03] = 0xc8;\n            goto label_05FA;\n        } else if (storage[0x06] != 0x19) {\n        label_05FA:\n            var temp4 = arg0;\n            var temp5 = msg.value;\n            storage[0x00] = storage[0x00] + (temp5 * (0x64 - temp4)) / 0x64;\n            storage[0x01] = (temp4 * temp5) / 0x64 + storage[0x01];\n            arg2 = 0x06;\n            arg3 = storage[0x04];\n        \n            if (arg3 >= storage[arg2]) {\n            label_0002:\n                memory[0x40:0x60] = arg3;\n            \n                if (!msg.data.length) {\n                label_00AE:\n                    arg3 = 0x03b4;\n                    arg4 = 0x03b6;\n                    arg5 = 0x00;\n                \n                    if (msg.value >= 0x0de0b6b3a7640000) {\n                        func_0453(arg5);\n                        func_03B6();\n                        stop();\n                    } else {\n                        func_00C7(arg5);\n                        func_03B6();\n                        stop();\n                    }\n                } else {\n                    arg3 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                \n                    if (arg3 == 0x09dfdc71) {\n                        var temp6 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp6 + 0x20;\n                        memory[temp6:temp6 + 0x20] = 0x00;\n                        var temp7 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp7 + 0x0100;\n                        memory[temp7:temp7 + 0x20] = 0xca;\n                        memory[temp7 + 0x20:temp7 + 0x20 + 0xca] = code[0x07b0:0x087a];\n                        arg5 = temp7;\n                        arg4 = storage[0x00] / 0x0de0b6b3a7640000;\n                    \n                    label_03B8:\n                        var temp8 = memory[0x40:0x60];\n                        arg6 = temp8;\n                        memory[arg6:arg6 + 0x20] = arg4;\n                        var temp9 = arg6 + 0x20;\n                        arg7 = temp9;\n                        var temp10 = arg7 + 0x20;\n                        memory[arg7:arg7 + 0x20] = temp10 - arg6;\n                        var temp11 = arg5;\n                        memory[temp10:temp10 + 0x20] = memory[temp11:temp11 + 0x20];\n                        var temp12 = temp10 + 0x20;\n                        var temp13 = memory[temp11:temp11 + 0x20];\n                        memory[temp12:temp12 + temp13] = address(0x04).call.gas((temp13 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp11 + 0x20:temp11 + 0x20 + temp13]);\n                        var var0 = temp13 + temp12;\n                        var var1 = temp13 & 0x1f;\n                    \n                        if (!var1) {\n                            var temp14 = memory[0x40:0x60];\n                            return memory[temp14:temp14 + var0 - temp14];\n                        } else {\n                            var temp15 = var1;\n                            var temp16 = var0 - temp15;\n                            memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                            var temp17 = memory[0x40:0x60];\n                            return memory[temp17:temp17 + (temp16 + 0x20) - temp17];\n                        }\n                    } else if (arg3 == 0x253459e3) {\n                        var temp18 = memory[0x40:0x60];\n                        memory[temp18:temp18 + 0x20] = storage[0x01] / 0x0de0b6b3a7640000;\n                        var temp19 = memory[0x40:0x60];\n                        return memory[temp19:temp19 + temp18 - temp19 + 0x20];\n                    } else if (arg3 == 0x4229616d) {\n                        arg4 = 0x03b4;\n                        arg5 = msg.data[0x04:0x24];\n                        arg6 = 0x00;\n                        var temp20 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp20 & msg.sender != temp20 & storage[0x05]) {\n                            func_0573(arg5, arg6);\n                            stop();\n                        } else {\n                            arg7 = arg6 == storage[0x01];\n                        \n                            if (arg7) {\n                                if (!arg7) {\n                                label_0538:\n                                    var temp21 = memory[0x40:0x60];\n                                    var temp22 = arg5 * (storage[0x01] / 0x64);\n                                    arg6 = temp22;\n                                    memory[temp21:temp21 + 0x00] = address(storage[0x05] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(arg6)(memory[temp21:temp21 + 0x00]);\n                                    storage[0x01] = storage[0x01] - arg6;\n                                    func_0573(arg5, arg6);\n                                    // Error: Could not resolve method call return address!\n                                } else {\n                                label_0169:\n                                    goto label_0002;\n                                }\n                            } else if (arg5 <= 0x64) { goto label_0538; }\n                            else { goto label_0169; }\n                        }\n                    } else if (arg3 == 0x57d4021b) {\n                        arg4 = 0x0120;\n                        arg5 = 0x00;\n                        arg6 = 0x0de0b6b3a7640000;\n                        arg7 = 0x06;\n                        var0 = storage[0x04];\n                    \n                        if (var0 >= storage[arg7]) { goto label_0002; }\n                    \n                        arg4 = nextPayoutWhenPyramidBalanceTotalsApproximately(arg5, arg6, arg7, var0);\n                    \n                    label_0120:\n                        var temp23 = memory[0x40:0x60];\n                        memory[temp23:temp23 + 0x20] = arg4;\n                        var temp24 = memory[0x40:0x60];\n                        return memory[temp24:temp24 + temp23 - temp24 + 0x20];\n                    } else if (arg3 == 0x686f2c90) {\n                        arg4 = 0x03b4;\n                        var temp25 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp25 & msg.sender != temp25 & storage[0x05]) {\n                            func_03B6();\n                            stop();\n                        } else {\n                            func_01C9();\n                            stop();\n                        }\n                    } else if (arg3 == 0x6fbaaa1e) {\n                        var temp26 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp26 + 0x20;\n                        memory[temp26:temp26 + 0x20] = 0x00;\n                        var temp27 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp27 + 0x0140;\n                        memory[temp27:temp27 + 0x20] = 0x011f;\n                        memory[temp27 + 0x20:temp27 + 0x20 + 0x011f] = code[0x087a:0x0999];\n                        arg5 = temp27;\n                        arg4 = storage[0x03];\n                        goto label_03B8;\n                    } else if (arg3 == 0x8a5fb3ca) {\n                        var temp28 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp28 + 0x20;\n                        memory[temp28:temp28 + 0x20] = 0x00;\n                        var temp29 = memory[0x40:0x60];\n                        memory[0x40:0x60] = temp29 + 0xc0;\n                        memory[temp29:temp29 + 0x20] = 0x84;\n                        memory[temp29 + 0x20:temp29 + 0x20 + 0x84] = code[0x072c:0x07b0];\n                        arg5 = temp29;\n                        arg4 = storage[0x02];\n                        goto label_03B8;\n                    } else if (arg3 == 0x9dbc4f9b) {\n                        arg4 = 0x042d;\n                        arg5 = msg.data[0x04:0x24];\n                        arg6 = 0x00;\n                        arg7 = arg6;\n                    \n                        if (arg5 > storage[0x06]) {\n                            arg4, arg5 = func_02C6(arg5, arg6, arg7);\n                            var temp30 = memory[0x40:0x60];\n                            memory[temp30:temp30 + 0x20] = arg4 & 0x02 ** 0xa0 - 0x01;\n                            var temp31 = temp30 + 0x20;\n                            memory[temp31:temp31 + 0x20] = arg5;\n                            var temp32 = memory[0x40:0x60];\n                            return memory[temp32:temp32 + (temp31 + 0x20) - temp32];\n                        } else {\n                            var0 = 0x06;\n                            var1 = arg5;\n                        \n                            if (var1 >= storage[var0]) { goto label_0002; }\n                        \n                            var temp33 = var0;\n                            memory[arg7:arg7 + 0x20] = temp33;\n                            var temp34 = arg5;\n                            arg6 = storage[temp34 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01;\n                            var0 = 0x0de0b6b3a7640000;\n                            var1 = temp33;\n                            var var2 = temp34;\n                        \n                            if (var2 >= storage[var1]) { goto label_0002; }\n                        \n                            var temp35 = memory[0x00:0x20];\n                            memory[0x00:0x20] = code[0x0999:0x09b9];\n                            var temp36 = memory[0x00:0x20];\n                            memory[0x00:0x20] = temp35;\n                            arg7 = storage[temp36 + arg5 * 0x02] / var0;\n                            arg4, arg5 = func_02C6(arg5, arg6, arg7);\n                            // Error: Could not resolve method call return address!\n                        }\n                    } else if (arg3 == 0xa26dbf26) {\n                        arg4 = storage[0x06];\n                        goto label_0120;\n                    } else if (arg3 == 0xa6f9dae1) {\n                        arg4 = 0x03b4;\n                        arg5 = msg.data[0x04:0x24];\n                        var temp37 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp37 & msg.sender != temp37 & storage[0x05]) {\n                            func_00CF(arg5);\n                            stop();\n                        } else {\n                            func_02F2(arg5);\n                            stop();\n                        }\n                    } else if (arg3 == 0xb4022950) {\n                        arg4 = 0x03b4;\n                        arg5 = msg.data[0x04:0x24];\n                        var temp38 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp38 & msg.sender != temp38 & storage[0x05]) {\n                            func_00CF(arg5);\n                            stop();\n                        } else {\n                            func_0325(arg5);\n                            stop();\n                        }\n                    } else if (arg3 == 0xced92670) {\n                        arg4 = 0x03b4;\n                        arg5 = msg.data[0x04:0x24];\n                        var temp39 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (temp39 & msg.sender != temp39 & storage[0x05]) {\n                            func_00CF(arg5);\n                            stop();\n                        } else {\n                            func_0363(arg5);\n                            stop();\n                        }\n                    } else if (arg3 == 0xd11f13df) {\n                        arg4 = storage[0x06] - storage[0x04];\n                        goto label_0120;\n                    } else if (arg3 == 0xfae14192) {\n                        arg4 = 0x03b4;\n                        arg5 = msg.data[0x04:0x24];\n                        var temp40 = 0x02 ** 0xa0 - 0x01;\n                    \n                        if (storage[0x05] & temp40 != temp40 & msg.sender) {\n                            func_00CF(arg5);\n                            stop();\n                        } else {\n                            func_03A7(arg5);\n                            stop();\n                        }\n                    } else { goto label_00AE; }\n                }\n            } else {\n            label_0631:\n                memory[0x00:0x20] = arg2;\n            \n                if (storage[0x00] <= storage[arg3 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f + 0x01]) {\n                    func_0573(arg0, arg1);\n                    // Error: Could not resolve method call return address!\n                } else {\n                    arg2 = 0x06;\n                    arg3 = storage[0x04];\n                \n                    if (arg3 >= storage[arg2]) { goto label_0002; }\n                \n                    var temp41 = memory[0x00:0x20];\n                    memory[0x00:0x20] = code[0x0999:0x09b9];\n                    var temp42 = memory[0x00:0x20];\n                    memory[0x00:0x20] = temp41;\n                    arg1 = storage[temp42 + arg3 * 0x02];\n                    arg3 = storage[0x04];\n                \n                    if (arg3 >= storage[arg2]) { goto label_0002; }\n                \n                    var temp43 = memory[0x40:0x60];\n                    memory[temp43:temp43 + 0x00] = address(storage[arg3 * 0x02 + 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(arg1)(memory[temp43:temp43 + 0x00]);\n                    arg2 = 0x06;\n                    arg3 = storage[0x04];\n                \n                    if (arg3 >= storage[arg2]) { goto label_0002; }\n                \n                    memory[0x00:0x20] = arg2;\n                    var temp44 = memory[0x00:0x20];\n                    memory[0x00:0x20] = code[0x0999:0x09b9];\n                    var temp45 = memory[0x00:0x20];\n                    memory[0x00:0x20] = temp44;\n                    storage[0x00] = storage[0x00] - storage[temp45 + arg3 * 0x02];\n                    storage[0x04] = storage[0x04] + 0x01;\n                    arg2 = 0x06;\n                    arg3 = storage[0x04];\n                \n                    if (arg3 >= storage[arg2]) { goto label_0002; }\n                    else { goto label_0631; }\n                }\n            }\n        } else {\n            storage[0x03] = 0x96;\n            var temp46 = arg0;\n            var temp47 = msg.value;\n            storage[0x00] = storage[0x00] + (temp47 * (0x64 - temp46)) / 0x64;\n            storage[0x01] = (temp46 * temp47) / 0x64 + storage[0x01];\n            arg2 = 0x06;\n            arg3 = storage[0x04];\n        \n            if (arg3 >= storage[arg2]) { goto label_0002; }\n            else { goto label_0631; }\n        }\n    }\n    \n    function func_05E5(var arg0, var arg1) returns (var r0) { return arg0; }\n}\n\n.",
	"status": "1",
	"time_cost": 40.69529962539673,
	"usage": {
		"completion_tokens": 415,
		"prompt_tokens": 20749,
		"total_tokens": 21164
	}
}