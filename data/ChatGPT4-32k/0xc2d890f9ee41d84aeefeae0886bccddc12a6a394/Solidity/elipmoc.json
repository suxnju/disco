{
	"address": "0xc2d890f9ee41d84aeefeae0886bccddc12a6a394",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is a Solidity contract based on the decompiled code:\n\n```Solidity\npragma solidity ^0.5.0;\n\ncontract YourContract {\n    uint256 private _fundingStartBlock;\n    uint256 private _blackFridayEndBlock;\n    uint256 private _fundingEndBlock;\n    uint256 private _totalSupply;\n    uint256 private stor_7;\n    mapping (address => uint256) private _balanceOf;\n    mapping (address => uint256) private owner_9;\n    uint256 private _totalMigrated;\n    bool private _fallback;\n    bool private _refundstate;\n    bool private _migratestate;\n    address private _hon1ninja;\n    address private _hon2backup;\n    address private _migrationMaster;\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Refund(address indexed _from, uint256 _value);\n\n    function fallback() public payable {\n        require(_fallback);\n    }\n\n    function name() public pure returns (string memory) {\n        return \"preICO for HumansOnly.Network on\";\n    }\n\n    function preICOregulations() public pure returns (string memory) {\n        return \"preICO regulations\";\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function decimals() public pure returns (uint8) {\n        return 18;\n    }\n\n    function Partial8Send() public {\n        require(msg.sender == _hon1ninja);\n        (bool success,) = _hon1ninja.call.value(address(this).balance - 1 ether)(\"\");\n        require(success);\n    }\n\n    function tokenCreationMinConversion() public pure returns (uint256) {\n        return 0x3635c9adc5dea00000;\n    }\n\n    function oneday() public pure returns (uint256) {\n        return 5138;\n    }\n\n    function migrate(uint256 _amount) public {\n        require(!_migratestate);\n        require(_amount != 0);\n        require(_amount <= _balanceOf[msg.sender]);\n        _balanceOf[msg.sender] -= _amount;\n        _totalSupply -= _amount;\n        _totalMigrated += _amount;\n    }\n\n    function onehour() public pure returns (uint256) {\n        return 218;\n    }\n\n    function hon1ninja() public view returns (address) {\n        return _hon1ninja;\n    }\n\n    function finalize() public {\n        require(msg.sender == _migrationMaster || msg.sender == _hon1ninja || msg.sender == _hon2backup);\n        _fallback = false;\n        (bool success,) = _hon1ninja.call.value(address(this).balance)(\"\");\n        require(success);\n        _totalSupply += (0xea1794bd9c8ab0fb000000 - _totalSupply);\n        _balanceOf[_migrationMaster] += (0xea1794bd9c8ab0fb000000 - _totalSupply);\n        emit Transfer(address(0), _migrationMaster, 0xea1794bd9c8ab0fb000000 - _totalSupply);\n    }\n\n    function blackFridayEndBlock() public view returns (uint256) {\n        return _blackFridayEndBlock;\n    }\n\n    function migrationMaster() public view returns (address) {\n        return _migrationMaster;\n    }\n\n    function refundTRA() public {\n        require(_refundstate);\n        require(owner_9[msg.sender] != 0);\n        owner_9[msg.sender] = 0;\n        _totalSupply -= _balanceOf[msg.sender];\n        emit Refund(msg.sender, owner_9[msg.sender] / 1000);\n        (bool success,) = msg.sender.call.value(owner_9[msg.sender] / 1000)(\"\");\n        require(success);\n    }\n\n    function tokenCreationCap() public pure returns (uint256) {\n        return 0xea1794bd9c8ab0fb000000;\n    }\n\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return _balanceOf[_owner];\n    }\n\n    function token18KstepCAP() public pure returns (uint256) {\n        return 0x13afd895d373b12b000000;\n    }\n\n    function turnmigrate() public {\n        require(msg.sender == _migrationMaster);\n        _migratestate = !_migratestate;\n    }\n\n    function fundingEndBlock() public view returns (uint256) {\n        return _fundingEndBlock;\n    }\n\n    function totalMigrated() public view returns (uint256) {\n        return _totalMigrated;\n    }\n\n    function symbol() public pure returns (string memory) {\n        return \"HON\";\n    }\n\n    function tokenXstepCAP() public pure returns (uint256) {\n        return 0x4cc32a1490afbd9000000;\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        require(msg.sender != _migrationMaster || block.number < _fundingEndBlock + 0x11978);\n        require(_balanceOf[msg.sender] >= _value && _value > 0);\n        _balanceOf[msg.sender] -= _value;\n        _balanceOf[_to] += _value;\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function Partial8Transfer() public {\n        (bool success,) = _hon1ninja.call.value(address(this).balance - 0x16345785d8a0000)(\"\");\n        require(success);\n    }\n\n    function oneweek() public pure returns (uint256) {\n        return 36028;\n    }\n\n    function hon2backup() public view returns (address) {\n        return _hon2backup;\n    }\n\n    function turnrefund() public {\n        require(msg.sender == _hon1ninja);\n        _refundstate = !_refundstate;\n    }\n\n    function funding() public view returns (bool) {\n        return _fallback;\n    }\n\n    function tokenCreationRate() public pure returns (uint256) {\n        return 1000;\n    }\n\n    function tokenSEEDcap() public pure returns (uint256) {\n        return 0xa968163f0a57b4000000;\n    }\n\n    function fundingStartBlock() public view returns (uint256) {\n        return _fundingStartBlock;\n    }\n\n    function refundstate() public view returns (bool) {\n        return _refundstate;\n    }\n\n    function migratestate() public view returns (bool) {\n        return _migratestate;\n    }\n\n    function createHONtokens(address _to) public payable {\n        // implement your logic here\n    }\n\n    function finalizebackup() public {\n        require(block.number > _fundingEndBlock + 10276);\n        _fallback = false;\n        (bool success,) = _hon2backup.call.value(address(this).balance)(\"\");\n        require(success);\n    }\n}\n```\nNote: This contract is a basic interpretation of the given decompiled code. It may not include the full functionality of the original contract. Be sure to check it thoroughly before using it.",
				"role": "assistant"
			}
		}
	],
	"created": 1701466157,
	"id": "chatcmpl-8R5MT1UpTRBRvqmWQ3BK4cNgk6hea",
	"input_format": "DecompiledCode",
	"ir": "// Decompiled at www.contract-library.com\n// 2021.08.23 21:07 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _fundingStartBlock; // STORAGE[0x0]\nuint256 _blackFridayEndBlock; // STORAGE[0x1]\nuint256 _fundingEndBlock; // STORAGE[0x2]\nuint256 _totalSupply; // STORAGE[0x6]\nuint256 stor_7; // STORAGE[0x7]\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x8]\nmapping (uint256 => [uint256]) owner_9; // STORAGE[0x9]\nuint256 _totalMigrated; // STORAGE[0xa]\nuint8 _fallback; // STORAGE[0x3] bytes 0 to 0\nuint8 _refundstate; // STORAGE[0x3] bytes 1 to 1\nuint8 _migratestate; // STORAGE[0x3] bytes 2 to 2\naddress _hon1ninja; // STORAGE[0x3] bytes 3 to 22\naddress _hon2backup; // STORAGE[0x4] bytes 0 to 19\naddress _migrationMaster; // STORAGE[0x5] bytes 0 to 19\n\n// Events\nTransfer(address, address, uint256);\nRefund(address, uint256);\n\nfunction fallback() public payable { \n    if (_fallback) {\n        0x900(msg.sender);\n    }\n}\n\nfunction name() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v0.data + v2] = MEM[v1.data + v2];\n        v2 = v2 + 32;\n    }\n    v4 = v5 = v1.length + v0.data;\n    if (4) {\n        MEM[v5 - 4] = 0x2045544800000000000000000000000000000000000000000000000000000000;\n    }\n    return v0, v6, 'preICO for HumansOnly.Network on';\n}\n\nfunction preICOregulations() public nonPayable { \n    MEM[MEM[64]] = 0;\n    v0 = new array[](v1.length);\n    MEM[MEM[64]] = 32;\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v0.data + v2] = MEM[v1.data + v2];\n        v2 = v2 + 32;\n    }\n    v4 = v5 = v1.length + v0.data;\n    if (31) {\n        MEM[v5 - 31] = ~0xff & MEM[v5 - 31];\n    }\n    return v0;\n}\n\nfunction totalSupply() public nonPayable { \n    return _totalSupply;\n}\n\nfunction decimals() public nonPayable { \n    return 18;\n}\n\nfunction Partial8Send() public nonPayable { \n    require(msg.sender == _hon1ninja);\n    v0 = _hon1ninja.call().value((address(this)).balance - 0xde0b6b3a7640000).gas(!((address(this)).balance - 0xde0b6b3a7640000) * 2300);\n}\n\nfunction tokenCreationMinConversion() public nonPayable { \n    return 0x3635c9adc5dea00000;\n}\n\nfunction oneday() public nonPayable { \n    return 5138;\n}\n\nfunction migrate(uint256 varg0) public nonPayable { \n    require(!_migratestate);\n    require(varg0 != 0);\n    require(varg0 <= _balanceOf[msg.sender]);\n    _balanceOf[msg.sender] = _balanceOf[msg.sender] - varg0;\n    _totalSupply = _totalSupply - varg0;\n    _totalMigrated = _totalMigrated + varg0;\n}\n\nfunction onehour() public nonPayable { \n    return 218;\n}\n\nfunction hon1ninja() public nonPayable { \n    return _hon1ninja;\n}\n\nfunction finalize() public nonPayable { \n    v0 = v1 = msg.sender != _migrationMaster;\n    if (msg.sender == _migrationMaster) {\n        v0 = v2 = msg.sender != _hon1ninja;\n    }\n    if (!v0) {\n        v0 = v3 = msg.sender != _hon2backup;\n    }\n    require(!v0);\n    _fallback = 0;\n    v4 = _hon1ninja.call().value((address(this)).balance).gas(!(address(this)).balance * 2300);\n    require(v4);\n    _totalSupply = _totalSupply + (0xea1794bd9c8ab0fb000000 - _totalSupply);\n    _balanceOf[_migrationMaster] = _balanceOf[_migrationMaster] + (0xea1794bd9c8ab0fb000000 - _totalSupply);\n    emit Transfer(0, _migrationMaster, 0xea1794bd9c8ab0fb000000 - _totalSupply);\n}\n\nfunction blackFridayEndBlock() public nonPayable { \n    return _blackFridayEndBlock;\n}\n\nfunction migrationMaster() public nonPayable { \n    return _migrationMaster;\n}\n\nfunction refundTRA() public nonPayable { \n    require(_refundstate);\n    require(owner_9[msg.sender] != 0);\n    owner_9[msg.sender] = 0;\n    _totalSupply = _totalSupply - _balanceOf[msg.sender];\n    emit Refund(msg.sender, owner_9[msg.sender] / 1000);\n    v0 = msg.sender.call().value(owner_9[msg.sender] / 1000).gas(!(owner_9[msg.sender] / 1000) * 2300);\n    require(v0);\n}\n\nfunction tokenCreationCap() public nonPayable { \n    return 0xea1794bd9c8ab0fb000000;\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction token18KstepCAP() public nonPayable { \n    return 0x13afd895d373b12b000000;\n}\n\nfunction turnmigrate() public nonPayable { \n    require(msg.sender == _migrationMaster);\n    _migratestate = !_migratestate;\n}\n\nfunction fundingEndBlock() public nonPayable { \n    return _fundingEndBlock;\n}\n\nfunction totalMigrated() public nonPayable { \n    return _totalMigrated;\n}\n\nfunction symbol() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v0.data + v2] = MEM[v1.data + v2];\n        v2 = v2 + 32;\n    }\n    if (3) {\n        MEM[v0.data] = 0x484f4e0000000000000000000000000000000000000000000000000000000000;\n    }\n    return v0;\n}\n\nfunction tokenXstepCAP() public nonPayable { \n    return 0x4cc32a1490afbd9000000;\n}\n\nfunction transfer(address varg0, uint256 varg1) public nonPayable { \n    v0 = v1 = msg.sender != _migrationMaster;\n    if (v1) {\n        v0 = block.number < _fundingEndBlock + 0x11978;\n    }\n    require(!v0);\n    v2 = v3 = _balanceOf[msg.sender] >= varg1;\n    if (v3) {\n        v2 = varg1 > 0;\n    }\n    if (!v2) {\n        v4 = v5 = 0;\n    } else {\n        _balanceOf[msg.sender] = _balanceOf[msg.sender] - varg1;\n        _balanceOf[varg0] = _balanceOf[varg0] + varg1;\n        emit Transfer(msg.sender, varg0, varg1);\n        v4 = 1;\n    }\n    return v4;\n}\n\nfunction Partial8Transfer() public nonPayable { \n    v0 = _hon1ninja.call().value((address(this)).balance - 0x16345785d8a0000).gas(!((address(this)).balance - 0x16345785d8a0000) * 2300);\n    require(v0);\n}\n\nfunction oneweek() public nonPayable { \n    return 36028;\n}\n\nfunction hon2backup() public nonPayable { \n    return _hon2backup;\n}\n\nfunction turnrefund() public nonPayable { \n    require(msg.sender == _hon1ninja);\n    _refundstate = !_refundstate;\n}\n\nfunction funding() public nonPayable { \n    return _fallback;\n}\n\nfunction tokenCreationRate() public nonPayable { \n    return 1000;\n}\n\nfunction tokenSEEDcap() public nonPayable { \n    return 0xa968163f0a57b4000000;\n}\n\nfunction fundingStartBlock() public nonPayable { \n    return _fundingStartBlock;\n}\n\nfunction refundstate() public nonPayable { \n    return _refundstate;\n}\n\nfunction migratestate() public nonPayable { \n    return _migratestate;\n}\n\nfunction createHONtokens(address varg0) public payable { \n    0x900(varg0);\n}\n\nfunction finalizebackup() public nonPayable { \n    require(block.number > _fundingEndBlock + 10276);\n    _fallback = 0;\n    v0 = _hon2backup.call().value((address(this)).balance).gas(!(address(this)).balance * 2300);\n    require(v0);\n}\n\nfunction 0x900(uint256 varg0) private { \n    require(_fallback);\n    require(block.number >= _fundingStartBlock);\n    require(block.number <= _fundingEndBlock);\n    require(msg.value != 0);\n    require(msg.value <= (0xea1794bd9c8ab0fb000000 - _totalSupply) / 1000);\n    stor_7 = 1000;\n    if (_totalSupply < 0xa968163f0a57b4000000) {\n        stor_7 = 1800;\n    }\n    if (_totalSupply > 0x4cc32a1490afbd9000000) {\n        stor_7 = 750;\n    }\n    if (_totalSupply > 0x13afd895d373b12b000000) {\n        stor_7 = 750;\n    }\n    if (block.number < _blackFridayEndBlock) {\n        stor_7 = stor_7 * 3;\n    }\n    _totalSupply = _totalSupply + msg.value * stor_7;\n    v0 = address(varg0);\n    _balanceOf[v0] = _balanceOf[v0] + msg.value * stor_7;\n    v1 = address(varg0);\n    owner_9[v1] = owner_9[v1] + msg.value * 1000;\n    emit Transfer(0, address(varg0), msg.value * stor_7);\n    _totalSupply = _totalSupply + msg.value * stor_7 * 18 / 100;\n    _balanceOf[_migrationMaster] = _balanceOf[_migrationMaster] + msg.value * stor_7 * 18 / 100;\n    emit Transfer(0, _migrationMaster, msg.value * stor_7 * 18 / 100);\n    return ;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length >= 4) {\n        if (0x6fdde03 == function_selector) {\n            name();\n        } else if (0x131be36c == function_selector) {\n            preICOregulations();\n        } else if (0x18160ddd == function_selector) {\n            totalSupply();\n        } else if (0x313ce567 == function_selector) {\n            decimals();\n        } else if (0x3667551c == function_selector) {\n            Partial8Send();\n        } else if (0x37d35507 == function_selector) {\n            tokenCreationMinConversion();\n        } else if (0x41434351 == function_selector) {\n            oneday();\n        } else if (0x454b0608 == function_selector) {\n            migrate(uint256);\n        } else if (0x483d8b77 == function_selector) {\n            onehour();\n        } else if (0x49fa84ef == function_selector) {\n            hon1ninja();\n        } else if (0x4bb278f3 == function_selector) {\n            finalize();\n        } else if (0x4c53adb0 == function_selector) {\n            blackFridayEndBlock();\n        } else if (0x676d2e62 == function_selector) {\n            migrationMaster();\n        } else if (0x6f766f20 == function_selector) {\n            refundTRA();\n        } else if (0x6f7920fd == function_selector) {\n            tokenCreationCap();\n        } else if (0x70a08231 == function_selector) {\n            balanceOf(address);\n        } else if (0x8026efaa == function_selector) {\n            token18KstepCAP();\n        } else if (0x8e49a2c2 == function_selector) {\n            turnmigrate();\n        } else if (0x91b43d13 == function_selector) {\n            fundingEndBlock();\n        } else if (0x95a0f5eb == function_selector) {\n            totalMigrated();\n        } else if (0x95d89b41 == function_selector) {\n            symbol();\n        } else if (0xa55c974f == function_selector) {\n            tokenXstepCAP();\n        } else if (0xa9059cbb == function_selector) {\n            transfer(address,uint256);\n        } else if (0xbe154a18 == function_selector) {\n            Partial8Transfer();\n        } else if (0xbf5c844b == function_selector) {\n            oneweek();\n        } else if (0xc005dc7b == function_selector) {\n            hon2backup();\n        } else if (0xcaecc5aa == function_selector) {\n            turnrefund();\n        } else if (0xcb4c86b7 == function_selector) {\n            funding();\n        } else if (0xcf8d652c == function_selector) {\n            tokenCreationRate();\n        } else if (0xd4b2931c == function_selector) {\n            tokenSEEDcap();\n        } else if (0xd648a647 == function_selector) {\n            fundingStartBlock();\n        } else if (0xdcabf93f == function_selector) {\n            refundstate();\n        } else if (0xea16cee5 == function_selector) {\n            migratestate();\n        } else if (0xeab5cd84 == function_selector) {\n            createHONtokens(address);\n        } else if (0xf559417c == function_selector) {\n            finalizebackup();\n        }\n    }\n    fallback();\n}\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.23 21:07 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _fundingStartBlock; // STORAGE[0x0]\nuint256 _blackFridayEndBlock; // STORAGE[0x1]\nuint256 _fundingEndBlock; // STORAGE[0x2]\nuint256 _totalSupply; // STORAGE[0x6]\nuint256 stor_7; // STORAGE[0x7]\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x8]\nmapping (uint256 => [uint256]) owner_9; // STORAGE[0x9]\nuint256 _totalMigrated; // STORAGE[0xa]\nuint8 _fallback; // STORAGE[0x3] bytes 0 to 0\nuint8 _refundstate; // STORAGE[0x3] bytes 1 to 1\nuint8 _migratestate; // STORAGE[0x3] bytes 2 to 2\naddress _hon1ninja; // STORAGE[0x3] bytes 3 to 22\naddress _hon2backup; // STORAGE[0x4] bytes 0 to 19\naddress _migrationMaster; // STORAGE[0x5] bytes 0 to 19\n\n// Events\nTransfer(address, address, uint256);\nRefund(address, uint256);\n\nfunction fallback() public payable { \n    if (_fallback) {\n        0x900(msg.sender);\n    }\n}\n\nfunction name() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v0.data + v2] = MEM[v1.data + v2];\n        v2 = v2 + 32;\n    }\n    v4 = v5 = v1.length + v0.data;\n    if (4) {\n        MEM[v5 - 4] = 0x2045544800000000000000000000000000000000000000000000000000000000;\n    }\n    return v0, v6, 'preICO for HumansOnly.Network on';\n}\n\nfunction preICOregulations() public nonPayable { \n    MEM[MEM[64]] = 0;\n    v0 = new array[](v1.length);\n    MEM[MEM[64]] = 32;\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v0.data + v2] = MEM[v1.data + v2];\n        v2 = v2 + 32;\n    }\n    v4 = v5 = v1.length + v0.data;\n    if (31) {\n        MEM[v5 - 31] = ~0xff & MEM[v5 - 31];\n    }\n    return v0;\n}\n\nfunction totalSupply() public nonPayable { \n    return _totalSupply;\n}\n\nfunction decimals() public nonPayable { \n    return 18;\n}\n\nfunction Partial8Send() public nonPayable { \n    require(msg.sender == _hon1ninja);\n    v0 = _hon1ninja.call().value((address(this)).balance - 0xde0b6b3a7640000).gas(!((address(this)).balance - 0xde0b6b3a7640000) * 2300);\n}\n\nfunction tokenCreationMinConversion() public nonPayable { \n    return 0x3635c9adc5dea00000;\n}\n\nfunction oneday() public nonPayable { \n    return 5138;\n}\n\nfunction migrate(uint256 varg0) public nonPayable { \n    require(!_migratestate);\n    require(varg0 != 0);\n    require(varg0 <= _balanceOf[msg.sender]);\n    _balanceOf[msg.sender] = _balanceOf[msg.sender] - varg0;\n    _totalSupply = _totalSupply - varg0;\n    _totalMigrated = _totalMigrated + varg0;\n}\n\nfunction onehour() public nonPayable { \n    return 218;\n}\n\nfunction hon1ninja() public nonPayable { \n    return _hon1ninja;\n}\n\nfunction finalize() public nonPayable { \n    v0 = v1 = msg.sender != _migrationMaster;\n    if (msg.sender == _migrationMaster) {\n        v0 = v2 = msg.sender != _hon1ninja;\n    }\n    if (!v0) {\n        v0 = v3 = msg.sender != _hon2backup;\n    }\n    require(!v0);\n    _fallback = 0;\n    v4 = _hon1ninja.call().value((address(this)).balance).gas(!(address(this)).balance * 2300);\n    require(v4);\n    _totalSupply = _totalSupply + (0xea1794bd9c8ab0fb000000 - _totalSupply);\n    _balanceOf[_migrationMaster] = _balanceOf[_migrationMaster] + (0xea1794bd9c8ab0fb000000 - _totalSupply);\n    emit Transfer(0, _migrationMaster, 0xea1794bd9c8ab0fb000000 - _totalSupply);\n}\n\nfunction blackFridayEndBlock() public nonPayable { \n    return _blackFridayEndBlock;\n}\n\nfunction migrationMaster() public nonPayable { \n    return _migrationMaster;\n}\n\nfunction refundTRA() public nonPayable { \n    require(_refundstate);\n    require(owner_9[msg.sender] != 0);\n    owner_9[msg.sender] = 0;\n    _totalSupply = _totalSupply - _balanceOf[msg.sender];\n    emit Refund(msg.sender, owner_9[msg.sender] / 1000);\n    v0 = msg.sender.call().value(owner_9[msg.sender] / 1000).gas(!(owner_9[msg.sender] / 1000) * 2300);\n    require(v0);\n}\n\nfunction tokenCreationCap() public nonPayable { \n    return 0xea1794bd9c8ab0fb000000;\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction token18KstepCAP() public nonPayable { \n    return 0x13afd895d373b12b000000;\n}\n\nfunction turnmigrate() public nonPayable { \n    require(msg.sender == _migrationMaster);\n    _migratestate = !_migratestate;\n}\n\nfunction fundingEndBlock() public nonPayable { \n    return _fundingEndBlock;\n}\n\nfunction totalMigrated() public nonPayable { \n    return _totalMigrated;\n}\n\nfunction symbol() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v0.data + v2] = MEM[v1.data + v2];\n        v2 = v2 + 32;\n    }\n    if (3) {\n        MEM[v0.data] = 0x484f4e0000000000000000000000000000000000000000000000000000000000;\n    }\n    return v0;\n}\n\nfunction tokenXstepCAP() public nonPayable { \n    return 0x4cc32a1490afbd9000000;\n}\n\nfunction transfer(address varg0, uint256 varg1) public nonPayable { \n    v0 = v1 = msg.sender != _migrationMaster;\n    if (v1) {\n        v0 = block.number < _fundingEndBlock + 0x11978;\n    }\n    require(!v0);\n    v2 = v3 = _balanceOf[msg.sender] >= varg1;\n    if (v3) {\n        v2 = varg1 > 0;\n    }\n    if (!v2) {\n        v4 = v5 = 0;\n    } else {\n        _balanceOf[msg.sender] = _balanceOf[msg.sender] - varg1;\n        _balanceOf[varg0] = _balanceOf[varg0] + varg1;\n        emit Transfer(msg.sender, varg0, varg1);\n        v4 = 1;\n    }\n    return v4;\n}\n\nfunction Partial8Transfer() public nonPayable { \n    v0 = _hon1ninja.call().value((address(this)).balance - 0x16345785d8a0000).gas(!((address(this)).balance - 0x16345785d8a0000) * 2300);\n    require(v0);\n}\n\nfunction oneweek() public nonPayable { \n    return 36028;\n}\n\nfunction hon2backup() public nonPayable { \n    return _hon2backup;\n}\n\nfunction turnrefund() public nonPayable { \n    require(msg.sender == _hon1ninja);\n    _refundstate = !_refundstate;\n}\n\nfunction funding() public nonPayable { \n    return _fallback;\n}\n\nfunction tokenCreationRate() public nonPayable { \n    return 1000;\n}\n\nfunction tokenSEEDcap() public nonPayable { \n    return 0xa968163f0a57b4000000;\n}\n\nfunction fundingStartBlock() public nonPayable { \n    return _fundingStartBlock;\n}\n\nfunction refundstate() public nonPayable { \n    return _refundstate;\n}\n\nfunction migratestate() public nonPayable { \n    return _migratestate;\n}\n\nfunction createHONtokens(address varg0) public payable { \n    0x900(varg0);\n}\n\nfunction finalizebackup() public nonPayable { \n    require(block.number > _fundingEndBlock + 10276);\n    _fallback = 0;\n    v0 = _hon2backup.call().value((address(this)).balance).gas(!(address(this)).balance * 2300);\n    require(v0);\n}\n\nfunction 0x900(uint256 varg0) private { \n    require(_fallback);\n    require(block.number >= _fundingStartBlock);\n    require(block.number <= _fundingEndBlock);\n    require(msg.value != 0);\n    require(msg.value <= (0xea1794bd9c8ab0fb000000 - _totalSupply) / 1000);\n    stor_7 = 1000;\n    if (_totalSupply < 0xa968163f0a57b4000000) {\n        stor_7 = 1800;\n    }\n    if (_totalSupply > 0x4cc32a1490afbd9000000) {\n        stor_7 = 750;\n    }\n    if (_totalSupply > 0x13afd895d373b12b000000) {\n        stor_7 = 750;\n    }\n    if (block.number < _blackFridayEndBlock) {\n        stor_7 = stor_7 * 3;\n    }\n    _totalSupply = _totalSupply + msg.value * stor_7;\n    v0 = address(varg0);\n    _balanceOf[v0] = _balanceOf[v0] + msg.value * stor_7;\n    v1 = address(varg0);\n    owner_9[v1] = owner_9[v1] + msg.value * 1000;\n    emit Transfer(0, address(varg0), msg.value * stor_7);\n    _totalSupply = _totalSupply + msg.value * stor_7 * 18 / 100;\n    _balanceOf[_migrationMaster] = _balanceOf[_migrationMaster] + msg.value * stor_7 * 18 / 100;\n    emit Transfer(0, _migrationMaster, msg.value * stor_7 * 18 / 100);\n    return ;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length >= 4) {\n        if (0x6fdde03 == function_selector) {\n            name();\n        } else if (0x131be36c == function_selector) {\n            preICOregulations();\n        } else if (0x18160ddd == function_selector) {\n            totalSupply();\n        } else if (0x313ce567 == function_selector) {\n            decimals();\n        } else if (0x3667551c == function_selector) {\n            Partial8Send();\n        } else if (0x37d35507 == function_selector) {\n            tokenCreationMinConversion();\n        } else if (0x41434351 == function_selector) {\n            oneday();\n        } else if (0x454b0608 == function_selector) {\n            migrate(uint256);\n        } else if (0x483d8b77 == function_selector) {\n            onehour();\n        } else if (0x49fa84ef == function_selector) {\n            hon1ninja();\n        } else if (0x4bb278f3 == function_selector) {\n            finalize();\n        } else if (0x4c53adb0 == function_selector) {\n            blackFridayEndBlock();\n        } else if (0x676d2e62 == function_selector) {\n            migrationMaster();\n        } else if (0x6f766f20 == function_selector) {\n            refundTRA();\n        } else if (0x6f7920fd == function_selector) {\n            tokenCreationCap();\n        } else if (0x70a08231 == function_selector) {\n            balanceOf(address);\n        } else if (0x8026efaa == function_selector) {\n            token18KstepCAP();\n        } else if (0x8e49a2c2 == function_selector) {\n            turnmigrate();\n        } else if (0x91b43d13 == function_selector) {\n            fundingEndBlock();\n        } else if (0x95a0f5eb == function_selector) {\n            totalMigrated();\n        } else if (0x95d89b41 == function_selector) {\n            symbol();\n        } else if (0xa55c974f == function_selector) {\n            tokenXstepCAP();\n        } else if (0xa9059cbb == function_selector) {\n            transfer(address,uint256);\n        } else if (0xbe154a18 == function_selector) {\n            Partial8Transfer();\n        } else if (0xbf5c844b == function_selector) {\n            oneweek();\n        } else if (0xc005dc7b == function_selector) {\n            hon2backup();\n        } else if (0xcaecc5aa == function_selector) {\n            turnrefund();\n        } else if (0xcb4c86b7 == function_selector) {\n            funding();\n        } else if (0xcf8d652c == function_selector) {\n            tokenCreationRate();\n        } else if (0xd4b2931c == function_selector) {\n            tokenSEEDcap();\n        } else if (0xd648a647 == function_selector) {\n            fundingStartBlock();\n        } else if (0xdcabf93f == function_selector) {\n            refundstate();\n        } else if (0xea16cee5 == function_selector) {\n            migratestate();\n        } else if (0xeab5cd84 == function_selector) {\n            createHONtokens(address);\n        } else if (0xf559417c == function_selector) {\n            finalizebackup();\n        }\n    }\n    fallback();\n}\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.23 21:07 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _fundingStartBlock; // STORAGE[0x0]\nuint256 _blackFridayEndBlock; // STORAGE[0x1]\nuint256 _fundingEndBlock; // STORAGE[0x2]\nuint256 _totalSupply; // STORAGE[0x6]\nuint256 stor_7; // STORAGE[0x7]\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x8]\nmapping (uint256 => [uint256]) owner_9; // STORAGE[0x9]\nuint256 _totalMigrated; // STORAGE[0xa]\nuint8 _fallback; // STORAGE[0x3] bytes 0 to 0\nuint8 _refundstate; // STORAGE[0x3] bytes 1 to 1\nuint8 _migratestate; // STORAGE[0x3] bytes 2 to 2\naddress _hon1ninja; // STORAGE[0x3] bytes 3 to 22\naddress _hon2backup; // STORAGE[0x4] bytes 0 to 19\naddress _migrationMaster; // STORAGE[0x5] bytes 0 to 19\n\n// Events\nTransfer(address, address, uint256);\nRefund(address, uint256);\n\nfunction fallback() public payable { \n    if (_fallback) {\n        0x900(msg.sender);\n    }\n}\n\nfunction name() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v0.data + v2] = MEM[v1.data + v2];\n        v2 = v2 + 32;\n    }\n    v4 = v5 = v1.length + v0.data;\n    if (4) {\n        MEM[v5 - 4] = 0x2045544800000000000000000000000000000000000000000000000000000000;\n    }\n    return v0, v6, 'preICO for HumansOnly.Network on';\n}\n\nfunction preICOregulations() public nonPayable { \n    MEM[MEM[64]] = 0;\n    v0 = new array[](v1.length);\n    MEM[MEM[64]] = 32;\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v0.data + v2] = MEM[v1.data + v2];\n        v2 = v2 + 32;\n    }\n    v4 = v5 = v1.length + v0.data;\n    if (31) {\n        MEM[v5 - 31] = ~0xff & MEM[v5 - 31];\n    }\n    return v0;\n}\n\nfunction totalSupply() public nonPayable { \n    return _totalSupply;\n}\n\nfunction decimals() public nonPayable { \n    return 18;\n}\n\nfunction Partial8Send() public nonPayable { \n    require(msg.sender == _hon1ninja);\n    v0 = _hon1ninja.call().value((address(this)).balance - 0xde0b6b3a7640000).gas(!((address(this)).balance - 0xde0b6b3a7640000) * 2300);\n}\n\nfunction tokenCreationMinConversion() public nonPayable { \n    return 0x3635c9adc5dea00000;\n}\n\nfunction oneday() public nonPayable { \n    return 5138;\n}\n\nfunction migrate(uint256 varg0) public nonPayable { \n    require(!_migratestate);\n    require(varg0 != 0);\n    require(varg0 <= _balanceOf[msg.sender]);\n    _balanceOf[msg.sender] = _balanceOf[msg.sender] - varg0;\n    _totalSupply = _totalSupply - varg0;\n    _totalMigrated = _totalMigrated + varg0;\n}\n\nfunction onehour() public nonPayable { \n    return 218;\n}\n\nfunction hon1ninja() public nonPayable { \n    return _hon1ninja;\n}\n\nfunction finalize() public nonPayable { \n    v0 = v1 = msg.sender != _migrationMaster;\n    if (msg.sender == _migrationMaster) {\n        v0 = v2 = msg.sender != _hon1ninja;\n    }\n    if (!v0) {\n        v0 = v3 = msg.sender != _hon2backup;\n    }\n    require(!v0);\n    _fallback = 0;\n    v4 = _hon1ninja.call().value((address(this)).balance).gas(!(address(this)).balance * 2300);\n    require(v4);\n    _totalSupply = _totalSupply + (0xea1794bd9c8ab0fb000000 - _totalSupply);\n    _balanceOf[_migrationMaster] = _balanceOf[_migrationMaster] + (0xea1794bd9c8ab0fb000000 - _totalSupply);\n    emit Transfer(0, _migrationMaster, 0xea1794bd9c8ab0fb000000 - _totalSupply);\n}\n\nfunction blackFridayEndBlock() public nonPayable { \n    return _blackFridayEndBlock;\n}\n\nfunction migrationMaster() public nonPayable { \n    return _migrationMaster;\n}\n\nfunction refundTRA() public nonPayable { \n    require(_refundstate);\n    require(owner_9[msg.sender] != 0);\n    owner_9[msg.sender] = 0;\n    _totalSupply = _totalSupply - _balanceOf[msg.sender];\n    emit Refund(msg.sender, owner_9[msg.sender] / 1000);\n    v0 = msg.sender.call().value(owner_9[msg.sender] / 1000).gas(!(owner_9[msg.sender] / 1000) * 2300);\n    require(v0);\n}\n\nfunction tokenCreationCap() public nonPayable { \n    return 0xea1794bd9c8ab0fb000000;\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction token18KstepCAP() public nonPayable { \n    return 0x13afd895d373b12b000000;\n}\n\nfunction turnmigrate() public nonPayable { \n    require(msg.sender == _migrationMaster);\n    _migratestate = !_migratestate;\n}\n\nfunction fundingEndBlock() public nonPayable { \n    return _fundingEndBlock;\n}\n\nfunction totalMigrated() public nonPayable { \n    return _totalMigrated;\n}\n\nfunction symbol() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v0.data + v2] = MEM[v1.data + v2];\n        v2 = v2 + 32;\n    }\n    if (3) {\n        MEM[v0.data] = 0x484f4e0000000000000000000000000000000000000000000000000000000000;\n    }\n    return v0;\n}\n\nfunction tokenXstepCAP() public nonPayable { \n    return 0x4cc32a1490afbd9000000;\n}\n\nfunction transfer(address varg0, uint256 varg1) public nonPayable { \n    v0 = v1 = msg.sender != _migrationMaster;\n    if (v1) {\n        v0 = block.number < _fundingEndBlock + 0x11978;\n    }\n    require(!v0);\n    v2 = v3 = _balanceOf[msg.sender] >= varg1;\n    if (v3) {\n        v2 = varg1 > 0;\n    }\n    if (!v2) {\n        v4 = v5 = 0;\n    } else {\n        _balanceOf[msg.sender] = _balanceOf[msg.sender] - varg1;\n        _balanceOf[varg0] = _balanceOf[varg0] + varg1;\n        emit Transfer(msg.sender, varg0, varg1);\n        v4 = 1;\n    }\n    return v4;\n}\n\nfunction Partial8Transfer() public nonPayable { \n    v0 = _hon1ninja.call().value((address(this)).balance - 0x16345785d8a0000).gas(!((address(this)).balance - 0x16345785d8a0000) * 2300);\n    require(v0);\n}\n\nfunction oneweek() public nonPayable { \n    return 36028;\n}\n\nfunction hon2backup() public nonPayable { \n    return _hon2backup;\n}\n\nfunction turnrefund() public nonPayable { \n    require(msg.sender == _hon1ninja);\n    _refundstate = !_refundstate;\n}\n\nfunction funding() public nonPayable { \n    return _fallback;\n}\n\nfunction tokenCreationRate() public nonPayable { \n    return 1000;\n}\n\nfunction tokenSEEDcap() public nonPayable { \n    return 0xa968163f0a57b4000000;\n}\n\nfunction fundingStartBlock() public nonPayable { \n    return _fundingStartBlock;\n}\n\nfunction refundstate() public nonPayable { \n    return _refundstate;\n}\n\nfunction migratestate() public nonPayable { \n    return _migratestate;\n}\n\nfunction createHONtokens(address varg0) public payable { \n    0x900(varg0);\n}\n\nfunction finalizebackup() public nonPayable { \n    require(block.number > _fundingEndBlock + 10276);\n    _fallback = 0;\n    v0 = _hon2backup.call().value((address(this)).balance).gas(!(address(this)).balance * 2300);\n    require(v0);\n}\n\nfunction 0x900(uint256 varg0) private { \n    require(_fallback);\n    require(block.number >= _fundingStartBlock);\n    require(block.number <= _fundingEndBlock);\n    require(msg.value != 0);\n    require(msg.value <= (0xea1794bd9c8ab0fb000000 - _totalSupply) / 1000);\n    stor_7 = 1000;\n    if (_totalSupply < 0xa968163f0a57b4000000) {\n        stor_7 = 1800;\n    }\n    if (_totalSupply > 0x4cc32a1490afbd9000000) {\n        stor_7 = 750;\n    }\n    if (_totalSupply > 0x13afd895d373b12b000000) {\n        stor_7 = 750;\n    }\n    if (block.number < _blackFridayEndBlock) {\n        stor_7 = stor_7 * 3;\n    }\n    _totalSupply = _totalSupply + msg.value * stor_7;\n    v0 = address(varg0);\n    _balanceOf[v0] = _balanceOf[v0] + msg.value * stor_7;\n    v1 = address(varg0);\n    owner_9[v1] = owner_9[v1] + msg.value * 1000;\n    emit Transfer(0, address(varg0), msg.value * stor_7);\n    _totalSupply = _totalSupply + msg.value * stor_7 * 18 / 100;\n    _balanceOf[_migrationMaster] = _balanceOf[_migrationMaster] + msg.value * stor_7 * 18 / 100;\n    emit Transfer(0, _migrationMaster, msg.value * stor_7 * 18 / 100);\n    return ;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length >= 4) {\n        if (0x6fdde03 == function_selector) {\n            name();\n        } else if (0x131be36c == function_selector) {\n            preICOregulations();\n        } else if (0x18160ddd == function_selector) {\n            totalSupply();\n        } else if (0x313ce567 == function_selector) {\n            decimals();\n        } else if (0x3667551c == function_selector) {\n            Partial8Send();\n        } else if (0x37d35507 == function_selector) {\n            tokenCreationMinConversion();\n        } else if (0x41434351 == function_selector) {\n            oneday();\n        } else if (0x454b0608 == function_selector) {\n            migrate(uint256);\n        } else if (0x483d8b77 == function_selector) {\n            onehour();\n        } else if (0x49fa84ef == function_selector) {\n            hon1ninja();\n        } else if (0x4bb278f3 == function_selector) {\n            finalize();\n        } else if (0x4c53adb0 == function_selector) {\n            blackFridayEndBlock();\n        } else if (0x676d2e62 == function_selector) {\n            migrationMaster();\n        } else if (0x6f766f20 == function_selector) {\n            refundTRA();\n        } else if (0x6f7920fd == function_selector) {\n            tokenCreationCap();\n        } else if (0x70a08231 == function_selector) {\n            balanceOf(address);\n        } else if (0x8026efaa == function_selector) {\n            token18KstepCAP();\n        } else if (0x8e49a2c2 == function_selector) {\n            turnmigrate();\n        } else if (0x91b43d13 == function_selector) {\n            fundingEndBlock();\n        } else if (0x95a0f5eb == function_selector) {\n            totalMigrated();\n        } else if (0x95d89b41 == function_selector) {\n            symbol();\n        } else if (0xa55c974f == function_selector) {\n            tokenXstepCAP();\n        } else if (0xa9059cbb == function_selector) {\n            transfer(address,uint256);\n        } else if (0xbe154a18 == function_selector) {\n            Partial8Transfer();\n        } else if (0xbf5c844b == function_selector) {\n            oneweek();\n        } else if (0xc005dc7b == function_selector) {\n            hon2backup();\n        } else if (0xcaecc5aa == function_selector) {\n            turnrefund();\n        } else if (0xcb4c86b7 == function_selector) {\n            funding();\n        } else if (0xcf8d652c == function_selector) {\n            tokenCreationRate();\n        } else if (0xd4b2931c == function_selector) {\n            tokenSEEDcap();\n        } else if (0xd648a647 == function_selector) {\n            fundingStartBlock();\n        } else if (0xdcabf93f == function_selector) {\n            refundstate();\n        } else if (0xea16cee5 == function_selector) {\n            migratestate();\n        } else if (0xeab5cd84 == function_selector) {\n            createHONtokens(address);\n        } else if (0xf559417c == function_selector) {\n            finalizebackup();\n        }\n    }\n    fallback();\n}\n.",
	"status": "1",
	"time_cost": 61.47141218185425,
	"usage": {
		"completion_tokens": 1481,
		"prompt_tokens": 3353,
		"total_tokens": 4834
	}
}