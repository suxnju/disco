{
	"address": "0x7463c891a2b5b832f4a60dde07c8a3511a72d1b9",
	"input_format": "DecompiledCode",
	"ir": "# Palkeoramix decompiler. \n\nconst name = 'Uniswap V2'\nconst decimals = 18\nconst symbol = 'UNI-V2'\nconst PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\nconst MINIMUM_LIQUIDITY = 1000\n\ndef storage:\n  totalSupply is uint256 at storage 0\n  balanceOf is mapping of uint256 at storage 1\n  allowance is mapping of uint256 at storage 2\n  DOMAIN_SEPARATOR is uint256 at storage 3\n  nonces is mapping of uint256 at storage 4\n  factoryAddress is address at storage 5\n  token0Address is address at storage 6\n  token1Address is address at storage 7\n  stor8 is uint32 at storage 8 offset 224\n  stor8 is uint128 at storage 8\n  stor8 is uint128 at storage 8 offset 112\n  price0CumulativeLast is uint256 at storage 9\n  price1CumulativeLast is uint256 at storage 10\n  kLast is uint256 at storage 11\n  stor12 is uint256 at storage 12\n\ndef token0() payable: \n  return token0Address\n\ndef totalSupply() payable: \n  return totalSupply\n\ndef DOMAIN_SEPARATOR() payable: \n  return DOMAIN_SEPARATOR\n\ndef price0CumulativeLast() payable: \n  return price0CumulativeLast\n\ndef price1CumulativeLast() payable: \n  return price1CumulativeLast\n\ndef balanceOf(address account) payable: \n  require calldata.size - 4 >= 32\n  return balanceOf[account]\n\ndef kLast() payable: \n  return kLast\n\ndef nonces(address _param1) payable: \n  require calldata.size - 4 >= 32\n  return nonces[_param1]\n\ndef factory() payable: \n  return factoryAddress\n\ndef token1() payable: \n  return token1Address\n\ndef allowance(address owner, address spender) payable: \n  require calldata.size - 4 >= 64\n  return allowance[owner][spender]\n\n#\n#  Regular functions\n#\n\ndef _fallback(?) payable: # default function\n  revert\n\ndef getReserves() payable: \n  return Mask(112, 0, stor8.field_0), Mask(112, 0, stor8.field_0), uint32(stor8.field_224)\n\ndef initialize(address _token0, address _token1) payable: \n  require calldata.size - 4 >= 64\n  if factoryAddress != caller:\n      revert with 0, 'UniswapV2: FORBIDDEN'\n  token0Address = _token0\n  token1Address = _token1\n\ndef approve(address spender, uint256 amount) payable: \n  require calldata.size - 4 >= 64\n  allowance[caller][address(spender)] = amount\n  log Approval(\n        address owner=amount,\n        address spender=caller,\n        uint256 value=spender)\n  return 1\n\ndef transfer(address recipient, uint256 amount) payable: \n  require calldata.size - 4 >= 64\n  if balanceOf[caller] - amount > balanceOf[caller]:\n      revert with 0, 'ds-math-sub-underflow'\n  balanceOf[caller] -= amount\n  if balanceOf[recipient] + amount < balanceOf[recipient]:\n      revert with 0, 'ds-math-add-overflow'\n  balanceOf[address(recipient)] = balanceOf[recipient] + amount\n  log Transfer(\n        address from=amount,\n        address to=caller,\n        uint256 value=recipient)\n  return 1\n\ndef permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable: \n  require calldata.size - 4 >= 224\n  if deadline < block.timestamp:\n      revert with 0, 'UniswapV2: EXPIRED'\n  nonces[address(owner)]++\n  signer = erecover(sha3(0, DOMAIN_SEPARATOR, sha3(0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9, address(owner), address(spender), value, nonces[address(owner)], deadline)), v << 248, r, s) # precompiled\n  if not erecover.result:\n      revert with ext_call.return_data[0 len return_data.size]\n  if not address(signer):\n      revert with 0, 'UniswapV2: INVALID_SIGNATURE'\n  if address(signer) != owner:\n      revert with 0, 'UniswapV2: INVALID_SIGNATURE'\n  allowance[address(owner)][address(spender)] = value\n  log Approval(\n        address owner=value,\n        address spender=owner,\n        uint256 value=spender)\n\ndef transferFrom(address sender, address recipient, uint256 amount) payable: \n  require calldata.size - 4 >= 96\n  if allowance[address(sender)][caller] != -1:\n      if allowance[address(sender)][caller] - amount > allowance[address(sender)][caller]:\n          revert with 0, 'ds-math-sub-underflow'\n      allowance[address(sender)][caller] -= amount\n  if balanceOf[address(sender)] - amount > balanceOf[address(sender)]:\n      revert with 0, 'ds-math-sub-underflow'\n  balanceOf[address(sender)] -= amount\n  if balanceOf[recipient] + amount < balanceOf[recipient]:\n      revert with 0, 'ds-math-add-overflow'\n  balanceOf[address(recipient)] = balanceOf[recipient] + amount\n  log Transfer(\n        address from=amount,\n        address to=sender,\n        uint256 value=recipient)\n  return 1\n\ndef sync() payable: \n  if stor12 != 1:\n      revert with 0, 'UniswapV2: LOCKED'\n  stor12 = 0\n  require ext_code.size(token0Address)\n  static call token0Address.balanceOf(address account) with:\n          gas gas_remaining wei\n         args this.address\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  require ext_code.size(token1Address)\n  static call token1Address.balanceOf(address account) with:\n          gas gas_remaining wei\n         args this.address\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if ext_call.return_data[0] > LOCK8605463013():\n      revert with 0, 'UniswapV2: OVERFLOW'\n  if ext_call.return_data[0] > LOCK8605463013():\n      revert with 0, 'UniswapV2: OVERFLOW'\n  if uint32(uint32(block.timestamp) - uint32(stor8.field_224)):\n      if Mask(112, 0, stor8.field_0):\n          if Mask(112, 0, stor8.field_112):\n              require Mask(112, 0, stor8.field_0)\n              price0CumulativeLast += Mask(224, 0, Mask(112, 0, Mask(112, 0, stor8.field_112)) << 112 / Mask(112, 0, stor8.field_0)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n              require Mask(112, 0, stor8.field_112)\n              price1CumulativeLast += Mask(224, 0, Mask(112, 0, stor8.field_0) / Mask(112, 0, stor8.field_112)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n  Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n  Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n  uint32(stor8.field_224) = uint32(block.timestamp)\n  log Sync(\n        uint112 reserve0=ext_call.return_data[0] << 144,\n        uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n  stor12 = 1\n\ndef skim(address to) payable: \n  require calldata.size - 4 >= 32\n  if stor12 != 1:\n      revert with 0, 'UniswapV2: LOCKED'\n  stor12 = 0\n  require ext_code.size(token0Address)\n  static call token0Address.balanceOf(address account) with:\n          gas gas_remaining wei\n         args this.address\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if ext_call.return_data[0] - Mask(112, 0, stor8.field_0) > ext_call.return_data[0]:\n      revert with 0, 'ds-math-sub-underflow'\n  mem[260 len 64] = transfer(address recipient, uint256 amount), address(to) << 64, 0, Mask(224, 32, ext_call.return_data[0] - Mask(112, 0, stor8.field_0)) >> 32\n  call token0Address with:\n       gas gas_remaining wei\n      args Mask(224, 32, ext_call.return_data[0] - Mask(112, 0, stor8.field_0)) << 224, mem[324 len 4]\n  if not return_data.size:\n      require not ext_call.success\n      revert with 0, 'UniswapV2: TRANSFER_FAILED'\n  mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]\n  if not ext_call.success:\n      revert with 0, 'UniswapV2: TRANSFER_FAILED'\n  if return_data.size:\n      require return_data.size >= 32\n      if not mem[292]:\n          revert with 0, 'UniswapV2: TRANSFER_FAILED'\n  require ext_code.size(token1Address)\n  static call token1Address.balanceOf(address account) with:\n          gas gas_remaining wei\n         args this.address\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if ext_call.return_data[0] - Mask(112, 0, stor8.field_112) > ext_call.return_data[0]:\n      revert with 0, 'ds-math-sub-underflow'\n  mem[ceil32(return_data.size) + 425 len 64] = 0, address(to), Mask(224, 32, ext_call.return_data[0] - Mask(112, 0, stor8.field_112)) >> 32\n  call token1Address with:\n       gas gas_remaining wei\n      args ext_call.return_data[0] - Mask(112, 0, stor8.field_112), Mask(224, 32, address(to), Mask(224, 32, ext_call.return_data[0] - Mask(112, 0, stor8.field_112)) >> 32) >> 32, mem[ceil32(return_data.size) + 489 len 4]\n  if not return_data.size:\n      require not ext_call.success\n      revert with 0, 'UniswapV2: TRANSFER_FAILED'\n  mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]\n  if not ext_call.success:\n      revert with 0, 'UniswapV2: TRANSFER_FAILED'\n  if return_data.size:\n      require return_data.size >= 32\n      if not mem[ceil32(return_data.size) + 457]:\n          revert with 0, 'UniswapV2: TRANSFER_FAILED'\n  stor12 = 1\n\ndef swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) payable: \n  require calldata.size - 4 >= 128\n  require data <= unknown10000000()\n  require data + 36 <= calldata.size\n  require data.length <= unknown10000000() and data + data.length + 36 <= calldata.size\n  if stor12 != 1:\n      revert with 0, 'UniswapV2: LOCKED'\n  stor12 = 0\n  if amount0Out:\n      if amount0Out >= Mask(112, 0, stor8.field_0):\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      33,\n                      0x54556e697377617056323a20494e53554646494349454e545f4c49515549444954,\n                      mem[197 len 31]\n      if amount1Out >= Mask(112, 0, stor8.field_112):\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      33,\n                      0x54556e697377617056323a20494e53554646494349454e545f4c49515549444954,\n                      mem[197 len 31]\n      if token0Address == to:\n          revert with 0, 'UniswapV2: INVALID_TO'\n      if to == token1Address:\n          revert with 0, 'UniswapV2: INVALID_TO'\n      if not amount0Out:\n          if not amount1Out:\n              if not data.length:\n                  require ext_code.size(token0Address)\n                  static call token0Address.balanceOf(address account) with:\n                          gas gas_remaining wei\n                         args this.address\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  require return_data.size >= 32\n                  require ext_code.size(token1Address)\n                  static call token1Address.balanceOf(address account) with:\n                          gas gas_remaining wei\n                         args this.address\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  require return_data.size >= 32\n                  if ext_call.return_data[0] <= Mask(112, 0, stor8.field_0) - amount0Out:\n                      if ext_call.return_data[0] <= Mask(112, 0, stor8.field_112) - amount1Out:\n                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                      32,\n                                      36,\n                                      0x54556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e,\n                                      mem[200 len 28]\n                      if ext_call.return_data[0] - Mask(112, 0, stor8.field_112) + amount1Out <= 0:\n                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                      32,\n                                      36,\n                                      0x54556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e,\n                                      mem[200 len 28]\n                      if 1000 * ext_call.return_data[0] / 1000 != ext_call.return_data[0]:\n                          revert with 0, 'ds-math-mul-overflow'\n                      if 1000 * ext_call.return_data[0] > 1000 * ext_call.return_data[0]:\n                          revert with 0, 'ds-math-sub-underflow'\n                  else:\n                      if ext_call.return_data[0] <= Mask(112, 0, stor8.field_112) - amount1Out:\n                          if ext_call.return_data[0] - Mask(112, 0, stor8.field_0) + amount0Out <= 0:\n                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                          32,\n                                          36,\n                                          0x54556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e,\n                                          mem[200 len 28]\n                      else:\n                          if ext_call.return_data[0] - Mask(112, 0, stor8.field_0) + amount0Out <= 0:\n                              if ext_call.return_data[0] - Mask(112, 0, stor8.field_112) + amount1Out <= 0:\n                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                              32,\n                                              36,\n                                              0x54556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e,\n                                              mem[200 len 28]\n                      if (3 * ext_call.return_data[0]) - (3 * Mask(112, 0, stor8.field_0)) + (3 * amount0Out) / 3 != ext_call.return_data[0] - Mask(112, 0, stor8.field_0) + amount0Out:\n                          revert with 0, 'ds-math-mul-overflow'\n                      if 1000 * ext_call.return_data[0] / 1000 != ext_call.return_data[0]:\n                          revert with 0, 'ds-math-mul-overflow'\n                      if (997 * ext_call.return_data[0]) + (3 * Mask(112, 0, stor8.field_0)) - (3 * amount0Out) > 1000 * ext_call.return_data[0]:\n                          revert with 0, 'ds-math-sub-underflow'\n              else:\n                  mem[260 len data.length] = data[all]\n                  mem[data.length + 260] = 0\n                  require ext_code.size(to)\n                  call to.uniswapV2Call(address sender, uint256 amount0, uint256 amount1, bytes data) with:\n                       gas gas_remaining wei\n                      args 0, uint32(caller), amount0Out, amount1Out, 128, data.length, data[all], mem[data.length + 260 len ceil32(data.length) - data.length]\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  require ext_code.size(token0Address)\n                  static call token0Address.balanceOf(address account) with:\n                          gas gas_remaining wei\n                         args this.address\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  require return_data.size >= 32\n                  require ext_code.size(token1Address)\n                  static call token1Address.balanceOf(address account) with:\n                          gas gas_remaining wei\n                         args this.address\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  require return_data.size >= 32\n                  if ext_call.return_data[0] <= Mask(112, 0, stor8.field_0) - amount0Out:\n                      if ext_call.return_data[0] <= Mask(112, 0, stor8.field_112) - amount1Out:\n                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'TUniswapV2: INSUFFICIENT_INPUT_AMOUN'\n                      if ext_call.return_data[0] - Mask(112, 0, stor8.field_112) + amount1Out <= 0:\n                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'TUniswapV2: INSUFFICIENT_INPUT_AMOUN'\n                      if 1000 * ext_call.return_data[0] / 1000 != ext_call.return_data[0]:\n                          revert with 0, 'ds-math-mul-overflow'\n                  else:\n                      if ext_call.return_data[0] <= Mask(112, 0, stor8.field_112) - amount1Out:\n                          if ext_call.return_data[0] - Mask(112, 0, stor8.field_0) + amount0Out <= 0:\n                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'TUniswapV2: INSUFFICIENT_INPUT_AMOUN'\n                          if (3 * ext_call.return_data[0]) - (3 * Mask(112, 0, stor8.field_0)) + (3 * amount0Out) / 3 != ext_call.return_data[0] - Mask(112, 0, stor8.field_0) + amount0Out:\n                              revert with 0, 'ds-math-mul-overflow'\n                          if 1000 * ext_call.return_data[0] / 1000 != ext_call.return_data[0]:\n                              revert with 0, 'ds-math-mul-overflow'\n                          if (997 * ext_call.return_data[0]) + (3 * Mask(112, 0, stor8.field_0)) - (3 * amount0Out) > 1000 * ext_call.return_data[0]:\n                              revert with 0, 'ds-math-sub-underflow'\n                      else:\n                          if ext_call.return_data[0] - Mask(112, 0, stor8.field_0) + amount0Out > 0:\n                              if (3 * ext_call.return_data[0]) - (3 * Mask(112, 0, stor8.field_0)) + (3 * amount0Out) / 3 != ext_call.return_data[0] - Mask(112, 0, stor8.field_0) + amount0Out:\n                                  revert with 0, 'ds-math-mul-overflow'\n                              if 1000 * ext_call.return_data[0] / 1000 != ext_call.return_data[0]:\n                                  revert with 0, 'ds-math-mul-overflow'\n                              if (997 * ext_call.return_data[0]) + (3 * Mask(112, 0, stor8.field_0)) - (3 * amount0Out) > 1000 * ext_call.return_data[0]:\n                                  revert with 0, 'ds-math-sub-underflow'\n                          else:\n                              if ext_call.return_data[0] - Mask(112, 0, stor8.field_112) + amount1Out <= 0:\n                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'TUniswapV2: INSUFFICIENT_INPUT_AMOUN'\n                              if (3 * ext_call.return_data[0]) - (3 * Mask(112, 0, stor8.field_0)) + (3 * amount0Out) / 3 != ext_call.return_data[0] - Mask(112, 0, stor8.field_0) + amount0Out:\n                                  revert with 0, 'ds-math-mul-overflow'\n                              if 1000 * ext_call.return_data[0] / 1000 != ext_call.return_data[0]:\n                                  revert with 0, 'ds-math-mul-overflow'\n  else:\n      if amount1Out <= 0:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      37,\n                      0xfe556e697377617056323a20494e53554646494349454e545f4f55545055545f414d4f554e,\n                      mem[201 len 27]\n      if amount0Out >= Mask(112, 0, stor8.field_0):\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      33,\n                      0x54556e697377617056323a20494e53554646494349454e545f4c49515549444954,\n                      mem[197 len 31]\n      if amount1Out >= Mask(112, 0, stor8.field_112):\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      33,\n                      0x54556e697377617056323a20494e53554646494349454e545f4c49515549444954,\n                      mem[197 len 31]\n      if token0Address == to:\n          revert with 0, 'UniswapV2: INVALID_TO'\n      if to == token1Address:\n          revert with 0, 'UniswapV2: INVALID_TO'\n      if not amount0Out:\n          if not amount1Out:\n              if not data.length:\n                  require ext_code.size(token0Address)\n                  static call token0Address.balanceOf(address account) with:\n                          gas gas_remaining wei\n                         args this.address\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  require return_data.size >= 32\n                  require ext_code.size(token1Address)\n                  static call token1Address.balanceOf(address account) with:\n                          gas gas_remaining wei\n                         args this.address\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  require return_data.size >= 32\n                  if ext_call.return_data[0] <= Mask(112, 0, stor8.field_0) - amount0Out:\n                      if ext_call.return_data[0] <= Mask(112, 0, stor8.field_112) - amount1Out:\n                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                      32,\n                                      36,\n                                      0x54556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e,\n                                      mem[200 len 28]\n                      if ext_call.return_data[0] - Mask(112, 0, stor8.field_112) + amount1Out <= 0:\n                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                      32,\n                                      36,\n                                      0x54556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e,\n                                      mem[200 len 28]\n                      if 1000 * ext_call.return_data[0] / 1000 != ext_call.return_data[0]:\n                          revert with 0, 'ds-math-mul-overflow'\n                      if 1000 * ext_call.return_data[0] > 1000 * ext_call.return_data[0]:\n                          revert with 0, 'ds-math-sub-underflow'\n                  else:\n                      if ext_call.return_data[0] <= Mask(112, 0, stor8.field_112) - amount1Out:\n                          if ext_call.return_data[0] - Mask(112, 0, stor8.field_0) + amount0Out <= 0:\n                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                          32,\n                                          36,\n                                          0x54556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e,\n                                          mem[200 len 28]\n                      else:\n                          if ext_call.return_data[0] - Mask(112, 0, stor8.field_0) + amount0Out <= 0:\n                              if ext_call.return_data[0] - Mask(112, 0, stor8.field_112) + amount1Out <= 0:\n                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                              32,\n                                              36,\n                                              0x54556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e,\n                                              mem[200 len 28]\n                      if (3 * ext_call.return_data[0]) - (3 * Mask(112, 0, stor8.field_0)) + (3 * amount0Out) / 3 != ext_call.return_data[0] - Mask(112, 0, stor8.field_0) + amount0Out:\n                          revert with 0, 'ds-math-mul-overflow'\n                      if 1000 * ext_call.return_data[0] / 1000 != ext_call.return_data[0]:\n                          revert with 0, 'ds-math-mul-overflow'\n                      if (997 * ext_call.return_data[0]) + (3 * Mask(112, 0, stor8.field_0)) - (3 * amount0Out) > 1000 * ext_call.return_data[0]:\n                          revert with 0, 'ds-math-sub-underflow'\n              else:\n                  mem[260 len data.length] = data[all]\n                  mem[data.length + 260] = 0\n                  require ext_code.size(to)\n                  call to.uniswapV2Call(address sender, uint256 amount0, uint256 amount1, bytes data) with:\n                       gas gas_remaining wei\n                      args 0, uint32(caller), amount0Out, amount1Out, 128, data.length, data[all], mem[data.length + 260 len ceil32(data.length) - data.length]\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  require ext_code.size(token0Address)\n                  static call token0Address.balanceOf(address account) with:\n                          gas gas_remaining wei\n                         args this.address\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  require return_data.size >= 32\n                  require ext_code.size(token1Address)\n                  static call token1Address.balanceOf(address account) with:\n                          gas gas_remaining wei\n                         args this.address\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  require return_data.size >= 32\n                  if ext_call.return_data[0] <= Mask(112, 0, stor8.field_0) - amount0Out:\n                      if ext_call.return_data[0] <= Mask(112, 0, stor8.field_112) - amount1Out:\n                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'TUniswapV2: INSUFFICIENT_INPUT_AMOUN'\n                      if ext_call.return_data[0] - Mask(112, 0, stor8.field_112) + amount1Out <= 0:\n                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'TUniswapV2: INSUFFICIENT_INPUT_AMOUN'\n                  else:\n                      if ext_call.return_data[0] > Mask(112, 0, stor8.field_112) - amount1Out:\n                          if ext_call.return_data[0] - Mask(112, 0, stor8.field_0) + amount0Out <= 0:\n                              if ext_call.return_data[0] - Mask(112, 0, stor8.field_112) + amount1Out <= 0:\n                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'TUniswapV2: INSUFFICIENT_INPUT_AMOUN'\n                      else:\n                          if ext_call.return_data[0] - Mask(112, 0, stor8.field_0) + amount0Out <= 0:\n                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'TUniswapV2: INSUFFICIENT_INPUT_AMOUN'\n                      if (3 * ext_call.return_data[0]) - (3 * Mask(112, 0, stor8.field_0)) + (3 * amount0Out) / 3 != ext_call.return_data[0] - Mask(112, 0, stor8.field_0) + amount0Out:\n                          revert with 0, 'ds-math-mul-overflow'\n                  if 1000 * ext_call.return_data[0] / 1000 != ext_call.return_data[0]:\n                      revert with 0, 'ds-math-mul-overflow'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef burn(address to) payable: \n  require calldata.size - 4 >= 32\n  if stor12 != 1:\n      revert with 0, 'UniswapV2: LOCKED'\n  stor12 = 0\n  require ext_code.size(token0Address)\n  static call token0Address.balanceOf(address account) with:\n          gas gas_remaining wei\n         args this.address\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  require ext_code.size(token1Address)\n  static call token1Address.balanceOf(address account) with:\n          gas gas_remaining wei\n         args this.address\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  require ext_code.size(factoryAddress)\n  static call factoryAddress.feeTo() with:\n          gas gas_remaining wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if not ext_call.return_data[12 len 20]:\n      if kLast:\n          kLast = 0\n      if not ext_call.return_data[0]:\n          require totalSupply\n          if not ext_call.return_data[0]:\n              require totalSupply\n              if 0 / totalSupply <= 0:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              40,\n                              0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                              mem[204 len 24]\n          else:\n              require ext_call.return_data[0]\n              if balanceOf[this.address] * ext_call.return_data[0] / ext_call.return_data[0] != balanceOf[this.address]:\n                  revert with 0, 'ds-math-mul-overflow'\n              require totalSupply\n              if 0 / totalSupply <= 0:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              40,\n                              0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                              mem[204 len 24]\n              if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              40,\n                              0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                              mem[204 len 24]\n      else:\n          require ext_call.return_data[0]\n          if balanceOf[this.address] * ext_call.return_data[0] / ext_call.return_data[0] != balanceOf[this.address]:\n              revert with 0, 'ds-math-mul-overflow'\n          require totalSupply\n          if not ext_call.return_data[0]:\n              require totalSupply\n              if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              40,\n                              0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                              mem[204 len 24]\n              if 0 / totalSupply <= 0:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              40,\n                              0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                              mem[204 len 24]\n          else:\n              require ext_call.return_data[0]\n              if balanceOf[this.address] * ext_call.return_data[0] / ext_call.return_data[0] != balanceOf[this.address]:\n                  revert with 0, 'ds-math-mul-overflow'\n              require totalSupply\n              if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              40,\n                              0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                              mem[204 len 24]\n              if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              40,\n                              0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                              mem[204 len 24]\n      if balanceOf[address(this.address)] - balanceOf[this.address] > balanceOf[address(this.address)]:\n          revert with 0, 'ds-math-sub-underflow'\n      balanceOf[address(this.address)] -= balanceOf[this.address]\n      if totalSupply - balanceOf[this.address] > totalSupply:\n          revert with 0, 'ds-math-sub-underflow'\n      totalSupply -= balanceOf[this.address]\n      log Transfer(\n            address from=balanceOf[this.address],\n            address to=this.address,\n            uint256 value=0)\n  else:\n      if not kLast:\n          if not ext_call.return_data[0]:\n              require totalSupply\n              if not ext_call.return_data[0]:\n                  require totalSupply\n                  if 0 / totalSupply <= 0:\n                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                  32,\n                                  40,\n                                  0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                  mem[204 len 24]\n              else:\n                  require ext_call.return_data[0]\n                  if balanceOf[this.address] * ext_call.return_data[0] / ext_call.return_data[0] != balanceOf[this.address]:\n                      revert with 0, 'ds-math-mul-overflow'\n                  require totalSupply\n                  if 0 / totalSupply <= 0:\n                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                  32,\n                                  40,\n                                  0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                  mem[204 len 24]\n                  if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                  32,\n                                  40,\n                                  0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                  mem[204 len 24]\n          else:\n              require ext_call.return_data[0]\n              if balanceOf[this.address] * ext_call.return_data[0] / ext_call.return_data[0] != balanceOf[this.address]:\n                  revert with 0, 'ds-math-mul-overflow'\n              require totalSupply\n              if not ext_call.return_data[0]:\n                  require totalSupply\n                  if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                  32,\n                                  40,\n                                  0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                  mem[204 len 24]\n                  if 0 / totalSupply <= 0:\n                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                  32,\n                                  40,\n                                  0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                  mem[204 len 24]\n              else:\n                  require ext_call.return_data[0]\n                  if balanceOf[this.address] * ext_call.return_data[0] / ext_call.return_data[0] != balanceOf[this.address]:\n                      revert with 0, 'ds-math-mul-overflow'\n                  require totalSupply\n                  if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                  32,\n                                  40,\n                                  0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                  mem[204 len 24]\n                  if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                  32,\n                                  40,\n                                  0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                  mem[204 len 24]\n          if balanceOf[address(this.address)] - balanceOf[this.address] > balanceOf[address(this.address)]:\n              revert with 0, 'ds-math-sub-underflow'\n          balanceOf[address(this.address)] -= balanceOf[this.address]\n          if totalSupply - balanceOf[this.address] > totalSupply:\n              revert with 0, 'ds-math-sub-underflow'\n          totalSupply -= balanceOf[this.address]\n          log Transfer(\n                address from=balanceOf[this.address],\n                address to=this.address,\n                uint256 value=0)\n      else:\n          if not Mask(112, 0, stor8.field_112):\n              if kLast <= 3:\n                  if not ext_call.return_data[0]:\n                      require totalSupply\n                      if not ext_call.return_data[0]:\n                          require totalSupply\n                          if 0 / totalSupply <= 0:\n                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                          32,\n                                          40,\n                                          0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                          mem[204 len 24]\n                      else:\n                          require ext_call.return_data[0]\n                          if balanceOf[this.address] * ext_call.return_data[0] / ext_call.return_data[0] != balanceOf[this.address]:\n                              revert with 0, 'ds-math-mul-overflow'\n                          require totalSupply\n                          if 0 / totalSupply <= 0:\n                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                          32,\n                                          40,\n                                          0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                          mem[204 len 24]\n                          if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                          32,\n                                          40,\n                                          0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                          mem[204 len 24]\n                  else:\n                      require ext_call.return_data[0]\n                      if balanceOf[this.address] * ext_call.return_data[0] / ext_call.return_data[0] != balanceOf[this.address]:\n                          revert with 0, 'ds-math-mul-overflow'\n                      require totalSupply\n                      if not ext_call.return_data[0]:\n                          require totalSupply\n                          if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                          32,\n                                          40,\n                                          0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                          mem[204 len 24]\n                          if 0 / totalSupply <= 0:\n                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                          32,\n                                          40,\n                                          0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                          mem[204 len 24]\n                      else:\n                          require ext_call.return_data[0]\n                          if balanceOf[this.address] * ext_call.return_data[0] / ext_call.return_data[0] != balanceOf[this.address]:\n                              revert with 0, 'ds-math-mul-overflow'\n                          require totalSupply\n                          if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                          32,\n                                          40,\n                                          0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                          mem[204 len 24]\n                          if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                          32,\n                                          40,\n                                          0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                          mem[204 len 24]\n                  if balanceOf[address(this.address)] - balanceOf[this.address] > balanceOf[address(this.address)]:\n                      revert with 0, 'ds-math-sub-underflow'\n                  balanceOf[address(this.address)] -= balanceOf[this.address]\n                  if totalSupply - balanceOf[this.address] > totalSupply:\n                      revert with 0, 'ds-math-sub-underflow'\n                  totalSupply -= balanceOf[this.address]\n                  log Transfer(\n                        address from=balanceOf[this.address],\n                        address to=this.address,\n                        uint256 value=0)\n          else:\n              require Mask(112, 0, stor8.field_112)\n              if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                  revert with 0, 'ds-math-mul-overflow'\n              if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) <= 3:\n                  if not Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112):\n                      if kLast <= 3:\n                          if not ext_call.return_data[0]:\n                              require totalSupply\n                              if not ext_call.return_data[0]:\n                                  require totalSupply\n                                  if 0 / totalSupply <= 0:\n                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                  32,\n                                                  40,\n                                                  0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                                  mem[204 len 24]\n                              else:\n                                  require ext_call.return_data[0]\n                                  if balanceOf[this.address] * ext_call.return_data[0] / ext_call.return_data[0] != balanceOf[this.address]:\n                                      revert with 0, 'ds-math-mul-overflow'\n                                  require totalSupply\n                                  if 0 / totalSupply <= 0:\n                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                  32,\n                                                  40,\n                                                  0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                                  mem[204 len 24]\n                                  if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                  32,\n                                                  40,\n                                                  0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                                  mem[204 len 24]\n                          else:\n                              require ext_call.return_data[0]\n                              if balanceOf[this.address] * ext_call.return_data[0] / ext_call.return_data[0] != balanceOf[this.address]:\n                                  revert with 0, 'ds-math-mul-overflow'\n                              require totalSupply\n                              if not ext_call.return_data[0]:\n                                  require totalSupply\n                                  if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                  32,\n                                                  40,\n                                                  0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                                  mem[204 len 24]\n                                  if 0 / totalSupply <= 0:\n                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                  32,\n                                                  40,\n                                                  0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                                  mem[204 len 24]\n                              else:\n                                  require ext_call.return_data[0]\n                                  if balanceOf[this.address] * ext_call.return_data[0] / ext_call.return_data[0] != balanceOf[this.address]:\n                                      revert with 0, 'ds-math-mul-overflow'\n                                  require totalSupply\n                                  if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                  32,\n                                                  40,\n                                                  0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                                  mem[204 len 24]\n                                  if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                  32,\n                                                  40,\n                                                  0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                                  mem[204 len 24]\n                          if balanceOf[address(this.address)] - balanceOf[this.address] > balanceOf[address(this.address)]:\n                              revert with 0, 'ds-math-sub-underflow'\n                          balanceOf[address(this.address)] -= balanceOf[this.address]\n                          if totalSupply - balanceOf[this.address] > totalSupply:\n                              revert with 0, 'ds-math-sub-underflow'\n                          totalSupply -= balanceOf[this.address]\n                          log Transfer(\n                                address from=balanceOf[this.address],\n                                address to=this.address,\n                                uint256 value=0)\n                  else:\n                      if kLast <= 3:\n                          if not kLast:\n                              if totalSupply != totalSupply:\n                                  revert with 0, 'ds-math-mul-overflow'\n                              if not totalSupply / 5:\n                                  if ext_call.return_data[0]:\n                                      require ext_call.return_data[0]\n                              else:\n                                  if totalSupply + (totalSupply / 5) < totalSupply:\n                                      revert with 0, 'ds-math-add-overflow'\n                                  totalSupply += totalSupply / 5\n                                  if balanceOf[ext_call.return_data[12 len 20]] + (totalSupply / 5) < balanceOf[ext_call.return_data[12 len 20]]:\n                                      revert with 0, 'ds-math-add-overflow'\n                                  balanceOf[address(ext_call.return_data[0])] = balanceOf[ext_call.return_data[12 len 20]] + (totalSupply / 5)\n                                  log Transfer(\n                                        address from=(totalSupply / 5),\n                                        address to=0,\n                                        uint256 value=address(ext_call.return_data[0]))\n                          else:\n                              if not ext_call.return_data[0]:\n                                  require totalSupply\n                                  if not ext_call.return_data[0]:\n                                      require totalSupply\n                                      if 0 / totalSupply <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                                      mem[204 len 24]\n                                  else:\n                                      require ext_call.return_data[0]\n                                      if balanceOf[this.address] * ext_call.return_data[0] / ext_call.return_data[0] != balanceOf[this.address]:\n                                          revert with 0, 'ds-math-mul-overflow'\n                                      require totalSupply\n                                      if 0 / totalSupply <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                                      mem[204 len 24]\n                                      if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                                      mem[204 len 24]\n                              else:\n                                  require ext_call.return_data[0]\n                                  if balanceOf[this.address] * ext_call.return_data[0] / ext_call.return_data[0] != balanceOf[this.address]:\n                                      revert with 0, 'ds-math-mul-overflow'\n                                  require totalSupply\n                                  if not ext_call.return_data[0]:\n                                      require totalSupply\n                                      if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                                      mem[204 len 24]\n                                      if 0 / totalSupply <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                                      mem[204 len 24]\n                                  else:\n                                      require ext_call.return_data[0]\n                                      if balanceOf[this.address] * ext_call.return_data[0] / ext_call.return_data[0] != balanceOf[this.address]:\n                                          revert with 0, 'ds-math-mul-overflow'\n                                      require totalSupply\n                                      if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                                      mem[204 len 24]\n                                      if balanceOf[this.address] * ext_call.return_data[0] / totalSupply <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x59556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e45,\n                                                      mem[204 len 24]\n                              if balanceOf[address(this.address)] - balanceOf[this.address] > balanceOf[address(this.address)]:\n                                  revert with 0, 'ds-math-sub-underflow'\n                              balanceOf[address(this.address)] -= balanceOf[this.address]\n                              if totalSupply - balanceOf[this.address] > totalSupply:\n                                  revert with 0, 'ds-math-sub-underflow'\n                              totalSupply -= balanceOf[this.address]\n                              log Transfer(\n                                    address from=balanceOf[this.address],\n                                    address to=this.address,\n                                    uint256 value=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef mint(address to) payable: \n  require calldata.size - 4 >= 32\n  if stor12 != 1:\n      revert with 0, 'UniswapV2: LOCKED'\n  stor12 = 0\n  require ext_code.size(token0Address)\n  static call token0Address.balanceOf(address account) with:\n          gas gas_remaining wei\n         args this.address\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  require ext_code.size(token1Address)\n  static call token1Address.balanceOf(address account) with:\n          gas gas_remaining wei\n         args this.address\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if ext_call.return_data[0] - Mask(112, 0, stor8.field_0) > ext_call.return_data[0]:\n      revert with 0, 'ds-math-sub-underflow'\n  if ext_call.return_data[0] - Mask(112, 0, stor8.field_112) > ext_call.return_data[0]:\n      revert with 0, 'ds-math-sub-underflow'\n  require ext_code.size(factoryAddress)\n  static call factoryAddress.feeTo() with:\n          gas gas_remaining wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if ext_call.return_data[12 len 20]:\n      if kLast:\n          if not Mask(112, 0, stor8.field_112):\n              if kLast <= 3:\n                  if not totalSupply:\n                      if ext_call.return_data[0] - Mask(112, 0, stor8.field_112):\n                          require ext_call.return_data[0] - Mask(112, 0, stor8.field_112)\n                          if (ext_call.return_data[0] * ext_call.return_data[0]) - (Mask(112, 0, stor8.field_112) * ext_call.return_data[0]) - (ext_call.return_data[0] * Mask(112, 0, stor8.field_0)) + (Mask(112, 0, stor8.field_112) * Mask(112, 0, stor8.field_0)) / ext_call.return_data[0] - Mask(112, 0, stor8.field_112) != ext_call.return_data[0] - Mask(112, 0, stor8.field_0):\n                              revert with 0, 'ds-math-mul-overflow'\n                          if (ext_call.return_data[0] * ext_call.return_data[0]) - (Mask(112, 0, stor8.field_112) * ext_call.return_data[0]) - (ext_call.return_data[0] * Mask(112, 0, stor8.field_0)) + (Mask(112, 0, stor8.field_112) * Mask(112, 0, stor8.field_0)) > 3:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      revert with 0, 'ds-math-sub-underflow'\n                  require totalSupply\n                  if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / totalSupply != ext_call.return_data[0] - Mask(112, 0, stor8.field_0):\n                      revert with 0, 'ds-math-mul-overflow'\n                  require Mask(112, 0, stor8.field_0)\n                  if kLast:\n                      if not totalSupply:\n                          require Mask(112, 0, stor8.field_112)\n                          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < 0 / Mask(112, 0, stor8.field_112):\n                              if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                              32,\n                                              40,\n                                              0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                              mem[204 len 24]\n                              if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n                                  revert with 0, 'ds-math-add-overflow'\n                              totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                              if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n                                  revert with 0, 'ds-math-add-overflow'\n                              balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                              log Transfer(\n                                    address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                                    address to=0,\n                                    uint256 value=to)\n                          else:\n                              if 0 / Mask(112, 0, stor8.field_112) <= 0:\n                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                              32,\n                                              40,\n                                              0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                              mem[204 len 24]\n                              if totalSupply + (0 / Mask(112, 0, stor8.field_112)) < totalSupply:\n                                  revert with 0, 'ds-math-add-overflow'\n                              totalSupply += 0 / Mask(112, 0, stor8.field_112)\n                              if balanceOf[address(to)] + (0 / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n                                  revert with 0, 'ds-math-add-overflow'\n                              balanceOf[address(to)] += 0 / Mask(112, 0, stor8.field_112)\n                              log Transfer(\n                                    address from=(0 / Mask(112, 0, stor8.field_112)),\n                                    address to=0,\n                                    uint256 value=to)\n                          if ext_call.return_data[0] > LOCK8605463013():\n                              revert with 0, 'UniswapV2: OVERFLOW'\n                      else:\n                          require totalSupply\n                          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / totalSupply != ext_call.return_data[0] - Mask(112, 0, stor8.field_112):\n                              revert with 0, 'ds-math-mul-overflow'\n                          require Mask(112, 0, stor8.field_112)\n                          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112):\n                              if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                              32,\n                                              40,\n                                              0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                              mem[204 len 24]\n                              if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n                                  revert with 0, 'ds-math-add-overflow'\n                              totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                              if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n                                  revert with 0, 'ds-math-add-overflow'\n                              balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                              log Transfer(\n                                    address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                                    address to=0,\n                                    uint256 value=to)\n                          else:\n                              if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112) <= 0:\n                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                              32,\n                                              40,\n                                              0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                              mem[204 len 24]\n                              if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < totalSupply:\n                                  revert with 0, 'ds-math-add-overflow'\n                              totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n                              if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n                                  revert with 0, 'ds-math-add-overflow'\n                              balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n                              log Transfer(\n                                    address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)),\n                                    address to=0,\n                                    uint256 value=to)\n                      if ext_call.return_data[0] > LOCK8605463013():\n                          revert with 0, 'UniswapV2: OVERFLOW'\n                  else:\n                      if not totalSupply:\n                          require Mask(112, 0, stor8.field_112)\n                          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < 0 / Mask(112, 0, stor8.field_112):\n                              if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                              32,\n                                              40,\n                                              0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                              mem[204 len 24]\n                              if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n                                  revert with 0, 'ds-math-add-overflow'\n                              totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                              if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n                                  revert with 0, 'ds-math-add-overflow'\n                              balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                              log Transfer(\n                                    address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                                    address to=0,\n                                    uint256 value=to)\n                          else:\n                              if 0 / Mask(112, 0, stor8.field_112) <= 0:\n                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                              32,\n                                              40,\n                                              0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                              mem[204 len 24]\n                              if totalSupply + (0 / Mask(112, 0, stor8.field_112)) < totalSupply:\n                                  revert with 0, 'ds-math-add-overflow'\n                              totalSupply += 0 / Mask(112, 0, stor8.field_112)\n                              if balanceOf[address(to)] + (0 / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n                                  revert with 0, 'ds-math-add-overflow'\n                              balanceOf[address(to)] += 0 / Mask(112, 0, stor8.field_112)\n                              log Transfer(\n                                    address from=(0 / Mask(112, 0, stor8.field_112)),\n                                    address to=0,\n                                    uint256 value=to)\n                          if ext_call.return_data[0] > LOCK8605463013():\n                              revert with 0, 'UniswapV2: OVERFLOW'\n                          if ext_call.return_data[0] > LOCK8605463013():\n                              revert with 0, 'UniswapV2: OVERFLOW'\n                          if uint32(uint32(block.timestamp) - uint32(stor8.field_224)):\n                      else:\n                          require totalSupply\n                          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / totalSupply != ext_call.return_data[0] - Mask(112, 0, stor8.field_112):\n                              revert with 0, 'ds-math-mul-overflow'\n                          require Mask(112, 0, stor8.field_112)\n                          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112):\n                              if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                              32,\n                                              40,\n                                              0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                              mem[204 len 24]\n                              if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n                                  revert with 0, 'ds-math-add-overflow'\n                              totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                              if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n                                  revert with 0, 'ds-math-add-overflow'\n                              balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                              log Transfer(\n                                    address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                                    address to=0,\n                                    uint256 value=to)\n                          else:\n                              if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112) <= 0:\n                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                              32,\n                                              40,\n                                              0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                              mem[204 len 24]\n                              if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < totalSupply:\n                                  revert with 0, 'ds-math-add-overflow'\n                              totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n                              if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n                                  revert with 0, 'ds-math-add-overflow'\n                              balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n                              log Transfer(\n                                    address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)),\n                                    address to=0,\n                                    uint256 value=to)\n                          if ext_call.return_data[0] > LOCK8605463013():\n                              revert with 0, 'UniswapV2: OVERFLOW'\n                          if ext_call.return_data[0] > LOCK8605463013():\n                              revert with 0, 'UniswapV2: OVERFLOW'\n          else:\n              require Mask(112, 0, stor8.field_112)\n              if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                  revert with 0, 'ds-math-mul-overflow'\n              if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) <= 3:\n                  if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112):\n                      if kLast <= 3:\n                          if not kLast:\n                              if totalSupply != totalSupply:\n                                  revert with 0, 'ds-math-mul-overflow'\n                              if not totalSupply / 5:\n                                  if totalSupply:\n                                      require totalSupply\n                                      if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / totalSupply != ext_call.return_data[0] - Mask(112, 0, stor8.field_0):\n                                          revert with 0, 'ds-math-mul-overflow'\n                                      require Mask(112, 0, stor8.field_0)\n                                  else:\n                                      if ext_call.return_data[0] - Mask(112, 0, stor8.field_112):\n                                          require ext_call.return_data[0] - Mask(112, 0, stor8.field_112)\n                                          if (ext_call.return_data[0] * ext_call.return_data[0]) - (Mask(112, 0, stor8.field_112) * ext_call.return_data[0]) - (ext_call.return_data[0] * Mask(112, 0, stor8.field_0)) + (Mask(112, 0, stor8.field_112) * Mask(112, 0, stor8.field_0)) / ext_call.return_data[0] - Mask(112, 0, stor8.field_112) != ext_call.return_data[0] - Mask(112, 0, stor8.field_0):\n                                              revert with 0, 'ds-math-mul-overflow'\n                                          if (ext_call.return_data[0] * ext_call.return_data[0]) - (Mask(112, 0, stor8.field_112) * ext_call.return_data[0]) - (ext_call.return_data[0] * Mask(112, 0, stor8.field_0)) + (Mask(112, 0, stor8.field_112) * Mask(112, 0, stor8.field_0)) <= 3:\n                              else:\n                                  if totalSupply + (totalSupply / 5) < totalSupply:\n                                      revert with 0, 'ds-math-add-overflow'\n                                  totalSupply += totalSupply / 5\n                                  if balanceOf[ext_call.return_data[12 len 20]] + (totalSupply / 5) < balanceOf[ext_call.return_data[12 len 20]]:\n                                      revert with 0, 'ds-math-add-overflow'\n                                  balanceOf[address(ext_call.return_data[0])] = balanceOf[ext_call.return_data[12 len 20]] + (totalSupply / 5)\n                                  log Transfer(\n                                        address from=(totalSupply / 5),\n                                        address to=0,\n                                        uint256 value=address(ext_call.return_data[0]))\n                          else:\n                              if not totalSupply:\n                                  if ext_call.return_data[0] - Mask(112, 0, stor8.field_112):\n                                      require ext_call.return_data[0] - Mask(112, 0, stor8.field_112)\n                                      if (ext_call.return_data[0] * ext_call.return_data[0]) - (Mask(112, 0, stor8.field_112) * ext_call.return_data[0]) - (ext_call.return_data[0] * Mask(112, 0, stor8.field_0)) + (Mask(112, 0, stor8.field_112) * Mask(112, 0, stor8.field_0)) / ext_call.return_data[0] - Mask(112, 0, stor8.field_112) != ext_call.return_data[0] - Mask(112, 0, stor8.field_0):\n                                          revert with 0, 'ds-math-mul-overflow'\n                                      if (ext_call.return_data[0] * ext_call.return_data[0]) - (Mask(112, 0, stor8.field_112) * ext_call.return_data[0]) - (ext_call.return_data[0] * Mask(112, 0, stor8.field_0)) + (Mask(112, 0, stor8.field_112) * Mask(112, 0, stor8.field_0)) > 3:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  revert with 0, 'ds-math-sub-underflow'\n                              require totalSupply\n                              if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / totalSupply != ext_call.return_data[0] - Mask(112, 0, stor8.field_0):\n                                  revert with 0, 'ds-math-mul-overflow'\n                              require Mask(112, 0, stor8.field_0)\n                              if not totalSupply:\n                                  require Mask(112, 0, stor8.field_112)\n                                  if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < 0 / Mask(112, 0, stor8.field_112):\n                                      if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                                      mem[204 len 24]\n                                      if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                                      if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                                      log Transfer(\n                                            address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                                            address to=0,\n                                            uint256 value=to)\n                                  else:\n                                      if 0 / Mask(112, 0, stor8.field_112) <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                                      mem[204 len 24]\n                                      if totalSupply + (0 / Mask(112, 0, stor8.field_112)) < totalSupply:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      totalSupply += 0 / Mask(112, 0, stor8.field_112)\n                                      if balanceOf[address(to)] + (0 / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      balanceOf[address(to)] += 0 / Mask(112, 0, stor8.field_112)\n                                      log Transfer(\n                                            address from=(0 / Mask(112, 0, stor8.field_112)),\n                                            address to=0,\n                                            uint256 value=to)\n                              else:\n                                  require totalSupply\n                                  if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / totalSupply != ext_call.return_data[0] - Mask(112, 0, stor8.field_112):\n                                      revert with 0, 'ds-math-mul-overflow'\n                                  require Mask(112, 0, stor8.field_112)\n                                  if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112):\n                                      if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                                      mem[204 len 24]\n                                      if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                                      if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                                      log Transfer(\n                                            address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                                            address to=0,\n                                            uint256 value=to)\n                                  else:\n                                      if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112) <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                                      mem[204 len 24]\n                                      if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < totalSupply:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n                                      if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n                                      log Transfer(\n                                            address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)),\n                                            address to=0,\n                                            uint256 value=to)\n                  else:\n                      if kLast <= 3:\n                          if not totalSupply:\n                              if ext_call.return_data[0] - Mask(112, 0, stor8.field_112):\n                                  require ext_call.return_data[0] - Mask(112, 0, stor8.field_112)\n                                  if (ext_call.return_data[0] * ext_call.return_data[0]) - (Mask(112, 0, stor8.field_112) * ext_call.return_data[0]) - (ext_call.return_data[0] * Mask(112, 0, stor8.field_0)) + (Mask(112, 0, stor8.field_112) * Mask(112, 0, stor8.field_0)) / ext_call.return_data[0] - Mask(112, 0, stor8.field_112) != ext_call.return_data[0] - Mask(112, 0, stor8.field_0):\n                                      revert with 0, 'ds-math-mul-overflow'\n                                  if (ext_call.return_data[0] * ext_call.return_data[0]) - (Mask(112, 0, stor8.field_112) * ext_call.return_data[0]) - (ext_call.return_data[0] * Mask(112, 0, stor8.field_0)) + (Mask(112, 0, stor8.field_112) * Mask(112, 0, stor8.field_0)) > 3:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert with 0, 'ds-math-sub-underflow'\n                          require totalSupply\n                          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / totalSupply != ext_call.return_data[0] - Mask(112, 0, stor8.field_0):\n                              revert with 0, 'ds-math-mul-overflow'\n                          require Mask(112, 0, stor8.field_0)\n                          if not kLast:\n                              if not totalSupply:\n                                  require Mask(112, 0, stor8.field_112)\n                                  if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < 0 / Mask(112, 0, stor8.field_112):\n                                      if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                                      mem[204 len 24]\n                                      if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                                      if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                                      log Transfer(\n                                            address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                                            address to=0,\n                                            uint256 value=to)\n                                  else:\n                                      if 0 / Mask(112, 0, stor8.field_112) <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                                      mem[204 len 24]\n                                      if totalSupply + (0 / Mask(112, 0, stor8.field_112)) < totalSupply:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      totalSupply += 0 / Mask(112, 0, stor8.field_112)\n                                      if balanceOf[address(to)] + (0 / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      balanceOf[address(to)] += 0 / Mask(112, 0, stor8.field_112)\n                                      log Transfer(\n                                            address from=(0 / Mask(112, 0, stor8.field_112)),\n                                            address to=0,\n                                            uint256 value=to)\n                                  if ext_call.return_data[0] > LOCK8605463013():\n                                      revert with 0, 'UniswapV2: OVERFLOW'\n                                  if ext_call.return_data[0] > LOCK8605463013():\n                                      revert with 0, 'UniswapV2: OVERFLOW'\n                              else:\n                                  require totalSupply\n                                  if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / totalSupply != ext_call.return_data[0] - Mask(112, 0, stor8.field_112):\n                                      revert with 0, 'ds-math-mul-overflow'\n                                  require Mask(112, 0, stor8.field_112)\n                                  if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112):\n                                      if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                                      mem[204 len 24]\n                                      if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                                      if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                                      log Transfer(\n                                            address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                                            address to=0,\n                                            uint256 value=to)\n                                  else:\n                                      if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112) <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                                      mem[204 len 24]\n                                      if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < totalSupply:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n                                      if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n                                      log Transfer(\n                                            address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)),\n                                            address to=0,\n                                            uint256 value=to)\n                          else:\n                              if not totalSupply:\n                                  require Mask(112, 0, stor8.field_112)\n                                  if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < 0 / Mask(112, 0, stor8.field_112):\n                                      if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                                      mem[204 len 24]\n                                      if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                                      if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                                      log Transfer(\n                                            address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                                            address to=0,\n                                            uint256 value=to)\n                                  else:\n                                      if 0 / Mask(112, 0, stor8.field_112) <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                                      mem[204 len 24]\n                                      if totalSupply + (0 / Mask(112, 0, stor8.field_112)) < totalSupply:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      totalSupply += 0 / Mask(112, 0, stor8.field_112)\n                                      if balanceOf[address(to)] + (0 / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      balanceOf[address(to)] += 0 / Mask(112, 0, stor8.field_112)\n                                      log Transfer(\n                                            address from=(0 / Mask(112, 0, stor8.field_112)),\n                                            address to=0,\n                                            uint256 value=to)\n                                  if ext_call.return_data[0] > LOCK8605463013():\n                                      revert with 0, 'UniswapV2: OVERFLOW'\n                              else:\n                                  require totalSupply\n                                  if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / totalSupply != ext_call.return_data[0] - Mask(112, 0, stor8.field_112):\n                                      revert with 0, 'ds-math-mul-overflow'\n                                  require Mask(112, 0, stor8.field_112)\n                                  if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112):\n                                      if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                                      mem[204 len 24]\n                                      if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                                      if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                                      log Transfer(\n                                            address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                                            address to=0,\n                                            uint256 value=to)\n                                  else:\n                                      if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112) <= 0:\n                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                                      32,\n                                                      40,\n                                                      0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                                      mem[204 len 24]\n                                      if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < totalSupply:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n                                      if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n                                          revert with 0, 'ds-math-add-overflow'\n                                      balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n                                      log Transfer(\n                                            address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)),\n                                            address to=0,\n                                            uint256 value=to)\n      else:\n          if not totalSupply:\n              if ext_call.return_data[0] - Mask(112, 0, stor8.field_112):\n                  require ext_call.return_data[0] - Mask(112, 0, stor8.field_112)\n                  if (ext_call.return_data[0] * ext_call.return_data[0]) - (Mask(112, 0, stor8.field_112) * ext_call.return_data[0]) - (ext_call.return_data[0] * Mask(112, 0, stor8.field_0)) + (Mask(112, 0, stor8.field_112) * Mask(112, 0, stor8.field_0)) / ext_call.return_data[0] - Mask(112, 0, stor8.field_112) != ext_call.return_data[0] - Mask(112, 0, stor8.field_0):\n                      revert with 0, 'ds-math-mul-overflow'\n                  if (ext_call.return_data[0] * ext_call.return_data[0]) - (Mask(112, 0, stor8.field_112) * ext_call.return_data[0]) - (ext_call.return_data[0] * Mask(112, 0, stor8.field_0)) + (Mask(112, 0, stor8.field_112) * Mask(112, 0, stor8.field_0)) > 3:\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              revert with 0, 'ds-math-sub-underflow'\n          require totalSupply\n          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / totalSupply != ext_call.return_data[0] - Mask(112, 0, stor8.field_0):\n              revert with 0, 'ds-math-mul-overflow'\n          require Mask(112, 0, stor8.field_0)\n          if not totalSupply:\n              require Mask(112, 0, stor8.field_112)\n              if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < 0 / Mask(112, 0, stor8.field_112):\n                  if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                  32,\n                                  40,\n                                  0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                  mem[204 len 24]\n                  if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n                      revert with 0, 'ds-math-add-overflow'\n                  totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                  if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n                      revert with 0, 'ds-math-add-overflow'\n                  balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                  log Transfer(\n                        address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                        address to=0,\n                        uint256 value=to)\n                  if ext_call.return_data[0] > LOCK8605463013():\n                      revert with 0, 'UniswapV2: OVERFLOW'\n                  if ext_call.return_data[0] > LOCK8605463013():\n                      revert with 0, 'UniswapV2: OVERFLOW'\n                  if uint32(uint32(block.timestamp) - uint32(stor8.field_224)):\n                      if Mask(112, 0, stor8.field_0):\n                          if Mask(112, 0, stor8.field_112):\n                              require Mask(112, 0, stor8.field_0)\n                              price0CumulativeLast += Mask(224, 0, Mask(112, 0, Mask(112, 0, stor8.field_112)) << 112 / Mask(112, 0, stor8.field_0)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                              require Mask(112, 0, stor8.field_112)\n                              price1CumulativeLast += Mask(224, 0, Mask(112, 0, stor8.field_0) / Mask(112, 0, stor8.field_112)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                              Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n                              Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n                              uint32(stor8.field_224) = uint32(block.timestamp)\n                              log Sync(\n                                    uint112 reserve0=ext_call.return_data[0] << 144,\n                                    uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n                  Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n                  uint32(stor8.field_224) = uint32(block.timestamp)\n                  log Sync(\n                        uint112 reserve0=ext_call.return_data[0] << 144,\n                        uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n                  if address(ext_call.return_data[0]):\n                      if not Mask(112, 0, stor8.field_112):\n                          kLast = 0\n                      else:\n                          require Mask(112, 0, stor8.field_112)\n                          if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                              revert with 0, 'ds-math-mul-overflow'\n                          kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n                  log Mint(\n                        address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                        uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                        uint256 mintTokens=caller)\n                  stor12 = 1\n                  return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0))\n              if 0 / Mask(112, 0, stor8.field_112) <= 0:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              40,\n                              0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                              mem[204 len 24]\n              if totalSupply + (0 / Mask(112, 0, stor8.field_112)) < totalSupply:\n                  revert with 0, 'ds-math-add-overflow'\n              totalSupply += 0 / Mask(112, 0, stor8.field_112)\n              if balanceOf[address(to)] + (0 / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n                  revert with 0, 'ds-math-add-overflow'\n              balanceOf[address(to)] += 0 / Mask(112, 0, stor8.field_112)\n              log Transfer(\n                    address from=(0 / Mask(112, 0, stor8.field_112)),\n                    address to=0,\n                    uint256 value=to)\n              if ext_call.return_data[0] > LOCK8605463013():\n                  revert with 0, 'UniswapV2: OVERFLOW'\n              if ext_call.return_data[0] > LOCK8605463013():\n                  revert with 0, 'UniswapV2: OVERFLOW'\n              if uint32(uint32(block.timestamp) - uint32(stor8.field_224)):\n                  if Mask(112, 0, stor8.field_0):\n                      if Mask(112, 0, stor8.field_112):\n                          require Mask(112, 0, stor8.field_0)\n                          price0CumulativeLast += Mask(224, 0, Mask(112, 0, Mask(112, 0, stor8.field_112)) << 112 / Mask(112, 0, stor8.field_0)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                          require Mask(112, 0, stor8.field_112)\n                          price1CumulativeLast += Mask(224, 0, Mask(112, 0, stor8.field_0) / Mask(112, 0, stor8.field_112)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                          Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n                          Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n                          uint32(stor8.field_224) = uint32(block.timestamp)\n                          log Sync(\n                                uint112 reserve0=ext_call.return_data[0] << 144,\n                                uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n              Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n              uint32(stor8.field_224) = uint32(block.timestamp)\n              log Sync(\n                    uint112 reserve0=ext_call.return_data[0] << 144,\n                    uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n              if address(ext_call.return_data[0]):\n                  if not Mask(112, 0, stor8.field_112):\n                      kLast = 0\n                  else:\n                      require Mask(112, 0, stor8.field_112)\n                      if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                          revert with 0, 'ds-math-mul-overflow'\n                      kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n              log Mint(\n                    address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                    uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                    uint256 mintTokens=caller)\n              stor12 = 1\n              return (0 / Mask(112, 0, stor8.field_112))\n          require totalSupply\n          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / totalSupply != ext_call.return_data[0] - Mask(112, 0, stor8.field_112):\n              revert with 0, 'ds-math-mul-overflow'\n          require Mask(112, 0, stor8.field_112)\n          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112):\n              if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              40,\n                              0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                              mem[204 len 24]\n              if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n                  revert with 0, 'ds-math-add-overflow'\n              totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n              if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n                  revert with 0, 'ds-math-add-overflow'\n              balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n              log Transfer(\n                    address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                    address to=0,\n                    uint256 value=to)\n              if ext_call.return_data[0] > LOCK8605463013():\n                  revert with 0, 'UniswapV2: OVERFLOW'\n              if ext_call.return_data[0] > LOCK8605463013():\n                  revert with 0, 'UniswapV2: OVERFLOW'\n              if not uint32(uint32(block.timestamp) - uint32(stor8.field_224)):\n                  Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n                  Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n                  uint32(stor8.field_224) = uint32(block.timestamp)\n                  log Sync(\n                        uint112 reserve0=ext_call.return_data[0] << 144,\n                        uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n                  if address(ext_call.return_data[0]):\n                      if not Mask(112, 0, stor8.field_112):\n                          kLast = 0\n                      else:\n                          require Mask(112, 0, stor8.field_112)\n                          if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                              revert with 0, 'ds-math-mul-overflow'\n                          kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n                  log Mint(\n                        address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                        uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                        uint256 mintTokens=caller)\n                  stor12 = 1\n                  return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0))\n              if not Mask(112, 0, stor8.field_0):\n                  Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n                  Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n                  uint32(stor8.field_224) = uint32(block.timestamp)\n                  log Sync(\n                        uint112 reserve0=ext_call.return_data[0] << 144,\n                        uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n                  if address(ext_call.return_data[0]):\n                      if not Mask(112, 0, stor8.field_112):\n                          kLast = 0\n                      else:\n                          require Mask(112, 0, stor8.field_112)\n                          if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                              revert with 0, 'ds-math-mul-overflow'\n                          kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n                  log Mint(\n                        address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                        uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                        uint256 mintTokens=caller)\n                  stor12 = 1\n                  return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0))\n              if Mask(112, 0, stor8.field_112):\n                  require Mask(112, 0, stor8.field_0)\n                  price0CumulativeLast += Mask(224, 0, Mask(112, 0, Mask(112, 0, stor8.field_112)) << 112 / Mask(112, 0, stor8.field_0)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                  require Mask(112, 0, stor8.field_112)\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n              Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n              uint32(stor8.field_224) = uint32(block.timestamp)\n              log Sync(\n                    uint112 reserve0=ext_call.return_data[0] << 144,\n                    uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n              if not address(ext_call.return_data[0]):\n                  log Mint(\n                        address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                        uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                        uint256 mintTokens=caller)\n                  stor12 = 1\n                  return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0))\n              if not Mask(112, 0, stor8.field_112):\n                  kLast = 0\n                  log Mint(\n                        address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                        uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                        uint256 mintTokens=caller)\n                  stor12 = 1\n                  return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0))\n          else:\n              if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112) <= 0:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              40,\n                              0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                              mem[204 len 24]\n              if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < totalSupply:\n                  revert with 0, 'ds-math-add-overflow'\n              totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n              if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n                  revert with 0, 'ds-math-add-overflow'\n              balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n              log Transfer(\n                    address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)),\n                    address to=0,\n                    uint256 value=to)\n              if ext_call.return_data[0] > LOCK8605463013():\n                  revert with 0, 'UniswapV2: OVERFLOW'\n              if ext_call.return_data[0] > LOCK8605463013():\n                  revert with 0, 'UniswapV2: OVERFLOW'\n              if not uint32(uint32(block.timestamp) - uint32(stor8.field_224)):\n                  Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n                  Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n                  uint32(stor8.field_224) = uint32(block.timestamp)\n                  log Sync(\n                        uint112 reserve0=ext_call.return_data[0] << 144,\n                        uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n                  if address(ext_call.return_data[0]):\n                      if not Mask(112, 0, stor8.field_112):\n                          kLast = 0\n                      else:\n                          require Mask(112, 0, stor8.field_112)\n                          if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                              revert with 0, 'ds-math-mul-overflow'\n                          kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n                  log Mint(\n                        address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                        uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                        uint256 mintTokens=caller)\n                  stor12 = 1\n                  return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112))\n              if not Mask(112, 0, stor8.field_0):\n                  Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n                  Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n                  uint32(stor8.field_224) = uint32(block.timestamp)\n                  log Sync(\n                        uint112 reserve0=ext_call.return_data[0] << 144,\n                        uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n                  if address(ext_call.return_data[0]):\n                      if not Mask(112, 0, stor8.field_112):\n                          kLast = 0\n                      else:\n                          require Mask(112, 0, stor8.field_112)\n                          if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                              revert with 0, 'ds-math-mul-overflow'\n                          kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n                  log Mint(\n                        address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                        uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                        uint256 mintTokens=caller)\n                  stor12 = 1\n                  return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112))\n              if Mask(112, 0, stor8.field_112):\n                  require Mask(112, 0, stor8.field_0)\n                  price0CumulativeLast += Mask(224, 0, Mask(112, 0, Mask(112, 0, stor8.field_112)) << 112 / Mask(112, 0, stor8.field_0)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                  require Mask(112, 0, stor8.field_112)\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n              Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n              uint32(stor8.field_224) = uint32(block.timestamp)\n              log Sync(\n                    uint112 reserve0=ext_call.return_data[0] << 144,\n                    uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n              if not address(ext_call.return_data[0]):\n                  log Mint(\n                        address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                        uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                        uint256 mintTokens=caller)\n                  stor12 = 1\n                  return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112))\n              if not Mask(112, 0, stor8.field_112):\n                  kLast = 0\n                  log Mint(\n                        address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                        uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                        uint256 mintTokens=caller)\n                  stor12 = 1\n                  return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112))\n          ('bool', ('type', 112, ('field', 112, ('stor', ('name', 'stor8', 8)))))\n          require Mask(112, 0, stor8.field_112)\n          if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n              revert with 0, 'ds-math-mul-overflow'\n          kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n          log Mint(\n                address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                uint256 mintTokens=caller)\n          stor12 = 1\n  else:\n      if not kLast:\n          if not totalSupply:\n              if ext_call.return_data[0] - Mask(112, 0, stor8.field_112):\n                  require ext_call.return_data[0] - Mask(112, 0, stor8.field_112)\n                  if (ext_call.return_data[0] * ext_call.return_data[0]) - (Mask(112, 0, stor8.field_112) * ext_call.return_data[0]) - (ext_call.return_data[0] * Mask(112, 0, stor8.field_0)) + (Mask(112, 0, stor8.field_112) * Mask(112, 0, stor8.field_0)) / ext_call.return_data[0] - Mask(112, 0, stor8.field_112) != ext_call.return_data[0] - Mask(112, 0, stor8.field_0):\n                      revert with 0, 'ds-math-mul-overflow'\n                  if (ext_call.return_data[0] * ext_call.return_data[0]) - (Mask(112, 0, stor8.field_112) * ext_call.return_data[0]) - (ext_call.return_data[0] * Mask(112, 0, stor8.field_0)) + (Mask(112, 0, stor8.field_112) * Mask(112, 0, stor8.field_0)) > 3:\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              revert with 0, 'ds-math-sub-underflow'\n          require totalSupply\n          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / totalSupply != ext_call.return_data[0] - Mask(112, 0, stor8.field_0):\n              revert with 0, 'ds-math-mul-overflow'\n          require Mask(112, 0, stor8.field_0)\n          if not totalSupply:\n              require Mask(112, 0, stor8.field_112)\n              if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < 0 / Mask(112, 0, stor8.field_112):\n                  if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                                  32,\n                                  40,\n                                  0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                                  mem[204 len 24]\n                  if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n                      revert with 0, 'ds-math-add-overflow'\n                  totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                  if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n                      revert with 0, 'ds-math-add-overflow'\n                  balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n                  log Transfer(\n                        address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                        address to=0,\n                        uint256 value=to)\n                  if ext_call.return_data[0] > LOCK8605463013():\n                      revert with 0, 'UniswapV2: OVERFLOW'\n                  if ext_call.return_data[0] > LOCK8605463013():\n                      revert with 0, 'UniswapV2: OVERFLOW'\n                  if uint32(uint32(block.timestamp) - uint32(stor8.field_224)):\n                      if Mask(112, 0, stor8.field_0):\n                          if Mask(112, 0, stor8.field_112):\n                              require Mask(112, 0, stor8.field_0)\n                              price0CumulativeLast += Mask(224, 0, Mask(112, 0, Mask(112, 0, stor8.field_112)) << 112 / Mask(112, 0, stor8.field_0)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                              require Mask(112, 0, stor8.field_112)\n                              price1CumulativeLast += Mask(224, 0, Mask(112, 0, stor8.field_0) / Mask(112, 0, stor8.field_112)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                              Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n                              Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n                              uint32(stor8.field_224) = uint32(block.timestamp)\n                              log Sync(\n                                    uint112 reserve0=ext_call.return_data[0] << 144,\n                                    uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n                  Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n                  uint32(stor8.field_224) = uint32(block.timestamp)\n                  log Sync(\n                        uint112 reserve0=ext_call.return_data[0] << 144,\n                        uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n                  if address(ext_call.return_data[0]):\n                      if not Mask(112, 0, stor8.field_112):\n                          kLast = 0\n                      else:\n                          require Mask(112, 0, stor8.field_112)\n                          if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                              revert with 0, 'ds-math-mul-overflow'\n                          kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n                  log Mint(\n                        address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                        uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                        uint256 mintTokens=caller)\n                  stor12 = 1\n                  return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0))\n              if 0 / Mask(112, 0, stor8.field_112) <= 0:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              40,\n                              0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                              mem[204 len 24]\n              if totalSupply + (0 / Mask(112, 0, stor8.field_112)) < totalSupply:\n                  revert with 0, 'ds-math-add-overflow'\n              totalSupply += 0 / Mask(112, 0, stor8.field_112)\n              if balanceOf[address(to)] + (0 / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n                  revert with 0, 'ds-math-add-overflow'\n              balanceOf[address(to)] += 0 / Mask(112, 0, stor8.field_112)\n              log Transfer(\n                    address from=(0 / Mask(112, 0, stor8.field_112)),\n                    address to=0,\n                    uint256 value=to)\n              if ext_call.return_data[0] > LOCK8605463013():\n                  revert with 0, 'UniswapV2: OVERFLOW'\n              if ext_call.return_data[0] > LOCK8605463013():\n                  revert with 0, 'UniswapV2: OVERFLOW'\n              if uint32(uint32(block.timestamp) - uint32(stor8.field_224)):\n                  if Mask(112, 0, stor8.field_0):\n                      if Mask(112, 0, stor8.field_112):\n                          require Mask(112, 0, stor8.field_0)\n                          price0CumulativeLast += Mask(224, 0, Mask(112, 0, Mask(112, 0, stor8.field_112)) << 112 / Mask(112, 0, stor8.field_0)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                          require Mask(112, 0, stor8.field_112)\n                          price1CumulativeLast += Mask(224, 0, Mask(112, 0, stor8.field_0) / Mask(112, 0, stor8.field_112)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                          Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n                          Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n                          uint32(stor8.field_224) = uint32(block.timestamp)\n                          log Sync(\n                                uint112 reserve0=ext_call.return_data[0] << 144,\n                                uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n              Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n              uint32(stor8.field_224) = uint32(block.timestamp)\n              log Sync(\n                    uint112 reserve0=ext_call.return_data[0] << 144,\n                    uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n              if address(ext_call.return_data[0]):\n                  if not Mask(112, 0, stor8.field_112):\n                      kLast = 0\n                  else:\n                      require Mask(112, 0, stor8.field_112)\n                      if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                          revert with 0, 'ds-math-mul-overflow'\n                      kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n              log Mint(\n                    address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                    uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                    uint256 mintTokens=caller)\n              stor12 = 1\n              return (0 / Mask(112, 0, stor8.field_112))\n          require totalSupply\n          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / totalSupply != ext_call.return_data[0] - Mask(112, 0, stor8.field_112):\n              revert with 0, 'ds-math-mul-overflow'\n          require Mask(112, 0, stor8.field_112)\n          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112):\n              if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              40,\n                              0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                              mem[204 len 24]\n              if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n                  revert with 0, 'ds-math-add-overflow'\n              totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n              if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n                  revert with 0, 'ds-math-add-overflow'\n              balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n              log Transfer(\n                    address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                    address to=0,\n                    uint256 value=to)\n              if ext_call.return_data[0] > LOCK8605463013():\n                  revert with 0, 'UniswapV2: OVERFLOW'\n              if ext_call.return_data[0] > LOCK8605463013():\n                  revert with 0, 'UniswapV2: OVERFLOW'\n              if uint32(uint32(block.timestamp) - uint32(stor8.field_224)):\n                  if Mask(112, 0, stor8.field_0):\n                      if Mask(112, 0, stor8.field_112):\n                          require Mask(112, 0, stor8.field_0)\n                          price0CumulativeLast += Mask(224, 0, Mask(112, 0, Mask(112, 0, stor8.field_112)) << 112 / Mask(112, 0, stor8.field_0)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                          require Mask(112, 0, stor8.field_112)\n                          price1CumulativeLast += Mask(224, 0, Mask(112, 0, stor8.field_0) / Mask(112, 0, stor8.field_112)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n              Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n              uint32(stor8.field_224) = uint32(block.timestamp)\n              log Sync(\n                    uint112 reserve0=ext_call.return_data[0] << 144,\n                    uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n              if address(ext_call.return_data[0]):\n                  if not Mask(112, 0, stor8.field_112):\n                      kLast = 0\n                  else:\n                      require Mask(112, 0, stor8.field_112)\n                      if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                          revert with 0, 'ds-math-mul-overflow'\n                      kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n              log Mint(\n                    address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                    uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                    uint256 mintTokens=caller)\n              stor12 = 1\n              return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0))\n          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112) <= 0:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          40,\n                          0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                          mem[204 len 24]\n          if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < totalSupply:\n              revert with 0, 'ds-math-add-overflow'\n          totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n          if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n              revert with 0, 'ds-math-add-overflow'\n          balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n          log Transfer(\n                address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)),\n                address to=0,\n                uint256 value=to)\n          if ext_call.return_data[0] > LOCK8605463013():\n              revert with 0, 'UniswapV2: OVERFLOW'\n          if ext_call.return_data[0] > LOCK8605463013():\n              revert with 0, 'UniswapV2: OVERFLOW'\n          if uint32(uint32(block.timestamp) - uint32(stor8.field_224)):\n              if Mask(112, 0, stor8.field_0):\n                  if Mask(112, 0, stor8.field_112):\n                      require Mask(112, 0, stor8.field_0)\n                      price0CumulativeLast += Mask(224, 0, Mask(112, 0, Mask(112, 0, stor8.field_112)) << 112 / Mask(112, 0, stor8.field_0)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                      require Mask(112, 0, stor8.field_112)\n                      price1CumulativeLast += Mask(224, 0, Mask(112, 0, stor8.field_0) / Mask(112, 0, stor8.field_112)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n          Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n          uint32(stor8.field_224) = uint32(block.timestamp)\n          log Sync(\n                uint112 reserve0=ext_call.return_data[0] << 144,\n                uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n          if address(ext_call.return_data[0]):\n              if not Mask(112, 0, stor8.field_112):\n                  kLast = 0\n              else:\n                  require Mask(112, 0, stor8.field_112)\n                  if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                      revert with 0, 'ds-math-mul-overflow'\n                  kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n          log Mint(\n                address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                uint256 mintTokens=caller)\n          stor12 = 1\n          return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112))\n      kLast = 0\n      if not totalSupply:\n          if ext_call.return_data[0] - Mask(112, 0, stor8.field_112):\n              require ext_call.return_data[0] - Mask(112, 0, stor8.field_112)\n              if (ext_call.return_data[0] * ext_call.return_data[0]) - (Mask(112, 0, stor8.field_112) * ext_call.return_data[0]) - (ext_call.return_data[0] * Mask(112, 0, stor8.field_0)) + (Mask(112, 0, stor8.field_112) * Mask(112, 0, stor8.field_0)) / ext_call.return_data[0] - Mask(112, 0, stor8.field_112) != ext_call.return_data[0] - Mask(112, 0, stor8.field_0):\n                  revert with 0, 'ds-math-mul-overflow'\n              if (ext_call.return_data[0] * ext_call.return_data[0]) - (Mask(112, 0, stor8.field_112) * ext_call.return_data[0]) - (ext_call.return_data[0] * Mask(112, 0, stor8.field_0)) + (Mask(112, 0, stor8.field_112) * Mask(112, 0, stor8.field_0)) > 3:\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          revert with 0, 'ds-math-sub-underflow'\n      require totalSupply\n      if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / totalSupply != ext_call.return_data[0] - Mask(112, 0, stor8.field_0):\n          revert with 0, 'ds-math-mul-overflow'\n      require Mask(112, 0, stor8.field_0)\n      if not totalSupply:\n          require Mask(112, 0, stor8.field_112)\n          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < 0 / Mask(112, 0, stor8.field_112):\n              if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              40,\n                              0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                              mem[204 len 24]\n              if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n                  revert with 0, 'ds-math-add-overflow'\n              totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n              if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n                  revert with 0, 'ds-math-add-overflow'\n              balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n              log Transfer(\n                    address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                    address to=0,\n                    uint256 value=to)\n              if ext_call.return_data[0] > LOCK8605463013():\n                  revert with 0, 'UniswapV2: OVERFLOW'\n              if ext_call.return_data[0] > LOCK8605463013():\n                  revert with 0, 'UniswapV2: OVERFLOW'\n              if uint32(uint32(block.timestamp) - uint32(stor8.field_224)):\n                  if Mask(112, 0, stor8.field_0):\n                      if Mask(112, 0, stor8.field_112):\n                          require Mask(112, 0, stor8.field_0)\n                          price0CumulativeLast += Mask(224, 0, Mask(112, 0, Mask(112, 0, stor8.field_112)) << 112 / Mask(112, 0, stor8.field_0)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                          require Mask(112, 0, stor8.field_112)\n                          price1CumulativeLast += Mask(224, 0, Mask(112, 0, stor8.field_0) / Mask(112, 0, stor8.field_112)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                          Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n                          Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n                          uint32(stor8.field_224) = uint32(block.timestamp)\n                          log Sync(\n                                uint112 reserve0=ext_call.return_data[0] << 144,\n                                uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n              Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n              uint32(stor8.field_224) = uint32(block.timestamp)\n              log Sync(\n                    uint112 reserve0=ext_call.return_data[0] << 144,\n                    uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n              if address(ext_call.return_data[0]):\n                  if not Mask(112, 0, stor8.field_112):\n                      kLast = 0\n                  else:\n                      require Mask(112, 0, stor8.field_112)\n                      if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                          revert with 0, 'ds-math-mul-overflow'\n                      kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n              log Mint(\n                    address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                    uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                    uint256 mintTokens=caller)\n              stor12 = 1\n              return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0))\n          if 0 / Mask(112, 0, stor8.field_112) <= 0:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          40,\n                          0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                          mem[204 len 24]\n          if totalSupply + (0 / Mask(112, 0, stor8.field_112)) < totalSupply:\n              revert with 0, 'ds-math-add-overflow'\n          totalSupply += 0 / Mask(112, 0, stor8.field_112)\n          if balanceOf[address(to)] + (0 / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n              revert with 0, 'ds-math-add-overflow'\n          balanceOf[address(to)] += 0 / Mask(112, 0, stor8.field_112)\n          log Transfer(\n                address from=(0 / Mask(112, 0, stor8.field_112)),\n                address to=0,\n                uint256 value=to)\n          if ext_call.return_data[0] > LOCK8605463013():\n              revert with 0, 'UniswapV2: OVERFLOW'\n          if ext_call.return_data[0] > LOCK8605463013():\n              revert with 0, 'UniswapV2: OVERFLOW'\n          if uint32(uint32(block.timestamp) - uint32(stor8.field_224)):\n              if Mask(112, 0, stor8.field_0):\n                  if Mask(112, 0, stor8.field_112):\n                      require Mask(112, 0, stor8.field_0)\n                      price0CumulativeLast += Mask(224, 0, Mask(112, 0, Mask(112, 0, stor8.field_112)) << 112 / Mask(112, 0, stor8.field_0)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                      require Mask(112, 0, stor8.field_112)\n                      price1CumulativeLast += Mask(224, 0, Mask(112, 0, stor8.field_0) / Mask(112, 0, stor8.field_112)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n                      Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n                      Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n                      uint32(stor8.field_224) = uint32(block.timestamp)\n                      log Sync(\n                            uint112 reserve0=ext_call.return_data[0] << 144,\n                            uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n          Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n          uint32(stor8.field_224) = uint32(block.timestamp)\n          log Sync(\n                uint112 reserve0=ext_call.return_data[0] << 144,\n                uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n          if address(ext_call.return_data[0]):\n              if not Mask(112, 0, stor8.field_112):\n                  kLast = 0\n              else:\n                  require Mask(112, 0, stor8.field_112)\n                  if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                      revert with 0, 'ds-math-mul-overflow'\n                  kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n          log Mint(\n                address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                uint256 mintTokens=caller)\n          stor12 = 1\n          return (0 / Mask(112, 0, stor8.field_112))\n      require totalSupply\n      if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / totalSupply != ext_call.return_data[0] - Mask(112, 0, stor8.field_112):\n          revert with 0, 'ds-math-mul-overflow'\n      require Mask(112, 0, stor8.field_112)\n      if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) < (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112):\n          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0) <= 0:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          40,\n                          0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                          mem[204 len 24]\n          if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < totalSupply:\n              revert with 0, 'ds-math-add-overflow'\n          totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n          if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)) < balanceOf[address(to)]:\n              revert with 0, 'ds-math-add-overflow'\n          balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)\n          log Transfer(\n                address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0)),\n                address to=0,\n                uint256 value=to)\n          if ext_call.return_data[0] > LOCK8605463013():\n              revert with 0, 'UniswapV2: OVERFLOW'\n          if ext_call.return_data[0] > LOCK8605463013():\n              revert with 0, 'UniswapV2: OVERFLOW'\n          if not uint32(uint32(block.timestamp) - uint32(stor8.field_224)):\n              Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n              Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n              uint32(stor8.field_224) = uint32(block.timestamp)\n              log Sync(\n                    uint112 reserve0=ext_call.return_data[0] << 144,\n                    uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n              if address(ext_call.return_data[0]):\n                  if not Mask(112, 0, stor8.field_112):\n                      kLast = 0\n                  else:\n                      require Mask(112, 0, stor8.field_112)\n                      if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                          revert with 0, 'ds-math-mul-overflow'\n                      kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n              log Mint(\n                    address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                    uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                    uint256 mintTokens=caller)\n              stor12 = 1\n              return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0))\n          if not Mask(112, 0, stor8.field_0):\n              Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n              Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n              uint32(stor8.field_224) = uint32(block.timestamp)\n              log Sync(\n                    uint112 reserve0=ext_call.return_data[0] << 144,\n                    uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n              if address(ext_call.return_data[0]):\n                  if not Mask(112, 0, stor8.field_112):\n                      kLast = 0\n                  else:\n                      require Mask(112, 0, stor8.field_112)\n                      if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                          revert with 0, 'ds-math-mul-overflow'\n                      kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n              log Mint(\n                    address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                    uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                    uint256 mintTokens=caller)\n              stor12 = 1\n              return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0))\n          if Mask(112, 0, stor8.field_112):\n              require Mask(112, 0, stor8.field_0)\n              price0CumulativeLast += Mask(224, 0, Mask(112, 0, Mask(112, 0, stor8.field_112)) << 112 / Mask(112, 0, stor8.field_0)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n              require Mask(112, 0, stor8.field_112)\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n          Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n          uint32(stor8.field_224) = uint32(block.timestamp)\n          log Sync(\n                uint112 reserve0=ext_call.return_data[0] << 144,\n                uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n          if not address(ext_call.return_data[0]):\n              log Mint(\n                    address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                    uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                    uint256 mintTokens=caller)\n              stor12 = 1\n              return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0))\n          if not Mask(112, 0, stor8.field_112):\n              kLast = 0\n              log Mint(\n                    address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                    uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                    uint256 mintTokens=caller)\n              stor12 = 1\n              return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_0) * totalSupply) / Mask(112, 0, stor8.field_0))\n      else:\n          if (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112) <= 0:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          40,\n                          0x44556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e5445,\n                          mem[204 len 24]\n          if totalSupply + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < totalSupply:\n              revert with 0, 'ds-math-add-overflow'\n          totalSupply += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n          if balanceOf[address(to)] + ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)) < balanceOf[address(to)]:\n              revert with 0, 'ds-math-add-overflow'\n          balanceOf[address(to)] += (ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)\n          log Transfer(\n                address from=((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112)),\n                address to=0,\n                uint256 value=to)\n          if ext_call.return_data[0] > LOCK8605463013():\n              revert with 0, 'UniswapV2: OVERFLOW'\n          if ext_call.return_data[0] > LOCK8605463013():\n              revert with 0, 'UniswapV2: OVERFLOW'\n          if not uint32(uint32(block.timestamp) - uint32(stor8.field_224)):\n              Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n              Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n              uint32(stor8.field_224) = uint32(block.timestamp)\n              log Sync(\n                    uint112 reserve0=ext_call.return_data[0] << 144,\n                    uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n              if address(ext_call.return_data[0]):\n                  if not Mask(112, 0, stor8.field_112):\n                      kLast = 0\n                  else:\n                      require Mask(112, 0, stor8.field_112)\n                      if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                          revert with 0, 'ds-math-mul-overflow'\n                      kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n              log Mint(\n                    address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                    uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                    uint256 mintTokens=caller)\n              stor12 = 1\n              return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112))\n          if not Mask(112, 0, stor8.field_0):\n              Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n              Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n              uint32(stor8.field_224) = uint32(block.timestamp)\n              log Sync(\n                    uint112 reserve0=ext_call.return_data[0] << 144,\n                    uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n              if address(ext_call.return_data[0]):\n                  if not Mask(112, 0, stor8.field_112):\n                      kLast = 0\n                  else:\n                      require Mask(112, 0, stor8.field_112)\n                      if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n                          revert with 0, 'ds-math-mul-overflow'\n                      kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n              log Mint(\n                    address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                    uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                    uint256 mintTokens=caller)\n              stor12 = 1\n              return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112))\n          if Mask(112, 0, stor8.field_112):\n              require Mask(112, 0, stor8.field_0)\n              price0CumulativeLast += Mask(224, 0, Mask(112, 0, Mask(112, 0, stor8.field_112)) << 112 / Mask(112, 0, stor8.field_0)) * uint32(uint32(block.timestamp) - uint32(stor8.field_224))\n              require Mask(112, 0, stor8.field_112)\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          Mask(112, 0, stor8.field_0) = Mask(112, 0, ext_call.return_data[0])\n          Mask(112, 0, stor8.field_112) = Mask(112, 0, ext_call.return_data[0])\n          uint32(stor8.field_224) = uint32(block.timestamp)\n          log Sync(\n                uint112 reserve0=ext_call.return_data[0] << 144,\n                uint112 reserve1=Mask(112, 0, ext_call.return_data[0]))\n          if not address(ext_call.return_data[0]):\n              log Mint(\n                    address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                    uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                    uint256 mintTokens=caller)\n              stor12 = 1\n              return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112))\n          if not Mask(112, 0, stor8.field_112):\n              kLast = 0\n              log Mint(\n                    address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n                    uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n                    uint256 mintTokens=caller)\n              stor12 = 1\n              return ((ext_call.return_data[0] * totalSupply) - (Mask(112, 0, stor8.field_112) * totalSupply) / Mask(112, 0, stor8.field_112))\n      ('bool', ('type', 112, ('field', 112, ('stor', ('name', 'stor8', 8)))))\n      require Mask(112, 0, stor8.field_112)\n      if Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112) / Mask(112, 0, stor8.field_112) != Mask(112, 0, stor8.field_0):\n          revert with 0, 'ds-math-mul-overflow'\n      kLast = Mask(112, 0, stor8.field_0) * Mask(112, 0, stor8.field_112)\n      log Mint(\n            address minter=ext_call.return_data[0] - Mask(112, 0, stor8.field_0),\n            uint256 mintAmount=ext_call.return_data[0] - Mask(112, 0, stor8.field_112),\n            uint256 mintTokens=caller)\n      stor12 = 1\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n",
	"language": "Solidity",
	"status": "This model's maximum context length is 32768 tokens. However, your messages resulted in 44689 tokens. Please reduce the length of the messages."
}