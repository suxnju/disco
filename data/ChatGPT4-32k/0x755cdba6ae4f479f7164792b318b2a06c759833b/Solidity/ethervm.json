{
	"address": "0x755cdba6ae4f479f7164792b318b2a06c759833b",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here's a Solidity version of the provided decompiled code:\n\n```solidity\npragma solidity ^0.8.0;\n\ncontract Contract { \n    address private addr1 = 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n    address private addr2 = 0xda4a4626d3e16e094de3225a751aab7128e96526;\n    \n    function main() public {\n        bytes32 msgData = keccak256(abi.encodePacked(msg.data));\n        require(msgData != bytes32(0x2526d960), \"main: Invalid msg.data\");\n        require(msg.sender == addr2, \"main: Unauthorized\");\n        func_01E4();\n    }\n    \n    function func_00CB(address arg1, uint256 arg2, uint256 arg3, bytes32 arg4) private {\n        require(msg.sender != addr2, \"func_00CB: Unauthorized\");\n        require(arg2 == 0x3ccfd60b, \"func_00CB: Unexpected arg2 value\");\n        require(arg3 == 0x70a08231, \"func_00CB: Unexpected arg3 value\");\n        func_00CB(arg1, arg2, arg3, arg4);\n    }\n    \n    function func_01E4() private {\n        require(msg.sender == addr2, \"func_01E4: Unauthorized\");\n        bool success;\n        bytes memory data;\n        (success, data) = addr2.call{value: address(this).balance}(\"\");\n        require(success, \"func_01E4: transfer failed\");\n    }\n}\n```\n\nNote: This version of the code doesn't fully reproduce the behavior of the original code, as some of the operations in the decompiled code aren't directly translatable to Solidity. For example, the operations with bitwise shifts and the direct manipulation of memory aren't doable in Solidity, so they were left out of the Solidity version.",
				"role": "assistant"
			}
		}
	],
	"created": 1700470517,
	"id": "chatcmpl-8MuLlA5r18VB5mSWXTTZErtQzb2WR",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n        var var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n    \n        if (var0 != 0x2526d960) { goto label_0019; }\n    \n    label_003C:\n        var var1 = 0x003a;\n    \n        if (msg.sender == 0xda4a4626d3e16e094de3225a751aab7128e96526) {\n            func_01E4();\n            stop();\n        } else {\n        label_0002:\n            memory[0x40:0x60] = var1;\n            var1 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (var1 == 0x2526d960) { goto label_003C; }\n        \n        label_0019:\n        \n            if (var1 == 0x3ccfd60b) {\n                var var2 = 0x003a;\n                var var3 = 0x00;\n                var var4 = 0x02 ** 0xa0 - 0x01 & 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n                var var5 = 0x70a08231;\n                var temp0 = memory[0x40:0x60];\n                memory[temp0:temp0 + 0x20] = var5 * 0x02 ** 0xe0;\n                var temp1 = temp0 + 0x04;\n                memory[temp1:temp1 + 0x20] = msg.sender;\n                var var6 = temp1 + 0x20;\n                var temp2 = memory[0x40:0x60];\n                var temp3;\n                temp3, memory[temp2:temp2 + 0x20] = address(var4).call.gas(msg.gas - 0x61da)(memory[temp2:temp2 + var6 - temp2]);\n            \n                if (!temp3) { goto label_0002; }\n            \n                func_00CB(var3, var4, var5, var6);\n                stop();\n            } else if (var1 == 0xeedcf50a) {\n                var2 = 0x01c5;\n                var3 = 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n            \n            label_01C5:\n                var temp4 = memory[0x40:0x60];\n                memory[temp4:temp4 + 0x20] = var3 & 0x02 ** 0xa0 - 0x01;\n                var temp5 = memory[0x40:0x60];\n                return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n            } else if (var1 == 0xfdf97cb2) {\n                var2 = 0x01c5;\n                var3 = 0xda4a4626d3e16e094de3225a751aab7128e96526;\n                goto label_01C5;\n            } else { stop(); }\n        }\n    }\n    \n    function func_00CB(var arg0, var arg1, var arg2, var arg3) {\n        var temp0 = memory[0x40:0x60];\n        var temp1 = memory[temp0:temp0 + 0x20];\n        memory[temp0:temp0 + 0x20] = 0x23b872dd00000000000000000000000000000000000000000000000000000000;\n        var temp2 = 0x02 ** 0xa0 - 0x01;\n        memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = temp2 & msg.sender;\n        memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = address(this) & temp2;\n        memory[temp0 + 0x44:temp0 + 0x44 + 0x20] = temp1;\n        var temp3 = memory[0x40:0x60];\n        arg0 = temp1;\n        arg1 = 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n        arg2 = 0x23b872dd;\n        arg3 = temp0 + 0x64;\n        var temp4;\n        temp4, memory[temp3:temp3 + 0x20] = address(arg1).call.gas(msg.gas - 0x61da)(memory[temp3:temp3 + temp0 - temp3 + 0x64]);\n    \n        if (!temp4) {\n        label_0002:\n            memory[0x40:0x60] = arg3;\n            arg3 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (arg3 == 0x2526d960) {\n                var var0 = 0x003a;\n            \n                if (msg.sender != 0xda4a4626d3e16e094de3225a751aab7128e96526) { goto label_0002; }\n            \n                func_01E4();\n                stop();\n            } else if (arg3 == 0x3ccfd60b) {\n                var0 = 0x003a;\n                var var1 = 0x00;\n                var var2 = 0x02 ** 0xa0 - 0x01 & 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n                var var3 = 0x70a08231;\n                var temp5 = memory[0x40:0x60];\n                memory[temp5:temp5 + 0x20] = var3 * 0x02 ** 0xe0;\n                var temp6 = temp5 + 0x04;\n                memory[temp6:temp6 + 0x20] = msg.sender;\n                var var4 = temp6 + 0x20;\n                var temp7 = memory[0x40:0x60];\n                var temp8;\n                temp8, memory[temp7:temp7 + 0x20] = address(var2).call.gas(msg.gas - 0x61da)(memory[temp7:temp7 + var4 - temp7]);\n            \n                if (!temp8) { goto label_0002; }\n            \n                func_00CB(var1, var2, var3, var4);\n                stop();\n            } else if (arg3 == 0xeedcf50a) {\n                var0 = 0x01c5;\n                var1 = 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n            \n            label_01C5:\n                var temp9 = memory[0x40:0x60];\n                memory[temp9:temp9 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                var temp10 = memory[0x40:0x60];\n                return memory[temp10:temp10 + temp9 - temp10 + 0x20];\n            } else if (arg3 == 0xfdf97cb2) {\n                var0 = 0x01c5;\n                var1 = 0xda4a4626d3e16e094de3225a751aab7128e96526;\n                goto label_01C5;\n            } else { stop(); }\n        } else {\n            arg1 = !memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n        \n            if (!arg1) {\n                var temp11 = memory[0x40:0x60];\n                var temp12;\n                temp12, memory[temp11:temp11 + 0x00] = address(msg.sender).call.gas(0x00).value(arg0)(memory[temp11:temp11 + 0x00]);\n            \n                if (temp12) { goto label_0224; }\n                else { goto label_018B; }\n            } else if (!arg1) {\n            label_0224:\n                return;\n            } else {\n            label_018B:\n                goto label_0002;\n            }\n        }\n    }\n    \n    function func_01E4() {\n        var temp0 = memory[0x40:0x60];\n        var temp1;\n        temp1, memory[temp0:temp0 + 0x00] = address(0xda4a4626d3e16e094de3225a751aab7128e96526).call.gas(0x00).value(address(this).balance)(memory[temp0:temp0 + 0x00]);\n    \n        if (temp1) { return; }\n    \n    label_0002:\n        memory[0x40:0x60] = returnAddress0;\n        returnAddress0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n    \n        if (returnAddress0 == 0x2526d960) {\n            var var0 = 0x003a;\n        \n            if (msg.sender != 0xda4a4626d3e16e094de3225a751aab7128e96526) { goto label_0002; }\n        \n            func_01E4();\n            stop();\n        } else if (returnAddress0 == 0x3ccfd60b) {\n            var0 = 0x003a;\n            var var1 = 0x00;\n            var var2 = 0x02 ** 0xa0 - 0x01 & 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n            var var3 = 0x70a08231;\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = var3 * 0x02 ** 0xe0;\n            var temp3 = temp2 + 0x04;\n            memory[temp3:temp3 + 0x20] = msg.sender;\n            var var4 = temp3 + 0x20;\n            var temp4 = memory[0x40:0x60];\n            var temp5;\n            temp5, memory[temp4:temp4 + 0x20] = address(var2).call.gas(msg.gas - 0x61da)(memory[temp4:temp4 + var4 - temp4]);\n        \n            if (!temp5) { goto label_0002; }\n        \n            func_00CB(var1, var2, var3, var4);\n            stop();\n        } else if (returnAddress0 == 0xeedcf50a) {\n            var0 = 0x01c5;\n            var1 = 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n        \n        label_01C5:\n            var temp6 = memory[0x40:0x60];\n            memory[temp6:temp6 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n            var temp7 = memory[0x40:0x60];\n            return memory[temp7:temp7 + temp6 - temp7 + 0x20];\n        } else if (returnAddress0 == 0xfdf97cb2) {\n            var0 = 0x01c5;\n            var1 = 0xda4a4626d3e16e094de3225a751aab7128e96526;\n            goto label_01C5;\n        } else { stop(); }\n    }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n        var var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n    \n        if (var0 != 0x2526d960) { goto label_0019; }\n    \n    label_003C:\n        var var1 = 0x003a;\n    \n        if (msg.sender == 0xda4a4626d3e16e094de3225a751aab7128e96526) {\n            func_01E4();\n            stop();\n        } else {\n        label_0002:\n            memory[0x40:0x60] = var1;\n            var1 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (var1 == 0x2526d960) { goto label_003C; }\n        \n        label_0019:\n        \n            if (var1 == 0x3ccfd60b) {\n                var var2 = 0x003a;\n                var var3 = 0x00;\n                var var4 = 0x02 ** 0xa0 - 0x01 & 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n                var var5 = 0x70a08231;\n                var temp0 = memory[0x40:0x60];\n                memory[temp0:temp0 + 0x20] = var5 * 0x02 ** 0xe0;\n                var temp1 = temp0 + 0x04;\n                memory[temp1:temp1 + 0x20] = msg.sender;\n                var var6 = temp1 + 0x20;\n                var temp2 = memory[0x40:0x60];\n                var temp3;\n                temp3, memory[temp2:temp2 + 0x20] = address(var4).call.gas(msg.gas - 0x61da)(memory[temp2:temp2 + var6 - temp2]);\n            \n                if (!temp3) { goto label_0002; }\n            \n                func_00CB(var3, var4, var5, var6);\n                stop();\n            } else if (var1 == 0xeedcf50a) {\n                var2 = 0x01c5;\n                var3 = 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n            \n            label_01C5:\n                var temp4 = memory[0x40:0x60];\n                memory[temp4:temp4 + 0x20] = var3 & 0x02 ** 0xa0 - 0x01;\n                var temp5 = memory[0x40:0x60];\n                return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n            } else if (var1 == 0xfdf97cb2) {\n                var2 = 0x01c5;\n                var3 = 0xda4a4626d3e16e094de3225a751aab7128e96526;\n                goto label_01C5;\n            } else { stop(); }\n        }\n    }\n    \n    function func_00CB(var arg0, var arg1, var arg2, var arg3) {\n        var temp0 = memory[0x40:0x60];\n        var temp1 = memory[temp0:temp0 + 0x20];\n        memory[temp0:temp0 + 0x20] = 0x23b872dd00000000000000000000000000000000000000000000000000000000;\n        var temp2 = 0x02 ** 0xa0 - 0x01;\n        memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = temp2 & msg.sender;\n        memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = address(this) & temp2;\n        memory[temp0 + 0x44:temp0 + 0x44 + 0x20] = temp1;\n        var temp3 = memory[0x40:0x60];\n        arg0 = temp1;\n        arg1 = 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n        arg2 = 0x23b872dd;\n        arg3 = temp0 + 0x64;\n        var temp4;\n        temp4, memory[temp3:temp3 + 0x20] = address(arg1).call.gas(msg.gas - 0x61da)(memory[temp3:temp3 + temp0 - temp3 + 0x64]);\n    \n        if (!temp4) {\n        label_0002:\n            memory[0x40:0x60] = arg3;\n            arg3 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (arg3 == 0x2526d960) {\n                var var0 = 0x003a;\n            \n                if (msg.sender != 0xda4a4626d3e16e094de3225a751aab7128e96526) { goto label_0002; }\n            \n                func_01E4();\n                stop();\n            } else if (arg3 == 0x3ccfd60b) {\n                var0 = 0x003a;\n                var var1 = 0x00;\n                var var2 = 0x02 ** 0xa0 - 0x01 & 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n                var var3 = 0x70a08231;\n                var temp5 = memory[0x40:0x60];\n                memory[temp5:temp5 + 0x20] = var3 * 0x02 ** 0xe0;\n                var temp6 = temp5 + 0x04;\n                memory[temp6:temp6 + 0x20] = msg.sender;\n                var var4 = temp6 + 0x20;\n                var temp7 = memory[0x40:0x60];\n                var temp8;\n                temp8, memory[temp7:temp7 + 0x20] = address(var2).call.gas(msg.gas - 0x61da)(memory[temp7:temp7 + var4 - temp7]);\n            \n                if (!temp8) { goto label_0002; }\n            \n                func_00CB(var1, var2, var3, var4);\n                stop();\n            } else if (arg3 == 0xeedcf50a) {\n                var0 = 0x01c5;\n                var1 = 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n            \n            label_01C5:\n                var temp9 = memory[0x40:0x60];\n                memory[temp9:temp9 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                var temp10 = memory[0x40:0x60];\n                return memory[temp10:temp10 + temp9 - temp10 + 0x20];\n            } else if (arg3 == 0xfdf97cb2) {\n                var0 = 0x01c5;\n                var1 = 0xda4a4626d3e16e094de3225a751aab7128e96526;\n                goto label_01C5;\n            } else { stop(); }\n        } else {\n            arg1 = !memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n        \n            if (!arg1) {\n                var temp11 = memory[0x40:0x60];\n                var temp12;\n                temp12, memory[temp11:temp11 + 0x00] = address(msg.sender).call.gas(0x00).value(arg0)(memory[temp11:temp11 + 0x00]);\n            \n                if (temp12) { goto label_0224; }\n                else { goto label_018B; }\n            } else if (!arg1) {\n            label_0224:\n                return;\n            } else {\n            label_018B:\n                goto label_0002;\n            }\n        }\n    }\n    \n    function func_01E4() {\n        var temp0 = memory[0x40:0x60];\n        var temp1;\n        temp1, memory[temp0:temp0 + 0x00] = address(0xda4a4626d3e16e094de3225a751aab7128e96526).call.gas(0x00).value(address(this).balance)(memory[temp0:temp0 + 0x00]);\n    \n        if (temp1) { return; }\n    \n    label_0002:\n        memory[0x40:0x60] = returnAddress0;\n        returnAddress0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n    \n        if (returnAddress0 == 0x2526d960) {\n            var var0 = 0x003a;\n        \n            if (msg.sender != 0xda4a4626d3e16e094de3225a751aab7128e96526) { goto label_0002; }\n        \n            func_01E4();\n            stop();\n        } else if (returnAddress0 == 0x3ccfd60b) {\n            var0 = 0x003a;\n            var var1 = 0x00;\n            var var2 = 0x02 ** 0xa0 - 0x01 & 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n            var var3 = 0x70a08231;\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = var3 * 0x02 ** 0xe0;\n            var temp3 = temp2 + 0x04;\n            memory[temp3:temp3 + 0x20] = msg.sender;\n            var var4 = temp3 + 0x20;\n            var temp4 = memory[0x40:0x60];\n            var temp5;\n            temp5, memory[temp4:temp4 + 0x20] = address(var2).call.gas(msg.gas - 0x61da)(memory[temp4:temp4 + var4 - temp4]);\n        \n            if (!temp5) { goto label_0002; }\n        \n            func_00CB(var1, var2, var3, var4);\n            stop();\n        } else if (returnAddress0 == 0xeedcf50a) {\n            var0 = 0x01c5;\n            var1 = 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n        \n        label_01C5:\n            var temp6 = memory[0x40:0x60];\n            memory[temp6:temp6 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n            var temp7 = memory[0x40:0x60];\n            return memory[temp7:temp7 + temp6 - temp7 + 0x20];\n        } else if (returnAddress0 == 0xfdf97cb2) {\n            var0 = 0x01c5;\n            var1 = 0xda4a4626d3e16e094de3225a751aab7128e96526;\n            goto label_01C5;\n        } else { stop(); }\n    }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n        var var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n    \n        if (var0 != 0x2526d960) { goto label_0019; }\n    \n    label_003C:\n        var var1 = 0x003a;\n    \n        if (msg.sender == 0xda4a4626d3e16e094de3225a751aab7128e96526) {\n            func_01E4();\n            stop();\n        } else {\n        label_0002:\n            memory[0x40:0x60] = var1;\n            var1 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (var1 == 0x2526d960) { goto label_003C; }\n        \n        label_0019:\n        \n            if (var1 == 0x3ccfd60b) {\n                var var2 = 0x003a;\n                var var3 = 0x00;\n                var var4 = 0x02 ** 0xa0 - 0x01 & 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n                var var5 = 0x70a08231;\n                var temp0 = memory[0x40:0x60];\n                memory[temp0:temp0 + 0x20] = var5 * 0x02 ** 0xe0;\n                var temp1 = temp0 + 0x04;\n                memory[temp1:temp1 + 0x20] = msg.sender;\n                var var6 = temp1 + 0x20;\n                var temp2 = memory[0x40:0x60];\n                var temp3;\n                temp3, memory[temp2:temp2 + 0x20] = address(var4).call.gas(msg.gas - 0x61da)(memory[temp2:temp2 + var6 - temp2]);\n            \n                if (!temp3) { goto label_0002; }\n            \n                func_00CB(var3, var4, var5, var6);\n                stop();\n            } else if (var1 == 0xeedcf50a) {\n                var2 = 0x01c5;\n                var3 = 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n            \n            label_01C5:\n                var temp4 = memory[0x40:0x60];\n                memory[temp4:temp4 + 0x20] = var3 & 0x02 ** 0xa0 - 0x01;\n                var temp5 = memory[0x40:0x60];\n                return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n            } else if (var1 == 0xfdf97cb2) {\n                var2 = 0x01c5;\n                var3 = 0xda4a4626d3e16e094de3225a751aab7128e96526;\n                goto label_01C5;\n            } else { stop(); }\n        }\n    }\n    \n    function func_00CB(var arg0, var arg1, var arg2, var arg3) {\n        var temp0 = memory[0x40:0x60];\n        var temp1 = memory[temp0:temp0 + 0x20];\n        memory[temp0:temp0 + 0x20] = 0x23b872dd00000000000000000000000000000000000000000000000000000000;\n        var temp2 = 0x02 ** 0xa0 - 0x01;\n        memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = temp2 & msg.sender;\n        memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = address(this) & temp2;\n        memory[temp0 + 0x44:temp0 + 0x44 + 0x20] = temp1;\n        var temp3 = memory[0x40:0x60];\n        arg0 = temp1;\n        arg1 = 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n        arg2 = 0x23b872dd;\n        arg3 = temp0 + 0x64;\n        var temp4;\n        temp4, memory[temp3:temp3 + 0x20] = address(arg1).call.gas(msg.gas - 0x61da)(memory[temp3:temp3 + temp0 - temp3 + 0x64]);\n    \n        if (!temp4) {\n        label_0002:\n            memory[0x40:0x60] = arg3;\n            arg3 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (arg3 == 0x2526d960) {\n                var var0 = 0x003a;\n            \n                if (msg.sender != 0xda4a4626d3e16e094de3225a751aab7128e96526) { goto label_0002; }\n            \n                func_01E4();\n                stop();\n            } else if (arg3 == 0x3ccfd60b) {\n                var0 = 0x003a;\n                var var1 = 0x00;\n                var var2 = 0x02 ** 0xa0 - 0x01 & 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n                var var3 = 0x70a08231;\n                var temp5 = memory[0x40:0x60];\n                memory[temp5:temp5 + 0x20] = var3 * 0x02 ** 0xe0;\n                var temp6 = temp5 + 0x04;\n                memory[temp6:temp6 + 0x20] = msg.sender;\n                var var4 = temp6 + 0x20;\n                var temp7 = memory[0x40:0x60];\n                var temp8;\n                temp8, memory[temp7:temp7 + 0x20] = address(var2).call.gas(msg.gas - 0x61da)(memory[temp7:temp7 + var4 - temp7]);\n            \n                if (!temp8) { goto label_0002; }\n            \n                func_00CB(var1, var2, var3, var4);\n                stop();\n            } else if (arg3 == 0xeedcf50a) {\n                var0 = 0x01c5;\n                var1 = 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n            \n            label_01C5:\n                var temp9 = memory[0x40:0x60];\n                memory[temp9:temp9 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                var temp10 = memory[0x40:0x60];\n                return memory[temp10:temp10 + temp9 - temp10 + 0x20];\n            } else if (arg3 == 0xfdf97cb2) {\n                var0 = 0x01c5;\n                var1 = 0xda4a4626d3e16e094de3225a751aab7128e96526;\n                goto label_01C5;\n            } else { stop(); }\n        } else {\n            arg1 = !memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n        \n            if (!arg1) {\n                var temp11 = memory[0x40:0x60];\n                var temp12;\n                temp12, memory[temp11:temp11 + 0x00] = address(msg.sender).call.gas(0x00).value(arg0)(memory[temp11:temp11 + 0x00]);\n            \n                if (temp12) { goto label_0224; }\n                else { goto label_018B; }\n            } else if (!arg1) {\n            label_0224:\n                return;\n            } else {\n            label_018B:\n                goto label_0002;\n            }\n        }\n    }\n    \n    function func_01E4() {\n        var temp0 = memory[0x40:0x60];\n        var temp1;\n        temp1, memory[temp0:temp0 + 0x00] = address(0xda4a4626d3e16e094de3225a751aab7128e96526).call.gas(0x00).value(address(this).balance)(memory[temp0:temp0 + 0x00]);\n    \n        if (temp1) { return; }\n    \n    label_0002:\n        memory[0x40:0x60] = returnAddress0;\n        returnAddress0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n    \n        if (returnAddress0 == 0x2526d960) {\n            var var0 = 0x003a;\n        \n            if (msg.sender != 0xda4a4626d3e16e094de3225a751aab7128e96526) { goto label_0002; }\n        \n            func_01E4();\n            stop();\n        } else if (returnAddress0 == 0x3ccfd60b) {\n            var0 = 0x003a;\n            var var1 = 0x00;\n            var var2 = 0x02 ** 0xa0 - 0x01 & 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n            var var3 = 0x70a08231;\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = var3 * 0x02 ** 0xe0;\n            var temp3 = temp2 + 0x04;\n            memory[temp3:temp3 + 0x20] = msg.sender;\n            var var4 = temp3 + 0x20;\n            var temp4 = memory[0x40:0x60];\n            var temp5;\n            temp5, memory[temp4:temp4 + 0x20] = address(var2).call.gas(msg.gas - 0x61da)(memory[temp4:temp4 + var4 - temp4]);\n        \n            if (!temp5) { goto label_0002; }\n        \n            func_00CB(var1, var2, var3, var4);\n            stop();\n        } else if (returnAddress0 == 0xeedcf50a) {\n            var0 = 0x01c5;\n            var1 = 0x5c40ef6f527f4fba68368774e6130ce6515123f2;\n        \n        label_01C5:\n            var temp6 = memory[0x40:0x60];\n            memory[temp6:temp6 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n            var temp7 = memory[0x40:0x60];\n            return memory[temp7:temp7 + temp6 - temp7 + 0x20];\n        } else if (returnAddress0 == 0xfdf97cb2) {\n            var0 = 0x01c5;\n            var1 = 0xda4a4626d3e16e094de3225a751aab7128e96526;\n            goto label_01C5;\n        } else { stop(); }\n    }\n}\n\n.",
	"status": "1",
	"time_cost": 37.0125777721405,
	"usage": {
		"completion_tokens": 419,
		"prompt_tokens": 2689,
		"total_tokens": 3108
	}
}