{
	"address": "0xe20a3aa6b1ef8eb0eab44bfa9503f09635a5ac50",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Sure, here's the Solidity contract code:\n\n```solidity\npragma solidity ^0.8.0;\n\ncontract GameContract {\n    uint256 private _fomo_period;\n    uint256 private _balance;\n    uint256 private _finish_time;\n    address private _isOwner;\n    uint8 private stor_3_0_0;\n    address private _winner;\n    address private _addToBank;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    event Win(address indexed winner, uint256 amount);\n\n    constructor() {\n        _isOwner = msg.sender;\n    }\n\n    function owner() public view returns (address) { \n        return _isOwner;\n    }\n\n    function isOwner() public view returns (bool) { \n        return msg.sender == _isOwner;\n    }\n\n    function balance() public view returns (uint256) { \n        return _balance;\n    }\n\n    function addToBank(address recipient) public payable { \n        require(msg.sender == _addToBank, \"Not authorized\");\n        bool finished = block.timestamp > _finish_time;\n        if (finished && stor_3_0_0 == 1) {\n            emit Win(_winner, _balance);\n            _balance = 0;\n            (bool success, ) = _winner.call{value: _balance, gas: 2300 * (_balance == 0 ? 1 : 0)}(\"\");\n            require(success, \"Transfer failed\");\n            _winner = address(0);\n        }\n        require(msg.value + _balance >= _balance, \"Addition overflow\");\n        _balance += msg.value;\n        _winner = recipient;\n        _finish_time = block.timestamp + _fomo_period;\n    }\n\n    function fomo_period() public view returns (uint256) { \n        return _fomo_period;\n    }\n\n    function winner() public view returns (address) { \n        return _winner;\n    }\n\n    function setMLM(address newAddress) public { \n        require(msg.sender == _isOwner, \"Not owner\");\n        _addToBank = newAddress;\n    }\n\n    function transferOwnership(address newOwner) public { \n        require(msg.sender == _isOwner, \"Not owner\");\n        require(newOwner != address(0), \"Invalid address\");\n        emit OwnershipTransferred(_isOwner, newOwner);\n        _isOwner = newOwner;\n    }\n\n    function finish_time() public view returns (uint256) { \n        return _finish_time;\n    }\n\n    function renounceOwnership() public { \n        require(msg.sender == _isOwner, \"Not owner\");\n        emit OwnershipTransferred(_isOwner, address(0));\n        _isOwner = address(0);\n    }\n\n    function getInfo() public view returns (uint256, uint256, address) { \n        return (_balance, _finish_time, _winner);\n    }\n\n    fallback() external payable { \n        revert();\n    }\n}\n```\n\nPlease note that this contract is missing the `__function_selector__` function as it is unnecessary in high-level Solidity. This functionality is automatically provided by the Solidity compiler. Also, variables, functions, and events names are converted into camel case notation to follow Solidity naming conventions.",
				"role": "assistant"
			}
		}
	],
	"created": 1701464599,
	"id": "chatcmpl-8R4xLcpEpp0csU6vi79z8cQQI7IHz",
	"input_format": "DecompiledCode",
	"ir": "// Decompiled at www.contract-library.com\n// 2021.08.15 11:51 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _fomo_period; // STORAGE[0x1]\nuint256 _balance; // STORAGE[0x2]\nuint256 _finish_time; // STORAGE[0x4]\naddress _isOwner; // STORAGE[0x0] bytes 0 to 19\nuint8 stor_3_0_0; // STORAGE[0x3] bytes 0 to 0\naddress _winner; // STORAGE[0x3] bytes 0 to 19\naddress _addToBank; // STORAGE[0x5] bytes 0 to 19\n\n// Events\nOwnershipTransferred(address, address);\nWin(address, uint256);\n\nfunction owner() public nonPayable { \n    return _isOwner;\n}\n\nfunction isOwner() public nonPayable { \n    return msg.sender == _isOwner;\n}\n\nfunction balance() public nonPayable { \n    return _balance;\n}\n\nfunction AddToBank(address varg0) public payable { \n    require(msg.sender == _addToBank);\n    v0 = v1 = block.timestamp > _finish_time;\n    if (v1) {\n        v0 = stor_3_0_0;\n    }\n    if (v0) {\n        emit Win(_winner, _balance);\n        _balance = 0;\n        v2 = _winner.call().value(_balance).gas(2300 * !_balance);\n        require(v2); // checks call status, propagates error data on error\n        _winner = 0;\n        goto 0x2e8;\n    }\n    require(msg.value + _balance >= _balance);\n    _balance += msg.value;\n    _winner = varg0;\n    _finish_time = block.timestamp + _fomo_period;\n}\n\nfunction fomo_period() public nonPayable { \n    return _fomo_period;\n}\n\nfunction winner() public nonPayable { \n    return _winner;\n}\n\nfunction SetMLM(address varg0) public nonPayable { \n    require(msg.sender == _isOwner);\n    _addToBank = varg0;\n}\n\nfunction transferOwnership(address varg0) public nonPayable { \n    require(msg.sender == _isOwner);\n    require(varg0);\n    emit OwnershipTransferred(_isOwner, varg0);\n    _isOwner = varg0;\n}\n\nfunction fallback() public payable { \n    revert();\n}\n\nfunction finish_time() public nonPayable { \n    return _finish_time;\n}\n\nfunction renounceOwnership() public nonPayable { \n    require(msg.sender == _isOwner);\n    emit OwnershipTransferred(_isOwner, 0);\n    _isOwner = 0;\n}\n\nfunction GetInfo() public nonPayable { \n    return _balance, _finish_time, _winner;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (function_selector == 0x37a11429) {\n            finish_time();\n        } else if (0x715018a6 == function_selector) {\n            renounceOwnership();\n        } else if (0x8418842a == function_selector) {\n            GetInfo();\n        } else if (0x8da5cb5b == function_selector) {\n            owner();\n        } else if (0x8f32d59b == function_selector) {\n            isOwner();\n        } else if (0xb69ef8a8 == function_selector) {\n            balance();\n        } else if (0xc2dd6312 == function_selector) {\n            AddToBank(address);\n        } else if (0xdcc08953 == function_selector) {\n            fomo_period();\n        } else if (0xdfbf53ae == function_selector) {\n            winner();\n        } else if (0xe1d490d4 == function_selector) {\n            SetMLM(address);\n        } else if (0xf2fde38b == function_selector) {\n            transferOwnership(address);\n        }\n    }\n    fallback();\n}\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.15 11:51 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _fomo_period; // STORAGE[0x1]\nuint256 _balance; // STORAGE[0x2]\nuint256 _finish_time; // STORAGE[0x4]\naddress _isOwner; // STORAGE[0x0] bytes 0 to 19\nuint8 stor_3_0_0; // STORAGE[0x3] bytes 0 to 0\naddress _winner; // STORAGE[0x3] bytes 0 to 19\naddress _addToBank; // STORAGE[0x5] bytes 0 to 19\n\n// Events\nOwnershipTransferred(address, address);\nWin(address, uint256);\n\nfunction owner() public nonPayable { \n    return _isOwner;\n}\n\nfunction isOwner() public nonPayable { \n    return msg.sender == _isOwner;\n}\n\nfunction balance() public nonPayable { \n    return _balance;\n}\n\nfunction AddToBank(address varg0) public payable { \n    require(msg.sender == _addToBank);\n    v0 = v1 = block.timestamp > _finish_time;\n    if (v1) {\n        v0 = stor_3_0_0;\n    }\n    if (v0) {\n        emit Win(_winner, _balance);\n        _balance = 0;\n        v2 = _winner.call().value(_balance).gas(2300 * !_balance);\n        require(v2); // checks call status, propagates error data on error\n        _winner = 0;\n        goto 0x2e8;\n    }\n    require(msg.value + _balance >= _balance);\n    _balance += msg.value;\n    _winner = varg0;\n    _finish_time = block.timestamp + _fomo_period;\n}\n\nfunction fomo_period() public nonPayable { \n    return _fomo_period;\n}\n\nfunction winner() public nonPayable { \n    return _winner;\n}\n\nfunction SetMLM(address varg0) public nonPayable { \n    require(msg.sender == _isOwner);\n    _addToBank = varg0;\n}\n\nfunction transferOwnership(address varg0) public nonPayable { \n    require(msg.sender == _isOwner);\n    require(varg0);\n    emit OwnershipTransferred(_isOwner, varg0);\n    _isOwner = varg0;\n}\n\nfunction fallback() public payable { \n    revert();\n}\n\nfunction finish_time() public nonPayable { \n    return _finish_time;\n}\n\nfunction renounceOwnership() public nonPayable { \n    require(msg.sender == _isOwner);\n    emit OwnershipTransferred(_isOwner, 0);\n    _isOwner = 0;\n}\n\nfunction GetInfo() public nonPayable { \n    return _balance, _finish_time, _winner;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (function_selector == 0x37a11429) {\n            finish_time();\n        } else if (0x715018a6 == function_selector) {\n            renounceOwnership();\n        } else if (0x8418842a == function_selector) {\n            GetInfo();\n        } else if (0x8da5cb5b == function_selector) {\n            owner();\n        } else if (0x8f32d59b == function_selector) {\n            isOwner();\n        } else if (0xb69ef8a8 == function_selector) {\n            balance();\n        } else if (0xc2dd6312 == function_selector) {\n            AddToBank(address);\n        } else if (0xdcc08953 == function_selector) {\n            fomo_period();\n        } else if (0xdfbf53ae == function_selector) {\n            winner();\n        } else if (0xe1d490d4 == function_selector) {\n            SetMLM(address);\n        } else if (0xf2fde38b == function_selector) {\n            transferOwnership(address);\n        }\n    }\n    fallback();\n}\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.15 11:51 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _fomo_period; // STORAGE[0x1]\nuint256 _balance; // STORAGE[0x2]\nuint256 _finish_time; // STORAGE[0x4]\naddress _isOwner; // STORAGE[0x0] bytes 0 to 19\nuint8 stor_3_0_0; // STORAGE[0x3] bytes 0 to 0\naddress _winner; // STORAGE[0x3] bytes 0 to 19\naddress _addToBank; // STORAGE[0x5] bytes 0 to 19\n\n// Events\nOwnershipTransferred(address, address);\nWin(address, uint256);\n\nfunction owner() public nonPayable { \n    return _isOwner;\n}\n\nfunction isOwner() public nonPayable { \n    return msg.sender == _isOwner;\n}\n\nfunction balance() public nonPayable { \n    return _balance;\n}\n\nfunction AddToBank(address varg0) public payable { \n    require(msg.sender == _addToBank);\n    v0 = v1 = block.timestamp > _finish_time;\n    if (v1) {\n        v0 = stor_3_0_0;\n    }\n    if (v0) {\n        emit Win(_winner, _balance);\n        _balance = 0;\n        v2 = _winner.call().value(_balance).gas(2300 * !_balance);\n        require(v2); // checks call status, propagates error data on error\n        _winner = 0;\n        goto 0x2e8;\n    }\n    require(msg.value + _balance >= _balance);\n    _balance += msg.value;\n    _winner = varg0;\n    _finish_time = block.timestamp + _fomo_period;\n}\n\nfunction fomo_period() public nonPayable { \n    return _fomo_period;\n}\n\nfunction winner() public nonPayable { \n    return _winner;\n}\n\nfunction SetMLM(address varg0) public nonPayable { \n    require(msg.sender == _isOwner);\n    _addToBank = varg0;\n}\n\nfunction transferOwnership(address varg0) public nonPayable { \n    require(msg.sender == _isOwner);\n    require(varg0);\n    emit OwnershipTransferred(_isOwner, varg0);\n    _isOwner = varg0;\n}\n\nfunction fallback() public payable { \n    revert();\n}\n\nfunction finish_time() public nonPayable { \n    return _finish_time;\n}\n\nfunction renounceOwnership() public nonPayable { \n    require(msg.sender == _isOwner);\n    emit OwnershipTransferred(_isOwner, 0);\n    _isOwner = 0;\n}\n\nfunction GetInfo() public nonPayable { \n    return _balance, _finish_time, _winner;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (function_selector == 0x37a11429) {\n            finish_time();\n        } else if (0x715018a6 == function_selector) {\n            renounceOwnership();\n        } else if (0x8418842a == function_selector) {\n            GetInfo();\n        } else if (0x8da5cb5b == function_selector) {\n            owner();\n        } else if (0x8f32d59b == function_selector) {\n            isOwner();\n        } else if (0xb69ef8a8 == function_selector) {\n            balance();\n        } else if (0xc2dd6312 == function_selector) {\n            AddToBank(address);\n        } else if (0xdcc08953 == function_selector) {\n            fomo_period();\n        } else if (0xdfbf53ae == function_selector) {\n            winner();\n        } else if (0xe1d490d4 == function_selector) {\n            SetMLM(address);\n        } else if (0xf2fde38b == function_selector) {\n            transferOwnership(address);\n        }\n    }\n    fallback();\n}\n.",
	"status": "1",
	"time_cost": 40.97451972961426,
	"usage": {
		"completion_tokens": 662,
		"prompt_tokens": 959,
		"total_tokens": 1621
	}
}