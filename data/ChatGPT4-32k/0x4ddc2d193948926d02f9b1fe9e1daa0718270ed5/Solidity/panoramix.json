{
	"address": "0x4ddc2d193948926d02f9b1fe9e1daa0718270ed5",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is a solidity smart contract that replicates the functionality of the provided decompiled code:\n\n```solidity\npragma solidity ^0.5.17;\n\ncontract MyContract {\n    uint256 public cash;\n    uint256 public borrows;\n    uint256 public reserves;\n    uint256 public totalSupply;\n    uint256 public reserveFactorMantissa;\n    address public interestRateModelAddress;\n    uint256 public accrualBlockNumber;\n    uint256 public borrowIndex;\n    uint256 public totalBorrows;\n    uint256 public totalReserves;\n    address public adminAddress;\n    address public comptrollerAddress;\n\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n    mapping(address => Borrower) public borrowers;\n\n    struct Borrower {\n        uint256 field0;\n        uint256 field256;\n    }\n\n    event Failure(uint256 error, uint256 info, uint256 detail);\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\n    event NewAdmin(address oldAdmin, address newAdmin);\n    event NewComptroller(address oldComptroller, address newComptroller);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    function approve(address spender, uint256 amount) public returns (bool) {\n        allowance[msg.sender][spender] = amount;\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        require(balanceOf[msg.sender] >= amount, \"Insufficient balance\");\n        balanceOf[msg.sender] -= amount;\n        balanceOf[recipient] += amount;\n        emit Transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        require(balanceOf[sender] >= amount, \"Insufficient balance\");\n        require(allowance[sender][msg.sender] >= amount, \"Insufficient allowance\");\n        balanceOf[sender] -= amount;\n        balanceOf[recipient] += amount;\n        allowance[sender][msg.sender] -= amount;\n        emit Transfer(sender, recipient, amount);\n        return true;\n    }\n\n    function _setPendingAdmin(address newPendingAdmin) public returns (bool) {\n        require(msg.sender == adminAddress, \"Only admin can set new admin\");\n        adminAddress = newPendingAdmin;\n        emit NewPendingAdmin(adminAddress, newPendingAdmin);\n        return true;\n    }\n\n    function _acceptAdmin() public returns (bool) {\n        require(msg.sender == adminAddress, \"Only admin can accept new admin\");\n        adminAddress = msg.sender;\n        emit NewAdmin(adminAddress, msg.sender);\n        return true;\n    }\n\n    // More functions to be added following the similar pattern\n}\n```\nPlease note that this is a simplified version of the smart contract and it does not include all the functions from the decompiled code. Also, I've made assumptions about some of the mappings and variables as the decompiled code was not clear about those.\n\nFor instance, the actual contract might handle failure scenarios differently, it might include more events, and it might include additional functionality in its functions. The actual data types and structures used in the contract could also differ. This contract is a basic implementation and may need to be expanded and modified to fit the specific needs of your project.",
				"role": "assistant"
			}
		}
	],
	"created": 1700470495,
	"id": "chatcmpl-8MuLPtVSU0em8Ujw3R8jFvIhu7zJc",
	"input_format": "DecompiledCode",
	"ir": "# Palkeoramix decompiler. \n\nconst getCash = (eth.balance(this.address) - call.value)\nconst isCToken = 1\n\ndef storage:\n  stor0 is uint256 at storage 0\n  name is array of uint256 at storage 1\n  symbol is array of uint256 at storage 2\n  decimals is uint256 at storage 3\n  adminAddress is address at storage 4\n  pendingAdminAddress is address at storage 5\n  comptrollerAddress is address at storage 6\n  interestRateModelAddress is address at storage 7\n  initialExchangeRateMantissa is uint256 at storage 8\n  reserveFactorMantissa is uint256 at storage 9\n  accrualBlockNumber is uint256 at storage 10\n  borrowIndex is uint256 at storage 11\n  totalBorrows is uint256 at storage 12\n  totalReserves is uint256 at storage 13\n  totalSupply is uint256 at storage 14\n  balanceOf is mapping of uint256 at storage 15\n  allowance is mapping of uint256 at storage 16\n  stor17 is mapping of struct at storage 17\n\ndef name(): # not payable\n  return name[0 len name.length]\n\ndef reserveFactorMantissa(): # not payable\n  return reserveFactorMantissa\n\ndef totalSupply(): # not payable\n  return totalSupply\n\ndef pendingAdmin(): # not payable\n  return pendingAdminAddress\n\ndef decimals(): # not payable\n  return decimals\n\ndef totalBorrows(): # not payable\n  return totalBorrows\n\ndef comptroller(): # not payable\n  return comptrollerAddress\n\ndef initialExchangeRateMantissa(): # not payable\n  return initialExchangeRateMantissa\n\ndef accrualBlockNumber(): # not payable\n  return accrualBlockNumber\n\ndef balanceOf(address account): # not payable\n  require calldata.size - 4 >= 32\n  return balanceOf[address(account)]\n\ndef totalReserves(): # not payable\n  return totalReserves\n\ndef symbol(): # not payable\n  return symbol[0 len symbol.length]\n\ndef borrowIndex(): # not payable\n  return borrowIndex\n\ndef allowance(address owner, address spender): # not payable\n  require calldata.size - 4 >= 64\n  return allowance[address(owner)][address(spender)]\n\ndef interestRateModel(): # not payable\n  return interestRateModelAddress\n\ndef admin(): # not payable\n  return adminAddress\n\n#\n#  Regular functions\n#\n\ndef approve(address spender, uint256 amount): # not payable\n  require calldata.size - 4 >= 64\n  allowance[caller][address(spender)] = amount\n  log Approval(\n        address owner=amount,\n        address spender=caller,\n        uint256 value=spender)\n  return 1\n\ndef _setPendingAdmin(address newPendingAdmin): # not payable\n  require calldata.size - 4 >= 32\n  if adminAddress != caller:\n      log Failure(\n            uint256 error=1,\n            uint256 info=69,\n            uint256 detail=0)\n      return 1\n  pendingAdminAddress = newPendingAdmin\n  log NewPendingAdmin(\n        address oldPendingAdmin=pendingAdminAddress,\n        address newPendingAdmin=newPendingAdmin)\n  return 0\n\ndef _acceptAdmin(): # not payable\n  if pendingAdminAddress != caller:\n      log Failure(\n            uint256 error=1,\n            uint256 info=0,\n            uint256 detail=0)\n      return 1\n  if not caller:\n      log Failure(\n            uint256 error=1,\n            uint256 info=0,\n            uint256 detail=0)\n      return 1\n  adminAddress = pendingAdminAddress\n  pendingAdminAddress = 0\n  log NewAdmin(\n        address oldAdmin=adminAddress,\n        address newAdmin=pendingAdminAddress)\n  log NewPendingAdmin(\n        address oldPendingAdmin=pendingAdminAddress,\n        address newPendingAdmin=pendingAdminAddress)\n  return 0\n\ndef _setComptroller(address newComptroller): # not payable\n  require calldata.size - 4 >= 32\n  if adminAddress != caller:\n      log Failure(\n            uint256 error=1,\n            uint256 info=63,\n            uint256 detail=0)\n      return 1\n  require ext_code.size(newComptroller)\n  static call newComptroller.isComptroller() with:\n          gas gas_remaining wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if not ext_call.return_data[0]:\n      revert with 0, 'marker method returned false'\n  comptrollerAddress = newComptroller\n  log NewComptroller(\n        address oldComptroller=comptrollerAddress,\n        address newComptroller=newComptroller)\n  return 0\n\ndef borrowRatePerBlock(): # not payable\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if ext_call.return_data[0]:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  55,\n                  0x64626f72726f7752617465506572426c6f636b3a20696e746572657374526174654d6f64656c2e626f72726f7752617465206661696c65,\n                  mem[219 len 9]\n  return ext_call.return_data[32]\n\ndef borrowBalanceStored(address account): # not payable\n  require calldata.size - 4 >= 32\n  if not stor17[address(account)].field_0:\n      return 0\n  if borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_0 != borrowIndex:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  55,\n                  0x64626f72726f7742616c616e636553746f7265643a20626f72726f7742616c616e636553746f726564496e7465726e616c206661696c65,\n                  mem[219 len 9]\n  if not stor17[address(account)].field_256:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  55,\n                  0x64626f72726f7742616c616e636553746f7265643a20626f72726f7742616c616e636553746f726564496e7465726e616c206661696c65,\n                  mem[219 len 9]\n  return (borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_256)\n\ndef exchangeRateStored(): # not payable\n  if not totalSupply:\n      return initialExchangeRateMantissa\n  require call.value <= eth.balance(this.address)\n  if totalBorrows < 0:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[249 len 11]\n  if totalReserves > totalBorrows + eth.balance(this.address) - call.value:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[249 len 11]\n  if not totalBorrows + eth.balance(this.address) - call.value - totalReserves:\n      if not totalSupply:\n          revert with 0, \n                      32,\n                      53,\n                      0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                      mem[313 len 11]\n      return (0 / totalSupply)\n  if (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalBorrows + eth.balance(this.address) - call.value - totalReserves != 10^18:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[313 len 11]\n  if not totalSupply:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[313 len 11]\n  return ((10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply)\n\ndef seize(address liquidator, address borrower, uint256 seizeTokens): # not payable\n  require calldata.size - 4 >= 96\n  stor0++\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.seizeAllowed(address cTokenCollateral, address cTokenBorrowed, address liquidator, address borrower, uint256 seizeTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), caller, address(liquidator), borrower, seizeTokens\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=3,\n            uint256 info=27,\n            uint256 detail=ext_call.return_data[0])\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 3\n  if borrower == liquidator:\n      log Failure(\n            uint256 error=6,\n            uint256 info=28,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 6\n  if seizeTokens > balanceOf[address(borrower)]:\n      log Failure(\n            uint256 error=9,\n            uint256 info=26,\n            uint256 detail=3)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 9\n  if seizeTokens + balanceOf[address(liquidator)] < balanceOf[address(liquidator)]:\n      log Failure(\n            uint256 error=9,\n            uint256 info=25,\n            uint256 detail=2)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 9\n  balanceOf[address(borrower)] -= seizeTokens\n  balanceOf[liquidator] = seizeTokens + balanceOf[address(liquidator)]\n  log 0x64ddf252: seizeTokens, borrower, liquidator\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.seizeVerify(address cTokenCollateral, address cTokenBorrowed, address liquidator, address borrower, uint256 seizeTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), caller, address(liquidator), borrower, seizeTokens\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  if stor0 + 1 != stor0:\n      revert with 0, 're-entered'\n  else:\n      return 0\n\ndef accrueInterest(): # not payable\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          return 9\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              return 9\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              return 9\n          if reserveFactorMantissa:\n              if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18 * reserveFactorMantissa / reserveFactorMantissa == (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef totalBorrowsCurrent(): # not payable\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      revert with 0, 'accrue interest failed'\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18 * reserveFactorMantissa / reserveFactorMantissa == (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef exchangeRateCurrent(): # not payable\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      revert with 0, 'accrue interest failed'\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18 * reserveFactorMantissa / reserveFactorMantissa == (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef balanceOfUnderlying(address owner): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      revert with 0, 'accrue interest failed'\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18 * reserveFactorMantissa / reserveFactorMantissa == (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef borrowBalanceCurrent(address account): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      revert with 0, 'accrue interest failed'\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18 * reserveFactorMantissa / reserveFactorMantissa == (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef getAccountSnapshot(address account): # not payable\n  require calldata.size - 4 >= 32\n  if not stor17[address(account)].field_0:\n      if not totalSupply:\n          return 0, balanceOf[address(account)], 0, initialExchangeRateMantissa\n      require call.value <= eth.balance(this.address)\n      if totalBorrows >= 0:\n          if totalReserves <= totalBorrows + eth.balance(this.address) - call.value:\n              if not totalBorrows + eth.balance(this.address) - call.value - totalReserves:\n                  if totalSupply:\n                      return 0, balanceOf[address(account)], 0, 0 / totalSupply\n              else:\n                  if (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalBorrows + eth.balance(this.address) - call.value - totalReserves == 10^18:\n                      if totalSupply:\n                          return 0, \n                                 balanceOf[address(account)],\n                                 0,\n                                 (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply\n  else:\n      if borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_0 == borrowIndex:\n          if stor17[address(account)].field_256:\n              if not totalSupply:\n                  return 0, \n                         balanceOf[address(account)],\n                         borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_256,\n                         initialExchangeRateMantissa\n              require call.value <= eth.balance(this.address)\n              if totalBorrows >= 0:\n                  if totalReserves <= totalBorrows + eth.balance(this.address) - call.value:\n                      if not totalBorrows + eth.balance(this.address) - call.value - totalReserves:\n                          if totalSupply:\n                              return 0, \n                                     balanceOf[address(account)],\n                                     borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_256,\n                                     0 / totalSupply\n                      else:\n                          if (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalBorrows + eth.balance(this.address) - call.value - totalReserves == 10^18:\n                              if totalSupply:\n                                  return 0, \n                                         balanceOf[address(account)],\n                                         borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_256,\n                                         (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply\n  return 9, 0, 0, 0\n\ndef _setInterestRateModel(address newInterestRateModel): # not payable\n  require calldata.size - 4 >= 32\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=64,\n            uint256 detail=0)\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=64,\n                uint256 detail=0)\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=64,\n                uint256 detail=0)\n          return 9\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=64,\n                    uint256 detail=0)\n              return 9\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=64,\n                    uint256 detail=0)\n              return 9\n          if not reserveFactorMantissa:\n      else:\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=64,\n                    uint256 detail=0)\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef _reduceReserves(uint256 reduceAmount): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=48,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=48,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n  if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n      log Failure(\n            uint256 error=9,\n            uint256 info=6,\n            uint256 detail=2)\n  else:\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=48,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n      if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n          log Failure(\n                uint256 error=9,\n                uint256 info=1,\n                uint256 detail=2)\n      else:\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) >= (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              if not reserveFactorMantissa:\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n  log Failure(\n        uint256 error=9,\n        uint256 info=48,\n        uint256 detail=0)\n  if stor0 + 1 != stor0:\n      revert with 0, 're-entered'\n  return 9\n\ndef _setReserveFactor(uint256 newReserveFactorMantissa): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=70,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=70,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n  if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n      log Failure(\n            uint256 error=9,\n            uint256 info=6,\n            uint256 detail=2)\n  else:\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=70,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n      if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n          log Failure(\n                uint256 error=9,\n                uint256 info=1,\n                uint256 detail=2)\n      else:\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) >= (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              if not reserveFactorMantissa:\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n  log Failure(\n        uint256 error=9,\n        uint256 info=70,\n        uint256 detail=0)\n  if stor0 + 1 != stor0:\n      revert with 0, 're-entered'\n  return 9\n\ndef transfer(address recipient, uint256 amount): # not payable\n  require calldata.size - 4 >= 64\n  stor0++\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.transferAllowed(address cToken, address src, address dst, uint256 transferTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), caller, address(recipient), amount\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=3,\n            uint256 info=74,\n            uint256 detail=ext_call.return_data[0])\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      else:\n          return 0\n  if caller == recipient:\n      log Failure(\n            uint256 error=2,\n            uint256 info=75,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      else:\n          return 0\n  if caller == caller:\n      if amount > -1:\n          log Failure(\n                uint256 error=9,\n                uint256 info=75,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount > balanceOf[caller]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=76,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=77,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      balanceOf[caller] -= amount\n      balanceOf[recipient] = amount + balanceOf[address(recipient)]\n  else:\n      if amount > allowance[caller][caller]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=75,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount > balanceOf[caller]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=76,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=77,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      balanceOf[caller] -= amount\n      balanceOf[recipient] = amount + balanceOf[address(recipient)]\n      if allowance[caller][caller] != -1:\n          allowance[caller][caller] -= amount\n  log 0x64ddf252: amount, caller, recipient\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.transferVerify(address cToken, address src, address dst, uint256 transferTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), caller, address(recipient), amount\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  if stor0 + 1 != stor0:\n      revert with 0, 're-entered'\n  return 1\n\ndef borrow(uint256 borrowAmount): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=8,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=8,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=8,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=8,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=8,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) >= (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=8,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef redeem(uint256 amount): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=39,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=39,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=39,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) >= (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef redeemUnderlying(uint256 redeemAmount): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=39,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=39,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=39,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) >= (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef mint() payable: \n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=30,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n  else:\n      require accrualBlockNumber <= block.number\n      if not ext_call.return_data[32]:\n          if totalBorrows >= 0:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=30,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n      else:\n          if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=6,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=30,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n          else:\n              if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n                  if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) == totalBorrows:\n                      if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=4,\n                                uint256 detail=2)\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=30,\n                                uint256 detail=0)\n                      else:\n                          if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=1,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=30,\n                            uint256 detail=0)\n                      if stor0 + 1 != stor0:\n                          revert with 0, 're-entered'\n              else:\n                  if totalBorrows >= 0:\n                      if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=4,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=30,\n                            uint256 detail=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef repayBorrow() payable: \n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=54,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n  else:\n      require accrualBlockNumber <= block.number\n      if not ext_call.return_data[32]:\n          if totalBorrows >= 0:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=54,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n      else:\n          if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=6,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=54,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n          else:\n              if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n                  if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) == totalBorrows:\n                      if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=4,\n                                uint256 detail=2)\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=54,\n                                uint256 detail=0)\n                      else:\n                          if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=1,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=54,\n                            uint256 detail=0)\n                      if stor0 + 1 != stor0:\n                          revert with 0, 're-entered'\n              else:\n                  if totalBorrows >= 0:\n                      if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=4,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=54,\n                            uint256 detail=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef _fallback(?) payable: # default function\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=30,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n  else:\n      require accrualBlockNumber <= block.number\n      if not ext_call.return_data[32]:\n          if totalBorrows >= 0:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=30,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n      else:\n          if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=6,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=30,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n          else:\n              if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n                  if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) == totalBorrows:\n                      if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=4,\n                                uint256 detail=2)\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=30,\n                                uint256 detail=0)\n                      else:\n                          if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=1,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=30,\n                            uint256 detail=0)\n                      if stor0 + 1 != stor0:\n                          revert with 0, 're-entered'\n              else:\n                  if totalBorrows >= 0:\n                      if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=4,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=30,\n                            uint256 detail=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef repayBorrowBehalf(address borrower) payable: \n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=53,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n  else:\n      require accrualBlockNumber <= block.number\n      if not ext_call.return_data[32]:\n          if totalBorrows >= 0:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=53,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n      else:\n          if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=6,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=53,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n          else:\n              if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n                  if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) == totalBorrows:\n                      if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=4,\n                                uint256 detail=2)\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=53,\n                                uint256 detail=0)\n                      else:\n                          if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=1,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=53,\n                            uint256 detail=0)\n                      if stor0 + 1 != stor0:\n                          revert with 0, 're-entered'\n              else:\n                  if totalBorrows >= 0:\n                      if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=4,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=53,\n                            uint256 detail=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef liquidateBorrow(address borrower, address cTokenCollateral) payable: \n  require calldata.size - 4 >= 64\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=15,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n  else:\n      require accrualBlockNumber <= block.number\n      if not ext_call.return_data[32]:\n          if totalBorrows >= 0:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=15,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n      else:\n          if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=6,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=15,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n          else:\n              if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n                  if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) == totalBorrows:\n                      if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=4,\n                                uint256 detail=2)\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=15,\n                                uint256 detail=0)\n                      else:\n                          if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=1,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=15,\n                            uint256 detail=0)\n                      if stor0 + 1 != stor0:\n                          revert with 0, 're-entered'\n              else:\n                  if totalBorrows >= 0:\n                      if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=4,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=15,\n                            uint256 detail=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef transferFrom(address sender, address recipient, uint256 amount): # not payable\n  require calldata.size - 4 >= 96\n  stor0++\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.transferAllowed(address cToken, address src, address dst, uint256 transferTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), address(sender), address(recipient), amount\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=3,\n            uint256 info=74,\n            uint256 detail=ext_call.return_data[0])\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      else:\n          return 0\n  if sender == recipient:\n      log Failure(\n            uint256 error=2,\n            uint256 info=75,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      else:\n          return 0\n  if sender == caller:\n      if amount > -1:\n          log Failure(\n                uint256 error=9,\n                uint256 info=75,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount > balanceOf[address(sender)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=76,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=77,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      balanceOf[address(sender)] -= amount\n      balanceOf[recipient] = amount + balanceOf[address(recipient)]\n  else:\n      if amount > allowance[address(sender)][caller]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=75,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount > balanceOf[address(sender)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=76,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=77,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      balanceOf[address(sender)] -= amount\n      balanceOf[recipient] = amount + balanceOf[address(recipient)]\n      if allowance[address(sender)][caller] != -1:\n          allowance[address(sender)][caller] -= amount\n  log 0x64ddf252: amount, sender, recipient\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.transferVerify(address cToken, address src, address dst, uint256 transferTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), address(sender), address(recipient), amount\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  if stor0 + 1 != stor0:\n      revert with 0, 're-entered'\n  return 1\n\ndef supplyRatePerBlock(): # not payable\n  require call.value <= eth.balance(this.address)\n  if not totalSupply:\n      require ext_code.size(interestRateModelAddress)\n      static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n              gas gas_remaining wei\n             args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 64\n      if ext_call.return_data[0]:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7752617465206661696c65,\n                      mem[213 len 15]\n      if not initialExchangeRateMantissa:\n          if 10^18 * totalBorrows / 10^18 != totalBorrows:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[437 len 15]\n          if 10^18 * totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[469 len 15]\n      if totalSupply * initialExchangeRateMantissa / initialExchangeRateMantissa != totalSupply:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720756e6465726c79696e67206661696c65,\n                      mem[341 len 15]\n      if 10^18 * totalBorrows / 10^18 != totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[437 len 15]\n      if not 10^18 * totalBorrows:\n          if not totalSupply * initialExchangeRateMantissa:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[469 len 15]\n          if reserveFactorMantissa > 10^18:\n              revert with 0, \n                          32,\n                          60,\n                          0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                          mem[640 len 4]\n          if not ext_call.return_data[32]:\n              return 0\n          if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n              revert with 0, \n                          32,\n                          49,\n                          0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                          mem[821 len 15]\n          if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n              revert with 0, \n                          32,\n                          49,\n                          0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                          mem[821 len 15]\n          if not (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n              return 0\n          if 0 / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 0 / totalSupply * initialExchangeRateMantissa:\n              revert with 0, \n                          32,\n                          49,\n                          0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                          mem[885 len 15]\n          if (0 / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + 5 * 10^17 < 5 * 10^17:\n              revert with 0, \n                          32,\n                          49,\n                          0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                          mem[885 len 15]\n          return ((0 / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + 5 * 10^17 / 10^18)\n      if 1000000000000000000 * 10^18 * totalBorrows / 10^18 * totalBorrows != 10^18:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[469 len 15]\n      if not totalSupply * initialExchangeRateMantissa:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[469 len 15]\n      if reserveFactorMantissa > 10^18:\n          revert with 0, \n                      32,\n                      60,\n                      0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                      mem[640 len 4]\n      if not ext_call.return_data[32]:\n          return 0\n      if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                      mem[821 len 15]\n      if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                      mem[821 len 15]\n      if not (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n          return 0\n      if 1000000000000000000 * 10^18 * totalBorrows / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 1000000000000000000 * 10^18 * totalBorrows / totalSupply * initialExchangeRateMantissa:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                      mem[885 len 15]\n      if (1000000000000000000 * 10^18 * totalBorrows / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + 5 * 10^17 < 5 * 10^17:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                      mem[885 len 15]\n      return ((1000000000000000000 * 10^18 * totalBorrows / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + 5 * 10^17 / 10^18)\n  if totalBorrows < 0:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[249 len 11]\n  if totalReserves > totalBorrows + eth.balance(this.address) - call.value:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[249 len 11]\n  if not totalBorrows + eth.balance(this.address) - call.value - totalReserves:\n      if not totalSupply:\n          revert with 0, \n                      32,\n                      53,\n                      0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                      mem[313 len 11]\n      require call.value <= eth.balance(this.address)\n      require ext_code.size(interestRateModelAddress)\n      static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n              gas gas_remaining wei\n             args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 64\n      if ext_call.return_data[0]:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7752617465206661696c65,\n                      mem[309 len 15]\n      if not 0 / totalSupply:\n          if 10^18 * totalBorrows / 10^18 != totalBorrows:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[533 len 15]\n          if 10^18 * totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[565 len 15]\n      if totalSupply * 0 / totalSupply / 0 / totalSupply != totalSupply:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720756e6465726c79696e67206661696c65,\n                      mem[437 len 15]\n      if 10^18 * totalBorrows / 10^18 != totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[533 len 15]\n      if not 10^18 * totalBorrows:\n          if not totalSupply * 0 / totalSupply:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if reserveFactorMantissa > 10^18:\n              revert with 0, \n                          32,\n                          60,\n                          0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                          mem[736 len 4]\n          if ext_call.return_data[32]:\n              if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n                  if 0 / totalSupply * 0 / totalSupply * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 0 / totalSupply * 0 / totalSupply:\n                      revert with 0, \n                                  32,\n                                  49,\n                                  0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                                  mem[981 len 15]\n      else:\n          if 1000000000000000000 * 10^18 * totalBorrows / 10^18 * totalBorrows != 10^18:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if not totalSupply * 0 / totalSupply:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if reserveFactorMantissa > 10^18:\n              revert with 0, \n                          32,\n                          60,\n                          0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                          mem[736 len 4]\n          if ext_call.return_data[32]:\n              if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n                  if 1000000000000000000 * 10^18 * totalBorrows / totalSupply * 0 / totalSupply * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 1000000000000000000 * 10^18 * totalBorrows / totalSupply * 0 / totalSupply:\n                      revert with 0, \n                                  32,\n                                  49,\n                                  0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                                  mem[981 len 15]\n  else:\n      if (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalBorrows + eth.balance(this.address) - call.value - totalReserves != 10^18:\n          revert with 0, \n                      32,\n                      53,\n                      0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                      mem[313 len 11]\n      if not totalSupply:\n          revert with 0, \n                      32,\n                      53,\n                      0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                      mem[313 len 11]\n      require call.value <= eth.balance(this.address)\n      require ext_code.size(interestRateModelAddress)\n      static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n              gas gas_remaining wei\n             args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 64\n      if ext_call.return_data[0]:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7752617465206661696c65,\n                      mem[309 len 15]\n      if not (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply:\n          if 10^18 * totalBorrows / 10^18 != totalBorrows:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[533 len 15]\n          if 10^18 * totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[565 len 15]\n      if totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply / (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply != totalSupply:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720756e6465726c79696e67206661696c65,\n                      mem[437 len 15]\n      if 10^18 * totalBorrows / 10^18 != totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[533 len 15]\n      if not 10^18 * totalBorrows:\n          if not totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if reserveFactorMantissa > 10^18:\n              revert with 0, \n                          32,\n                          60,\n                          0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                          mem[736 len 4]\n          if ext_call.return_data[32]:\n              if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n                  if 0 / totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 0 / totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply:\n                      revert with 0, \n                                  32,\n                                  49,\n                                  0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                                  mem[981 len 15]\n      else:\n          if 1000000000000000000 * 10^18 * totalBorrows / 10^18 * totalBorrows != 10^18:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if not totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if reserveFactorMantissa > 10^18:\n              revert with 0, \n                          32,\n                          60,\n                          0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                          mem[736 len 4]\n          if ext_call.return_data[32]:\n              if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n                  if 1000000000000000000 * 10^18 * totalBorrows / totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 1000000000000000000 * 10^18 * totalBorrows / totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply:\n                      revert with 0, \n                                  32,\n                                  49,\n                                  0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                                  mem[981 len 15]\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: # Palkeoramix decompiler. \n\nconst getCash = (eth.balance(this.address) - call.value)\nconst isCToken = 1\n\ndef storage:\n  stor0 is uint256 at storage 0\n  name is array of uint256 at storage 1\n  symbol is array of uint256 at storage 2\n  decimals is uint256 at storage 3\n  adminAddress is address at storage 4\n  pendingAdminAddress is address at storage 5\n  comptrollerAddress is address at storage 6\n  interestRateModelAddress is address at storage 7\n  initialExchangeRateMantissa is uint256 at storage 8\n  reserveFactorMantissa is uint256 at storage 9\n  accrualBlockNumber is uint256 at storage 10\n  borrowIndex is uint256 at storage 11\n  totalBorrows is uint256 at storage 12\n  totalReserves is uint256 at storage 13\n  totalSupply is uint256 at storage 14\n  balanceOf is mapping of uint256 at storage 15\n  allowance is mapping of uint256 at storage 16\n  stor17 is mapping of struct at storage 17\n\ndef name(): # not payable\n  return name[0 len name.length]\n\ndef reserveFactorMantissa(): # not payable\n  return reserveFactorMantissa\n\ndef totalSupply(): # not payable\n  return totalSupply\n\ndef pendingAdmin(): # not payable\n  return pendingAdminAddress\n\ndef decimals(): # not payable\n  return decimals\n\ndef totalBorrows(): # not payable\n  return totalBorrows\n\ndef comptroller(): # not payable\n  return comptrollerAddress\n\ndef initialExchangeRateMantissa(): # not payable\n  return initialExchangeRateMantissa\n\ndef accrualBlockNumber(): # not payable\n  return accrualBlockNumber\n\ndef balanceOf(address account): # not payable\n  require calldata.size - 4 >= 32\n  return balanceOf[address(account)]\n\ndef totalReserves(): # not payable\n  return totalReserves\n\ndef symbol(): # not payable\n  return symbol[0 len symbol.length]\n\ndef borrowIndex(): # not payable\n  return borrowIndex\n\ndef allowance(address owner, address spender): # not payable\n  require calldata.size - 4 >= 64\n  return allowance[address(owner)][address(spender)]\n\ndef interestRateModel(): # not payable\n  return interestRateModelAddress\n\ndef admin(): # not payable\n  return adminAddress\n\n#\n#  Regular functions\n#\n\ndef approve(address spender, uint256 amount): # not payable\n  require calldata.size - 4 >= 64\n  allowance[caller][address(spender)] = amount\n  log Approval(\n        address owner=amount,\n        address spender=caller,\n        uint256 value=spender)\n  return 1\n\ndef _setPendingAdmin(address newPendingAdmin): # not payable\n  require calldata.size - 4 >= 32\n  if adminAddress != caller:\n      log Failure(\n            uint256 error=1,\n            uint256 info=69,\n            uint256 detail=0)\n      return 1\n  pendingAdminAddress = newPendingAdmin\n  log NewPendingAdmin(\n        address oldPendingAdmin=pendingAdminAddress,\n        address newPendingAdmin=newPendingAdmin)\n  return 0\n\ndef _acceptAdmin(): # not payable\n  if pendingAdminAddress != caller:\n      log Failure(\n            uint256 error=1,\n            uint256 info=0,\n            uint256 detail=0)\n      return 1\n  if not caller:\n      log Failure(\n            uint256 error=1,\n            uint256 info=0,\n            uint256 detail=0)\n      return 1\n  adminAddress = pendingAdminAddress\n  pendingAdminAddress = 0\n  log NewAdmin(\n        address oldAdmin=adminAddress,\n        address newAdmin=pendingAdminAddress)\n  log NewPendingAdmin(\n        address oldPendingAdmin=pendingAdminAddress,\n        address newPendingAdmin=pendingAdminAddress)\n  return 0\n\ndef _setComptroller(address newComptroller): # not payable\n  require calldata.size - 4 >= 32\n  if adminAddress != caller:\n      log Failure(\n            uint256 error=1,\n            uint256 info=63,\n            uint256 detail=0)\n      return 1\n  require ext_code.size(newComptroller)\n  static call newComptroller.isComptroller() with:\n          gas gas_remaining wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if not ext_call.return_data[0]:\n      revert with 0, 'marker method returned false'\n  comptrollerAddress = newComptroller\n  log NewComptroller(\n        address oldComptroller=comptrollerAddress,\n        address newComptroller=newComptroller)\n  return 0\n\ndef borrowRatePerBlock(): # not payable\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if ext_call.return_data[0]:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  55,\n                  0x64626f72726f7752617465506572426c6f636b3a20696e746572657374526174654d6f64656c2e626f72726f7752617465206661696c65,\n                  mem[219 len 9]\n  return ext_call.return_data[32]\n\ndef borrowBalanceStored(address account): # not payable\n  require calldata.size - 4 >= 32\n  if not stor17[address(account)].field_0:\n      return 0\n  if borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_0 != borrowIndex:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  55,\n                  0x64626f72726f7742616c616e636553746f7265643a20626f72726f7742616c616e636553746f726564496e7465726e616c206661696c65,\n                  mem[219 len 9]\n  if not stor17[address(account)].field_256:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  55,\n                  0x64626f72726f7742616c616e636553746f7265643a20626f72726f7742616c616e636553746f726564496e7465726e616c206661696c65,\n                  mem[219 len 9]\n  return (borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_256)\n\ndef exchangeRateStored(): # not payable\n  if not totalSupply:\n      return initialExchangeRateMantissa\n  require call.value <= eth.balance(this.address)\n  if totalBorrows < 0:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[249 len 11]\n  if totalReserves > totalBorrows + eth.balance(this.address) - call.value:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[249 len 11]\n  if not totalBorrows + eth.balance(this.address) - call.value - totalReserves:\n      if not totalSupply:\n          revert with 0, \n                      32,\n                      53,\n                      0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                      mem[313 len 11]\n      return (0 / totalSupply)\n  if (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalBorrows + eth.balance(this.address) - call.value - totalReserves != 10^18:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[313 len 11]\n  if not totalSupply:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[313 len 11]\n  return ((10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply)\n\ndef seize(address liquidator, address borrower, uint256 seizeTokens): # not payable\n  require calldata.size - 4 >= 96\n  stor0++\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.seizeAllowed(address cTokenCollateral, address cTokenBorrowed, address liquidator, address borrower, uint256 seizeTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), caller, address(liquidator), borrower, seizeTokens\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=3,\n            uint256 info=27,\n            uint256 detail=ext_call.return_data[0])\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 3\n  if borrower == liquidator:\n      log Failure(\n            uint256 error=6,\n            uint256 info=28,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 6\n  if seizeTokens > balanceOf[address(borrower)]:\n      log Failure(\n            uint256 error=9,\n            uint256 info=26,\n            uint256 detail=3)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 9\n  if seizeTokens + balanceOf[address(liquidator)] < balanceOf[address(liquidator)]:\n      log Failure(\n            uint256 error=9,\n            uint256 info=25,\n            uint256 detail=2)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 9\n  balanceOf[address(borrower)] -= seizeTokens\n  balanceOf[liquidator] = seizeTokens + balanceOf[address(liquidator)]\n  log 0x64ddf252: seizeTokens, borrower, liquidator\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.seizeVerify(address cTokenCollateral, address cTokenBorrowed, address liquidator, address borrower, uint256 seizeTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), caller, address(liquidator), borrower, seizeTokens\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  if stor0 + 1 != stor0:\n      revert with 0, 're-entered'\n  else:\n      return 0\n\ndef accrueInterest(): # not payable\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          return 9\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              return 9\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              return 9\n          if reserveFactorMantissa:\n              if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18 * reserveFactorMantissa / reserveFactorMantissa == (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef totalBorrowsCurrent(): # not payable\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      revert with 0, 'accrue interest failed'\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18 * reserveFactorMantissa / reserveFactorMantissa == (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef exchangeRateCurrent(): # not payable\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      revert with 0, 'accrue interest failed'\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18 * reserveFactorMantissa / reserveFactorMantissa == (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef balanceOfUnderlying(address owner): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      revert with 0, 'accrue interest failed'\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18 * reserveFactorMantissa / reserveFactorMantissa == (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef borrowBalanceCurrent(address account): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      revert with 0, 'accrue interest failed'\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18 * reserveFactorMantissa / reserveFactorMantissa == (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef getAccountSnapshot(address account): # not payable\n  require calldata.size - 4 >= 32\n  if not stor17[address(account)].field_0:\n      if not totalSupply:\n          return 0, balanceOf[address(account)], 0, initialExchangeRateMantissa\n      require call.value <= eth.balance(this.address)\n      if totalBorrows >= 0:\n          if totalReserves <= totalBorrows + eth.balance(this.address) - call.value:\n              if not totalBorrows + eth.balance(this.address) - call.value - totalReserves:\n                  if totalSupply:\n                      return 0, balanceOf[address(account)], 0, 0 / totalSupply\n              else:\n                  if (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalBorrows + eth.balance(this.address) - call.value - totalReserves == 10^18:\n                      if totalSupply:\n                          return 0, \n                                 balanceOf[address(account)],\n                                 0,\n                                 (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply\n  else:\n      if borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_0 == borrowIndex:\n          if stor17[address(account)].field_256:\n              if not totalSupply:\n                  return 0, \n                         balanceOf[address(account)],\n                         borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_256,\n                         initialExchangeRateMantissa\n              require call.value <= eth.balance(this.address)\n              if totalBorrows >= 0:\n                  if totalReserves <= totalBorrows + eth.balance(this.address) - call.value:\n                      if not totalBorrows + eth.balance(this.address) - call.value - totalReserves:\n                          if totalSupply:\n                              return 0, \n                                     balanceOf[address(account)],\n                                     borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_256,\n                                     0 / totalSupply\n                      else:\n                          if (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalBorrows + eth.balance(this.address) - call.value - totalReserves == 10^18:\n                              if totalSupply:\n                                  return 0, \n                                         balanceOf[address(account)],\n                                         borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_256,\n                                         (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply\n  return 9, 0, 0, 0\n\ndef _setInterestRateModel(address newInterestRateModel): # not payable\n  require calldata.size - 4 >= 32\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=64,\n            uint256 detail=0)\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=64,\n                uint256 detail=0)\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=64,\n                uint256 detail=0)\n          return 9\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=64,\n                    uint256 detail=0)\n              return 9\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=64,\n                    uint256 detail=0)\n              return 9\n          if not reserveFactorMantissa:\n      else:\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=64,\n                    uint256 detail=0)\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef _reduceReserves(uint256 reduceAmount): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=48,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=48,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n  if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n      log Failure(\n            uint256 error=9,\n            uint256 info=6,\n            uint256 detail=2)\n  else:\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=48,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n      if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n          log Failure(\n                uint256 error=9,\n                uint256 info=1,\n                uint256 detail=2)\n      else:\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) >= (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              if not reserveFactorMantissa:\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n  log Failure(\n        uint256 error=9,\n        uint256 info=48,\n        uint256 detail=0)\n  if stor0 + 1 != stor0:\n      revert with 0, 're-entered'\n  return 9\n\ndef _setReserveFactor(uint256 newReserveFactorMantissa): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=70,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=70,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n  if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n      log Failure(\n            uint256 error=9,\n            uint256 info=6,\n            uint256 detail=2)\n  else:\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=70,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n      if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n          log Failure(\n                uint256 error=9,\n                uint256 info=1,\n                uint256 detail=2)\n      else:\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) >= (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              if not reserveFactorMantissa:\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n  log Failure(\n        uint256 error=9,\n        uint256 info=70,\n        uint256 detail=0)\n  if stor0 + 1 != stor0:\n      revert with 0, 're-entered'\n  return 9\n\ndef transfer(address recipient, uint256 amount): # not payable\n  require calldata.size - 4 >= 64\n  stor0++\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.transferAllowed(address cToken, address src, address dst, uint256 transferTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), caller, address(recipient), amount\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=3,\n            uint256 info=74,\n            uint256 detail=ext_call.return_data[0])\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      else:\n          return 0\n  if caller == recipient:\n      log Failure(\n            uint256 error=2,\n            uint256 info=75,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      else:\n          return 0\n  if caller == caller:\n      if amount > -1:\n          log Failure(\n                uint256 error=9,\n                uint256 info=75,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount > balanceOf[caller]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=76,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=77,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      balanceOf[caller] -= amount\n      balanceOf[recipient] = amount + balanceOf[address(recipient)]\n  else:\n      if amount > allowance[caller][caller]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=75,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount > balanceOf[caller]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=76,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=77,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      balanceOf[caller] -= amount\n      balanceOf[recipient] = amount + balanceOf[address(recipient)]\n      if allowance[caller][caller] != -1:\n          allowance[caller][caller] -= amount\n  log 0x64ddf252: amount, caller, recipient\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.transferVerify(address cToken, address src, address dst, uint256 transferTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), caller, address(recipient), amount\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  if stor0 + 1 != stor0:\n      revert with 0, 're-entered'\n  return 1\n\ndef borrow(uint256 borrowAmount): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=8,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=8,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=8,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=8,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=8,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) >= (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=8,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef redeem(uint256 amount): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=39,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=39,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=39,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) >= (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef redeemUnderlying(uint256 redeemAmount): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=39,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=39,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=39,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) >= (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef mint() payable: \n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=30,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n  else:\n      require accrualBlockNumber <= block.number\n      if not ext_call.return_data[32]:\n          if totalBorrows >= 0:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=30,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n      else:\n          if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=6,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=30,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n          else:\n              if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n                  if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) == totalBorrows:\n                      if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=4,\n                                uint256 detail=2)\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=30,\n                                uint256 detail=0)\n                      else:\n                          if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=1,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=30,\n                            uint256 detail=0)\n                      if stor0 + 1 != stor0:\n                          revert with 0, 're-entered'\n              else:\n                  if totalBorrows >= 0:\n                      if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=4,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=30,\n                            uint256 detail=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef repayBorrow() payable: \n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=54,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n  else:\n      require accrualBlockNumber <= block.number\n      if not ext_call.return_data[32]:\n          if totalBorrows >= 0:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=54,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n      else:\n          if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=6,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=54,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n          else:\n              if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n                  if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) == totalBorrows:\n                      if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=4,\n                                uint256 detail=2)\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=54,\n                                uint256 detail=0)\n                      else:\n                          if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=1,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=54,\n                            uint256 detail=0)\n                      if stor0 + 1 != stor0:\n                          revert with 0, 're-entered'\n              else:\n                  if totalBorrows >= 0:\n                      if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=4,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=54,\n                            uint256 detail=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef _fallback(?) payable: # default function\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=30,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n  else:\n      require accrualBlockNumber <= block.number\n      if not ext_call.return_data[32]:\n          if totalBorrows >= 0:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=30,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n      else:\n          if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=6,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=30,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n          else:\n              if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n                  if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) == totalBorrows:\n                      if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=4,\n                                uint256 detail=2)\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=30,\n                                uint256 detail=0)\n                      else:\n                          if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=1,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=30,\n                            uint256 detail=0)\n                      if stor0 + 1 != stor0:\n                          revert with 0, 're-entered'\n              else:\n                  if totalBorrows >= 0:\n                      if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=4,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=30,\n                            uint256 detail=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef repayBorrowBehalf(address borrower) payable: \n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=53,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n  else:\n      require accrualBlockNumber <= block.number\n      if not ext_call.return_data[32]:\n          if totalBorrows >= 0:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=53,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n      else:\n          if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=6,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=53,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n          else:\n              if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n                  if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) == totalBorrows:\n                      if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=4,\n                                uint256 detail=2)\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=53,\n                                uint256 detail=0)\n                      else:\n                          if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=1,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=53,\n                            uint256 detail=0)\n                      if stor0 + 1 != stor0:\n                          revert with 0, 're-entered'\n              else:\n                  if totalBorrows >= 0:\n                      if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=4,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=53,\n                            uint256 detail=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef liquidateBorrow(address borrower, address cTokenCollateral) payable: \n  require calldata.size - 4 >= 64\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=15,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n  else:\n      require accrualBlockNumber <= block.number\n      if not ext_call.return_data[32]:\n          if totalBorrows >= 0:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=15,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n      else:\n          if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=6,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=15,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n          else:\n              if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n                  if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) == totalBorrows:\n                      if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=4,\n                                uint256 detail=2)\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=15,\n                                uint256 detail=0)\n                      else:\n                          if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=1,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=15,\n                            uint256 detail=0)\n                      if stor0 + 1 != stor0:\n                          revert with 0, 're-entered'\n              else:\n                  if totalBorrows >= 0:\n                      if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=4,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=15,\n                            uint256 detail=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef transferFrom(address sender, address recipient, uint256 amount): # not payable\n  require calldata.size - 4 >= 96\n  stor0++\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.transferAllowed(address cToken, address src, address dst, uint256 transferTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), address(sender), address(recipient), amount\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=3,\n            uint256 info=74,\n            uint256 detail=ext_call.return_data[0])\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      else:\n          return 0\n  if sender == recipient:\n      log Failure(\n            uint256 error=2,\n            uint256 info=75,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      else:\n          return 0\n  if sender == caller:\n      if amount > -1:\n          log Failure(\n                uint256 error=9,\n                uint256 info=75,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount > balanceOf[address(sender)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=76,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=77,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      balanceOf[address(sender)] -= amount\n      balanceOf[recipient] = amount + balanceOf[address(recipient)]\n  else:\n      if amount > allowance[address(sender)][caller]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=75,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount > balanceOf[address(sender)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=76,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=77,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      balanceOf[address(sender)] -= amount\n      balanceOf[recipient] = amount + balanceOf[address(recipient)]\n      if allowance[address(sender)][caller] != -1:\n          allowance[address(sender)][caller] -= amount\n  log 0x64ddf252: amount, sender, recipient\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.transferVerify(address cToken, address src, address dst, uint256 transferTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), address(sender), address(recipient), amount\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  if stor0 + 1 != stor0:\n      revert with 0, 're-entered'\n  return 1\n\ndef supplyRatePerBlock(): # not payable\n  require call.value <= eth.balance(this.address)\n  if not totalSupply:\n      require ext_code.size(interestRateModelAddress)\n      static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n              gas gas_remaining wei\n             args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 64\n      if ext_call.return_data[0]:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7752617465206661696c65,\n                      mem[213 len 15]\n      if not initialExchangeRateMantissa:\n          if 10^18 * totalBorrows / 10^18 != totalBorrows:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[437 len 15]\n          if 10^18 * totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[469 len 15]\n      if totalSupply * initialExchangeRateMantissa / initialExchangeRateMantissa != totalSupply:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720756e6465726c79696e67206661696c65,\n                      mem[341 len 15]\n      if 10^18 * totalBorrows / 10^18 != totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[437 len 15]\n      if not 10^18 * totalBorrows:\n          if not totalSupply * initialExchangeRateMantissa:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[469 len 15]\n          if reserveFactorMantissa > 10^18:\n              revert with 0, \n                          32,\n                          60,\n                          0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                          mem[640 len 4]\n          if not ext_call.return_data[32]:\n              return 0\n          if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n              revert with 0, \n                          32,\n                          49,\n                          0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                          mem[821 len 15]\n          if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n              revert with 0, \n                          32,\n                          49,\n                          0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                          mem[821 len 15]\n          if not (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n              return 0\n          if 0 / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 0 / totalSupply * initialExchangeRateMantissa:\n              revert with 0, \n                          32,\n                          49,\n                          0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                          mem[885 len 15]\n          if (0 / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + 5 * 10^17 < 5 * 10^17:\n              revert with 0, \n                          32,\n                          49,\n                          0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                          mem[885 len 15]\n          return ((0 / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + 5 * 10^17 / 10^18)\n      if 1000000000000000000 * 10^18 * totalBorrows / 10^18 * totalBorrows != 10^18:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[469 len 15]\n      if not totalSupply * initialExchangeRateMantissa:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[469 len 15]\n      if reserveFactorMantissa > 10^18:\n          revert with 0, \n                      32,\n                      60,\n                      0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                      mem[640 len 4]\n      if not ext_call.return_data[32]:\n          return 0\n      if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                      mem[821 len 15]\n      if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                      mem[821 len 15]\n      if not (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n          return 0\n      if 1000000000000000000 * 10^18 * totalBorrows / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 1000000000000000000 * 10^18 * totalBorrows / totalSupply * initialExchangeRateMantissa:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                      mem[885 len 15]\n      if (1000000000000000000 * 10^18 * totalBorrows / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + 5 * 10^17 < 5 * 10^17:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                      mem[885 len 15]\n      return ((1000000000000000000 * 10^18 * totalBorrows / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + 5 * 10^17 / 10^18)\n  if totalBorrows < 0:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[249 len 11]\n  if totalReserves > totalBorrows + eth.balance(this.address) - call.value:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[249 len 11]\n  if not totalBorrows + eth.balance(this.address) - call.value - totalReserves:\n      if not totalSupply:\n          revert with 0, \n                      32,\n                      53,\n                      0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                      mem[313 len 11]\n      require call.value <= eth.balance(this.address)\n      require ext_code.size(interestRateModelAddress)\n      static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n              gas gas_remaining wei\n             args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 64\n      if ext_call.return_data[0]:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7752617465206661696c65,\n                      mem[309 len 15]\n      if not 0 / totalSupply:\n          if 10^18 * totalBorrows / 10^18 != totalBorrows:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[533 len 15]\n          if 10^18 * totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[565 len 15]\n      if totalSupply * 0 / totalSupply / 0 / totalSupply != totalSupply:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720756e6465726c79696e67206661696c65,\n                      mem[437 len 15]\n      if 10^18 * totalBorrows / 10^18 != totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[533 len 15]\n      if not 10^18 * totalBorrows:\n          if not totalSupply * 0 / totalSupply:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if reserveFactorMantissa > 10^18:\n              revert with 0, \n                          32,\n                          60,\n                          0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                          mem[736 len 4]\n          if ext_call.return_data[32]:\n              if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n                  if 0 / totalSupply * 0 / totalSupply * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 0 / totalSupply * 0 / totalSupply:\n                      revert with 0, \n                                  32,\n                                  49,\n                                  0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                                  mem[981 len 15]\n      else:\n          if 1000000000000000000 * 10^18 * totalBorrows / 10^18 * totalBorrows != 10^18:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if not totalSupply * 0 / totalSupply:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if reserveFactorMantissa > 10^18:\n              revert with 0, \n                          32,\n                          60,\n                          0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                          mem[736 len 4]\n          if ext_call.return_data[32]:\n              if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n                  if 1000000000000000000 * 10^18 * totalBorrows / totalSupply * 0 / totalSupply * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 1000000000000000000 * 10^18 * totalBorrows / totalSupply * 0 / totalSupply:\n                      revert with 0, \n                                  32,\n                                  49,\n                                  0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                                  mem[981 len 15]\n  else:\n      if (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalBorrows + eth.balance(this.address) - call.value - totalReserves != 10^18:\n          revert with 0, \n                      32,\n                      53,\n                      0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                      mem[313 len 11]\n      if not totalSupply:\n          revert with 0, \n                      32,\n                      53,\n                      0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                      mem[313 len 11]\n      require call.value <= eth.balance(this.address)\n      require ext_code.size(interestRateModelAddress)\n      static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n              gas gas_remaining wei\n             args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 64\n      if ext_call.return_data[0]:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7752617465206661696c65,\n                      mem[309 len 15]\n      if not (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply:\n          if 10^18 * totalBorrows / 10^18 != totalBorrows:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[533 len 15]\n          if 10^18 * totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[565 len 15]\n      if totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply / (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply != totalSupply:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720756e6465726c79696e67206661696c65,\n                      mem[437 len 15]\n      if 10^18 * totalBorrows / 10^18 != totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[533 len 15]\n      if not 10^18 * totalBorrows:\n          if not totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if reserveFactorMantissa > 10^18:\n              revert with 0, \n                          32,\n                          60,\n                          0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                          mem[736 len 4]\n          if ext_call.return_data[32]:\n              if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n                  if 0 / totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 0 / totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply:\n                      revert with 0, \n                                  32,\n                                  49,\n                                  0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                                  mem[981 len 15]\n      else:\n          if 1000000000000000000 * 10^18 * totalBorrows / 10^18 * totalBorrows != 10^18:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if not totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if reserveFactorMantissa > 10^18:\n              revert with 0, \n                          32,\n                          60,\n                          0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                          mem[736 len 4]\n          if ext_call.return_data[32]:\n              if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n                  if 1000000000000000000 * 10^18 * totalBorrows / totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 1000000000000000000 * 10^18 * totalBorrows / totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply:\n                      revert with 0, \n                                  32,\n                                  49,\n                                  0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                                  mem[981 len 15]\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: # Palkeoramix decompiler. \n\nconst getCash = (eth.balance(this.address) - call.value)\nconst isCToken = 1\n\ndef storage:\n  stor0 is uint256 at storage 0\n  name is array of uint256 at storage 1\n  symbol is array of uint256 at storage 2\n  decimals is uint256 at storage 3\n  adminAddress is address at storage 4\n  pendingAdminAddress is address at storage 5\n  comptrollerAddress is address at storage 6\n  interestRateModelAddress is address at storage 7\n  initialExchangeRateMantissa is uint256 at storage 8\n  reserveFactorMantissa is uint256 at storage 9\n  accrualBlockNumber is uint256 at storage 10\n  borrowIndex is uint256 at storage 11\n  totalBorrows is uint256 at storage 12\n  totalReserves is uint256 at storage 13\n  totalSupply is uint256 at storage 14\n  balanceOf is mapping of uint256 at storage 15\n  allowance is mapping of uint256 at storage 16\n  stor17 is mapping of struct at storage 17\n\ndef name(): # not payable\n  return name[0 len name.length]\n\ndef reserveFactorMantissa(): # not payable\n  return reserveFactorMantissa\n\ndef totalSupply(): # not payable\n  return totalSupply\n\ndef pendingAdmin(): # not payable\n  return pendingAdminAddress\n\ndef decimals(): # not payable\n  return decimals\n\ndef totalBorrows(): # not payable\n  return totalBorrows\n\ndef comptroller(): # not payable\n  return comptrollerAddress\n\ndef initialExchangeRateMantissa(): # not payable\n  return initialExchangeRateMantissa\n\ndef accrualBlockNumber(): # not payable\n  return accrualBlockNumber\n\ndef balanceOf(address account): # not payable\n  require calldata.size - 4 >= 32\n  return balanceOf[address(account)]\n\ndef totalReserves(): # not payable\n  return totalReserves\n\ndef symbol(): # not payable\n  return symbol[0 len symbol.length]\n\ndef borrowIndex(): # not payable\n  return borrowIndex\n\ndef allowance(address owner, address spender): # not payable\n  require calldata.size - 4 >= 64\n  return allowance[address(owner)][address(spender)]\n\ndef interestRateModel(): # not payable\n  return interestRateModelAddress\n\ndef admin(): # not payable\n  return adminAddress\n\n#\n#  Regular functions\n#\n\ndef approve(address spender, uint256 amount): # not payable\n  require calldata.size - 4 >= 64\n  allowance[caller][address(spender)] = amount\n  log Approval(\n        address owner=amount,\n        address spender=caller,\n        uint256 value=spender)\n  return 1\n\ndef _setPendingAdmin(address newPendingAdmin): # not payable\n  require calldata.size - 4 >= 32\n  if adminAddress != caller:\n      log Failure(\n            uint256 error=1,\n            uint256 info=69,\n            uint256 detail=0)\n      return 1\n  pendingAdminAddress = newPendingAdmin\n  log NewPendingAdmin(\n        address oldPendingAdmin=pendingAdminAddress,\n        address newPendingAdmin=newPendingAdmin)\n  return 0\n\ndef _acceptAdmin(): # not payable\n  if pendingAdminAddress != caller:\n      log Failure(\n            uint256 error=1,\n            uint256 info=0,\n            uint256 detail=0)\n      return 1\n  if not caller:\n      log Failure(\n            uint256 error=1,\n            uint256 info=0,\n            uint256 detail=0)\n      return 1\n  adminAddress = pendingAdminAddress\n  pendingAdminAddress = 0\n  log NewAdmin(\n        address oldAdmin=adminAddress,\n        address newAdmin=pendingAdminAddress)\n  log NewPendingAdmin(\n        address oldPendingAdmin=pendingAdminAddress,\n        address newPendingAdmin=pendingAdminAddress)\n  return 0\n\ndef _setComptroller(address newComptroller): # not payable\n  require calldata.size - 4 >= 32\n  if adminAddress != caller:\n      log Failure(\n            uint256 error=1,\n            uint256 info=63,\n            uint256 detail=0)\n      return 1\n  require ext_code.size(newComptroller)\n  static call newComptroller.isComptroller() with:\n          gas gas_remaining wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if not ext_call.return_data[0]:\n      revert with 0, 'marker method returned false'\n  comptrollerAddress = newComptroller\n  log NewComptroller(\n        address oldComptroller=comptrollerAddress,\n        address newComptroller=newComptroller)\n  return 0\n\ndef borrowRatePerBlock(): # not payable\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if ext_call.return_data[0]:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  55,\n                  0x64626f72726f7752617465506572426c6f636b3a20696e746572657374526174654d6f64656c2e626f72726f7752617465206661696c65,\n                  mem[219 len 9]\n  return ext_call.return_data[32]\n\ndef borrowBalanceStored(address account): # not payable\n  require calldata.size - 4 >= 32\n  if not stor17[address(account)].field_0:\n      return 0\n  if borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_0 != borrowIndex:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  55,\n                  0x64626f72726f7742616c616e636553746f7265643a20626f72726f7742616c616e636553746f726564496e7465726e616c206661696c65,\n                  mem[219 len 9]\n  if not stor17[address(account)].field_256:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  55,\n                  0x64626f72726f7742616c616e636553746f7265643a20626f72726f7742616c616e636553746f726564496e7465726e616c206661696c65,\n                  mem[219 len 9]\n  return (borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_256)\n\ndef exchangeRateStored(): # not payable\n  if not totalSupply:\n      return initialExchangeRateMantissa\n  require call.value <= eth.balance(this.address)\n  if totalBorrows < 0:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[249 len 11]\n  if totalReserves > totalBorrows + eth.balance(this.address) - call.value:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[249 len 11]\n  if not totalBorrows + eth.balance(this.address) - call.value - totalReserves:\n      if not totalSupply:\n          revert with 0, \n                      32,\n                      53,\n                      0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                      mem[313 len 11]\n      return (0 / totalSupply)\n  if (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalBorrows + eth.balance(this.address) - call.value - totalReserves != 10^18:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[313 len 11]\n  if not totalSupply:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[313 len 11]\n  return ((10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply)\n\ndef seize(address liquidator, address borrower, uint256 seizeTokens): # not payable\n  require calldata.size - 4 >= 96\n  stor0++\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.seizeAllowed(address cTokenCollateral, address cTokenBorrowed, address liquidator, address borrower, uint256 seizeTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), caller, address(liquidator), borrower, seizeTokens\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=3,\n            uint256 info=27,\n            uint256 detail=ext_call.return_data[0])\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 3\n  if borrower == liquidator:\n      log Failure(\n            uint256 error=6,\n            uint256 info=28,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 6\n  if seizeTokens > balanceOf[address(borrower)]:\n      log Failure(\n            uint256 error=9,\n            uint256 info=26,\n            uint256 detail=3)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 9\n  if seizeTokens + balanceOf[address(liquidator)] < balanceOf[address(liquidator)]:\n      log Failure(\n            uint256 error=9,\n            uint256 info=25,\n            uint256 detail=2)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 9\n  balanceOf[address(borrower)] -= seizeTokens\n  balanceOf[liquidator] = seizeTokens + balanceOf[address(liquidator)]\n  log 0x64ddf252: seizeTokens, borrower, liquidator\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.seizeVerify(address cTokenCollateral, address cTokenBorrowed, address liquidator, address borrower, uint256 seizeTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), caller, address(liquidator), borrower, seizeTokens\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  if stor0 + 1 != stor0:\n      revert with 0, 're-entered'\n  else:\n      return 0\n\ndef accrueInterest(): # not payable\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          return 9\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              return 9\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              return 9\n          if reserveFactorMantissa:\n              if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18 * reserveFactorMantissa / reserveFactorMantissa == (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef totalBorrowsCurrent(): # not payable\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      revert with 0, 'accrue interest failed'\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18 * reserveFactorMantissa / reserveFactorMantissa == (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef exchangeRateCurrent(): # not payable\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      revert with 0, 'accrue interest failed'\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18 * reserveFactorMantissa / reserveFactorMantissa == (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef balanceOfUnderlying(address owner): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      revert with 0, 'accrue interest failed'\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18 * reserveFactorMantissa / reserveFactorMantissa == (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef borrowBalanceCurrent(address account): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      revert with 0, 'accrue interest failed'\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          revert with 0, 'accrue interest failed'\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              revert with 0, 'accrue interest failed'\n          if reserveFactorMantissa:\n              if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18 * reserveFactorMantissa / reserveFactorMantissa == (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef getAccountSnapshot(address account): # not payable\n  require calldata.size - 4 >= 32\n  if not stor17[address(account)].field_0:\n      if not totalSupply:\n          return 0, balanceOf[address(account)], 0, initialExchangeRateMantissa\n      require call.value <= eth.balance(this.address)\n      if totalBorrows >= 0:\n          if totalReserves <= totalBorrows + eth.balance(this.address) - call.value:\n              if not totalBorrows + eth.balance(this.address) - call.value - totalReserves:\n                  if totalSupply:\n                      return 0, balanceOf[address(account)], 0, 0 / totalSupply\n              else:\n                  if (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalBorrows + eth.balance(this.address) - call.value - totalReserves == 10^18:\n                      if totalSupply:\n                          return 0, \n                                 balanceOf[address(account)],\n                                 0,\n                                 (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply\n  else:\n      if borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_0 == borrowIndex:\n          if stor17[address(account)].field_256:\n              if not totalSupply:\n                  return 0, \n                         balanceOf[address(account)],\n                         borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_256,\n                         initialExchangeRateMantissa\n              require call.value <= eth.balance(this.address)\n              if totalBorrows >= 0:\n                  if totalReserves <= totalBorrows + eth.balance(this.address) - call.value:\n                      if not totalBorrows + eth.balance(this.address) - call.value - totalReserves:\n                          if totalSupply:\n                              return 0, \n                                     balanceOf[address(account)],\n                                     borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_256,\n                                     0 / totalSupply\n                      else:\n                          if (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalBorrows + eth.balance(this.address) - call.value - totalReserves == 10^18:\n                              if totalSupply:\n                                  return 0, \n                                         balanceOf[address(account)],\n                                         borrowIndex * stor17[address(account)].field_0 / stor17[address(account)].field_256,\n                                         (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply\n  return 9, 0, 0, 0\n\ndef _setInterestRateModel(address newInterestRateModel): # not payable\n  require calldata.size - 4 >= 32\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=64,\n            uint256 detail=0)\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=64,\n                uint256 detail=0)\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=64,\n                uint256 detail=0)\n          return 9\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=64,\n                    uint256 detail=0)\n              return 9\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=64,\n                    uint256 detail=0)\n              return 9\n          if not reserveFactorMantissa:\n      else:\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=64,\n                    uint256 detail=0)\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef _reduceReserves(uint256 reduceAmount): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=48,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=48,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n  if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n      log Failure(\n            uint256 error=9,\n            uint256 info=6,\n            uint256 detail=2)\n  else:\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=48,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n      if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n          log Failure(\n                uint256 error=9,\n                uint256 info=1,\n                uint256 detail=2)\n      else:\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) >= (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              if not reserveFactorMantissa:\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n  log Failure(\n        uint256 error=9,\n        uint256 info=48,\n        uint256 detail=0)\n  if stor0 + 1 != stor0:\n      revert with 0, 're-entered'\n  return 9\n\ndef _setReserveFactor(uint256 newReserveFactorMantissa): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=70,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=70,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n  if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n      log Failure(\n            uint256 error=9,\n            uint256 info=6,\n            uint256 detail=2)\n  else:\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=70,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n      if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n          log Failure(\n                uint256 error=9,\n                uint256 info=1,\n                uint256 detail=2)\n      else:\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) >= (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              if not reserveFactorMantissa:\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n  log Failure(\n        uint256 error=9,\n        uint256 info=70,\n        uint256 detail=0)\n  if stor0 + 1 != stor0:\n      revert with 0, 're-entered'\n  return 9\n\ndef transfer(address recipient, uint256 amount): # not payable\n  require calldata.size - 4 >= 64\n  stor0++\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.transferAllowed(address cToken, address src, address dst, uint256 transferTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), caller, address(recipient), amount\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=3,\n            uint256 info=74,\n            uint256 detail=ext_call.return_data[0])\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      else:\n          return 0\n  if caller == recipient:\n      log Failure(\n            uint256 error=2,\n            uint256 info=75,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      else:\n          return 0\n  if caller == caller:\n      if amount > -1:\n          log Failure(\n                uint256 error=9,\n                uint256 info=75,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount > balanceOf[caller]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=76,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=77,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      balanceOf[caller] -= amount\n      balanceOf[recipient] = amount + balanceOf[address(recipient)]\n  else:\n      if amount > allowance[caller][caller]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=75,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount > balanceOf[caller]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=76,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=77,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      balanceOf[caller] -= amount\n      balanceOf[recipient] = amount + balanceOf[address(recipient)]\n      if allowance[caller][caller] != -1:\n          allowance[caller][caller] -= amount\n  log 0x64ddf252: amount, caller, recipient\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.transferVerify(address cToken, address src, address dst, uint256 transferTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), caller, address(recipient), amount\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  if stor0 + 1 != stor0:\n      revert with 0, 're-entered'\n  return 1\n\ndef borrow(uint256 borrowAmount): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=8,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=8,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=8,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=8,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=8,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) >= (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=8,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef redeem(uint256 amount): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=39,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=39,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=39,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) >= (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef redeemUnderlying(uint256 redeemAmount): # not payable\n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=39,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      return 5\n  require accrualBlockNumber <= block.number\n  if not ext_call.return_data[32]:\n      if totalBorrows < 0:\n          log Failure(\n                uint256 error=9,\n                uint256 info=4,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=39,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if reserveFactorMantissa:\n          if not 0 / reserveFactorMantissa:\n  else:\n      if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n          log Failure(\n                uint256 error=9,\n                uint256 info=6,\n                uint256 detail=2)\n          log Failure(\n                uint256 error=9,\n                uint256 info=39,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          return 9\n      if not (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n          if totalBorrows < 0:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if reserveFactorMantissa:\n              if not 0 / reserveFactorMantissa:\n      else:\n          if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) != totalBorrows:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=1,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n              return 9\n          if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) >= (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=39,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef mint() payable: \n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=30,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n  else:\n      require accrualBlockNumber <= block.number\n      if not ext_call.return_data[32]:\n          if totalBorrows >= 0:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=30,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n      else:\n          if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=6,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=30,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n          else:\n              if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n                  if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) == totalBorrows:\n                      if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=4,\n                                uint256 detail=2)\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=30,\n                                uint256 detail=0)\n                      else:\n                          if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=1,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=30,\n                            uint256 detail=0)\n                      if stor0 + 1 != stor0:\n                          revert with 0, 're-entered'\n              else:\n                  if totalBorrows >= 0:\n                      if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=4,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=30,\n                            uint256 detail=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef repayBorrow() payable: \n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=54,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n  else:\n      require accrualBlockNumber <= block.number\n      if not ext_call.return_data[32]:\n          if totalBorrows >= 0:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=54,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n      else:\n          if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=6,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=54,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n          else:\n              if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n                  if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) == totalBorrows:\n                      if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=4,\n                                uint256 detail=2)\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=54,\n                                uint256 detail=0)\n                      else:\n                          if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=1,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=54,\n                            uint256 detail=0)\n                      if stor0 + 1 != stor0:\n                          revert with 0, 're-entered'\n              else:\n                  if totalBorrows >= 0:\n                      if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=4,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=54,\n                            uint256 detail=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef _fallback(?) payable: # default function\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=30,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n  else:\n      require accrualBlockNumber <= block.number\n      if not ext_call.return_data[32]:\n          if totalBorrows >= 0:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=30,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n      else:\n          if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=6,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=30,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n          else:\n              if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n                  if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) == totalBorrows:\n                      if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=4,\n                                uint256 detail=2)\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=30,\n                                uint256 detail=0)\n                      else:\n                          if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=1,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=30,\n                            uint256 detail=0)\n                      if stor0 + 1 != stor0:\n                          revert with 0, 're-entered'\n              else:\n                  if totalBorrows >= 0:\n                      if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=4,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=30,\n                            uint256 detail=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef repayBorrowBehalf(address borrower) payable: \n  require calldata.size - 4 >= 32\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=53,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n  else:\n      require accrualBlockNumber <= block.number\n      if not ext_call.return_data[32]:\n          if totalBorrows >= 0:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=53,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n      else:\n          if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=6,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=53,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n          else:\n              if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n                  if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) == totalBorrows:\n                      if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=4,\n                                uint256 detail=2)\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=53,\n                                uint256 detail=0)\n                      else:\n                          if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=1,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=53,\n                            uint256 detail=0)\n                      if stor0 + 1 != stor0:\n                          revert with 0, 're-entered'\n              else:\n                  if totalBorrows >= 0:\n                      if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=4,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=53,\n                            uint256 detail=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef liquidateBorrow(address borrower, address cTokenCollateral) payable: \n  require calldata.size - 4 >= 64\n  stor0++\n  require call.value <= eth.balance(this.address)\n  require ext_code.size(interestRateModelAddress)\n  static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n          gas gas_remaining wei\n         args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  if 5 * 10^14 < ext_call.return_data[32]:\n      revert with 0, 'borrow rate is absurdly high'\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=5,\n            uint256 info=2,\n            uint256 detail=ext_call.return_data[0])\n      log Failure(\n            uint256 error=5,\n            uint256 info=15,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n  else:\n      require accrualBlockNumber <= block.number\n      if not ext_call.return_data[32]:\n          if totalBorrows >= 0:\n              if not reserveFactorMantissa:\n          else:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=4,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=15,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n      else:\n          if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) / ext_call.return_data[32] != block.number - accrualBlockNumber:\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=6,\n                    uint256 detail=2)\n              log Failure(\n                    uint256 error=9,\n                    uint256 info=15,\n                    uint256 detail=0)\n              if stor0 + 1 != stor0:\n                  revert with 0, 're-entered'\n          else:\n              if (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]):\n                  if (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / (block.number * ext_call.return_data[32]) - (accrualBlockNumber * ext_call.return_data[32]) == totalBorrows:\n                      if totalBorrows + ((block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18) < (block.number * ext_call.return_data[32] * totalBorrows) - (accrualBlockNumber * ext_call.return_data[32] * totalBorrows) / 10^18:\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=4,\n                                uint256 detail=2)\n                          log Failure(\n                                uint256 error=9,\n                                uint256 info=15,\n                                uint256 detail=0)\n                      else:\n                          if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=1,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=15,\n                            uint256 detail=0)\n                      if stor0 + 1 != stor0:\n                          revert with 0, 're-entered'\n              else:\n                  if totalBorrows >= 0:\n                      if reserveFactorMantissa:\n                  else:\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=4,\n                            uint256 detail=2)\n                      log Failure(\n                            uint256 error=9,\n                            uint256 info=15,\n                            uint256 detail=0)\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef transferFrom(address sender, address recipient, uint256 amount): # not payable\n  require calldata.size - 4 >= 96\n  stor0++\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.transferAllowed(address cToken, address src, address dst, uint256 transferTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), address(sender), address(recipient), amount\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  if ext_call.return_data[0]:\n      log Failure(\n            uint256 error=3,\n            uint256 info=74,\n            uint256 detail=ext_call.return_data[0])\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      else:\n          return 0\n  if sender == recipient:\n      log Failure(\n            uint256 error=2,\n            uint256 info=75,\n            uint256 detail=0)\n      if stor0 + 1 != stor0:\n          revert with 0, 're-entered'\n      else:\n          return 0\n  if sender == caller:\n      if amount > -1:\n          log Failure(\n                uint256 error=9,\n                uint256 info=75,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount > balanceOf[address(sender)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=76,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=77,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      balanceOf[address(sender)] -= amount\n      balanceOf[recipient] = amount + balanceOf[address(recipient)]\n  else:\n      if amount > allowance[address(sender)][caller]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=75,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount > balanceOf[address(sender)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=76,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:\n          log Failure(\n                uint256 error=9,\n                uint256 info=77,\n                uint256 detail=0)\n          if stor0 + 1 != stor0:\n              revert with 0, 're-entered'\n          else:\n              return 0\n      balanceOf[address(sender)] -= amount\n      balanceOf[recipient] = amount + balanceOf[address(recipient)]\n      if allowance[address(sender)][caller] != -1:\n          allowance[address(sender)][caller] -= amount\n  log 0x64ddf252: amount, sender, recipient\n  require ext_code.size(comptrollerAddress)\n  call comptrollerAddress.transferVerify(address cToken, address src, address dst, uint256 transferTokens) with:\n       gas gas_remaining wei\n      args 0, uint32(this.address), address(sender), address(recipient), amount\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  if stor0 + 1 != stor0:\n      revert with 0, 're-entered'\n  return 1\n\ndef supplyRatePerBlock(): # not payable\n  require call.value <= eth.balance(this.address)\n  if not totalSupply:\n      require ext_code.size(interestRateModelAddress)\n      static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n              gas gas_remaining wei\n             args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 64\n      if ext_call.return_data[0]:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7752617465206661696c65,\n                      mem[213 len 15]\n      if not initialExchangeRateMantissa:\n          if 10^18 * totalBorrows / 10^18 != totalBorrows:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[437 len 15]\n          if 10^18 * totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[469 len 15]\n      if totalSupply * initialExchangeRateMantissa / initialExchangeRateMantissa != totalSupply:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720756e6465726c79696e67206661696c65,\n                      mem[341 len 15]\n      if 10^18 * totalBorrows / 10^18 != totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[437 len 15]\n      if not 10^18 * totalBorrows:\n          if not totalSupply * initialExchangeRateMantissa:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[469 len 15]\n          if reserveFactorMantissa > 10^18:\n              revert with 0, \n                          32,\n                          60,\n                          0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                          mem[640 len 4]\n          if not ext_call.return_data[32]:\n              return 0\n          if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n              revert with 0, \n                          32,\n                          49,\n                          0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                          mem[821 len 15]\n          if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n              revert with 0, \n                          32,\n                          49,\n                          0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                          mem[821 len 15]\n          if not (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n              return 0\n          if 0 / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 0 / totalSupply * initialExchangeRateMantissa:\n              revert with 0, \n                          32,\n                          49,\n                          0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                          mem[885 len 15]\n          if (0 / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + 5 * 10^17 < 5 * 10^17:\n              revert with 0, \n                          32,\n                          49,\n                          0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                          mem[885 len 15]\n          return ((0 / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + 5 * 10^17 / 10^18)\n      if 1000000000000000000 * 10^18 * totalBorrows / 10^18 * totalBorrows != 10^18:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[469 len 15]\n      if not totalSupply * initialExchangeRateMantissa:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[469 len 15]\n      if reserveFactorMantissa > 10^18:\n          revert with 0, \n                      32,\n                      60,\n                      0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                      mem[640 len 4]\n      if not ext_call.return_data[32]:\n          return 0\n      if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                      mem[821 len 15]\n      if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                      mem[821 len 15]\n      if not (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n          return 0\n      if 1000000000000000000 * 10^18 * totalBorrows / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 1000000000000000000 * 10^18 * totalBorrows / totalSupply * initialExchangeRateMantissa:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                      mem[885 len 15]\n      if (1000000000000000000 * 10^18 * totalBorrows / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + 5 * 10^17 < 5 * 10^17:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                      mem[885 len 15]\n      return ((1000000000000000000 * 10^18 * totalBorrows / totalSupply * initialExchangeRateMantissa * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + 5 * 10^17 / 10^18)\n  if totalBorrows < 0:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[249 len 11]\n  if totalReserves > totalBorrows + eth.balance(this.address) - call.value:\n      revert with 0, \n                  32,\n                  53,\n                  0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                  mem[249 len 11]\n  if not totalBorrows + eth.balance(this.address) - call.value - totalReserves:\n      if not totalSupply:\n          revert with 0, \n                      32,\n                      53,\n                      0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                      mem[313 len 11]\n      require call.value <= eth.balance(this.address)\n      require ext_code.size(interestRateModelAddress)\n      static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n              gas gas_remaining wei\n             args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 64\n      if ext_call.return_data[0]:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7752617465206661696c65,\n                      mem[309 len 15]\n      if not 0 / totalSupply:\n          if 10^18 * totalBorrows / 10^18 != totalBorrows:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[533 len 15]\n          if 10^18 * totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[565 len 15]\n      if totalSupply * 0 / totalSupply / 0 / totalSupply != totalSupply:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720756e6465726c79696e67206661696c65,\n                      mem[437 len 15]\n      if 10^18 * totalBorrows / 10^18 != totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[533 len 15]\n      if not 10^18 * totalBorrows:\n          if not totalSupply * 0 / totalSupply:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if reserveFactorMantissa > 10^18:\n              revert with 0, \n                          32,\n                          60,\n                          0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                          mem[736 len 4]\n          if ext_call.return_data[32]:\n              if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n                  if 0 / totalSupply * 0 / totalSupply * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 0 / totalSupply * 0 / totalSupply:\n                      revert with 0, \n                                  32,\n                                  49,\n                                  0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                                  mem[981 len 15]\n      else:\n          if 1000000000000000000 * 10^18 * totalBorrows / 10^18 * totalBorrows != 10^18:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if not totalSupply * 0 / totalSupply:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if reserveFactorMantissa > 10^18:\n              revert with 0, \n                          32,\n                          60,\n                          0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                          mem[736 len 4]\n          if ext_call.return_data[32]:\n              if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n                  if 1000000000000000000 * 10^18 * totalBorrows / totalSupply * 0 / totalSupply * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 1000000000000000000 * 10^18 * totalBorrows / totalSupply * 0 / totalSupply:\n                      revert with 0, \n                                  32,\n                                  49,\n                                  0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                                  mem[981 len 15]\n  else:\n      if (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalBorrows + eth.balance(this.address) - call.value - totalReserves != 10^18:\n          revert with 0, \n                      32,\n                      53,\n                      0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                      mem[313 len 11]\n      if not totalSupply:\n          revert with 0, \n                      32,\n                      53,\n                      0x6465786368616e67655261746553746f7265643a2065786368616e67655261746553746f726564496e7465726e616c206661696c65,\n                      mem[313 len 11]\n      require call.value <= eth.balance(this.address)\n      require ext_code.size(interestRateModelAddress)\n      static call interestRateModelAddress.getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) with:\n              gas gas_remaining wei\n             args eth.balance(this.address) - call.value, totalBorrows, totalReserves\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 64\n      if ext_call.return_data[0]:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7752617465206661696c65,\n                      mem[309 len 15]\n      if not (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply:\n          if 10^18 * totalBorrows / 10^18 != totalBorrows:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[533 len 15]\n          if 10^18 * totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[565 len 15]\n      if totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply / (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply != totalSupply:\n          revert with 0, \n                      32,\n                      49,\n                      0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720756e6465726c79696e67206661696c65,\n                      mem[437 len 15]\n      if 10^18 * totalBorrows / 10^18 != totalBorrows:\n          revert with 0, \n                      32,\n                      49,\n                      0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                      mem[533 len 15]\n      if not 10^18 * totalBorrows:\n          if not totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if reserveFactorMantissa > 10^18:\n              revert with 0, \n                          32,\n                          60,\n                          0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                          mem[736 len 4]\n          if ext_call.return_data[32]:\n              if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n                  if 0 / totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 0 / totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply:\n                      revert with 0, \n                                  32,\n                                  49,\n                                  0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                                  mem[981 len 15]\n      else:\n          if 1000000000000000000 * 10^18 * totalBorrows / 10^18 * totalBorrows != 10^18:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if not totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply:\n              revert with 0, \n                          32,\n                          49,\n                          0xfe737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720626f72726f7773506572206661696c65,\n                          mem[565 len 15]\n          if reserveFactorMantissa > 10^18:\n              revert with 0, \n                          32,\n                          60,\n                          0xef737570706c7952617465506572426c6f636b3a2063616c63756c6174696e67206f6e654d696e757352657365727665466163746f72206661696c65,\n                          mem[736 len 4]\n          if ext_call.return_data[32]:\n              if (10^18 * ext_call.return_data[32]) - (reserveFactorMantissa * ext_call.return_data[32]) / ext_call.return_data[32] != -reserveFactorMantissa + 10^18:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 < 5 * 10^17:\n                  revert with 0, \n                              32,\n                              49,\n                              0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                              mem[917 len 15]\n              if (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18:\n                  if 1000000000000000000 * 10^18 * totalBorrows / totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply * (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 / (10^18 * ext_call.return_data[32]) + (-1 * reserveFactorMantissa * ext_call.return_data[32]) + 5 * 10^17 / 10^18 != 1000000000000000000 * 10^18 * totalBorrows / totalSupply * (10^18 * totalBorrows) + (10^18 * eth.balance(this.address)) - (10^18 * call.value) - (10^18 * totalReserves) / totalSupply:\n                      revert with 0, \n                                  32,\n                                  49,\n                                  0x64737570706c7952617465506572426c6f636b3a2063616c63756c6174696e6720737570706c7952617465206661696c65,\n                                  mem[981 len 15]\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n.",
	"status": "1",
	"time_cost": 63.961912631988525,
	"usage": {
		"completion_tokens": 713,
		"prompt_tokens": 27159,
		"total_tokens": 27872
	}
}