{
	"address": "0xc56b13ebbcffa67cfb7979b900b736b3fb480d78",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Sure, Here is a simple representation of the decompiled code in Solidity.\n\n```solidity\npragma solidity ^0.8.0;\n\ncontract MyContract {\n    uint256 public _totalSupply;\n    uint256 public _startdate;\n    uint256 private stor_4;\n    uint256 private stor_5;\n    uint256 private stor_6;\n    uint256 private stor_7;\n    mapping (address => uint256) private _balanceOf;\n    mapping (address => mapping(address => uint256)) private _allowance;\n    address private stor_0_0_19;\n    uint8 private _stage;\n    address private _owner;\n    address private _transferby;\n    uint8 private stor_2_20_20;\n    uint256 private stor_ec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b;\n    \n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    \n    constructor() {\n        _owner = msg.sender;\n    }\n\n    function fallback() public payable {\n        // Logic for the fallback function\n    }\n\n    function end_ICO() public {\n        require(_owner == msg.sender);\n        require(_stage == 1);\n        require(block.timestamp > stor_7);\n        _stage = 3;\n    }\n\n    function approve(address spender, uint256 value) public returns (bool) {\n        _allowance[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;\n    }\n\n    function releaseICO() public {\n        require(_owner == msg.sender);\n        stor_2_20_20 = 0;\n        _stage = 1;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n        require(value <= _balanceOf[from]);\n        require(value <= _allowance[from][msg.sender]);\n\n        _balanceOf[from] -= value;\n        _balanceOf[to] += value;\n        _allowance[from][msg.sender] -= value;\n        emit Transfer(from, to, value);\n        return true;\n    }\n\n    function decimals() public pure returns (uint8) {\n        return 8;\n    }\n\n    function StopICO() public {\n        require(_owner == msg.sender);\n        stor_2_20_20 = 1;\n        _stage = 2;\n    }\n\n    function balanceOf(address account) public view returns (uint256) {\n        return _balanceOf[account];\n    }\n\n    function start_ICO() public {\n        require(_owner == msg.sender);\n        _stage = 1;\n        stor_2_20_20 = 0;\n        _startdate = block.timestamp;\n        stor_4 = block.timestamp + 0x127500;\n        stor_5 = block.timestamp + 0x24ea00;\n        stor_6 = block.timestamp + 0x375f00;\n        stor_7 = 0x49d400 + block.timestamp;\n    }\n\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    function set_centralAccount(address account) public {\n        require(_owner == msg.sender);\n        _transferby = account;\n    }\n\n    function transfer(address to, uint256 value) public returns (bool) {\n        require(value <= _balanceOf[msg.sender]);\n        \n        _balanceOf[msg.sender] -= value;\n        _balanceOf[to] += value;\n        emit Transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferOwnership(address newOwner) public {\n        require(_owner == msg.sender);\n        _owner = newOwner;\n    }\n\n    function _SafeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeAdd: addition overflow\");\n\n        return c;\n    }\n}\n```\nPlease note that the \"fallback\" function in the decompiled code seems to be incomplete and overly complex. The Solidity fallback function is a default function that is executed if no other function matches the given function signature, or if no data is supplied at all. But in the given decompiled code, it is complex and not clear, so I left it as a placeholder in the Solidity contract. You might have to replace it with the actual logic.",
				"role": "assistant"
			}
		}
	],
	"created": 1701460646,
	"id": "chatcmpl-8R3vayRk4By8z6bBrKxCXC9gGrOG1",
	"input_format": "DecompiledCode",
	"ir": "// Decompiled at www.contract-library.com\n// 2021.08.22 01:10 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _totalSupply; // STORAGE[0x1]\nuint256 _startdate; // STORAGE[0x3]\nuint256 stor_4; // STORAGE[0x4]\nuint256 stor_5; // STORAGE[0x5]\nuint256 stor_6; // STORAGE[0x6]\nuint256 stor_7; // STORAGE[0x7]\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x9]\nmapping (uint256 => [uint256]) _allowance; // STORAGE[0xa]\naddress stor_0_0_19; // STORAGE[0x0] bytes 0 to 19\nuint8 _stage; // STORAGE[0xb] bytes 0 to 0\naddress _owner; // STORAGE[0x2] bytes 0 to 19\naddress _transferby; // STORAGE[0x8] bytes 0 to 19\nuint8 stor_2_20_20; // STORAGE[0x2] bytes 20 to 20\nuint256 stor_ec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b; // STORAGE[0xec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b]\n\n// Events\nApproval(address, address, uint256);\nTransfer(address, address, uint256);\n\nfunction fallback() public payable { \n    assert(_stage <= 3);\n    require(_stage == 1);\n    require(msg.value >= 0x38d7ea4c68000);\n    v0 = v1 = !stor_2_20_20;\n    if (!stor_2_20_20) {\n        v0 = v2 = _owner != msg.sender;\n    }\n    require(v0);\n    MEM[32 + MEM[64]] = 0;\n    require(stor_0_0_19.code.size);\n    v3, v4 = stor_0_0_19.USD(0).gas(msg.gas - 710);\n    require(v3);\n    v5 = 0x8de(14, v4);\n    assert(0x5f5e100);\n    assert(v5 / 0x5f5e100);\n    v6 = msg.value / (v5 / 0x5f5e100);\n    v7 = v8 = 0;\n    if (block.timestamp >= stor_4) {\n        v9 = v10 = block.timestamp >= stor_4;\n        if (v10) {\n            v9 = v11 = block.timestamp < stor_5;\n        }\n        if (!v9) {\n            v12 = v13 = block.timestamp >= stor_5;\n            if (v13) {\n                v12 = v14 = block.timestamp < stor_6;\n            }\n            if (!v12) {\n                v15 = v16 = block.timestamp >= stor_6;\n                if (v16) {\n                    v15 = v17 = block.timestamp < stor_7;\n                }\n                if (v15) {\n                    v18 = v19 = v6 >= 0x2e90edd000;\n                    if (v6 >= 0x2e90edd000) {\n                        v18 = v20 = v6 <= 0x1d1a3543f00;\n                    }\n                    if (!v18) {\n                        v21 = v22 = v6 > 0x1d1a3543f00;\n                        if (v22) {\n                            v21 = v23 = v6 <= 0xda46fb60f00;\n                        }\n                        if (!v21) {\n                            if (v6 <= 0xda46fb60f00) {\n                                v24 = v25 = 1342;\n                                v26 = v27 = 100;\n                                v28 = v29 = 0x8de(15, v6);\n                            } else {\n                                v24 = v30 = 764;\n                                v26 = v31 = 100;\n                                v28 = v32 = 0x8de(30, v6);\n                            }\n                        } else {\n                            v24 = v33 = 764;\n                            v26 = v34 = 100;\n                            v28 = v35 = 0x8de(25, v6);\n                        }\n                    } else {\n                        v24 = v36 = 764;\n                        v26 = v37 = 100;\n                        v28 = v38 = 0x8de(20, v6);\n                    }\n                }\n            } else {\n                v39 = v40 = v6 >= 0x2e90edd000;\n                if (v6 >= 0x2e90edd000) {\n                    v39 = v41 = v6 <= 0x1d1a3543f00;\n                }\n                if (!v39) {\n                    v42 = v43 = v6 > 0x1d1a3543f00;\n                    if (v43) {\n                        v42 = v44 = v6 <= 0xda46fb60f00;\n                    }\n                    if (!v42) {\n                        if (v6 <= 0xda46fb60f00) {\n                            v24 = v45 = 764;\n                            v26 = v46 = 100;\n                            v28 = v47 = 0x8de(25, v6);\n                        } else {\n                            v24 = v48 = 645;\n                            v26 = v49 = 100;\n                            v28 = v50 = 0x8de(40, v6);\n                        }\n                    } else {\n                        v24 = v51 = 645;\n                        v26 = v52 = 100;\n                        v28 = v53 = 0x8de(35, v6);\n                    }\n                } else {\n                    v24 = v54 = 645;\n                    v26 = v55 = 100;\n                    v28 = v56 = 0x8de(30, v6);\n                }\n            }\n        } else {\n            v57 = v58 = v6 >= 0x2e90edd000;\n            if (v6 >= 0x2e90edd000) {\n                v57 = v59 = v6 <= 0x1d1a3543f00;\n            }\n            if (!v57) {\n                v60 = v61 = v6 > 0x1d1a3543f00;\n                if (v61) {\n                    v60 = v62 = v6 <= 0xda46fb60f00;\n                }\n                if (!v60) {\n                    if (v6 <= 0xda46fb60f00) {\n                        v24 = v63 = 764;\n                        v26 = v64 = 100;\n                        v28 = v65 = 0x8de(35, v6);\n                    } else {\n                        v24 = v66 = 645;\n                        v26 = v67 = 100;\n                        v28 = v68 = 0x8de(50, v6);\n                    }\n                } else {\n                    v24 = v69 = 645;\n                    v26 = v70 = 100;\n                    v28 = v71 = 0x8de(45, v6);\n                }\n            } else {\n                v24 = v72 = 645;\n                v26 = v73 = 100;\n                v28 = v74 = 0x8de(40, v6);\n            }\n        }\n    } else {\n        v75 = v76 = v6 >= 0x2e90edd000;\n        if (v6 >= 0x2e90edd000) {\n            v75 = v77 = v6 <= 0x1d1a3543f00;\n        }\n        if (!v75) {\n            v78 = v79 = v6 > 0x1d1a3543f00;\n            if (v79) {\n                v78 = v80 = v6 <= 0xda46fb60f00;\n            }\n            if (!v78) {\n                if (v6 <= 0xda46fb60f00) {\n                    v24 = v81 = 764;\n                    v26 = v82 = 100;\n                    v28 = v83 = 0x8de(45, v6);\n                } else {\n                    v24 = v84 = 645;\n                    v26 = v85 = 100;\n                    v28 = v86 = 0x8de(60, v6);\n                }\n            } else {\n                v24 = v87 = 645;\n                v26 = v88 = 100;\n                v28 = v89 = 0x8de(55, v6);\n            }\n        } else {\n            v24 = v90 = 645;\n            v26 = v91 = 100;\n            v28 = v92 = 0x8de(50, v6);\n        }\n    }\n    assert(v26);\n    v7 = v28 / v26;\n    goto {'0x285', '0x2fc', '0x53e'};\n    goto 0x541;\n    MEM[32 + MEM[64]] = 0;\n    require((address(this)).code.size);\n    v93, v94 = address(this).transfer(msg.sender, v6 + v7).gas(msg.gas - 710);\n    require(v93);\n}\n\nfunction _SafeAdd(uint256 varg0, uint256 varg1) private { \n    v0 = varg0 + varg1;\n    assert(v0 >= varg1);\n    return v0;\n}\n\nfunction end_ICO() public nonPayable { \n    require(_owner == msg.sender);\n    assert(_stage <= 3);\n    require(_stage == 1);\n    require(block.timestamp > stor_7);\n    _stage = 3;\n}\n\nfunction name() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v2 + v0.data] = MEM[v1.data + v2];\n        v2 += 32;\n    }\n    if (21) {\n        MEM[v0.data] = ~0xffffffffffffffffffffff & 'Social Activity Token';\n    }\n    return v0;\n}\n\nfunction approve(address varg0, uint256 varg1) public nonPayable { \n    v0 = v1 = !varg1;\n    if (varg1) {\n        v0 = v2 = !_allowance[varg0];\n    }\n    require(v0);\n    require(varg0);\n    _allowance[varg0] = varg1;\n    emit Approval(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction releaseICO() public nonPayable { \n    require(_owner == msg.sender);\n    assert(_stage <= 3);\n    require(_stage == 2);\n    stor_2_20_20 = 0;\n    _stage = 1;\n}\n\nfunction totalSupply() public nonPayable { \n    return _totalSupply;\n}\n\nfunction transferFrom(address varg0, address varg1, uint256 varg2) public nonPayable { \n    require(varg1);\n    assert(varg2 <= _balanceOf[varg0]);\n    _balanceOf[varg0] = _balanceOf[varg0] - varg2;\n    assert(varg2 <= _balanceOf[msg.sender]);\n    _allowance[msg.sender] = _balanceOf[msg.sender] - varg2;\n    v0 = _SafeAdd(varg2, _balanceOf[varg1]);\n    _balanceOf[varg1] = v0;\n    emit Transfer(varg0, varg1, varg2);\n    return 1;\n}\n\nfunction decimals() public nonPayable { \n    return 8;\n}\n\nfunction StopICO() public nonPayable { \n    require(_owner == msg.sender);\n    assert(_stage <= 3);\n    require(_stage == 1);\n    stor_2_20_20 = 1;\n    _stage = 2;\n}\n\nfunction burn(uint256 varg0) public nonPayable { \n    require(_owner == msg.sender);\n    require(varg0 <= _balanceOf[address(this)]);\n    assert(varg0 <= _totalSupply);\n    _totalSupply = _totalSupply - varg0;\n    assert(varg0 <= _balanceOf[address(this)]);\n    _balanceOf[address(this)] = _balanceOf[address(this)] - varg0;\n    MEM[0] = 0;\n    v0 = _SafeAdd(varg0, stor_ec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b);\n    MEM[32] = 9;\n    stor_ec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b = v0;\n    emit Transfer(address(this), 0, varg0);\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction start_ICO() public nonPayable { \n    require(_owner == msg.sender);\n    assert(_stage <= 3);\n    require(_stage == 0);\n    _stage = 1;\n    stor_2_20_20 = 0;\n    _startdate = block.timestamp;\n    stor_4 = block.timestamp + 0x127500;\n    stor_5 = block.timestamp + 0x24ea00;\n    stor_6 = block.timestamp + 0x375f00;\n    stor_7 = 0x49d400 + block.timestamp;\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction symbol() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v2 + v0.data] = MEM[v1.data + v2];\n        v2 += 32;\n    }\n    if (3) {\n        MEM[v0.data] = 0x5341540000000000000000000000000000000000000000000000000000000000;\n    }\n    return v0;\n}\n\nfunction set_centralAccount(address varg0) public nonPayable { \n    require(_owner == msg.sender);\n    _transferby = varg0;\n}\n\nfunction drain() public nonPayable { \n    require(_owner == msg.sender);\n    v0 = _owner.call().value((address(this)).balance).gas(2300 * !(address(this)).balance);\n    require(v0);\n}\n\nfunction _totalsupply() public nonPayable { \n    return _totalSupply;\n}\n\nfunction transfer(address varg0, uint256 varg1) public nonPayable { \n    require(varg0);\n    assert(varg1 <= _balanceOf[msg.sender]);\n    _balanceOf[msg.sender] = _balanceOf[msg.sender] - varg1;\n    v0 = _SafeAdd(varg1, _balanceOf[varg0]);\n    _balanceOf[varg0] = v0;\n    emit Transfer(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction stage() public nonPayable { \n    assert(_stage <= 3);\n    return _stage;\n}\n\nfunction startdate() public nonPayable { \n    return _startdate;\n}\n\nfunction allowance(address varg0, address varg1) public nonPayable { \n    v0 = v1 = varg0;\n    if (varg0) {\n        v0 = v2 = varg1;\n    }\n    require(v0);\n    return _allowance[varg1];\n}\n\nfunction transferby(address varg0, address varg1, uint256 varg2) public nonPayable { \n    require(_transferby == msg.sender);\n    require(varg1);\n    require(varg0 == address(this));\n    assert(varg2 <= _balanceOf[varg0]);\n    _balanceOf[varg0] = _balanceOf[varg0] - varg2;\n    v0 = _SafeAdd(varg2, _balanceOf[varg1]);\n    _balanceOf[varg1] = v0;\n    if (!varg0) {\n        v1 = _SafeAdd(varg2, _totalSupply);\n        _totalSupply = v1;\n    }\n    emit Transfer(varg0, varg1, varg2);\n    return 1;\n}\n\nfunction transferOwnership(address varg0) public nonPayable { \n    require(_owner == msg.sender);\n    v0 = _SafeAdd(_balanceOf[_owner], _balanceOf[varg0]);\n    _balanceOf[varg0] = v0;\n    _balanceOf[_owner] = 0;\n    _owner = varg0;\n}\n\nfunction 0x8de(uint256 varg0, uint256 varg1) private { \n    if (varg1) {\n        v0 = v1 = varg0 * varg1;\n        assert(varg1);\n        assert(v1 / varg1 == varg0);\n    } else {\n        v0 = v2 = 0;\n    }\n    return v0;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint256 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length >= 4) {\n        v0 = uint32(function_selector >> 224);\n        if (v0 == 0x2c3d7f6) {\n            end_ICO();\n        } else if (0x6fdde03 == v0) {\n            name();\n        } else if (0x95ea7b3 == v0) {\n            approve(address,uint256);\n        } else if (0x124d3396 == v0) {\n            releaseICO();\n        } else if (0x18160ddd == v0) {\n            totalSupply();\n        } else if (0x23b872dd == v0) {\n            transferFrom(address,address,uint256);\n        } else if (0x313ce567 == v0) {\n            decimals();\n        } else if (0x3dbedbd4 == v0) {\n            StopICO();\n        } else if (0x42966c68 == v0) {\n            burn(uint256);\n        } else if (0x70a08231 == v0) {\n            balanceOf(address);\n        } else if (0x807d2da3 == v0) {\n            start_ICO();\n        } else if (0x8da5cb5b == v0) {\n            owner();\n        } else if (0x95d89b41 == v0) {\n            symbol();\n        } else if (0x97668720 == v0) {\n            set_centralAccount(address);\n        } else if (0x9890220b == v0) {\n            drain();\n        } else if (0xa393dc44 == v0) {\n            _totalsupply();\n        } else if (0xa9059cbb == v0) {\n            transfer(address,uint256);\n        } else if (0xc040e6b8 == v0) {\n            stage();\n        } else if (0xcde9f2ea == v0) {\n            startdate();\n        } else if (0xdd62ed3e == v0) {\n            allowance(address,address);\n        } else if (0xeb9763ed == v0) {\n            transferby(address,address,uint256);\n        } else if (0xf2fde38b == v0) {\n            transferOwnership(address);\n        }\n    }\n    fallback();\n}\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.22 01:10 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _totalSupply; // STORAGE[0x1]\nuint256 _startdate; // STORAGE[0x3]\nuint256 stor_4; // STORAGE[0x4]\nuint256 stor_5; // STORAGE[0x5]\nuint256 stor_6; // STORAGE[0x6]\nuint256 stor_7; // STORAGE[0x7]\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x9]\nmapping (uint256 => [uint256]) _allowance; // STORAGE[0xa]\naddress stor_0_0_19; // STORAGE[0x0] bytes 0 to 19\nuint8 _stage; // STORAGE[0xb] bytes 0 to 0\naddress _owner; // STORAGE[0x2] bytes 0 to 19\naddress _transferby; // STORAGE[0x8] bytes 0 to 19\nuint8 stor_2_20_20; // STORAGE[0x2] bytes 20 to 20\nuint256 stor_ec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b; // STORAGE[0xec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b]\n\n// Events\nApproval(address, address, uint256);\nTransfer(address, address, uint256);\n\nfunction fallback() public payable { \n    assert(_stage <= 3);\n    require(_stage == 1);\n    require(msg.value >= 0x38d7ea4c68000);\n    v0 = v1 = !stor_2_20_20;\n    if (!stor_2_20_20) {\n        v0 = v2 = _owner != msg.sender;\n    }\n    require(v0);\n    MEM[32 + MEM[64]] = 0;\n    require(stor_0_0_19.code.size);\n    v3, v4 = stor_0_0_19.USD(0).gas(msg.gas - 710);\n    require(v3);\n    v5 = 0x8de(14, v4);\n    assert(0x5f5e100);\n    assert(v5 / 0x5f5e100);\n    v6 = msg.value / (v5 / 0x5f5e100);\n    v7 = v8 = 0;\n    if (block.timestamp >= stor_4) {\n        v9 = v10 = block.timestamp >= stor_4;\n        if (v10) {\n            v9 = v11 = block.timestamp < stor_5;\n        }\n        if (!v9) {\n            v12 = v13 = block.timestamp >= stor_5;\n            if (v13) {\n                v12 = v14 = block.timestamp < stor_6;\n            }\n            if (!v12) {\n                v15 = v16 = block.timestamp >= stor_6;\n                if (v16) {\n                    v15 = v17 = block.timestamp < stor_7;\n                }\n                if (v15) {\n                    v18 = v19 = v6 >= 0x2e90edd000;\n                    if (v6 >= 0x2e90edd000) {\n                        v18 = v20 = v6 <= 0x1d1a3543f00;\n                    }\n                    if (!v18) {\n                        v21 = v22 = v6 > 0x1d1a3543f00;\n                        if (v22) {\n                            v21 = v23 = v6 <= 0xda46fb60f00;\n                        }\n                        if (!v21) {\n                            if (v6 <= 0xda46fb60f00) {\n                                v24 = v25 = 1342;\n                                v26 = v27 = 100;\n                                v28 = v29 = 0x8de(15, v6);\n                            } else {\n                                v24 = v30 = 764;\n                                v26 = v31 = 100;\n                                v28 = v32 = 0x8de(30, v6);\n                            }\n                        } else {\n                            v24 = v33 = 764;\n                            v26 = v34 = 100;\n                            v28 = v35 = 0x8de(25, v6);\n                        }\n                    } else {\n                        v24 = v36 = 764;\n                        v26 = v37 = 100;\n                        v28 = v38 = 0x8de(20, v6);\n                    }\n                }\n            } else {\n                v39 = v40 = v6 >= 0x2e90edd000;\n                if (v6 >= 0x2e90edd000) {\n                    v39 = v41 = v6 <= 0x1d1a3543f00;\n                }\n                if (!v39) {\n                    v42 = v43 = v6 > 0x1d1a3543f00;\n                    if (v43) {\n                        v42 = v44 = v6 <= 0xda46fb60f00;\n                    }\n                    if (!v42) {\n                        if (v6 <= 0xda46fb60f00) {\n                            v24 = v45 = 764;\n                            v26 = v46 = 100;\n                            v28 = v47 = 0x8de(25, v6);\n                        } else {\n                            v24 = v48 = 645;\n                            v26 = v49 = 100;\n                            v28 = v50 = 0x8de(40, v6);\n                        }\n                    } else {\n                        v24 = v51 = 645;\n                        v26 = v52 = 100;\n                        v28 = v53 = 0x8de(35, v6);\n                    }\n                } else {\n                    v24 = v54 = 645;\n                    v26 = v55 = 100;\n                    v28 = v56 = 0x8de(30, v6);\n                }\n            }\n        } else {\n            v57 = v58 = v6 >= 0x2e90edd000;\n            if (v6 >= 0x2e90edd000) {\n                v57 = v59 = v6 <= 0x1d1a3543f00;\n            }\n            if (!v57) {\n                v60 = v61 = v6 > 0x1d1a3543f00;\n                if (v61) {\n                    v60 = v62 = v6 <= 0xda46fb60f00;\n                }\n                if (!v60) {\n                    if (v6 <= 0xda46fb60f00) {\n                        v24 = v63 = 764;\n                        v26 = v64 = 100;\n                        v28 = v65 = 0x8de(35, v6);\n                    } else {\n                        v24 = v66 = 645;\n                        v26 = v67 = 100;\n                        v28 = v68 = 0x8de(50, v6);\n                    }\n                } else {\n                    v24 = v69 = 645;\n                    v26 = v70 = 100;\n                    v28 = v71 = 0x8de(45, v6);\n                }\n            } else {\n                v24 = v72 = 645;\n                v26 = v73 = 100;\n                v28 = v74 = 0x8de(40, v6);\n            }\n        }\n    } else {\n        v75 = v76 = v6 >= 0x2e90edd000;\n        if (v6 >= 0x2e90edd000) {\n            v75 = v77 = v6 <= 0x1d1a3543f00;\n        }\n        if (!v75) {\n            v78 = v79 = v6 > 0x1d1a3543f00;\n            if (v79) {\n                v78 = v80 = v6 <= 0xda46fb60f00;\n            }\n            if (!v78) {\n                if (v6 <= 0xda46fb60f00) {\n                    v24 = v81 = 764;\n                    v26 = v82 = 100;\n                    v28 = v83 = 0x8de(45, v6);\n                } else {\n                    v24 = v84 = 645;\n                    v26 = v85 = 100;\n                    v28 = v86 = 0x8de(60, v6);\n                }\n            } else {\n                v24 = v87 = 645;\n                v26 = v88 = 100;\n                v28 = v89 = 0x8de(55, v6);\n            }\n        } else {\n            v24 = v90 = 645;\n            v26 = v91 = 100;\n            v28 = v92 = 0x8de(50, v6);\n        }\n    }\n    assert(v26);\n    v7 = v28 / v26;\n    goto {'0x285', '0x2fc', '0x53e'};\n    goto 0x541;\n    MEM[32 + MEM[64]] = 0;\n    require((address(this)).code.size);\n    v93, v94 = address(this).transfer(msg.sender, v6 + v7).gas(msg.gas - 710);\n    require(v93);\n}\n\nfunction _SafeAdd(uint256 varg0, uint256 varg1) private { \n    v0 = varg0 + varg1;\n    assert(v0 >= varg1);\n    return v0;\n}\n\nfunction end_ICO() public nonPayable { \n    require(_owner == msg.sender);\n    assert(_stage <= 3);\n    require(_stage == 1);\n    require(block.timestamp > stor_7);\n    _stage = 3;\n}\n\nfunction name() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v2 + v0.data] = MEM[v1.data + v2];\n        v2 += 32;\n    }\n    if (21) {\n        MEM[v0.data] = ~0xffffffffffffffffffffff & 'Social Activity Token';\n    }\n    return v0;\n}\n\nfunction approve(address varg0, uint256 varg1) public nonPayable { \n    v0 = v1 = !varg1;\n    if (varg1) {\n        v0 = v2 = !_allowance[varg0];\n    }\n    require(v0);\n    require(varg0);\n    _allowance[varg0] = varg1;\n    emit Approval(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction releaseICO() public nonPayable { \n    require(_owner == msg.sender);\n    assert(_stage <= 3);\n    require(_stage == 2);\n    stor_2_20_20 = 0;\n    _stage = 1;\n}\n\nfunction totalSupply() public nonPayable { \n    return _totalSupply;\n}\n\nfunction transferFrom(address varg0, address varg1, uint256 varg2) public nonPayable { \n    require(varg1);\n    assert(varg2 <= _balanceOf[varg0]);\n    _balanceOf[varg0] = _balanceOf[varg0] - varg2;\n    assert(varg2 <= _balanceOf[msg.sender]);\n    _allowance[msg.sender] = _balanceOf[msg.sender] - varg2;\n    v0 = _SafeAdd(varg2, _balanceOf[varg1]);\n    _balanceOf[varg1] = v0;\n    emit Transfer(varg0, varg1, varg2);\n    return 1;\n}\n\nfunction decimals() public nonPayable { \n    return 8;\n}\n\nfunction StopICO() public nonPayable { \n    require(_owner == msg.sender);\n    assert(_stage <= 3);\n    require(_stage == 1);\n    stor_2_20_20 = 1;\n    _stage = 2;\n}\n\nfunction burn(uint256 varg0) public nonPayable { \n    require(_owner == msg.sender);\n    require(varg0 <= _balanceOf[address(this)]);\n    assert(varg0 <= _totalSupply);\n    _totalSupply = _totalSupply - varg0;\n    assert(varg0 <= _balanceOf[address(this)]);\n    _balanceOf[address(this)] = _balanceOf[address(this)] - varg0;\n    MEM[0] = 0;\n    v0 = _SafeAdd(varg0, stor_ec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b);\n    MEM[32] = 9;\n    stor_ec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b = v0;\n    emit Transfer(address(this), 0, varg0);\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction start_ICO() public nonPayable { \n    require(_owner == msg.sender);\n    assert(_stage <= 3);\n    require(_stage == 0);\n    _stage = 1;\n    stor_2_20_20 = 0;\n    _startdate = block.timestamp;\n    stor_4 = block.timestamp + 0x127500;\n    stor_5 = block.timestamp + 0x24ea00;\n    stor_6 = block.timestamp + 0x375f00;\n    stor_7 = 0x49d400 + block.timestamp;\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction symbol() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v2 + v0.data] = MEM[v1.data + v2];\n        v2 += 32;\n    }\n    if (3) {\n        MEM[v0.data] = 0x5341540000000000000000000000000000000000000000000000000000000000;\n    }\n    return v0;\n}\n\nfunction set_centralAccount(address varg0) public nonPayable { \n    require(_owner == msg.sender);\n    _transferby = varg0;\n}\n\nfunction drain() public nonPayable { \n    require(_owner == msg.sender);\n    v0 = _owner.call().value((address(this)).balance).gas(2300 * !(address(this)).balance);\n    require(v0);\n}\n\nfunction _totalsupply() public nonPayable { \n    return _totalSupply;\n}\n\nfunction transfer(address varg0, uint256 varg1) public nonPayable { \n    require(varg0);\n    assert(varg1 <= _balanceOf[msg.sender]);\n    _balanceOf[msg.sender] = _balanceOf[msg.sender] - varg1;\n    v0 = _SafeAdd(varg1, _balanceOf[varg0]);\n    _balanceOf[varg0] = v0;\n    emit Transfer(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction stage() public nonPayable { \n    assert(_stage <= 3);\n    return _stage;\n}\n\nfunction startdate() public nonPayable { \n    return _startdate;\n}\n\nfunction allowance(address varg0, address varg1) public nonPayable { \n    v0 = v1 = varg0;\n    if (varg0) {\n        v0 = v2 = varg1;\n    }\n    require(v0);\n    return _allowance[varg1];\n}\n\nfunction transferby(address varg0, address varg1, uint256 varg2) public nonPayable { \n    require(_transferby == msg.sender);\n    require(varg1);\n    require(varg0 == address(this));\n    assert(varg2 <= _balanceOf[varg0]);\n    _balanceOf[varg0] = _balanceOf[varg0] - varg2;\n    v0 = _SafeAdd(varg2, _balanceOf[varg1]);\n    _balanceOf[varg1] = v0;\n    if (!varg0) {\n        v1 = _SafeAdd(varg2, _totalSupply);\n        _totalSupply = v1;\n    }\n    emit Transfer(varg0, varg1, varg2);\n    return 1;\n}\n\nfunction transferOwnership(address varg0) public nonPayable { \n    require(_owner == msg.sender);\n    v0 = _SafeAdd(_balanceOf[_owner], _balanceOf[varg0]);\n    _balanceOf[varg0] = v0;\n    _balanceOf[_owner] = 0;\n    _owner = varg0;\n}\n\nfunction 0x8de(uint256 varg0, uint256 varg1) private { \n    if (varg1) {\n        v0 = v1 = varg0 * varg1;\n        assert(varg1);\n        assert(v1 / varg1 == varg0);\n    } else {\n        v0 = v2 = 0;\n    }\n    return v0;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint256 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length >= 4) {\n        v0 = uint32(function_selector >> 224);\n        if (v0 == 0x2c3d7f6) {\n            end_ICO();\n        } else if (0x6fdde03 == v0) {\n            name();\n        } else if (0x95ea7b3 == v0) {\n            approve(address,uint256);\n        } else if (0x124d3396 == v0) {\n            releaseICO();\n        } else if (0x18160ddd == v0) {\n            totalSupply();\n        } else if (0x23b872dd == v0) {\n            transferFrom(address,address,uint256);\n        } else if (0x313ce567 == v0) {\n            decimals();\n        } else if (0x3dbedbd4 == v0) {\n            StopICO();\n        } else if (0x42966c68 == v0) {\n            burn(uint256);\n        } else if (0x70a08231 == v0) {\n            balanceOf(address);\n        } else if (0x807d2da3 == v0) {\n            start_ICO();\n        } else if (0x8da5cb5b == v0) {\n            owner();\n        } else if (0x95d89b41 == v0) {\n            symbol();\n        } else if (0x97668720 == v0) {\n            set_centralAccount(address);\n        } else if (0x9890220b == v0) {\n            drain();\n        } else if (0xa393dc44 == v0) {\n            _totalsupply();\n        } else if (0xa9059cbb == v0) {\n            transfer(address,uint256);\n        } else if (0xc040e6b8 == v0) {\n            stage();\n        } else if (0xcde9f2ea == v0) {\n            startdate();\n        } else if (0xdd62ed3e == v0) {\n            allowance(address,address);\n        } else if (0xeb9763ed == v0) {\n            transferby(address,address,uint256);\n        } else if (0xf2fde38b == v0) {\n            transferOwnership(address);\n        }\n    }\n    fallback();\n}\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.22 01:10 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _totalSupply; // STORAGE[0x1]\nuint256 _startdate; // STORAGE[0x3]\nuint256 stor_4; // STORAGE[0x4]\nuint256 stor_5; // STORAGE[0x5]\nuint256 stor_6; // STORAGE[0x6]\nuint256 stor_7; // STORAGE[0x7]\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x9]\nmapping (uint256 => [uint256]) _allowance; // STORAGE[0xa]\naddress stor_0_0_19; // STORAGE[0x0] bytes 0 to 19\nuint8 _stage; // STORAGE[0xb] bytes 0 to 0\naddress _owner; // STORAGE[0x2] bytes 0 to 19\naddress _transferby; // STORAGE[0x8] bytes 0 to 19\nuint8 stor_2_20_20; // STORAGE[0x2] bytes 20 to 20\nuint256 stor_ec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b; // STORAGE[0xec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b]\n\n// Events\nApproval(address, address, uint256);\nTransfer(address, address, uint256);\n\nfunction fallback() public payable { \n    assert(_stage <= 3);\n    require(_stage == 1);\n    require(msg.value >= 0x38d7ea4c68000);\n    v0 = v1 = !stor_2_20_20;\n    if (!stor_2_20_20) {\n        v0 = v2 = _owner != msg.sender;\n    }\n    require(v0);\n    MEM[32 + MEM[64]] = 0;\n    require(stor_0_0_19.code.size);\n    v3, v4 = stor_0_0_19.USD(0).gas(msg.gas - 710);\n    require(v3);\n    v5 = 0x8de(14, v4);\n    assert(0x5f5e100);\n    assert(v5 / 0x5f5e100);\n    v6 = msg.value / (v5 / 0x5f5e100);\n    v7 = v8 = 0;\n    if (block.timestamp >= stor_4) {\n        v9 = v10 = block.timestamp >= stor_4;\n        if (v10) {\n            v9 = v11 = block.timestamp < stor_5;\n        }\n        if (!v9) {\n            v12 = v13 = block.timestamp >= stor_5;\n            if (v13) {\n                v12 = v14 = block.timestamp < stor_6;\n            }\n            if (!v12) {\n                v15 = v16 = block.timestamp >= stor_6;\n                if (v16) {\n                    v15 = v17 = block.timestamp < stor_7;\n                }\n                if (v15) {\n                    v18 = v19 = v6 >= 0x2e90edd000;\n                    if (v6 >= 0x2e90edd000) {\n                        v18 = v20 = v6 <= 0x1d1a3543f00;\n                    }\n                    if (!v18) {\n                        v21 = v22 = v6 > 0x1d1a3543f00;\n                        if (v22) {\n                            v21 = v23 = v6 <= 0xda46fb60f00;\n                        }\n                        if (!v21) {\n                            if (v6 <= 0xda46fb60f00) {\n                                v24 = v25 = 1342;\n                                v26 = v27 = 100;\n                                v28 = v29 = 0x8de(15, v6);\n                            } else {\n                                v24 = v30 = 764;\n                                v26 = v31 = 100;\n                                v28 = v32 = 0x8de(30, v6);\n                            }\n                        } else {\n                            v24 = v33 = 764;\n                            v26 = v34 = 100;\n                            v28 = v35 = 0x8de(25, v6);\n                        }\n                    } else {\n                        v24 = v36 = 764;\n                        v26 = v37 = 100;\n                        v28 = v38 = 0x8de(20, v6);\n                    }\n                }\n            } else {\n                v39 = v40 = v6 >= 0x2e90edd000;\n                if (v6 >= 0x2e90edd000) {\n                    v39 = v41 = v6 <= 0x1d1a3543f00;\n                }\n                if (!v39) {\n                    v42 = v43 = v6 > 0x1d1a3543f00;\n                    if (v43) {\n                        v42 = v44 = v6 <= 0xda46fb60f00;\n                    }\n                    if (!v42) {\n                        if (v6 <= 0xda46fb60f00) {\n                            v24 = v45 = 764;\n                            v26 = v46 = 100;\n                            v28 = v47 = 0x8de(25, v6);\n                        } else {\n                            v24 = v48 = 645;\n                            v26 = v49 = 100;\n                            v28 = v50 = 0x8de(40, v6);\n                        }\n                    } else {\n                        v24 = v51 = 645;\n                        v26 = v52 = 100;\n                        v28 = v53 = 0x8de(35, v6);\n                    }\n                } else {\n                    v24 = v54 = 645;\n                    v26 = v55 = 100;\n                    v28 = v56 = 0x8de(30, v6);\n                }\n            }\n        } else {\n            v57 = v58 = v6 >= 0x2e90edd000;\n            if (v6 >= 0x2e90edd000) {\n                v57 = v59 = v6 <= 0x1d1a3543f00;\n            }\n            if (!v57) {\n                v60 = v61 = v6 > 0x1d1a3543f00;\n                if (v61) {\n                    v60 = v62 = v6 <= 0xda46fb60f00;\n                }\n                if (!v60) {\n                    if (v6 <= 0xda46fb60f00) {\n                        v24 = v63 = 764;\n                        v26 = v64 = 100;\n                        v28 = v65 = 0x8de(35, v6);\n                    } else {\n                        v24 = v66 = 645;\n                        v26 = v67 = 100;\n                        v28 = v68 = 0x8de(50, v6);\n                    }\n                } else {\n                    v24 = v69 = 645;\n                    v26 = v70 = 100;\n                    v28 = v71 = 0x8de(45, v6);\n                }\n            } else {\n                v24 = v72 = 645;\n                v26 = v73 = 100;\n                v28 = v74 = 0x8de(40, v6);\n            }\n        }\n    } else {\n        v75 = v76 = v6 >= 0x2e90edd000;\n        if (v6 >= 0x2e90edd000) {\n            v75 = v77 = v6 <= 0x1d1a3543f00;\n        }\n        if (!v75) {\n            v78 = v79 = v6 > 0x1d1a3543f00;\n            if (v79) {\n                v78 = v80 = v6 <= 0xda46fb60f00;\n            }\n            if (!v78) {\n                if (v6 <= 0xda46fb60f00) {\n                    v24 = v81 = 764;\n                    v26 = v82 = 100;\n                    v28 = v83 = 0x8de(45, v6);\n                } else {\n                    v24 = v84 = 645;\n                    v26 = v85 = 100;\n                    v28 = v86 = 0x8de(60, v6);\n                }\n            } else {\n                v24 = v87 = 645;\n                v26 = v88 = 100;\n                v28 = v89 = 0x8de(55, v6);\n            }\n        } else {\n            v24 = v90 = 645;\n            v26 = v91 = 100;\n            v28 = v92 = 0x8de(50, v6);\n        }\n    }\n    assert(v26);\n    v7 = v28 / v26;\n    goto {'0x285', '0x2fc', '0x53e'};\n    goto 0x541;\n    MEM[32 + MEM[64]] = 0;\n    require((address(this)).code.size);\n    v93, v94 = address(this).transfer(msg.sender, v6 + v7).gas(msg.gas - 710);\n    require(v93);\n}\n\nfunction _SafeAdd(uint256 varg0, uint256 varg1) private { \n    v0 = varg0 + varg1;\n    assert(v0 >= varg1);\n    return v0;\n}\n\nfunction end_ICO() public nonPayable { \n    require(_owner == msg.sender);\n    assert(_stage <= 3);\n    require(_stage == 1);\n    require(block.timestamp > stor_7);\n    _stage = 3;\n}\n\nfunction name() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v2 + v0.data] = MEM[v1.data + v2];\n        v2 += 32;\n    }\n    if (21) {\n        MEM[v0.data] = ~0xffffffffffffffffffffff & 'Social Activity Token';\n    }\n    return v0;\n}\n\nfunction approve(address varg0, uint256 varg1) public nonPayable { \n    v0 = v1 = !varg1;\n    if (varg1) {\n        v0 = v2 = !_allowance[varg0];\n    }\n    require(v0);\n    require(varg0);\n    _allowance[varg0] = varg1;\n    emit Approval(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction releaseICO() public nonPayable { \n    require(_owner == msg.sender);\n    assert(_stage <= 3);\n    require(_stage == 2);\n    stor_2_20_20 = 0;\n    _stage = 1;\n}\n\nfunction totalSupply() public nonPayable { \n    return _totalSupply;\n}\n\nfunction transferFrom(address varg0, address varg1, uint256 varg2) public nonPayable { \n    require(varg1);\n    assert(varg2 <= _balanceOf[varg0]);\n    _balanceOf[varg0] = _balanceOf[varg0] - varg2;\n    assert(varg2 <= _balanceOf[msg.sender]);\n    _allowance[msg.sender] = _balanceOf[msg.sender] - varg2;\n    v0 = _SafeAdd(varg2, _balanceOf[varg1]);\n    _balanceOf[varg1] = v0;\n    emit Transfer(varg0, varg1, varg2);\n    return 1;\n}\n\nfunction decimals() public nonPayable { \n    return 8;\n}\n\nfunction StopICO() public nonPayable { \n    require(_owner == msg.sender);\n    assert(_stage <= 3);\n    require(_stage == 1);\n    stor_2_20_20 = 1;\n    _stage = 2;\n}\n\nfunction burn(uint256 varg0) public nonPayable { \n    require(_owner == msg.sender);\n    require(varg0 <= _balanceOf[address(this)]);\n    assert(varg0 <= _totalSupply);\n    _totalSupply = _totalSupply - varg0;\n    assert(varg0 <= _balanceOf[address(this)]);\n    _balanceOf[address(this)] = _balanceOf[address(this)] - varg0;\n    MEM[0] = 0;\n    v0 = _SafeAdd(varg0, stor_ec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b);\n    MEM[32] = 9;\n    stor_ec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b = v0;\n    emit Transfer(address(this), 0, varg0);\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction start_ICO() public nonPayable { \n    require(_owner == msg.sender);\n    assert(_stage <= 3);\n    require(_stage == 0);\n    _stage = 1;\n    stor_2_20_20 = 0;\n    _startdate = block.timestamp;\n    stor_4 = block.timestamp + 0x127500;\n    stor_5 = block.timestamp + 0x24ea00;\n    stor_6 = block.timestamp + 0x375f00;\n    stor_7 = 0x49d400 + block.timestamp;\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction symbol() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v2 + v0.data] = MEM[v1.data + v2];\n        v2 += 32;\n    }\n    if (3) {\n        MEM[v0.data] = 0x5341540000000000000000000000000000000000000000000000000000000000;\n    }\n    return v0;\n}\n\nfunction set_centralAccount(address varg0) public nonPayable { \n    require(_owner == msg.sender);\n    _transferby = varg0;\n}\n\nfunction drain() public nonPayable { \n    require(_owner == msg.sender);\n    v0 = _owner.call().value((address(this)).balance).gas(2300 * !(address(this)).balance);\n    require(v0);\n}\n\nfunction _totalsupply() public nonPayable { \n    return _totalSupply;\n}\n\nfunction transfer(address varg0, uint256 varg1) public nonPayable { \n    require(varg0);\n    assert(varg1 <= _balanceOf[msg.sender]);\n    _balanceOf[msg.sender] = _balanceOf[msg.sender] - varg1;\n    v0 = _SafeAdd(varg1, _balanceOf[varg0]);\n    _balanceOf[varg0] = v0;\n    emit Transfer(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction stage() public nonPayable { \n    assert(_stage <= 3);\n    return _stage;\n}\n\nfunction startdate() public nonPayable { \n    return _startdate;\n}\n\nfunction allowance(address varg0, address varg1) public nonPayable { \n    v0 = v1 = varg0;\n    if (varg0) {\n        v0 = v2 = varg1;\n    }\n    require(v0);\n    return _allowance[varg1];\n}\n\nfunction transferby(address varg0, address varg1, uint256 varg2) public nonPayable { \n    require(_transferby == msg.sender);\n    require(varg1);\n    require(varg0 == address(this));\n    assert(varg2 <= _balanceOf[varg0]);\n    _balanceOf[varg0] = _balanceOf[varg0] - varg2;\n    v0 = _SafeAdd(varg2, _balanceOf[varg1]);\n    _balanceOf[varg1] = v0;\n    if (!varg0) {\n        v1 = _SafeAdd(varg2, _totalSupply);\n        _totalSupply = v1;\n    }\n    emit Transfer(varg0, varg1, varg2);\n    return 1;\n}\n\nfunction transferOwnership(address varg0) public nonPayable { \n    require(_owner == msg.sender);\n    v0 = _SafeAdd(_balanceOf[_owner], _balanceOf[varg0]);\n    _balanceOf[varg0] = v0;\n    _balanceOf[_owner] = 0;\n    _owner = varg0;\n}\n\nfunction 0x8de(uint256 varg0, uint256 varg1) private { \n    if (varg1) {\n        v0 = v1 = varg0 * varg1;\n        assert(varg1);\n        assert(v1 / varg1 == varg0);\n    } else {\n        v0 = v2 = 0;\n    }\n    return v0;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint256 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length >= 4) {\n        v0 = uint32(function_selector >> 224);\n        if (v0 == 0x2c3d7f6) {\n            end_ICO();\n        } else if (0x6fdde03 == v0) {\n            name();\n        } else if (0x95ea7b3 == v0) {\n            approve(address,uint256);\n        } else if (0x124d3396 == v0) {\n            releaseICO();\n        } else if (0x18160ddd == v0) {\n            totalSupply();\n        } else if (0x23b872dd == v0) {\n            transferFrom(address,address,uint256);\n        } else if (0x313ce567 == v0) {\n            decimals();\n        } else if (0x3dbedbd4 == v0) {\n            StopICO();\n        } else if (0x42966c68 == v0) {\n            burn(uint256);\n        } else if (0x70a08231 == v0) {\n            balanceOf(address);\n        } else if (0x807d2da3 == v0) {\n            start_ICO();\n        } else if (0x8da5cb5b == v0) {\n            owner();\n        } else if (0x95d89b41 == v0) {\n            symbol();\n        } else if (0x97668720 == v0) {\n            set_centralAccount(address);\n        } else if (0x9890220b == v0) {\n            drain();\n        } else if (0xa393dc44 == v0) {\n            _totalsupply();\n        } else if (0xa9059cbb == v0) {\n            transfer(address,uint256);\n        } else if (0xc040e6b8 == v0) {\n            stage();\n        } else if (0xcde9f2ea == v0) {\n            startdate();\n        } else if (0xdd62ed3e == v0) {\n            allowance(address,address);\n        } else if (0xeb9763ed == v0) {\n            transferby(address,address,uint256);\n        } else if (0xf2fde38b == v0) {\n            transferOwnership(address);\n        }\n    }\n    fallback();\n}\n.",
	"status": "1",
	"time_cost": 50.18751382827759,
	"usage": {
		"completion_tokens": 948,
		"prompt_tokens": 4382,
		"total_tokens": 5330
	}
}