{
	"address": "0x66ec7145b52cb088e79306beb3d26fad0935f8c3",
	"input_format": "TemplateDescription",
	"ir": "For the payable constructor function.\n- the state variable owner will be updated to caller.\n\nFor the payable fallback function.\n- it calls an external function setTotalEtherPool of the external contract cards with the following argument list: the ether just received (i.e., msg.value), 0, and 1.\n\nFor the withdrawAmount function, it has one argument and its type is uint256.\n- When the first argument is not greater than the balance of the address of this contract, and for owner:\n  - it transfers ether valued the first argument to owner.\n\nFor the setCardsAddress function, it has one argument and its type is address.\n- For owner:\n  - the external contract cards will be updated to the first argument.\n\nFor the setAutoAddress function, it has one argument and its type is address.\n- When the first argument is not 0, and for owner:\n  - the state variable owner2 will be updated to the first argument.\n\nFor the setRareAddress function, it has one argument and its type is address.\n- For owner:\n  - the state variable rare will be updated to the first argument.\n\nFor the setConfigAddress function, it has one argument and its type is address.\n- For owner:\n  - the state variable schema will be updated to the first argument.\n\nFor the withdrawEtherFromTrade function, it has one argument and its type is uint256.\n- it calls an external function coinBalanceOf of the external contract cards with the following argument list: caller, and 0, and gets the returned value as v0.\n- When the first argument is not greater than v0:\n  - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, the first argument, and 0.\n  - it transfers ether valued the first argument to caller.\n\nFor the transferOwnership function, it has one argument and its type is address.\n- When the first argument is not 0, and for owner:\n  - the state variable owner will be updated to the first argument.\n\nFor the buyBasicCards function, it has 2 arguments and the type of each argument is as follows: uint256, uint256.\n- it calls an external function getGameStarted of the external contract cards, and gets the returned value as v0.\n- When v0 is not 0, and the second argument is not smaller than 1:\n  - it calls an external function getOwnedCount of the external contract cards with the following argument list: caller, and the first argument, and gets the returned value as v1. Afterthat, \n    - it calls an external function getMaxCAP of the external contract schema, and gets the returned value as v4.\n  - When v1 is smaller than v2:\n    - it calls an external function getMaxCAP of the external contract schema, and gets the returned value as v4. Afterthat, \n      - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v7.\n    - When v7 is not smaller than 0:\n      - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and 0.\n      - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v10. Afterthat, \n        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n        - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n      - When v10 is not greater than 0:\n        - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n        - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n        - When (the second argument+v1) is greater than v3:\n          - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n          - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n      - When (the second argument+v1) is greater than v3:\n        - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and 0.\n        - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v10. Afterthat, \n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n          - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n    - When the first argument is not smaller than 1:\n      - When the first argument is not greater than 39:\n        - it calls an external function getCardInfo of the external contract schema with the following argument list: the first argument, v1, and the second argument.\n        - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v7.\n        - When v5 is 0, and v7 is not smaller than v5:\n          - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v5.\n          - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v10. Afterthat, \n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n            - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n          - When v10 is not greater than 0:\n            - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n            - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n            - When (the second argument+v1) is greater than v3:\n              - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n              - When v5 is greater than 0:\n                - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n            - When v5 is greater than 0:\n              - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n          - When (the second argument+v1) is greater than v3:\n            - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v5.\n            - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v10. Afterthat, \n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n            - When v5 is greater than 0:\n              - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and (v4-v1), and gets the returned value as v9.\n              - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and v8.\n              - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and (v4-v1), and gets the returned value as v9. Afterthat, \n                - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, the first argument, v9, and 1.\n                - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v10.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n          - When v5 is greater than 0:\n            - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument.\n            - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and v8.\n            - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument.\n            - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, the first argument, v9, and 1.\n            - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v10. Afterthat, \n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n        - When (the second argument+v1) is greater than v3:\n          - it calls an external function getCardInfo of the external contract schema with the following argument list: the first argument, v1, and (v4-v1), and gets the returned value as v5.\n          - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v7.\n      - When the first argument is greater than 39, and the first argument is not smaller than 40:\n        - it calls an external function getBattleCardInfo of the external contract schema with the following argument list: the first argument, v1, and the second argument.\n        - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v7.\n        - When v7 is not smaller than v6, and v6 is 0:\n          - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v6.\n          - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v10. Afterthat, \n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n            - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n          - When v10 is not greater than 0:\n            - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n            - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n            - When (the second argument+v1) is greater than v3:\n              - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n          - When (the second argument+v1) is greater than v3:\n            - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v6.\n            - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v10. Afterthat, \n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n        - When (the second argument+v1) is greater than v3:\n          - it calls an external function getBattleCardInfo of the external contract schema with the following argument list: the first argument, v1, and (v4-v1), and gets the returned value as v6.\n          - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v7.\n    - When the first argument is smaller than 1, and the first argument is not smaller than 40:\n      - it calls an external function getBattleCardInfo of the external contract schema with the following argument list: the first argument, v1, and the second argument.\n      - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v7.\n      - When v7 is not smaller than v6, and v6 is 0:\n        - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v6.\n        - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v10. Afterthat, \n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n          - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n        - When v10 is not greater than 0:\n          - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n          - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n          - When (the second argument+v1) is greater than v3:\n            - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n            - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n        - When (the second argument+v1) is greater than v3:\n          - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v6.\n          - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v10. Afterthat, \n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n            - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n      - When (the second argument+v1) is greater than v3:\n        - it calls an external function getBattleCardInfo of the external contract schema with the following argument list: the first argument, v1, and (v4-v1), and gets the returned value as v6.\n        - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v7.\n    - When (the second argument+v1) is greater than v3:\n      - it calls an external function getMaxCAP of the external contract schema, and gets the returned value as v4. Afterthat, \n        - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v7.\n\nFor the payable buyUpgradeCard function, it has one argument and its type is uint256.\n- it calls an external function getGameStarted of the external contract cards, and gets the returned value as v1.\n- When the first argument is not smaller than 1, and v1 is not 0:\n  - it calls an external function getUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument, and gets the returned value as v2.\n  - When v2 is not greater than 5:\n    - it calls an external function getUpgradeCardsInfo of the external contract schema with the following argument list: the first argument, and v2, and gets the returned value as v3.\n    - When v3 is not greater than 0:\n      - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v4.\n      - When v4 is not smaller than v3:\n        - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v3.\n        - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n        - When v3 is not 0:\n          - When 1 does not equal to v3:\n            - When 2 equals to v3:\n              - it calls an external function setUnitAttackIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n              - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n            - When 2 does not equal to v3:\n              - When 3 equals to v3:\n                - it calls an external function setUnitAttackMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n              - When 3 does not equal to v3:\n                - When 4 equals to v3:\n                  - it calls an external function setUnitDefenseIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                  - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                - When 4 does not equal to v3:\n                  - When 5 equals to v3:\n                    - it calls an external function setunitDefenseMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                    - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                  - When 5 does not equal to v3:\n                    - When 6 equals to v3:\n                      - it calls an external function setUnitJadeStealingIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                      - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                    - When 7 equals to v3, and 6 does not equal to v3:\n                      - it calls an external function setUnitJadeStealingMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                      - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n          - When 1 equals to v3:\n            - it calls an external function setUnitCoinProductionMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n            - it calls an external function getUnitCoinProductionIncreases of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v7.\n            - it calls an external function unitCoinProduction of the external contract schema with v3 as the argument, and gets the returned value as v8.\n            - it calls an external function getOwnedCount of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v6. Afterthat, \n              - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, v3, ((v3*v6)*(v7+v8)), and 1.\n              - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and ((v3*v6)*(v7+v8)).\n              - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n        - When v3 is 0:\n          - it calls an external function setUnitCoinProductionIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n          - it calls an external function getUnitCoinProductionMultiplier of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v5.\n          - it calls an external function getOwnedCount of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v6. Afterthat, \n            - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, v3, ((v3*v6)*(v5+10)), and 1.\n            - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and ((v3*v6)*(v5+10)).\n            - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n    - When v3 is greater than 0:\n      - it calls an external function coinBalanceOf of the external contract cards with the following argument list: caller, and 0, and gets the returned value as v0.\n      - When (the ether just received (i.e., msg.value)+v0) is not smaller than v3:\n        - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3-(v3/20)), 0, and 1.\n        - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n        - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v4.\n        - When v4 is not smaller than v3:\n          - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v3.\n          - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n          - When v3 is not 0:\n            - When 1 does not equal to v3:\n              - When 2 equals to v3:\n                - it calls an external function setUnitAttackIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                - When v3 is greater than the ether just received (i.e., msg.value):\n                  - it calls an external function setUnitAttackIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                  - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                - When v3 is not greater than the ether just received (i.e., msg.value), and v3 is smaller than the ether just received (i.e., msg.value):\n                  - it calls an external function setUnitAttackIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                  - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n              - When 2 does not equal to v3:\n                - When 3 equals to v3:\n                  - it calls an external function setUnitAttackMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                  - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                  - When v3 is greater than the ether just received (i.e., msg.value):\n                    - it calls an external function setUnitAttackMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                    - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                  - When v3 is not greater than the ether just received (i.e., msg.value), and v3 is smaller than the ether just received (i.e., msg.value):\n                    - it calls an external function setUnitAttackMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                    - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                - When 3 does not equal to v3:\n                  - When 4 equals to v3:\n                    - it calls an external function setUnitDefenseIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                    - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                    - When v3 is greater than the ether just received (i.e., msg.value):\n                      - it calls an external function setUnitDefenseIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                      - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                    - When v3 is not greater than the ether just received (i.e., msg.value), and v3 is smaller than the ether just received (i.e., msg.value):\n                      - it calls an external function setUnitDefenseIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                      - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                  - When 4 does not equal to v3:\n                    - When 5 equals to v3:\n                      - it calls an external function setunitDefenseMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                      - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                      - When v3 is greater than the ether just received (i.e., msg.value):\n                        - it calls an external function setunitDefenseMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                        - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                      - When v3 is not greater than the ether just received (i.e., msg.value), and v3 is smaller than the ether just received (i.e., msg.value):\n                        - it calls an external function setunitDefenseMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                        - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                    - When 5 does not equal to v3:\n                      - When 6 equals to v3:\n                        - it calls an external function setUnitJadeStealingIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                        - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                        - When v3 is greater than the ether just received (i.e., msg.value):\n                          - it calls an external function setUnitJadeStealingIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                          - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                        - When v3 is not greater than the ether just received (i.e., msg.value), and v3 is smaller than the ether just received (i.e., msg.value):\n                          - it calls an external function setUnitJadeStealingIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                          - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                      - When 7 equals to v3, and 6 does not equal to v3:\n                        - it calls an external function setUnitJadeStealingMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                        - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                        - When v3 is greater than the ether just received (i.e., msg.value):\n                          - it calls an external function setUnitJadeStealingMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                          - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n                        - When v3 is not greater than the ether just received (i.e., msg.value), and v3 is smaller than the ether just received (i.e., msg.value):\n                          - it calls an external function setUnitJadeStealingMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                          - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n            - When 1 equals to v3:\n              - it calls an external function setUnitCoinProductionMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n              - it calls an external function getUnitCoinProductionIncreases of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v7.\n              - it calls an external function unitCoinProduction of the external contract schema with v3 as the argument, and gets the returned value as v8.\n              - it calls an external function getOwnedCount of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v6. Afterthat, \n                - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, v3, ((v3*v6)*(v7+v8)), and 1.\n                - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and ((v3*v6)*(v7+v8)).\n                - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n              - When v3 is greater than the ether just received (i.e., msg.value):\n                - it calls an external function setUnitCoinProductionMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                - it calls an external function getUnitCoinProductionIncreases of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v7.\n                - it calls an external function unitCoinProduction of the external contract schema with v3 as the argument, and gets the returned value as v8.\n                - it calls an external function getOwnedCount of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v6. Afterthat, \n                  - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, v3, ((v3*v6)*(v7+v8)), and 1.\n                  - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and ((v3*v6)*(v7+v8)).\n                  - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n              - When v3 is not greater than the ether just received (i.e., msg.value), and v3 is smaller than the ether just received (i.e., msg.value):\n                - it calls an external function setUnitCoinProductionMultiplier of the external contract cards with the following argument list: caller, v3, v3, and 1.\n                - it calls an external function getUnitCoinProductionIncreases of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v7.\n                - it calls an external function unitCoinProduction of the external contract schema with v3 as the argument, and gets the returned value as v8.\n                - it calls an external function getOwnedCount of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v6. Afterthat, \n                  - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, v3, ((v3*v6)*(v7+v8)), and 1.\n                  - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and ((v3*v6)*(v7+v8)).\n                  - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n          - When v3 is greater than the ether just received (i.e., msg.value):\n            - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v3.\n            - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n            - When v3 is 0:\n              - it calls an external function setUnitCoinProductionIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n              - it calls an external function getUnitCoinProductionMultiplier of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v5.\n              - it calls an external function getOwnedCount of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v6. Afterthat, \n                - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, v3, ((v3*v6)*(v5+10)), and 1.\n                - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and ((v3*v6)*(v5+10)).\n                - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n          - When v3 is not greater than the ether just received (i.e., msg.value), and v3 is smaller than the ether just received (i.e., msg.value):\n            - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v3.\n            - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n            - When v3 is 0:\n              - it calls an external function setUnitCoinProductionIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n              - it calls an external function getUnitCoinProductionMultiplier of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v5.\n              - it calls an external function getOwnedCount of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v6. Afterthat, \n                - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, v3, ((v3*v6)*(v5+10)), and 1.\n                - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and ((v3*v6)*(v5+10)).\n                - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n          - When v3 is 0:\n            - it calls an external function setUnitCoinProductionIncreases of the external contract cards with the following argument list: caller, v3, v3, and 1.\n            - it calls an external function getUnitCoinProductionMultiplier of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v5.\n            - it calls an external function getOwnedCount of the external contract cards with the following argument list: caller, and v3, and gets the returned value as v6. Afterthat, \n              - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, v3, ((v3*v6)*(v5+10)), and 1.\n              - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and ((v3*v6)*(v5+10)).\n              - it calls an external function setUpgradesOwned of the external contract cards with the following argument list: caller, and the first argument.\n        - When v3 is greater than the ether just received (i.e., msg.value):\n          - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v3-the ether just received (i.e., msg.value)), and 0.\n          - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3-(v3/20)), 0, and 1.\n          - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n          - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v4.\n        - When v3 is not greater than the ether just received (i.e., msg.value), and v3 is smaller than the ether just received (i.e., msg.value):\n          - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v3), 0, and 1.\n          - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3-(v3/20)), 0, and 1.\n          - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n          - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v4.\n\nFor the sendGiftCard function, it has one argument and its type is address.\n- For owner2:\n  - it calls an external function getOwnedCount of the external contract cards with the following argument list: the first argument, and 1, and gets the returned value as v0. Afterthat, \n    - it calls an external function getMaxCAP of the external contract schema, and gets the returned value as v2.\n  - When v0 is smaller than v1:\n    - it calls an external function getMaxCAP of the external contract schema, and gets the returned value as v2.\n    - When (1+v0) is not greater than v2:\n      - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: the first argument, and 0.\n      - it calls an external function unitCoinProduction of the external contract schema with 1 as the argument, and gets the returned value as v3. Afterthat, \n        - it calls an external function getUintsOwnerCount of the external contract cards with the first argument, and gets the returned value as v6.\n        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: the first argument, 1, and 1.\n        - it calls an external function setOwnedCount of the external contract cards with the following argument list: the first argument, 1, 1, and 1.\n      - When v6 is not greater than 0:\n        - it calls an external function AddPlayers of the external contract cards with the first argument.\n        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: the first argument, 1, and 1.\n        - it calls an external function setOwnedCount of the external contract cards with the following argument list: the first argument, 1, 1, and 1.\n        - When v3 is greater than 0:\n          - it calls an external function AddPlayers of the external contract cards with the first argument.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: the first argument, 1, and 1.\n          - it calls an external function setOwnedCount of the external contract cards with the following argument list: the first argument, 1, 1, and 1.\n      - When v3 is greater than 0:\n        - it calls an external function getUnitsProduction of the external contract cards with the following argument list: the first argument, 1, and 1, and gets the returned value as v5.\n        - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: the first argument, and v4.\n        - it calls an external function getUnitsProduction of the external contract cards with the following argument list: the first argument, 1, and 1, and gets the returned value as v5. Afterthat, \n          - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: the first argument, 1, v5, and 1.\n          - it calls an external function getUintsOwnerCount of the external contract cards with the first argument, and gets the returned value as v6.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: the first argument, 1, and 1.\n          - it calls an external function setOwnedCount of the external contract cards with the following argument list: the first argument, 1, 1, and 1.\n\nFor the sellCards function, it has 2 arguments and the type of each argument is as follows: uint256, uint256.\n- it calls an external function getGameStarted of the external contract cards, and gets the returned value as v0.\n- When v0 is not 0:\n  - it calls an external function getOwnedCount of the external contract cards with the following argument list: caller, and the first argument, and gets the returned value as v1.\n  - When the second argument is greater than 0, and v1 is not smaller than the second argument:\n    - When the first argument is not smaller than 40:\n      - it calls an external function getBattleCardInfo of the external contract schema with the following argument list: the first argument, (v1-the second argument), and the second argument, and gets the returned value as v2.\n      - When v2 is not 0:\n        - When v2 is not greater than 0:\n          - it calls an external function balanceOfUnclaimed of the external contract cards with caller as the argument, and gets the returned value as v4. Afterthat, \n            - it calls an external function getUnitsInProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument, and gets the returned value as v6.\n            - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n          - it calls an external function setLastJadeSaveTime of the external contract cards with caller as the argument.\n          - it calls an external function setRoughSupply of the external contract cards with v5 as the argument.\n          - it calls an external function setJadeCoin of the external contract cards with the following argument list: caller, v5, and 1.\n          - When the cansellunit from caller to the first argument is not smaller than the second argument, and v2 is greater than 0:\n            - it calls an external function balanceOfUnclaimed of the external contract cards with caller as the argument, and gets the returned value as v4. Afterthat, \n              - it calls an external function getUnitsInProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument, and gets the returned value as v6.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, 0, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, ((70*v2)/100), 0, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n            - it calls an external function setLastJadeSaveTime of the external contract cards with caller as the argument.\n            - it calls an external function setRoughSupply of the external contract cards with v5 as the argument.\n            - it calls an external function setJadeCoin of the external contract cards with the following argument list: caller, v5, and 1.\n        - When v2 is greater than 0:\n          - it calls an external function balanceOfUnclaimed of the external contract cards with caller as the argument, and gets the returned value as v4. Afterthat, \n            - it calls an external function setRoughSupply of the external contract cards with v4 as the argument.\n            - it calls an external function setJadeCoin of the external contract cards with the following argument list: caller, v4, and 1.\n            - it calls an external function getUnitsInProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument, and gets the returned value as v6.\n            - it calls an external function setRoughSupply of the external contract cards with (((70*v2)/100)+v4) as the argument.\n            - it calls an external function setJadeCoin of the external contract cards with the following argument list: caller, (((70*v2)/100)+v4), and 1.\n            - it calls an external function getUnitsInProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument, and gets the returned value as v6. Afterthat, \n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n            - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n          - it calls an external function setLastJadeSaveTime of the external contract cards with caller as the argument.\n          - When the cansellunit from caller to the first argument is not smaller than the second argument, and v2 is greater than 0:\n            - it calls an external function balanceOfUnclaimed of the external contract cards with caller as the argument, and gets the returned value as v4. Afterthat, \n              - it calls an external function setRoughSupply of the external contract cards with v4 as the argument.\n              - it calls an external function setJadeCoin of the external contract cards with the following argument list: caller, v4, and 1.\n              - it calls an external function getUnitsInProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument, and gets the returned value as v6.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, ((70*v2)/100), 0, and 1.\n              - it calls an external function setRoughSupply of the external contract cards with (((70*v2)/100)+v4) as the argument.\n              - it calls an external function setJadeCoin of the external contract cards with the following argument list: caller, (((70*v2)/100)+v4), and 1.\n              - it calls an external function getUnitsInProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument, and gets the returned value as v6. Afterthat, \n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, 0, and 1.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, 0, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, ((70*v2)/100), 0, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n            - it calls an external function setLastJadeSaveTime of the external contract cards with caller as the argument.\n    - When the first argument is smaller than 40:\n      - it calls an external function getCardInfo of the external contract schema with the following argument list: the first argument, (v1-the second argument), and the second argument, and gets the returned value as v3.\n      - When v3 is not 0:\n        - When v3 is not greater than 0:\n          - it calls an external function balanceOfUnclaimed of the external contract cards with caller as the argument, and gets the returned value as v4. Afterthat, \n            - it calls an external function getUnitsInProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument, and gets the returned value as v6.\n            - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n          - it calls an external function setLastJadeSaveTime of the external contract cards with caller as the argument.\n          - it calls an external function setRoughSupply of the external contract cards with v5 as the argument.\n          - it calls an external function setJadeCoin of the external contract cards with the following argument list: caller, v5, and 1.\n          - When v3 is greater than 0:\n            - it calls an external function reducePlayersJadeProduction of the external contract cards with the following argument list: caller, and v6.\n            - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, the first argument, v6, and 0.\n            - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n            - When the cansellunit from caller to the first argument is not smaller than the second argument, and v3 is greater than 0:\n              - it calls an external function reducePlayersJadeProduction of the external contract cards with the following argument list: caller, and v6.\n              - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, the first argument, v6, and 0.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, 0, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, ((70*v3)/100), 0, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n          - When the cansellunit from caller to the first argument is not smaller than the second argument, and v3 is greater than 0:\n            - it calls an external function balanceOfUnclaimed of the external contract cards with caller as the argument, and gets the returned value as v4. Afterthat, \n              - it calls an external function getUnitsInProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument, and gets the returned value as v6.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, 0, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, ((70*v3)/100), 0, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n            - it calls an external function setLastJadeSaveTime of the external contract cards with caller as the argument.\n            - it calls an external function setRoughSupply of the external contract cards with v5 as the argument.\n            - it calls an external function setJadeCoin of the external contract cards with the following argument list: caller, v5, and 1.\n        - When v3 is greater than 0:\n          - it calls an external function balanceOfUnclaimed of the external contract cards with caller as the argument, and gets the returned value as v4. Afterthat, \n            - it calls an external function setRoughSupply of the external contract cards with v4 as the argument.\n            - it calls an external function setJadeCoin of the external contract cards with the following argument list: caller, v4, and 1.\n            - it calls an external function getUnitsInProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument, and gets the returned value as v6.\n            - it calls an external function setRoughSupply of the external contract cards with (((70*v3)/100)+v4) as the argument.\n            - it calls an external function setJadeCoin of the external contract cards with the following argument list: caller, (((70*v3)/100)+v4), and 1.\n            - it calls an external function getUnitsInProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument, and gets the returned value as v6. Afterthat, \n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n            - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n          - it calls an external function setLastJadeSaveTime of the external contract cards with caller as the argument.\n          - When v3 is greater than 0:\n            - it calls an external function reducePlayersJadeProduction of the external contract cards with the following argument list: caller, and v6.\n            - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, the first argument, v6, and 0.\n            - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n            - it calls an external function reducePlayersJadeProduction of the external contract cards with the following argument list: caller, and v6.\n            - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, the first argument, v6, and 0.\n            - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n            - When the cansellunit from caller to the first argument is not smaller than the second argument, and v3 is greater than 0:\n              - it calls an external function reducePlayersJadeProduction of the external contract cards with the following argument list: caller, and v6.\n              - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, the first argument, v6, and 0.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, 0, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, ((70*v3)/100), 0, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n              - it calls an external function reducePlayersJadeProduction of the external contract cards with the following argument list: caller, and v6.\n              - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, the first argument, v6, and 0.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, 0, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, ((70*v3)/100), 0, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n          - When the cansellunit from caller to the first argument is not smaller than the second argument, and v3 is greater than 0:\n            - it calls an external function balanceOfUnclaimed of the external contract cards with caller as the argument, and gets the returned value as v4. Afterthat, \n              - it calls an external function setRoughSupply of the external contract cards with v4 as the argument.\n              - it calls an external function setJadeCoin of the external contract cards with the following argument list: caller, v4, and 1.\n              - it calls an external function getUnitsInProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument, and gets the returned value as v6.\n              - it calls an external function setRoughSupply of the external contract cards with (((70*v3)/100)+v4) as the argument.\n              - it calls an external function setJadeCoin of the external contract cards with the following argument list: caller, (((70*v3)/100)+v4), and 1.\n              - it calls an external function getUnitsInProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument, and gets the returned value as v6. Afterthat, \n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, 0, and 1.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, ((70*v3)/100), 0, and 1.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, 0, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, ((70*v3)/100), 0, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 0.\n            - it calls an external function setLastJadeSaveTime of the external contract cards with caller as the argument.\n\nFor the payable buyEthCards function, it has 2 arguments and the type of each argument is as follows: uint256, uint256.\n- it calls an external function getGameStarted of the external contract cards, and gets the returned value as v0.\n- When the second argument is not smaller than 1, and v0 is not 0:\n  - it calls an external function getOwnedCount of the external contract cards with the following argument list: caller, and the first argument, and gets the returned value as v1. Afterthat, \n    - it calls an external function getMaxCAP of the external contract schema, and gets the returned value as v4.\n  - When v1 is smaller than v2:\n    - it calls an external function getMaxCAP of the external contract schema, and gets the returned value as v4.\n    - When the first argument is not smaller than 1:\n      - When the first argument is not greater than 39:\n        - it calls an external function getCardInfo of the external contract schema with the following argument list: the first argument, v1, and the second argument.\n        - When v5 is greater than 0:\n          - it calls an external function coinBalanceOf of the external contract cards with the following argument list: caller, and 0, and gets the returned value as v7.\n          - When (the ether just received (i.e., msg.value)+v7) is not smaller than v5:\n            - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v8.\n            - When v8 is not smaller than v5:\n              - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v5.\n              - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v5/4), 0, and 1.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v5/20), 0, and 1.\n              - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n              - When v11 is not greater than 0:\n                - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n                - When (the second argument+v1) is greater than v3:\n                  - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                  - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                  - When v5 is greater than the ether just received (i.e., msg.value):\n                    - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                    - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                    - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                    - When v5 is greater than 0:\n                      - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                      - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                      - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                  - When v5 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v5:\n                    - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                    - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                    - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                    - When v5 is greater than 0:\n                      - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                      - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                      - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                  - When v5 is greater than 0:\n                    - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                    - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                    - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                - When v5 is greater than the ether just received (i.e., msg.value):\n                  - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                  - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n                  - When v5 is greater than 0:\n                    - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                    - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                    - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n                - When v5 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v5:\n                  - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                  - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n                  - When v5 is greater than 0:\n                    - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                    - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                    - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n                - When v5 is greater than 0:\n                  - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                  - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n              - When (the second argument+v1) is greater than v3:\n                - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v5.\n                - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v5/4), 0, and 1.\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v5/20), 0, and 1.\n                - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                  - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                - When v5 is greater than the ether just received (i.e., msg.value):\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v5-the ether just received (i.e., msg.value)), and 0.\n                  - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v5/4), 0, and 1.\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v5/20), 0, and 1.\n                  - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                    - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                    - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                  - When v5 is greater than 0:\n                    - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and (v4-v1), and gets the returned value as v10.\n                    - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and v9.\n                    - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and (v4-v1), and gets the returned value as v10. Afterthat, \n                      - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, the first argument, v10, and 1.\n                      - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                      - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                      - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                - When v5 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v5:\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v5), 0, and 1.\n                  - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v5/4), 0, and 1.\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v5/20), 0, and 1.\n                  - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                    - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                    - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                  - When v5 is greater than 0:\n                    - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and (v4-v1), and gets the returned value as v10.\n                    - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and v9.\n                    - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and (v4-v1), and gets the returned value as v10. Afterthat, \n                      - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, the first argument, v10, and 1.\n                      - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                      - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                      - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                - When v5 is greater than 0:\n                  - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and (v4-v1), and gets the returned value as v10.\n                  - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and v9.\n                  - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and (v4-v1), and gets the returned value as v10. Afterthat, \n                    - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, the first argument, v10, and 1.\n                    - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                    - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                    - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n              - When v5 is greater than the ether just received (i.e., msg.value):\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v5-the ether just received (i.e., msg.value)), and 0.\n                - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v5/4), 0, and 1.\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v5/20), 0, and 1.\n                - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                  - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n                - When v5 is greater than 0:\n                  - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument.\n                  - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and v9.\n                  - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument.\n                  - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, the first argument, v10, and 1.\n                  - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                    - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                    - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n              - When v5 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v5:\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v5), 0, and 1.\n                - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v5/4), 0, and 1.\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v5/20), 0, and 1.\n                - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                  - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n                - When v5 is greater than 0:\n                  - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument.\n                  - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and v9.\n                  - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument.\n                  - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, the first argument, v10, and 1.\n                  - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                    - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                    - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n              - When v5 is greater than 0:\n                - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument.\n                - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and v9.\n                - it calls an external function getUnitsProduction of the external contract cards with the following argument list: caller, the first argument, and the second argument.\n                - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, the first argument, v10, and 1.\n                - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                  - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n            - When (the second argument+v1) is greater than v3:\n              - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v8.\n          - When (the second argument+v1) is greater than v3:\n            - it calls an external function coinBalanceOf of the external contract cards with the following argument list: caller, and 0, and gets the returned value as v7.\n        - When (the second argument+v1) is greater than v3:\n          - it calls an external function getCardInfo of the external contract schema with the following argument list: the first argument, v1, and (v4-v1), and gets the returned value as v5.\n      - When the first argument is greater than 39, and the first argument is not smaller than 40:\n        - it calls an external function getBattleCardInfo of the external contract schema with the following argument list: the first argument, v1, and the second argument.\n        - When v6 is greater than 0:\n          - it calls an external function coinBalanceOf of the external contract cards with the following argument list: caller, and 0, and gets the returned value as v7.\n          - When (the ether just received (i.e., msg.value)+v7) is not smaller than v6:\n            - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v8.\n            - When v8 is not smaller than v6:\n              - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v6.\n              - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v6/4), 0, and 1.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v6/20), 0, and 1.\n              - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n              - When v11 is not greater than 0:\n                - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n                - When (the second argument+v1) is greater than v3:\n                  - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                  - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                  - When v6 is greater than the ether just received (i.e., msg.value):\n                    - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                    - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                    - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                  - When the ether just received (i.e., msg.value) is greater than v6, and v6 is not greater than the ether just received (i.e., msg.value):\n                    - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                    - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                    - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                - When v6 is greater than the ether just received (i.e., msg.value):\n                  - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                  - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n                - When the ether just received (i.e., msg.value) is greater than v6, and v6 is not greater than the ether just received (i.e., msg.value):\n                  - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                  - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n              - When (the second argument+v1) is greater than v3:\n                - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v6.\n                - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v6/4), 0, and 1.\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v6/20), 0, and 1.\n                - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                  - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                - When v6 is greater than the ether just received (i.e., msg.value):\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v6-the ether just received (i.e., msg.value)), and 0.\n                  - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v6/4), 0, and 1.\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v6/20), 0, and 1.\n                  - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                    - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                    - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                - When the ether just received (i.e., msg.value) is greater than v6, and v6 is not greater than the ether just received (i.e., msg.value):\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v6), 0, and 1.\n                  - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v6/4), 0, and 1.\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v6/20), 0, and 1.\n                  - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                    - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                    - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n              - When v6 is greater than the ether just received (i.e., msg.value):\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v6-the ether just received (i.e., msg.value)), and 0.\n                - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v6/4), 0, and 1.\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v6/20), 0, and 1.\n                - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                  - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n              - When the ether just received (i.e., msg.value) is greater than v6, and v6 is not greater than the ether just received (i.e., msg.value):\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v6), 0, and 1.\n                - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v6/4), 0, and 1.\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v6/20), 0, and 1.\n                - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                  - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n            - When (the second argument+v1) is greater than v3:\n              - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v8.\n          - When (the second argument+v1) is greater than v3:\n            - it calls an external function coinBalanceOf of the external contract cards with the following argument list: caller, and 0, and gets the returned value as v7.\n        - When (the second argument+v1) is greater than v3:\n          - it calls an external function getBattleCardInfo of the external contract schema with the following argument list: the first argument, v1, and (v4-v1), and gets the returned value as v6.\n    - When the first argument is smaller than 1, and the first argument is not smaller than 40:\n      - it calls an external function getBattleCardInfo of the external contract schema with the following argument list: the first argument, v1, and the second argument.\n      - When v6 is greater than 0:\n        - it calls an external function coinBalanceOf of the external contract cards with the following argument list: caller, and 0, and gets the returned value as v7.\n        - When (the ether just received (i.e., msg.value)+v7) is not smaller than v6:\n          - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v8.\n          - When v8 is not smaller than v6:\n            - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v6.\n            - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v6/4), 0, and 1.\n            - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v6/20), 0, and 1.\n            - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n              - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n            - When v11 is not greater than 0:\n              - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n              - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n              - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n              - When (the second argument+v1) is greater than v3:\n                - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                - When v6 is greater than the ether just received (i.e., msg.value):\n                  - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                  - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n                - When the ether just received (i.e., msg.value) is greater than v6, and v6 is not greater than the ether just received (i.e., msg.value):\n                  - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                  - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n              - When v6 is greater than the ether just received (i.e., msg.value):\n                - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n              - When the ether just received (i.e., msg.value) is greater than v6, and v6 is not greater than the ether just received (i.e., msg.value):\n                - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n            - When (the second argument+v1) is greater than v3:\n              - it calls an external function updatePlayersCoinByPurchase of the external contract cards with the following argument list: caller, and v6.\n              - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v6/4), 0, and 1.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v6/20), 0, and 1.\n              - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n              - When v6 is greater than the ether just received (i.e., msg.value):\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v6-the ether just received (i.e., msg.value)), and 0.\n                - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v6/4), 0, and 1.\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v6/20), 0, and 1.\n                - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                  - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n              - When the ether just received (i.e., msg.value) is greater than v6, and v6 is not greater than the ether just received (i.e., msg.value):\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v6), 0, and 1.\n                - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v6/4), 0, and 1.\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v6/20), 0, and 1.\n                - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, (v4-v1), and 1.\n                  - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, (v4-v1), and 1.\n                  - the cansellunit from caller to the first argument will be updated to ((v4-v1)+the cansellunit from caller to the first argument).\n            - When v6 is greater than the ether just received (i.e., msg.value):\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v6-the ether just received (i.e., msg.value)), and 0.\n              - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v6/4), 0, and 1.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v6/20), 0, and 1.\n              - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n            - When the ether just received (i.e., msg.value) is greater than v6, and v6 is not greater than the ether just received (i.e., msg.value):\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v6), 0, and 1.\n              - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v6/4), 0, and 1.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v6/20), 0, and 1.\n              - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v11. Afterthat, \n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, the second argument, and 1.\n                - it calls an external function setOwnedCount of the external contract cards with the following argument list: caller, the first argument, the second argument, and 1.\n                - the cansellunit from caller to the first argument will be updated to (the second argument+the cansellunit from caller to the first argument).\n          - When (the second argument+v1) is greater than v3:\n            - it calls an external function balanceOf of the external contract cards with caller as the argument, and gets the returned value as v8.\n        - When (the second argument+v1) is greater than v3:\n          - it calls an external function coinBalanceOf of the external contract cards with the following argument list: caller, and 0, and gets the returned value as v7.\n      - When (the second argument+v1) is greater than v3:\n        - it calls an external function getBattleCardInfo of the external contract schema with the following argument list: the first argument, v1, and (v4-v1), and gets the returned value as v6.\n    - When (the second argument+v1) is greater than v3:\n      - it calls an external function getMaxCAP of the external contract schema, and gets the returned value as v4.\n\nFor the payable buyRareItem function, it has one argument and its type is uint256.\n- it calls an external function getGameStarted of the external contract cards, and gets the returned value as v1.\n- When v1 is not 0:\n  - it calls an external function getRareItemsOwner of the external contract rare with the first argument, and gets the returned value as v2.\n  - For users, except for v2, and v2 is not 0:\n    - it calls an external function getRareItemsPrice of the external contract rare with the first argument, and gets the returned value as v3.\n    - it calls an external function coinBalanceOf of the external contract cards with the following argument list: caller, and 0, and gets the returned value as v0.\n    - When (the ether just received (i.e., msg.value)+v0) is not smaller than v3:\n      - it calls an external function updatePlayersCoinByOut of the external contract cards with caller as the argument.\n      - it calls an external function updatePlayersCoinByOut of the external contract cards with v2 as the argument.\n      - it calls an external function getRareInfo of the external contract rare with the first argument, and gets the returned value as v4. Afterthat, \n        - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n        - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n        - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n        - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n        - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n        - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n        - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n        - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n        - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n      - When v4 is not 0:\n        - When 1 does not equal to v4:\n          - When 2 equals to v4:\n            - it calls an external function setUnitAttackIncreases of the external contract cards with the following argument list: caller, v4, v4, and 1.\n            - it calls an external function setUnitAttackIncreases of the external contract cards with the following argument list: v2, v4, v4, and 0.\n            - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n            - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n            - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n            - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n            - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n            - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n            - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n            - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n            - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n            - When v5 is not greater than 0:\n              - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n              - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n              - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n                - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n              - When v3 is greater than the ether just received (i.e., msg.value):\n                - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n            - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v3), 0, and 1.\n              - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n              - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n              - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n              - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n              - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n              - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n            - When v3 is greater than the ether just received (i.e., msg.value):\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v3-the ether just received (i.e., msg.value)), and 0.\n              - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n              - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n              - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n              - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n          - When 2 does not equal to v4:\n            - When 3 equals to v4:\n              - it calls an external function setUnitAttackMultiplier of the external contract cards with the following argument list: caller, v4, v4, and 1.\n              - it calls an external function setUnitAttackMultiplier of the external contract cards with the following argument list: v2, v4, v4, and 0.\n              - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n              - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n              - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n              - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n              - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n              - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n              - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n              - When v5 is not greater than 0:\n                - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n                  - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                  - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                - When v3 is greater than the ether just received (i.e., msg.value):\n                  - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n              - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v3), 0, and 1.\n                - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n                - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n                - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n                - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n              - When v3 is greater than the ether just received (i.e., msg.value):\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v3-the ether just received (i.e., msg.value)), and 0.\n                - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n                - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n                - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n            - When 3 does not equal to v4:\n              - When 4 equals to v4:\n                - it calls an external function setUnitDefenseIncreases of the external contract cards with the following argument list: caller, v4, v4, and 1.\n                - it calls an external function setUnitDefenseIncreases of the external contract cards with the following argument list: v2, v4, v4, and 0.\n                - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n                - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n                - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n                - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n                - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                - When v5 is not greater than 0:\n                  - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                  - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                  - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                  - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n                    - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                    - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                  - When v3 is greater than the ether just received (i.e., msg.value):\n                    - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v3), 0, and 1.\n                  - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n                  - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n                  - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                  - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n                  - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                  - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                - When v3 is greater than the ether just received (i.e., msg.value):\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v3-the ether just received (i.e., msg.value)), and 0.\n                  - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n                  - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n                  - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                  - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n              - When 4 does not equal to v4:\n                - When 5 equals to v4:\n                  - it calls an external function setunitDefenseMultiplier of the external contract cards with the following argument list: caller, v4, v4, and 1.\n                  - it calls an external function setunitDefenseMultiplier of the external contract cards with the following argument list: v2, v4, v4, and 0.\n                  - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n                  - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n                  - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                  - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n                  - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n                  - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                  - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                  - When v5 is not greater than 0:\n                    - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                    - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                    - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                    - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n                      - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                      - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                    - When v3 is greater than the ether just received (i.e., msg.value):\n                      - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                  - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n                    - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v3), 0, and 1.\n                    - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n                    - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n                    - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n                    - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n                    - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                    - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n                    - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n                    - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                    - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                  - When v3 is greater than the ether just received (i.e., msg.value):\n                    - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v3-the ether just received (i.e., msg.value)), and 0.\n                    - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n                    - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n                    - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n                    - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n                    - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                    - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                - When 5 does not equal to v4:\n                  - When 6 equals to v4:\n                    - it calls an external function setUnitJadeStealingIncreases of the external contract cards with the following argument list: caller, v4, v4, and 1.\n                    - it calls an external function setUnitJadeStealingIncreases of the external contract cards with the following argument list: v2, v4, v4, and 0.\n                    - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n                    - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n                    - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n                    - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n                    - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                    - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n                    - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n                    - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                    - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                    - When v5 is not greater than 0:\n                      - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                      - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                      - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n                        - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                        - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                      - When v3 is greater than the ether just received (i.e., msg.value):\n                        - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                    - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n                      - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v3), 0, and 1.\n                      - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n                      - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n                      - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n                      - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n                      - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                      - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n                      - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n                      - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                      - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                    - When v3 is greater than the ether just received (i.e., msg.value):\n                      - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v3-the ether just received (i.e., msg.value)), and 0.\n                      - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n                      - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n                      - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n                      - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n                      - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                      - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                  - When 7 equals to v4, and 6 does not equal to v4:\n                    - it calls an external function setUnitJadeStealingMultiplier of the external contract cards with the following argument list: caller, v4, v4, and 1.\n                    - it calls an external function setUnitJadeStealingMultiplier of the external contract cards with the following argument list: v2, v4, v4, and 0.\n                    - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n                    - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n                    - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n                    - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n                    - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                    - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n                    - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n                    - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                    - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                    - When v5 is not greater than 0:\n                      - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                      - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                      - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                      - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n                        - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                        - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                      - When v3 is greater than the ether just received (i.e., msg.value):\n                        - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                    - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n                      - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v3), 0, and 1.\n                      - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n                      - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n                      - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n                      - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n                      - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                      - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n                      - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n                      - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                      - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n                    - When v3 is greater than the ether just received (i.e., msg.value):\n                      - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v3-the ether just received (i.e., msg.value)), and 0.\n                      - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n                      - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n                      - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n                      - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n                      - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n                      - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n                        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n        - When 1 equals to v4:\n          - it calls an external function setUnitCoinProductionMultiplier of the external contract cards with the following argument list: caller, v4, v4, and 1.\n          - it calls an external function getUnitCoinProductionIncreases of the external contract cards with the following argument list: caller, and v4, and gets the returned value as v8.\n          - it calls an external function getOwnedCount of the external contract cards with the following argument list: caller, and v4, and gets the returned value as v7. Afterthat, \n            - it calls an external function unitCoinProduction of the external contract schema with v4 as the argument, and gets the returned value as v13.\n            - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, v4, ((v4*v7)*(v8+v9)), and 1.\n            - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and ((v4*v7)*(v8+v9)).\n            - it calls an external function setUnitCoinProductionMultiplier of the external contract cards with the following argument list: v2, v4, v4, and 0.\n            - it calls an external function getUnitCoinProductionIncreases of the external contract cards with the following argument list: v2, and v4, and gets the returned value as v12.\n            - it calls an external function unitCoinProduction of the external contract schema with v4 as the argument, and gets the returned value as v13.\n            - it calls an external function getOwnedCount of the external contract cards with the following argument list: v2, and v4, and gets the returned value as v11.\n            - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: v2, v4, ((v4*v11)*(v12+v13)), and 0.\n            - it calls an external function reducePlayersJadeProduction of the external contract cards with the following argument list: v2, and ((v4*v11)*(v12+v13)).\n            - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n            - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n            - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n            - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n            - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n            - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n            - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n            - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n            - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n          - When v5 is not greater than 0:\n            - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n            - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n            - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n              - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n              - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n            - When v3 is greater than the ether just received (i.e., msg.value):\n              - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n          - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n            - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v3), 0, and 1.\n            - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n            - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n            - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n            - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n            - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n            - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n            - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n            - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n            - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n          - When v3 is greater than the ether just received (i.e., msg.value):\n            - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v3-the ether just received (i.e., msg.value)), and 0.\n            - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n            - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n            - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n            - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n            - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n            - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n              - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n      - When v5 is not greater than 0:\n        - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n        - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n        - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n        - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n          - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n          - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n          - When v4 is 0:\n            - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n            - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n        - When v3 is greater than the ether just received (i.e., msg.value):\n          - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n          - When v4 is 0:\n            - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n        - When v4 is 0:\n          - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n          - it calls an external function AddPlayers of the external contract cards with caller as the argument.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n      - When v3 is not greater than the ether just received (i.e., msg.value), and the ether just received (i.e., msg.value) is greater than v3:\n        - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v3), 0, and 1.\n        - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n        - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n        - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n        - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n        - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n        - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n        - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n        - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n        - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n        - When v4 is 0:\n          - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (the ether just received (i.e., msg.value)-v3), 0, and 1.\n          - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n          - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n          - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n          - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n          - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n          - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n          - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n          - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n          - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n      - When v3 is greater than the ether just received (i.e., msg.value):\n        - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v3-the ether just received (i.e., msg.value)), and 0.\n        - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n        - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n        - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n        - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n        - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n        - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n        - When v4 is 0:\n          - it calls an external function setCoinBalance of the external contract cards with the following argument list: caller, (v3-the ether just received (i.e., msg.value)), and 0.\n          - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n          - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n          - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n          - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n          - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n          - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n      - When v4 is 0:\n        - it calls an external function setUnitCoinProductionIncreases of the external contract cards with the following argument list: caller, v4, v4, and 1.\n        - it calls an external function getUnitCoinProductionMultiplier of the external contract cards with the following argument list: caller, and v4, and gets the returned value as v6.\n        - it calls an external function getOwnedCount of the external contract cards with the following argument list: caller, and v4, and gets the returned value as v7. Afterthat, \n          - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: caller, v4, ((v4*v7)*(v6+10)), and 1.\n          - it calls an external function increasePlayersJadeProduction of the external contract cards with the following argument list: caller, and ((v4*v7)*(v6+10)).\n          - it calls an external function setUnitCoinProductionIncreases of the external contract cards with the following argument list: v2, v4, v4, and 0.\n          - it calls an external function getUnitCoinProductionMultiplier of the external contract cards with the following argument list: v2, and v4, and gets the returned value as v10.\n          - it calls an external function getOwnedCount of the external contract cards with the following argument list: v2, and v4, and gets the returned value as v11.\n          - it calls an external function setUintCoinProduction of the external contract cards with the following argument list: v2, v4, ((v4*v11)*(v10+10)), and 0.\n          - it calls an external function reducePlayersJadeProduction of the external contract cards with the following argument list: v2, and ((v4*v11)*(v10+10)).\n          - it calls an external function setTotalEtherPool of the external contract cards with the following argument list: (v3/20), 0, and 1.\n          - it calls an external function setCoinBalance of the external contract cards with the following argument list: owner, (v3/20), 0, and 1.\n          - it calls an external function transferToken of the external contract rare with the following argument list: v2, caller, and the first argument.\n          - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and 0.\n          - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n          - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5.\n          - it calls an external function setRarePrice of the external contract rare with the following argument list: the first argument, and ((5*v3)/4).\n          - it calls an external function setCoinBalance of the external contract cards with the following argument list: v2, (v3-((v3/20)+(v3/20))), 0, and 1.\n          - it calls an external function getUintsOwnerCount of the external contract cards with caller as the argument, and gets the returned value as v5. Afterthat, \n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n            - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: caller, 1, and 1.\n          - it calls an external function setUintsOwnerCount of the external contract cards with the following argument list: v2, 1, and 0.\n\n",
	"language": "Solidity",
	"status": "This model's maximum context length is 32768 tokens. However, your messages resulted in 44706 tokens. Please reduce the length of the messages."
}