{
	"address": "0xf208f8cdf637e49b5e6219fa76b014d49287894f",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is the Solidity contract code equivalent to the decompiled code you provided:\n\n```solidity\npragma solidity >=0.5.0 <0.9.0;\n\ncontract MyContract {\n    mapping(address => uint256) private _balanceOf;\n    mapping(address => uint256) private _paymentDue;\n    address payable private _fallback;\n\n    function paymentDue(address varg0) public view returns(uint256) {\n        return (_paymentDue[varg0] << 1) * (block.number - _paymentDue[varg0]) / 600000;\n    }\n\n    function balanceOf(address varg0) public view returns(uint256) {\n        return _balanceOf[varg0];\n    }\n\n    function fallback() public payable {\n        (bool success,) = _fallback.call{value: msg.value / 20, gas: 2300}(\"\");\n        require(success, \"Call failed\");\n\n        if (_balanceOf[msg.sender] > 0) {\n            (bool paySuccess,) = msg.sender.call{value: (_paymentDue[msg.sender] << 1) * (block.number - _paymentDue[msg.sender]) / 600000, gas: 2300}(\"\");\n            require(paySuccess, \"Payment failed\");\n        }\n        _paymentDue[msg.sender] = block.number;\n        _paymentDue[msg.sender] += msg.value;\n    }\n\n    function __function_selector__(bytes4 function_selector) public payable {\n        if (msg.data.length >= 4) {\n            if (function_selector == bytes4(keccak256(\"paymentDue(address)\"))) {\n                paymentDue(msg.sender);\n            } else if (function_selector == bytes4(keccak256(\"balanceOf(address)\"))) {\n                balanceOf(msg.sender);\n            }\n        }\n        fallback();\n    }\n}\n```\nPlease note that the actual contract might be different because the decompiled code you provided doesn't include the constructor and it's impossible to guess the actual logic behind the contract due to the use of low-level calls.",
				"role": "assistant"
			}
		}
	],
	"created": 1701470095,
	"id": "chatcmpl-8R6Nzw2CsRYWFeGzqoX4y6bP00ffW",
	"input_format": "DecompiledCode",
	"ir": "// Decompiled at www.contract-library.com\n// 2021.09.12 22:50 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x1]\nmapping (uint256 => [uint256]) _paymentDue; // STORAGE[0x2]\naddress _fallback; // STORAGE[0x0] bytes 0 to 19\n\n\nfunction paymentDue(address varg0) public nonPayable { \n    return (_paymentDue[varg0] << 1) / 100 * (block.number - _paymentDue[varg0]) / 6000;\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction fallback() public payable { \n    v0 = _fallback.call().value(msg.value / 20).gas(!(msg.value / 20) * 2300);\n    require(v0); // checks call status, propagates error data on error\n    if (_balanceOf[msg.sender]) {\n        v1 = msg.sender.call().value((_paymentDue[msg.sender] << 1) / 100 * (block.number - _paymentDue[msg.sender]) / 6000).gas(2300 * !((_paymentDue[msg.sender] << 1) / 100 * (block.number - _paymentDue[msg.sender]) / 6000));\n        require(v1); // checks call status, propagates error data on error\n    }\n    _paymentDue[msg.sender] = block.number;\n    _paymentDue[msg.sender] += msg.value;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (function_selector == 0x366f2d86) {\n            paymentDue(address);\n        } else if (0x70a08231 == function_selector) {\n            balanceOf(address);\n        }\n    }\n    fallback();\n}\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.09.12 22:50 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x1]\nmapping (uint256 => [uint256]) _paymentDue; // STORAGE[0x2]\naddress _fallback; // STORAGE[0x0] bytes 0 to 19\n\n\nfunction paymentDue(address varg0) public nonPayable { \n    return (_paymentDue[varg0] << 1) / 100 * (block.number - _paymentDue[varg0]) / 6000;\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction fallback() public payable { \n    v0 = _fallback.call().value(msg.value / 20).gas(!(msg.value / 20) * 2300);\n    require(v0); // checks call status, propagates error data on error\n    if (_balanceOf[msg.sender]) {\n        v1 = msg.sender.call().value((_paymentDue[msg.sender] << 1) / 100 * (block.number - _paymentDue[msg.sender]) / 6000).gas(2300 * !((_paymentDue[msg.sender] << 1) / 100 * (block.number - _paymentDue[msg.sender]) / 6000));\n        require(v1); // checks call status, propagates error data on error\n    }\n    _paymentDue[msg.sender] = block.number;\n    _paymentDue[msg.sender] += msg.value;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (function_selector == 0x366f2d86) {\n            paymentDue(address);\n        } else if (0x70a08231 == function_selector) {\n            balanceOf(address);\n        }\n    }\n    fallback();\n}\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.09.12 22:50 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x1]\nmapping (uint256 => [uint256]) _paymentDue; // STORAGE[0x2]\naddress _fallback; // STORAGE[0x0] bytes 0 to 19\n\n\nfunction paymentDue(address varg0) public nonPayable { \n    return (_paymentDue[varg0] << 1) / 100 * (block.number - _paymentDue[varg0]) / 6000;\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction fallback() public payable { \n    v0 = _fallback.call().value(msg.value / 20).gas(!(msg.value / 20) * 2300);\n    require(v0); // checks call status, propagates error data on error\n    if (_balanceOf[msg.sender]) {\n        v1 = msg.sender.call().value((_paymentDue[msg.sender] << 1) / 100 * (block.number - _paymentDue[msg.sender]) / 6000).gas(2300 * !((_paymentDue[msg.sender] << 1) / 100 * (block.number - _paymentDue[msg.sender]) / 6000));\n        require(v1); // checks call status, propagates error data on error\n    }\n    _paymentDue[msg.sender] = block.number;\n    _paymentDue[msg.sender] += msg.value;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (function_selector == 0x366f2d86) {\n            paymentDue(address);\n        } else if (0x70a08231 == function_selector) {\n            balanceOf(address);\n        }\n    }\n    fallback();\n}\n.",
	"status": "1",
	"time_cost": 24.50401520729065,
	"usage": {
		"completion_tokens": 411,
		"prompt_tokens": 506,
		"total_tokens": 917
	}
}