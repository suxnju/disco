{
	"address": "0xc9f4d79cd4b07a553a18f96d6209cec3cc3d55f0",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here's a Solidity contract that represents the decompiled code:\n\n```solidity\npragma solidity >=0.4.0 <0.7.0;\n\ncontract Contract {\n    mapping(bytes32 => uint256) private storageMap;\n    address private ownerAddress;\n    uint256 private totalValue;\n    \n    modifier onlyOwner {\n        require(msg.sender == ownerAddress, \"Not authorized\");\n        _;\n    }\n    \n    function main() public onlyOwner {\n        require(msg.data.length >= 4, \"Invalid data\");\n        bytes32 hash = keccak256(msg.data);\n        if (hash == keccak256(\"function1\")) {\n            function1();\n        } else if (hash == keccak256(\"function2\")) {\n            function2();\n        } else if (hash == keccak256(\"function3\")) {\n            function3();\n        } else if (hash == keccak256(\"function4\")) {\n            function4();\n        } else {\n            revert(\"No function matches hash\");\n        }\n    }\n    \n    function function1() private {\n        // Logic for function1\n    }\n    \n    function function2() private {\n        // Logic for function2\n    }\n    \n    function function3() private {\n        // Logic for function3\n    }\n    \n    function function4() private {\n        // Logic for function4\n    }\n}\n```\n\nPlease note: The exact logic inside each function cannot be determined from the provided decompiled code. The actual function names are also placeholders, as the original function names were not provided in the decompiled code. The logic in the `main` function may also need to be adjusted, as the decompiled code is not clear about how it should operate.",
				"role": "assistant"
			}
		}
	],
	"created": 1700475371,
	"id": "chatcmpl-8Mvc38XGWVjqOLqpBrc1fH33r8GjL",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }\n    \n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] != 0x18160ddd) {\n            if (memory[0x00:0x20] != 0xf1753550) {\n                if (memory[0x00:0x20] != 0x70a08231) {\n                    if (memory[0x00:0x20] != 0x6352211e) {\n                        if (memory[0x00:0x20] != 0x4f6ccce7) {\n                            if (memory[0x00:0x20] != 0x2f745c59) {\n                                if (memory[0x00:0x20] != 0x081812fc) {\n                                    if (memory[0x00:0x20] != 0x3bd18a3b) {\n                                        if (memory[0x00:0x20] != 0xb77cfd0d) {\n                                            if (memory[0x00:0x20] != 0x8499ecd6) {\n                                                if (memory[0x00:0x20] != 0xe985e9c5) {\n                                                    if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0x01c0:0x01e0] = memory[0x01a0:0x01c0] == memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x04;\n                                                        memory[0x01e0:0x0200] = memory[0x0140:0x0160] == storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        var temp53 = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = temp53;\n                                                        memory[0x0200:0x0220] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0x00:0x20] = memory[0x01c0:0x01e0] | memory[0x01e0:0x0200] | memory[0x0200:0x0220];\n                                                        var-3 = memory[0x00:0x20];\n                                                        // Error: Could not resolve jump destination!\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        var temp49 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = temp49;\n                                                        var temp50 = memory[0x0160:0x0180];\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x09;\n                                                        var temp51 = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0a;\n                                                        memory[0xe0:0x0100] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xc0:0xe0] = temp51;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = temp50;\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0a;\n                                                        var-3 = keccak256(memory[0xc0:0x0100]);\n                                                        var temp52 = storage[var-3];\n                                                        var-2 = temp52;\n                                                        var-1 = 0x01;\n                                                    \n                                                        if (var-2 + var-1 < var-2) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        storage[var-3] = var-2 + var-1;\n                                                        // Error: Could not resolve jump destination!\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        var temp48 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])] != temp48) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0a;\n                                                        var-3 = keccak256(memory[0xc0:0x0100]);\n                                                        var-2 = storage[var-3];\n                                                        var-1 = 0x01;\n                                                    \n                                                        if (var-2 < var-1) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        storage[var-3] = var-2 - var-1;\n                                                        // Error: Could not resolve jump destination!\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        var temp47 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])] != temp47) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x04;\n                                                    \n                                                        if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) {\n                                                            // Error: Could not resolve jump destination!\n                                                        } else {\n                                                            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                            memory[0xc0:0xe0] = 0x04;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                            // Error: Could not resolve jump destination!\n                                                        }\n                                                    } else if (0x00) {\n                                                        // Error: StackRead before write???\n                                                        var var-4;\n                                                        // Error: StackRead before write???\n                                                        var var-2;\n                                                        // Error: StackRead before write???\n                                                        var var-3;\n                                                        // Error: StackRead before write???\n                                                        var var-1;\n                                                        // Error: StackRead before write???\n                                                        var var-5;\n                                                        memory[0x01c0:0x01e0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0x0180:0x01a0] = var-4;\n                                                        memory[0x01a0:0x01c0] = var-5;\n                                                        var-5 = memory[0x0140:0x0160];\n                                                        var-4 = memory[0x0160:0x0180];\n                                                        var-3 = memory[0x0180:0x01a0];\n                                                        var-2 = memory[0x01a0:0x01c0];\n                                                        var-1 = memory[0x01c0:0x01e0];\n                                                        memory[0x0200:0x0220] = 0x4cdc9549;\n                                                        memory[0x0220:0x0240] = memory[0x01a0:0x01c0];\n                                                        memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n                                                        var0 = memory[0x0240:0x0260];\n                                                        var1 = memory[0x0220:0x0240];\n                                                        var2 = 0x06;\n                                                        // Unhandled termination\n                                                    } else if (memory[0x00:0x20] != 0x23b872dd) {\n                                                        if (memory[0x00:0x20] == 0x42842e0e) {\n                                                            memory[0x0580:0x05a0] = 0x00;\n                                                            var0 = 0x0580;\n                                                            var temp45 = memory[var0:var0 + 0x20] + 0x20;\n                                                            var1 = temp45;\n                                                            var temp46;\n                                                            temp46, memory[0x0140:0x0140 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                        \n                                                            if (temp46) { goto label_0AA5; }\n                                                            else { revert(memory[0x00:0x00]); }\n                                                        } else if (memory[0x00:0x20] == 0xb88d4fde) {\n                                                            memory[0x0140:0x0560] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0420];\n                                                        \n                                                            if (msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x20] > 0x0400) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0140:0x0580] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0440];\n                                                            goto label_0AA5;\n                                                        } else if (0x00) {\n                                                        label_0AA5:\n                                                        \n                                                            if (msg.value) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            var0 = msg.data[0x04:0x24];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            var0 = msg.data[0x24:0x44];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x05c0:0x05e0] = 0x0140;\n                                                            var0 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                            memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                        \n                                                            if (memory[0x05c0:0x05e0] >= 0x05c0) {\n                                                            label_0AFE:\n                                                                memory[0x05e0:0x0600] = 0x092863fe;\n                                                                memory[0x0600:0x0620] = msg.data[0x04:0x24];\n                                                                memory[0x0620:0x0640] = msg.data[0x24:0x44];\n                                                                memory[0x0640:0x0660] = msg.data[0x44:0x64];\n                                                                memory[0x0660:0x0680] = msg.sender;\n                                                                var1 = memory[0x0660:0x0680];\n                                                                var2 = memory[0x0640:0x0660];\n                                                                var3 = memory[0x0620:0x0640];\n                                                                var4 = memory[0x0600:0x0620];\n                                                                var5 = 0x06;\n                                                                // Unhandled termination\n                                                            } else {\n                                                            label_0AFA:\n                                                                var1 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                                memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                            \n                                                                if (memory[0x05c0:0x05e0] >= 0x05c0) { goto label_0AFE; }\n                                                                else { goto label_0AFA; }\n                                                            }\n                                                        } else if (memory[0x00:0x20] != 0x095ea7b3) {\n                                                            if (memory[0x00:0x20] != 0xa22cb465) {\n                                                                if (memory[0x00:0x20] != 0x01117b0d) {\n                                                                    if (memory[0x00:0x20] != 0x22733337) {\n                                                                        if (memory[0x00:0x20] != 0x98cd6153) {\n                                                                            if (memory[0x00:0x20] != 0xbc04f0af) {\n                                                                                if (memory[0x00:0x20] != 0x06fdde03) {\n                                                                                    if (memory[0x00:0x20] != 0x95d89b41) {\n                                                                                        if (memory[0x00:0x20] != 0x3c130d90) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        var var0 = 0x02;\n                                                                                        memory[0xc0:0xe0] = var0;\n                                                                                        var var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                        var var2 = 0x0180;\n                                                                                        var temp0 = storage[var1] + 0x20;\n                                                                                        var var3 = temp0;\n                                                                                        var var4 = 0x0120;\n                                                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                                                        var var5 = 0x03;\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_1678; }\n                                                                                    \n                                                                                    label_167C:\n                                                                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                        var temp1 = var4;\n                                                                                        var temp2 = memory[temp1:temp1 + 0x20] + 0x01;\n                                                                                        memory[temp1:temp1 + 0x20] = temp2;\n                                                                                    \n                                                                                        if (var5 == temp2) { goto label_169E; }\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_167C; }\n                                                                                    \n                                                                                    label_1678:\n                                                                                    \n                                                                                    label_169E:\n                                                                                        var temp3 = memory[0x0180:0x01a0];\n                                                                                        var temp4 = (temp3 + 0x1f) - temp3 - 0x01 % 0x20 - temp3;\n                                                                                        memory[temp3 + 0x01a0:temp3 + 0x01a0 + temp4] = msg.data[msg.data.length:msg.data.length + temp4];\n                                                                                        memory[0x0160:0x0180] = 0x20;\n                                                                                        var temp5 = memory[0x0180:0x01a0] + 0x40;\n                                                                                        return memory[0x0160:0x0160 + (temp5 + 0x1f) - temp5 - 0x01 % 0x20];\n                                                                                    } else if (!msg.value) {\n                                                                                        var0 = 0x01;\n                                                                                        memory[0xc0:0xe0] = var0;\n                                                                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                        var2 = 0x0180;\n                                                                                        var temp6 = storage[var1] + 0x20;\n                                                                                        var3 = temp6;\n                                                                                        var4 = 0x0120;\n                                                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                                                        var5 = 0x02;\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_15C4; }\n                                                                                    \n                                                                                    label_15C8:\n                                                                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                        var temp7 = var4;\n                                                                                        var temp8 = memory[temp7:temp7 + 0x20] + 0x01;\n                                                                                        memory[temp7:temp7 + 0x20] = temp8;\n                                                                                    \n                                                                                        if (var5 == temp8) { goto label_15EA; }\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_15C8; }\n                                                                                    \n                                                                                    label_15C4:\n                                                                                    \n                                                                                    label_15EA:\n                                                                                        var temp9 = memory[0x0180:0x01a0];\n                                                                                        var temp10 = (temp9 + 0x1f) - temp9 - 0x01 % 0x20 - temp9;\n                                                                                        memory[temp9 + 0x01a0:temp9 + 0x01a0 + temp10] = msg.data[msg.data.length:msg.data.length + temp10];\n                                                                                        memory[0x0160:0x0180] = 0x20;\n                                                                                        var temp11 = memory[0x0180:0x01a0] + 0x40;\n                                                                                        return memory[0x0160:0x0160 + (temp11 + 0x1f) - temp11 - 0x01 % 0x20];\n                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                } else if (!msg.value) {\n                                                                                    var0 = 0x00;\n                                                                                    memory[0xc0:0xe0] = var0;\n                                                                                    var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                    var2 = 0x0180;\n                                                                                    var temp12 = storage[var1] + 0x20;\n                                                                                    var3 = temp12;\n                                                                                    var4 = 0x0120;\n                                                                                    memory[var4:var4 + 0x20] = 0x00;\n                                                                                    var5 = 0x03;\n                                                                                \n                                                                                    if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_1510; }\n                                                                                \n                                                                                label_1514:\n                                                                                    memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                    var temp13 = var4;\n                                                                                    var temp14 = memory[temp13:temp13 + 0x20] + 0x01;\n                                                                                    memory[temp13:temp13 + 0x20] = temp14;\n                                                                                \n                                                                                    if (var5 == temp14) { goto label_1536; }\n                                                                                \n                                                                                    if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_1514; }\n                                                                                \n                                                                                label_1510:\n                                                                                \n                                                                                label_1536:\n                                                                                    var temp15 = memory[0x0180:0x01a0];\n                                                                                    var temp16 = (temp15 + 0x1f) - temp15 - 0x01 % 0x20 - temp15;\n                                                                                    memory[temp15 + 0x01a0:temp15 + 0x01a0 + temp16] = msg.data[msg.data.length:msg.data.length + temp16];\n                                                                                    memory[0x0160:0x0180] = 0x20;\n                                                                                    var temp17 = memory[0x0180:0x01a0] + 0x40;\n                                                                                    return memory[0x0160:0x0160 + (temp17 + 0x1f) - temp17 - 0x01 % 0x20];\n                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                            } else if (!msg.value) {\n                                                                                var0 = msg.data[0x04:0x24];\n                                                                            \n                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (msg.sender != 0x64d56f087d87cdaeac8119c69c48d0d440d560a7) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (msg.data[0x24:0x44] < 0x14) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                var0 = msg.data[0x24:0x44];\n                                                                                var1 = 0x14;\n                                                                                var2 = var1;\n                                                                            \n                                                                                if (!var2) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0140:0x0160] = var0 / var2;\n                                                                                var0 = msg.data[0x24:0x44];\n                                                                                var1 = memory[0x0140:0x0160];\n                                                                            \n                                                                                if (var0 < var1) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0160:0x0180] = var0 - var1;\n                                                                            \n                                                                                if (!address(0x64d56f087d87cdaeac8119c69c48d0d440d560a7).code.length) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (!(address(this) ~ 0x64d56f087d87cdaeac8119c69c48d0d440d560a7)) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x01a0:0x01c0] = 0xa9059cbb;\n                                                                                memory[0x01c0:0x01e0] = storage[0x0d];\n                                                                                memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n                                                                                var temp18;\n                                                                                temp18, memory[0x0240:0x0260] = address(0x64d56f087d87cdaeac8119c69c48d0d440d560a7).call.gas(msg.gas)(memory[0x01bc:0x0200]);\n                                                                            \n                                                                                if (!temp18) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0180:0x01a0] = memory[0x0240:0x0260];\n                                                                            \n                                                                                if (!address(0x64d56f087d87cdaeac8119c69c48d0d440d560a7).code.length) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (!(address(this) ~ 0x64d56f087d87cdaeac8119c69c48d0d440d560a7)) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0260:0x0280] = 0x42966c68;\n                                                                                memory[0x0280:0x02a0] = memory[0x0140:0x0160];\n                                                                                var temp19;\n                                                                                temp19, memory[0x00:0x00] = address(0x64d56f087d87cdaeac8119c69c48d0d440d560a7).call.gas(msg.gas)(memory[0x027c:0x02a0]);\n                                                                            \n                                                                                if (!temp19) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (!memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                var temp20 = memory[0x0160:0x0180];\n                                                                                memory[0xe0:0x0100] = storage[0x0e];\n                                                                                memory[0xc0:0xe0] = 0x07;\n                                                                                storage[keccak256(memory[0xc0:0x0100])] = temp20;\n                                                                                memory[0x02e0:0x0300] = 0x0140;\n                                                                                var0 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                            \n                                                                                if (memory[0x02e0:0x0300] >= 0x02e0) {\n                                                                                label_1425:\n                                                                                    memory[0x0300:0x0320] = 0xff5ce378;\n                                                                                    memory[0x0320:0x0340] = msg.data[0x04:0x24];\n                                                                                    memory[0x0340:0x0360] = storage[0x0e];\n                                                                                    var1 = memory[0x0340:0x0360];\n                                                                                    var2 = memory[0x0320:0x0340];\n                                                                                    var3 = 0x06;\n                                                                                    // Unhandled termination\n                                                                                } else {\n                                                                                label_1421:\n                                                                                    var1 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                    memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                                \n                                                                                    if (memory[0x02e0:0x0300] >= 0x02e0) { goto label_1425; }\n                                                                                    else { goto label_1421; }\n                                                                                }\n                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                        } else if (!msg.value) {\n                                                                            memory[0x0140:0x01a0] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x60];\n                                                                        \n                                                                            if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x40) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            if (msg.sender != storage[0x0d]) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            var0 = 0x0140;\n                                                                            var1 = var0;\n                                                                            memory[0xc0:0xe0] = 0x02;\n                                                                            var2 = keccak256(memory[0xc0:0xe0]);\n                                                                            var temp21 = memory[var1:var1 + 0x20] + 0x20;\n                                                                            var3 = temp21;\n                                                                            var4 = 0x0120;\n                                                                            memory[var4:var4 + 0x20] = 0x00;\n                                                                            var5 = 0x03;\n                                                                        \n                                                                            if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_120E; }\n                                                                        \n                                                                        label_1212:\n                                                                            storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                            var temp22 = var4;\n                                                                            var temp23 = memory[temp22:temp22 + 0x20] + 0x01;\n                                                                            memory[temp22:temp22 + 0x20] = temp23;\n                                                                        \n                                                                            if (var5 == temp23) { stop(); }\n                                                                        \n                                                                            if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_1212; }\n                                                                        \n                                                                        label_120E:\n                                                                            stop();\n                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                    } else if (!msg.value) {\n                                                                        memory[0x0140:0x01a0] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x60];\n                                                                    \n                                                                        if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x40) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x03;\n                                                                    \n                                                                        if (storage[keccak256(memory[0xc0:0x0100])] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0x0200:0x0220] = 0x00;\n                                                                    \n                                                                        if (!(keccak256(memory[0x0140 + 0x20:0x0140 + 0x20 + memory[0x0140:0x0160]]) ~ keccak256(memory[0x0200 + 0x20:0x0200 + 0x20 + memory[0x0200:0x0220]]))) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        var0 = 0x0140;\n                                                                        var1 = var0;\n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x06;\n                                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                        var2 = keccak256(memory[0xc0:0xe0]);\n                                                                        var temp24 = memory[var1:var1 + 0x20] + 0x20;\n                                                                        var3 = temp24;\n                                                                        var4 = 0x0120;\n                                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                                        var5 = 0x03;\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_10BD; }\n                                                                    \n                                                                    label_10C1:\n                                                                        storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                        var temp25 = var4;\n                                                                        var temp26 = memory[temp25:temp25 + 0x20] + 0x01;\n                                                                        memory[temp25:temp25 + 0x20] = temp26;\n                                                                    \n                                                                        if (var5 == temp26) { goto label_10E3; }\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_10C1; }\n                                                                    \n                                                                    label_10BD:\n                                                                    \n                                                                    label_10E3:\n                                                                        memory[0x0240:0x0260] = 0x20;\n                                                                        memory[0x0280:0x02a0] = memory[0x0240:0x0260];\n                                                                        var0 = 0x0140;\n                                                                        var temp27 = memory[var0:var0 + 0x20] + 0x20;\n                                                                        var1 = temp27;\n                                                                        var temp28;\n                                                                        temp28, memory[memory[0x0240:0x0260] + 0x0280:memory[0x0240:0x0260] + 0x0280 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                                    \n                                                                        if (!temp28) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        var temp29 = memory[memory[0x0240:0x0260] + 0x0280:memory[0x0240:0x0260] + 0x0280 + 0x20];\n                                                                        var temp30 = (temp29 + 0x1f) - temp29 - 0x01 % 0x20 - temp29;\n                                                                        memory[memory[0x0240:0x0260] + 0x0280 + 0x20 + temp29:memory[0x0240:0x0260] + 0x0280 + 0x20 + temp29 + temp30] = msg.data[msg.data.length:msg.data.length + temp30];\n                                                                        var temp31 = memory[memory[0x0240:0x0260] + 0x0280:memory[0x0240:0x0260] + 0x0280 + 0x20];\n                                                                        memory[0x0240:0x0260] = memory[0x0240:0x0260] + ((temp31 + 0x1f) - temp31 - 0x01 % 0x20) + 0x20;\n                                                                        log(memory[0x0280:0x0280 + memory[0x0240:0x0260]], [0x1088616167a98af0412ca38d845eb687be08657e190148cd478b2d225c5d2d9f, msg.sender, msg.data[0x24:0x44]]);\n                                                                        stop();\n                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                } else if (!msg.value) {\n                                                                    memory[0x0140:0x01a0] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x60];\n                                                                \n                                                                    if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x40) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x03;\n                                                                \n                                                                    if (storage[keccak256(memory[0xc0:0x0100])] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x0200:0x0220] = 0x00;\n                                                                \n                                                                    if (!(keccak256(memory[0x0140 + 0x20:0x0140 + 0x20 + memory[0x0140:0x0160]]) ~ keccak256(memory[0x0200 + 0x20:0x0200 + 0x20 + memory[0x0200:0x0220]]))) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x0280:0x02a0] = 0x00;\n                                                                    var0 = keccak256(memory[0x0280 + 0x20:0x0280 + 0x20 + memory[0x0280:0x02a0]]);\n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x06;\n                                                                    var1 = keccak256(memory[0xc0:0x0100]);\n                                                                    var2 = var1;\n                                                                    memory[0xc0:0xe0] = var2;\n                                                                    var3 = keccak256(memory[0xc0:0xe0]);\n                                                                    var4 = 0x02c0;\n                                                                    var temp32 = storage[var3] + 0x20;\n                                                                    var5 = temp32;\n                                                                    var var6 = 0x0120;\n                                                                    memory[var6:var6 + 0x20] = 0x00;\n                                                                    var var7 = 0x03;\n                                                                \n                                                                    if (memory[0x0120:0x0140] * 0x20 > var5) { goto label_0E86; }\n                                                                \n                                                                label_0E8A:\n                                                                    memory[var4 + memory[0x0120:0x0140] * 0x20:var4 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var3 + memory[0x0120:0x0140]];\n                                                                    var temp33 = var6;\n                                                                    var temp34 = memory[temp33:temp33 + 0x20] + 0x01;\n                                                                    memory[temp33:temp33 + 0x20] = temp34;\n                                                                \n                                                                    if (var7 == temp34) { goto label_0EAC; }\n                                                                \n                                                                    if (memory[0x0120:0x0140] * 0x20 <= var5) { goto label_0E8A; }\n                                                                \n                                                                label_0E86:\n                                                                \n                                                                label_0EAC:\n                                                                    memory[0xc0:0xe0] = var1;\n                                                                \n                                                                    if (keccak256(memory[0x02e0:0x02e0 + storage[keccak256(memory[0xc0:0xe0])]]) != var0) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = keccak256(memory[0x0160:0x0160 + memory[0x0140:0x0160]]);\n                                                                    memory[0xc0:0xe0] = 0x08;\n                                                                \n                                                                    if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var0 = 0x0140;\n                                                                    var1 = var0;\n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x06;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                    var2 = keccak256(memory[0xc0:0xe0]);\n                                                                    var temp35 = memory[var1:var1 + 0x20] + 0x20;\n                                                                    var3 = temp35;\n                                                                    var4 = 0x0120;\n                                                                    memory[var4:var4 + 0x20] = 0x00;\n                                                                    var5 = 0x03;\n                                                                \n                                                                    if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0F28; }\n                                                                \n                                                                label_0F2C:\n                                                                    storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                    var temp36 = var4;\n                                                                    var temp37 = memory[temp36:temp36 + 0x20] + 0x01;\n                                                                    memory[temp36:temp36 + 0x20] = temp37;\n                                                                \n                                                                    if (var5 == temp37) { goto label_0F4E; }\n                                                                \n                                                                    if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0F2C; }\n                                                                \n                                                                label_0F28:\n                                                                \n                                                                label_0F4E:\n                                                                    memory[0x0340:0x0360] = 0x20;\n                                                                    memory[0x0380:0x03a0] = memory[0x0340:0x0360];\n                                                                    var0 = 0x0140;\n                                                                    var temp38 = memory[var0:var0 + 0x20] + 0x20;\n                                                                    var1 = temp38;\n                                                                    var temp39;\n                                                                    temp39, memory[memory[0x0340:0x0360] + 0x0380:memory[0x0340:0x0360] + 0x0380 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                                \n                                                                    if (!temp39) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var temp40 = memory[memory[0x0340:0x0360] + 0x0380:memory[0x0340:0x0360] + 0x0380 + 0x20];\n                                                                    var temp41 = (temp40 + 0x1f) - temp40 - 0x01 % 0x20 - temp40;\n                                                                    memory[memory[0x0340:0x0360] + 0x0380 + 0x20 + temp40:memory[0x0340:0x0360] + 0x0380 + 0x20 + temp40 + temp41] = msg.data[msg.data.length:msg.data.length + temp41];\n                                                                    var temp42 = memory[memory[0x0340:0x0360] + 0x0380:memory[0x0340:0x0360] + 0x0380 + 0x20];\n                                                                    memory[0x0340:0x0360] = memory[0x0340:0x0360] + ((temp42 + 0x1f) - temp42 - 0x01 % 0x20) + 0x20;\n                                                                    log(memory[0x0380:0x0380 + memory[0x0340:0x0360]], [0x1088616167a98af0412ca38d845eb687be08657e190148cd478b2d225c5d2d9f, msg.sender, msg.data[0x24:0x44]]);\n                                                                    stop();\n                                                                } else { revert(memory[0x00:0x00]); }\n                                                            } else if (!msg.value) {\n                                                                var0 = msg.data[0x04:0x24];\n                                                            \n                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var0 = msg.data[0x24:0x44];\n                                                            \n                                                                if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                if (!(msg.data[0x04:0x24] ~ msg.sender)) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0xe0:0x0100] = msg.sender;\n                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                var temp43 = keccak256(memory[0xc0:0x0100]);\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = temp43;\n                                                                storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x24:0x44];\n                                                                memory[0x0140:0x0160] = msg.data[0x24:0x44];\n                                                                log(memory[0x0140:0x0160], [0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, msg.sender, msg.data[0x04:0x24]]);\n                                                                stop();\n                                                            } else { revert(memory[0x00:0x00]); }\n                                                        } else if (!msg.value) {\n                                                            var0 = msg.data[0x04:0x24];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x03;\n                                                            memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        \n                                                            if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            if (!(msg.data[0x04:0x24] ~ memory[0x0140:0x0160])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x03;\n                                                            memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0x0100])] == msg.sender;\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0b;\n                                                            var temp44 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = msg.sender;\n                                                            memory[0xc0:0xe0] = temp44;\n                                                            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        \n                                                            if (!(memory[0x0160:0x0180] | memory[0x0180:0x01a0])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x04;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x04:0x24];\n                                                            log(memory[0x00:0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, memory[0x0140:0x0160], msg.data[0x04:0x24], msg.data[0x24:0x44]]);\n                                                            stop();\n                                                        } else { revert(memory[0x00:0x00]); }\n                                                    } else if (!msg.value) {\n                                                        var0 = msg.data[0x04:0x24];\n                                                    \n                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        var0 = msg.data[0x24:0x44];\n                                                    \n                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0140:0x0160] = 0x092863fe;\n                                                        memory[0x0160:0x0180] = msg.data[0x04:0x24];\n                                                        memory[0x0180:0x01a0] = msg.data[0x24:0x44];\n                                                        memory[0x01a0:0x01c0] = msg.data[0x44:0x64];\n                                                        memory[0x01c0:0x01e0] = msg.sender;\n                                                        var0 = memory[0x01c0:0x01e0];\n                                                        var1 = memory[0x01a0:0x01c0];\n                                                        var2 = memory[0x0180:0x01a0];\n                                                        var3 = memory[0x0160:0x0180];\n                                                        var4 = 0x06;\n                                                        // Unhandled termination\n                                                    } else { revert(memory[0x00:0x00]); }\n                                                } else if (!msg.value) {\n                                                    var0 = msg.data[0x04:0x24];\n                                                \n                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                \n                                                    var0 = msg.data[0x24:0x44];\n                                                \n                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                \n                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                    memory[0xc0:0xe0] = 0x0b;\n                                                    var temp54 = keccak256(memory[0xc0:0x0100]);\n                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                    memory[0xc0:0xe0] = temp54;\n                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                    return memory[0x00:0x20];\n                                                } else { revert(memory[0x00:0x00]); }\n                                            } else if (!msg.value) {\n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                            \n                                                if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                            \n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x06;\n                                                var0 = keccak256(memory[0xc0:0x0100]);\n                                                memory[0xc0:0xe0] = var0;\n                                                var1 = keccak256(memory[0xc0:0xe0]);\n                                                var2 = 0x01a0;\n                                                var temp55 = storage[var1] + 0x20;\n                                                var3 = temp55;\n                                                var4 = 0x0120;\n                                                memory[var4:var4 + 0x20] = 0x00;\n                                                var5 = 0x03;\n                                            \n                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_045E; }\n                                            \n                                            label_0462:\n                                                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                var temp56 = var4;\n                                                var temp57 = memory[temp56:temp56 + 0x20] + 0x01;\n                                                memory[temp56:temp56 + 0x20] = temp57;\n                                            \n                                                if (var5 == temp57) { goto label_0484; }\n                                            \n                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0462; }\n                                            \n                                            label_045E:\n                                            \n                                            label_0484:\n                                                var temp58 = memory[0x01a0:0x01c0];\n                                                var temp59 = (temp58 + 0x1f) - temp58 - 0x01 % 0x20 - temp58;\n                                                memory[temp58 + 0x01c0:temp58 + 0x01c0 + temp59] = msg.data[msg.data.length:msg.data.length + temp59];\n                                                memory[0x0180:0x01a0] = 0x20;\n                                                var temp60 = memory[0x01a0:0x01c0] + 0x40;\n                                                return memory[0x0180:0x0180 + (temp60 + 0x1f) - temp60 - 0x01 % 0x20];\n                                            } else { revert(memory[0x00:0x00]); }\n                                        } else if (!msg.value) {\n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                        \n                                            if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x05;\n                                            var0 = keccak256(memory[0xc0:0x0100]);\n                                            memory[0xc0:0xe0] = var0;\n                                            var1 = keccak256(memory[0xc0:0xe0]);\n                                            var2 = 0x01a0;\n                                            var temp61 = storage[var1] + 0x20;\n                                            var3 = temp61;\n                                            var4 = 0x0120;\n                                            memory[var4:var4 + 0x20] = 0x00;\n                                            var5 = 0x03;\n                                        \n                                            if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0377; }\n                                        \n                                        label_037B:\n                                            memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                            var temp62 = var4;\n                                            var temp63 = memory[temp62:temp62 + 0x20] + 0x01;\n                                            memory[temp62:temp62 + 0x20] = temp63;\n                                        \n                                            if (var5 == temp63) { goto label_039D; }\n                                        \n                                            if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_037B; }\n                                        \n                                        label_0377:\n                                        \n                                        label_039D:\n                                            var temp64 = memory[0x01a0:0x01c0];\n                                            var temp65 = (temp64 + 0x1f) - temp64 - 0x01 % 0x20 - temp64;\n                                            memory[temp64 + 0x01c0:temp64 + 0x01c0 + temp65] = msg.data[msg.data.length:msg.data.length + temp65];\n                                            memory[0x0180:0x01a0] = 0x20;\n                                            var temp66 = memory[0x01a0:0x01c0] + 0x40;\n                                            return memory[0x0180:0x0180 + (temp66 + 0x1f) - temp66 - 0x01 % 0x20];\n                                        } else { revert(memory[0x00:0x00]); }\n                                    } else if (!msg.value) {\n                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                        memory[0xc0:0xe0] = 0x03;\n                                    \n                                        if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                        return memory[0x00:0x20];\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                    memory[0xc0:0xe0] = 0x03;\n                                \n                                    if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                \n                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                    memory[0xc0:0xe0] = 0x04;\n                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                    return memory[0x00:0x20];\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                var0 = msg.data[0x04:0x24];\n                            \n                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                            \n                                if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                memory[0xc0:0xe0] = 0x0a;\n                            \n                                if (msg.data[0x24:0x44] >= storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                memory[0xc0:0xe0] = 0x09;\n                                var temp67 = keccak256(memory[0xc0:0x0100]);\n                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                memory[0xc0:0xe0] = temp67;\n                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            if (msg.data[0x04:0x24] >= storage[0x0f]) { revert(memory[0x00:0x00]); }\n                        \n                            memory[0x00:0x20] = msg.data[0x04:0x24];\n                            return memory[0x00:0x20];\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                        memory[0xc0:0xe0] = 0x03;\n                        memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                    \n                        if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                    \n                        memory[0x00:0x20] = memory[0x0140:0x0160];\n                        return memory[0x00:0x20];\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                    memory[0xc0:0xe0] = 0x0a;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                memory[0xc0:0xe0] = 0x0c;\n                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                return memory[0x00:0x20];\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x00:0x20] = storage[0x0f];\n            return memory[0x00:0x20];\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }\n    \n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] != 0x18160ddd) {\n            if (memory[0x00:0x20] != 0xf1753550) {\n                if (memory[0x00:0x20] != 0x70a08231) {\n                    if (memory[0x00:0x20] != 0x6352211e) {\n                        if (memory[0x00:0x20] != 0x4f6ccce7) {\n                            if (memory[0x00:0x20] != 0x2f745c59) {\n                                if (memory[0x00:0x20] != 0x081812fc) {\n                                    if (memory[0x00:0x20] != 0x3bd18a3b) {\n                                        if (memory[0x00:0x20] != 0xb77cfd0d) {\n                                            if (memory[0x00:0x20] != 0x8499ecd6) {\n                                                if (memory[0x00:0x20] != 0xe985e9c5) {\n                                                    if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0x01c0:0x01e0] = memory[0x01a0:0x01c0] == memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x04;\n                                                        memory[0x01e0:0x0200] = memory[0x0140:0x0160] == storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        var temp53 = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = temp53;\n                                                        memory[0x0200:0x0220] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0x00:0x20] = memory[0x01c0:0x01e0] | memory[0x01e0:0x0200] | memory[0x0200:0x0220];\n                                                        var-3 = memory[0x00:0x20];\n                                                        // Error: Could not resolve jump destination!\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        var temp49 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = temp49;\n                                                        var temp50 = memory[0x0160:0x0180];\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x09;\n                                                        var temp51 = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0a;\n                                                        memory[0xe0:0x0100] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xc0:0xe0] = temp51;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = temp50;\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0a;\n                                                        var-3 = keccak256(memory[0xc0:0x0100]);\n                                                        var temp52 = storage[var-3];\n                                                        var-2 = temp52;\n                                                        var-1 = 0x01;\n                                                    \n                                                        if (var-2 + var-1 < var-2) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        storage[var-3] = var-2 + var-1;\n                                                        // Error: Could not resolve jump destination!\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        var temp48 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])] != temp48) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0a;\n                                                        var-3 = keccak256(memory[0xc0:0x0100]);\n                                                        var-2 = storage[var-3];\n                                                        var-1 = 0x01;\n                                                    \n                                                        if (var-2 < var-1) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        storage[var-3] = var-2 - var-1;\n                                                        // Error: Could not resolve jump destination!\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        var temp47 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])] != temp47) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x04;\n                                                    \n                                                        if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) {\n                                                            // Error: Could not resolve jump destination!\n                                                        } else {\n                                                            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                            memory[0xc0:0xe0] = 0x04;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                            // Error: Could not resolve jump destination!\n                                                        }\n                                                    } else if (0x00) {\n                                                        // Error: StackRead before write???\n                                                        var var-4;\n                                                        // Error: StackRead before write???\n                                                        var var-2;\n                                                        // Error: StackRead before write???\n                                                        var var-3;\n                                                        // Error: StackRead before write???\n                                                        var var-1;\n                                                        // Error: StackRead before write???\n                                                        var var-5;\n                                                        memory[0x01c0:0x01e0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0x0180:0x01a0] = var-4;\n                                                        memory[0x01a0:0x01c0] = var-5;\n                                                        var-5 = memory[0x0140:0x0160];\n                                                        var-4 = memory[0x0160:0x0180];\n                                                        var-3 = memory[0x0180:0x01a0];\n                                                        var-2 = memory[0x01a0:0x01c0];\n                                                        var-1 = memory[0x01c0:0x01e0];\n                                                        memory[0x0200:0x0220] = 0x4cdc9549;\n                                                        memory[0x0220:0x0240] = memory[0x01a0:0x01c0];\n                                                        memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n                                                        var0 = memory[0x0240:0x0260];\n                                                        var1 = memory[0x0220:0x0240];\n                                                        var2 = 0x06;\n                                                        // Unhandled termination\n                                                    } else if (memory[0x00:0x20] != 0x23b872dd) {\n                                                        if (memory[0x00:0x20] == 0x42842e0e) {\n                                                            memory[0x0580:0x05a0] = 0x00;\n                                                            var0 = 0x0580;\n                                                            var temp45 = memory[var0:var0 + 0x20] + 0x20;\n                                                            var1 = temp45;\n                                                            var temp46;\n                                                            temp46, memory[0x0140:0x0140 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                        \n                                                            if (temp46) { goto label_0AA5; }\n                                                            else { revert(memory[0x00:0x00]); }\n                                                        } else if (memory[0x00:0x20] == 0xb88d4fde) {\n                                                            memory[0x0140:0x0560] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0420];\n                                                        \n                                                            if (msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x20] > 0x0400) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0140:0x0580] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0440];\n                                                            goto label_0AA5;\n                                                        } else if (0x00) {\n                                                        label_0AA5:\n                                                        \n                                                            if (msg.value) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            var0 = msg.data[0x04:0x24];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            var0 = msg.data[0x24:0x44];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x05c0:0x05e0] = 0x0140;\n                                                            var0 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                            memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                        \n                                                            if (memory[0x05c0:0x05e0] >= 0x05c0) {\n                                                            label_0AFE:\n                                                                memory[0x05e0:0x0600] = 0x092863fe;\n                                                                memory[0x0600:0x0620] = msg.data[0x04:0x24];\n                                                                memory[0x0620:0x0640] = msg.data[0x24:0x44];\n                                                                memory[0x0640:0x0660] = msg.data[0x44:0x64];\n                                                                memory[0x0660:0x0680] = msg.sender;\n                                                                var1 = memory[0x0660:0x0680];\n                                                                var2 = memory[0x0640:0x0660];\n                                                                var3 = memory[0x0620:0x0640];\n                                                                var4 = memory[0x0600:0x0620];\n                                                                var5 = 0x06;\n                                                                // Unhandled termination\n                                                            } else {\n                                                            label_0AFA:\n                                                                var1 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                                memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                            \n                                                                if (memory[0x05c0:0x05e0] >= 0x05c0) { goto label_0AFE; }\n                                                                else { goto label_0AFA; }\n                                                            }\n                                                        } else if (memory[0x00:0x20] != 0x095ea7b3) {\n                                                            if (memory[0x00:0x20] != 0xa22cb465) {\n                                                                if (memory[0x00:0x20] != 0x01117b0d) {\n                                                                    if (memory[0x00:0x20] != 0x22733337) {\n                                                                        if (memory[0x00:0x20] != 0x98cd6153) {\n                                                                            if (memory[0x00:0x20] != 0xbc04f0af) {\n                                                                                if (memory[0x00:0x20] != 0x06fdde03) {\n                                                                                    if (memory[0x00:0x20] != 0x95d89b41) {\n                                                                                        if (memory[0x00:0x20] != 0x3c130d90) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        var var0 = 0x02;\n                                                                                        memory[0xc0:0xe0] = var0;\n                                                                                        var var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                        var var2 = 0x0180;\n                                                                                        var temp0 = storage[var1] + 0x20;\n                                                                                        var var3 = temp0;\n                                                                                        var var4 = 0x0120;\n                                                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                                                        var var5 = 0x03;\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_1678; }\n                                                                                    \n                                                                                    label_167C:\n                                                                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                        var temp1 = var4;\n                                                                                        var temp2 = memory[temp1:temp1 + 0x20] + 0x01;\n                                                                                        memory[temp1:temp1 + 0x20] = temp2;\n                                                                                    \n                                                                                        if (var5 == temp2) { goto label_169E; }\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_167C; }\n                                                                                    \n                                                                                    label_1678:\n                                                                                    \n                                                                                    label_169E:\n                                                                                        var temp3 = memory[0x0180:0x01a0];\n                                                                                        var temp4 = (temp3 + 0x1f) - temp3 - 0x01 % 0x20 - temp3;\n                                                                                        memory[temp3 + 0x01a0:temp3 + 0x01a0 + temp4] = msg.data[msg.data.length:msg.data.length + temp4];\n                                                                                        memory[0x0160:0x0180] = 0x20;\n                                                                                        var temp5 = memory[0x0180:0x01a0] + 0x40;\n                                                                                        return memory[0x0160:0x0160 + (temp5 + 0x1f) - temp5 - 0x01 % 0x20];\n                                                                                    } else if (!msg.value) {\n                                                                                        var0 = 0x01;\n                                                                                        memory[0xc0:0xe0] = var0;\n                                                                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                        var2 = 0x0180;\n                                                                                        var temp6 = storage[var1] + 0x20;\n                                                                                        var3 = temp6;\n                                                                                        var4 = 0x0120;\n                                                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                                                        var5 = 0x02;\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_15C4; }\n                                                                                    \n                                                                                    label_15C8:\n                                                                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                        var temp7 = var4;\n                                                                                        var temp8 = memory[temp7:temp7 + 0x20] + 0x01;\n                                                                                        memory[temp7:temp7 + 0x20] = temp8;\n                                                                                    \n                                                                                        if (var5 == temp8) { goto label_15EA; }\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_15C8; }\n                                                                                    \n                                                                                    label_15C4:\n                                                                                    \n                                                                                    label_15EA:\n                                                                                        var temp9 = memory[0x0180:0x01a0];\n                                                                                        var temp10 = (temp9 + 0x1f) - temp9 - 0x01 % 0x20 - temp9;\n                                                                                        memory[temp9 + 0x01a0:temp9 + 0x01a0 + temp10] = msg.data[msg.data.length:msg.data.length + temp10];\n                                                                                        memory[0x0160:0x0180] = 0x20;\n                                                                                        var temp11 = memory[0x0180:0x01a0] + 0x40;\n                                                                                        return memory[0x0160:0x0160 + (temp11 + 0x1f) - temp11 - 0x01 % 0x20];\n                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                } else if (!msg.value) {\n                                                                                    var0 = 0x00;\n                                                                                    memory[0xc0:0xe0] = var0;\n                                                                                    var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                    var2 = 0x0180;\n                                                                                    var temp12 = storage[var1] + 0x20;\n                                                                                    var3 = temp12;\n                                                                                    var4 = 0x0120;\n                                                                                    memory[var4:var4 + 0x20] = 0x00;\n                                                                                    var5 = 0x03;\n                                                                                \n                                                                                    if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_1510; }\n                                                                                \n                                                                                label_1514:\n                                                                                    memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                    var temp13 = var4;\n                                                                                    var temp14 = memory[temp13:temp13 + 0x20] + 0x01;\n                                                                                    memory[temp13:temp13 + 0x20] = temp14;\n                                                                                \n                                                                                    if (var5 == temp14) { goto label_1536; }\n                                                                                \n                                                                                    if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_1514; }\n                                                                                \n                                                                                label_1510:\n                                                                                \n                                                                                label_1536:\n                                                                                    var temp15 = memory[0x0180:0x01a0];\n                                                                                    var temp16 = (temp15 + 0x1f) - temp15 - 0x01 % 0x20 - temp15;\n                                                                                    memory[temp15 + 0x01a0:temp15 + 0x01a0 + temp16] = msg.data[msg.data.length:msg.data.length + temp16];\n                                                                                    memory[0x0160:0x0180] = 0x20;\n                                                                                    var temp17 = memory[0x0180:0x01a0] + 0x40;\n                                                                                    return memory[0x0160:0x0160 + (temp17 + 0x1f) - temp17 - 0x01 % 0x20];\n                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                            } else if (!msg.value) {\n                                                                                var0 = msg.data[0x04:0x24];\n                                                                            \n                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (msg.sender != 0x64d56f087d87cdaeac8119c69c48d0d440d560a7) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (msg.data[0x24:0x44] < 0x14) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                var0 = msg.data[0x24:0x44];\n                                                                                var1 = 0x14;\n                                                                                var2 = var1;\n                                                                            \n                                                                                if (!var2) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0140:0x0160] = var0 / var2;\n                                                                                var0 = msg.data[0x24:0x44];\n                                                                                var1 = memory[0x0140:0x0160];\n                                                                            \n                                                                                if (var0 < var1) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0160:0x0180] = var0 - var1;\n                                                                            \n                                                                                if (!address(0x64d56f087d87cdaeac8119c69c48d0d440d560a7).code.length) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (!(address(this) ~ 0x64d56f087d87cdaeac8119c69c48d0d440d560a7)) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x01a0:0x01c0] = 0xa9059cbb;\n                                                                                memory[0x01c0:0x01e0] = storage[0x0d];\n                                                                                memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n                                                                                var temp18;\n                                                                                temp18, memory[0x0240:0x0260] = address(0x64d56f087d87cdaeac8119c69c48d0d440d560a7).call.gas(msg.gas)(memory[0x01bc:0x0200]);\n                                                                            \n                                                                                if (!temp18) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0180:0x01a0] = memory[0x0240:0x0260];\n                                                                            \n                                                                                if (!address(0x64d56f087d87cdaeac8119c69c48d0d440d560a7).code.length) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (!(address(this) ~ 0x64d56f087d87cdaeac8119c69c48d0d440d560a7)) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0260:0x0280] = 0x42966c68;\n                                                                                memory[0x0280:0x02a0] = memory[0x0140:0x0160];\n                                                                                var temp19;\n                                                                                temp19, memory[0x00:0x00] = address(0x64d56f087d87cdaeac8119c69c48d0d440d560a7).call.gas(msg.gas)(memory[0x027c:0x02a0]);\n                                                                            \n                                                                                if (!temp19) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (!memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                var temp20 = memory[0x0160:0x0180];\n                                                                                memory[0xe0:0x0100] = storage[0x0e];\n                                                                                memory[0xc0:0xe0] = 0x07;\n                                                                                storage[keccak256(memory[0xc0:0x0100])] = temp20;\n                                                                                memory[0x02e0:0x0300] = 0x0140;\n                                                                                var0 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                            \n                                                                                if (memory[0x02e0:0x0300] >= 0x02e0) {\n                                                                                label_1425:\n                                                                                    memory[0x0300:0x0320] = 0xff5ce378;\n                                                                                    memory[0x0320:0x0340] = msg.data[0x04:0x24];\n                                                                                    memory[0x0340:0x0360] = storage[0x0e];\n                                                                                    var1 = memory[0x0340:0x0360];\n                                                                                    var2 = memory[0x0320:0x0340];\n                                                                                    var3 = 0x06;\n                                                                                    // Unhandled termination\n                                                                                } else {\n                                                                                label_1421:\n                                                                                    var1 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                    memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                                \n                                                                                    if (memory[0x02e0:0x0300] >= 0x02e0) { goto label_1425; }\n                                                                                    else { goto label_1421; }\n                                                                                }\n                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                        } else if (!msg.value) {\n                                                                            memory[0x0140:0x01a0] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x60];\n                                                                        \n                                                                            if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x40) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            if (msg.sender != storage[0x0d]) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            var0 = 0x0140;\n                                                                            var1 = var0;\n                                                                            memory[0xc0:0xe0] = 0x02;\n                                                                            var2 = keccak256(memory[0xc0:0xe0]);\n                                                                            var temp21 = memory[var1:var1 + 0x20] + 0x20;\n                                                                            var3 = temp21;\n                                                                            var4 = 0x0120;\n                                                                            memory[var4:var4 + 0x20] = 0x00;\n                                                                            var5 = 0x03;\n                                                                        \n                                                                            if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_120E; }\n                                                                        \n                                                                        label_1212:\n                                                                            storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                            var temp22 = var4;\n                                                                            var temp23 = memory[temp22:temp22 + 0x20] + 0x01;\n                                                                            memory[temp22:temp22 + 0x20] = temp23;\n                                                                        \n                                                                            if (var5 == temp23) { stop(); }\n                                                                        \n                                                                            if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_1212; }\n                                                                        \n                                                                        label_120E:\n                                                                            stop();\n                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                    } else if (!msg.value) {\n                                                                        memory[0x0140:0x01a0] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x60];\n                                                                    \n                                                                        if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x40) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x03;\n                                                                    \n                                                                        if (storage[keccak256(memory[0xc0:0x0100])] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0x0200:0x0220] = 0x00;\n                                                                    \n                                                                        if (!(keccak256(memory[0x0140 + 0x20:0x0140 + 0x20 + memory[0x0140:0x0160]]) ~ keccak256(memory[0x0200 + 0x20:0x0200 + 0x20 + memory[0x0200:0x0220]]))) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        var0 = 0x0140;\n                                                                        var1 = var0;\n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x06;\n                                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                        var2 = keccak256(memory[0xc0:0xe0]);\n                                                                        var temp24 = memory[var1:var1 + 0x20] + 0x20;\n                                                                        var3 = temp24;\n                                                                        var4 = 0x0120;\n                                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                                        var5 = 0x03;\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_10BD; }\n                                                                    \n                                                                    label_10C1:\n                                                                        storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                        var temp25 = var4;\n                                                                        var temp26 = memory[temp25:temp25 + 0x20] + 0x01;\n                                                                        memory[temp25:temp25 + 0x20] = temp26;\n                                                                    \n                                                                        if (var5 == temp26) { goto label_10E3; }\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_10C1; }\n                                                                    \n                                                                    label_10BD:\n                                                                    \n                                                                    label_10E3:\n                                                                        memory[0x0240:0x0260] = 0x20;\n                                                                        memory[0x0280:0x02a0] = memory[0x0240:0x0260];\n                                                                        var0 = 0x0140;\n                                                                        var temp27 = memory[var0:var0 + 0x20] + 0x20;\n                                                                        var1 = temp27;\n                                                                        var temp28;\n                                                                        temp28, memory[memory[0x0240:0x0260] + 0x0280:memory[0x0240:0x0260] + 0x0280 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                                    \n                                                                        if (!temp28) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        var temp29 = memory[memory[0x0240:0x0260] + 0x0280:memory[0x0240:0x0260] + 0x0280 + 0x20];\n                                                                        var temp30 = (temp29 + 0x1f) - temp29 - 0x01 % 0x20 - temp29;\n                                                                        memory[memory[0x0240:0x0260] + 0x0280 + 0x20 + temp29:memory[0x0240:0x0260] + 0x0280 + 0x20 + temp29 + temp30] = msg.data[msg.data.length:msg.data.length + temp30];\n                                                                        var temp31 = memory[memory[0x0240:0x0260] + 0x0280:memory[0x0240:0x0260] + 0x0280 + 0x20];\n                                                                        memory[0x0240:0x0260] = memory[0x0240:0x0260] + ((temp31 + 0x1f) - temp31 - 0x01 % 0x20) + 0x20;\n                                                                        log(memory[0x0280:0x0280 + memory[0x0240:0x0260]], [0x1088616167a98af0412ca38d845eb687be08657e190148cd478b2d225c5d2d9f, msg.sender, msg.data[0x24:0x44]]);\n                                                                        stop();\n                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                } else if (!msg.value) {\n                                                                    memory[0x0140:0x01a0] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x60];\n                                                                \n                                                                    if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x40) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x03;\n                                                                \n                                                                    if (storage[keccak256(memory[0xc0:0x0100])] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x0200:0x0220] = 0x00;\n                                                                \n                                                                    if (!(keccak256(memory[0x0140 + 0x20:0x0140 + 0x20 + memory[0x0140:0x0160]]) ~ keccak256(memory[0x0200 + 0x20:0x0200 + 0x20 + memory[0x0200:0x0220]]))) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x0280:0x02a0] = 0x00;\n                                                                    var0 = keccak256(memory[0x0280 + 0x20:0x0280 + 0x20 + memory[0x0280:0x02a0]]);\n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x06;\n                                                                    var1 = keccak256(memory[0xc0:0x0100]);\n                                                                    var2 = var1;\n                                                                    memory[0xc0:0xe0] = var2;\n                                                                    var3 = keccak256(memory[0xc0:0xe0]);\n                                                                    var4 = 0x02c0;\n                                                                    var temp32 = storage[var3] + 0x20;\n                                                                    var5 = temp32;\n                                                                    var var6 = 0x0120;\n                                                                    memory[var6:var6 + 0x20] = 0x00;\n                                                                    var var7 = 0x03;\n                                                                \n                                                                    if (memory[0x0120:0x0140] * 0x20 > var5) { goto label_0E86; }\n                                                                \n                                                                label_0E8A:\n                                                                    memory[var4 + memory[0x0120:0x0140] * 0x20:var4 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var3 + memory[0x0120:0x0140]];\n                                                                    var temp33 = var6;\n                                                                    var temp34 = memory[temp33:temp33 + 0x20] + 0x01;\n                                                                    memory[temp33:temp33 + 0x20] = temp34;\n                                                                \n                                                                    if (var7 == temp34) { goto label_0EAC; }\n                                                                \n                                                                    if (memory[0x0120:0x0140] * 0x20 <= var5) { goto label_0E8A; }\n                                                                \n                                                                label_0E86:\n                                                                \n                                                                label_0EAC:\n                                                                    memory[0xc0:0xe0] = var1;\n                                                                \n                                                                    if (keccak256(memory[0x02e0:0x02e0 + storage[keccak256(memory[0xc0:0xe0])]]) != var0) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = keccak256(memory[0x0160:0x0160 + memory[0x0140:0x0160]]);\n                                                                    memory[0xc0:0xe0] = 0x08;\n                                                                \n                                                                    if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var0 = 0x0140;\n                                                                    var1 = var0;\n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x06;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                    var2 = keccak256(memory[0xc0:0xe0]);\n                                                                    var temp35 = memory[var1:var1 + 0x20] + 0x20;\n                                                                    var3 = temp35;\n                                                                    var4 = 0x0120;\n                                                                    memory[var4:var4 + 0x20] = 0x00;\n                                                                    var5 = 0x03;\n                                                                \n                                                                    if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0F28; }\n                                                                \n                                                                label_0F2C:\n                                                                    storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                    var temp36 = var4;\n                                                                    var temp37 = memory[temp36:temp36 + 0x20] + 0x01;\n                                                                    memory[temp36:temp36 + 0x20] = temp37;\n                                                                \n                                                                    if (var5 == temp37) { goto label_0F4E; }\n                                                                \n                                                                    if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0F2C; }\n                                                                \n                                                                label_0F28:\n                                                                \n                                                                label_0F4E:\n                                                                    memory[0x0340:0x0360] = 0x20;\n                                                                    memory[0x0380:0x03a0] = memory[0x0340:0x0360];\n                                                                    var0 = 0x0140;\n                                                                    var temp38 = memory[var0:var0 + 0x20] + 0x20;\n                                                                    var1 = temp38;\n                                                                    var temp39;\n                                                                    temp39, memory[memory[0x0340:0x0360] + 0x0380:memory[0x0340:0x0360] + 0x0380 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                                \n                                                                    if (!temp39) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var temp40 = memory[memory[0x0340:0x0360] + 0x0380:memory[0x0340:0x0360] + 0x0380 + 0x20];\n                                                                    var temp41 = (temp40 + 0x1f) - temp40 - 0x01 % 0x20 - temp40;\n                                                                    memory[memory[0x0340:0x0360] + 0x0380 + 0x20 + temp40:memory[0x0340:0x0360] + 0x0380 + 0x20 + temp40 + temp41] = msg.data[msg.data.length:msg.data.length + temp41];\n                                                                    var temp42 = memory[memory[0x0340:0x0360] + 0x0380:memory[0x0340:0x0360] + 0x0380 + 0x20];\n                                                                    memory[0x0340:0x0360] = memory[0x0340:0x0360] + ((temp42 + 0x1f) - temp42 - 0x01 % 0x20) + 0x20;\n                                                                    log(memory[0x0380:0x0380 + memory[0x0340:0x0360]], [0x1088616167a98af0412ca38d845eb687be08657e190148cd478b2d225c5d2d9f, msg.sender, msg.data[0x24:0x44]]);\n                                                                    stop();\n                                                                } else { revert(memory[0x00:0x00]); }\n                                                            } else if (!msg.value) {\n                                                                var0 = msg.data[0x04:0x24];\n                                                            \n                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var0 = msg.data[0x24:0x44];\n                                                            \n                                                                if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                if (!(msg.data[0x04:0x24] ~ msg.sender)) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0xe0:0x0100] = msg.sender;\n                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                var temp43 = keccak256(memory[0xc0:0x0100]);\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = temp43;\n                                                                storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x24:0x44];\n                                                                memory[0x0140:0x0160] = msg.data[0x24:0x44];\n                                                                log(memory[0x0140:0x0160], [0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, msg.sender, msg.data[0x04:0x24]]);\n                                                                stop();\n                                                            } else { revert(memory[0x00:0x00]); }\n                                                        } else if (!msg.value) {\n                                                            var0 = msg.data[0x04:0x24];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x03;\n                                                            memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        \n                                                            if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            if (!(msg.data[0x04:0x24] ~ memory[0x0140:0x0160])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x03;\n                                                            memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0x0100])] == msg.sender;\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0b;\n                                                            var temp44 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = msg.sender;\n                                                            memory[0xc0:0xe0] = temp44;\n                                                            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        \n                                                            if (!(memory[0x0160:0x0180] | memory[0x0180:0x01a0])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x04;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x04:0x24];\n                                                            log(memory[0x00:0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, memory[0x0140:0x0160], msg.data[0x04:0x24], msg.data[0x24:0x44]]);\n                                                            stop();\n                                                        } else { revert(memory[0x00:0x00]); }\n                                                    } else if (!msg.value) {\n                                                        var0 = msg.data[0x04:0x24];\n                                                    \n                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        var0 = msg.data[0x24:0x44];\n                                                    \n                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0140:0x0160] = 0x092863fe;\n                                                        memory[0x0160:0x0180] = msg.data[0x04:0x24];\n                                                        memory[0x0180:0x01a0] = msg.data[0x24:0x44];\n                                                        memory[0x01a0:0x01c0] = msg.data[0x44:0x64];\n                                                        memory[0x01c0:0x01e0] = msg.sender;\n                                                        var0 = memory[0x01c0:0x01e0];\n                                                        var1 = memory[0x01a0:0x01c0];\n                                                        var2 = memory[0x0180:0x01a0];\n                                                        var3 = memory[0x0160:0x0180];\n                                                        var4 = 0x06;\n                                                        // Unhandled termination\n                                                    } else { revert(memory[0x00:0x00]); }\n                                                } else if (!msg.value) {\n                                                    var0 = msg.data[0x04:0x24];\n                                                \n                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                \n                                                    var0 = msg.data[0x24:0x44];\n                                                \n                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                \n                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                    memory[0xc0:0xe0] = 0x0b;\n                                                    var temp54 = keccak256(memory[0xc0:0x0100]);\n                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                    memory[0xc0:0xe0] = temp54;\n                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                    return memory[0x00:0x20];\n                                                } else { revert(memory[0x00:0x00]); }\n                                            } else if (!msg.value) {\n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                            \n                                                if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                            \n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x06;\n                                                var0 = keccak256(memory[0xc0:0x0100]);\n                                                memory[0xc0:0xe0] = var0;\n                                                var1 = keccak256(memory[0xc0:0xe0]);\n                                                var2 = 0x01a0;\n                                                var temp55 = storage[var1] + 0x20;\n                                                var3 = temp55;\n                                                var4 = 0x0120;\n                                                memory[var4:var4 + 0x20] = 0x00;\n                                                var5 = 0x03;\n                                            \n                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_045E; }\n                                            \n                                            label_0462:\n                                                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                var temp56 = var4;\n                                                var temp57 = memory[temp56:temp56 + 0x20] + 0x01;\n                                                memory[temp56:temp56 + 0x20] = temp57;\n                                            \n                                                if (var5 == temp57) { goto label_0484; }\n                                            \n                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0462; }\n                                            \n                                            label_045E:\n                                            \n                                            label_0484:\n                                                var temp58 = memory[0x01a0:0x01c0];\n                                                var temp59 = (temp58 + 0x1f) - temp58 - 0x01 % 0x20 - temp58;\n                                                memory[temp58 + 0x01c0:temp58 + 0x01c0 + temp59] = msg.data[msg.data.length:msg.data.length + temp59];\n                                                memory[0x0180:0x01a0] = 0x20;\n                                                var temp60 = memory[0x01a0:0x01c0] + 0x40;\n                                                return memory[0x0180:0x0180 + (temp60 + 0x1f) - temp60 - 0x01 % 0x20];\n                                            } else { revert(memory[0x00:0x00]); }\n                                        } else if (!msg.value) {\n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                        \n                                            if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x05;\n                                            var0 = keccak256(memory[0xc0:0x0100]);\n                                            memory[0xc0:0xe0] = var0;\n                                            var1 = keccak256(memory[0xc0:0xe0]);\n                                            var2 = 0x01a0;\n                                            var temp61 = storage[var1] + 0x20;\n                                            var3 = temp61;\n                                            var4 = 0x0120;\n                                            memory[var4:var4 + 0x20] = 0x00;\n                                            var5 = 0x03;\n                                        \n                                            if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0377; }\n                                        \n                                        label_037B:\n                                            memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                            var temp62 = var4;\n                                            var temp63 = memory[temp62:temp62 + 0x20] + 0x01;\n                                            memory[temp62:temp62 + 0x20] = temp63;\n                                        \n                                            if (var5 == temp63) { goto label_039D; }\n                                        \n                                            if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_037B; }\n                                        \n                                        label_0377:\n                                        \n                                        label_039D:\n                                            var temp64 = memory[0x01a0:0x01c0];\n                                            var temp65 = (temp64 + 0x1f) - temp64 - 0x01 % 0x20 - temp64;\n                                            memory[temp64 + 0x01c0:temp64 + 0x01c0 + temp65] = msg.data[msg.data.length:msg.data.length + temp65];\n                                            memory[0x0180:0x01a0] = 0x20;\n                                            var temp66 = memory[0x01a0:0x01c0] + 0x40;\n                                            return memory[0x0180:0x0180 + (temp66 + 0x1f) - temp66 - 0x01 % 0x20];\n                                        } else { revert(memory[0x00:0x00]); }\n                                    } else if (!msg.value) {\n                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                        memory[0xc0:0xe0] = 0x03;\n                                    \n                                        if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                        return memory[0x00:0x20];\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                    memory[0xc0:0xe0] = 0x03;\n                                \n                                    if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                \n                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                    memory[0xc0:0xe0] = 0x04;\n                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                    return memory[0x00:0x20];\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                var0 = msg.data[0x04:0x24];\n                            \n                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                            \n                                if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                memory[0xc0:0xe0] = 0x0a;\n                            \n                                if (msg.data[0x24:0x44] >= storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                memory[0xc0:0xe0] = 0x09;\n                                var temp67 = keccak256(memory[0xc0:0x0100]);\n                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                memory[0xc0:0xe0] = temp67;\n                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            if (msg.data[0x04:0x24] >= storage[0x0f]) { revert(memory[0x00:0x00]); }\n                        \n                            memory[0x00:0x20] = msg.data[0x04:0x24];\n                            return memory[0x00:0x20];\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                        memory[0xc0:0xe0] = 0x03;\n                        memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                    \n                        if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                    \n                        memory[0x00:0x20] = memory[0x0140:0x0160];\n                        return memory[0x00:0x20];\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                    memory[0xc0:0xe0] = 0x0a;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                memory[0xc0:0xe0] = 0x0c;\n                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                return memory[0x00:0x20];\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x00:0x20] = storage[0x0f];\n            return memory[0x00:0x20];\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }\n    \n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] != 0x18160ddd) {\n            if (memory[0x00:0x20] != 0xf1753550) {\n                if (memory[0x00:0x20] != 0x70a08231) {\n                    if (memory[0x00:0x20] != 0x6352211e) {\n                        if (memory[0x00:0x20] != 0x4f6ccce7) {\n                            if (memory[0x00:0x20] != 0x2f745c59) {\n                                if (memory[0x00:0x20] != 0x081812fc) {\n                                    if (memory[0x00:0x20] != 0x3bd18a3b) {\n                                        if (memory[0x00:0x20] != 0xb77cfd0d) {\n                                            if (memory[0x00:0x20] != 0x8499ecd6) {\n                                                if (memory[0x00:0x20] != 0xe985e9c5) {\n                                                    if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0x01c0:0x01e0] = memory[0x01a0:0x01c0] == memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x04;\n                                                        memory[0x01e0:0x0200] = memory[0x0140:0x0160] == storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        var temp53 = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = temp53;\n                                                        memory[0x0200:0x0220] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0x00:0x20] = memory[0x01c0:0x01e0] | memory[0x01e0:0x0200] | memory[0x0200:0x0220];\n                                                        var-3 = memory[0x00:0x20];\n                                                        // Error: Could not resolve jump destination!\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        var temp49 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = temp49;\n                                                        var temp50 = memory[0x0160:0x0180];\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x09;\n                                                        var temp51 = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0a;\n                                                        memory[0xe0:0x0100] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xc0:0xe0] = temp51;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = temp50;\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0a;\n                                                        var-3 = keccak256(memory[0xc0:0x0100]);\n                                                        var temp52 = storage[var-3];\n                                                        var-2 = temp52;\n                                                        var-1 = 0x01;\n                                                    \n                                                        if (var-2 + var-1 < var-2) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        storage[var-3] = var-2 + var-1;\n                                                        // Error: Could not resolve jump destination!\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        var temp48 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])] != temp48) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0a;\n                                                        var-3 = keccak256(memory[0xc0:0x0100]);\n                                                        var-2 = storage[var-3];\n                                                        var-1 = 0x01;\n                                                    \n                                                        if (var-2 < var-1) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        storage[var-3] = var-2 - var-1;\n                                                        // Error: Could not resolve jump destination!\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        var temp47 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])] != temp47) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x04;\n                                                    \n                                                        if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) {\n                                                            // Error: Could not resolve jump destination!\n                                                        } else {\n                                                            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                            memory[0xc0:0xe0] = 0x04;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                            // Error: Could not resolve jump destination!\n                                                        }\n                                                    } else if (0x00) {\n                                                        // Error: StackRead before write???\n                                                        var var-4;\n                                                        // Error: StackRead before write???\n                                                        var var-2;\n                                                        // Error: StackRead before write???\n                                                        var var-3;\n                                                        // Error: StackRead before write???\n                                                        var var-1;\n                                                        // Error: StackRead before write???\n                                                        var var-5;\n                                                        memory[0x01c0:0x01e0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0x0180:0x01a0] = var-4;\n                                                        memory[0x01a0:0x01c0] = var-5;\n                                                        var-5 = memory[0x0140:0x0160];\n                                                        var-4 = memory[0x0160:0x0180];\n                                                        var-3 = memory[0x0180:0x01a0];\n                                                        var-2 = memory[0x01a0:0x01c0];\n                                                        var-1 = memory[0x01c0:0x01e0];\n                                                        memory[0x0200:0x0220] = 0x4cdc9549;\n                                                        memory[0x0220:0x0240] = memory[0x01a0:0x01c0];\n                                                        memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n                                                        var0 = memory[0x0240:0x0260];\n                                                        var1 = memory[0x0220:0x0240];\n                                                        var2 = 0x06;\n                                                        // Unhandled termination\n                                                    } else if (memory[0x00:0x20] != 0x23b872dd) {\n                                                        if (memory[0x00:0x20] == 0x42842e0e) {\n                                                            memory[0x0580:0x05a0] = 0x00;\n                                                            var0 = 0x0580;\n                                                            var temp45 = memory[var0:var0 + 0x20] + 0x20;\n                                                            var1 = temp45;\n                                                            var temp46;\n                                                            temp46, memory[0x0140:0x0140 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                        \n                                                            if (temp46) { goto label_0AA5; }\n                                                            else { revert(memory[0x00:0x00]); }\n                                                        } else if (memory[0x00:0x20] == 0xb88d4fde) {\n                                                            memory[0x0140:0x0560] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0420];\n                                                        \n                                                            if (msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x20] > 0x0400) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0140:0x0580] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0440];\n                                                            goto label_0AA5;\n                                                        } else if (0x00) {\n                                                        label_0AA5:\n                                                        \n                                                            if (msg.value) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            var0 = msg.data[0x04:0x24];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            var0 = msg.data[0x24:0x44];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x05c0:0x05e0] = 0x0140;\n                                                            var0 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                            memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                        \n                                                            if (memory[0x05c0:0x05e0] >= 0x05c0) {\n                                                            label_0AFE:\n                                                                memory[0x05e0:0x0600] = 0x092863fe;\n                                                                memory[0x0600:0x0620] = msg.data[0x04:0x24];\n                                                                memory[0x0620:0x0640] = msg.data[0x24:0x44];\n                                                                memory[0x0640:0x0660] = msg.data[0x44:0x64];\n                                                                memory[0x0660:0x0680] = msg.sender;\n                                                                var1 = memory[0x0660:0x0680];\n                                                                var2 = memory[0x0640:0x0660];\n                                                                var3 = memory[0x0620:0x0640];\n                                                                var4 = memory[0x0600:0x0620];\n                                                                var5 = 0x06;\n                                                                // Unhandled termination\n                                                            } else {\n                                                            label_0AFA:\n                                                                var1 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                                memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                            \n                                                                if (memory[0x05c0:0x05e0] >= 0x05c0) { goto label_0AFE; }\n                                                                else { goto label_0AFA; }\n                                                            }\n                                                        } else if (memory[0x00:0x20] != 0x095ea7b3) {\n                                                            if (memory[0x00:0x20] != 0xa22cb465) {\n                                                                if (memory[0x00:0x20] != 0x01117b0d) {\n                                                                    if (memory[0x00:0x20] != 0x22733337) {\n                                                                        if (memory[0x00:0x20] != 0x98cd6153) {\n                                                                            if (memory[0x00:0x20] != 0xbc04f0af) {\n                                                                                if (memory[0x00:0x20] != 0x06fdde03) {\n                                                                                    if (memory[0x00:0x20] != 0x95d89b41) {\n                                                                                        if (memory[0x00:0x20] != 0x3c130d90) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        var var0 = 0x02;\n                                                                                        memory[0xc0:0xe0] = var0;\n                                                                                        var var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                        var var2 = 0x0180;\n                                                                                        var temp0 = storage[var1] + 0x20;\n                                                                                        var var3 = temp0;\n                                                                                        var var4 = 0x0120;\n                                                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                                                        var var5 = 0x03;\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_1678; }\n                                                                                    \n                                                                                    label_167C:\n                                                                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                        var temp1 = var4;\n                                                                                        var temp2 = memory[temp1:temp1 + 0x20] + 0x01;\n                                                                                        memory[temp1:temp1 + 0x20] = temp2;\n                                                                                    \n                                                                                        if (var5 == temp2) { goto label_169E; }\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_167C; }\n                                                                                    \n                                                                                    label_1678:\n                                                                                    \n                                                                                    label_169E:\n                                                                                        var temp3 = memory[0x0180:0x01a0];\n                                                                                        var temp4 = (temp3 + 0x1f) - temp3 - 0x01 % 0x20 - temp3;\n                                                                                        memory[temp3 + 0x01a0:temp3 + 0x01a0 + temp4] = msg.data[msg.data.length:msg.data.length + temp4];\n                                                                                        memory[0x0160:0x0180] = 0x20;\n                                                                                        var temp5 = memory[0x0180:0x01a0] + 0x40;\n                                                                                        return memory[0x0160:0x0160 + (temp5 + 0x1f) - temp5 - 0x01 % 0x20];\n                                                                                    } else if (!msg.value) {\n                                                                                        var0 = 0x01;\n                                                                                        memory[0xc0:0xe0] = var0;\n                                                                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                        var2 = 0x0180;\n                                                                                        var temp6 = storage[var1] + 0x20;\n                                                                                        var3 = temp6;\n                                                                                        var4 = 0x0120;\n                                                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                                                        var5 = 0x02;\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_15C4; }\n                                                                                    \n                                                                                    label_15C8:\n                                                                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                        var temp7 = var4;\n                                                                                        var temp8 = memory[temp7:temp7 + 0x20] + 0x01;\n                                                                                        memory[temp7:temp7 + 0x20] = temp8;\n                                                                                    \n                                                                                        if (var5 == temp8) { goto label_15EA; }\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_15C8; }\n                                                                                    \n                                                                                    label_15C4:\n                                                                                    \n                                                                                    label_15EA:\n                                                                                        var temp9 = memory[0x0180:0x01a0];\n                                                                                        var temp10 = (temp9 + 0x1f) - temp9 - 0x01 % 0x20 - temp9;\n                                                                                        memory[temp9 + 0x01a0:temp9 + 0x01a0 + temp10] = msg.data[msg.data.length:msg.data.length + temp10];\n                                                                                        memory[0x0160:0x0180] = 0x20;\n                                                                                        var temp11 = memory[0x0180:0x01a0] + 0x40;\n                                                                                        return memory[0x0160:0x0160 + (temp11 + 0x1f) - temp11 - 0x01 % 0x20];\n                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                } else if (!msg.value) {\n                                                                                    var0 = 0x00;\n                                                                                    memory[0xc0:0xe0] = var0;\n                                                                                    var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                    var2 = 0x0180;\n                                                                                    var temp12 = storage[var1] + 0x20;\n                                                                                    var3 = temp12;\n                                                                                    var4 = 0x0120;\n                                                                                    memory[var4:var4 + 0x20] = 0x00;\n                                                                                    var5 = 0x03;\n                                                                                \n                                                                                    if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_1510; }\n                                                                                \n                                                                                label_1514:\n                                                                                    memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                    var temp13 = var4;\n                                                                                    var temp14 = memory[temp13:temp13 + 0x20] + 0x01;\n                                                                                    memory[temp13:temp13 + 0x20] = temp14;\n                                                                                \n                                                                                    if (var5 == temp14) { goto label_1536; }\n                                                                                \n                                                                                    if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_1514; }\n                                                                                \n                                                                                label_1510:\n                                                                                \n                                                                                label_1536:\n                                                                                    var temp15 = memory[0x0180:0x01a0];\n                                                                                    var temp16 = (temp15 + 0x1f) - temp15 - 0x01 % 0x20 - temp15;\n                                                                                    memory[temp15 + 0x01a0:temp15 + 0x01a0 + temp16] = msg.data[msg.data.length:msg.data.length + temp16];\n                                                                                    memory[0x0160:0x0180] = 0x20;\n                                                                                    var temp17 = memory[0x0180:0x01a0] + 0x40;\n                                                                                    return memory[0x0160:0x0160 + (temp17 + 0x1f) - temp17 - 0x01 % 0x20];\n                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                            } else if (!msg.value) {\n                                                                                var0 = msg.data[0x04:0x24];\n                                                                            \n                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (msg.sender != 0x64d56f087d87cdaeac8119c69c48d0d440d560a7) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (msg.data[0x24:0x44] < 0x14) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                var0 = msg.data[0x24:0x44];\n                                                                                var1 = 0x14;\n                                                                                var2 = var1;\n                                                                            \n                                                                                if (!var2) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0140:0x0160] = var0 / var2;\n                                                                                var0 = msg.data[0x24:0x44];\n                                                                                var1 = memory[0x0140:0x0160];\n                                                                            \n                                                                                if (var0 < var1) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0160:0x0180] = var0 - var1;\n                                                                            \n                                                                                if (!address(0x64d56f087d87cdaeac8119c69c48d0d440d560a7).code.length) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (!(address(this) ~ 0x64d56f087d87cdaeac8119c69c48d0d440d560a7)) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x01a0:0x01c0] = 0xa9059cbb;\n                                                                                memory[0x01c0:0x01e0] = storage[0x0d];\n                                                                                memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n                                                                                var temp18;\n                                                                                temp18, memory[0x0240:0x0260] = address(0x64d56f087d87cdaeac8119c69c48d0d440d560a7).call.gas(msg.gas)(memory[0x01bc:0x0200]);\n                                                                            \n                                                                                if (!temp18) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0180:0x01a0] = memory[0x0240:0x0260];\n                                                                            \n                                                                                if (!address(0x64d56f087d87cdaeac8119c69c48d0d440d560a7).code.length) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (!(address(this) ~ 0x64d56f087d87cdaeac8119c69c48d0d440d560a7)) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0260:0x0280] = 0x42966c68;\n                                                                                memory[0x0280:0x02a0] = memory[0x0140:0x0160];\n                                                                                var temp19;\n                                                                                temp19, memory[0x00:0x00] = address(0x64d56f087d87cdaeac8119c69c48d0d440d560a7).call.gas(msg.gas)(memory[0x027c:0x02a0]);\n                                                                            \n                                                                                if (!temp19) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (!memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                var temp20 = memory[0x0160:0x0180];\n                                                                                memory[0xe0:0x0100] = storage[0x0e];\n                                                                                memory[0xc0:0xe0] = 0x07;\n                                                                                storage[keccak256(memory[0xc0:0x0100])] = temp20;\n                                                                                memory[0x02e0:0x0300] = 0x0140;\n                                                                                var0 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                            \n                                                                                if (memory[0x02e0:0x0300] >= 0x02e0) {\n                                                                                label_1425:\n                                                                                    memory[0x0300:0x0320] = 0xff5ce378;\n                                                                                    memory[0x0320:0x0340] = msg.data[0x04:0x24];\n                                                                                    memory[0x0340:0x0360] = storage[0x0e];\n                                                                                    var1 = memory[0x0340:0x0360];\n                                                                                    var2 = memory[0x0320:0x0340];\n                                                                                    var3 = 0x06;\n                                                                                    // Unhandled termination\n                                                                                } else {\n                                                                                label_1421:\n                                                                                    var1 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                    memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                                \n                                                                                    if (memory[0x02e0:0x0300] >= 0x02e0) { goto label_1425; }\n                                                                                    else { goto label_1421; }\n                                                                                }\n                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                        } else if (!msg.value) {\n                                                                            memory[0x0140:0x01a0] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x60];\n                                                                        \n                                                                            if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x40) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            if (msg.sender != storage[0x0d]) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            var0 = 0x0140;\n                                                                            var1 = var0;\n                                                                            memory[0xc0:0xe0] = 0x02;\n                                                                            var2 = keccak256(memory[0xc0:0xe0]);\n                                                                            var temp21 = memory[var1:var1 + 0x20] + 0x20;\n                                                                            var3 = temp21;\n                                                                            var4 = 0x0120;\n                                                                            memory[var4:var4 + 0x20] = 0x00;\n                                                                            var5 = 0x03;\n                                                                        \n                                                                            if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_120E; }\n                                                                        \n                                                                        label_1212:\n                                                                            storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                            var temp22 = var4;\n                                                                            var temp23 = memory[temp22:temp22 + 0x20] + 0x01;\n                                                                            memory[temp22:temp22 + 0x20] = temp23;\n                                                                        \n                                                                            if (var5 == temp23) { stop(); }\n                                                                        \n                                                                            if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_1212; }\n                                                                        \n                                                                        label_120E:\n                                                                            stop();\n                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                    } else if (!msg.value) {\n                                                                        memory[0x0140:0x01a0] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x60];\n                                                                    \n                                                                        if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x40) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x03;\n                                                                    \n                                                                        if (storage[keccak256(memory[0xc0:0x0100])] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0x0200:0x0220] = 0x00;\n                                                                    \n                                                                        if (!(keccak256(memory[0x0140 + 0x20:0x0140 + 0x20 + memory[0x0140:0x0160]]) ~ keccak256(memory[0x0200 + 0x20:0x0200 + 0x20 + memory[0x0200:0x0220]]))) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        var0 = 0x0140;\n                                                                        var1 = var0;\n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x06;\n                                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                        var2 = keccak256(memory[0xc0:0xe0]);\n                                                                        var temp24 = memory[var1:var1 + 0x20] + 0x20;\n                                                                        var3 = temp24;\n                                                                        var4 = 0x0120;\n                                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                                        var5 = 0x03;\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_10BD; }\n                                                                    \n                                                                    label_10C1:\n                                                                        storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                        var temp25 = var4;\n                                                                        var temp26 = memory[temp25:temp25 + 0x20] + 0x01;\n                                                                        memory[temp25:temp25 + 0x20] = temp26;\n                                                                    \n                                                                        if (var5 == temp26) { goto label_10E3; }\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_10C1; }\n                                                                    \n                                                                    label_10BD:\n                                                                    \n                                                                    label_10E3:\n                                                                        memory[0x0240:0x0260] = 0x20;\n                                                                        memory[0x0280:0x02a0] = memory[0x0240:0x0260];\n                                                                        var0 = 0x0140;\n                                                                        var temp27 = memory[var0:var0 + 0x20] + 0x20;\n                                                                        var1 = temp27;\n                                                                        var temp28;\n                                                                        temp28, memory[memory[0x0240:0x0260] + 0x0280:memory[0x0240:0x0260] + 0x0280 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                                    \n                                                                        if (!temp28) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        var temp29 = memory[memory[0x0240:0x0260] + 0x0280:memory[0x0240:0x0260] + 0x0280 + 0x20];\n                                                                        var temp30 = (temp29 + 0x1f) - temp29 - 0x01 % 0x20 - temp29;\n                                                                        memory[memory[0x0240:0x0260] + 0x0280 + 0x20 + temp29:memory[0x0240:0x0260] + 0x0280 + 0x20 + temp29 + temp30] = msg.data[msg.data.length:msg.data.length + temp30];\n                                                                        var temp31 = memory[memory[0x0240:0x0260] + 0x0280:memory[0x0240:0x0260] + 0x0280 + 0x20];\n                                                                        memory[0x0240:0x0260] = memory[0x0240:0x0260] + ((temp31 + 0x1f) - temp31 - 0x01 % 0x20) + 0x20;\n                                                                        log(memory[0x0280:0x0280 + memory[0x0240:0x0260]], [0x1088616167a98af0412ca38d845eb687be08657e190148cd478b2d225c5d2d9f, msg.sender, msg.data[0x24:0x44]]);\n                                                                        stop();\n                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                } else if (!msg.value) {\n                                                                    memory[0x0140:0x01a0] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x60];\n                                                                \n                                                                    if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x40) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x03;\n                                                                \n                                                                    if (storage[keccak256(memory[0xc0:0x0100])] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x0200:0x0220] = 0x00;\n                                                                \n                                                                    if (!(keccak256(memory[0x0140 + 0x20:0x0140 + 0x20 + memory[0x0140:0x0160]]) ~ keccak256(memory[0x0200 + 0x20:0x0200 + 0x20 + memory[0x0200:0x0220]]))) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x0280:0x02a0] = 0x00;\n                                                                    var0 = keccak256(memory[0x0280 + 0x20:0x0280 + 0x20 + memory[0x0280:0x02a0]]);\n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x06;\n                                                                    var1 = keccak256(memory[0xc0:0x0100]);\n                                                                    var2 = var1;\n                                                                    memory[0xc0:0xe0] = var2;\n                                                                    var3 = keccak256(memory[0xc0:0xe0]);\n                                                                    var4 = 0x02c0;\n                                                                    var temp32 = storage[var3] + 0x20;\n                                                                    var5 = temp32;\n                                                                    var var6 = 0x0120;\n                                                                    memory[var6:var6 + 0x20] = 0x00;\n                                                                    var var7 = 0x03;\n                                                                \n                                                                    if (memory[0x0120:0x0140] * 0x20 > var5) { goto label_0E86; }\n                                                                \n                                                                label_0E8A:\n                                                                    memory[var4 + memory[0x0120:0x0140] * 0x20:var4 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var3 + memory[0x0120:0x0140]];\n                                                                    var temp33 = var6;\n                                                                    var temp34 = memory[temp33:temp33 + 0x20] + 0x01;\n                                                                    memory[temp33:temp33 + 0x20] = temp34;\n                                                                \n                                                                    if (var7 == temp34) { goto label_0EAC; }\n                                                                \n                                                                    if (memory[0x0120:0x0140] * 0x20 <= var5) { goto label_0E8A; }\n                                                                \n                                                                label_0E86:\n                                                                \n                                                                label_0EAC:\n                                                                    memory[0xc0:0xe0] = var1;\n                                                                \n                                                                    if (keccak256(memory[0x02e0:0x02e0 + storage[keccak256(memory[0xc0:0xe0])]]) != var0) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = keccak256(memory[0x0160:0x0160 + memory[0x0140:0x0160]]);\n                                                                    memory[0xc0:0xe0] = 0x08;\n                                                                \n                                                                    if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var0 = 0x0140;\n                                                                    var1 = var0;\n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x06;\n                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                    var2 = keccak256(memory[0xc0:0xe0]);\n                                                                    var temp35 = memory[var1:var1 + 0x20] + 0x20;\n                                                                    var3 = temp35;\n                                                                    var4 = 0x0120;\n                                                                    memory[var4:var4 + 0x20] = 0x00;\n                                                                    var5 = 0x03;\n                                                                \n                                                                    if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0F28; }\n                                                                \n                                                                label_0F2C:\n                                                                    storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                    var temp36 = var4;\n                                                                    var temp37 = memory[temp36:temp36 + 0x20] + 0x01;\n                                                                    memory[temp36:temp36 + 0x20] = temp37;\n                                                                \n                                                                    if (var5 == temp37) { goto label_0F4E; }\n                                                                \n                                                                    if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0F2C; }\n                                                                \n                                                                label_0F28:\n                                                                \n                                                                label_0F4E:\n                                                                    memory[0x0340:0x0360] = 0x20;\n                                                                    memory[0x0380:0x03a0] = memory[0x0340:0x0360];\n                                                                    var0 = 0x0140;\n                                                                    var temp38 = memory[var0:var0 + 0x20] + 0x20;\n                                                                    var1 = temp38;\n                                                                    var temp39;\n                                                                    temp39, memory[memory[0x0340:0x0360] + 0x0380:memory[0x0340:0x0360] + 0x0380 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                                \n                                                                    if (!temp39) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var temp40 = memory[memory[0x0340:0x0360] + 0x0380:memory[0x0340:0x0360] + 0x0380 + 0x20];\n                                                                    var temp41 = (temp40 + 0x1f) - temp40 - 0x01 % 0x20 - temp40;\n                                                                    memory[memory[0x0340:0x0360] + 0x0380 + 0x20 + temp40:memory[0x0340:0x0360] + 0x0380 + 0x20 + temp40 + temp41] = msg.data[msg.data.length:msg.data.length + temp41];\n                                                                    var temp42 = memory[memory[0x0340:0x0360] + 0x0380:memory[0x0340:0x0360] + 0x0380 + 0x20];\n                                                                    memory[0x0340:0x0360] = memory[0x0340:0x0360] + ((temp42 + 0x1f) - temp42 - 0x01 % 0x20) + 0x20;\n                                                                    log(memory[0x0380:0x0380 + memory[0x0340:0x0360]], [0x1088616167a98af0412ca38d845eb687be08657e190148cd478b2d225c5d2d9f, msg.sender, msg.data[0x24:0x44]]);\n                                                                    stop();\n                                                                } else { revert(memory[0x00:0x00]); }\n                                                            } else if (!msg.value) {\n                                                                var0 = msg.data[0x04:0x24];\n                                                            \n                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var0 = msg.data[0x24:0x44];\n                                                            \n                                                                if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                if (!(msg.data[0x04:0x24] ~ msg.sender)) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0xe0:0x0100] = msg.sender;\n                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                var temp43 = keccak256(memory[0xc0:0x0100]);\n                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                memory[0xc0:0xe0] = temp43;\n                                                                storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x24:0x44];\n                                                                memory[0x0140:0x0160] = msg.data[0x24:0x44];\n                                                                log(memory[0x0140:0x0160], [0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, msg.sender, msg.data[0x04:0x24]]);\n                                                                stop();\n                                                            } else { revert(memory[0x00:0x00]); }\n                                                        } else if (!msg.value) {\n                                                            var0 = msg.data[0x04:0x24];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x03;\n                                                            memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        \n                                                            if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            if (!(msg.data[0x04:0x24] ~ memory[0x0140:0x0160])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x03;\n                                                            memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0x0100])] == msg.sender;\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0b;\n                                                            var temp44 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = msg.sender;\n                                                            memory[0xc0:0xe0] = temp44;\n                                                            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        \n                                                            if (!(memory[0x0160:0x0180] | memory[0x0180:0x01a0])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x04;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x04:0x24];\n                                                            log(memory[0x00:0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, memory[0x0140:0x0160], msg.data[0x04:0x24], msg.data[0x24:0x44]]);\n                                                            stop();\n                                                        } else { revert(memory[0x00:0x00]); }\n                                                    } else if (!msg.value) {\n                                                        var0 = msg.data[0x04:0x24];\n                                                    \n                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        var0 = msg.data[0x24:0x44];\n                                                    \n                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0140:0x0160] = 0x092863fe;\n                                                        memory[0x0160:0x0180] = msg.data[0x04:0x24];\n                                                        memory[0x0180:0x01a0] = msg.data[0x24:0x44];\n                                                        memory[0x01a0:0x01c0] = msg.data[0x44:0x64];\n                                                        memory[0x01c0:0x01e0] = msg.sender;\n                                                        var0 = memory[0x01c0:0x01e0];\n                                                        var1 = memory[0x01a0:0x01c0];\n                                                        var2 = memory[0x0180:0x01a0];\n                                                        var3 = memory[0x0160:0x0180];\n                                                        var4 = 0x06;\n                                                        // Unhandled termination\n                                                    } else { revert(memory[0x00:0x00]); }\n                                                } else if (!msg.value) {\n                                                    var0 = msg.data[0x04:0x24];\n                                                \n                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                \n                                                    var0 = msg.data[0x24:0x44];\n                                                \n                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                \n                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                    memory[0xc0:0xe0] = 0x0b;\n                                                    var temp54 = keccak256(memory[0xc0:0x0100]);\n                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                    memory[0xc0:0xe0] = temp54;\n                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                    return memory[0x00:0x20];\n                                                } else { revert(memory[0x00:0x00]); }\n                                            } else if (!msg.value) {\n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                            \n                                                if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                            \n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x06;\n                                                var0 = keccak256(memory[0xc0:0x0100]);\n                                                memory[0xc0:0xe0] = var0;\n                                                var1 = keccak256(memory[0xc0:0xe0]);\n                                                var2 = 0x01a0;\n                                                var temp55 = storage[var1] + 0x20;\n                                                var3 = temp55;\n                                                var4 = 0x0120;\n                                                memory[var4:var4 + 0x20] = 0x00;\n                                                var5 = 0x03;\n                                            \n                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_045E; }\n                                            \n                                            label_0462:\n                                                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                var temp56 = var4;\n                                                var temp57 = memory[temp56:temp56 + 0x20] + 0x01;\n                                                memory[temp56:temp56 + 0x20] = temp57;\n                                            \n                                                if (var5 == temp57) { goto label_0484; }\n                                            \n                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0462; }\n                                            \n                                            label_045E:\n                                            \n                                            label_0484:\n                                                var temp58 = memory[0x01a0:0x01c0];\n                                                var temp59 = (temp58 + 0x1f) - temp58 - 0x01 % 0x20 - temp58;\n                                                memory[temp58 + 0x01c0:temp58 + 0x01c0 + temp59] = msg.data[msg.data.length:msg.data.length + temp59];\n                                                memory[0x0180:0x01a0] = 0x20;\n                                                var temp60 = memory[0x01a0:0x01c0] + 0x40;\n                                                return memory[0x0180:0x0180 + (temp60 + 0x1f) - temp60 - 0x01 % 0x20];\n                                            } else { revert(memory[0x00:0x00]); }\n                                        } else if (!msg.value) {\n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                        \n                                            if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x05;\n                                            var0 = keccak256(memory[0xc0:0x0100]);\n                                            memory[0xc0:0xe0] = var0;\n                                            var1 = keccak256(memory[0xc0:0xe0]);\n                                            var2 = 0x01a0;\n                                            var temp61 = storage[var1] + 0x20;\n                                            var3 = temp61;\n                                            var4 = 0x0120;\n                                            memory[var4:var4 + 0x20] = 0x00;\n                                            var5 = 0x03;\n                                        \n                                            if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0377; }\n                                        \n                                        label_037B:\n                                            memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                            var temp62 = var4;\n                                            var temp63 = memory[temp62:temp62 + 0x20] + 0x01;\n                                            memory[temp62:temp62 + 0x20] = temp63;\n                                        \n                                            if (var5 == temp63) { goto label_039D; }\n                                        \n                                            if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_037B; }\n                                        \n                                        label_0377:\n                                        \n                                        label_039D:\n                                            var temp64 = memory[0x01a0:0x01c0];\n                                            var temp65 = (temp64 + 0x1f) - temp64 - 0x01 % 0x20 - temp64;\n                                            memory[temp64 + 0x01c0:temp64 + 0x01c0 + temp65] = msg.data[msg.data.length:msg.data.length + temp65];\n                                            memory[0x0180:0x01a0] = 0x20;\n                                            var temp66 = memory[0x01a0:0x01c0] + 0x40;\n                                            return memory[0x0180:0x0180 + (temp66 + 0x1f) - temp66 - 0x01 % 0x20];\n                                        } else { revert(memory[0x00:0x00]); }\n                                    } else if (!msg.value) {\n                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                        memory[0xc0:0xe0] = 0x03;\n                                    \n                                        if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                        return memory[0x00:0x20];\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                    memory[0xc0:0xe0] = 0x03;\n                                \n                                    if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                \n                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                    memory[0xc0:0xe0] = 0x04;\n                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                    return memory[0x00:0x20];\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                var0 = msg.data[0x04:0x24];\n                            \n                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                            \n                                if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                memory[0xc0:0xe0] = 0x0a;\n                            \n                                if (msg.data[0x24:0x44] >= storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                memory[0xc0:0xe0] = 0x09;\n                                var temp67 = keccak256(memory[0xc0:0x0100]);\n                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                memory[0xc0:0xe0] = temp67;\n                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            if (msg.data[0x04:0x24] >= storage[0x0f]) { revert(memory[0x00:0x00]); }\n                        \n                            memory[0x00:0x20] = msg.data[0x04:0x24];\n                            return memory[0x00:0x20];\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                        memory[0xc0:0xe0] = 0x03;\n                        memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                    \n                        if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                    \n                        memory[0x00:0x20] = memory[0x0140:0x0160];\n                        return memory[0x00:0x20];\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                    memory[0xc0:0xe0] = 0x0a;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                memory[0xc0:0xe0] = 0x0c;\n                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                return memory[0x00:0x20];\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x00:0x20] = storage[0x0f];\n            return memory[0x00:0x20];\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
	"status": "1",
	"time_cost": 25.54678177833557,
	"usage": {
		"completion_tokens": 347,
		"prompt_tokens": 14766,
		"total_tokens": 15113
	}
}