{
	"address": "0xb83c1fd4b74d3e4e85cf0331443e5a167ededda7",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Below is the Solidity code for the given decompiled code:\n\n```solidity\npragma solidity ^0.5.0;\n\ncontract MyContract {\n    uint256 private stor_0;\n    uint256 private _active;\n    uint256 private _price;\n    mapping (address => uint256) private _used;\n    address private owner = 0x67dc443aecece8353fe158e5f562873808f12c11;\n    IERC20 private token = IERC20(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8);\n\n    modifier onlyOwner {\n        require(msg.sender == owner, \"Only owner can call this function.\");\n        _;\n    }\n\n    function settings(uint256 varg0, uint256 varg1) public onlyOwner { \n        if (varg0 > 0) {\n            stor_0 = varg0; \n        }\n        _active = varg1; \n    }\n\n    function active() public view returns (uint256) { \n        return _active; \n    }\n\n    function withdrawAdmin() public onlyOwner { \n        uint256 balance = token.balanceOf(address(this));\n        require(balance > 0);\n        token.transfer(owner, balance);\n        if (address(this).balance > 0) {\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n\n    function price(uint256 varg0) public onlyOwner { \n        _price = varg0; \n    }\n\n    function contractbalance() public view returns (uint256) { \n        return token.balanceOf(address(this)); \n    }\n\n    function price() public view returns (uint256) { \n        return _price; \n    }\n\n    function used(address varg0) public view returns (uint256) { \n        return _used[varg0]; \n    }\n\n    function () external payable { \n        require(_active > 0);\n        require(_used[msg.sender] != _active);\n        require(msg.value >= _price);\n        uint256 balance = token.balanceOf(address(this));\n        require(balance >= stor_0);\n        token.transfer(msg.sender, stor_0);\n        _used[msg.sender] = _active;\n    }\n}\n\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function balanceOf(address account) external view returns (uint256);\n}\n```\n\nPlease note that the original decompiled code appears to be interacting with an ERC20 token at address `0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8`. I've assumed `balanceOf` and `transfer` to be standard ERC20 functions. Also, please replace the `IERC20` interface with the actual token contract interface if it has more functions or different function signatures.",
				"role": "assistant"
			}
		}
	],
	"created": 1701467463,
	"id": "chatcmpl-8R5hXlqkNstRgeSeamIPeYLz2JhaL",
	"input_format": "DecompiledCode",
	"ir": "// Decompiled at www.contract-library.com\n// 2021.08.22 08:24 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 stor_0; // STORAGE[0x0]\nuint256 _active; // STORAGE[0x1]\nuint256 _price; // STORAGE[0x2]\nmapping (uint256 => [uint256]) _used; // STORAGE[0x3]\n\n\nfunction settings(uint256 varg0, uint256 varg1) public nonPayable { \n    v0 = v1 = 0;\n    require(msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11);\n    if (msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11) {\n        if (varg0 > 0) {\n            stor_0 = varg0;\n        }\n        _active = varg1;\n        v0 = v2 = 1;\n    }\n    return v0;\n}\n\nfunction active() public nonPayable { \n    return _active;\n}\n\nfunction withdrawAdmin() public nonPayable { \n    require(msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11);\n    require(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.code.size);\n    v0, v1 = 0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.balanceOf(address(this)).gas(msg.gas);\n    require(v0); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    require(v1 != 0);\n    if (msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11) {\n        require(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.code.size);\n        v2, v3 = 0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.transfer(msg.sender, v1).gas(msg.gas);\n        require(v2); // checks call status, propagates error data on error\n        require(RETURNDATASIZE() >= 32);\n        require(v3);\n    }\n    if ((address(this)).balance > 0) {\n        v4 = msg.sender.call().value((address(this)).balance).gas(!(address(this)).balance * 2300);\n        require(v4); // checks call status, propagates error data on error\n    }\n    return 1;\n}\n\nfunction price(uint256 varg0) public nonPayable { \n    v0 = v1 = 0;\n    require(msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11);\n    if (msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11) {\n        _price = varg0;\n        v0 = 1;\n    }\n    return v0;\n}\n\nfunction contractbalance() public nonPayable { \n    require(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.code.size);\n    v0, v1 = 0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.balanceOf(address(this)).gas(msg.gas);\n    require(v0); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    return v1;\n}\n\nfunction price() public nonPayable { \n    return _price;\n}\n\nfunction used(address varg0) public nonPayable { \n    return _used[varg0];\n}\n\nfunction fallback() public payable { \n    require(_active > 0);\n    require(_used[msg.sender] != _active);\n    require(msg.value >= _price);\n    require(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.code.size);\n    v0, v1 = 0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.balanceOf(address(this)).gas(msg.gas);\n    require(v0); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    require(v1 != 0);\n    require(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.code.size);\n    v2, v3 = 0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.transfer(msg.sender, stor_0).gas(msg.gas);\n    require(v2); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    require(v3);\n    _used[msg.sender] = _active;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (0x1fe45e1 == function_selector) {\n            settings(uint256,uint256);\n        } else if (0x2fb0c5e == function_selector) {\n            active();\n        } else if (0x4c76af0 == function_selector) {\n            withdrawAdmin();\n        } else if (0x26a49e37 == function_selector) {\n            price(uint256);\n        } else if (0x30e4f9aa == function_selector) {\n            contractbalance();\n        } else if (0xa035b1fe == function_selector) {\n            price();\n        } else if (0xc497da8d == function_selector) {\n            used(address);\n        }\n    }\n    fallback();\n}\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.22 08:24 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 stor_0; // STORAGE[0x0]\nuint256 _active; // STORAGE[0x1]\nuint256 _price; // STORAGE[0x2]\nmapping (uint256 => [uint256]) _used; // STORAGE[0x3]\n\n\nfunction settings(uint256 varg0, uint256 varg1) public nonPayable { \n    v0 = v1 = 0;\n    require(msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11);\n    if (msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11) {\n        if (varg0 > 0) {\n            stor_0 = varg0;\n        }\n        _active = varg1;\n        v0 = v2 = 1;\n    }\n    return v0;\n}\n\nfunction active() public nonPayable { \n    return _active;\n}\n\nfunction withdrawAdmin() public nonPayable { \n    require(msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11);\n    require(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.code.size);\n    v0, v1 = 0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.balanceOf(address(this)).gas(msg.gas);\n    require(v0); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    require(v1 != 0);\n    if (msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11) {\n        require(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.code.size);\n        v2, v3 = 0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.transfer(msg.sender, v1).gas(msg.gas);\n        require(v2); // checks call status, propagates error data on error\n        require(RETURNDATASIZE() >= 32);\n        require(v3);\n    }\n    if ((address(this)).balance > 0) {\n        v4 = msg.sender.call().value((address(this)).balance).gas(!(address(this)).balance * 2300);\n        require(v4); // checks call status, propagates error data on error\n    }\n    return 1;\n}\n\nfunction price(uint256 varg0) public nonPayable { \n    v0 = v1 = 0;\n    require(msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11);\n    if (msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11) {\n        _price = varg0;\n        v0 = 1;\n    }\n    return v0;\n}\n\nfunction contractbalance() public nonPayable { \n    require(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.code.size);\n    v0, v1 = 0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.balanceOf(address(this)).gas(msg.gas);\n    require(v0); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    return v1;\n}\n\nfunction price() public nonPayable { \n    return _price;\n}\n\nfunction used(address varg0) public nonPayable { \n    return _used[varg0];\n}\n\nfunction fallback() public payable { \n    require(_active > 0);\n    require(_used[msg.sender] != _active);\n    require(msg.value >= _price);\n    require(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.code.size);\n    v0, v1 = 0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.balanceOf(address(this)).gas(msg.gas);\n    require(v0); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    require(v1 != 0);\n    require(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.code.size);\n    v2, v3 = 0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.transfer(msg.sender, stor_0).gas(msg.gas);\n    require(v2); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    require(v3);\n    _used[msg.sender] = _active;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (0x1fe45e1 == function_selector) {\n            settings(uint256,uint256);\n        } else if (0x2fb0c5e == function_selector) {\n            active();\n        } else if (0x4c76af0 == function_selector) {\n            withdrawAdmin();\n        } else if (0x26a49e37 == function_selector) {\n            price(uint256);\n        } else if (0x30e4f9aa == function_selector) {\n            contractbalance();\n        } else if (0xa035b1fe == function_selector) {\n            price();\n        } else if (0xc497da8d == function_selector) {\n            used(address);\n        }\n    }\n    fallback();\n}\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.22 08:24 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 stor_0; // STORAGE[0x0]\nuint256 _active; // STORAGE[0x1]\nuint256 _price; // STORAGE[0x2]\nmapping (uint256 => [uint256]) _used; // STORAGE[0x3]\n\n\nfunction settings(uint256 varg0, uint256 varg1) public nonPayable { \n    v0 = v1 = 0;\n    require(msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11);\n    if (msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11) {\n        if (varg0 > 0) {\n            stor_0 = varg0;\n        }\n        _active = varg1;\n        v0 = v2 = 1;\n    }\n    return v0;\n}\n\nfunction active() public nonPayable { \n    return _active;\n}\n\nfunction withdrawAdmin() public nonPayable { \n    require(msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11);\n    require(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.code.size);\n    v0, v1 = 0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.balanceOf(address(this)).gas(msg.gas);\n    require(v0); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    require(v1 != 0);\n    if (msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11) {\n        require(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.code.size);\n        v2, v3 = 0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.transfer(msg.sender, v1).gas(msg.gas);\n        require(v2); // checks call status, propagates error data on error\n        require(RETURNDATASIZE() >= 32);\n        require(v3);\n    }\n    if ((address(this)).balance > 0) {\n        v4 = msg.sender.call().value((address(this)).balance).gas(!(address(this)).balance * 2300);\n        require(v4); // checks call status, propagates error data on error\n    }\n    return 1;\n}\n\nfunction price(uint256 varg0) public nonPayable { \n    v0 = v1 = 0;\n    require(msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11);\n    if (msg.sender == 0x67dc443aecece8353fe158e5f562873808f12c11) {\n        _price = varg0;\n        v0 = 1;\n    }\n    return v0;\n}\n\nfunction contractbalance() public nonPayable { \n    require(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.code.size);\n    v0, v1 = 0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.balanceOf(address(this)).gas(msg.gas);\n    require(v0); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    return v1;\n}\n\nfunction price() public nonPayable { \n    return _price;\n}\n\nfunction used(address varg0) public nonPayable { \n    return _used[varg0];\n}\n\nfunction fallback() public payable { \n    require(_active > 0);\n    require(_used[msg.sender] != _active);\n    require(msg.value >= _price);\n    require(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.code.size);\n    v0, v1 = 0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.balanceOf(address(this)).gas(msg.gas);\n    require(v0); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    require(v1 != 0);\n    require(0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.code.size);\n    v2, v3 = 0xfe417d8eef16948ba0301c05f5cba87e2c1c51c8.transfer(msg.sender, stor_0).gas(msg.gas);\n    require(v2); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    require(v3);\n    _used[msg.sender] = _active;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (0x1fe45e1 == function_selector) {\n            settings(uint256,uint256);\n        } else if (0x2fb0c5e == function_selector) {\n            active();\n        } else if (0x4c76af0 == function_selector) {\n            withdrawAdmin();\n        } else if (0x26a49e37 == function_selector) {\n            price(uint256);\n        } else if (0x30e4f9aa == function_selector) {\n            contractbalance();\n        } else if (0xa035b1fe == function_selector) {\n            price();\n        } else if (0xc497da8d == function_selector) {\n            used(address);\n        }\n    }\n    fallback();\n}\n.",
	"status": "1",
	"time_cost": 23.68502640724182,
	"usage": {
		"completion_tokens": 595,
		"prompt_tokens": 1420,
		"total_tokens": 2015
	}
}