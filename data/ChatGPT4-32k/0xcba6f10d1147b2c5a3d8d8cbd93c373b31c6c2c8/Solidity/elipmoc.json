{
	"address": "0xcba6f10d1147b2c5a3d8d8cbd93c373b31c6c2c8",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is an example of how you could implement the decompiled code above in Solidity:\n\n```solidity\npragma solidity ^0.8.0;\n\ncontract Token {\n    uint256 public _totalSupply;\n    mapping (address => uint256) public _balanceOf;\n    mapping (address => mapping(address => uint256)) public _allowance;\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    address public _owner;\n    \n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n\n    constructor() {\n        _totalSupply = 1000000;\n        _balanceOf[msg.sender] = _totalSupply;\n        name = \"Token\";\n        symbol = \"TKN\";\n        decimals = 18;\n        _owner = msg.sender;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return _balanceOf[_owner];\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        return _allowance[_owner][_spender];\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        require(_balanceOf[msg.sender] >= _value);\n        _balanceOf[msg.sender] -= _value;\n        _balanceOf[_to] += _value;\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        _allowance[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= _balanceOf[_from]);\n        require(_value <= _allowance[_from][msg.sender]);\n        _balanceOf[_from] -= _value;\n        _balanceOf[_to] += _value;\n        _allowance[_from][msg.sender] -= _value;\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n}\n```\n\nPlease note that this is a simplified version of the code and some functionalities might not be the same as the original code.",
				"role": "assistant"
			}
		}
	],
	"created": 1701458167,
	"id": "chatcmpl-8R3HbkYCPum3AtAUtBkhISwdOFWES",
	"input_format": "DecompiledCode",
	"ir": "// Decompiled at www.contract-library.com\n// 2021.08.14 19:15 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _totalSupply; // STORAGE[0x0]\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x1]\nmapping (uint256 => [uint256]) _allowance; // STORAGE[0x2]\nuint256[] _version; // STORAGE[0x4]\nuint256 _totalVUP; // STORAGE[0x7]\nmapping (uint256 => [uint256]) _eTHContributed; // STORAGE[0x9]\nuint256 _totalETHRaised; // STORAGE[0xa]\nuint256 _preSaleStartBlock; // STORAGE[0xb]\nuint256 _preSaleEndBlock; // STORAGE[0xc]\nuint256 _icoEndBlock; // STORAGE[0xd]\nuint256 _coreTeamUnlockedAt; // STORAGE[0xe]\nuint256 _unsoldUnlockedAt; // STORAGE[0xf]\nuint256 _unlock; // STORAGE[0x10]\nuint256 stor_11; // STORAGE[0x11]\nuint256 stor_12; // STORAGE[0x12]\nuint256 stor_13; // STORAGE[0x13]\nuint8 _saleHasEnded; // STORAGE[0x8] bytes 0 to 0\nuint8 _minCapReached; // STORAGE[0x8] bytes 1 to 1\nuint8 _preSaleEnded; // STORAGE[0x8] bytes 2 to 2\nuint8 _allowRefund; // STORAGE[0x8] bytes 3 to 3\naddress _owner; // STORAGE[0x3] bytes 0 to 19\naddress _executor; // STORAGE[0x5] bytes 0 to 19\naddress _vuePayETHDestination; // STORAGE[0x6] bytes 0 to 19\nuint256 stor_7a6a1b6962a44994b606e23dd4c75e7dc57d8c4d4cb569ec7e23ac3902f7714c; // STORAGE[0x7a6a1b6962a44994b606e23dd4c75e7dc57d8c4d4cb569ec7e23ac3902f7714c]\nuint256 stor_995c2060d8c62b8f37d91b5c1866926c38b5fa81c2f06336bd7abf59b709f535; // STORAGE[0x995c2060d8c62b8f37d91b5c1866926c38b5fa81c2f06336bd7abf59b709f535]\nuint256 stor_a2794dabc72b3756e8d68332ca2d95726c1d640d6531ce21462f0a86223ec2c5; // STORAGE[0xa2794dabc72b3756e8d68332ca2d95726c1d640d6531ce21462f0a86223ec2c5]\nuint256 stor_c69d772ae495b72b63745eea25cb6eab5f4de90f34de8761bad7c7f105c388ba; // STORAGE[0xc69d772ae495b72b63745eea25cb6eab5f4de90f34de8761bad7c7f105c388ba]\nuint256 stor_e66fc53853ecf62f270ba4ac0684a73aa1c0d03304f3c7f9519050e19a84b4c1; // STORAGE[0xe66fc53853ecf62f270ba4ac0684a73aa1c0d03304f3c7f9519050e19a84b4c1]\nuint256 stor_fffde052bc28c9b17ecd593ff00b6d2a9a4d3f7ced911683525103cc269f5dca; // STORAGE[0xfffde052bc28c9b17ecd593ff00b6d2a9a4d3f7ced911683525103cc269f5dca]\n\n// Events\nApproval(address, address, uint256);\nTransfer(address, address, uint256);\nCreatedVUP(address, uint256);\n\nfunction name() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v2 + v0.data] = MEM[v1.data + v2];\n        v2 += 32;\n    }\n    if (12) {\n        MEM[v0.data] = ~0xffffffffffffffffffffffffffffffffffffffff & 'VuePay Token';\n    }\n    return v0;\n}\n\nfunction approve(address varg0, uint256 varg1) public nonPayable { \n    v0 = v1 = !varg1;\n    if (varg1) {\n        v0 = v2 = !_allowance[varg0];\n    }\n    require(v0);\n    _allowance[varg0] = varg1;\n    emit Approval(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction advisoryVUPDestination() public nonPayable { \n    return 0x991abe74a1ac3d903da479ca9fede3d0954d430b;\n}\n\nfunction preSaleEndBlock() public nonPayable { \n    return _preSaleEndBlock;\n}\n\nfunction totalSupply() public nonPayable { \n    return _totalSupply;\n}\n\nfunction totalVUP() public nonPayable { \n    return _totalVUP;\n}\n\nfunction transferFrom(address varg0, address varg1, uint256 varg2) public nonPayable { \n    require(_minCapReached);\n    assert(varg2 + _allowance[varg1] >= _allowance[varg1]);\n    _balanceOf[varg1] = varg2 + _allowance[varg1];\n    assert(varg2 <= _balanceOf[varg0]);\n    _balanceOf[varg0] = _balanceOf[varg0] - varg2;\n    assert(varg2 <= _allowance[msg.sender]);\n    _allowance[msg.sender] = _allowance[msg.sender] - varg2;\n    emit Transfer(varg0, varg1, varg2);\n    return 1;\n}\n\nfunction withdrawFunds() public nonPayable { \n    require(_owner == msg.sender);\n    require(_minCapReached);\n    require((address(this)).balance > 0);\n    if ((address(this)).balance > 0) {\n        v0 = _vuePayETHDestination.call().value((address(this)).balance).gas(2300 * !(address(this)).balance);\n        require(v0);\n    }\n}\n\nfunction triggerRefund() public nonPayable { \n    require(_owner == msg.sender);\n    require(!_saleHasEnded);\n    require(!_minCapReached);\n    require(block.number > _icoEndBlock);\n    require(_executor == msg.sender);\n    _allowRefund = 1;\n}\n\nfunction DEV_TEAM_PORTION() public nonPayable { \n    return 0x295be96e64066972000000;\n}\n\nfunction totalETHRaised() public nonPayable { \n    return _totalETHRaised;\n}\n\nfunction decimals() public nonPayable { \n    return 18;\n}\n\nfunction coldStorageYears() public nonPayable { \n    return 0x12cc0300;\n}\n\nfunction INITIAL_VUP_TOKEN_SUPPLY() public nonPayable { \n    return 0x33b2e3c9fd0803ce8000000;\n}\n\nfunction icoEndBlock() public nonPayable { \n    return _icoEndBlock;\n}\n\nfunction endICO() public nonPayable { \n    require(_owner == msg.sender);\n    require(!_saleHasEnded);\n    require(_minCapReached);\n    _saleHasEnded = 1;\n    _unlock = 0x295be96e64066972000000;\n    stor_11 = 0x121836204bc2ce21e000000;\n    MEM[32] = 1;\n    stor_7a6a1b6962a44994b606e23dd4c75e7dc57d8c4d4cb569ec7e23ac3902f7714c = 0x295be96e64066972000000;\n    stor_a2794dabc72b3756e8d68332ca2d95726c1d640d6531ce21462f0a86223ec2c5 = stor_12;\n    stor_fffde052bc28c9b17ecd593ff00b6d2a9a4d3f7ced911683525103cc269f5dca = 0x52b7d2dcc80cd2e4000000;\n    assert(0x163f500 + block.timestamp >= block.timestamp);\n    _coreTeamUnlockedAt = 0x163f500 + block.timestamp;\n    assert(0x12cc0300 + block.timestamp >= block.timestamp);\n    _unsoldUnlockedAt = 0x12cc0300 + block.timestamp;\n    emit CreatedVUP(0x31403fa55aea2065bbdd2778bfed966014ab0081, 0x295be96e64066972000000);\n    emit CreatedVUP(0x991abe74a1ac3d903da479ca9fede3d0954d430b, stor_12);\n    emit CreatedVUP(0xf4307c073451b80a0bad1e099fd2b7f0fe38b7e9, 0x52b7d2dcc80cd2e4000000);\n}\n\nfunction vuePayETHDestination() public nonPayable { \n    return _vuePayETHDestination;\n}\n\nfunction version() public nonPayable { \n    v0 = new bytes[](_version.length);\n    v1 = v2 = v0.data;\n    if (_version.length) {\n        if (31 < _version.length) {\n            do {\n                MEM[v1] = STORAGE[v3];\n                v3 += 1;\n                v1 += 32;\n            } while (v2 + _version.length <= v1);\n        } else {\n            MEM[v2] = _version.length >> 8 << 8;\n        }\n    }\n    v4 = new array[](v0.length);\n    v5 = v6 = 0;\n    while (v5 < v0.length) {\n        MEM[v5 + v4.data] = MEM[v0.data + v5];\n        v5 += 32;\n    }\n    v7 = v8 = v0.length + v4.data;\n    if (0x1f & v0.length) {\n        MEM[v8 - (0x1f & v0.length)] = ~(256 ** (32 - (0x1f & v0.length)) - 1) & MEM[v8 - (0x1f & v0.length)];\n    }\n    return v4;\n}\n\nfunction coreTeamUnlockedAt() public nonPayable { \n    return _coreTeamUnlockedAt;\n}\n\nfunction VUP_PER_ETH_BASE_RATE() public nonPayable { \n    return 2000;\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction saleHasEnded() public nonPayable { \n    return _saleHasEnded;\n}\n\nfunction unsoldUnlockedAt() public nonPayable { \n    return _unsoldUnlockedAt;\n}\n\nfunction minCapReached() public nonPayable { \n    return _minCapReached;\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction unsoldVUPDestination() public nonPayable { \n    return 0x5076084a3377ecdf8ad5cd0f26a21ba848ddf435;\n}\n\nfunction symbol() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v2 + v0.data] = MEM[v1.data + v2];\n        v2 += 32;\n    }\n    if (3) {\n        MEM[v0.data] = 0x5655500000000000000000000000000000000000000000000000000000000000;\n    }\n    return v0;\n}\n\nfunction coreVUPDestination() public nonPayable { \n    return 0x22d310194b5ac5086bdacb2b0f36d8f0a5971b23;\n}\n\nfunction VUP_PER_ETH_PRE_SALE_RATE() public nonPayable { \n    return 3000;\n}\n\nfunction VUP_PER_ETH_ICO_TIER3_RATE() public nonPayable { \n    return 2250;\n}\n\nfunction preSaleEnded() public nonPayable { \n    return _preSaleEnded;\n}\n\nfunction createCustomVUP(address varg0, uint256 varg1) public nonPayable { \n    require(_owner == msg.sender);\n    require(varg0);\n    require(varg1 > 0);\n    require(stor_12 >= varg1);\n    assert(varg1 <= stor_12);\n    stor_12 = stor_12 - varg1;\n    assert(varg1 + _totalVUP >= _totalVUP);\n    _totalVUP += varg1;\n    assert(varg1 + _balanceOf[varg0] >= _balanceOf[varg0]);\n    _balanceOf[varg0] += varg1;\n    emit CreatedVUP(varg0, varg1);\n}\n\nfunction unlock() public nonPayable { \n    require(_owner == msg.sender);\n    require(_saleHasEnded);\n    v0 = v1 = block.timestamp > _coreTeamUnlockedAt;\n    if (block.timestamp <= _coreTeamUnlockedAt) {\n        v0 = block.timestamp > _unsoldUnlockedAt;\n    }\n    require(v0);\n    if (block.timestamp > _coreTeamUnlockedAt) {\n        MEM[32] = 1;\n        stor_e66fc53853ecf62f270ba4ac0684a73aa1c0d03304f3c7f9519050e19a84b4c1 = _unlock;\n        emit CreatedVUP(0x22d310194b5ac5086bdacb2b0f36d8f0a5971b23, _unlock);\n        MEM[32] = 1;\n        stor_c69d772ae495b72b63745eea25cb6eab5f4de90f34de8761bad7c7f105c388ba = stor_11;\n        emit CreatedVUP(0x863b2217e80e6c6192f63d3716c0cc7711fad5b4, stor_11);\n    }\n    if (block.timestamp > _unsoldUnlockedAt) {\n        assert(_totalVUP <= 0x14adf4b7320334b90000000);\n        require(0x14adf4b7320334b90000000 - _totalVUP > 0);\n        MEM[32] = 1;\n        stor_995c2060d8c62b8f37d91b5c1866926c38b5fa81c2f06336bd7abf59b709f535 = 0x14adf4b7320334b90000000 - _totalVUP;\n        emit CreatedVUP(0x22d310194b5ac5086bdacb2b0f36d8f0a5971b23, 0x14adf4b7320334b90000000 - _totalVUP);\n    }\n}\n\nfunction PRESALE_ICO_PORTION() public nonPayable { \n    return 0x14adf4b7320334b90000000;\n}\n\nfunction transfer(address varg0, uint256 varg1) public nonPayable { \n    require(_minCapReached);\n    assert(varg1 <= _balanceOf[msg.sender]);\n    _balanceOf[msg.sender] = _balanceOf[msg.sender] - varg1;\n    assert(varg1 + _balanceOf[varg0] >= _balanceOf[varg0]);\n    _balanceOf[varg0] += varg1;\n    emit Transfer(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction VUP_PER_ETH_ICO_TIER2_RATE() public nonPayable { \n    return 2500;\n}\n\nfunction udfVUPDestination() public nonPayable { \n    return 0xf4307c073451b80a0bad1e099fd2b7f0fe38b7e9;\n}\n\nfunction claimRefund() public nonPayable { \n    require(_allowRefund);\n    require(_eTHContributed[msg.sender]);\n    _eTHContributed[msg.sender] = 0;\n    emit 0x21fe51faa42768d3ade9422359d09797d9fce2ccbed3fe95f11a14bcced4738(msg.sender, _eTHContributed[msg.sender]);\n    v0 = msg.sender.call().value(_eTHContributed[msg.sender]).gas(2300 * !_eTHContributed[msg.sender]);\n    require(v0);\n}\n\nfunction devVUPDestination() public nonPayable { \n    return 0x31403fa55aea2065bbdd2778bfed966014ab0081;\n}\n\nfunction triggerMinCap() public nonPayable { \n    require(_owner == msg.sender);\n    _minCapReached = 1;\n}\n\nfunction VUP_TOKEN_SUPPLY_TIER3() public nonPayable { \n    return 0x13a542146f830bafc000000;\n}\n\nfunction executor() public nonPayable { \n    return _executor;\n}\n\nfunction VUP_TOKEN_SUPPLY_TIER1() public nonPayable { \n    return 0x7c13bc4b2c133c56000000;\n}\n\nfunction cofounderVUPDestination() public nonPayable { \n    return 0x863b2217e80e6c6192f63d3716c0cc7711fad5b4;\n}\n\nfunction allowance(address varg0, address varg1) public nonPayable { \n    return _allowance[varg1];\n}\n\nfunction changeVuePayETHDestinationAddress(address varg0) public nonPayable { \n    require(_owner == msg.sender);\n    _vuePayETHDestination = varg0;\n}\n\nfunction ETHContributed(address varg0) public nonPayable { \n    return _eTHContributed[varg0];\n}\n\nfunction CO_FOUNDER_PORTION() public nonPayable { \n    return 0x121836204bc2ce21e000000;\n}\n\nfunction transferOwnership(address varg0) public nonPayable { \n    require(_owner == msg.sender);\n    if (varg0) {\n        _owner = varg0;\n        goto 0x5ac0x8fa;\n    }\n}\n\nfunction UDF_PORTION() public nonPayable { \n    return 0x52b7d2dcc80cd2e4000000;\n}\n\nfunction preSaleStartBlock() public nonPayable { \n    return _preSaleStartBlock;\n}\n\nfunction VUP_TOKEN_SUPPLY_TIER2() public nonPayable { \n    return 0xdf56b9541c229fce000000;\n}\n\nfunction allowRefund() public nonPayable { \n    return _allowRefund;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length) {\n        if (function_selector == 0x6fdde03) {\n            name();\n        } else if (0x95ea7b3 == function_selector) {\n            approve(address,uint256);\n        } else if (0x130c0e88 == function_selector) {\n            advisoryVUPDestination();\n        } else if (0x1574126a == function_selector) {\n            preSaleEndBlock();\n        } else if (0x18160ddd == function_selector) {\n            totalSupply();\n        } else if (0x1fddbba4 == function_selector) {\n            totalVUP();\n        } else if (0x23b872dd == function_selector) {\n            transferFrom(address,address,uint256);\n        } else if (0x24600fc3 == function_selector) {\n            withdrawFunds();\n        } else if (0x263d4878 == function_selector) {\n            triggerRefund();\n        } else {\n            if (0x27ef89bc != function_selector) {\n                if (0x28f5c7b3 == function_selector) {\n                    totalETHRaised();\n                } else if (0x313ce567 == function_selector) {\n                    decimals();\n                } else if (0x3ab58703 == function_selector) {\n                    coldStorageYears();\n                } else if (0x468ed002 == function_selector) {\n                    INITIAL_VUP_TOKEN_SUPPLY();\n                } else if (0x47d70f74 == function_selector) {\n                    icoEndBlock();\n                } else if (0x4f248409 == function_selector) {\n                    endICO();\n                } else if (0x4f6b1a70 == function_selector) {\n                    vuePayETHDestination();\n                } else if (0x54fd4d50 == function_selector) {\n                    version();\n                } else if (0x629a9ce7 == function_selector) {\n                    coreTeamUnlockedAt();\n                } else if (0x6bef90f8 == function_selector) {\n                    VUP_PER_ETH_BASE_RATE();\n                } else if (0x70a08231 == function_selector) {\n                    balanceOf(address);\n                } else if (0x733e193c == function_selector) {\n                    saleHasEnded();\n                } else if (0x745ced49 != function_selector) {\n                    if (0x7d683b95 == function_selector) {\n                        unsoldUnlockedAt();\n                    } else if (0x8b9add74 == function_selector) {\n                        minCapReached();\n                    } else if (0x8da5cb5b == function_selector) {\n                        owner();\n                    } else if (0x9371de6e == function_selector) {\n                        unsoldVUPDestination();\n                    } else if (0x95d89b41 == function_selector) {\n                        symbol();\n                    } else if (0x96d6c134 == function_selector) {\n                        coreVUPDestination();\n                    } else if (0x9d000e78 == function_selector) {\n                        VUP_PER_ETH_PRE_SALE_RATE();\n                    } else if (0x9e34ba2f == function_selector) {\n                        VUP_PER_ETH_ICO_TIER3_RATE();\n                    } else if (0xa0426fb2 == function_selector) {\n                        preSaleEnded();\n                    } else if (0xa0a1082a == function_selector) {\n                        createCustomVUP(address,uint256);\n                    } else if (0xa69df4b5 == function_selector) {\n                        unlock();\n                    } else {\n                        if (0xa829d8ec != function_selector) {\n                            if (0xa9059cbb == function_selector) {\n                                transfer(address,uint256);\n                            } else if (0xada1a8f7 == function_selector) {\n                                VUP_PER_ETH_ICO_TIER2_RATE();\n                            } else if (0xb0d9fef9 == function_selector) {\n                                udfVUPDestination();\n                            } else if (0xb5545a3c == function_selector) {\n                                claimRefund();\n                            } else if (0xba7da724 == function_selector) {\n                                devVUPDestination();\n                            } else if (0xc1a6ec6a != function_selector) {\n                                if (0xc2812f74 == function_selector) {\n                                    triggerMinCap();\n                                } else if (0xc30354cb == function_selector) {\n                                    VUP_TOKEN_SUPPLY_TIER3();\n                                } else if (0xc34c08e5 == function_selector) {\n                                    executor();\n                                } else if (0xc742bab1 == function_selector) {\n                                    VUP_TOKEN_SUPPLY_TIER1();\n                                } else if (0xd9386c9f == function_selector) {\n                                    cofounderVUPDestination();\n                                } else if (0xdd62ed3e == function_selector) {\n                                    allowance(address,address);\n                                } else if (0xde0a1c5d == function_selector) {\n                                    changeVuePayETHDestinationAddress(address);\n                                } else if (0xe227b5d1 == function_selector) {\n                                    ETHContributed(address);\n                                } else if (0xeedb714c == function_selector) {\n                                    CO_FOUNDER_PORTION();\n                                } else if (0xf2fde38b == function_selector) {\n                                    transferOwnership(address);\n                                } else if (0xf62f47ab == function_selector) {\n                                    UDF_PORTION();\n                                } else if (0xf7b43abf != function_selector) {\n                                    if (0xf9dfb361 == function_selector) {\n                                        preSaleStartBlock();\n                                    } else if (0xfeb371cd == function_selector) {\n                                        VUP_TOKEN_SUPPLY_TIER2();\n                                    } else if (0xffb2d35d == function_selector) {\n                                        allowRefund();\n                                    }\n                                }\n                            }\n                        }\n                        PRESALE_ICO_PORTION();\n                    }\n                }\n            }\n            DEV_TEAM_PORTION();\n        }\n    }\n    require(msg.value >= 0xb1a2bc2ec50000);\n    require(!_saleHasEnded);\n    require(block.number >= _preSaleStartBlock);\n    require(block.number < _icoEndBlock);\n    if (block.number > _preSaleEndBlock) {\n        _preSaleEnded = 1;\n    }\n    require(msg.value);\n    assert(msg.value + _totalETHRaised >= _totalETHRaised);\n    stor_13 = 2000;\n    v0 = v1 = _totalVUP <= 0x7c13bc4b2c133c56000000;\n    if (_totalVUP <= 0x7c13bc4b2c133c56000000) {\n        v0 = !_preSaleEnded;\n    }\n    if (v0) {\n        stor_13 = 3000;\n    }\n    v2 = v3 = _totalVUP <= 0x7c13bc4b2c133c56000000;\n    if (v3) {\n        v2 = _preSaleEnded;\n    }\n    if (v2) {\n        stor_13 = 2500;\n    }\n    if (_totalVUP > 0x7c13bc4b2c133c56000000) {\n        stor_13 = 2500;\n    }\n    if (_totalVUP > 0xdf56b9541c229fce000000) {\n        stor_13 = 2250;\n    }\n    if (_totalVUP > 0x13a542146f830bafc000000) {\n        stor_13 = 2000;\n    }\n    v4 = v5 = !msg.value;\n    if (msg.value) {\n        assert(msg.value);\n        v4 = stor_13 * msg.value / msg.value == stor_13;\n    }\n    assert(v4);\n    assert(stor_13 * msg.value + _totalVUP >= _totalVUP);\n    _totalVUP += stor_13 * msg.value;\n    require(stor_13 * msg.value + _totalVUP <= 0x14adf4b7320334b90000000);\n    assert(stor_13 * msg.value <= _totalSupply);\n    assert(stor_13 * msg.value + _balanceOf[msg.sender] >= _balanceOf[msg.sender]);\n    assert(msg.value + _eTHContributed[msg.sender] >= _eTHContributed[msg.sender]);\n    _totalSupply = _totalSupply - stor_13 * msg.value;\n    _balanceOf[msg.sender] += stor_13 * msg.value;\n    _totalETHRaised += msg.value;\n    _eTHContributed[msg.sender] += msg.value;\n    emit CreatedVUP(msg.sender, stor_13 * msg.value);\n}\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.14 19:15 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _totalSupply; // STORAGE[0x0]\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x1]\nmapping (uint256 => [uint256]) _allowance; // STORAGE[0x2]\nuint256[] _version; // STORAGE[0x4]\nuint256 _totalVUP; // STORAGE[0x7]\nmapping (uint256 => [uint256]) _eTHContributed; // STORAGE[0x9]\nuint256 _totalETHRaised; // STORAGE[0xa]\nuint256 _preSaleStartBlock; // STORAGE[0xb]\nuint256 _preSaleEndBlock; // STORAGE[0xc]\nuint256 _icoEndBlock; // STORAGE[0xd]\nuint256 _coreTeamUnlockedAt; // STORAGE[0xe]\nuint256 _unsoldUnlockedAt; // STORAGE[0xf]\nuint256 _unlock; // STORAGE[0x10]\nuint256 stor_11; // STORAGE[0x11]\nuint256 stor_12; // STORAGE[0x12]\nuint256 stor_13; // STORAGE[0x13]\nuint8 _saleHasEnded; // STORAGE[0x8] bytes 0 to 0\nuint8 _minCapReached; // STORAGE[0x8] bytes 1 to 1\nuint8 _preSaleEnded; // STORAGE[0x8] bytes 2 to 2\nuint8 _allowRefund; // STORAGE[0x8] bytes 3 to 3\naddress _owner; // STORAGE[0x3] bytes 0 to 19\naddress _executor; // STORAGE[0x5] bytes 0 to 19\naddress _vuePayETHDestination; // STORAGE[0x6] bytes 0 to 19\nuint256 stor_7a6a1b6962a44994b606e23dd4c75e7dc57d8c4d4cb569ec7e23ac3902f7714c; // STORAGE[0x7a6a1b6962a44994b606e23dd4c75e7dc57d8c4d4cb569ec7e23ac3902f7714c]\nuint256 stor_995c2060d8c62b8f37d91b5c1866926c38b5fa81c2f06336bd7abf59b709f535; // STORAGE[0x995c2060d8c62b8f37d91b5c1866926c38b5fa81c2f06336bd7abf59b709f535]\nuint256 stor_a2794dabc72b3756e8d68332ca2d95726c1d640d6531ce21462f0a86223ec2c5; // STORAGE[0xa2794dabc72b3756e8d68332ca2d95726c1d640d6531ce21462f0a86223ec2c5]\nuint256 stor_c69d772ae495b72b63745eea25cb6eab5f4de90f34de8761bad7c7f105c388ba; // STORAGE[0xc69d772ae495b72b63745eea25cb6eab5f4de90f34de8761bad7c7f105c388ba]\nuint256 stor_e66fc53853ecf62f270ba4ac0684a73aa1c0d03304f3c7f9519050e19a84b4c1; // STORAGE[0xe66fc53853ecf62f270ba4ac0684a73aa1c0d03304f3c7f9519050e19a84b4c1]\nuint256 stor_fffde052bc28c9b17ecd593ff00b6d2a9a4d3f7ced911683525103cc269f5dca; // STORAGE[0xfffde052bc28c9b17ecd593ff00b6d2a9a4d3f7ced911683525103cc269f5dca]\n\n// Events\nApproval(address, address, uint256);\nTransfer(address, address, uint256);\nCreatedVUP(address, uint256);\n\nfunction name() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v2 + v0.data] = MEM[v1.data + v2];\n        v2 += 32;\n    }\n    if (12) {\n        MEM[v0.data] = ~0xffffffffffffffffffffffffffffffffffffffff & 'VuePay Token';\n    }\n    return v0;\n}\n\nfunction approve(address varg0, uint256 varg1) public nonPayable { \n    v0 = v1 = !varg1;\n    if (varg1) {\n        v0 = v2 = !_allowance[varg0];\n    }\n    require(v0);\n    _allowance[varg0] = varg1;\n    emit Approval(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction advisoryVUPDestination() public nonPayable { \n    return 0x991abe74a1ac3d903da479ca9fede3d0954d430b;\n}\n\nfunction preSaleEndBlock() public nonPayable { \n    return _preSaleEndBlock;\n}\n\nfunction totalSupply() public nonPayable { \n    return _totalSupply;\n}\n\nfunction totalVUP() public nonPayable { \n    return _totalVUP;\n}\n\nfunction transferFrom(address varg0, address varg1, uint256 varg2) public nonPayable { \n    require(_minCapReached);\n    assert(varg2 + _allowance[varg1] >= _allowance[varg1]);\n    _balanceOf[varg1] = varg2 + _allowance[varg1];\n    assert(varg2 <= _balanceOf[varg0]);\n    _balanceOf[varg0] = _balanceOf[varg0] - varg2;\n    assert(varg2 <= _allowance[msg.sender]);\n    _allowance[msg.sender] = _allowance[msg.sender] - varg2;\n    emit Transfer(varg0, varg1, varg2);\n    return 1;\n}\n\nfunction withdrawFunds() public nonPayable { \n    require(_owner == msg.sender);\n    require(_minCapReached);\n    require((address(this)).balance > 0);\n    if ((address(this)).balance > 0) {\n        v0 = _vuePayETHDestination.call().value((address(this)).balance).gas(2300 * !(address(this)).balance);\n        require(v0);\n    }\n}\n\nfunction triggerRefund() public nonPayable { \n    require(_owner == msg.sender);\n    require(!_saleHasEnded);\n    require(!_minCapReached);\n    require(block.number > _icoEndBlock);\n    require(_executor == msg.sender);\n    _allowRefund = 1;\n}\n\nfunction DEV_TEAM_PORTION() public nonPayable { \n    return 0x295be96e64066972000000;\n}\n\nfunction totalETHRaised() public nonPayable { \n    return _totalETHRaised;\n}\n\nfunction decimals() public nonPayable { \n    return 18;\n}\n\nfunction coldStorageYears() public nonPayable { \n    return 0x12cc0300;\n}\n\nfunction INITIAL_VUP_TOKEN_SUPPLY() public nonPayable { \n    return 0x33b2e3c9fd0803ce8000000;\n}\n\nfunction icoEndBlock() public nonPayable { \n    return _icoEndBlock;\n}\n\nfunction endICO() public nonPayable { \n    require(_owner == msg.sender);\n    require(!_saleHasEnded);\n    require(_minCapReached);\n    _saleHasEnded = 1;\n    _unlock = 0x295be96e64066972000000;\n    stor_11 = 0x121836204bc2ce21e000000;\n    MEM[32] = 1;\n    stor_7a6a1b6962a44994b606e23dd4c75e7dc57d8c4d4cb569ec7e23ac3902f7714c = 0x295be96e64066972000000;\n    stor_a2794dabc72b3756e8d68332ca2d95726c1d640d6531ce21462f0a86223ec2c5 = stor_12;\n    stor_fffde052bc28c9b17ecd593ff00b6d2a9a4d3f7ced911683525103cc269f5dca = 0x52b7d2dcc80cd2e4000000;\n    assert(0x163f500 + block.timestamp >= block.timestamp);\n    _coreTeamUnlockedAt = 0x163f500 + block.timestamp;\n    assert(0x12cc0300 + block.timestamp >= block.timestamp);\n    _unsoldUnlockedAt = 0x12cc0300 + block.timestamp;\n    emit CreatedVUP(0x31403fa55aea2065bbdd2778bfed966014ab0081, 0x295be96e64066972000000);\n    emit CreatedVUP(0x991abe74a1ac3d903da479ca9fede3d0954d430b, stor_12);\n    emit CreatedVUP(0xf4307c073451b80a0bad1e099fd2b7f0fe38b7e9, 0x52b7d2dcc80cd2e4000000);\n}\n\nfunction vuePayETHDestination() public nonPayable { \n    return _vuePayETHDestination;\n}\n\nfunction version() public nonPayable { \n    v0 = new bytes[](_version.length);\n    v1 = v2 = v0.data;\n    if (_version.length) {\n        if (31 < _version.length) {\n            do {\n                MEM[v1] = STORAGE[v3];\n                v3 += 1;\n                v1 += 32;\n            } while (v2 + _version.length <= v1);\n        } else {\n            MEM[v2] = _version.length >> 8 << 8;\n        }\n    }\n    v4 = new array[](v0.length);\n    v5 = v6 = 0;\n    while (v5 < v0.length) {\n        MEM[v5 + v4.data] = MEM[v0.data + v5];\n        v5 += 32;\n    }\n    v7 = v8 = v0.length + v4.data;\n    if (0x1f & v0.length) {\n        MEM[v8 - (0x1f & v0.length)] = ~(256 ** (32 - (0x1f & v0.length)) - 1) & MEM[v8 - (0x1f & v0.length)];\n    }\n    return v4;\n}\n\nfunction coreTeamUnlockedAt() public nonPayable { \n    return _coreTeamUnlockedAt;\n}\n\nfunction VUP_PER_ETH_BASE_RATE() public nonPayable { \n    return 2000;\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction saleHasEnded() public nonPayable { \n    return _saleHasEnded;\n}\n\nfunction unsoldUnlockedAt() public nonPayable { \n    return _unsoldUnlockedAt;\n}\n\nfunction minCapReached() public nonPayable { \n    return _minCapReached;\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction unsoldVUPDestination() public nonPayable { \n    return 0x5076084a3377ecdf8ad5cd0f26a21ba848ddf435;\n}\n\nfunction symbol() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v2 + v0.data] = MEM[v1.data + v2];\n        v2 += 32;\n    }\n    if (3) {\n        MEM[v0.data] = 0x5655500000000000000000000000000000000000000000000000000000000000;\n    }\n    return v0;\n}\n\nfunction coreVUPDestination() public nonPayable { \n    return 0x22d310194b5ac5086bdacb2b0f36d8f0a5971b23;\n}\n\nfunction VUP_PER_ETH_PRE_SALE_RATE() public nonPayable { \n    return 3000;\n}\n\nfunction VUP_PER_ETH_ICO_TIER3_RATE() public nonPayable { \n    return 2250;\n}\n\nfunction preSaleEnded() public nonPayable { \n    return _preSaleEnded;\n}\n\nfunction createCustomVUP(address varg0, uint256 varg1) public nonPayable { \n    require(_owner == msg.sender);\n    require(varg0);\n    require(varg1 > 0);\n    require(stor_12 >= varg1);\n    assert(varg1 <= stor_12);\n    stor_12 = stor_12 - varg1;\n    assert(varg1 + _totalVUP >= _totalVUP);\n    _totalVUP += varg1;\n    assert(varg1 + _balanceOf[varg0] >= _balanceOf[varg0]);\n    _balanceOf[varg0] += varg1;\n    emit CreatedVUP(varg0, varg1);\n}\n\nfunction unlock() public nonPayable { \n    require(_owner == msg.sender);\n    require(_saleHasEnded);\n    v0 = v1 = block.timestamp > _coreTeamUnlockedAt;\n    if (block.timestamp <= _coreTeamUnlockedAt) {\n        v0 = block.timestamp > _unsoldUnlockedAt;\n    }\n    require(v0);\n    if (block.timestamp > _coreTeamUnlockedAt) {\n        MEM[32] = 1;\n        stor_e66fc53853ecf62f270ba4ac0684a73aa1c0d03304f3c7f9519050e19a84b4c1 = _unlock;\n        emit CreatedVUP(0x22d310194b5ac5086bdacb2b0f36d8f0a5971b23, _unlock);\n        MEM[32] = 1;\n        stor_c69d772ae495b72b63745eea25cb6eab5f4de90f34de8761bad7c7f105c388ba = stor_11;\n        emit CreatedVUP(0x863b2217e80e6c6192f63d3716c0cc7711fad5b4, stor_11);\n    }\n    if (block.timestamp > _unsoldUnlockedAt) {\n        assert(_totalVUP <= 0x14adf4b7320334b90000000);\n        require(0x14adf4b7320334b90000000 - _totalVUP > 0);\n        MEM[32] = 1;\n        stor_995c2060d8c62b8f37d91b5c1866926c38b5fa81c2f06336bd7abf59b709f535 = 0x14adf4b7320334b90000000 - _totalVUP;\n        emit CreatedVUP(0x22d310194b5ac5086bdacb2b0f36d8f0a5971b23, 0x14adf4b7320334b90000000 - _totalVUP);\n    }\n}\n\nfunction PRESALE_ICO_PORTION() public nonPayable { \n    return 0x14adf4b7320334b90000000;\n}\n\nfunction transfer(address varg0, uint256 varg1) public nonPayable { \n    require(_minCapReached);\n    assert(varg1 <= _balanceOf[msg.sender]);\n    _balanceOf[msg.sender] = _balanceOf[msg.sender] - varg1;\n    assert(varg1 + _balanceOf[varg0] >= _balanceOf[varg0]);\n    _balanceOf[varg0] += varg1;\n    emit Transfer(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction VUP_PER_ETH_ICO_TIER2_RATE() public nonPayable { \n    return 2500;\n}\n\nfunction udfVUPDestination() public nonPayable { \n    return 0xf4307c073451b80a0bad1e099fd2b7f0fe38b7e9;\n}\n\nfunction claimRefund() public nonPayable { \n    require(_allowRefund);\n    require(_eTHContributed[msg.sender]);\n    _eTHContributed[msg.sender] = 0;\n    emit 0x21fe51faa42768d3ade9422359d09797d9fce2ccbed3fe95f11a14bcced4738(msg.sender, _eTHContributed[msg.sender]);\n    v0 = msg.sender.call().value(_eTHContributed[msg.sender]).gas(2300 * !_eTHContributed[msg.sender]);\n    require(v0);\n}\n\nfunction devVUPDestination() public nonPayable { \n    return 0x31403fa55aea2065bbdd2778bfed966014ab0081;\n}\n\nfunction triggerMinCap() public nonPayable { \n    require(_owner == msg.sender);\n    _minCapReached = 1;\n}\n\nfunction VUP_TOKEN_SUPPLY_TIER3() public nonPayable { \n    return 0x13a542146f830bafc000000;\n}\n\nfunction executor() public nonPayable { \n    return _executor;\n}\n\nfunction VUP_TOKEN_SUPPLY_TIER1() public nonPayable { \n    return 0x7c13bc4b2c133c56000000;\n}\n\nfunction cofounderVUPDestination() public nonPayable { \n    return 0x863b2217e80e6c6192f63d3716c0cc7711fad5b4;\n}\n\nfunction allowance(address varg0, address varg1) public nonPayable { \n    return _allowance[varg1];\n}\n\nfunction changeVuePayETHDestinationAddress(address varg0) public nonPayable { \n    require(_owner == msg.sender);\n    _vuePayETHDestination = varg0;\n}\n\nfunction ETHContributed(address varg0) public nonPayable { \n    return _eTHContributed[varg0];\n}\n\nfunction CO_FOUNDER_PORTION() public nonPayable { \n    return 0x121836204bc2ce21e000000;\n}\n\nfunction transferOwnership(address varg0) public nonPayable { \n    require(_owner == msg.sender);\n    if (varg0) {\n        _owner = varg0;\n        goto 0x5ac0x8fa;\n    }\n}\n\nfunction UDF_PORTION() public nonPayable { \n    return 0x52b7d2dcc80cd2e4000000;\n}\n\nfunction preSaleStartBlock() public nonPayable { \n    return _preSaleStartBlock;\n}\n\nfunction VUP_TOKEN_SUPPLY_TIER2() public nonPayable { \n    return 0xdf56b9541c229fce000000;\n}\n\nfunction allowRefund() public nonPayable { \n    return _allowRefund;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length) {\n        if (function_selector == 0x6fdde03) {\n            name();\n        } else if (0x95ea7b3 == function_selector) {\n            approve(address,uint256);\n        } else if (0x130c0e88 == function_selector) {\n            advisoryVUPDestination();\n        } else if (0x1574126a == function_selector) {\n            preSaleEndBlock();\n        } else if (0x18160ddd == function_selector) {\n            totalSupply();\n        } else if (0x1fddbba4 == function_selector) {\n            totalVUP();\n        } else if (0x23b872dd == function_selector) {\n            transferFrom(address,address,uint256);\n        } else if (0x24600fc3 == function_selector) {\n            withdrawFunds();\n        } else if (0x263d4878 == function_selector) {\n            triggerRefund();\n        } else {\n            if (0x27ef89bc != function_selector) {\n                if (0x28f5c7b3 == function_selector) {\n                    totalETHRaised();\n                } else if (0x313ce567 == function_selector) {\n                    decimals();\n                } else if (0x3ab58703 == function_selector) {\n                    coldStorageYears();\n                } else if (0x468ed002 == function_selector) {\n                    INITIAL_VUP_TOKEN_SUPPLY();\n                } else if (0x47d70f74 == function_selector) {\n                    icoEndBlock();\n                } else if (0x4f248409 == function_selector) {\n                    endICO();\n                } else if (0x4f6b1a70 == function_selector) {\n                    vuePayETHDestination();\n                } else if (0x54fd4d50 == function_selector) {\n                    version();\n                } else if (0x629a9ce7 == function_selector) {\n                    coreTeamUnlockedAt();\n                } else if (0x6bef90f8 == function_selector) {\n                    VUP_PER_ETH_BASE_RATE();\n                } else if (0x70a08231 == function_selector) {\n                    balanceOf(address);\n                } else if (0x733e193c == function_selector) {\n                    saleHasEnded();\n                } else if (0x745ced49 != function_selector) {\n                    if (0x7d683b95 == function_selector) {\n                        unsoldUnlockedAt();\n                    } else if (0x8b9add74 == function_selector) {\n                        minCapReached();\n                    } else if (0x8da5cb5b == function_selector) {\n                        owner();\n                    } else if (0x9371de6e == function_selector) {\n                        unsoldVUPDestination();\n                    } else if (0x95d89b41 == function_selector) {\n                        symbol();\n                    } else if (0x96d6c134 == function_selector) {\n                        coreVUPDestination();\n                    } else if (0x9d000e78 == function_selector) {\n                        VUP_PER_ETH_PRE_SALE_RATE();\n                    } else if (0x9e34ba2f == function_selector) {\n                        VUP_PER_ETH_ICO_TIER3_RATE();\n                    } else if (0xa0426fb2 == function_selector) {\n                        preSaleEnded();\n                    } else if (0xa0a1082a == function_selector) {\n                        createCustomVUP(address,uint256);\n                    } else if (0xa69df4b5 == function_selector) {\n                        unlock();\n                    } else {\n                        if (0xa829d8ec != function_selector) {\n                            if (0xa9059cbb == function_selector) {\n                                transfer(address,uint256);\n                            } else if (0xada1a8f7 == function_selector) {\n                                VUP_PER_ETH_ICO_TIER2_RATE();\n                            } else if (0xb0d9fef9 == function_selector) {\n                                udfVUPDestination();\n                            } else if (0xb5545a3c == function_selector) {\n                                claimRefund();\n                            } else if (0xba7da724 == function_selector) {\n                                devVUPDestination();\n                            } else if (0xc1a6ec6a != function_selector) {\n                                if (0xc2812f74 == function_selector) {\n                                    triggerMinCap();\n                                } else if (0xc30354cb == function_selector) {\n                                    VUP_TOKEN_SUPPLY_TIER3();\n                                } else if (0xc34c08e5 == function_selector) {\n                                    executor();\n                                } else if (0xc742bab1 == function_selector) {\n                                    VUP_TOKEN_SUPPLY_TIER1();\n                                } else if (0xd9386c9f == function_selector) {\n                                    cofounderVUPDestination();\n                                } else if (0xdd62ed3e == function_selector) {\n                                    allowance(address,address);\n                                } else if (0xde0a1c5d == function_selector) {\n                                    changeVuePayETHDestinationAddress(address);\n                                } else if (0xe227b5d1 == function_selector) {\n                                    ETHContributed(address);\n                                } else if (0xeedb714c == function_selector) {\n                                    CO_FOUNDER_PORTION();\n                                } else if (0xf2fde38b == function_selector) {\n                                    transferOwnership(address);\n                                } else if (0xf62f47ab == function_selector) {\n                                    UDF_PORTION();\n                                } else if (0xf7b43abf != function_selector) {\n                                    if (0xf9dfb361 == function_selector) {\n                                        preSaleStartBlock();\n                                    } else if (0xfeb371cd == function_selector) {\n                                        VUP_TOKEN_SUPPLY_TIER2();\n                                    } else if (0xffb2d35d == function_selector) {\n                                        allowRefund();\n                                    }\n                                }\n                            }\n                        }\n                        PRESALE_ICO_PORTION();\n                    }\n                }\n            }\n            DEV_TEAM_PORTION();\n        }\n    }\n    require(msg.value >= 0xb1a2bc2ec50000);\n    require(!_saleHasEnded);\n    require(block.number >= _preSaleStartBlock);\n    require(block.number < _icoEndBlock);\n    if (block.number > _preSaleEndBlock) {\n        _preSaleEnded = 1;\n    }\n    require(msg.value);\n    assert(msg.value + _totalETHRaised >= _totalETHRaised);\n    stor_13 = 2000;\n    v0 = v1 = _totalVUP <= 0x7c13bc4b2c133c56000000;\n    if (_totalVUP <= 0x7c13bc4b2c133c56000000) {\n        v0 = !_preSaleEnded;\n    }\n    if (v0) {\n        stor_13 = 3000;\n    }\n    v2 = v3 = _totalVUP <= 0x7c13bc4b2c133c56000000;\n    if (v3) {\n        v2 = _preSaleEnded;\n    }\n    if (v2) {\n        stor_13 = 2500;\n    }\n    if (_totalVUP > 0x7c13bc4b2c133c56000000) {\n        stor_13 = 2500;\n    }\n    if (_totalVUP > 0xdf56b9541c229fce000000) {\n        stor_13 = 2250;\n    }\n    if (_totalVUP > 0x13a542146f830bafc000000) {\n        stor_13 = 2000;\n    }\n    v4 = v5 = !msg.value;\n    if (msg.value) {\n        assert(msg.value);\n        v4 = stor_13 * msg.value / msg.value == stor_13;\n    }\n    assert(v4);\n    assert(stor_13 * msg.value + _totalVUP >= _totalVUP);\n    _totalVUP += stor_13 * msg.value;\n    require(stor_13 * msg.value + _totalVUP <= 0x14adf4b7320334b90000000);\n    assert(stor_13 * msg.value <= _totalSupply);\n    assert(stor_13 * msg.value + _balanceOf[msg.sender] >= _balanceOf[msg.sender]);\n    assert(msg.value + _eTHContributed[msg.sender] >= _eTHContributed[msg.sender]);\n    _totalSupply = _totalSupply - stor_13 * msg.value;\n    _balanceOf[msg.sender] += stor_13 * msg.value;\n    _totalETHRaised += msg.value;\n    _eTHContributed[msg.sender] += msg.value;\n    emit CreatedVUP(msg.sender, stor_13 * msg.value);\n}\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.14 19:15 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _totalSupply; // STORAGE[0x0]\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x1]\nmapping (uint256 => [uint256]) _allowance; // STORAGE[0x2]\nuint256[] _version; // STORAGE[0x4]\nuint256 _totalVUP; // STORAGE[0x7]\nmapping (uint256 => [uint256]) _eTHContributed; // STORAGE[0x9]\nuint256 _totalETHRaised; // STORAGE[0xa]\nuint256 _preSaleStartBlock; // STORAGE[0xb]\nuint256 _preSaleEndBlock; // STORAGE[0xc]\nuint256 _icoEndBlock; // STORAGE[0xd]\nuint256 _coreTeamUnlockedAt; // STORAGE[0xe]\nuint256 _unsoldUnlockedAt; // STORAGE[0xf]\nuint256 _unlock; // STORAGE[0x10]\nuint256 stor_11; // STORAGE[0x11]\nuint256 stor_12; // STORAGE[0x12]\nuint256 stor_13; // STORAGE[0x13]\nuint8 _saleHasEnded; // STORAGE[0x8] bytes 0 to 0\nuint8 _minCapReached; // STORAGE[0x8] bytes 1 to 1\nuint8 _preSaleEnded; // STORAGE[0x8] bytes 2 to 2\nuint8 _allowRefund; // STORAGE[0x8] bytes 3 to 3\naddress _owner; // STORAGE[0x3] bytes 0 to 19\naddress _executor; // STORAGE[0x5] bytes 0 to 19\naddress _vuePayETHDestination; // STORAGE[0x6] bytes 0 to 19\nuint256 stor_7a6a1b6962a44994b606e23dd4c75e7dc57d8c4d4cb569ec7e23ac3902f7714c; // STORAGE[0x7a6a1b6962a44994b606e23dd4c75e7dc57d8c4d4cb569ec7e23ac3902f7714c]\nuint256 stor_995c2060d8c62b8f37d91b5c1866926c38b5fa81c2f06336bd7abf59b709f535; // STORAGE[0x995c2060d8c62b8f37d91b5c1866926c38b5fa81c2f06336bd7abf59b709f535]\nuint256 stor_a2794dabc72b3756e8d68332ca2d95726c1d640d6531ce21462f0a86223ec2c5; // STORAGE[0xa2794dabc72b3756e8d68332ca2d95726c1d640d6531ce21462f0a86223ec2c5]\nuint256 stor_c69d772ae495b72b63745eea25cb6eab5f4de90f34de8761bad7c7f105c388ba; // STORAGE[0xc69d772ae495b72b63745eea25cb6eab5f4de90f34de8761bad7c7f105c388ba]\nuint256 stor_e66fc53853ecf62f270ba4ac0684a73aa1c0d03304f3c7f9519050e19a84b4c1; // STORAGE[0xe66fc53853ecf62f270ba4ac0684a73aa1c0d03304f3c7f9519050e19a84b4c1]\nuint256 stor_fffde052bc28c9b17ecd593ff00b6d2a9a4d3f7ced911683525103cc269f5dca; // STORAGE[0xfffde052bc28c9b17ecd593ff00b6d2a9a4d3f7ced911683525103cc269f5dca]\n\n// Events\nApproval(address, address, uint256);\nTransfer(address, address, uint256);\nCreatedVUP(address, uint256);\n\nfunction name() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v2 + v0.data] = MEM[v1.data + v2];\n        v2 += 32;\n    }\n    if (12) {\n        MEM[v0.data] = ~0xffffffffffffffffffffffffffffffffffffffff & 'VuePay Token';\n    }\n    return v0;\n}\n\nfunction approve(address varg0, uint256 varg1) public nonPayable { \n    v0 = v1 = !varg1;\n    if (varg1) {\n        v0 = v2 = !_allowance[varg0];\n    }\n    require(v0);\n    _allowance[varg0] = varg1;\n    emit Approval(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction advisoryVUPDestination() public nonPayable { \n    return 0x991abe74a1ac3d903da479ca9fede3d0954d430b;\n}\n\nfunction preSaleEndBlock() public nonPayable { \n    return _preSaleEndBlock;\n}\n\nfunction totalSupply() public nonPayable { \n    return _totalSupply;\n}\n\nfunction totalVUP() public nonPayable { \n    return _totalVUP;\n}\n\nfunction transferFrom(address varg0, address varg1, uint256 varg2) public nonPayable { \n    require(_minCapReached);\n    assert(varg2 + _allowance[varg1] >= _allowance[varg1]);\n    _balanceOf[varg1] = varg2 + _allowance[varg1];\n    assert(varg2 <= _balanceOf[varg0]);\n    _balanceOf[varg0] = _balanceOf[varg0] - varg2;\n    assert(varg2 <= _allowance[msg.sender]);\n    _allowance[msg.sender] = _allowance[msg.sender] - varg2;\n    emit Transfer(varg0, varg1, varg2);\n    return 1;\n}\n\nfunction withdrawFunds() public nonPayable { \n    require(_owner == msg.sender);\n    require(_minCapReached);\n    require((address(this)).balance > 0);\n    if ((address(this)).balance > 0) {\n        v0 = _vuePayETHDestination.call().value((address(this)).balance).gas(2300 * !(address(this)).balance);\n        require(v0);\n    }\n}\n\nfunction triggerRefund() public nonPayable { \n    require(_owner == msg.sender);\n    require(!_saleHasEnded);\n    require(!_minCapReached);\n    require(block.number > _icoEndBlock);\n    require(_executor == msg.sender);\n    _allowRefund = 1;\n}\n\nfunction DEV_TEAM_PORTION() public nonPayable { \n    return 0x295be96e64066972000000;\n}\n\nfunction totalETHRaised() public nonPayable { \n    return _totalETHRaised;\n}\n\nfunction decimals() public nonPayable { \n    return 18;\n}\n\nfunction coldStorageYears() public nonPayable { \n    return 0x12cc0300;\n}\n\nfunction INITIAL_VUP_TOKEN_SUPPLY() public nonPayable { \n    return 0x33b2e3c9fd0803ce8000000;\n}\n\nfunction icoEndBlock() public nonPayable { \n    return _icoEndBlock;\n}\n\nfunction endICO() public nonPayable { \n    require(_owner == msg.sender);\n    require(!_saleHasEnded);\n    require(_minCapReached);\n    _saleHasEnded = 1;\n    _unlock = 0x295be96e64066972000000;\n    stor_11 = 0x121836204bc2ce21e000000;\n    MEM[32] = 1;\n    stor_7a6a1b6962a44994b606e23dd4c75e7dc57d8c4d4cb569ec7e23ac3902f7714c = 0x295be96e64066972000000;\n    stor_a2794dabc72b3756e8d68332ca2d95726c1d640d6531ce21462f0a86223ec2c5 = stor_12;\n    stor_fffde052bc28c9b17ecd593ff00b6d2a9a4d3f7ced911683525103cc269f5dca = 0x52b7d2dcc80cd2e4000000;\n    assert(0x163f500 + block.timestamp >= block.timestamp);\n    _coreTeamUnlockedAt = 0x163f500 + block.timestamp;\n    assert(0x12cc0300 + block.timestamp >= block.timestamp);\n    _unsoldUnlockedAt = 0x12cc0300 + block.timestamp;\n    emit CreatedVUP(0x31403fa55aea2065bbdd2778bfed966014ab0081, 0x295be96e64066972000000);\n    emit CreatedVUP(0x991abe74a1ac3d903da479ca9fede3d0954d430b, stor_12);\n    emit CreatedVUP(0xf4307c073451b80a0bad1e099fd2b7f0fe38b7e9, 0x52b7d2dcc80cd2e4000000);\n}\n\nfunction vuePayETHDestination() public nonPayable { \n    return _vuePayETHDestination;\n}\n\nfunction version() public nonPayable { \n    v0 = new bytes[](_version.length);\n    v1 = v2 = v0.data;\n    if (_version.length) {\n        if (31 < _version.length) {\n            do {\n                MEM[v1] = STORAGE[v3];\n                v3 += 1;\n                v1 += 32;\n            } while (v2 + _version.length <= v1);\n        } else {\n            MEM[v2] = _version.length >> 8 << 8;\n        }\n    }\n    v4 = new array[](v0.length);\n    v5 = v6 = 0;\n    while (v5 < v0.length) {\n        MEM[v5 + v4.data] = MEM[v0.data + v5];\n        v5 += 32;\n    }\n    v7 = v8 = v0.length + v4.data;\n    if (0x1f & v0.length) {\n        MEM[v8 - (0x1f & v0.length)] = ~(256 ** (32 - (0x1f & v0.length)) - 1) & MEM[v8 - (0x1f & v0.length)];\n    }\n    return v4;\n}\n\nfunction coreTeamUnlockedAt() public nonPayable { \n    return _coreTeamUnlockedAt;\n}\n\nfunction VUP_PER_ETH_BASE_RATE() public nonPayable { \n    return 2000;\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction saleHasEnded() public nonPayable { \n    return _saleHasEnded;\n}\n\nfunction unsoldUnlockedAt() public nonPayable { \n    return _unsoldUnlockedAt;\n}\n\nfunction minCapReached() public nonPayable { \n    return _minCapReached;\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction unsoldVUPDestination() public nonPayable { \n    return 0x5076084a3377ecdf8ad5cd0f26a21ba848ddf435;\n}\n\nfunction symbol() public nonPayable { \n    v0 = new array[](v1.length);\n    v2 = v3 = 0;\n    while (v2 < v1.length) {\n        MEM[v2 + v0.data] = MEM[v1.data + v2];\n        v2 += 32;\n    }\n    if (3) {\n        MEM[v0.data] = 0x5655500000000000000000000000000000000000000000000000000000000000;\n    }\n    return v0;\n}\n\nfunction coreVUPDestination() public nonPayable { \n    return 0x22d310194b5ac5086bdacb2b0f36d8f0a5971b23;\n}\n\nfunction VUP_PER_ETH_PRE_SALE_RATE() public nonPayable { \n    return 3000;\n}\n\nfunction VUP_PER_ETH_ICO_TIER3_RATE() public nonPayable { \n    return 2250;\n}\n\nfunction preSaleEnded() public nonPayable { \n    return _preSaleEnded;\n}\n\nfunction createCustomVUP(address varg0, uint256 varg1) public nonPayable { \n    require(_owner == msg.sender);\n    require(varg0);\n    require(varg1 > 0);\n    require(stor_12 >= varg1);\n    assert(varg1 <= stor_12);\n    stor_12 = stor_12 - varg1;\n    assert(varg1 + _totalVUP >= _totalVUP);\n    _totalVUP += varg1;\n    assert(varg1 + _balanceOf[varg0] >= _balanceOf[varg0]);\n    _balanceOf[varg0] += varg1;\n    emit CreatedVUP(varg0, varg1);\n}\n\nfunction unlock() public nonPayable { \n    require(_owner == msg.sender);\n    require(_saleHasEnded);\n    v0 = v1 = block.timestamp > _coreTeamUnlockedAt;\n    if (block.timestamp <= _coreTeamUnlockedAt) {\n        v0 = block.timestamp > _unsoldUnlockedAt;\n    }\n    require(v0);\n    if (block.timestamp > _coreTeamUnlockedAt) {\n        MEM[32] = 1;\n        stor_e66fc53853ecf62f270ba4ac0684a73aa1c0d03304f3c7f9519050e19a84b4c1 = _unlock;\n        emit CreatedVUP(0x22d310194b5ac5086bdacb2b0f36d8f0a5971b23, _unlock);\n        MEM[32] = 1;\n        stor_c69d772ae495b72b63745eea25cb6eab5f4de90f34de8761bad7c7f105c388ba = stor_11;\n        emit CreatedVUP(0x863b2217e80e6c6192f63d3716c0cc7711fad5b4, stor_11);\n    }\n    if (block.timestamp > _unsoldUnlockedAt) {\n        assert(_totalVUP <= 0x14adf4b7320334b90000000);\n        require(0x14adf4b7320334b90000000 - _totalVUP > 0);\n        MEM[32] = 1;\n        stor_995c2060d8c62b8f37d91b5c1866926c38b5fa81c2f06336bd7abf59b709f535 = 0x14adf4b7320334b90000000 - _totalVUP;\n        emit CreatedVUP(0x22d310194b5ac5086bdacb2b0f36d8f0a5971b23, 0x14adf4b7320334b90000000 - _totalVUP);\n    }\n}\n\nfunction PRESALE_ICO_PORTION() public nonPayable { \n    return 0x14adf4b7320334b90000000;\n}\n\nfunction transfer(address varg0, uint256 varg1) public nonPayable { \n    require(_minCapReached);\n    assert(varg1 <= _balanceOf[msg.sender]);\n    _balanceOf[msg.sender] = _balanceOf[msg.sender] - varg1;\n    assert(varg1 + _balanceOf[varg0] >= _balanceOf[varg0]);\n    _balanceOf[varg0] += varg1;\n    emit Transfer(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction VUP_PER_ETH_ICO_TIER2_RATE() public nonPayable { \n    return 2500;\n}\n\nfunction udfVUPDestination() public nonPayable { \n    return 0xf4307c073451b80a0bad1e099fd2b7f0fe38b7e9;\n}\n\nfunction claimRefund() public nonPayable { \n    require(_allowRefund);\n    require(_eTHContributed[msg.sender]);\n    _eTHContributed[msg.sender] = 0;\n    emit 0x21fe51faa42768d3ade9422359d09797d9fce2ccbed3fe95f11a14bcced4738(msg.sender, _eTHContributed[msg.sender]);\n    v0 = msg.sender.call().value(_eTHContributed[msg.sender]).gas(2300 * !_eTHContributed[msg.sender]);\n    require(v0);\n}\n\nfunction devVUPDestination() public nonPayable { \n    return 0x31403fa55aea2065bbdd2778bfed966014ab0081;\n}\n\nfunction triggerMinCap() public nonPayable { \n    require(_owner == msg.sender);\n    _minCapReached = 1;\n}\n\nfunction VUP_TOKEN_SUPPLY_TIER3() public nonPayable { \n    return 0x13a542146f830bafc000000;\n}\n\nfunction executor() public nonPayable { \n    return _executor;\n}\n\nfunction VUP_TOKEN_SUPPLY_TIER1() public nonPayable { \n    return 0x7c13bc4b2c133c56000000;\n}\n\nfunction cofounderVUPDestination() public nonPayable { \n    return 0x863b2217e80e6c6192f63d3716c0cc7711fad5b4;\n}\n\nfunction allowance(address varg0, address varg1) public nonPayable { \n    return _allowance[varg1];\n}\n\nfunction changeVuePayETHDestinationAddress(address varg0) public nonPayable { \n    require(_owner == msg.sender);\n    _vuePayETHDestination = varg0;\n}\n\nfunction ETHContributed(address varg0) public nonPayable { \n    return _eTHContributed[varg0];\n}\n\nfunction CO_FOUNDER_PORTION() public nonPayable { \n    return 0x121836204bc2ce21e000000;\n}\n\nfunction transferOwnership(address varg0) public nonPayable { \n    require(_owner == msg.sender);\n    if (varg0) {\n        _owner = varg0;\n        goto 0x5ac0x8fa;\n    }\n}\n\nfunction UDF_PORTION() public nonPayable { \n    return 0x52b7d2dcc80cd2e4000000;\n}\n\nfunction preSaleStartBlock() public nonPayable { \n    return _preSaleStartBlock;\n}\n\nfunction VUP_TOKEN_SUPPLY_TIER2() public nonPayable { \n    return 0xdf56b9541c229fce000000;\n}\n\nfunction allowRefund() public nonPayable { \n    return _allowRefund;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length) {\n        if (function_selector == 0x6fdde03) {\n            name();\n        } else if (0x95ea7b3 == function_selector) {\n            approve(address,uint256);\n        } else if (0x130c0e88 == function_selector) {\n            advisoryVUPDestination();\n        } else if (0x1574126a == function_selector) {\n            preSaleEndBlock();\n        } else if (0x18160ddd == function_selector) {\n            totalSupply();\n        } else if (0x1fddbba4 == function_selector) {\n            totalVUP();\n        } else if (0x23b872dd == function_selector) {\n            transferFrom(address,address,uint256);\n        } else if (0x24600fc3 == function_selector) {\n            withdrawFunds();\n        } else if (0x263d4878 == function_selector) {\n            triggerRefund();\n        } else {\n            if (0x27ef89bc != function_selector) {\n                if (0x28f5c7b3 == function_selector) {\n                    totalETHRaised();\n                } else if (0x313ce567 == function_selector) {\n                    decimals();\n                } else if (0x3ab58703 == function_selector) {\n                    coldStorageYears();\n                } else if (0x468ed002 == function_selector) {\n                    INITIAL_VUP_TOKEN_SUPPLY();\n                } else if (0x47d70f74 == function_selector) {\n                    icoEndBlock();\n                } else if (0x4f248409 == function_selector) {\n                    endICO();\n                } else if (0x4f6b1a70 == function_selector) {\n                    vuePayETHDestination();\n                } else if (0x54fd4d50 == function_selector) {\n                    version();\n                } else if (0x629a9ce7 == function_selector) {\n                    coreTeamUnlockedAt();\n                } else if (0x6bef90f8 == function_selector) {\n                    VUP_PER_ETH_BASE_RATE();\n                } else if (0x70a08231 == function_selector) {\n                    balanceOf(address);\n                } else if (0x733e193c == function_selector) {\n                    saleHasEnded();\n                } else if (0x745ced49 != function_selector) {\n                    if (0x7d683b95 == function_selector) {\n                        unsoldUnlockedAt();\n                    } else if (0x8b9add74 == function_selector) {\n                        minCapReached();\n                    } else if (0x8da5cb5b == function_selector) {\n                        owner();\n                    } else if (0x9371de6e == function_selector) {\n                        unsoldVUPDestination();\n                    } else if (0x95d89b41 == function_selector) {\n                        symbol();\n                    } else if (0x96d6c134 == function_selector) {\n                        coreVUPDestination();\n                    } else if (0x9d000e78 == function_selector) {\n                        VUP_PER_ETH_PRE_SALE_RATE();\n                    } else if (0x9e34ba2f == function_selector) {\n                        VUP_PER_ETH_ICO_TIER3_RATE();\n                    } else if (0xa0426fb2 == function_selector) {\n                        preSaleEnded();\n                    } else if (0xa0a1082a == function_selector) {\n                        createCustomVUP(address,uint256);\n                    } else if (0xa69df4b5 == function_selector) {\n                        unlock();\n                    } else {\n                        if (0xa829d8ec != function_selector) {\n                            if (0xa9059cbb == function_selector) {\n                                transfer(address,uint256);\n                            } else if (0xada1a8f7 == function_selector) {\n                                VUP_PER_ETH_ICO_TIER2_RATE();\n                            } else if (0xb0d9fef9 == function_selector) {\n                                udfVUPDestination();\n                            } else if (0xb5545a3c == function_selector) {\n                                claimRefund();\n                            } else if (0xba7da724 == function_selector) {\n                                devVUPDestination();\n                            } else if (0xc1a6ec6a != function_selector) {\n                                if (0xc2812f74 == function_selector) {\n                                    triggerMinCap();\n                                } else if (0xc30354cb == function_selector) {\n                                    VUP_TOKEN_SUPPLY_TIER3();\n                                } else if (0xc34c08e5 == function_selector) {\n                                    executor();\n                                } else if (0xc742bab1 == function_selector) {\n                                    VUP_TOKEN_SUPPLY_TIER1();\n                                } else if (0xd9386c9f == function_selector) {\n                                    cofounderVUPDestination();\n                                } else if (0xdd62ed3e == function_selector) {\n                                    allowance(address,address);\n                                } else if (0xde0a1c5d == function_selector) {\n                                    changeVuePayETHDestinationAddress(address);\n                                } else if (0xe227b5d1 == function_selector) {\n                                    ETHContributed(address);\n                                } else if (0xeedb714c == function_selector) {\n                                    CO_FOUNDER_PORTION();\n                                } else if (0xf2fde38b == function_selector) {\n                                    transferOwnership(address);\n                                } else if (0xf62f47ab == function_selector) {\n                                    UDF_PORTION();\n                                } else if (0xf7b43abf != function_selector) {\n                                    if (0xf9dfb361 == function_selector) {\n                                        preSaleStartBlock();\n                                    } else if (0xfeb371cd == function_selector) {\n                                        VUP_TOKEN_SUPPLY_TIER2();\n                                    } else if (0xffb2d35d == function_selector) {\n                                        allowRefund();\n                                    }\n                                }\n                            }\n                        }\n                        PRESALE_ICO_PORTION();\n                    }\n                }\n            }\n            DEV_TEAM_PORTION();\n        }\n    }\n    require(msg.value >= 0xb1a2bc2ec50000);\n    require(!_saleHasEnded);\n    require(block.number >= _preSaleStartBlock);\n    require(block.number < _icoEndBlock);\n    if (block.number > _preSaleEndBlock) {\n        _preSaleEnded = 1;\n    }\n    require(msg.value);\n    assert(msg.value + _totalETHRaised >= _totalETHRaised);\n    stor_13 = 2000;\n    v0 = v1 = _totalVUP <= 0x7c13bc4b2c133c56000000;\n    if (_totalVUP <= 0x7c13bc4b2c133c56000000) {\n        v0 = !_preSaleEnded;\n    }\n    if (v0) {\n        stor_13 = 3000;\n    }\n    v2 = v3 = _totalVUP <= 0x7c13bc4b2c133c56000000;\n    if (v3) {\n        v2 = _preSaleEnded;\n    }\n    if (v2) {\n        stor_13 = 2500;\n    }\n    if (_totalVUP > 0x7c13bc4b2c133c56000000) {\n        stor_13 = 2500;\n    }\n    if (_totalVUP > 0xdf56b9541c229fce000000) {\n        stor_13 = 2250;\n    }\n    if (_totalVUP > 0x13a542146f830bafc000000) {\n        stor_13 = 2000;\n    }\n    v4 = v5 = !msg.value;\n    if (msg.value) {\n        assert(msg.value);\n        v4 = stor_13 * msg.value / msg.value == stor_13;\n    }\n    assert(v4);\n    assert(stor_13 * msg.value + _totalVUP >= _totalVUP);\n    _totalVUP += stor_13 * msg.value;\n    require(stor_13 * msg.value + _totalVUP <= 0x14adf4b7320334b90000000);\n    assert(stor_13 * msg.value <= _totalSupply);\n    assert(stor_13 * msg.value + _balanceOf[msg.sender] >= _balanceOf[msg.sender]);\n    assert(msg.value + _eTHContributed[msg.sender] >= _eTHContributed[msg.sender]);\n    _totalSupply = _totalSupply - stor_13 * msg.value;\n    _balanceOf[msg.sender] += stor_13 * msg.value;\n    _totalETHRaised += msg.value;\n    _eTHContributed[msg.sender] += msg.value;\n    emit CreatedVUP(msg.sender, stor_13 * msg.value);\n}\n.",
	"status": "1",
	"time_cost": 29.09561252593994,
	"usage": {
		"completion_tokens": 515,
		"prompt_tokens": 6222,
		"total_tokens": 6737
	}
}