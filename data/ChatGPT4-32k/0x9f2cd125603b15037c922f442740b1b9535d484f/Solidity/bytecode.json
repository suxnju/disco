{
	"address": "0x9f2cd125603b15037c922f442740b1b9535d484f",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Below is a representation of the given bytecode in a Solidity smart contract:\n\n```solidity\npragma solidity >=0.4.22 <0.7.0;\n\ncontract ERC20Token {\n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n    \n    uint256 public totalSupply;\n    string public name;\n    string public symbol;\n    uint8 public decimals = 18;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    constructor(uint256 initialSupply, string memory tokenName, string memory tokenSymbol) public {\n        totalSupply = initialSupply * 10 ** uint256(decimals);\n        balanceOf[msg.sender] = totalSupply;\n        name = tokenName;\n        symbol = tokenSymbol;\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        require(balanceOf[msg.sender] >= _value);\n        balanceOf[msg.sender] -= _value;\n        balanceOf[_to] += _value;\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n    \n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= balanceOf[_from]);\n        require(_value <= allowance[_from][msg.sender]);\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        allowance[_from][msg.sender] -= _value;\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n}\n\n```\n\nPlease note that the original bytecode might represent a more complex contract, and this Solidity code is just a possible representation of the given bytecode. To get the exact Solidity code you would need the original source code. \n\nThis contract represents a basic ERC20 token with `transfer`, `approve` and `transferFrom` methods. The contract has a constructor that sets the total supply, name, and symbol of the token. The `approve` function allows an owner to approve another address to spend tokens on their behalf, and the `transferFrom` function allows spending of tokens once approved.",
				"role": "assistant"
			}
		}
	],
	"created": 1701461035,
	"id": "chatcmpl-8R41rtmogNaCRWy9klGKzu7vxlT5v",
	"input_format": "Bytecode",
	"ir": "0x6080604052600436106100fb5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610148578063095ea7b3146101d257806318160ddd1461020a57806323b872dd14610231578063313ce5671461025b57806342966c68146102865780634ed0efd11461029e57806370a08231146102a857806379cc6790146102c95780638620410b146102ed5780638da5cb5b1461030257806395d89b4114610333578063a3201daa14610348578063a6f2ae3a14610360578063a9059cbb14610368578063cae9ca511461038c578063dd62ed3e146103f5578063f2fde38b1461041c575b60008054604051600160a060020a03909116903480156108fc029184818181858888f150506008546000543490910294506101459350600160a060020a031691503390508361043d565b50005b34801561015457600080fd5b5061015d610509565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019757818101518382015260200161017f565b50505050905090810190601f1680156101c45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101de57600080fd5b506101f6600160a060020a0360043516602435610596565b604080519115158252519081900360200190f35b34801561021657600080fd5b5061021f6105c3565b60408051918252519081900360200190f35b34801561023d57600080fd5b506101f6600160a060020a03600435811690602435166044356105c9565b34801561026757600080fd5b50610270610638565b6040805160ff9092168252519081900360200190f35b34801561029257600080fd5b506101f6600435610641565b6102a66106b9565b005b3480156102b457600080fd5b5061021f600160a060020a03600435166106de565b3480156102d557600080fd5b506101f6600160a060020a03600435166024356106f0565b3480156102f957600080fd5b5061021f6107c1565b34801561030e57600080fd5b506103176107c7565b60408051600160a060020a039092168252519081900360200190f35b34801561033f57600080fd5b5061015d6107d6565b34801561035457600080fd5b506102a660043561082e565b6102a661084a565b34801561037457600080fd5b506102a6600160a060020a036004351660243561086a565b34801561039857600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101f6948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506108799650505050505050565b34801561040157600080fd5b5061021f600160a060020a0360043581169060243516610992565b34801561042857600080fd5b506102a6600160a060020a03600435166109af565b600160a060020a038216151561045257600080fd5b600160a060020a03831660009081526005602052604090205481111561047757600080fd5b600160a060020a0382166000908152600560205260409020548181011161049d57600080fd5b600160a060020a03808416600081815260056020908152604080832080548790039055938616808352918490208054860190558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3505050565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561058e5780601f106105635761010080835404028352916020019161058e565b820191906000526020600020905b81548152906001019060200180831161057157829003601f168201915b505050505081565b336000908152600660209081526040808320600160a060020a039590951683529390529190912055600190565b60045481565b600160a060020a03831660009081526006602090815260408083203384529091528120548211156105f957600080fd5b600160a060020a038416600090815260066020908152604080832033845290915290208054839003905561062e84848461043d565b5060019392505050565b60035460ff1681565b3360009081526005602052604081205482111561065d57600080fd5b3360008181526005602090815260409182902080548690039055600480548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a2506001919050565b600054600160a060020a031633146106d057600080fd5b600054600160a060020a0316ff5b60056020526000908152604090205481565b600160a060020a03821660009081526005602052604081205482111561071557600080fd5b600160a060020a038316600090815260066020908152604080832033845290915290205482111561074557600080fd5b600160a060020a0383166000818152600560209081526040808320805487900390556006825280832033845282529182902080548690039055600480548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a250600192915050565b60085481565b600054600160a060020a031681565b6002805460408051602060018416156101000260001901909316849004601f8101849004840282018401909252818152929183018282801561058e5780601f106105635761010080835404028352916020019161058e565b600054600160a060020a0316331461084557600080fd5b600855565b60006008543481151561085957fe5b04905061086730338361043d565b50565b61087533838361043d565b5050565b6000836108868185610596565b1561098a576040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018790523060448401819052608060648501908152875160848601528751600160a060020a03871695638f4ffcb195948b94938b939192909160a490910190602085019080838360005b8381101561091e578181015183820152602001610906565b50505050905090810190601f16801561094b5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561096d57600080fd5b505af1158015610981573d6000803e3d6000fd5b50505050600191505b509392505050565b600660209081526000928352604080842090915290825290205481565b600054600160a060020a031633146109c657600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820668947811a5d94ceb1b9f5b83f02eb7412968b7446e2eeed25530666a72d0bcf0029",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following smart contract bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the bytecode: 0x6080604052600436106100fb5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610148578063095ea7b3146101d257806318160ddd1461020a57806323b872dd14610231578063313ce5671461025b57806342966c68146102865780634ed0efd11461029e57806370a08231146102a857806379cc6790146102c95780638620410b146102ed5780638da5cb5b1461030257806395d89b4114610333578063a3201daa14610348578063a6f2ae3a14610360578063a9059cbb14610368578063cae9ca511461038c578063dd62ed3e146103f5578063f2fde38b1461041c575b60008054604051600160a060020a03909116903480156108fc029184818181858888f150506008546000543490910294506101459350600160a060020a031691503390508361043d565b50005b34801561015457600080fd5b5061015d610509565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019757818101518382015260200161017f565b50505050905090810190601f1680156101c45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101de57600080fd5b506101f6600160a060020a0360043516602435610596565b604080519115158252519081900360200190f35b34801561021657600080fd5b5061021f6105c3565b60408051918252519081900360200190f35b34801561023d57600080fd5b506101f6600160a060020a03600435811690602435166044356105c9565b34801561026757600080fd5b50610270610638565b6040805160ff9092168252519081900360200190f35b34801561029257600080fd5b506101f6600435610641565b6102a66106b9565b005b3480156102b457600080fd5b5061021f600160a060020a03600435166106de565b3480156102d557600080fd5b506101f6600160a060020a03600435166024356106f0565b3480156102f957600080fd5b5061021f6107c1565b34801561030e57600080fd5b506103176107c7565b60408051600160a060020a039092168252519081900360200190f35b34801561033f57600080fd5b5061015d6107d6565b34801561035457600080fd5b506102a660043561082e565b6102a661084a565b34801561037457600080fd5b506102a6600160a060020a036004351660243561086a565b34801561039857600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101f6948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506108799650505050505050565b34801561040157600080fd5b5061021f600160a060020a0360043581169060243516610992565b34801561042857600080fd5b506102a6600160a060020a03600435166109af565b600160a060020a038216151561045257600080fd5b600160a060020a03831660009081526005602052604090205481111561047757600080fd5b600160a060020a0382166000908152600560205260409020548181011161049d57600080fd5b600160a060020a03808416600081815260056020908152604080832080548790039055938616808352918490208054860190558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3505050565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561058e5780601f106105635761010080835404028352916020019161058e565b820191906000526020600020905b81548152906001019060200180831161057157829003601f168201915b505050505081565b336000908152600660209081526040808320600160a060020a039590951683529390529190912055600190565b60045481565b600160a060020a03831660009081526006602090815260408083203384529091528120548211156105f957600080fd5b600160a060020a038416600090815260066020908152604080832033845290915290208054839003905561062e84848461043d565b5060019392505050565b60035460ff1681565b3360009081526005602052604081205482111561065d57600080fd5b3360008181526005602090815260409182902080548690039055600480548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a2506001919050565b600054600160a060020a031633146106d057600080fd5b600054600160a060020a0316ff5b60056020526000908152604090205481565b600160a060020a03821660009081526005602052604081205482111561071557600080fd5b600160a060020a038316600090815260066020908152604080832033845290915290205482111561074557600080fd5b600160a060020a0383166000818152600560209081526040808320805487900390556006825280832033845282529182902080548690039055600480548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a250600192915050565b60085481565b600054600160a060020a031681565b6002805460408051602060018416156101000260001901909316849004601f8101849004840282018401909252818152929183018282801561058e5780601f106105635761010080835404028352916020019161058e565b600054600160a060020a0316331461084557600080fd5b600855565b60006008543481151561085957fe5b04905061086730338361043d565b50565b61087533838361043d565b5050565b6000836108868185610596565b1561098a576040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018790523060448401819052608060648501908152875160848601528751600160a060020a03871695638f4ffcb195948b94938b939192909160a490910190602085019080838360005b8381101561091e578181015183820152602001610906565b50505050905090810190601f16801561094b5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561096d57600080fd5b505af1158015610981573d6000803e3d6000fd5b50505050600191505b509392505050565b600660209081526000928352604080842090915290825290205481565b600054600160a060020a031633146109c657600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820668947811a5d94ceb1b9f5b83f02eb7412968b7446e2eeed25530666a72d0bcf0029.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following smart contract bytecode.The following is the bytecode: 0x6080604052600436106100fb5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610148578063095ea7b3146101d257806318160ddd1461020a57806323b872dd14610231578063313ce5671461025b57806342966c68146102865780634ed0efd11461029e57806370a08231146102a857806379cc6790146102c95780638620410b146102ed5780638da5cb5b1461030257806395d89b4114610333578063a3201daa14610348578063a6f2ae3a14610360578063a9059cbb14610368578063cae9ca511461038c578063dd62ed3e146103f5578063f2fde38b1461041c575b60008054604051600160a060020a03909116903480156108fc029184818181858888f150506008546000543490910294506101459350600160a060020a031691503390508361043d565b50005b34801561015457600080fd5b5061015d610509565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019757818101518382015260200161017f565b50505050905090810190601f1680156101c45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101de57600080fd5b506101f6600160a060020a0360043516602435610596565b604080519115158252519081900360200190f35b34801561021657600080fd5b5061021f6105c3565b60408051918252519081900360200190f35b34801561023d57600080fd5b506101f6600160a060020a03600435811690602435166044356105c9565b34801561026757600080fd5b50610270610638565b6040805160ff9092168252519081900360200190f35b34801561029257600080fd5b506101f6600435610641565b6102a66106b9565b005b3480156102b457600080fd5b5061021f600160a060020a03600435166106de565b3480156102d557600080fd5b506101f6600160a060020a03600435166024356106f0565b3480156102f957600080fd5b5061021f6107c1565b34801561030e57600080fd5b506103176107c7565b60408051600160a060020a039092168252519081900360200190f35b34801561033f57600080fd5b5061015d6107d6565b34801561035457600080fd5b506102a660043561082e565b6102a661084a565b34801561037457600080fd5b506102a6600160a060020a036004351660243561086a565b34801561039857600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101f6948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506108799650505050505050565b34801561040157600080fd5b5061021f600160a060020a0360043581169060243516610992565b34801561042857600080fd5b506102a6600160a060020a03600435166109af565b600160a060020a038216151561045257600080fd5b600160a060020a03831660009081526005602052604090205481111561047757600080fd5b600160a060020a0382166000908152600560205260409020548181011161049d57600080fd5b600160a060020a03808416600081815260056020908152604080832080548790039055938616808352918490208054860190558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3505050565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561058e5780601f106105635761010080835404028352916020019161058e565b820191906000526020600020905b81548152906001019060200180831161057157829003601f168201915b505050505081565b336000908152600660209081526040808320600160a060020a039590951683529390529190912055600190565b60045481565b600160a060020a03831660009081526006602090815260408083203384529091528120548211156105f957600080fd5b600160a060020a038416600090815260066020908152604080832033845290915290208054839003905561062e84848461043d565b5060019392505050565b60035460ff1681565b3360009081526005602052604081205482111561065d57600080fd5b3360008181526005602090815260409182902080548690039055600480548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a2506001919050565b600054600160a060020a031633146106d057600080fd5b600054600160a060020a0316ff5b60056020526000908152604090205481565b600160a060020a03821660009081526005602052604081205482111561071557600080fd5b600160a060020a038316600090815260066020908152604080832033845290915290205482111561074557600080fd5b600160a060020a0383166000818152600560209081526040808320805487900390556006825280832033845282529182902080548690039055600480548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a250600192915050565b60085481565b600054600160a060020a031681565b6002805460408051602060018416156101000260001901909316849004601f8101849004840282018401909252818152929183018282801561058e5780601f106105635761010080835404028352916020019161058e565b600054600160a060020a0316331461084557600080fd5b600855565b60006008543481151561085957fe5b04905061086730338361043d565b50565b61087533838361043d565b5050565b6000836108868185610596565b1561098a576040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018790523060448401819052608060648501908152875160848601528751600160a060020a03871695638f4ffcb195948b94938b939192909160a490910190602085019080838360005b8381101561091e578181015183820152602001610906565b50505050905090810190601f16801561094b5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561096d57600080fd5b505af1158015610981573d6000803e3d6000fd5b50505050600191505b509392505050565b600660209081526000928352604080842090915290825290205481565b600054600160a060020a031633146109c657600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820668947811a5d94ceb1b9f5b83f02eb7412968b7446e2eeed25530666a72d0bcf0029.",
	"status": "1",
	"time_cost": 27.721261262893677,
	"usage": {
		"completion_tokens": 515,
		"prompt_tokens": 2122,
		"total_tokens": 2637
	}
}