{
	"address": "0x22dccfa39dbe59cd3f27e6531b33b5101bb2a70d",
	"choices": [
		{
			"finish_reason": "length",
			"index": 0,
			"message": {
				"content": "Sure, I'll give you an example of such a contract using the Solidity language. However, since the decompiled code is too extensive and complex, I will only cover the main aspects of it in the Solidity code. \n\n```solidity\npragma solidity ^0.5.16;\n\ncontract CardGame {\n    uint256 public totalCardValue;\n    uint256 public totalDivsProduced;\n    uint256 public totalCards;\n\n    mapping(uint256 => uint256) public cardPrice;\n    mapping(uint256 => uint256) public totalCardDivs;\n    mapping(uint256 => uint256) public stor6;\n    mapping(address => uint256) public myBalance;\n    mapping(uint256 => address) public cardOwner;\n\n    address public stor12;\n    address public stor17;\n\n    function addNewCard(uint256",
				"role": "assistant"
			}
		}
	],
	"created": 1700473293,
	"id": "chatcmpl-8Mv4X83DhazdbLNo3jp0HbETsWAuM",
	"input_format": "DecompiledCode",
	"ir": "# Palkeoramix decompiler. \n\nconst decimals = 18\nconst cardsDivRate = 10\nconst totalEthereumBalance = eth.balance(this.address)\nconst referralRate = 5\nconst distDivRate = 40\nconst ownerDivRate = 50\n\ndef storage:\n  name is array of uint256 at storage 0\n  symbol is array of uint256 at storage 1\n  totalCardValue is uint256 at storage 2\n  precisionFactor is uint256 at storage 3\n  cardOwner is mapping of address at storage 4\n  cardPrice is mapping of uint256 at storage 5\n  stor6 is mapping of uint256 at storage 6\n  myBalance is mapping of uint256 at storage 7\n  totalCardDivs is mapping of uint256 at storage 8\n  stor9 is uint256 at storage 9\n  totalDivsProduced is uint256 at storage 10\n  totalCards is uint256 at storage 11\n  stor12 is uint8 at storage 12\n  stor12 is address at storage 12 offset 8\n  stor17 is address at storage 17\n\ndef name(): # not payable\n  return name[0 len name.length]\n\ndef getcardPrice(uint256 _card): # not payable\n  require _card < totalCards\n  return cardPrice[_card]\n\ndef getcardOwner(uint256 _card): # not payable\n  require _card < totalCards\n  return cardOwner[_card]\n\ndef cardPrice(uint256 _param1): # not payable\n  return cardPrice[_param1]\n\ndef getMyBalance(): # not payable\n  return myBalance[caller]\n\ndef gettotalCardDivs(uint256 _card): # not payable\n  require _card < totalCards\n  return totalCardDivs[_card]\n\ndef getOwnerBalance(address _bondOwner): # not payable\n  return myBalance[address(_bondOwner)]\n\ndef symbol(): # not payable\n  return symbol[0 len symbol.length]\n\ndef precisionFactor(): # not payable\n  return precisionFactor\n\ndef getTotalDivsProduced(): # not payable\n  return totalDivsProduced\n\ndef totalCardValue(): # not payable\n  return totalCardValue\n\ndef gettotalCards(): # not payable\n  return totalCards\n\ndef gettotalCardValue(): # not payable\n  return totalCardValue\n\ndef totalCards(): # not payable\n  return totalCards\n\n#\n#  Regular functions\n#\n\ndef _fallback(?) payable: # default function\n  revert\n\ndef setAllowReferral(bool _allowReferral): # not payable\n  require caller == address(stor12.field_8)\n  uint8(stor12.field_0) = uint8(_allowReferral)\n\ndef setName(string _name): # not payable\n  require caller == address(stor12.field_8)\n  name[] = Array(len=_name.length, data=_name[all])\n\ndef setSymbol(string _symbol): # not payable\n  require caller == address(stor12.field_8)\n  symbol[] = Array(len=_symbol.length, data=_symbol[all])\n\ndef setcardPrice(uint256 _card, uint256 _price): # not payable\n  require caller == address(stor12.field_8)\n  require address(stor12.field_8) == cardOwner[_card]\n  cardPrice[_card] = _price\n\ndef addNewcard(uint256 _price): # not payable\n  require caller == address(stor12.field_8)\n  cardPrice[stor11 - 1] = _price\n  cardOwner[stor11 - 1] = address(stor12.field_8)\n  totalCardDivs[stor11 - 1] = 0\n  totalCards++\n\ndef withdraw(): # not payable\n  require 10^15 <= myBalance[caller]\n  myBalance[caller] = 0\n  call caller with:\n     value myBalance[caller] wei\n       gas 2300 * is_zero(value) wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  log onWithdraw(\n        address customerAddress=caller,\n        uint256 ethereumWithdrawn=myBalance[caller])\n\ndef getCardDivShare(uint256 _card): # not payable\n  require _card < totalCards\n  if not stor6[_card]:\n      if totalCardValue:\n          return ((0 / totalCardValue) + 5 / 10)\n  else:\n      if 10^(precisionFactor + 1) * stor6[_card] / stor6[_card] == 10^(precisionFactor + 1):\n          if totalCardValue:\n              return ((10^(precisionFactor + 1) * stor6[_card] / totalCardValue) + 5 / 10)\n  revert\n\ndef getCardDivs(uint256 _card, uint256 _amt): # not payable\n  require _card < totalCards\n  if not stor6[_card]:\n      if totalCardValue:\n          if not (0 / totalCardValue) + 5 / 10:\n              if 10^precisionFactor:\n                  return (0 / 10^precisionFactor)\n          else:\n              if _amt * (0 / totalCardValue) + 5 / 10 / (0 / totalCardValue) + 5 / 10 == _amt:\n                  if 10^precisionFactor:\n                      return (_amt * (0 / totalCardValue) + 5 / 10 / 10^precisionFactor)\n  else:\n      if 10^(precisionFactor + 1) * stor6[_card] / stor6[_card] == 10^(precisionFactor + 1):\n          if totalCardValue:\n              if not (10^(precisionFactor + 1) * stor6[_card] / totalCardValue) + 5 / 10:\n                  if 10^precisionFactor:\n                      return (0 / 10^precisionFactor)\n              else:\n                  if _amt * (10^(precisionFactor + 1) * stor6[_card] / totalCardValue) + 5 / 10 / (10^(precisionFactor + 1) * stor6[_card] / totalCardValue) + 5 / 10 == _amt:\n                      if 10^precisionFactor:\n                          return (_amt * (10^(precisionFactor + 1) * stor6[_card] / totalCardValue) + 5 / 10 / 10^precisionFactor)\n  revert\n\ndef buy(uint256 _amount, address _referredBy) payable: \n  require _amount < totalCards\n  require call.value == cardPrice[_amount]\n  require cardOwner[_amount] != caller\n  if call.value:\n      require stor9 * call.value / call.value == stor9\n      require stor6[_amount] <= stor9 * call.value / 100\n      require (stor9 * call.value / 100) - stor6[_amount] + totalCardValue >= totalCardValue\n      totalCardValue = (stor9 * call.value / 100) - stor6[_amount] + totalCardValue\n      if call.value:\n          require stor9 * call.value / call.value == stor9\n          require stor6[_amount] <= call.value\n          require call.value - stor6[_amount] + totalDivsProduced >= totalDivsProduced\n          totalDivsProduced = call.value - stor6[_amount] + totalDivsProduced\n          if call.value - stor6[_amount]:\n              require (10 * call.value) - (10 * stor6[_amount]) / call.value - stor6[_amount] == 10\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] += stor6[_amount]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              else:\n                                  require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = stor9 * call.value / 100\n                                      cardOwner[_amount] = caller\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 >= totalCards:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if call.value - stor6[_amount]:\n                                      require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = stor9 * call.value / 100\n                                      cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if call.value - stor6[_amount]:\n                                      require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              else:\n                                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = stor9 * call.value / 100\n                                      cardOwner[_amount] = caller\n          else:\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              else:\n                                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = stor9 * call.value / 100\n                                      cardOwner[_amount] = caller\n      else:\n          require stor6[_amount] <= call.value\n          require call.value - stor6[_amount] + totalDivsProduced >= totalDivsProduced\n          totalDivsProduced = call.value - stor6[_amount] + totalDivsProduced\n          if not call.value - stor6[_amount]:\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] += stor6[_amount]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if not stor6[0]:\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                          if totalCardValue:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if caller == _referredBy:\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if not stor6[0]:\n                                          require totalCardValue\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                                  require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if stor6[0]:\n                                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      revert\n                  require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                  if not uint8(stor12.field_0):\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              require totalCardValue\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if caller == _referredBy:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if stor6[0]:\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if _referredBy:\n                      if call.value - stor6[_amount]:\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                  else:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if call.value:\n          else:\n              require (10 * call.value) - (10 * stor6[_amount]) / call.value - stor6[_amount] == 10\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                  else:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              else:\n                                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = 0\n                                      cardOwner[_amount] = caller\n  else:\n      require stor6[_amount] <= 0\n      require -stor6[_amount] + totalCardValue >= totalCardValue\n      totalCardValue -= stor6[_amount]\n      if not call.value:\n          require stor6[_amount] <= call.value\n          require call.value - stor6[_amount] + totalDivsProduced >= totalDivsProduced\n          totalDivsProduced = call.value - stor6[_amount] + totalDivsProduced\n          if call.value - stor6[_amount]:\n              require (10 * call.value) - (10 * stor6[_amount]) / call.value - stor6[_amount] == 10\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] += stor6[_amount]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if not stor6[0]:\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                          if totalCardValue:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if caller == _referredBy:\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if not stor6[0]:\n                                          require totalCardValue\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                                  require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if stor6[0]:\n                                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      revert\n                  require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                  if not uint8(stor12.field_0):\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              require totalCardValue\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if caller == _referredBy:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if stor6[0]:\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if _referredBy:\n                      if call.value - stor6[_amount]:\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                  else:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if call.value:\n          else:\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  if totalCardValue:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                              require stor9 * call.value / call.value == stor9\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          log oncardPurchase(\n                                address customerAddress=caller,\n                                uint256 incomingEthereum=call.value,\n                                uint256 card=_amount,\n                                uint256 newPrice=0)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] += stor6[_amount]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if not stor6[0]:\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                          if totalCardValue:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0:\n                                          if ((5 * call.value) - (5 * stor6[_amount]) / 100) + myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if not stor6[0]:\n                                          require totalCardValue\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40:\n                          if not uint8(stor12.field_0):\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if not stor6[0]:\n                                          if totalCardValue:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      else:\n                                          if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                              if totalCardValue:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = 0\n                                      cardOwner[_amount] = caller\n                                      if not call.value:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if stor9 * call.value / call.value == stor9:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if caller == _referredBy:\n                                  if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                      myBalance[stor4[_amount]] += stor6[_amount]\n                                      call stor17 with:\n                                           gas 2300 wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                      if 0 < totalCards:\n                                          if not stor6[0]:\n                                              require totalCardValue\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = 0\n                                      cardOwner[_amount] = caller\n                                      if not call.value:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if stor9 * call.value / call.value == stor9:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if _referredBy:\n                                      if not call.value - stor6[_amount]:\n                                          require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                          require myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                                      require (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                      myBalance[stor4[_amount]] += stor6[_amount]\n                                      call stor17 with:\n                                           gas 2300 wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                      if 0 < totalCards:\n                                          if stor6[0]:\n                                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = 0\n                                      cardOwner[_amount] = caller\n                                      if not call.value:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if stor9 * call.value / call.value == stor9:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  revert\n              require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n              require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n              totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n              if not call.value - stor6[_amount]:\n                  if not uint8(stor12.field_0):\n                      if stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  if totalCardValue:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                              if not call.value:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor9 * call.value / call.value == stor9:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if caller == _referredBy:\n                          if stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if not stor6[0]:\n                                      require totalCardValue\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                              if not call.value:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor9 * call.value / call.value == stor9:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  require myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                              if not call.value:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor9 * call.value / call.value == stor9:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  revert\n              require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n              if not uint8(stor12.field_0):\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                  call stor17 with:\n                       gas 2300 wei\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  if 0 < totalCards:\n                      if not stor6[0]:\n                          require totalCardValue\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  stor6[_amount] = call.value\n                  cardPrice[_amount] = 0\n                  cardOwner[_amount] = caller\n                  if not call.value:\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require stor9 * call.value / call.value == stor9\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if caller == _referredBy:\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                  call stor17 with:\n                       gas 2300 wei\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  if 0 < totalCards:\n                      if stor6[0]:\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  stor6[_amount] = call.value\n                  cardPrice[_amount] = 0\n                  cardOwner[_amount] = caller\n                  if not call.value:\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require stor9 * call.value / call.value == stor9\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if _referredBy:\n                  if call.value - stor6[_amount]:\n                      require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                      require (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n              else:\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                  call stor17 with:\n                       gas 2300 wei\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  if 0 < totalCards:\n                      if not stor6[0]:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  stor6[_amount] = call.value\n                  cardPrice[_amount] = 0\n                  cardOwner[_amount] = caller\n                  if call.value:\n      else:\n          require stor9 * call.value / call.value == stor9\n          require stor6[_amount] <= call.value\n          require call.value - stor6[_amount] + totalDivsProduced >= totalDivsProduced\n          totalDivsProduced = call.value - stor6[_amount] + totalDivsProduced\n          if not call.value - stor6[_amount]:\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] += stor6[_amount]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if not stor6[0]:\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                          if totalCardValue:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if caller == _referredBy:\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if not stor6[0]:\n                                          require totalCardValue\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                                  require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if stor6[0]:\n                                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      revert\n                  require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                  if not uint8(stor12.field_0):\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              require totalCardValue\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if caller == _referredBy:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if stor6[0]:\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if _referredBy:\n                      if call.value - stor6[_amount]:\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                  else:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if call.value:\n          else:\n              require (10 * call.value) - (10 * stor6[_amount]) / call.value - stor6[_amount] == 10\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              else:\n                                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = stor9 * call.value / 100\n                                      cardOwner[_amount] = caller\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: # Palkeoramix decompiler. \n\nconst decimals = 18\nconst cardsDivRate = 10\nconst totalEthereumBalance = eth.balance(this.address)\nconst referralRate = 5\nconst distDivRate = 40\nconst ownerDivRate = 50\n\ndef storage:\n  name is array of uint256 at storage 0\n  symbol is array of uint256 at storage 1\n  totalCardValue is uint256 at storage 2\n  precisionFactor is uint256 at storage 3\n  cardOwner is mapping of address at storage 4\n  cardPrice is mapping of uint256 at storage 5\n  stor6 is mapping of uint256 at storage 6\n  myBalance is mapping of uint256 at storage 7\n  totalCardDivs is mapping of uint256 at storage 8\n  stor9 is uint256 at storage 9\n  totalDivsProduced is uint256 at storage 10\n  totalCards is uint256 at storage 11\n  stor12 is uint8 at storage 12\n  stor12 is address at storage 12 offset 8\n  stor17 is address at storage 17\n\ndef name(): # not payable\n  return name[0 len name.length]\n\ndef getcardPrice(uint256 _card): # not payable\n  require _card < totalCards\n  return cardPrice[_card]\n\ndef getcardOwner(uint256 _card): # not payable\n  require _card < totalCards\n  return cardOwner[_card]\n\ndef cardPrice(uint256 _param1): # not payable\n  return cardPrice[_param1]\n\ndef getMyBalance(): # not payable\n  return myBalance[caller]\n\ndef gettotalCardDivs(uint256 _card): # not payable\n  require _card < totalCards\n  return totalCardDivs[_card]\n\ndef getOwnerBalance(address _bondOwner): # not payable\n  return myBalance[address(_bondOwner)]\n\ndef symbol(): # not payable\n  return symbol[0 len symbol.length]\n\ndef precisionFactor(): # not payable\n  return precisionFactor\n\ndef getTotalDivsProduced(): # not payable\n  return totalDivsProduced\n\ndef totalCardValue(): # not payable\n  return totalCardValue\n\ndef gettotalCards(): # not payable\n  return totalCards\n\ndef gettotalCardValue(): # not payable\n  return totalCardValue\n\ndef totalCards(): # not payable\n  return totalCards\n\n#\n#  Regular functions\n#\n\ndef _fallback(?) payable: # default function\n  revert\n\ndef setAllowReferral(bool _allowReferral): # not payable\n  require caller == address(stor12.field_8)\n  uint8(stor12.field_0) = uint8(_allowReferral)\n\ndef setName(string _name): # not payable\n  require caller == address(stor12.field_8)\n  name[] = Array(len=_name.length, data=_name[all])\n\ndef setSymbol(string _symbol): # not payable\n  require caller == address(stor12.field_8)\n  symbol[] = Array(len=_symbol.length, data=_symbol[all])\n\ndef setcardPrice(uint256 _card, uint256 _price): # not payable\n  require caller == address(stor12.field_8)\n  require address(stor12.field_8) == cardOwner[_card]\n  cardPrice[_card] = _price\n\ndef addNewcard(uint256 _price): # not payable\n  require caller == address(stor12.field_8)\n  cardPrice[stor11 - 1] = _price\n  cardOwner[stor11 - 1] = address(stor12.field_8)\n  totalCardDivs[stor11 - 1] = 0\n  totalCards++\n\ndef withdraw(): # not payable\n  require 10^15 <= myBalance[caller]\n  myBalance[caller] = 0\n  call caller with:\n     value myBalance[caller] wei\n       gas 2300 * is_zero(value) wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  log onWithdraw(\n        address customerAddress=caller,\n        uint256 ethereumWithdrawn=myBalance[caller])\n\ndef getCardDivShare(uint256 _card): # not payable\n  require _card < totalCards\n  if not stor6[_card]:\n      if totalCardValue:\n          return ((0 / totalCardValue) + 5 / 10)\n  else:\n      if 10^(precisionFactor + 1) * stor6[_card] / stor6[_card] == 10^(precisionFactor + 1):\n          if totalCardValue:\n              return ((10^(precisionFactor + 1) * stor6[_card] / totalCardValue) + 5 / 10)\n  revert\n\ndef getCardDivs(uint256 _card, uint256 _amt): # not payable\n  require _card < totalCards\n  if not stor6[_card]:\n      if totalCardValue:\n          if not (0 / totalCardValue) + 5 / 10:\n              if 10^precisionFactor:\n                  return (0 / 10^precisionFactor)\n          else:\n              if _amt * (0 / totalCardValue) + 5 / 10 / (0 / totalCardValue) + 5 / 10 == _amt:\n                  if 10^precisionFactor:\n                      return (_amt * (0 / totalCardValue) + 5 / 10 / 10^precisionFactor)\n  else:\n      if 10^(precisionFactor + 1) * stor6[_card] / stor6[_card] == 10^(precisionFactor + 1):\n          if totalCardValue:\n              if not (10^(precisionFactor + 1) * stor6[_card] / totalCardValue) + 5 / 10:\n                  if 10^precisionFactor:\n                      return (0 / 10^precisionFactor)\n              else:\n                  if _amt * (10^(precisionFactor + 1) * stor6[_card] / totalCardValue) + 5 / 10 / (10^(precisionFactor + 1) * stor6[_card] / totalCardValue) + 5 / 10 == _amt:\n                      if 10^precisionFactor:\n                          return (_amt * (10^(precisionFactor + 1) * stor6[_card] / totalCardValue) + 5 / 10 / 10^precisionFactor)\n  revert\n\ndef buy(uint256 _amount, address _referredBy) payable: \n  require _amount < totalCards\n  require call.value == cardPrice[_amount]\n  require cardOwner[_amount] != caller\n  if call.value:\n      require stor9 * call.value / call.value == stor9\n      require stor6[_amount] <= stor9 * call.value / 100\n      require (stor9 * call.value / 100) - stor6[_amount] + totalCardValue >= totalCardValue\n      totalCardValue = (stor9 * call.value / 100) - stor6[_amount] + totalCardValue\n      if call.value:\n          require stor9 * call.value / call.value == stor9\n          require stor6[_amount] <= call.value\n          require call.value - stor6[_amount] + totalDivsProduced >= totalDivsProduced\n          totalDivsProduced = call.value - stor6[_amount] + totalDivsProduced\n          if call.value - stor6[_amount]:\n              require (10 * call.value) - (10 * stor6[_amount]) / call.value - stor6[_amount] == 10\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] += stor6[_amount]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              else:\n                                  require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = stor9 * call.value / 100\n                                      cardOwner[_amount] = caller\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 >= totalCards:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if call.value - stor6[_amount]:\n                                      require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = stor9 * call.value / 100\n                                      cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if call.value - stor6[_amount]:\n                                      require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              else:\n                                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = stor9 * call.value / 100\n                                      cardOwner[_amount] = caller\n          else:\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              else:\n                                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = stor9 * call.value / 100\n                                      cardOwner[_amount] = caller\n      else:\n          require stor6[_amount] <= call.value\n          require call.value - stor6[_amount] + totalDivsProduced >= totalDivsProduced\n          totalDivsProduced = call.value - stor6[_amount] + totalDivsProduced\n          if not call.value - stor6[_amount]:\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] += stor6[_amount]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if not stor6[0]:\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                          if totalCardValue:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if caller == _referredBy:\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if not stor6[0]:\n                                          require totalCardValue\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                                  require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if stor6[0]:\n                                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      revert\n                  require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                  if not uint8(stor12.field_0):\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              require totalCardValue\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if caller == _referredBy:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if stor6[0]:\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if _referredBy:\n                      if call.value - stor6[_amount]:\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                  else:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if call.value:\n          else:\n              require (10 * call.value) - (10 * stor6[_amount]) / call.value - stor6[_amount] == 10\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                  else:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              else:\n                                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = 0\n                                      cardOwner[_amount] = caller\n  else:\n      require stor6[_amount] <= 0\n      require -stor6[_amount] + totalCardValue >= totalCardValue\n      totalCardValue -= stor6[_amount]\n      if not call.value:\n          require stor6[_amount] <= call.value\n          require call.value - stor6[_amount] + totalDivsProduced >= totalDivsProduced\n          totalDivsProduced = call.value - stor6[_amount] + totalDivsProduced\n          if call.value - stor6[_amount]:\n              require (10 * call.value) - (10 * stor6[_amount]) / call.value - stor6[_amount] == 10\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] += stor6[_amount]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if not stor6[0]:\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                          if totalCardValue:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if caller == _referredBy:\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if not stor6[0]:\n                                          require totalCardValue\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                                  require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if stor6[0]:\n                                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      revert\n                  require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                  if not uint8(stor12.field_0):\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              require totalCardValue\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if caller == _referredBy:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if stor6[0]:\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if _referredBy:\n                      if call.value - stor6[_amount]:\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                  else:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if call.value:\n          else:\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  if totalCardValue:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                              require stor9 * call.value / call.value == stor9\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          log oncardPurchase(\n                                address customerAddress=caller,\n                                uint256 incomingEthereum=call.value,\n                                uint256 card=_amount,\n                                uint256 newPrice=0)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] += stor6[_amount]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if not stor6[0]:\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                          if totalCardValue:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0:\n                                          if ((5 * call.value) - (5 * stor6[_amount]) / 100) + myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if not stor6[0]:\n                                          require totalCardValue\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40:\n                          if not uint8(stor12.field_0):\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if not stor6[0]:\n                                          if totalCardValue:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      else:\n                                          if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                              if totalCardValue:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = 0\n                                      cardOwner[_amount] = caller\n                                      if not call.value:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if stor9 * call.value / call.value == stor9:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if caller == _referredBy:\n                                  if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                      myBalance[stor4[_amount]] += stor6[_amount]\n                                      call stor17 with:\n                                           gas 2300 wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                      if 0 < totalCards:\n                                          if not stor6[0]:\n                                              require totalCardValue\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = 0\n                                      cardOwner[_amount] = caller\n                                      if not call.value:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if stor9 * call.value / call.value == stor9:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if _referredBy:\n                                      if not call.value - stor6[_amount]:\n                                          require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                          require myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                                      require (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                      myBalance[stor4[_amount]] += stor6[_amount]\n                                      call stor17 with:\n                                           gas 2300 wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                      if 0 < totalCards:\n                                          if stor6[0]:\n                                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = 0\n                                      cardOwner[_amount] = caller\n                                      if not call.value:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if stor9 * call.value / call.value == stor9:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  revert\n              require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n              require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n              totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n              if not call.value - stor6[_amount]:\n                  if not uint8(stor12.field_0):\n                      if stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  if totalCardValue:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                              if not call.value:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor9 * call.value / call.value == stor9:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if caller == _referredBy:\n                          if stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if not stor6[0]:\n                                      require totalCardValue\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                              if not call.value:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor9 * call.value / call.value == stor9:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  require myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                              if not call.value:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor9 * call.value / call.value == stor9:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  revert\n              require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n              if not uint8(stor12.field_0):\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                  call stor17 with:\n                       gas 2300 wei\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  if 0 < totalCards:\n                      if not stor6[0]:\n                          require totalCardValue\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  stor6[_amount] = call.value\n                  cardPrice[_amount] = 0\n                  cardOwner[_amount] = caller\n                  if not call.value:\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require stor9 * call.value / call.value == stor9\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if caller == _referredBy:\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                  call stor17 with:\n                       gas 2300 wei\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  if 0 < totalCards:\n                      if stor6[0]:\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  stor6[_amount] = call.value\n                  cardPrice[_amount] = 0\n                  cardOwner[_amount] = caller\n                  if not call.value:\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require stor9 * call.value / call.value == stor9\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if _referredBy:\n                  if call.value - stor6[_amount]:\n                      require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                      require (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n              else:\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                  call stor17 with:\n                       gas 2300 wei\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  if 0 < totalCards:\n                      if not stor6[0]:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  stor6[_amount] = call.value\n                  cardPrice[_amount] = 0\n                  cardOwner[_amount] = caller\n                  if call.value:\n      else:\n          require stor9 * call.value / call.value == stor9\n          require stor6[_amount] <= call.value\n          require call.value - stor6[_amount] + totalDivsProduced >= totalDivsProduced\n          totalDivsProduced = call.value - stor6[_amount] + totalDivsProduced\n          if not call.value - stor6[_amount]:\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] += stor6[_amount]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if not stor6[0]:\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                          if totalCardValue:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if caller == _referredBy:\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if not stor6[0]:\n                                          require totalCardValue\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                                  require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if stor6[0]:\n                                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      revert\n                  require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                  if not uint8(stor12.field_0):\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              require totalCardValue\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if caller == _referredBy:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if stor6[0]:\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if _referredBy:\n                      if call.value - stor6[_amount]:\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                  else:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if call.value:\n          else:\n              require (10 * call.value) - (10 * stor6[_amount]) / call.value - stor6[_amount] == 10\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              else:\n                                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = stor9 * call.value / 100\n                                      cardOwner[_amount] = caller\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: # Palkeoramix decompiler. \n\nconst decimals = 18\nconst cardsDivRate = 10\nconst totalEthereumBalance = eth.balance(this.address)\nconst referralRate = 5\nconst distDivRate = 40\nconst ownerDivRate = 50\n\ndef storage:\n  name is array of uint256 at storage 0\n  symbol is array of uint256 at storage 1\n  totalCardValue is uint256 at storage 2\n  precisionFactor is uint256 at storage 3\n  cardOwner is mapping of address at storage 4\n  cardPrice is mapping of uint256 at storage 5\n  stor6 is mapping of uint256 at storage 6\n  myBalance is mapping of uint256 at storage 7\n  totalCardDivs is mapping of uint256 at storage 8\n  stor9 is uint256 at storage 9\n  totalDivsProduced is uint256 at storage 10\n  totalCards is uint256 at storage 11\n  stor12 is uint8 at storage 12\n  stor12 is address at storage 12 offset 8\n  stor17 is address at storage 17\n\ndef name(): # not payable\n  return name[0 len name.length]\n\ndef getcardPrice(uint256 _card): # not payable\n  require _card < totalCards\n  return cardPrice[_card]\n\ndef getcardOwner(uint256 _card): # not payable\n  require _card < totalCards\n  return cardOwner[_card]\n\ndef cardPrice(uint256 _param1): # not payable\n  return cardPrice[_param1]\n\ndef getMyBalance(): # not payable\n  return myBalance[caller]\n\ndef gettotalCardDivs(uint256 _card): # not payable\n  require _card < totalCards\n  return totalCardDivs[_card]\n\ndef getOwnerBalance(address _bondOwner): # not payable\n  return myBalance[address(_bondOwner)]\n\ndef symbol(): # not payable\n  return symbol[0 len symbol.length]\n\ndef precisionFactor(): # not payable\n  return precisionFactor\n\ndef getTotalDivsProduced(): # not payable\n  return totalDivsProduced\n\ndef totalCardValue(): # not payable\n  return totalCardValue\n\ndef gettotalCards(): # not payable\n  return totalCards\n\ndef gettotalCardValue(): # not payable\n  return totalCardValue\n\ndef totalCards(): # not payable\n  return totalCards\n\n#\n#  Regular functions\n#\n\ndef _fallback(?) payable: # default function\n  revert\n\ndef setAllowReferral(bool _allowReferral): # not payable\n  require caller == address(stor12.field_8)\n  uint8(stor12.field_0) = uint8(_allowReferral)\n\ndef setName(string _name): # not payable\n  require caller == address(stor12.field_8)\n  name[] = Array(len=_name.length, data=_name[all])\n\ndef setSymbol(string _symbol): # not payable\n  require caller == address(stor12.field_8)\n  symbol[] = Array(len=_symbol.length, data=_symbol[all])\n\ndef setcardPrice(uint256 _card, uint256 _price): # not payable\n  require caller == address(stor12.field_8)\n  require address(stor12.field_8) == cardOwner[_card]\n  cardPrice[_card] = _price\n\ndef addNewcard(uint256 _price): # not payable\n  require caller == address(stor12.field_8)\n  cardPrice[stor11 - 1] = _price\n  cardOwner[stor11 - 1] = address(stor12.field_8)\n  totalCardDivs[stor11 - 1] = 0\n  totalCards++\n\ndef withdraw(): # not payable\n  require 10^15 <= myBalance[caller]\n  myBalance[caller] = 0\n  call caller with:\n     value myBalance[caller] wei\n       gas 2300 * is_zero(value) wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  log onWithdraw(\n        address customerAddress=caller,\n        uint256 ethereumWithdrawn=myBalance[caller])\n\ndef getCardDivShare(uint256 _card): # not payable\n  require _card < totalCards\n  if not stor6[_card]:\n      if totalCardValue:\n          return ((0 / totalCardValue) + 5 / 10)\n  else:\n      if 10^(precisionFactor + 1) * stor6[_card] / stor6[_card] == 10^(precisionFactor + 1):\n          if totalCardValue:\n              return ((10^(precisionFactor + 1) * stor6[_card] / totalCardValue) + 5 / 10)\n  revert\n\ndef getCardDivs(uint256 _card, uint256 _amt): # not payable\n  require _card < totalCards\n  if not stor6[_card]:\n      if totalCardValue:\n          if not (0 / totalCardValue) + 5 / 10:\n              if 10^precisionFactor:\n                  return (0 / 10^precisionFactor)\n          else:\n              if _amt * (0 / totalCardValue) + 5 / 10 / (0 / totalCardValue) + 5 / 10 == _amt:\n                  if 10^precisionFactor:\n                      return (_amt * (0 / totalCardValue) + 5 / 10 / 10^precisionFactor)\n  else:\n      if 10^(precisionFactor + 1) * stor6[_card] / stor6[_card] == 10^(precisionFactor + 1):\n          if totalCardValue:\n              if not (10^(precisionFactor + 1) * stor6[_card] / totalCardValue) + 5 / 10:\n                  if 10^precisionFactor:\n                      return (0 / 10^precisionFactor)\n              else:\n                  if _amt * (10^(precisionFactor + 1) * stor6[_card] / totalCardValue) + 5 / 10 / (10^(precisionFactor + 1) * stor6[_card] / totalCardValue) + 5 / 10 == _amt:\n                      if 10^precisionFactor:\n                          return (_amt * (10^(precisionFactor + 1) * stor6[_card] / totalCardValue) + 5 / 10 / 10^precisionFactor)\n  revert\n\ndef buy(uint256 _amount, address _referredBy) payable: \n  require _amount < totalCards\n  require call.value == cardPrice[_amount]\n  require cardOwner[_amount] != caller\n  if call.value:\n      require stor9 * call.value / call.value == stor9\n      require stor6[_amount] <= stor9 * call.value / 100\n      require (stor9 * call.value / 100) - stor6[_amount] + totalCardValue >= totalCardValue\n      totalCardValue = (stor9 * call.value / 100) - stor6[_amount] + totalCardValue\n      if call.value:\n          require stor9 * call.value / call.value == stor9\n          require stor6[_amount] <= call.value\n          require call.value - stor6[_amount] + totalDivsProduced >= totalDivsProduced\n          totalDivsProduced = call.value - stor6[_amount] + totalDivsProduced\n          if call.value - stor6[_amount]:\n              require (10 * call.value) - (10 * stor6[_amount]) / call.value - stor6[_amount] == 10\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] += stor6[_amount]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              else:\n                                  require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = stor9 * call.value / 100\n                                      cardOwner[_amount] = caller\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 >= totalCards:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if call.value - stor6[_amount]:\n                                      require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = stor9 * call.value / 100\n                                      cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if call.value - stor6[_amount]:\n                                      require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              else:\n                                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = stor9 * call.value / 100\n                                      cardOwner[_amount] = caller\n          else:\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              else:\n                                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = stor9 * call.value / 100\n                                      cardOwner[_amount] = caller\n      else:\n          require stor6[_amount] <= call.value\n          require call.value - stor6[_amount] + totalDivsProduced >= totalDivsProduced\n          totalDivsProduced = call.value - stor6[_amount] + totalDivsProduced\n          if not call.value - stor6[_amount]:\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] += stor6[_amount]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if not stor6[0]:\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                          if totalCardValue:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if caller == _referredBy:\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if not stor6[0]:\n                                          require totalCardValue\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                                  require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if stor6[0]:\n                                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      revert\n                  require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                  if not uint8(stor12.field_0):\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              require totalCardValue\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if caller == _referredBy:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if stor6[0]:\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if _referredBy:\n                      if call.value - stor6[_amount]:\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                  else:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if call.value:\n          else:\n              require (10 * call.value) - (10 * stor6[_amount]) / call.value - stor6[_amount] == 10\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                  else:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              else:\n                                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = 0\n                                      cardOwner[_amount] = caller\n  else:\n      require stor6[_amount] <= 0\n      require -stor6[_amount] + totalCardValue >= totalCardValue\n      totalCardValue -= stor6[_amount]\n      if not call.value:\n          require stor6[_amount] <= call.value\n          require call.value - stor6[_amount] + totalDivsProduced >= totalDivsProduced\n          totalDivsProduced = call.value - stor6[_amount] + totalDivsProduced\n          if call.value - stor6[_amount]:\n              require (10 * call.value) - (10 * stor6[_amount]) / call.value - stor6[_amount] == 10\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] += stor6[_amount]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if not stor6[0]:\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                          if totalCardValue:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if caller == _referredBy:\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if not stor6[0]:\n                                          require totalCardValue\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                                  require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if stor6[0]:\n                                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      revert\n                  require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                  if not uint8(stor12.field_0):\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              require totalCardValue\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if caller == _referredBy:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if stor6[0]:\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if _referredBy:\n                      if call.value - stor6[_amount]:\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                  else:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = 0\n                      cardOwner[_amount] = caller\n                      if call.value:\n          else:\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  if totalCardValue:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = 0\n                          cardOwner[_amount] = caller\n                          if call.value:\n                              require stor9 * call.value / call.value == stor9\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          log oncardPurchase(\n                                address customerAddress=caller,\n                                uint256 incomingEthereum=call.value,\n                                uint256 card=_amount,\n                                uint256 newPrice=0)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] += stor6[_amount]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if not stor6[0]:\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                          if totalCardValue:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0:\n                                          if ((5 * call.value) - (5 * stor6[_amount]) / 100) + myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if not stor6[0]:\n                                          require totalCardValue\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = 0\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40:\n                          if not uint8(stor12.field_0):\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if not stor6[0]:\n                                          if totalCardValue:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      else:\n                                          if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                              if totalCardValue:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = 0\n                                      cardOwner[_amount] = caller\n                                      if not call.value:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if stor9 * call.value / call.value == stor9:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if caller == _referredBy:\n                                  if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                      myBalance[stor4[_amount]] += stor6[_amount]\n                                      call stor17 with:\n                                           gas 2300 wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                      if 0 < totalCards:\n                                          if not stor6[0]:\n                                              require totalCardValue\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = 0\n                                      cardOwner[_amount] = caller\n                                      if not call.value:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if stor9 * call.value / call.value == stor9:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if _referredBy:\n                                      if not call.value - stor6[_amount]:\n                                          require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                          require myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                                      require (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                      myBalance[stor4[_amount]] += stor6[_amount]\n                                      call stor17 with:\n                                           gas 2300 wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                      if 0 < totalCards:\n                                          if stor6[0]:\n                                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = 0\n                                      cardOwner[_amount] = caller\n                                      if not call.value:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if stor9 * call.value / call.value == stor9:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  revert\n              require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n              require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n              totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n              if not call.value - stor6[_amount]:\n                  if not uint8(stor12.field_0):\n                      if stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  if totalCardValue:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                              if not call.value:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor9 * call.value / call.value == stor9:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if caller == _referredBy:\n                          if stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if not stor6[0]:\n                                      require totalCardValue\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                              if not call.value:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor9 * call.value / call.value == stor9:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  require myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = 0\n                              cardOwner[_amount] = caller\n                              if not call.value:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor9 * call.value / call.value == stor9:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  revert\n              require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n              if not uint8(stor12.field_0):\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                  call stor17 with:\n                       gas 2300 wei\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  if 0 < totalCards:\n                      if not stor6[0]:\n                          require totalCardValue\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  stor6[_amount] = call.value\n                  cardPrice[_amount] = 0\n                  cardOwner[_amount] = caller\n                  if not call.value:\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require stor9 * call.value / call.value == stor9\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if caller == _referredBy:\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                  call stor17 with:\n                       gas 2300 wei\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  if 0 < totalCards:\n                      if stor6[0]:\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  stor6[_amount] = call.value\n                  cardPrice[_amount] = 0\n                  cardOwner[_amount] = caller\n                  if not call.value:\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require stor9 * call.value / call.value == stor9\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if _referredBy:\n                  if call.value - stor6[_amount]:\n                      require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                      require (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n              else:\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                  call stor17 with:\n                       gas 2300 wei\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  if 0 < totalCards:\n                      if not stor6[0]:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  stor6[_amount] = call.value\n                  cardPrice[_amount] = 0\n                  cardOwner[_amount] = caller\n                  if call.value:\n      else:\n          require stor9 * call.value / call.value == stor9\n          require stor6[_amount] <= call.value\n          require call.value - stor6[_amount] + totalDivsProduced >= totalDivsProduced\n          totalDivsProduced = call.value - stor6[_amount] + totalDivsProduced\n          if not call.value - stor6[_amount]:\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                              myBalance[stor4[_amount]] += stor6[_amount]\n                              call stor17 with:\n                                   gas 2300 wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if not stor6[0]:\n                                      if totalCardValue:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      if 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1):\n                                          if totalCardValue:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if caller == _referredBy:\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if not stor6[0]:\n                                          require totalCardValue\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require myBalance[address(_referredBy)] >= myBalance[address(_referredBy)]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                                  require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]:\n                                  myBalance[stor4[_amount]] += stor6[_amount]\n                                  call stor17 with:\n                                       gas 2300 wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 < totalCards:\n                                      if stor6[0]:\n                                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                                  if not call.value:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if stor9 * call.value / call.value == stor9:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      revert\n                  require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                  if not uint8(stor12.field_0):\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              require totalCardValue\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if caller == _referredBy:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if stor6[0]:\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if not call.value:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor9 * call.value / call.value == stor9\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if _referredBy:\n                      if call.value - stor6[_amount]:\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                  else:\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                               gas 2300 wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                      call stor17 with:\n                           gas 2300 wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if call.value:\n          else:\n              require (10 * call.value) - (10 * stor6[_amount]) / call.value - stor6[_amount] == 10\n              if not call.value - stor6[_amount]:\n                  require totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  require stor6[_amount] >= 0\n                  if call.value - stor6[_amount]:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  if 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5:\n                                      if (5 * call.value) - (5 * stor6[_amount]) / 100 <= (40 * call.value) - (40 * stor6[_amount]) / 100:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  require totalCardValue\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] += stor6[_amount]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _referredBy:\n                          if not call.value - stor6[_amount]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                          require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor6[_amount] + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                      myBalance[stor4[_amount]] += stor6[_amount]\n                      call stor17 with:\n                         value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      if 0 < totalCards:\n                          if not stor6[0]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      stor6[_amount] = call.value\n                      cardPrice[_amount] = stor9 * call.value / 100\n                      cardOwner[_amount] = caller\n                      if call.value:\n              else:\n                  require (50 * call.value) - (50 * stor6[_amount]) / call.value - stor6[_amount] == 50\n                  require ((50 * call.value) - (50 * stor6[_amount]) / 100) + totalCardDivs[_amount] >= totalCardDivs[_amount]\n                  totalCardDivs[_amount] += (50 * call.value) - (50 * stor6[_amount]) / 100\n                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) >= (50 * call.value) - (50 * stor6[_amount]) / 100\n                  if not call.value - stor6[_amount]:\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                                  require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if not call.value:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor9 * call.value / call.value == stor9\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if caller == _referredBy:\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if _referredBy:\n                              if not call.value - stor6[_amount]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              require (5 * call.value) - (5 * stor6[_amount]) / 100 <= 0\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if stor6[0]:\n                          else:\n                              stor6[_amount] = call.value\n                              cardPrice[_amount] = stor9 * call.value / 100\n                              cardOwner[_amount] = caller\n                  else:\n                      require (40 * call.value) - (40 * stor6[_amount]) / call.value - stor6[_amount] == 40\n                      if not uint8(stor12.field_0):\n                          require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                          myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                          call stor17 with:\n                             value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          if 0 < totalCards:\n                              if not stor6[0]:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require 10^(precisionFactor + 1) * stor6[0] / stor6[0] == 10^(precisionFactor + 1)\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          stor6[_amount] = call.value\n                          cardPrice[_amount] = stor9 * call.value / 100\n                          cardOwner[_amount] = caller\n                          if call.value:\n                      else:\n                          if caller == _referredBy:\n                              require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                              myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                              call stor17 with:\n                                 value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                              if 0 < totalCards:\n                                  if stor6[0]:\n                              else:\n                                  stor6[_amount] = call.value\n                                  cardPrice[_amount] = stor9 * call.value / 100\n                                  cardOwner[_amount] = caller\n                          else:\n                              if _referredBy:\n                                  if not call.value - stor6[_amount]:\n                                      require 0 <= (40 * call.value) - (40 * stor6[_amount]) / 100\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require (5 * call.value) - (5 * stor6[_amount]) / call.value - stor6[_amount] == 5\n                              else:\n                                  require stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]] >= myBalance[stor4[_amount]]\n                                  myBalance[stor4[_amount]] = stor6[_amount] + ((50 * call.value) - (50 * stor6[_amount]) / 100) + myBalance[stor4[_amount]]\n                                  call stor17 with:\n                                     value (10 * call.value) - (10 * stor6[_amount]) / 100 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  if 0 >= totalCards:\n                                      stor6[_amount] = call.value\n                                      cardPrice[_amount] = stor9 * call.value / 100\n                                      cardOwner[_amount] = caller\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n.",
	"status": "1",
	"time_cost": 24.927748918533325,
	"usage": {
		"completion_tokens": 168,
		"prompt_tokens": 32601,
		"total_tokens": 32769
	}
}