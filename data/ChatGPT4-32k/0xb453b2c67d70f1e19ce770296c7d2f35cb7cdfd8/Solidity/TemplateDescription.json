{
	"address": "0xb453b2c67d70f1e19ce770296c7d2f35cb7cdfd8",
	"input_format": "TemplateDescription",
	"ir": "For the function setReferralContract, it has one argument and its type is address.\n  When the administrators of SHA3((caller*0x1000000000000000000000000)) is greater than 0, and referralcontract is 0:\n  - the state variable referralcontract will be updated to the first argument.\n\nFor the function administratorWithdraw, it has one argument and its type is uint256.\n  When the administrators of SHA3((caller*0x1000000000000000000000000)) is greater than 0, and the first argument is not greater than s_20:\n  - the state variable s_20 will be updated to (s_20-the first argument).\n  - it transfers ether valued the first argument to caller.\n\nFor the function activate.\n  When the administrators of SHA3((caller*0x1000000000000000000000000)) is greater than 0, and referralcontract is greater than 0, and activated_ is 0:\n  - the state variable activated_ will be updated to 1.\n  - the state variable rid_ will be updated to 1.\n  - the s_17 of 1 will be updated to current time.\n  When the administrators of SHA3((caller*0x1000000000000000000000000)) is greater than 0, and referralcontract is greater than 0, and activated_ is 0, and (rndinit_+current time) is not smaller than current time:\n  - the s_17 from rid_ to 1 will be updated to (rndinit_+current time).\n\nFor the payable function fallback.\n  When 1 equals to activated_, and the pidxaddr_ of caller is 0:\n  - the pidxaddr_ of caller will be updated to (1+pid_). Afterthat, \n    - the state variable pid_ will be updated to (1+pid_).\n  - the s_16 of (1+pid_) will be updated to 0.\n  When 1 equals to activated_:\n  - the s_16 from the pidxaddr_ of caller to 4 will be updated to 0.\n  When 1 equals to activated_, and the s_16 from (1+pid_) to 4 is 0:\n  - the s_16 of (1+pid_) will be updated to 0.\n  When 1 equals to activated_, and for users, except the s_16 from the pidxaddr_ of caller to 4 equals to rid_, and rid_ is greater than 1:\n  - the s_16 from the pidxaddr_ of caller to 4 will be updated to 0.\n  When 1 equals to activated_, and the s_16 from (1+pid_) to 4 does not equal to rid_, and rid_ is greater than 1:\n  - the s_16 of (1+pid_) will be updated to 0.\n  When 1 equals to activated_, and the s_17 from rid_ to 4 is greater than 0, and pot_ is 0:\n  - the state variable rid_ will be updated to (1+rid_).\n  - the s_17 of (1+rid_) will be updated to current time.\n  When 1 equals to activated_, and the s_17 from rid_ to 4 is greater than 0, and (rndinit_+current time) is not smaller than current time, and pot_ is 0:\n  - the s_17 from rid_ to 1 will be updated to (rndinit_+current time).\n  When 1 equals to activated_, and for users, except the s_16 from the pidxaddr_ of caller to 4 equals to rid_, and the s_17 from the s_16 from the pidxaddr_ of caller to 4 to 3 is greater than 0, and rid_ is greater than 1, and the plyrrnds_ from the pidxaddr_ of caller to the s_16 from the pidxaddr_ of caller to 4 is 0, and the plyrrnds_ from the pidxaddr_ of caller to the s_16 from the pidxaddr_ of caller to 4 is greater than 0:\n  - the s_16 from the pidxaddr_ of caller to 3 will be updated to 0.\n  When 1 equals to activated_, and the s_16 from (1+pid_) to 4 does not equal to rid_, and the s_17 from the s_16 from (1+pid_) to 4 to 3 is greater than 0, and the s_16 from (1+pid_) to 3 is not smaller than the s_16 from (1+pid_) to 3, and rid_ is greater than 1, and the plyrrnds_ from (1+pid_) to the s_16 from (1+pid_) to 4 is 0, and the plyrrnds_ from (1+pid_) to the s_16 from (1+pid_) to 4 is greater than 0:\n  - the s_16 of (1+pid_) will be updated to 0.\n\nFor the function setAdministrator, it has 2 arguments and the type of each argument is as follows: bytes32, bool.\n  When the administrators of SHA3((caller*0x1000000000000000000000000)) is greater than 0:\n  - the administrators of the first argument will be updated to the second argument.\n\nFor the payable function administratorInvest.\n  When the administrators of SHA3((caller*0x1000000000000000000000000)) is greater than 0, and (the ether just received (i.e., msg.value)+s_20) is not smaller than s_20:\n  - the state variable s_20 will be updated to (the ether just received (i.e., msg.value)+s_20).\n\nFor the payable function outerDividend.\n  When 1 equals to activated_, and buyprice is greater than 0, and (0+s_13) is not smaller than s_13, and the ether just received (i.e., msg.value) is 0:\n  - the state variable s_13 will be updated to (0+s_13).\n\nFor the function updateConfigs, it has 9 arguments and the type of each argument is as follows: uint16, uint8, uint8, uint8, uint8, uint256, uint256, uint256, uint256.\n  When the administrators of SHA3((caller*0x1000000000000000000000000)) is greater than 0, and the first argument is not smaller than 0, and the first argument is not greater than 10000, and the second argument is not smaller than 0, and the second argument is not greater than 100, and the third argument is not smaller than 0, and the third argument is not greater than 100, and the fourth argument is not smaller than 0, and the fourth argument is not greater than 100, and the fifth argument is not smaller than 0, and the fifth argument is not greater than 1000, and the first argument is 0:\n  - the state variable sellfee_ will be updated to sellfee_.\n  When the administrators of SHA3((caller*0x1000000000000000000000000)) is greater than 0, and the first argument is not smaller than 0, and the first argument is not greater than 10000, and the second argument is not smaller than 0, and the second argument is not greater than 100, and the third argument is not smaller than 0, and the third argument is not greater than 100, and the fourth argument is not smaller than 0, and the fourth argument is not greater than 100, and the fifth argument is not smaller than 0, and the fifth argument is not greater than 1000, and the first argument is 0, and the second argument is 0:\n  - the state variable luckybonus_ will be updated to luckybonus_.\n  When the administrators of SHA3((caller*0x1000000000000000000000000)) is greater than 0, and the first argument is not smaller than 0, and the first argument is not greater than 10000, and the second argument is not smaller than 0, and the second argument is not greater than 100, and the third argument is not smaller than 0, and the third argument is not greater than 100, and the fourth argument is not smaller than 0, and the fourth argument is not greater than 100, and the fifth argument is not smaller than 0, and the fifth argument is not greater than 1000, and the first argument is 0, and the second argument is 0, and the third argument is 0:\n  - the state variable attenuationfee_ will be updated to attenuationfee_.\n  When the administrators of SHA3((caller*0x1000000000000000000000000)) is greater than 0, and the first argument is not smaller than 0, and the first argument is not greater than 10000, and the second argument is not smaller than 0, and the second argument is not greater than 100, and the third argument is not smaller than 0, and the third argument is not greater than 100, and the fourth argument is not smaller than 0, and the fourth argument is not greater than 100, and the fifth argument is not smaller than 0, and the fifth argument is not greater than 1000, and the first argument is 0, and the second argument is 0, and the third argument is 0, and the fourth argument is 0:\n  - the state variable luckyedge_ will be updated to luckyedge_.\n  When the administrators of SHA3((caller*0x1000000000000000000000000)) is greater than 0, and the first argument is not smaller than 0, and the first argument is not greater than 10000, and the second argument is not smaller than 0, and the second argument is not greater than 100, and the third argument is not smaller than 0, and the third argument is not greater than 100, and the fourth argument is not smaller than 0, and the fourth argument is not greater than 100, and the fifth argument is not smaller than 0, and the fifth argument is not greater than 1000, and the first argument is 0, and the second argument is 0, and the third argument is 0, and the fourth argument is 0, and the fifth argument is 0:\n  - the state variable extensionthreshold_ will be updated to extensionthreshold_.\n  When the administrators of SHA3((caller*0x1000000000000000000000000)) is greater than 0, and the first argument is not smaller than 0, and the first argument is not greater than 10000, and the second argument is not smaller than 0, and the second argument is not greater than 100, and the third argument is not smaller than 0, and the third argument is not greater than 100, and the fourth argument is not smaller than 0, and the fourth argument is not greater than 100, and the fifth argument is not smaller than 0, and the fifth argument is not greater than 1000, and the first argument is 0, and the second argument is 0, and the third argument is 0, and the fourth argument is 0, and the fifth argument is 0, and the sixth argument is greater than 0:\n  - the state variable extensionmin_ will be updated to the sixth argument.\n  When the administrators of SHA3((caller*0x1000000000000000000000000)) is greater than 0, and the first argument is not smaller than 0, and the first argument is not greater than 10000, and the second argument is not smaller than 0, and the second argument is not greater than 100, and the third argument is not smaller than 0, and the third argument is not greater than 100, and the fourth argument is not smaller than 0, and the fourth argument is not greater than 100, and the fifth argument is not smaller than 0, and the fifth argument is not greater than 1000, and the first argument is 0, and the second argument is 0, and the third argument is 0, and the fourth argument is 0, and the fifth argument is 0, and the sixth argument is greater than 0, and the 7-th argument is greater than 0:\n  - the state variable extensionmax_ will be updated to the 7-th argument.\n  When the administrators of SHA3((caller*0x1000000000000000000000000)) is greater than 0, and the first argument is not smaller than 0, and the first argument is not greater than 10000, and the second argument is not smaller than 0, and the second argument is not greater than 100, and the third argument is not smaller than 0, and the third argument is not greater than 100, and the fourth argument is not smaller than 0, and the fourth argument is not greater than 100, and the fifth argument is not smaller than 0, and the fifth argument is not greater than 1000, and the first argument is 0, and the second argument is 0, and the third argument is 0, and the fourth argument is 0, and the fifth argument is 0, and the sixth argument is greater than 0, and the 7-th argument is greater than 0, and the 8-th argument is 0:\n  - the state variable rndinit_ will be updated to rndinit_.\n  When the administrators of SHA3((caller*0x1000000000000000000000000)) is greater than 0, and the first argument is not smaller than 0, and the first argument is not greater than 10000, and the second argument is not smaller than 0, and the second argument is not greater than 100, and the third argument is not smaller than 0, and the third argument is not greater than 100, and the fourth argument is not smaller than 0, and the fourth argument is not greater than 100, and the fifth argument is not smaller than 0, and the fifth argument is not greater than 1000, and the first argument is 0, and the second argument is 0, and the third argument is 0, and the fourth argument is 0, and the fifth argument is 0, and the sixth argument is greater than 0, and the 7-th argument is greater than 0, and the 8-th argument is 0, and the 9-th argument is greater than 0:\n  - the state variable rndinc_ will be updated to the 9-th argument.\n\nFor the function withdraw.\n  When 1 equals to activated_, and the pidxaddr_ of caller is greater than 0, and pot_ is greater than 0, and ((luckyedge_*pot_)/pot_) equals to luckyedge_, and the s_17 from rid_ to 4 is not greater than ((luckyedge_*pot_)/100), and before the s_17 from rid_ to 1, and the s_16 from the pidxaddr_ of caller to 4 is greater than 0, and rid_ is greater than 1, and the s_16 from the pidxaddr_ of caller to 4 equals to rid_, and the s_16 from the pidxaddr_ of caller to 1 is greater than 0, and ((s_13*the s_16 from the pidxaddr_ of caller to 1)/the s_16 from the pidxaddr_ of caller to 1) equals to s_13, and (((s_13*the s_16 from the pidxaddr_ of caller to 1)/0xde0b6b3a7640000)-the s_16 from the pidxaddr_ of caller to 2) is greater than 0:\n  - the s_16 from the pidxaddr_ of caller to 2 will be updated to 0.\n  When 1 equals to activated_, and the pidxaddr_ of caller is greater than 0, and pot_ is greater than 0, and ((luckyedge_*pot_)/pot_) equals to luckyedge_, and the s_17 from rid_ to 4 is not greater than ((luckyedge_*pot_)/100), and before the s_17 from rid_ to 1, and the s_16 from the pidxaddr_ of caller to 4 is greater than 0, and rid_ is greater than 1, and the s_16 from the pidxaddr_ of caller to 4 equals to rid_, and the s_16 from the pidxaddr_ of caller to 1 is greater than 0, and ((s_13*the s_16 from the pidxaddr_ of caller to 1)/the s_16 from the pidxaddr_ of caller to 1) equals to s_13, and (((s_13*the s_16 from the pidxaddr_ of caller to 1)/0xde0b6b3a7640000)-the s_16 from the pidxaddr_ of caller to 2) is greater than 0, and the s_16 from the pidxaddr_ of caller to 3 is not greater than 0, and (the s_16 from the pidxaddr_ of caller to 3+(((s_13*the s_16 from the pidxaddr_ of caller to 1)/0xde0b6b3a7640000)-the s_16 from the pidxaddr_ of caller to 2)) is not smaller than (((s_13*the s_16 from the pidxaddr_ of caller to 1)/0xde0b6b3a7640000)-the s_16 from the pidxaddr_ of caller to 2), and (the s_16 from the pidxaddr_ of caller to 3+(((s_13*the s_16 from the pidxaddr_ of caller to 1)/0xde0b6b3a7640000)-the s_16 from the pidxaddr_ of caller to 2)) is greater than 0:\n  - it transfers ether valued (the s_16 from the pidxaddr_ of caller to 3+(((s_13*the s_16 from the pidxaddr_ of caller to 1)/0xde0b6b3a7640000)-the s_16 from the pidxaddr_ of caller to 2)) to the s_16 of the pidxaddr_ of caller.\n  When 1 equals to activated_, and the pidxaddr_ of caller is greater than 0, and pot_ is greater than 0, and ((luckyedge_*pot_)/pot_) equals to luckyedge_, and the s_17 from rid_ to 4 is not greater than ((luckyedge_*pot_)/100), and before the s_17 from rid_ to 1, and rid_ is greater than 1, and for users, except the s_16 from the pidxaddr_ of caller to 4 equals to rid_, and the plyrrnds_ from the pidxaddr_ of caller to the s_16 from the pidxaddr_ of caller to 4 is not greater than 0, and the s_16 from the pidxaddr_ of caller to 1 is greater than 0, and ((s_13*the s_16 from the pidxaddr_ of caller to 1)/the s_16 from the pidxaddr_ of caller to 1) equals to s_13, and the s_16 from the pidxaddr_ of caller to 4 equals to rid_, and (((s_13*the s_16 from the pidxaddr_ of caller to 1)/0xde0b6b3a7640000)-the s_16 from the pidxaddr_ of caller to 2) is greater than 0:\n  - the s_16 from the pidxaddr_ of caller to 4 will be updated to 0.\n  When 1 equals to activated_, and the pidxaddr_ of caller is greater than 0, and pot_ is greater than 0, and ((luckyedge_*pot_)/pot_) equals to luckyedge_, and the s_17 from rid_ to 4 is greater than ((luckyedge_*pot_)/100), and 0 is smaller than the s_17 from rid_ to 2:\n  - the state variable rid_ will be updated to (1+rid_).\n  - the s_17 of (1+rid_) will be updated to current time.\n  When 1 equals to activated_, and the pidxaddr_ of caller is greater than 0, and pot_ is greater than 0, and ((luckyedge_*pot_)/pot_) equals to luckyedge_, and the s_17 from rid_ to 4 is greater than ((luckyedge_*pot_)/100), and 0 is smaller than the s_17 from rid_ to 2, and (rndinit_+current time) is not smaller than current time:\n  - the s_17 from rid_ to 1 will be updated to (rndinit_+current time).\n\nFor the function sell, it has one argument and its type is uint256.\n  When 1 equals to activated_, and the pidxaddr_ of caller is greater than 0, and pot_ is greater than 0, and ((luckyedge_*pot_)/pot_) equals to luckyedge_, and the s_17 from rid_ to 4 is not greater than ((luckyedge_*pot_)/100), and before the s_17 from rid_ to 1, and the s_16 from the pidxaddr_ of caller to 4 is greater than 0, and rid_ is greater than 1, and the s_16 from the pidxaddr_ of caller to 4 equals to rid_, and the first argument is not greater than the s_16 from the pidxaddr_ of caller to 1, and ((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2) is not greater than (the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400)), and the s_16 from the pidxaddr_ of caller to 5 is not greater than current time, and ((current time-the s_16 from the pidxaddr_ of caller to 5)/0x15180) is 0, and sellfee_ is greater than 0, and (0/sellfee_) equals to 0, and (0/100) is not greater than sellfee_, and (((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000) is greater than 0, and (((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000)) equals to (sellfee_-(0/100)), and (((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/10000) is not greater than (((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000), and the first argument is not greater than buyprice:\n  - the state variable buyprice will be updated to (buyprice-the first argument).\n  When 1 equals to activated_, and the pidxaddr_ of caller is greater than 0, and pot_ is greater than 0, and ((luckyedge_*pot_)/pot_) equals to luckyedge_, and the s_17 from rid_ to 4 is not greater than ((luckyedge_*pot_)/100), and before the s_17 from rid_ to 1, and the s_16 from the pidxaddr_ of caller to 4 is greater than 0, and rid_ is greater than 1, and the s_16 from the pidxaddr_ of caller to 4 equals to rid_, and the first argument is not greater than the s_16 from the pidxaddr_ of caller to 1, and ((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2) is not greater than (the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400)), and the s_16 from the pidxaddr_ of caller to 5 is not greater than current time, and ((current time-the s_16 from the pidxaddr_ of caller to 5)/0x15180) is 0, and sellfee_ is greater than 0, and (0/sellfee_) equals to 0, and (0/100) is not greater than sellfee_, and (((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000) is greater than 0, and (((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000)) equals to (sellfee_-(0/100)), and (((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/10000) is not greater than (((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000), and the first argument is not greater than buyprice, and s_13 is greater than 0, and ((the first argument*s_13)/s_13) equals to the first argument, and (((the first argument*s_13)/0xde0b6b3a7640000)+((((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000)-(((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/10000))) is not smaller than ((((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000)-(((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/10000)), and buyprice is greater than 0, and (((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/10000) is greater than 0, and ((0xde0b6b3a7640000*(((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/10000))/(((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/10000)) equals to 0xde0b6b3a7640000, and buyprice is greater than 0, and (((0xde0b6b3a7640000*(((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/10000))/buyprice)+s_13) is not smaller than s_13:\n  - the state variable s_13 will be updated to (((0xde0b6b3a7640000*(((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/10000))/buyprice)+s_13).\n  When 1 equals to activated_, and the pidxaddr_ of caller is greater than 0, and pot_ is greater than 0, and ((luckyedge_*pot_)/pot_) equals to luckyedge_, and the s_17 from rid_ to 4 is not greater than ((luckyedge_*pot_)/100), and before the s_17 from rid_ to 1, and the s_16 from the pidxaddr_ of caller to 4 is greater than 0, and rid_ is greater than 1, and the s_16 from the pidxaddr_ of caller to 4 equals to rid_, and the first argument is not greater than the s_16 from the pidxaddr_ of caller to 1, and ((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2) is not greater than (the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400)), and the s_16 from the pidxaddr_ of caller to 5 is not greater than current time, and ((current time-the s_16 from the pidxaddr_ of caller to 5)/0x15180) is 0, and sellfee_ is greater than 0, and (0/sellfee_) equals to 0, and (0/100) is not greater than sellfee_, and (((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000) is greater than 0, and (((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000)) equals to (sellfee_-(0/100)), and (((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/10000) is not greater than (((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000), and the first argument is not greater than buyprice, and s_13 is greater than 0, and ((the first argument*s_13)/s_13) equals to the first argument, and (((the first argument*s_13)/0xde0b6b3a7640000)+((((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000)-(((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/10000))) is not smaller than ((((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000)-(((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/10000)):\n  - the s_16 from the pidxaddr_ of caller to 1 will be updated to 0.\n  When 1 equals to activated_, and the pidxaddr_ of caller is greater than 0, and pot_ is greater than 0, and ((luckyedge_*pot_)/pot_) equals to luckyedge_, and the s_17 from rid_ to 4 is not greater than ((luckyedge_*pot_)/100), and before the s_17 from rid_ to 1, and rid_ is greater than 1, and for users, except the s_16 from the pidxaddr_ of caller to 4 equals to rid_, and the plyrrnds_ from the pidxaddr_ of caller to the s_16 from the pidxaddr_ of caller to 4 is greater than 0, and the s_17 from the s_16 from the pidxaddr_ of caller to 4 to 3 is not greater than 0, and the first argument is not greater than the s_16 from the pidxaddr_ of caller to 1, and ((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2) is not greater than (the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400)), and the s_16 from the pidxaddr_ of caller to 5 is not greater than current time, and ((current time-the s_16 from the pidxaddr_ of caller to 5)/0x15180) is 0, and sellfee_ is greater than 0, and (0/sellfee_) equals to 0, and (0/100) is not greater than sellfee_, and (((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000) is greater than 0, and (((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000)) equals to (sellfee_-(0/100)), and (((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/10000) is not greater than (((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000), and the first argument is not greater than buyprice, and s_13 is greater than 0, and ((the first argument*s_13)/s_13) equals to the first argument, and (((the first argument*s_13)/0xde0b6b3a7640000)+((((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000)-(((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/10000))) is not smaller than ((((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000)-(((sellfee_-(0/100))*(((the first argument*((0x2540be400*((0xde0b6b3a7640000+buyprice)/0xde0b6b3a7640000))+0x14f46b0400))-((0x2540be400*((((0xde0b6b3a7640000+the first argument) EXP 2-the first argument)+0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000)/0xde0b6b3a7640000))/2))/0xde0b6b3a7640000))/10000)):\n  - the s_16 from the pidxaddr_ of caller to 4 will be updated to 0.\n  When 1 equals to activated_, and the pidxaddr_ of caller is greater than 0, and pot_ is greater than 0, and ((luckyedge_*pot_)/pot_) equals to luckyedge_, and the s_17 from rid_ to 4 is greater than ((luckyedge_*pot_)/100), and 0 is smaller than the s_17 from rid_ to 2:\n  - the state variable rid_ will be updated to (1+rid_).\n  - the s_17 of (1+rid_) will be updated to current time.\n  When 1 equals to activated_, and the pidxaddr_ of caller is greater than 0, and pot_ is greater than 0, and ((luckyedge_*pot_)/pot_) equals to luckyedge_, and the s_17 from rid_ to 4 is greater than ((luckyedge_*pot_)/100), and 0 is smaller than the s_17 from rid_ to 2, and (rndinit_+current time) is not smaller than current time:\n  - the s_17 from rid_ to 1 will be updated to (rndinit_+current time).\n\n",
	"language": "Solidity",
	"status": "Request timed out: HTTPSConnectionPool(host='sotels-openai.openai.azure.com', port=443): Read timed out. (read timeout=600)"
}