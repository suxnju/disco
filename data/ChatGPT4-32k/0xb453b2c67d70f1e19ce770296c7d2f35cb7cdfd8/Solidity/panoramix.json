{
	"address": "0xb453b2c67d70f1e19ce770296c7d2f35cb7cdfd8",
	"input_format": "DecompiledCode",
	"ir": "# Palkeoramix decompiler. \n\nconst totalEthereumBalance = eth.balance(this.address)\n\ndef storage:\n  referralContractAddress is address at storage 0\n  name is array of uint256 at storage 1\n  symbol is array of uint256 at storage 2\n  luckyBonus_ is uint8 at storage 3 offset 16\n  attenuationFee_ is uint8 at storage 3 offset 24\n  luckyEdge_ is uint8 at storage 3 offset 32\n  extensionThreshold_ is uint8 at storage 3 offset 40\n  stor3 is uint16 at storage 3\n  stor3 is uint256 at storage 3 offset 40\n  stor3 is uint256 at storage 3 offset 32\n  stor3 is uint256 at storage 3 offset 24\n  stor3 is uint256 at storage 3 offset 16\n  extensionMin_ is uint256 at storage 4\n  extensionMax_ is uint256 at storage 5\n  rndInit_ is uint256 at storage 6\n  rndInc_ is uint256 at storage 7\n  pID_ is uint256 at storage 8\n  rID_ is uint256 at storage 9\n  keySupply_ is uint256 at storage 10\n  pot_ is uint256 at storage 12\n  stor13 is uint256 at storage 13\n  luckyRounds_ is uint256 at storage 14\n  pIDxAddr_ is mapping of uint256 at storage 15\n  stor16 is mapping of struct at storage 16\n  round_ is mapping of struct at storage 17\n  plyrRnds_ is mapping of uint256 at storage 18\n  stor19 is mapping of uint8 at storage 19\n  stor20 is uint256 at storage 20\n  stor21 is uint8 at storage 21\n\ndef rndInc_(): # not payable\n  return rndInc_\n\ndef name(): # not payable\n  return name[0 len name.length]\n\ndef luckyRounds_(): # not payable\n  return luckyRounds_\n\ndef pIDxAddr_(address _param1): # not payable\n  return pIDxAddr_[_param1]\n\ndef extensionMin_(): # not payable\n  return extensionMin_\n\ndef getReferralContract(): # not payable\n  return referralContractAddress\n\ndef round_(uint256 _param1): # not payable\n  return round_[_param1].field_0, \n         round_[_param1].field_256,\n         round_[_param1].field_512,\n         round_[_param1].field_768,\n         round_[_param1].field_1024\n\ndef attenuationFee_(): # not payable\n  return attenuationFee_\n\ndef luckyEdge_(): # not payable\n  return luckyEdge_\n\ndef administrators(bytes32 _param1): # not payable\n  return bool(stor19[_param1])\n\ndef rndInit_(): # not payable\n  return rndInit_\n\ndef luckyBonus_(): # not payable\n  return luckyBonus_\n\ndef pot_(): # not payable\n  return pot_\n\ndef pID_(): # not payable\n  return pID_\n\ndef rID_(): # not payable\n  return rID_\n\ndef extensionThreshold_(): # not payable\n  return extensionThreshold_\n\ndef extensionMax_(): # not payable\n  return extensionMax_\n\ndef keySupply_(): # not payable\n  return keySupply_\n\ndef symbol(): # not payable\n  return symbol[0 len symbol.length]\n\ndef plyrRnds_(uint256 _param1, uint256 _param2): # not payable\n  return plyrRnds_[_param1][_param2]\n\n#\n#  Regular functions\n#\n\ndef administratorInvest() payable: \n  require stor19[caller]\n  if call.value + stor20 < stor20:\n      revert with 0, 'SafeMath add failed'\n  stor20 += call.value\n\ndef setAdministrator(bytes32 _identifier, bool _status): # not payable\n  require stor19[caller]\n  stor19[_identifier] = uint8(_status)\n\ndef setReferralContract(address _referral): # not payable\n  require stor19[caller]\n  if referralContractAddress:\n      revert with 0, 'silly dev, you already did that'\n  referralContractAddress = _referral\n\ndef calcLuckEdge(): # not payable\n  if not pot_:\n      return 0\n  if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n      revert with 0, 'SafeMath mul failed'\n  return (luckyEdge_ * pot_ / 100)\n\ndef administratorWithdraw(uint256 _eth): # not payable\n  require stor19[caller]\n  require _eth <= stor20\n  stor20 -= _eth\n  call caller with:\n     value _eth wei\n       gas 2300 * is_zero(value) wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n\ndef activate(): # not payable\n  require stor19[caller]\n  if not referralContractAddress:\n      revert with 0, 'must link to Referral Contract'\n  if stor21:\n      revert with 0, 'already activated'\n  stor21 = 1\n  rID_ = 1\n  round_[1].field_0 = block.timestamp\n  if rndInit_ + block.timestamp < block.timestamp:\n      revert with 0, 'SafeMath add failed'\n  round_[stor9].field_256 = rndInit_ + block.timestamp\n  log onActive()\n\ndef getPlayerDividends(uint256 _pID): # not payable\n  if not stor16[_pID].field_256:\n      return -stor16[_pID].field_512\n  if stor13 * stor16[_pID].field_256 / stor16[_pID].field_256 != stor13:\n      revert with 0, 'SafeMath mul failed'\n  return ((stor13 * stor16[_pID].field_256 / 10^18) - stor16[_pID].field_512)\n\ndef calcRoundEarnings(uint256 _pID, uint256 _rID): # not payable\n  if not plyrRnds_[_pID][_rID]:\n      return 0\n  if round_[_rID].field_768 * plyrRnds_[_pID][_rID] / plyrRnds_[_pID][_rID] != round_[_rID].field_768:\n      revert with 0, 'SafeMath mul failed'\n  return (round_[_rID].field_768 * plyrRnds_[_pID][_rID] / 10^18)\n\ndef outerDividend() payable: \n  if bool(stor21) != 1:\n      revert with 0, 'its not ready yet.'\n  if not call.value:\n      require keySupply_\n      if (0 / keySupply_) + stor13 < stor13:\n          revert with 0, 'SafeMath add failed'\n      stor13 += 0 / keySupply_\n  else:\n      if 10^18 * call.value / call.value != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      require keySupply_\n      if (10^18 * call.value / keySupply_) + stor13 < stor13:\n          revert with 0, 'SafeMath add failed'\n      stor13 += 10^18 * call.value / keySupply_\n  log onOuterDividend(uint256 _dividends=call.value)\n\ndef getBuyPrice(uint256 shares): # not payable\n  s = (2000000000000000000000 * 10^18 * keySupply_) + (100 * 10^18 * keySupply_^2) + 0x309e096a54d3038b54a64e145bcc16bdc0c722e400000000000001 / 2\n  t = (2000000000000000000000 * 10^18 * keySupply_) + (100 * 10^18 * keySupply_^2) + 0x309e096a54d3038b54a64e145bcc16bdc0c722e400000000000000\n  while s < t:\n      require s\n      if s + ((2000000000000000000000 * 10^18 * keySupply_) + (100 * 10^18 * keySupply_^2) + 0x309e096a54d3038b54a64e145bcc16bdc0c722e400000000000000 / s) < (2000000000000000000000 * 10^18 * keySupply_) + (100 * 10^18 * keySupply_^2) + 0x309e096a54d3038b54a64e145bcc16bdc0c722e400000000000000 / s:\n          revert with 0, 'SafeMath add failed'\n      s = s + ((2000000000000000000000 * 10^18 * keySupply_) + (100 * 10^18 * keySupply_^2) + 0x309e096a54d3038b54a64e145bcc16bdc0c722e400000000000000 / s) / 2\n      t = s\n      continue \n  if 100000000000 * 10^18 > t:\n      revert with 0, 'SafeMath sub failed'\n  if not shares:\n      if (t - 100000000000 * 10^18 / 10^10) - keySupply_:\n          return (0 / (t - 100000000000 * 10^18 / 10^10) - keySupply_)\n  else:\n      if 10^18 * shares / shares != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (t - 100000000000 * 10^18 / 10^10) - keySupply_:\n          return (10^18 * shares / (t - 100000000000 * 10^18 / 10^10) - keySupply_)\n  ('iszero', ('add', ('div', ('add', -100000000000000000000000000000, ('var', 2)), 10000000000), ('mul', -1, ('stor', ('name', 'keySupply_', 10)))))\n  revert\n\ndef updateConfigs(uint16 _sellFee, uint8 _luckyBonus, uint8 _attenuationFee, uint8 _luckyEdge, uint8 _extensionThreshold, uint256 _extensionMin, uint256 _extensionMax, uint256 _rndInit, uint256 _rndInc): # not payable\n  require stor19[caller]\n  if _sellFee < 0:\n      revert with 0, 'out of range.'\n  if _sellFee > 10000:\n      revert with 0, 'out of range.'\n  if _luckyBonus < 0:\n      revert with 0, 'out of range.'\n  if _luckyBonus > 100:\n      revert with 0, 'out of range.'\n  if _attenuationFee < 0:\n      revert with 0, 'out of range.'\n  if _attenuationFee > 100:\n      revert with 0, 'out of range.'\n  if _luckyEdge < 0:\n      revert with 0, 'out of range.'\n  if _luckyEdge > 100:\n      revert with 0, 'out of range.'\n  if _extensionThreshold < 0:\n      revert with 0, 'out of range.'\n  if _extensionThreshold > 1000:\n      revert with 0, 'out of range.'\n  if _sellFee:\n      uint16(stor3.field_0) = _sellFee\n  if not _luckyBonus:\n      Mask(240, 0, stor3.field_16) = luckyBonus_\n  else:\n      luckyBonus_ = _luckyBonus\n  if not _attenuationFee:\n      Mask(232, 0, stor3.field_24) = attenuationFee_\n  else:\n      attenuationFee_ = _attenuationFee\n  if not _luckyEdge:\n      Mask(224, 0, stor3.field_32) = luckyEdge_\n  else:\n      luckyEdge_ = _luckyEdge\n  if not _extensionThreshold:\n      Mask(216, 0, stor3.field_40) = extensionThreshold_\n  else:\n      extensionThreshold_ = _extensionThreshold\n  if _extensionMin:\n      extensionMin_ = _extensionMin\n  if _extensionMax:\n      extensionMax_ = _extensionMax\n  if _rndInit:\n      rndInit_ = _rndInit\n  if _rndInc:\n      rndInc_ = _rndInc\n\ndef getSellPrice(uint256 shares): # not payable\n  if shares > keySupply_:\n      revert with 0, 'exceeded the maximum'\n  if 10^10 * (shares + 10^18)^2 + -shares - 10^18 / 10^18 / 2 > (25 * 10^6 * 3600 * shares) + (10^10 * keySupply_ + 10^18 / 10^18 * shares):\n      revert with 0, 'SafeMath sub failed'\n  if not (25 * 10^6 * 3600 * shares) + (10^10 * keySupply_ + 10^18 / 10^18 * shares) - (10^10 * (shares + 10^18)^2 + -shares - 10^18 / 10^18 / 2) / 10^18:\n      if 0 > (25 * 10^6 * 3600 * shares) + (10^10 * keySupply_ + 10^18 / 10^18 * shares) - (10^10 * (shares + 10^18)^2 + -shares - 10^18 / 10^18 / 2) / 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return ((25 * 10^6 * 3600 * shares) + (10^10 * keySupply_ + 10^18 / 10^18 * shares) - (10^10 * (shares + 10^18)^2 + -shares - 10^18 / 10^18 / 2) / 10^18)\n  if uint16(stor3.field_0) * (25 * 10^6 * 3600 * shares) + (10^10 * keySupply_ + 10^18 / 10^18 * shares) - (10^10 * (shares + 10^18)^2 + -shares - 10^18 / 10^18 / 2) / 10^18 / (25 * 10^6 * 3600 * shares) + (10^10 * keySupply_ + 10^18 / 10^18 * shares) - (10^10 * (shares + 10^18)^2 + -shares - 10^18 / 10^18 / 2) / 10^18 != uint16(stor3.field_0):\n      revert with 0, 'SafeMath mul failed'\n  if uint16(stor3.field_0) * (25 * 10^6 * 3600 * shares) + (10^10 * keySupply_ + 10^18 / 10^18 * shares) - (10^10 * (shares + 10^18)^2 + -shares - 10^18 / 10^18 / 2) / 10^18 / 10000 > (25 * 10^6 * 3600 * shares) + (10^10 * keySupply_ + 10^18 / 10^18 * shares) - (10^10 * (shares + 10^18)^2 + -shares - 10^18 / 10^18 / 2) / 10^18:\n      revert with 0, 'SafeMath sub failed'\n  return (((25 * 10^6 * 3600 * shares) + (10^10 * keySupply_ + 10^18 / 10^18 * shares) - (10^10 * (shares + 10^18)^2 + -shares - 10^18 / 10^18 / 2) / 10^18) - (uint16(stor3.field_0) * (25 * 10^6 * 3600 * shares) + (10^10 * keySupply_ + 10^18 / 10^18 * shares) - (10^10 * (shares + 10^18)^2 + -shares - 10^18 / 10^18 / 2) / 10^18 / 10000))\n\ndef reLoad(): # not payable\n  if bool(stor21) != 1:\n      revert with 0, 'its not ready yet.'\n  if pIDxAddr_[caller]:\n      if not pot_:\n          if round_[stor9].field_1024 > 0:\n              if 0 >= round_[stor9].field_512:\n                  rID_++\n                  round_[stor9 + 1].field_0 = block.timestamp\n                  if rndInit_ + block.timestamp < block.timestamp:\n                      revert with 0, 'SafeMath add failed'\n                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                  if stor16[stor15[caller]].field_1024:\n                      if rID_ <= 1:\n                          if stor16[stor15[caller]].field_256:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                          else:\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                      else:\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                          if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                  else:\n                      stor16[stor15[caller]].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor15[caller]].field_256:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n              else:\n                  if not pot_:\n                      if round_[stor9].field_1024 > 0:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if stor16[stor15[caller]].field_1024:\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                          else:\n                              stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 >= 50000 * 10^18:\n                                      if round_[stor9].field_1024 < 75000 * 10^18:\n                                  else:\n                                      if pot_:\n                                          if 20 * pot_ / pot_ != 20:\n                                              revert with 0, 'SafeMath mul failed'\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                          else:\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                  else:\n                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if stor16[stor15[caller]].field_1024:\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                          else:\n                              stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 >= 50000 * 10^18:\n                                      if round_[stor9].field_1024 >= 75000 * 10^18:\n                                  else:\n                                      if pot_:\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if not stor16[stor15[caller]].field_1024:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n          else:\n              if block.timestamp <= round_[stor9].field_256:\n                  if stor16[stor15[caller]].field_1024:\n                      if rID_ <= 1:\n                          if not stor16[stor15[caller]].field_256:\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if -stor16[stor15[caller]].field_512 <= 0:\n                                      if stor16[stor15[caller]].field_768 > 0:\n                                          stor16[stor15[caller]].field_768 = 0\n                              else:\n                                  if stor16[stor15[caller]].field_1024 <= 0:\n                                      if -stor16[stor15[caller]].field_512 <= 0:\n                                  else:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] > 0:\n                          else:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if (stor13 * stor16[stor15[caller]].field_256 / 10^18) - stor16[stor15[caller]].field_512 <= 0:\n                              else:\n                                  if stor16[stor15[caller]].field_1024 > 0:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] > 0:\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                                      if stor16[stor15[caller]].field_1024 > 0:\n                              else:\n                                  if stor16[stor15[caller]].field_1024 == rID_:\n                                      if -stor16[stor15[caller]].field_512 <= 0:\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 > 0:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] > 0:\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                          if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if stor16[stor15[caller]].field_1024 != rID_:\n                                  else:\n                                      if not plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18) + stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor15[caller]].field_768 += round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18\n                                      stor16[stor15[caller]].field_1024 = rID_\n                  else:\n                      stor16[stor15[caller]].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor15[caller]].field_256:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor16[stor15[caller]].field_1024 != rID_:\n                                  if stor16[stor15[caller]].field_1024 > 0:\n                          else:\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if -stor16[stor15[caller]].field_512 <= 0:\n                              else:\n                                  if stor16[stor15[caller]].field_1024 > 0:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] > 0:\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                              if stor16[stor15[caller]].field_1024 != rID_:\n                                  if stor16[stor15[caller]].field_1024 > 0:\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                          if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if not plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18) + stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor15[caller]].field_768 += round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18\n                                      stor16[stor15[caller]].field_1024 = rID_\n              else:\n                  if 0 >= round_[stor9].field_512:\n                      rID_++\n                      round_[stor9 + 1].field_0 = block.timestamp\n                      if rndInit_ + block.timestamp < block.timestamp:\n                          revert with 0, 'SafeMath add failed'\n                      round_[stor9].field_256 = rndInit_ + block.timestamp\n                      if stor16[stor15[caller]].field_1024:\n                          if rID_ <= 1:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                          if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                          if stor16[stor15[caller]].field_256:\n                      else:\n                          stor16[stor15[caller]].field_1024 = rID_\n                          if rID_ <= 1:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                  else:\n                                      if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                  revert with 0, 'SafeMath mul failed'\n                  else:\n                      if pot_:\n                          if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                              revert with 0, 'SafeMath mul failed'\n                          if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if not stor16[stor15[caller]].field_1024:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 < 50000 * 10^18:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor15[caller]].field_1024:\n                                      if rID_ > 1:\n                                          if stor16[stor15[caller]].field_1024 != rID_:\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if rID_ > 1:\n                      else:\n                          if round_[stor9].field_1024 > 0:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                          else:\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 >= 50000 * 10^18:\n                                          if round_[stor9].field_1024 >= 75000 * 10^18:\n                                      else:\n                                          if pot_:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if not stor16[stor15[caller]].field_1024:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n      else:\n          if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n              revert with 0, 'SafeMath mul failed'\n          if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n              if 0 >= round_[stor9].field_512:\n                  rID_++\n                  round_[stor9 + 1].field_0 = block.timestamp\n                  if rndInit_ + block.timestamp < block.timestamp:\n                      revert with 0, 'SafeMath add failed'\n                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                  if stor16[stor15[caller]].field_1024:\n                      if rID_ <= 1:\n                          if stor16[stor15[caller]].field_256:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                  else:\n                      stor16[stor15[caller]].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor15[caller]].field_256:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                  else:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n              else:\n                  if pot_:\n                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if not stor16[stor15[caller]].field_1024:\n                              stor16[stor15[caller]].field_1024 = rID_\n                          if rID_ > 1:\n                              if stor16[stor15[caller]].field_1024 != rID_:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 < 50000 * 10^18:\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                  else:\n                      if round_[stor9].field_1024 > 0:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if stor16[stor15[caller]].field_1024:\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                          else:\n                              stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 >= 50000 * 10^18:\n                                      if round_[stor9].field_1024 >= 75000 * 10^18:\n                                  else:\n                                      if pot_:\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if not stor16[stor15[caller]].field_1024:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n          else:\n              if block.timestamp <= round_[stor9].field_256:\n                  if stor16[stor15[caller]].field_1024:\n                      if rID_ <= 1:\n                          if stor16[stor15[caller]].field_256:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor16[stor15[caller]].field_1024 != rID_:\n                                  if stor16[stor15[caller]].field_1024 > 0:\n                          else:\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if -stor16[stor15[caller]].field_512 <= 0:\n                              else:\n                                  if stor16[stor15[caller]].field_1024 > 0:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] > 0:\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                              if stor16[stor15[caller]].field_1024 != rID_:\n                                  if stor16[stor15[caller]].field_1024 > 0:\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                          if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if not plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18) + stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor15[caller]].field_768 += round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18\n                                      stor16[stor15[caller]].field_1024 = rID_\n                  else:\n                      stor16[stor15[caller]].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor15[caller]].field_256:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                          if stor16[stor15[caller]].field_1024 != rID_:\n                              if stor16[stor15[caller]].field_1024 > 0:\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                              else:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                                      if stor16[stor15[caller]].field_1024 > 0:\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                          if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                      else:\n                                  else:\n                                      if not plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18) + stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor15[caller]].field_768 += round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18\n                                      stor16[stor15[caller]].field_1024 = rID_\n              else:\n                  if 0 < round_[stor9].field_512:\n                      if pot_:\n                          if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                              revert with 0, 'SafeMath mul failed'\n                          if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 < 50000 * 10^18:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor15[caller]].field_1024:\n                                      if rID_ > 1:\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                      else:\n                          if round_[stor9].field_1024 > 0:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if not stor16[stor15[caller]].field_1024:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 < 50000 * 10^18:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor15[caller]].field_1024:\n                                      if rID_ > 1:\n                                          if stor16[stor15[caller]].field_1024 != rID_:\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if rID_ > 1:\n                  else:\n                      rID_++\n                      round_[stor9 + 1].field_0 = block.timestamp\n                      if rndInit_ + block.timestamp < block.timestamp:\n                          revert with 0, 'SafeMath add failed'\n                      round_[stor9].field_256 = rndInit_ + block.timestamp\n                      if stor16[stor15[caller]].field_1024:\n                          if rID_ <= 1:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                  else:\n                                      if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          stor16[stor15[caller]].field_1024 = rID_\n                          if rID_ <= 1:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                  else:\n                                      if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                  revert with 0, 'SafeMath mul failed'\n  else:\n      pID_++\n      pIDxAddr_[caller] = pID_ + 1\n      stor16[stor8 + 1].field_0 = caller\n      if not pot_:\n          if round_[stor9].field_1024 > 0:\n              if 0 >= round_[stor9].field_512:\n                  rID_++\n                  round_[stor9 + 1].field_0 = block.timestamp\n                  if rndInit_ + block.timestamp < block.timestamp:\n                      revert with 0, 'SafeMath add failed'\n                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                  if stor16[stor8 + 1].field_1024:\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if stor16[stor8 + 1].field_256:\n                                      if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 > 0:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if stor16[stor8 + 1].field_256:\n                  else:\n                      stor16[stor8 + 1].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if stor16[stor8 + 1].field_256:\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                  else:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n              else:\n                  if pot_:\n                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if not stor16[stor8 + 1].field_1024:\n                              stor16[stor8 + 1].field_1024 = rID_\n                          if rID_ > 1:\n                              if stor16[stor8 + 1].field_1024 != rID_:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 < 50000 * 10^18:\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ > 1:\n                  else:\n                      if round_[stor9].field_1024 > 0:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if stor16[stor8 + 1].field_1024:\n                              if rID_ > 1:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                          stor16[stor8 + 1].field_1024 = rID_\n                                      else:\n                          else:\n                              stor16[stor8 + 1].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 >= 50000 * 10^18:\n                                      if round_[stor9].field_1024 >= 75000 * 10^18:\n                                  else:\n                                      if pot_:\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if not stor16[stor8 + 1].field_1024:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n          else:\n              if block.timestamp <= round_[stor9].field_256:\n                  if stor16[stor8 + 1].field_1024:\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor16[stor8 + 1].field_1024 != rID_:\n                                  if stor16[stor8 + 1].field_1024 > 0:\n                          else:\n                              if stor16[stor8 + 1].field_1024 == rID_:\n                                  if -stor16[stor8 + 1].field_512 <= 0:\n                              else:\n                                  if stor16[stor8 + 1].field_1024 > 0:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] > 0:\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                              if stor16[stor8 + 1].field_1024 != rID_:\n                                  if stor16[stor8 + 1].field_1024 > 0:\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if stor16[stor8 + 1].field_256:\n                                      if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if stor16[stor8 + 1].field_256:\n                                          if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if not plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18) + stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor8 + 1].field_768 += round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18\n                                      stor16[stor8 + 1].field_1024 = rID_\n                  else:\n                      stor16[stor8 + 1].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                          if stor16[stor8 + 1].field_1024 != rID_:\n                              if stor16[stor8 + 1].field_1024 > 0:\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                                      if stor16[stor8 + 1].field_1024 > 0:\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if stor16[stor8 + 1].field_256:\n                                      if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if stor16[stor8 + 1].field_256:\n                                          if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                      else:\n                                  else:\n                                      if not plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18) + stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor8 + 1].field_768 += round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18\n                                      stor16[stor8 + 1].field_1024 = rID_\n              else:\n                  if 0 < round_[stor9].field_512:\n                      if pot_:\n                          if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                              revert with 0, 'SafeMath mul failed'\n                          if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ > 1:\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 < 50000 * 10^18:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor8 + 1].field_1024:\n                                      if rID_ > 1:\n                                  else:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                      else:\n                          if round_[stor9].field_1024 > 0:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if not stor16[stor8 + 1].field_1024:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 < 50000 * 10^18:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor8 + 1].field_1024:\n                                      if rID_ > 1:\n                                          if stor16[stor8 + 1].field_1024 != rID_:\n                                  else:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if rID_ > 1:\n                  else:\n                      rID_++\n                      round_[stor9 + 1].field_0 = block.timestamp\n                      if rndInit_ + block.timestamp < block.timestamp:\n                          revert with 0, 'SafeMath add failed'\n                      round_[stor9].field_256 = rndInit_ + block.timestamp\n                      if stor16[stor8 + 1].field_1024:\n                          if rID_ <= 1:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if stor16[stor8 + 1].field_1024 == rID_:\n                                  if stor16[stor8 + 1].field_256:\n                                      if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if stor16[stor8 + 1].field_256:\n                                  else:\n                                      if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                          stor16[stor8 + 1].field_1024 = rID_\n                                      else:\n                                          if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                              if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          stor16[stor8 + 1].field_1024 = rID_\n                          if rID_ <= 1:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if stor16[stor8 + 1].field_1024 == rID_:\n                                  if stor16[stor8 + 1].field_256:\n                                      if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                  else:\n                                      if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                          stor16[stor8 + 1].field_1024 = rID_\n                                      else:\n                                          if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                              if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                                  revert with 0, 'SafeMath mul failed'\n      else:\n          if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n              revert with 0, 'SafeMath mul failed'\n          if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n              if 0 < round_[stor9].field_512:\n                  if pot_:\n                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if stor16[stor8 + 1].field_1024:\n                              if rID_ > 1:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                          else:\n                              stor16[stor8 + 1].field_1024 = rID_\n                              if rID_ > 1:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 < 50000 * 10^18:\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                  else:\n                      if round_[stor9].field_1024 > 0:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if not stor16[stor8 + 1].field_1024:\n                              stor16[stor8 + 1].field_1024 = rID_\n                          if rID_ > 1:\n                              if stor16[stor8 + 1].field_1024 != rID_:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 < 50000 * 10^18:\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ > 1:\n              else:\n                  rID_++\n                  round_[stor9 + 1].field_0 = block.timestamp\n                  if rndInit_ + block.timestamp < block.timestamp:\n                      revert with 0, 'SafeMath add failed'\n                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                  if stor16[stor8 + 1].field_1024:\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if stor16[stor8 + 1].field_256:\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                  else:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                  else:\n                      stor16[stor8 + 1].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                  else:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n          else:\n              if block.timestamp <= round_[stor9].field_256:\n                  if stor16[stor8 + 1].field_1024:\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                          if stor16[stor8 + 1].field_1024 != rID_:\n                              if stor16[stor8 + 1].field_1024 > 0:\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                                      if stor16[stor8 + 1].field_1024 > 0:\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if stor16[stor8 + 1].field_256:\n                                      if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if stor16[stor8 + 1].field_256:\n                                          if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                      else:\n                                  else:\n                                      if not plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18) + stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor8 + 1].field_768 += round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18\n                                      stor16[stor8 + 1].field_1024 = rID_\n                  else:\n                      stor16[stor8 + 1].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor16[stor8 + 1].field_1024 != rID_:\n                          else:\n                              if stor16[stor8 + 1].field_1024 != rID_:\n                                  if stor16[stor8 + 1].field_1024 > 0:\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                              if stor16[stor8 + 1].field_1024 != rID_:\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if stor16[stor8 + 1].field_256:\n                                      if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                                  else:\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if stor16[stor8 + 1].field_256:\n                                          if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if not plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18) + stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor8 + 1].field_768 += round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18\n                                      stor16[stor8 + 1].field_1024 = rID_\n              else:\n                  if 0 < round_[stor9].field_512:\n                      if not pot_:\n                          if round_[stor9].field_1024 > 0:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ > 1:\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 < 50000 * 10^18:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor8 + 1].field_1024:\n                                      if rID_ > 1:\n                                  else:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                      else:\n                          if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                              revert with 0, 'SafeMath mul failed'\n                          if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 >= 50000 * 10^18:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if not stor16[stor8 + 1].field_1024:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                  else:\n                      rID_++\n                      round_[stor9 + 1].field_0 = block.timestamp\n                      if rndInit_ + block.timestamp < block.timestamp:\n                          revert with 0, 'SafeMath add failed'\n                      round_[stor9].field_256 = rndInit_ + block.timestamp\n                      if not stor16[stor8 + 1].field_1024:\n                          stor16[stor8 + 1].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                  else:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef withdraw(): # not payable\n  if bool(stor21) != 1:\n      revert with 0, 'its not ready yet.'\n  if pIDxAddr_[caller]:\n      if not pot_:\n          if round_[stor9].field_1024 > 0:\n              if 0 >= round_[stor9].field_512:\n                  rID_++\n                  round_[stor9 + 1].field_0 = block.timestamp\n                  if rndInit_ + block.timestamp < block.timestamp:\n                      revert with 0, 'SafeMath add failed'\n                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                  if stor16[stor15[caller]].field_1024:\n                      if rID_ <= 1:\n                          if stor16[stor15[caller]].field_256:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                          else:\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                      else:\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                          if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                  else:\n                      stor16[stor15[caller]].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor15[caller]].field_256:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n              else:\n                  if not pot_:\n                      if round_[stor9].field_1024 > 0:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if stor16[stor15[caller]].field_1024:\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                          else:\n                              stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 >= 50000 * 10^18:\n                                      if round_[stor9].field_1024 < 75000 * 10^18:\n                                  else:\n                                      if pot_:\n                                          if 20 * pot_ / pot_ != 20:\n                                              revert with 0, 'SafeMath mul failed'\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                          else:\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                  else:\n                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if stor16[stor15[caller]].field_1024:\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                          else:\n                              stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 >= 50000 * 10^18:\n                                      if round_[stor9].field_1024 >= 75000 * 10^18:\n                                  else:\n                                      if pot_:\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if not stor16[stor15[caller]].field_1024:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n          else:\n              if block.timestamp <= round_[stor9].field_256:\n                  if stor16[stor15[caller]].field_1024:\n                      if rID_ <= 1:\n                          if not stor16[stor15[caller]].field_256:\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if -stor16[stor15[caller]].field_512 <= 0:\n                                      if stor16[stor15[caller]].field_768 > 0:\n                                          stor16[stor15[caller]].field_768 = 0\n                              else:\n                                  if stor16[stor15[caller]].field_1024 <= 0:\n                                      if -stor16[stor15[caller]].field_512 <= 0:\n                                  else:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] > 0:\n                          else:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if (stor13 * stor16[stor15[caller]].field_256 / 10^18) - stor16[stor15[caller]].field_512 <= 0:\n                              else:\n                                  if stor16[stor15[caller]].field_1024 > 0:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] > 0:\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                                      if stor16[stor15[caller]].field_1024 > 0:\n                              else:\n                                  if stor16[stor15[caller]].field_1024 == rID_:\n                                      if -stor16[stor15[caller]].field_512 <= 0:\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 > 0:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] > 0:\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                          if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if stor16[stor15[caller]].field_1024 != rID_:\n                                  else:\n                                      if not plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18) + stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor15[caller]].field_768 += round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18\n                                      stor16[stor15[caller]].field_1024 = rID_\n                  else:\n                      stor16[stor15[caller]].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor15[caller]].field_256:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor16[stor15[caller]].field_1024 != rID_:\n                                  if stor16[stor15[caller]].field_1024 > 0:\n                          else:\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if -stor16[stor15[caller]].field_512 <= 0:\n                              else:\n                                  if stor16[stor15[caller]].field_1024 > 0:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] > 0:\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                              if stor16[stor15[caller]].field_1024 != rID_:\n                                  if stor16[stor15[caller]].field_1024 > 0:\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                          if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if not plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18) + stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor15[caller]].field_768 += round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18\n                                      stor16[stor15[caller]].field_1024 = rID_\n              else:\n                  if 0 >= round_[stor9].field_512:\n                      rID_++\n                      round_[stor9 + 1].field_0 = block.timestamp\n                      if rndInit_ + block.timestamp < block.timestamp:\n                          revert with 0, 'SafeMath add failed'\n                      round_[stor9].field_256 = rndInit_ + block.timestamp\n                      if stor16[stor15[caller]].field_1024:\n                          if rID_ <= 1:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                          if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                          if stor16[stor15[caller]].field_256:\n                      else:\n                          stor16[stor15[caller]].field_1024 = rID_\n                          if rID_ <= 1:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                  else:\n                                      if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                  revert with 0, 'SafeMath mul failed'\n                  else:\n                      if pot_:\n                          if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                              revert with 0, 'SafeMath mul failed'\n                          if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if not stor16[stor15[caller]].field_1024:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 < 50000 * 10^18:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor15[caller]].field_1024:\n                                      if rID_ > 1:\n                                          if stor16[stor15[caller]].field_1024 != rID_:\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if rID_ > 1:\n                      else:\n                          if round_[stor9].field_1024 > 0:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                          else:\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 >= 50000 * 10^18:\n                                          if round_[stor9].field_1024 >= 75000 * 10^18:\n                                      else:\n                                          if pot_:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if not stor16[stor15[caller]].field_1024:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n      else:\n          if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n              revert with 0, 'SafeMath mul failed'\n          if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n              if 0 >= round_[stor9].field_512:\n                  rID_++\n                  round_[stor9 + 1].field_0 = block.timestamp\n                  if rndInit_ + block.timestamp < block.timestamp:\n                      revert with 0, 'SafeMath add failed'\n                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                  if stor16[stor15[caller]].field_1024:\n                      if rID_ <= 1:\n                          if stor16[stor15[caller]].field_256:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                  else:\n                      stor16[stor15[caller]].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor15[caller]].field_256:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                  else:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n              else:\n                  if pot_:\n                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if not stor16[stor15[caller]].field_1024:\n                              stor16[stor15[caller]].field_1024 = rID_\n                          if rID_ > 1:\n                              if stor16[stor15[caller]].field_1024 != rID_:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 < 50000 * 10^18:\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                  else:\n                      if round_[stor9].field_1024 > 0:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if stor16[stor15[caller]].field_1024:\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                          else:\n                              stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 >= 50000 * 10^18:\n                                      if round_[stor9].field_1024 >= 75000 * 10^18:\n                                  else:\n                                      if pot_:\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if not stor16[stor15[caller]].field_1024:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n          else:\n              if block.timestamp <= round_[stor9].field_256:\n                  if stor16[stor15[caller]].field_1024:\n                      if rID_ <= 1:\n                          if stor16[stor15[caller]].field_256:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor16[stor15[caller]].field_1024 != rID_:\n                                  if stor16[stor15[caller]].field_1024 > 0:\n                          else:\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if -stor16[stor15[caller]].field_512 <= 0:\n                              else:\n                                  if stor16[stor15[caller]].field_1024 > 0:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] > 0:\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                              if stor16[stor15[caller]].field_1024 != rID_:\n                                  if stor16[stor15[caller]].field_1024 > 0:\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                          if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if not plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18) + stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor15[caller]].field_768 += round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18\n                                      stor16[stor15[caller]].field_1024 = rID_\n                  else:\n                      stor16[stor15[caller]].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor15[caller]].field_256:\n                              if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                          if stor16[stor15[caller]].field_1024 != rID_:\n                              if stor16[stor15[caller]].field_1024 > 0:\n                      else:\n                          if stor16[stor15[caller]].field_1024 == rID_:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                              else:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                                      if stor16[stor15[caller]].field_1024 > 0:\n                          else:\n                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                          if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                      else:\n                                  else:\n                                      if not plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                          if stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18) + stor16[stor15[caller]].field_768 < stor16[stor15[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor15[caller]].field_768 += round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / 10^18\n                                      stor16[stor15[caller]].field_1024 = rID_\n              else:\n                  if 0 < round_[stor9].field_512:\n                      if pot_:\n                          if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                              revert with 0, 'SafeMath mul failed'\n                          if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 < 50000 * 10^18:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor15[caller]].field_1024:\n                                      if rID_ > 1:\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                      else:\n                          if round_[stor9].field_1024 > 0:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if not stor16[stor15[caller]].field_1024:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 < 50000 * 10^18:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor15[caller]].field_1024:\n                                      if rID_ > 1:\n                                          if stor16[stor15[caller]].field_1024 != rID_:\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if rID_ > 1:\n                  else:\n                      rID_++\n                      round_[stor9 + 1].field_0 = block.timestamp\n                      if rndInit_ + block.timestamp < block.timestamp:\n                          revert with 0, 'SafeMath add failed'\n                      round_[stor9].field_256 = rndInit_ + block.timestamp\n                      if stor16[stor15[caller]].field_1024:\n                          if rID_ <= 1:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if stor16[stor15[caller]].field_256:\n                                  else:\n                                      if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          stor16[stor15[caller]].field_1024 = rID_\n                          if rID_ <= 1:\n                              if stor16[stor15[caller]].field_256:\n                                  if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if stor16[stor15[caller]].field_1024 == rID_:\n                                  if stor16[stor15[caller]].field_256:\n                                      if stor13 * stor16[stor15[caller]].field_256 / stor16[stor15[caller]].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                  else:\n                                      if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                  revert with 0, 'SafeMath mul failed'\n  else:\n      pID_++\n      pIDxAddr_[caller] = pID_ + 1\n      stor16[stor8 + 1].field_0 = caller\n      if not pot_:\n          if round_[stor9].field_1024 > 0:\n              if 0 >= round_[stor9].field_512:\n                  rID_++\n                  round_[stor9 + 1].field_0 = block.timestamp\n                  if rndInit_ + block.timestamp < block.timestamp:\n                      revert with 0, 'SafeMath add failed'\n                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                  if stor16[stor8 + 1].field_1024:\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if stor16[stor8 + 1].field_256:\n                                      if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 > 0:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if stor16[stor8 + 1].field_256:\n                  else:\n                      stor16[stor8 + 1].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if stor16[stor8 + 1].field_256:\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                  else:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n              else:\n                  if pot_:\n                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if not stor16[stor8 + 1].field_1024:\n                              stor16[stor8 + 1].field_1024 = rID_\n                          if rID_ > 1:\n                              if stor16[stor8 + 1].field_1024 != rID_:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 < 50000 * 10^18:\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ > 1:\n                  else:\n                      if round_[stor9].field_1024 > 0:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if stor16[stor8 + 1].field_1024:\n                              if rID_ > 1:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                          stor16[stor8 + 1].field_1024 = rID_\n                                      else:\n                          else:\n                              stor16[stor8 + 1].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 >= 50000 * 10^18:\n                                      if round_[stor9].field_1024 >= 75000 * 10^18:\n                                  else:\n                                      if pot_:\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if not stor16[stor8 + 1].field_1024:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n          else:\n              if block.timestamp <= round_[stor9].field_256:\n                  if stor16[stor8 + 1].field_1024:\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor16[stor8 + 1].field_1024 != rID_:\n                                  if stor16[stor8 + 1].field_1024 > 0:\n                          else:\n                              if stor16[stor8 + 1].field_1024 == rID_:\n                                  if -stor16[stor8 + 1].field_512 <= 0:\n                              else:\n                                  if stor16[stor8 + 1].field_1024 > 0:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] > 0:\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                              if stor16[stor8 + 1].field_1024 != rID_:\n                                  if stor16[stor8 + 1].field_1024 > 0:\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if stor16[stor8 + 1].field_256:\n                                      if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if stor16[stor8 + 1].field_256:\n                                          if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if not plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18) + stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor8 + 1].field_768 += round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18\n                                      stor16[stor8 + 1].field_1024 = rID_\n                  else:\n                      stor16[stor8 + 1].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                          if stor16[stor8 + 1].field_1024 != rID_:\n                              if stor16[stor8 + 1].field_1024 > 0:\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                                      if stor16[stor8 + 1].field_1024 > 0:\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if stor16[stor8 + 1].field_256:\n                                      if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if stor16[stor8 + 1].field_256:\n                                          if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                      else:\n                                  else:\n                                      if not plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18) + stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor8 + 1].field_768 += round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18\n                                      stor16[stor8 + 1].field_1024 = rID_\n              else:\n                  if 0 < round_[stor9].field_512:\n                      if pot_:\n                          if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                              revert with 0, 'SafeMath mul failed'\n                          if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ > 1:\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 < 50000 * 10^18:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor8 + 1].field_1024:\n                                      if rID_ > 1:\n                                  else:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                      else:\n                          if round_[stor9].field_1024 > 0:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if not stor16[stor8 + 1].field_1024:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 < 50000 * 10^18:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor8 + 1].field_1024:\n                                      if rID_ > 1:\n                                          if stor16[stor8 + 1].field_1024 != rID_:\n                                  else:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if rID_ > 1:\n                  else:\n                      rID_++\n                      round_[stor9 + 1].field_0 = block.timestamp\n                      if rndInit_ + block.timestamp < block.timestamp:\n                          revert with 0, 'SafeMath add failed'\n                      round_[stor9].field_256 = rndInit_ + block.timestamp\n                      if stor16[stor8 + 1].field_1024:\n                          if rID_ <= 1:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if stor16[stor8 + 1].field_1024 == rID_:\n                                  if stor16[stor8 + 1].field_256:\n                                      if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if stor16[stor8 + 1].field_256:\n                                  else:\n                                      if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                          stor16[stor8 + 1].field_1024 = rID_\n                                      else:\n                                          if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                              if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          stor16[stor8 + 1].field_1024 = rID_\n                          if rID_ <= 1:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if stor16[stor8 + 1].field_1024 == rID_:\n                                  if stor16[stor8 + 1].field_256:\n                                      if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                  else:\n                                      if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                          stor16[stor8 + 1].field_1024 = rID_\n                                      else:\n                                          if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                              if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                                  revert with 0, 'SafeMath mul failed'\n      else:\n          if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n              revert with 0, 'SafeMath mul failed'\n          if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n              if 0 < round_[stor9].field_512:\n                  if pot_:\n                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if stor16[stor8 + 1].field_1024:\n                              if rID_ > 1:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                          else:\n                              stor16[stor8 + 1].field_1024 = rID_\n                              if rID_ > 1:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 < 50000 * 10^18:\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                  else:\n                      if round_[stor9].field_1024 > 0:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if not stor16[stor8 + 1].field_1024:\n                              stor16[stor8 + 1].field_1024 = rID_\n                          if rID_ > 1:\n                              if stor16[stor8 + 1].field_1024 != rID_:\n                      else:\n                          if block.timestamp > round_[stor9].field_256:\n                              if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  if round_[stor9].field_1024 < 50000 * 10^18:\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ > 1:\n              else:\n                  rID_++\n                  round_[stor9 + 1].field_0 = block.timestamp\n                  if rndInit_ + block.timestamp < block.timestamp:\n                      revert with 0, 'SafeMath add failed'\n                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                  if stor16[stor8 + 1].field_1024:\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if stor16[stor8 + 1].field_256:\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                  else:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                  else:\n                      stor16[stor8 + 1].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                  else:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n          else:\n              if block.timestamp <= round_[stor9].field_256:\n                  if stor16[stor8 + 1].field_1024:\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                          if stor16[stor8 + 1].field_1024 != rID_:\n                              if stor16[stor8 + 1].field_1024 > 0:\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                                      if stor16[stor8 + 1].field_1024 > 0:\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if stor16[stor8 + 1].field_256:\n                                      if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if stor16[stor8 + 1].field_256:\n                                          if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                      else:\n                                  else:\n                                      if not plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18) + stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor8 + 1].field_768 += round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18\n                                      stor16[stor8 + 1].field_1024 = rID_\n                  else:\n                      stor16[stor8 + 1].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor16[stor8 + 1].field_1024 != rID_:\n                          else:\n                              if stor16[stor8 + 1].field_1024 != rID_:\n                                  if stor16[stor8 + 1].field_1024 > 0:\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                              if stor16[stor8 + 1].field_1024 != rID_:\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if stor16[stor8 + 1].field_256:\n                                      if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                          revert with 0, 'SafeMath mul failed'\n                                  else:\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if stor16[stor8 + 1].field_256:\n                                          if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if not plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18) + stor16[stor8 + 1].field_768 < stor16[stor8 + 1].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          stor16[stor8 + 1].field_768 += round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / 10^18\n                                      stor16[stor8 + 1].field_1024 = rID_\n              else:\n                  if 0 < round_[stor9].field_512:\n                      if not pot_:\n                          if round_[stor9].field_1024 > 0:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ > 1:\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 < 50000 * 10^18:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor8 + 1].field_1024:\n                                      if rID_ > 1:\n                                  else:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                      else:\n                          if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                              revert with 0, 'SafeMath mul failed'\n                          if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                          else:\n                              if block.timestamp > round_[stor9].field_256:\n                                  if round_[stor9].field_1024 >= 25000 * 10^18:\n                                      if round_[stor9].field_1024 >= 50000 * 10^18:\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if not stor16[stor8 + 1].field_1024:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                  else:\n                      rID_++\n                      round_[stor9 + 1].field_0 = block.timestamp\n                      if rndInit_ + block.timestamp < block.timestamp:\n                          revert with 0, 'SafeMath add failed'\n                      round_[stor9].field_256 = rndInit_ + block.timestamp\n                      if not stor16[stor8 + 1].field_1024:\n                          stor16[stor8 + 1].field_1024 = rID_\n                      if rID_ <= 1:\n                          if stor16[stor8 + 1].field_256:\n                              if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor16[stor8 + 1].field_1024 == rID_:\n                              if stor16[stor8 + 1].field_256:\n                                  if stor13 * stor16[stor8 + 1].field_256 / stor16[stor8 + 1].field_256 != stor13:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                              else:\n                                  if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                  else:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                              revert with 0, 'SafeMath mul failed'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef _fallback(?) payable: # default function\n  if calldata.size < 4:\n      if bool(stor21) != 1:\n          revert with 0, 'its not ready yet.'\n      if eth.balance(this.address) <= 10 * 10^18:\n          if pIDxAddr_[caller]:\n              if pot_:\n                  if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                      revert with 0, 'SafeMath mul failed'\n                  if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                      if 0 < round_[stor9].field_512:\n                          if not pot_:\n                              if round_[stor9].field_1024 > 0:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                              else:\n                                  if block.timestamp <= round_[stor9].field_256:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                      if rndInit_ + block.timestamp < block.timestamp:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_[stor9].field_256:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                      else:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if stor16[stor15[caller]].field_1024:\n                              if rID_ <= 1:\n                                  if call.value > 10^9:\n                              else:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                          else:\n                              stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                  else:\n                      if block.timestamp <= round_[stor9].field_256:\n                          if stor16[stor15[caller]].field_1024:\n                              if rID_ <= 1:\n                                  if call.value <= 10^9:\n                                      log onBuyKey(\n                                            address _address=caller,\n                                            uint256 _pID=pIDxAddr_[caller],\n                                            uint256 _rID=rID_,\n                                            uint256 _eth=call.value,\n                                            uint256 _key=0,\n                                            bool _timeExtended=0)\n                                      stop\n                                  if call.value:\n                                      if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                          revert with 0, 'SafeMath mul failed'\n                                  else:\n                              else:\n                                  if stor16[stor15[caller]].field_1024 == rID_:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pIDxAddr_[caller],\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pIDxAddr_[caller],\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                                  if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                      revert with 0, 'SafeMath mul failed'\n                                          else:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pIDxAddr_[caller],\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                                              if call.value:\n                          else:\n                              stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ <= 1:\n                                  if call.value <= 10^9:\n                                      log onBuyKey(\n                                            address _address=caller,\n                                            uint256 _pID=pIDxAddr_[caller],\n                                            uint256 _rID=rID_,\n                                            uint256 _eth=call.value,\n                                            uint256 _key=0,\n                                            bool _timeExtended=0)\n                                      stop\n                                  if call.value:\n                                      if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if stor16[stor15[caller]].field_1024 == rID_:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pIDxAddr_[caller],\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pIDxAddr_[caller],\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                                  if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                      revert with 0, 'SafeMath mul failed'\n                                          else:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pIDxAddr_[caller],\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                      else:\n                          if 0 < round_[stor9].field_512:\n                              if pot_:\n                                  if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  if round_[stor9].field_1024 > 0:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                      if rndInit_ + block.timestamp < block.timestamp:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                          else:\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n              else:\n                  if round_[stor9].field_1024 > 0:\n                      if 0 < round_[stor9].field_512:\n                          if pot_:\n                              if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                              else:\n                                  if block.timestamp <= round_[stor9].field_256:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                      if rndInit_ + block.timestamp < block.timestamp:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if round_[stor9].field_1024 > 0:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                              else:\n                                  if block.timestamp > round_[stor9].field_256:\n                                      if round_[stor9].field_1024 >= 25000 * 10^18:\n                                  else:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                      if rndInit_ + block.timestamp < block.timestamp:\n                                          revert with 0, 'SafeMath add failed'\n                                      round_[stor9].field_256 = rndInit_ + block.timestamp\n                      else:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if stor16[stor15[caller]].field_1024:\n                              if rID_ <= 1:\n                                  if call.value <= 10^9:\n                                      log onBuyKey(\n                                            address _address=caller,\n                                            uint256 _pID=pIDxAddr_[caller],\n                                            uint256 _rID=rID_,\n                                            uint256 _eth=call.value,\n                                            uint256 _key=0,\n                                            bool _timeExtended=0)\n                                      stop\n                              else:\n                                  if stor16[stor15[caller]].field_1024 == rID_:\n                                      if call.value > 10^9:\n                                  else:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                          else:\n                          else:\n                              stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ <= 1:\n                                  if call.value > 10^9:\n                              else:\n                                  if stor16[stor15[caller]].field_1024 != rID_:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                  else:\n                      if block.timestamp <= round_[stor9].field_256:\n                          if stor16[stor15[caller]].field_1024:\n                              if rID_ <= 1:\n                                  if call.value <= 10^9:\n                                      log onBuyKey(\n                                            address _address=caller,\n                                            uint256 _pID=pIDxAddr_[caller],\n                                            uint256 _rID=rID_,\n                                            uint256 _eth=call.value,\n                                            uint256 _key=0,\n                                            bool _timeExtended=0)\n                                      stop\n                                  if not call.value:\n                                      if 0 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if stor16[stor15[caller]].field_1024 == rID_:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pIDxAddr_[caller],\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                      else:\n                                  else:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pIDxAddr_[caller],\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                                  if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                      revert with 0, 'SafeMath mul failed'\n                                              else:\n                                          else:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pIDxAddr_[caller],\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                                              if call.value:\n                                                  if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              stor16[stor15[caller]].field_1024 = rID_\n                              if rID_ <= 1:\n                                  if call.value <= 10^9:\n                                      log onBuyKey(\n                                            address _address=caller,\n                                            uint256 _pID=pIDxAddr_[caller],\n                                            uint256 _rID=rID_,\n                                            uint256 _eth=call.value,\n                                            uint256 _key=0,\n                                            bool _timeExtended=0)\n                                      stop\n                                  if call.value:\n                                      if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                          revert with 0, 'SafeMath mul failed'\n                                  else:\n                              else:\n                                  if stor16[stor15[caller]].field_1024 == rID_:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pIDxAddr_[caller],\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                          stor16[stor15[caller]].field_1024 = rID_\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pIDxAddr_[caller],\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                                  if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                      revert with 0, 'SafeMath mul failed'\n                                          else:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pIDxAddr_[caller],\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                                              if call.value:\n                      else:\n                          if 0 < round_[stor9].field_512:\n                              if not pot_:\n                                  if round_[stor9].field_1024 > 0:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                      if rndInit_ + block.timestamp < block.timestamp:\n                                          revert with 0, 'SafeMath add failed'\n                                      round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                                          if rndInit_ + block.timestamp < block.timestamp:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                      if rndInit_ + block.timestamp < block.timestamp:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ <= 1:\n                                      if call.value > 10^9:\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                          else:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                                  stor16[stor15[caller]].field_1024 = rID_\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                          else:\n          else:\n              pID_++\n              pIDxAddr_[caller] = pID_ + 1\n              stor16[stor8 + 1].field_0 = caller\n              if not pot_:\n                  if round_[stor9].field_1024 > 0:\n                      if 0 < round_[stor9].field_512:\n                          if not pot_:\n                              if round_[stor9].field_1024 > 0:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                              else:\n                                  if block.timestamp <= round_[stor9].field_256:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                      if rndInit_ + block.timestamp < block.timestamp:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_[stor9].field_256:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                      else:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if stor16[stor8 + 1].field_1024:\n                              if rID_ <= 1:\n                                  if call.value > 10^9:\n                              else:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                          stor16[stor8 + 1].field_1024 = rID_\n                                      else:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                              stor16[stor8 + 1].field_1024 = rID_\n                          else:\n                              stor16[stor8 + 1].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                          stor16[stor8 + 1].field_1024 = rID_\n                                      else:\n                  else:\n                      if block.timestamp <= round_[stor9].field_256:\n                          if stor16[stor8 + 1].field_1024:\n                              if rID_ <= 1:\n                                  if call.value <= 10^9:\n                                      log onBuyKey(\n                                            address _address=caller,\n                                            uint256 _pID=pID_ + 1,\n                                            uint256 _rID=rID_,\n                                            uint256 _eth=call.value,\n                                            uint256 _key=0,\n                                            bool _timeExtended=0)\n                                      stop\n                                  if call.value:\n                                      if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                          revert with 0, 'SafeMath mul failed'\n                                  else:\n                              else:\n                                  if stor16[stor8 + 1].field_1024 == rID_:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pID_ + 1,\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                          stor16[stor8 + 1].field_1024 = rID_\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pID_ + 1,\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 > 0:\n                                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                                  if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                                      revert with 0, 'SafeMath mul failed'\n                                          else:\n                                              stor16[stor8 + 1].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pID_ + 1,\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                                              if call.value:\n                          else:\n                              stor16[stor8 + 1].field_1024 = rID_\n                              if rID_ <= 1:\n                                  if call.value <= 10^9:\n                                      log onBuyKey(\n                                            address _address=caller,\n                                            uint256 _pID=pID_ + 1,\n                                            uint256 _rID=rID_,\n                                            uint256 _eth=call.value,\n                                            uint256 _key=0,\n                                            bool _timeExtended=0)\n                                      stop\n                                  if call.value:\n                                      if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if stor16[stor8 + 1].field_1024 == rID_:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pID_ + 1,\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                          stor16[stor8 + 1].field_1024 = rID_\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pID_ + 1,\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                      else:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 > 0:\n                                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                                  if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                                      revert with 0, 'SafeMath mul failed'\n                                          else:\n                                              stor16[stor8 + 1].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pID_ + 1,\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                      else:\n                          if 0 < round_[stor9].field_512:\n                              if pot_:\n                                  if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  if round_[stor9].field_1024 > 0:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                      if rndInit_ + block.timestamp < block.timestamp:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                                          if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                              stor16[stor8 + 1].field_1024 = rID_\n                                          else:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n              else:\n                  if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                      revert with 0, 'SafeMath mul failed'\n                  if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                      if 0 < round_[stor9].field_512:\n                          if pot_:\n                              if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  if block.timestamp <= round_[stor9].field_256:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                          else:\n                              if round_[stor9].field_1024 > 0:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_[stor9].field_256:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                      else:\n                          rID_++\n                          round_[stor9 + 1].field_0 = block.timestamp\n                          if rndInit_ + block.timestamp < block.timestamp:\n                              revert with 0, 'SafeMath add failed'\n                          round_[stor9].field_256 = rndInit_ + block.timestamp\n                          if stor16[stor8 + 1].field_1024:\n                              if rID_ > 1:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                          stor16[stor8 + 1].field_1024 = rID_\n                                      else:\n                          else:\n                              stor16[stor8 + 1].field_1024 = rID_\n                              if rID_ > 1:\n                                  if stor16[stor8 + 1].field_1024 != rID_:\n                  else:\n                      if block.timestamp <= round_[stor9].field_256:\n                          if stor16[stor8 + 1].field_1024:\n                              if rID_ <= 1:\n                                  if call.value <= 10^9:\n                                      log onBuyKey(\n                                            address _address=caller,\n                                            uint256 _pID=pID_ + 1,\n                                            uint256 _rID=rID_,\n                                            uint256 _eth=call.value,\n                                            uint256 _key=0,\n                                            bool _timeExtended=0)\n                                      stop\n                                  if call.value:\n                                      if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if stor16[stor8 + 1].field_1024 == rID_:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pID_ + 1,\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                          stor16[stor8 + 1].field_1024 = rID_\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pID_ + 1,\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                      else:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 > 0:\n                                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                                  if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                                      revert with 0, 'SafeMath mul failed'\n                                          else:\n                                              stor16[stor8 + 1].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pID_ + 1,\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                          else:\n                              stor16[stor8 + 1].field_1024 = rID_\n                              if rID_ <= 1:\n                                  if call.value <= 10^9:\n                                      log onBuyKey(\n                                            address _address=caller,\n                                            uint256 _pID=pID_ + 1,\n                                            uint256 _rID=rID_,\n                                            uint256 _eth=call.value,\n                                            uint256 _key=0,\n                                            bool _timeExtended=0)\n                                      stop\n                                  if call.value:\n                                      if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if stor16[stor8 + 1].field_1024 == rID_:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pID_ + 1,\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                          stor16[stor8 + 1].field_1024 = rID_\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pID_ + 1,\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                      else:\n                                          if round_[stor16[stor8 + 1].field_1024].field_768 > 0:\n                                              if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                                  if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                                      revert with 0, 'SafeMath mul failed'\n                                          else:\n                                              stor16[stor8 + 1].field_1024 = rID_\n                                              if call.value > 10^9:\n                      else:\n                          if 0 < round_[stor9].field_512:\n                              if pot_:\n                                  if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  if round_[stor9].field_1024 > 0:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n      else:\n          if eth.balance(this.address) >= 500 * 10^18:\n              if pIDxAddr_[caller]:\n                  if not pot_:\n                      if round_[stor9].field_1024 > 0:\n                          if 0 < round_[stor9].field_512:\n                              if not pot_:\n                                  if round_[stor9].field_1024 > 0:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                      if rndInit_ + block.timestamp < block.timestamp:\n                                          revert with 0, 'SafeMath add failed'\n                                      round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                                          if rndInit_ + block.timestamp < block.timestamp:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                      if rndInit_ + block.timestamp < block.timestamp:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ <= 1:\n                                      if call.value > 10^9:\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                          else:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                                  stor16[stor15[caller]].field_1024 = rID_\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                          else:\n                      else:\n                          if block.timestamp <= round_[stor9].field_256:\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pIDxAddr_[caller],\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                      else:\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pIDxAddr_[caller],\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pIDxAddr_[caller],\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                                              if call.value:\n                                                  if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                      revert with 0, 'SafeMath mul failed'\n                                          else:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                                      if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                          revert with 0, 'SafeMath mul failed'\n                                              else:\n                                                  stor16[stor15[caller]].field_1024 = rID_\n                                                  if call.value <= 10^9:\n                                                      log onBuyKey(\n                                                            address _address=caller,\n                                                            uint256 _pID=pIDxAddr_[caller],\n                                                            uint256 _rID=rID_,\n                                                            uint256 _eth=call.value,\n                                                            uint256 _key=0,\n                                                            bool _timeExtended=0)\n                                                      stop\n                                                  if call.value:\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pIDxAddr_[caller],\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pIDxAddr_[caller],\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pIDxAddr_[caller],\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                                              if call.value:\n                                          else:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                                      if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                          revert with 0, 'SafeMath mul failed'\n                                              else:\n                                                  stor16[stor15[caller]].field_1024 = rID_\n                                                  if call.value <= 10^9:\n                                                      log onBuyKey(\n                                                            address _address=caller,\n                                                            uint256 _pID=pIDxAddr_[caller],\n                                                            uint256 _rID=rID_,\n                                                            uint256 _eth=call.value,\n                                                            uint256 _key=0,\n                                                            bool _timeExtended=0)\n                                                      stop\n                          else:\n                              if 0 < round_[stor9].field_512:\n                                  if pot_:\n                                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                                      else:\n                                          if block.timestamp <= round_[stor9].field_256:\n                                              rID_++\n                                              round_[stor9 + 1].field_0 = block.timestamp\n                                  else:\n                                      if round_[stor9].field_1024 > 0:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                                          if rndInit_ + block.timestamp < block.timestamp:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if block.timestamp <= round_[stor9].field_256:\n                                              rID_++\n                                              round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor15[caller]].field_1024:\n                                      if rID_ > 1:\n                                          if stor16[stor15[caller]].field_1024 != rID_:\n                                              if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                                  stor16[stor15[caller]].field_1024 = rID_\n                                              else:\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if rID_ > 1:\n                                          if stor16[stor15[caller]].field_1024 != rID_:\n                  else:\n                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                          if 0 < round_[stor9].field_512:\n                              if pot_:\n                                  if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  if round_[stor9].field_1024 > 0:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                      if rndInit_ + block.timestamp < block.timestamp:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                          else:\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                      else:\n                          if block.timestamp <= round_[stor9].field_256:\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pIDxAddr_[caller],\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pIDxAddr_[caller],\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pIDxAddr_[caller],\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                                              if call.value:\n                                          else:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                                      if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                          revert with 0, 'SafeMath mul failed'\n                                              else:\n                                                  stor16[stor15[caller]].field_1024 = rID_\n                                                  if call.value <= 10^9:\n                                                      log onBuyKey(\n                                                            address _address=caller,\n                                                            uint256 _pID=pIDxAddr_[caller],\n                                                            uint256 _rID=rID_,\n                                                            uint256 _eth=call.value,\n                                                            uint256 _key=0,\n                                                            bool _timeExtended=0)\n                                                      stop\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pIDxAddr_[caller],\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pIDxAddr_[caller],\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pIDxAddr_[caller],\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                                          else:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                                      if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                          revert with 0, 'SafeMath mul failed'\n                                              else:\n                                                  stor16[stor15[caller]].field_1024 = rID_\n                                                  if call.value > 10^9:\n                          else:\n                              if 0 < round_[stor9].field_512:\n                                  if pot_:\n                                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                                  else:\n                                      if round_[stor9].field_1024 > 0:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                                      else:\n                                          if block.timestamp <= round_[stor9].field_256:\n                                              rID_++\n                                              round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor15[caller]].field_1024:\n                                      if rID_ > 1:\n                                          if stor16[stor15[caller]].field_1024 != rID_:\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if rID_ > 1:\n                                          if stor16[stor15[caller]].field_1024 != rID_:\n              else:\n                  pID_++\n                  pIDxAddr_[caller] = pID_ + 1\n                  stor16[stor8 + 1].field_0 = caller\n                  if pot_:\n                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                          if 0 < round_[stor9].field_512:\n                              if pot_:\n                                  if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  if round_[stor9].field_1024 > 0:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                      else:\n                          if block.timestamp <= round_[stor9].field_256:\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pID_ + 1,\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor8 + 1].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pID_ + 1,\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                              stor16[stor8 + 1].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pID_ + 1,\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                                          else:\n                                              if round_[stor16[stor8 + 1].field_1024].field_768 > 0:\n                                                  if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                                      if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                                          revert with 0, 'SafeMath mul failed'\n                                              else:\n                                                  stor16[stor8 + 1].field_1024 = rID_\n                                                  if call.value > 10^9:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pID_ + 1,\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor8 + 1].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pID_ + 1,\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                              stor16[stor8 + 1].field_1024 = rID_\n                                              if call.value > 10^9:\n                                          else:\n                                              if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                                  stor16[stor8 + 1].field_1024 = rID_\n                                              else:\n                                                  if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                                      if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if 0 < round_[stor9].field_512:\n                                  if pot_:\n                                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                          revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if round_[stor9].field_1024 > 0:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor8 + 1].field_1024:\n                                      if rID_ > 1:\n                                          if stor16[stor8 + 1].field_1024 != rID_:\n                                  else:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if rID_ > 1:\n                  else:\n                      if round_[stor9].field_1024 > 0:\n                          if 0 < round_[stor9].field_512:\n                              if pot_:\n                                  if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  if round_[stor9].field_1024 > 0:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                      if rndInit_ + block.timestamp < block.timestamp:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                                          if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                              stor16[stor8 + 1].field_1024 = rID_\n                                          else:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                      else:\n                          if block.timestamp <= round_[stor9].field_256:\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pID_ + 1,\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor8 + 1].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pID_ + 1,\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                              stor16[stor8 + 1].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pID_ + 1,\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                                              if call.value:\n                                          else:\n                                              if round_[stor16[stor8 + 1].field_1024].field_768 > 0:\n                                                  if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                                      if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                                          revert with 0, 'SafeMath mul failed'\n                                              else:\n                                                  stor16[stor8 + 1].field_1024 = rID_\n                                                  if call.value <= 10^9:\n                                                      log onBuyKey(\n                                                            address _address=caller,\n                                                            uint256 _pID=pID_ + 1,\n                                                            uint256 _rID=rID_,\n                                                            uint256 _eth=call.value,\n                                                            uint256 _key=0,\n                                                            bool _timeExtended=0)\n                                                      stop\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pID_ + 1,\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor8 + 1].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pID_ + 1,\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                              stor16[stor8 + 1].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pID_ + 1,\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                                          else:\n                                              if round_[stor16[stor8 + 1].field_1024].field_768 > 0:\n                                                  if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                                      if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                                          revert with 0, 'SafeMath mul failed'\n                                              else:\n                                                  stor16[stor8 + 1].field_1024 = rID_\n                                                  if call.value > 10^9:\n                          else:\n                              if 0 < round_[stor9].field_512:\n                                  if pot_:\n                                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                                  else:\n                                      if round_[stor9].field_1024 > 0:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                                      else:\n                                          if block.timestamp <= round_[stor9].field_256:\n                                              rID_++\n                                              round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor8 + 1].field_1024:\n                                      if rID_ > 1:\n                                          if stor16[stor8 + 1].field_1024 != rID_:\n                                  else:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if rID_ > 1:\n                                          if stor16[stor8 + 1].field_1024 != rID_:\n          else:\n              require call.value >= 10 * 10^18\n              if pIDxAddr_[caller]:\n                  if pot_:\n                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                          if 0 < round_[stor9].field_512:\n                              if pot_:\n                                  if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  if round_[stor9].field_1024 > 0:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                      else:\n                          if block.timestamp <= round_[stor9].field_256:\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pIDxAddr_[caller],\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pIDxAddr_[caller],\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pIDxAddr_[caller],\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                                          else:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                                      if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                          revert with 0, 'SafeMath mul failed'\n                                              else:\n                                                  stor16[stor15[caller]].field_1024 = rID_\n                                                  if call.value > 10^9:\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pIDxAddr_[caller],\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pIDxAddr_[caller],\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                              if call.value > 10^9:\n                                          else:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 <= 0:\n                                                  stor16[stor15[caller]].field_1024 = rID_\n                                              else:\n                                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                                      if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if 0 < round_[stor9].field_512:\n                                  if pot_:\n                                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                          revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if round_[stor9].field_1024 > 0:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor15[caller]].field_1024:\n                                      if rID_ > 1:\n                                          if stor16[stor15[caller]].field_1024 != rID_:\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if rID_ > 1:\n                  else:\n                      if round_[stor9].field_1024 > 0:\n                          if 0 < round_[stor9].field_512:\n                              if pot_:\n                                  if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  if round_[stor9].field_1024 > 0:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                      if rndInit_ + block.timestamp < block.timestamp:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                          else:\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor15[caller]].field_1024 != rID_:\n                      else:\n                          if block.timestamp <= round_[stor9].field_256:\n                              if stor16[stor15[caller]].field_1024:\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pIDxAddr_[caller],\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pIDxAddr_[caller],\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pIDxAddr_[caller],\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                                              if call.value:\n                                          else:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                                      if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                          revert with 0, 'SafeMath mul failed'\n                                              else:\n                                                  stor16[stor15[caller]].field_1024 = rID_\n                                                  if call.value <= 10^9:\n                                                      log onBuyKey(\n                                                            address _address=caller,\n                                                            uint256 _pID=pIDxAddr_[caller],\n                                                            uint256 _rID=rID_,\n                                                            uint256 _eth=call.value,\n                                                            uint256 _key=0,\n                                                            bool _timeExtended=0)\n                                                      stop\n                              else:\n                                  stor16[stor15[caller]].field_1024 = rID_\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pIDxAddr_[caller],\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor15[caller]].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pIDxAddr_[caller],\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] <= 0:\n                                              stor16[stor15[caller]].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pIDxAddr_[caller],\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                                          else:\n                                              if round_[stor16[stor15[caller]].field_1024].field_768 > 0:\n                                                  if plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024]:\n                                                      if round_[stor16[stor15[caller]].field_1024].field_768 * plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] / plyrRnds_[stor15[caller]][stor16[stor15[caller]].field_1024] != round_[stor16[stor15[caller]].field_1024].field_768:\n                                                          revert with 0, 'SafeMath mul failed'\n                                              else:\n                                                  stor16[stor15[caller]].field_1024 = rID_\n                                                  if call.value > 10^9:\n                          else:\n                              if 0 < round_[stor9].field_512:\n                                  if pot_:\n                                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                                  else:\n                                      if round_[stor9].field_1024 > 0:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                                      else:\n                                          if block.timestamp <= round_[stor9].field_256:\n                                              rID_++\n                                              round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor15[caller]].field_1024:\n                                      if rID_ > 1:\n                                          if stor16[stor15[caller]].field_1024 != rID_:\n                                  else:\n                                      stor16[stor15[caller]].field_1024 = rID_\n                                      if rID_ > 1:\n                                          if stor16[stor15[caller]].field_1024 != rID_:\n              else:\n                  pID_++\n                  pIDxAddr_[caller] = pID_ + 1\n                  stor16[stor8 + 1].field_0 = caller\n                  if pot_:\n                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                          if 0 < round_[stor9].field_512:\n                              if pot_:\n                                  if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                      revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if round_[stor9].field_1024 > 0:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ > 1:\n                      else:\n                          if block.timestamp <= round_[stor9].field_256:\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pID_ + 1,\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor8 + 1].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pID_ + 1,\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                              stor16[stor8 + 1].field_1024 = rID_\n                                              if call.value > 10^9:\n                                          else:\n                                              if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                                  stor16[stor8 + 1].field_1024 = rID_\n                                              else:\n                                                  if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                                      if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pID_ + 1,\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor8 + 1].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pID_ + 1,\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                      else:\n                                          if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                              stor16[stor8 + 1].field_1024 = rID_\n                                          else:\n                                              if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                                  stor16[stor8 + 1].field_1024 = rID_\n                                              else:\n                                                  if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                          else:\n                              if 0 < round_[stor9].field_512:\n                                  if pot_:\n                                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor8 + 1].field_1024:\n                                      if rID_ > 1:\n                                  else:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                  else:\n                      if round_[stor9].field_1024 > 0:\n                          if 0 < round_[stor9].field_512:\n                              if pot_:\n                                  if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if round_[stor9].field_1024 > luckyEdge_ * pot_ / 100:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  if round_[stor9].field_1024 > 0:\n                                      rID_++\n                                      round_[stor9 + 1].field_0 = block.timestamp\n                                  else:\n                                      if block.timestamp <= round_[stor9].field_256:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                          else:\n                              rID_++\n                              round_[stor9 + 1].field_0 = block.timestamp\n                              if rndInit_ + block.timestamp < block.timestamp:\n                                  revert with 0, 'SafeMath add failed'\n                              round_[stor9].field_256 = rndInit_ + block.timestamp\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ > 1:\n                                      if stor16[stor8 + 1].field_1024 != rID_:\n                      else:\n                          if block.timestamp <= round_[stor9].field_256:\n                              if stor16[stor8 + 1].field_1024:\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pID_ + 1,\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor8 + 1].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pID_ + 1,\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                              stor16[stor8 + 1].field_1024 = rID_\n                                              if call.value <= 10^9:\n                                                  log onBuyKey(\n                                                        address _address=caller,\n                                                        uint256 _pID=pID_ + 1,\n                                                        uint256 _rID=rID_,\n                                                        uint256 _eth=call.value,\n                                                        uint256 _key=0,\n                                                        bool _timeExtended=0)\n                                                  stop\n                                          else:\n                                              if round_[stor16[stor8 + 1].field_1024].field_768 > 0:\n                                                  if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                                      if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                                          revert with 0, 'SafeMath mul failed'\n                                              else:\n                                                  stor16[stor8 + 1].field_1024 = rID_\n                                                  if call.value > 10^9:\n                              else:\n                                  stor16[stor8 + 1].field_1024 = rID_\n                                  if rID_ <= 1:\n                                      if call.value <= 10^9:\n                                          log onBuyKey(\n                                                address _address=caller,\n                                                uint256 _pID=pID_ + 1,\n                                                uint256 _rID=rID_,\n                                                uint256 _eth=call.value,\n                                                uint256 _key=0,\n                                                bool _timeExtended=0)\n                                          stop\n                                      if call.value:\n                                          if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if stor16[stor8 + 1].field_1024 == rID_:\n                                          if call.value <= 10^9:\n                                              log onBuyKey(\n                                                    address _address=caller,\n                                                    uint256 _pID=pID_ + 1,\n                                                    uint256 _rID=rID_,\n                                                    uint256 _eth=call.value,\n                                                    uint256 _key=0,\n                                                    bool _timeExtended=0)\n                                              stop\n                                          if call.value:\n                                              if luckyBonus_ * call.value / call.value != luckyBonus_:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] <= 0:\n                                              stor16[stor8 + 1].field_1024 = rID_\n                                              if call.value > 10^9:\n                                          else:\n                                              if round_[stor16[stor8 + 1].field_1024].field_768 <= 0:\n                                                  stor16[stor8 + 1].field_1024 = rID_\n                                              else:\n                                                  if plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024]:\n                                                      if round_[stor16[stor8 + 1].field_1024].field_768 * plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] / plyrRnds_[stor8 + 1][stor16[stor8 + 1].field_1024] != round_[stor16[stor8 + 1].field_1024].field_768:\n                                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if 0 < round_[stor9].field_512:\n                                  if pot_:\n                                      if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                          revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if round_[stor9].field_1024 > 0:\n                                          rID_++\n                                          round_[stor9 + 1].field_0 = block.timestamp\n                              else:\n                                  rID_++\n                                  round_[stor9 + 1].field_0 = block.timestamp\n                                  if rndInit_ + block.timestamp < block.timestamp:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                                  if stor16[stor8 + 1].field_1024:\n                                      if rID_ > 1:\n                                          if stor16[stor8 + 1].field_1024 != rID_:\n                                  else:\n                                      stor16[stor8 + 1].field_1024 = rID_\n                                      if rID_ > 1:\n  else:\n      if uint32(call.func_hash) == rndInc_():\n          require not call.value\n          return rndInc_\n      if setReferralContract(address _referral) == uint32(call.func_hash):\n          require not call.value\n          require stor19[caller]\n          if referralContractAddress:\n              revert with 0, 'silly dev, you already did that'\n          referralContractAddress = _param1\n          stop\n      if name() == uint32(call.func_hash):\n          require not call.value\n      else:\n          if luckyRounds_() == uint32(call.func_hash):\n              require not call.value\n              return luckyRounds_\n          if calcLuckEdge() == uint32(call.func_hash):\n              require not call.value\n              if not pot_:\n                  return 0\n              if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                  revert with 0, 'SafeMath mul failed'\n              return (luckyEdge_ * pot_ / 100)\n          if getBuyPrice(uint256 shares) == uint32(call.func_hash):\n              require not call.value\n          else:\n              if administratorWithdraw(uint256 _eth) == uint32(call.func_hash):\n                  require not call.value\n                  require stor19[caller]\n                  require _param1 <= stor20\n                  stor20 -= _param1\n                  call caller with:\n                     value _param1 wei\n                       gas 2300 * is_zero(value) wei\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  stop\n              if activate() == uint32(call.func_hash):\n                  require not call.value\n                  require stor19[caller]\n                  if not referralContractAddress:\n                      revert with 0, 'must link to Referral Contract'\n                  if stor21:\n                      revert with 0, 'already activated'\n                  stor21 = 1\n                  rID_ = 1\n                  round_[1].field_0 = block.timestamp\n                  if rndInit_ + block.timestamp < block.timestamp:\n                      revert with 0, 'SafeMath add failed'\n                  round_[stor9].field_256 = rndInit_ + block.timestamp\n                  log onActive()\n                  stop\n              if pIDxAddr_(address _param1) == uint32(call.func_hash):\n                  require not call.value\n                  return pIDxAddr_[_param1]\n              if extensionMin_() == uint32(call.func_hash):\n                  require not call.value\n                  return extensionMin_\n              if getReferralContract() == uint32(call.func_hash):\n                  require not call.value\n                  return referralContractAddress\n              if round_(uint256 _param1) == uint32(call.func_hash):\n                  require not call.value\n                  return round_[_param1].field_0, \n                         round_[_param1].field_256,\n                         round_[_param1].field_512,\n                         round_[_param1].field_768,\n                         round_[_param1].field_1024\n              if calcRoundEarnings(uint256 _pID, uint256 _rID) == uint32(call.func_hash):\n                  require not call.value\n                  if not plyrRnds_[_param1][_param2]:\n                      return 0\n                  if round_[_param2].field_768 * plyrRnds_[_param1][_param2] / plyrRnds_[_param1][_param2] != round_[_param2].field_768:\n                      revert with 0, 'SafeMath mul failed'\n                  return (round_[_param2].field_768 * plyrRnds_[_param1][_param2] / 10^18)\n              if attenuationFee_() == uint32(call.func_hash):\n                  require not call.value\n                  return attenuationFee_\n              if updateConfigs(uint16 _sellFee, uint8 _luckyBonus, uint8 _attenuationFee, uint8 _luckyEdge, uint8 _extensionThreshold, uint256 _extensionMin, uint256 _extensionMax, uint256 _rndInit, uint256 _rndInc) == uint32(call.func_hash):\n                  require not call.value\n                  require stor19[caller]\n                  if uint16(_param1) < 0:\n                      revert with 0, 'out of range.'\n                  if uint16(_param1) > 10000:\n                      revert with 0, 'out of range.'\n                  if uint8(_param2) < 0:\n                      revert with 0, 'out of range.'\n                  if uint8(_param2) > 100:\n                      revert with 0, 'out of range.'\n                  if _param3 < 0:\n                      revert with 0, 'out of range.'\n                  if _param3 > 100:\n                      revert with 0, 'out of range.'\n                  if _param4 < 0:\n                      revert with 0, 'out of range.'\n                  if _param4 > 100:\n                      revert with 0, 'out of range.'\n                  if _param5 < 0:\n                      revert with 0, 'out of range.'\n                  if _param5 > 1000:\n                      revert with 0, 'out of range.'\n              else:\n                  if luckyEdge_() == uint32(call.func_hash):\n                      require not call.value\n                      return luckyEdge_\n                  if administrators(bytes32 _param1) == uint32(call.func_hash):\n                      require not call.value\n                      return bool(stor19[_param1])\n                  if withdraw() == uint32(call.func_hash):\n                      require not call.value\n                      if bool(stor21) != 1:\n                          revert with 0, 'its not ready yet.'\n                      if pIDxAddr_[caller]:\n                          if pot_:\n                              if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                  revert with 0, 'SafeMath mul failed'\n                          else:\n                              if round_[stor9].field_1024 <= 0:\n                      else:\n                          pID_++\n                          pIDxAddr_[caller] = pID_ + 1\n                          stor16[stor8 + 1].field_0 = caller\n                          if pot_:\n                              if luckyEdge_ * pot_ / pot_ != luckyEdge_:\n                                  revert with 0, 'SafeMath mul failed'\n                  else:\n                      if rndInit_() == uint32(call.func_hash):\n                          require not call.value\n                          return rndInit_\n                      if luckyBonus_() == uint32(call.func_hash):\n                          require not call.value\n                          return luckyBonus_\n                      if pot_() == uint32(call.func_hash):\n                          require not call.value\n                          return pot_\n                      if pID_() == uint32(call.func_hash):\n                          require not call.value\n                          return pID_\n                      if rID_() == uint32(call.func_hash):\n                          require not call.value\n                          return rID_\n                      if totalEthereumBalance() == uint32(call.func_hash):\n                          require not call.value\n                          return eth.balance(this.address)\n                      if extensionThreshold_() == uint32(call.func_hash):\n                          require not call.value\n                          return extensionThreshold_\n                      if extensionMax_() == uint32(call.func_hash):\n                          require not call.value\n                          return extensionMax_\n                      if keySupply_() == uint32(call.func_hash):\n                          require not call.value\n                          return keySupply_\n                      if setAdministrator(bytes32 _identifier, bool _status) == uint32(call.func_hash):\n                          require not call.value\n                          require stor19[caller]\n                          stor19[_param1] = uint8(bool(_param2))\n                          stop\n                      if getPlayerDividends(uint256 _pID) == uint32(call.func_hash):\n                          require not call.value\n                          if stor16[_param1].field_256:\n                      else:\n                          if symbol() == uint32(call.func_hash):\n                              require not call.value\n                          else:\n                              if plyrRnds_(uint256 _param1, uint256 _param2) == uint32(call.func_hash):\n                                  require not call.value\n                                  return plyrRnds_[_param1][_param2]\n                              if reLoad() == uint32(call.func_hash):\n                                  require not call.value\n                              else:\n                                  if uint32(call.func_hash) != administratorInvest():\n                                      if uint32(call.func_hash) != outerDividend():\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n",
	"language": "Solidity",
	"status": "This model's maximum context length is 32768 tokens. However, your messages resulted in 72105 tokens. Please reduce the length of the messages."
}