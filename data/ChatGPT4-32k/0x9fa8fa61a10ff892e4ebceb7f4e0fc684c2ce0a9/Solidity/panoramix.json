{
	"address": "0x9fa8fa61a10ff892e4ebceb7f4e0fc684c2ce0a9",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Below is the Solidity code for the given EVM Bytecode:\n\n```solidity\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\ncontract PalkeoramixDecompiler {\n    uint8 stor0;\n    uint256 closingTime;\n    uint256 weiPerInitialHONG;\n    uint256[] name;\n    uint256[] symbol;\n    uint8 decimals;\n    uint256 maxBountyTokens;\n    uint256 closingTimeExtensionPeriod;\n    uint256 minTokensToCreate;\n    uint256 maxTokensToCreate;\n    uint256 tokensPerTier;\n    uint256 lastKickoffDateBuffer;\n    uint256 mgmtRewardPercentage;\n    uint256 mgmtFeePercentage;\n    uint256 harvestQuorumPercent;\n    uint256 freezeQuorumPercent;\n    uint256 kickoffQuorumPercent;\n    mapping(uint256 => mapping(uint256 => uint256)) votedKickoff;\n    mapping(uint256 => uint256) votedFreeze;\n    mapping(uint256 => uint256) votedHarvest;\n    mapping(uint256 => uint256) supportKickoffQuorum;\n    uint256 supportFreezeQuorum;\n    uint256 supportHarvestQuorum;\n    uint256 totalInitialBalance;\n    //uint8 stor25;\n    uint256 stor25;\n    uint256 annualManagementFee;\n    address managementBodyAddress;\n    address extraBalanceWalletAddress;\n    mapping(uint256 => uint256) stor28;\n    mapping(uint256 => uint256) taxPaid;\n    mapping(uint256 => uint256) balanceOf;\n    uint256 tokensCreated;\n    uint8 isFundLocked;\n    uint8 isFundReleased;\n    uint8 isDayThirtyChecked;\n    uint8 isDaySixtyChecked;\n    //uint256 stor33;\n    uint256 bountyTokensCreated;\n    uint256 stor35;\n    uint256 lastKickoffDate;\n    mapping(uint8 => uint256) stor37;\n    //bool stor38;\n    uint8 isFreezeEnabled;\n    uint8 isHarvestEnabled;\n    uint8 isDistributionInProgress;\n    uint8 isDistributionReady;\n    address returnWalletAddress;\n    //uint256 stor38;\n    address stor39;\n    address managementFeeWalletAddress;\n    uint8 stor20A3;\n\n    function isFundReleased() public payable returns(bool) {\n        return bool(isFundReleased);\n    }\n\n    function name() public payable returns(uint256[] memory) {\n        return name;\n    }\n\n    function weiPerInitialHONG() public payable returns(uint256) {\n        return weiPerInitialHONG;\n    }\n\n    //... Additional functions corresponding to the decompiled code.\n}\n```\n\nNote: This is a partial conversion of the decompiled code to a Solidity contract. The complete contract would have all the decompiled functions. Also, the actual names of the functions and variables might not match the original contract as they are lost during the compilation process.",
				"role": "assistant"
			}
		}
	],
	"created": 1700470979,
	"id": "chatcmpl-8MuTD8ERG6lkyKL49GRGUhsTPbE6u",
	"input_format": "DecompiledCode",
	"ir": "# Palkeoramix decompiler. \n\ndef storage:\n  stor0 is uint8 at storage 0\n  closingTime is uint256 at storage 1\n  weiPerInitialHONG is uint256 at storage 2\n  name is array of uint256 at storage 3\n  symbol is array of uint256 at storage 4\n  decimals is uint8 at storage 5\n  maxBountyTokens is uint256 at storage 6\n  closingTimeExtensionPeriod is uint256 at storage 7\n  minTokensToCreate is uint256 at storage 8\n  maxTokensToCreate is uint256 at storage 9\n  tokensPerTier is uint256 at storage 10\n  lastKickoffDateBuffer is uint256 at storage 11\n  mgmtRewardPercentage is uint256 at storage 12\n  mgmtFeePercentage is uint256 at storage 13\n  harvestQuorumPercent is uint256 at storage 14\n  freezeQuorumPercent is uint256 at storage 15\n  kickoffQuorumPercent is uint256 at storage 16\n  votedKickoff is mapping of uint256 at storage 18\n  votedFreeze is mapping of uint256 at storage 19\n  votedHarvest is mapping of uint256 at storage 20\n  supportKickoffQuorum is mapping of uint256 at storage 21\n  supportFreezeQuorum is uint256 at storage 22\n  supportHarvestQuorum is uint256 at storage 23\n  totalInitialBalance is uint256 at storage 24\n  stor25 is uint8 at storage 25 offset 254\n  stor25 is uint256 at storage 25\n  annualManagementFee is uint256 at storage 25\n  managementBodyAddress is address at storage 26\n  extraBalanceWalletAddress is address at storage 27\n  stor28 is mapping of uint256 at storage 28\n  taxPaid is mapping of uint256 at storage 29\n  balanceOf is mapping of uint256 at storage 30\n  tokensCreated is uint256 at storage 32\n  isFundLocked is uint8 at storage 33\n  isFundReleased is uint8 at storage 33 offset 8\n  isDayThirtyChecked is uint8 at storage 33 offset 16\n  isDaySixtyChecked is uint8 at storage 33 offset 24\n  stor33 is uint256 at storage 33\n  bountyTokensCreated is uint256 at storage 34\n  stor35 is uint256 at storage 35\n  lastKickoffDate is uint256 at storage 36\n  stor37 is mapping of uint8 at storage 37\n  stor38 is bool at storage 38 offset 256\n  isFreezeEnabled is uint8 at storage 38\n  isHarvestEnabled is uint8 at storage 38 offset 8\n  isDistributionInProgress is uint8 at storage 38 offset 16\n  isDistributionReady is uint8 at storage 38 offset 24\n  returnWalletAddress is address at storage 38 offset 32\n  stor38 is uint256 at storage 38 offset 32\n  stor39 is address at storage 39\n  managementFeeWalletAddress is address at storage 40\n  stor20A3 is uint8 at storage 0x20a3e2dd35f58e582c5288344c035e137cace924bb9daf3762b8ef5a58327e26\n\ndef isFundReleased() payable: \n  return bool(isFundReleased)\n\ndef name() payable: \n  return name[0 len name.length]\n\ndef weiPerInitialHONG() payable: \n  return weiPerInitialHONG\n\ndef votedHarvest(address _param1) payable: \n  return votedHarvest[_param1]\n\ndef minTokensToCreate() payable: \n  return minTokensToCreate\n\ndef supportHarvestQuorum() payable: \n  return supportHarvestQuorum\n\ndef extraBalanceWallet() payable: \n  return extraBalanceWalletAddress\n\ndef totalInitialBalance() payable: \n  return totalInitialBalance\n\ndef decimals() payable: \n  return decimals\n\ndef mgmtFeePercentage() payable: \n  return mgmtFeePercentage\n\ndef tokensCreated() payable: \n  return tokensCreated\n\ndef isDistributionReady() payable: \n  return bool(isDistributionReady)\n\ndef closingTimeExtensionPeriod() payable: \n  return closingTimeExtensionPeriod\n\ndef votedKickoff(uint256 _param1, address _param2) payable: \n  return votedKickoff[_param1][_param2]\n\ndef closingTime() payable: \n  return closingTime\n\ndef lastKickoffDateBuffer() payable: \n  return lastKickoffDateBuffer\n\ndef isDayThirtyChecked() payable: \n  return bool(isDayThirtyChecked)\n\ndef isFreezeEnabled() payable: \n  return bool(isFreezeEnabled)\n\ndef isDistributionInProgress() payable: \n  return bool(isDistributionInProgress)\n\ndef lastKickoffDate() payable: \n  return lastKickoffDate\n\ndef managementFeeWallet() payable: \n  return managementFeeWalletAddress\n\ndef supportFreezeQuorum() payable: \n  return supportFreezeQuorum\n\ndef balanceOf(address account) payable: \n  return balanceOf[address(account)]\n\ndef isFundLocked() payable: \n  return bool(isFundLocked)\n\ndef votedFreeze(address _param1) payable: \n  return votedFreeze[_param1]\n\ndef returnWallet() payable: \n  return returnWalletAddress\n\ndef kickoffQuorumPercent() payable: \n  return kickoffQuorumPercent\n\ndef freezeQuorumPercent() payable: \n  return freezeQuorumPercent\n\ndef symbol() payable: \n  return symbol[0 len symbol.length]\n\ndef maxTokensToCreate() payable: \n  return maxTokensToCreate\n\ndef isHarvestEnabled() payable: \n  return bool(isHarvestEnabled)\n\ndef tokensPerTier() payable: \n  return tokensPerTier\n\ndef taxPaid(address _param1) payable: \n  return taxPaid[_param1]\n\ndef maxBountyTokens() payable: \n  return maxBountyTokens\n\ndef supportKickoffQuorum(uint256 _param1) payable: \n  return supportKickoffQuorum[_param1]\n\ndef isInTestMode() payable: \n  return bool(stor0)\n\ndef managementBodyAddress() payable: \n  return managementBodyAddress\n\ndef harvestQuorumPercent() payable: \n  return harvestQuorumPercent\n\ndef isKickoffEnabled(uint256 _param1) payable: \n  return bool(stor37[_param1])\n\ndef mgmtRewardPercentage() payable: \n  return mgmtRewardPercentage\n\ndef bountyTokensCreated() payable: \n  return bountyTokensCreated\n\ndef annualManagementFee() payable: \n  return annualManagementFee\n\ndef isDaySixtyChecked() payable: \n  return bool(isDaySixtyChecked)\n\n#\n#  Regular functions\n#\n\ndef isMinTokensReached() payable: \n  return tokensCreated >= minTokensToCreate\n\ndef isMaxTokensReached() payable: \n  return tokensCreated >= maxTokensToCreate\n\ndef getCurrentTier() payable: \n  if uint8(tokensCreated / tokensPerTier) > 4:\n      return 4\n  return uint8(tokensCreated / tokensPerTier)\n\ndef divisor() payable: \n  if uint8(tokensCreated / tokensPerTier) > 4:\n      return 120\n  return uint8((5 * tokensCreated / tokensPerTier) + 100)\n\ndef pricePerTokenAtCurrentTier() payable: \n  if uint8(tokensCreated / tokensPerTier) > 4:\n      return (120 * weiPerInitialHONG / 100)\n  return (weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100)\n\ndef tokensAvailableAtTierInternal(uint8 _currentTier, uint256 _tokensPerTier, uint256 _tokensCreated) payable: \n  if _tokensPerTier * uint8(_currentTier + 1) <= maxTokensToCreate:\n      if _tokensCreated <= _tokensPerTier * uint8(_currentTier + 1):\n          return ((_tokensPerTier * uint8(_currentTier + 1)) - _tokensCreated)\n  else:\n      if _tokensCreated <= maxTokensToCreate:\n          return (maxTokensToCreate - _tokensCreated)\n  return 0\n\ndef tokensAvailableAtCurrentTier() payable: \n  if uint8(tokensCreated / tokensPerTier) > 4:\n      if 5 * tokensPerTier <= maxTokensToCreate:\n          if tokensCreated <= 5 * tokensPerTier:\n              return ((5 * tokensPerTier) - tokensCreated)\n      else:\n          if tokensCreated <= maxTokensToCreate:\n              return (maxTokensToCreate - tokensCreated)\n  else:\n      if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n          if tokensCreated <= tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1):\n              return ((tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated)\n      else:\n          if tokensCreated <= maxTokensToCreate:\n              return (maxTokensToCreate - tokensCreated)\n  return 0\n\ndef recallVoteToFreezeFund() payable: \n  if not balanceOf[caller]:\n      mem[288] = mem[304 len 16]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=16, data=mem[288]))\n  else:\n      if isFreezeEnabled:\n          mem[288] = mem[307 len 13]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=13, data=mem[288]))\n      else:\n          if call.value <= 0:\n              supportFreezeQuorum -= votedFreeze[caller]\n              votedFreeze[caller] = 0\n              stop\n          mem[288] = mem[313 len 7]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=7, data=mem[288]))\n  require stor0\n\ndef collectMyReturn() payable: \n  if not balanceOf[caller]:\n      mem[288] = mem[304 len 16]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=16, data=mem[288]))\n  else:\n      if call.value > 0:\n          mem[288] = mem[313 len 7]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=7, data=mem[288]))\n      else:\n          if isDistributionReady:\n              balanceOf[caller] = 0\n              call returnWalletAddress.unknown9f3ef430(address _param1, uint256 _param2) with:\n                   gas gas_remaining - 25050 wei\n                  args caller, balanceOf[caller]\n              require ext_call.success\n              stop\n          mem[288] = Mask(80, 88, 'onlyDistributionReady') >> 88, mem[309 len 11]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=21, data=mem[288]))\n  require stor0\n\ndef voteToHarvestFund() payable: \n  if not balanceOf[caller]:\n      mem[288] = mem[304 len 16]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=16, data=mem[288]))\n      require stor0\n      stop\n  if call.value > 0:\n      mem[288] = mem[313 len 7]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=7, data=mem[288]))\n      require stor0\n      stop\n  if not isFundLocked:\n      mem[288] = mem[310 len 10]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=10, data=mem[288]))\n      require stor0\n      stop\n  if stor35 < 4:\n      mem[288] = Mask(48, 104, 'currentFiscalYear<4') >> 104, mem[307 len 13]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=19, data=mem[288]))\n      require stor0\n      stop\n  supportHarvestQuorum -= votedHarvest[caller]\n  supportHarvestQuorum = balanceOf[caller] + supportHarvestQuorum - votedHarvest[caller]\n  votedHarvest[caller] = balanceOf[caller]\n  if supportHarvestQuorum > (bountyTokensCreated * harvestQuorumPercent) + (tokensCreated * harvestQuorumPercent) / 100:\n      isHarvestEnabled = 1\n      log evHarvest(\n            address msg_sender=caller,\n            uint256 msg_value=call.value)\n\ndef mgmtInvestProject(address _projectWallet, uint256 _amount) payable: \n  if managementBodyAddress != caller:\n      mem[288] = Mask(32, 112, 'onlyManagementBody') >> 112, mem[306 len 14]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=18, data=mem[288]))\n  else:\n      if call.value <= 0:\n          mem[288] = mem[312 len 8]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=8, data=mem[288]))\n      else:\n          if not stor37[stor35]:\n              log evMgmtInvestProject(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    address _projectWallet=address(_projectWallet),\n                    uint256 _amount=_amount,\n                    bool result=0)\n              return 0\n          if isFreezeEnabled:\n              log evMgmtInvestProject(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    address _projectWallet=address(_projectWallet),\n                    uint256 _amount=_amount,\n                    bool result=0)\n              return 0\n          if isHarvestEnabled:\n              log evMgmtInvestProject(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    address _projectWallet=address(_projectWallet),\n                    uint256 _amount=_amount,\n                    bool result=0)\n              return 0\n          if _amount >= eth.balance(this.address):\n              mem[352] = 0, mem[369 len 15]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=49, data='failed:mgmtInvestProject: amount', ' >= actualBalance', mem[352]))\n          else:\n              call _projectWallet with:\n                 value _amount wei\n                   gas gas_remaining - 34050 wei\n              if ext_call.success:\n                  log evMgmtInvestProject(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        address _projectWallet=address(_projectWallet),\n                        uint256 _amount=_amount,\n                        bool result=1)\n                  return 0\n              mem[352] = 0, mem[375 len 9]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=55, data='failed:mgmtInvestProject: cannot', ' send to _projectWallet', mem[352]))\n  require stor0\n  return 0\n\ndef refundMyIcoInvestment() payable: \n  if call.value > 0:\n      mem[288] = mem[313 len 7]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=7, data=mem[288]))\n      if stor0:\n          stop\n  else:\n      if isFundLocked:\n          mem[288] = mem[311 len 9]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=9, data=mem[288]))\n          if stor0:\n              stop\n      else:\n          if not balanceOf[caller]:\n              mem[288] = mem[304 len 16]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=16, data=mem[288]))\n              if stor0:\n                  stop\n          else:\n              if not stor28[caller]:\n                  mem[288] = mem[310 len 10]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=10, data=mem[288]))\n                  if stor0:\n                      stop\n              else:\n                  if balanceOf[caller] > tokensCreated:\n                      mem[288] = Mask(16, 120, 'invalidTokenCount') >> 120, mem[305 len 15]\n                      log evRecord(\n                            address msg_sender=caller,\n                            uint256 msg_value=call.value,\n                            string message=Array(len=17, data=mem[288]))\n                      if stor0:\n                          stop\n                  else:\n                      balanceOf[caller] = 0\n                      stor28[caller] = 0\n                      taxPaid[caller] = 0\n                      tokensCreated -= balanceOf[caller]\n                      call extraBalanceWalletAddress.unknown51fa7efd(uint256 _param1) with:\n                           gas gas_remaining - 25050 wei\n                          args taxPaid[caller]\n                      if ext_call.success:\n                          call caller with:\n                             value stor28[caller] wei\n                               gas 0 wei\n                          if ext_call.success:\n                              log evRefund(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    address to=stor28[caller],\n                                    uint256 value=1,\n                                    bool result=caller)\n                              stop\n                          log evRefund(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                address to=stor28[caller],\n                                uint256 value=0,\n                                bool result=caller)\n                          mem[288] = Mask(16, 120, 'refund:SendFailed') >> 120, mem[305 len 15]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=17, data=mem[288]))\n                          if stor0:\n                              stop\n  revert \n\ndef transfer(address recipient, uint256 amount) payable: \n  if stor35 < 4:\n      if votedKickoff[stor35 + 1][caller] <= amount:\n          supportKickoffQuorum[stor35 + 1] -= votedKickoff[stor35 + 1][caller]\n          votedKickoff[stor35 + 1][caller] = 0\n      else:\n          votedKickoff[stor35 + 1][caller] -= amount\n          supportKickoffQuorum[stor35 + 1] -= amount\n  if votedFreeze[caller] <= amount:\n      supportFreezeQuorum -= votedFreeze[caller]\n      votedFreeze[caller] = 0\n  else:\n      votedFreeze[caller] -= amount\n      supportFreezeQuorum -= amount\n  if votedHarvest[caller] <= amount:\n      supportHarvestQuorum -= votedHarvest[caller]\n      votedHarvest[caller] = 0\n  else:\n      votedHarvest[caller] -= amount\n      supportHarvestQuorum -= amount\n  if not isFundLocked:\n      mem[352] = mem[378 len 6]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=38, data='failed:transfer: isFundLocked is', ' false', mem[352]))\n      if stor0:\n          return 0\n  else:\n      if call.value <= 0:\n          if amount > 0:\n              if balanceOf[caller] >= amount:\n                  if amount + balanceOf[address(recipient)] >= balanceOf[address(recipient)]:\n                      balanceOf[caller] -= amount\n                      balanceOf[recipient] += amount\n                      log evTransfer(\n                            address msg_sender=caller,\n                            uint256 msg_value=call.value,\n                            address _from=amount,\n                            address _to=caller,\n                            uint256 _amount=recipient)\n                      return 1\n          if isFundLocked:\n              mem[352] = 0, mem[371 len 13]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=51, data='failed:transfer: cannot send sen', 'd to _projectWallet', mem[352]))\n          else:\n              mem[352] = mem[378 len 6]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=38, data='failed:transfer: isFundLocked is', ' false', mem[352]))\n          if stor0:\n              return 0\n      else:\n          mem[288] = mem[313 len 7]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=7, data=mem[288]))\n          if stor0:\n              if isFundLocked:\n                  mem[416] = 0, mem[435 len 13]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=51, data='failed:transfer: cannot send sen', 'd to _projectWallet', mem[416]))\n              else:\n                  mem[416] = mem[442 len 6]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=38, data='failed:transfer: isFundLocked is', ' false', mem[416]))\n              if stor0:\n                  return 0\n  revert \n\ndef voteToKickoffNewFiscalYear() payable: \n  if not balanceOf[caller]:\n      mem[288] = mem[304 len 16]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=16, data=mem[288]))\n      require stor0\n      stop\n  if call.value > 0:\n      mem[288] = mem[313 len 7]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=7, data=mem[288]))\n      require stor0\n      stop\n  if not isFundLocked:\n      mem[288] = mem[310 len 10]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=10, data=mem[288]))\n      require stor0\n      stop\n  if stor20A3:\n      if stor35 > 3:\n          mem[288] = mem[305 len 15]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=15, data=mem[288]))\n          require stor0\n          stop\n      if lastKickoffDateBuffer + lastKickoffDate >= block.timestamp:\n          mem[288] = mem[304 len 16]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=16, data=mem[288]))\n          require stor0\n          stop\n  supportKickoffQuorum[stor35 + 1] -= votedKickoff[stor35 + 1][caller]\n  supportKickoffQuorum[stor35 + 1] = supportKickoffQuorum[stor35 + 1] - votedKickoff[stor35 + 1][caller] + balanceOf[caller]\n  votedKickoff[stor35 + 1][caller] = balanceOf[caller]\n  if supportKickoffQuorum[stor35 + 1] > (bountyTokensCreated * kickoffQuorumPercent) + (tokensCreated * kickoffQuorumPercent) / 100:\n      if stor35 + 1 != 1:\n          stor37[stor35 + 1] = 1\n          stor35++\n          lastKickoffDate = block.timestamp\n          call managementFeeWalletAddress.unknowna8bcbf3c(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args annualManagementFee\n          require ext_call.success\n      else:\n          call extraBalanceWalletAddress.unknownb1a8b25a() with:\n               gas gas_remaining - 25050 wei\n          require ext_call.success\n          totalInitialBalance = eth.balance(this.address)\n          Mask(254, 0, stor25.field_0) = mgmtFeePercentage * eth.balance(this.address) / 100 / 4\n          stor25.field_254 % 4 = 0\n          call managementFeeWalletAddress with:\n             value mgmtFeePercentage * eth.balance(this.address) / 100 wei\n               gas 0 wei\n          if not ext_call.success:\n              mem[352] = mem[381 len 3]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=35, data='kickoff:ManagementFeePoolWalletF', 'ail', mem[352]))\n              require stor0\n              stop\n          stor37[stor35 + 1] = 1\n          stor35++\n          lastKickoffDate = block.timestamp\n          call managementFeeWalletAddress.unknowna8bcbf3c(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args annualManagementFee\n      log evKickoff(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            uint256 _fiscal=stor35 + 1)\n      log evIssueManagementFee(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            uint256 _amount=annualManagementFee,\n            bool _success=1)\n\ndef mgmtDistribute() payable: \n  if managementBodyAddress != caller:\n      mem[288] = Mask(32, 112, 'onlyManagementBody') >> 112, mem[306 len 14]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=18, data=mem[288]))\n      require stor0\n      stop\n  if call.value <= 0:\n      mem[288] = mem[312 len 8]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=8, data=mem[288]))\n      require stor0\n      stop\n  if not isHarvestEnabled:\n      mem[288] = Mask(32, 112, 'onlyHarvestEnabled') >> 112, mem[306 len 14]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=18, data=mem[288]))\n      require stor0\n      stop\n  if isDistributionReady:\n      mem[288] = Mask(128, 64, 'onlyDistributionNotReady') >> 64, mem[312 len 8]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=24, data=mem[288]))\n      require stor0\n      stop\n  if isDistributionInProgress:\n      mem[288] = Mask(208, 24, 'onlyDistributionNotInProgress') >> 24, mem[317 len 3]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=29, data=mem[288]))\n      require stor0\n      stop\n  isDistributionInProgress = 1\n  isDistributionReady = 1\n  Mask(224, 0, stor38.field_32) = 0\n  stor38.field_256 % 1 = 0\n  call returnWalletAddress with:\n     value eth.balance(this.address) wei\n       gas 0 wei\n  if ext_call.success:\n      call managementFeeWalletAddress.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      call stor39.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      call extraBalanceWalletAddress.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      if mgmtRewardPercentage <= 0:\n          call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args (bountyTokensCreated + tokensCreated)\n          require ext_call.success\n      else:\n          call returnWalletAddress.unknownb8b27765(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args mgmtRewardPercentage\n          require ext_call.success\n          call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args (bountyTokensCreated + tokensCreated)\n      log evMgmtDistributed(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            uint256 _amount=eth.balance(returnWalletAddress),\n            bool _success=1)\n  else:\n      mem[352] = mem[381 len 3]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=35, data='payBalanceToReturnWallet:sendFai', 'led', mem[352]))\n      require stor0\n      call managementFeeWalletAddress.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      require ext_call.success\n      call stor39.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      call extraBalanceWalletAddress.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      if mgmtRewardPercentage <= 0:\n          call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args (bountyTokensCreated + tokensCreated)\n          require ext_call.success\n      else:\n          call returnWalletAddress.unknownb8b27765(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args mgmtRewardPercentage\n          require ext_call.success\n          call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args (bountyTokensCreated + tokensCreated)\n      log evMgmtDistributed(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            uint256 _amount=eth.balance(returnWalletAddress),\n            bool _success=1)\n  isDistributionInProgress = 0\n\ndef voteToFreezeFund() payable: \n  if not balanceOf[caller]:\n      mem[288] = mem[304 len 16]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=16, data=mem[288]))\n      require stor0\n      stop\n  if call.value > 0:\n      mem[288] = mem[313 len 7]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=7, data=mem[288]))\n      require stor0\n      stop\n  if not isFundLocked:\n      mem[288] = mem[310 len 10]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=10, data=mem[288]))\n      require stor0\n      stop\n  if stor35 >= 4:\n      mem[288] = Mask(64, 96, 'currentFiscalYear>=4') >> 96, mem[308 len 12]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=20, data=mem[288]))\n      require stor0\n      stop\n  if isDistributionInProgress:\n      mem[288] = Mask(208, 24, 'onlyDistributionNotInProgress') >> 24, mem[317 len 3]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=29, data=mem[288]))\n      require stor0\n      stop\n  supportFreezeQuorum -= votedFreeze[caller]\n  supportFreezeQuorum = balanceOf[caller] + supportFreezeQuorum - votedFreeze[caller]\n  votedFreeze[caller] = balanceOf[caller]\n  if supportFreezeQuorum > (bountyTokensCreated * freezeQuorumPercent) + (tokensCreated * freezeQuorumPercent) / 100:\n      isFreezeEnabled = 1\n      if isDistributionInProgress:\n          mem[288] = Mask(208, 24, 'onlyDistributionNotInProgress') >> 24, mem[317 len 3]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=29, data=mem[288]))\n          require stor0\n      else:\n          isDistributionInProgress = 1\n          isDistributionReady = 1\n          Mask(224, 0, stor38.field_32) = 0\n          stor38.field_256 % 1 = 0\n          call returnWalletAddress with:\n             value eth.balance(this.address) wei\n               gas 0 wei\n          if ext_call.success:\n              call managementFeeWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call stor39.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call extraBalanceWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                   gas gas_remaining - 25050 wei\n                  args (bountyTokensCreated + tokensCreated)\n              require ext_call.success\n              log evMgmtDistributed(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    uint256 _amount=eth.balance(returnWalletAddress),\n                    bool _success=1)\n          else:\n              mem[352] = mem[381 len 3]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=35, data='payBalanceToReturnWallet:sendFai', 'led', mem[352]))\n              require stor0\n              call managementFeeWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              require ext_call.success\n              call stor39.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call extraBalanceWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                   gas gas_remaining - 25050 wei\n                  args (bountyTokensCreated + tokensCreated)\n              require ext_call.success\n              log evMgmtDistributed(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    uint256 _amount=eth.balance(returnWalletAddress),\n                    bool _success=1)\n          isDistributionInProgress = 0\n      log evFreeze(\n            address msg_sender=caller,\n            uint256 msg_value=call.value)\n\ndef _fallback(?) payable: # default function\n  if not calldata.size:\n      if extraBalanceWalletAddress == caller:\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=34, data='Recevied ether from ManagedAccou', 'nt'))\n          return 1\n      if caller == returnWalletAddress:\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=34, data='Recevied ether from ManagedAccou', 'nt'))\n          return 1\n      if caller == stor39:\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=34, data='Recevied ether from ManagedAccou', 'nt'))\n          return 1\n      if caller == managementFeeWalletAddress:\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=34, data='Recevied ether from ManagedAccou', 'nt'))\n          return 1\n      if isFundLocked:\n          mem[288] = mem[311 len 9]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=9, data=mem[288]))\n          require stor0\n          return 0\n      if isFundReleased:\n          mem[288] = mem[309 len 11]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=11, data=mem[288]))\n          require stor0\n          return 0\n      if call.value <= 0:\n          mem[288] = mem[312 len 8]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=8, data=mem[288]))\n          require stor0\n          return 0\n      if uint8(tokensCreated / tokensPerTier) > 4:\n          if 5 * tokensPerTier > maxTokensToCreate:\n              if tokensCreated > maxTokensToCreate:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if not maxTokensToCreate - tokensCreated:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if call.value >= 120 * weiPerInitialHONG / 100:\n                  if maxTokensToCreate - tokensCreated < call.value / 120 * weiPerInitialHONG / 100:\n                      if maxTokensToCreate - tokensCreated:\n                          balanceOf[caller] = maxTokensToCreate - tokensCreated + balanceOf[caller]\n                          tokensCreated = maxTokensToCreate\n                          stor28[caller] = (maxTokensToCreate * 120 * weiPerInitialHONG / 100) - (tokensCreated * 120 * weiPerInitialHONG / 100) + stor28[caller]\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier <= maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              balanceOf[caller] += call.value / 120 * weiPerInitialHONG / 100\n                              tokensCreated += call.value / 120 * weiPerInitialHONG / 100\n                              stor28[caller] += call.value / 120 * weiPerInitialHONG / 100 * 120 * weiPerInitialHONG / 100\n                          else:\n                              balanceOf[caller] = maxTokensToCreate - tokensCreated + balanceOf[caller]\n                              tokensCreated = maxTokensToCreate\n                              stor28[caller] = (maxTokensToCreate * 120 * weiPerInitialHONG / 100) - (tokensCreated * 120 * weiPerInitialHONG / 100) + stor28[caller]\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                  else:\n                      balanceOf[caller] += call.value / 120 * weiPerInitialHONG / 100\n                      tokensCreated += call.value / 120 * weiPerInitialHONG / 100\n                      stor28[caller] += call.value / 120 * weiPerInitialHONG / 100 * 120 * weiPerInitialHONG / 100\n                      if maxTokensToCreate - tokensCreated:\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier <= maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                          else:\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n              else:\n                  stor28[caller] += call.value\n                  if not isFundReleased:\n                      stor33 = tokensCreated >= maxTokensToCreate or Mask(248, 8, stor33)\n                      if uint8(tokensCreated >= maxTokensToCreate):\n                          if isFundLocked:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                              else:\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if isFundLocked:\n                                      log evLockFund(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value)\n                                  if tokensCreated < minTokensToCreate:\n                                  else:\n                                      if isFundReleased:\n                                          log evReleaseFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                          else:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                              else:\n                                  if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                      if tokensCreated >= minTokensToCreate:\n                                          isFundLocked = 1\n                                      isDaySixtyChecked = 1\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if not isFundLocked:\n                                                  if isFundReleased:\n                                                      log evReleaseFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                                              else:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                      else:\n                          if isDayThirtyChecked:\n                              if isFundLocked:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if tokensCreated >= minTokensToCreate:\n                                          if isFundLocked:\n                                              log evLockFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                              else:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                          if tokensCreated >= minTokensToCreate:\n                                              isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          if isDaySixtyChecked:\n                                              if tokensCreated < minTokensToCreate:\n                                                  isFundReleased = 1\n                                          else:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                              if tokensCreated >= minTokensToCreate:\n                                                  if isFundLocked:\n                                                      log evLockFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                          else:\n                              if block.timestamp < closingTime:\n                                  if isFundLocked:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if not isFundLocked:\n                                                  if isFundReleased:\n                                                      log evReleaseFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                                              else:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                      else:\n                                          if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                                              if isDaySixtyChecked:\n                                                  if tokensCreated < minTokensToCreate:\n                                                      isFundReleased = 1\n                                              else:\n                                                  log evCreatedToken(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value,\n                                                        address to=0,\n                                                        uint256 amount=caller)\n                                                  if tokensCreated >= minTokensToCreate:\n                                          else:\n                                              if tokensCreated >= minTokensToCreate:\n                                                  isFundLocked = 1\n                                              isDaySixtyChecked = 1\n                              else:\n                                  if tokensCreated >= minTokensToCreate:\n                                      isFundLocked = 1\n                                  isDayThirtyChecked = 1\n                                  if not isFundLocked:\n                                      if not isDaySixtyChecked:\n                                          if block.timestamp < closingTime + closingTimeExtensionPeriod:\n          else:\n              if tokensCreated > 5 * tokensPerTier:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if not (5 * tokensPerTier) - tokensCreated:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if call.value >= 120 * weiPerInitialHONG / 100:\n                  if (5 * tokensPerTier) - tokensCreated < call.value / 120 * weiPerInitialHONG / 100:\n                      if (5 * tokensPerTier) - tokensCreated:\n                          balanceOf[caller] = (5 * tokensPerTier) - tokensCreated + balanceOf[caller]\n                          tokensCreated = 5 * tokensPerTier\n                          stor28[caller] = (5 * tokensPerTier * 120 * weiPerInitialHONG / 100) - (tokensCreated * 120 * weiPerInitialHONG / 100) + stor28[caller]\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier > maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) > maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              balanceOf[caller] += call.value / 120 * weiPerInitialHONG / 100\n                              tokensCreated += call.value / 120 * weiPerInitialHONG / 100\n                              stor28[caller] += call.value / 120 * weiPerInitialHONG / 100 * 120 * weiPerInitialHONG / 100\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                          else:\n                              balanceOf[caller] = (5 * tokensPerTier) - tokensCreated + balanceOf[caller]\n                              tokensCreated = 5 * tokensPerTier\n                              stor28[caller] = (5 * tokensPerTier * 120 * weiPerInitialHONG / 100) - (tokensCreated * 120 * weiPerInitialHONG / 100) + stor28[caller]\n                              if uint8(tokensCreated / tokensPerTier) > 4:\n                                  if 5 * tokensPerTier <= maxTokensToCreate:\n                              else:\n                                  if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                  else:\n                      balanceOf[caller] += call.value / 120 * weiPerInitialHONG / 100\n                      tokensCreated += call.value / 120 * weiPerInitialHONG / 100\n                      stor28[caller] += call.value / 120 * weiPerInitialHONG / 100 * 120 * weiPerInitialHONG / 100\n                      if (5 * tokensPerTier) - tokensCreated:\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier > maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) > maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                          else:\n                              if uint8(tokensCreated / tokensPerTier) > 4:\n                                  if 5 * tokensPerTier <= maxTokensToCreate:\n                              else:\n                                  if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n              else:\n                  stor28[caller] += call.value\n                  if not isFundReleased:\n                      stor33 = tokensCreated >= maxTokensToCreate or Mask(248, 8, stor33)\n                      if uint8(tokensCreated >= maxTokensToCreate):\n                          if isFundLocked:\n                              if not isDaySixtyChecked:\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated < minTokensToCreate:\n                                      if not isFundLocked:\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                                      else:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                  else:\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                      if isFundReleased:\n                                          log evReleaseFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                              else:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                          else:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                              else:\n                                  if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                      if tokensCreated >= minTokensToCreate:\n                                          isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          isDaySixtyChecked = 1\n                                          if not isDaySixtyChecked:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if isFundLocked:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                              if isFundReleased:\n                                                  log evReleaseFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                      else:\n                          if isDayThirtyChecked:\n                              if isFundLocked:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if tokensCreated >= minTokensToCreate:\n                                  else:\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                      if tokensCreated < minTokensToCreate:\n                                      else:\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                              else:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                          if tokensCreated >= minTokensToCreate:\n                                              isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          if isDaySixtyChecked:\n                                              if tokensCreated < minTokensToCreate:\n                                                  isFundReleased = 1\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                          else:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                              if tokensCreated >= minTokensToCreate:\n                                                  if not isFundLocked:\n                                                      if isFundReleased:\n                                                          log evReleaseFund(\n                                                                address msg_sender=caller,\n                                                                uint256 msg_value=call.value)\n                                                  else:\n                                                      log evLockFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                          else:\n                              if block.timestamp >= closingTime:\n                                  if tokensCreated < minTokensToCreate:\n                                      isDayThirtyChecked = 1\n                                      if isFundLocked:\n                                          if not isDaySixtyChecked:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                      else:\n                                          if not isDaySixtyChecked:\n                                              if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                                  else:\n                                      isFundLocked = 1\n                                      isDayThirtyChecked = 1\n                                      if not isFundLocked:\n                                          if not isDaySixtyChecked:\n                                              if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                              else:\n                                  if isFundLocked:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if isFundLocked:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                              if isFundReleased:\n                                                  log evReleaseFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                              if tokensCreated >= minTokensToCreate:\n                                                  isFundLocked = 1\n                                              isDaySixtyChecked = 1\n                                          else:\n                                              if isDaySixtyChecked:\n                                                  if tokensCreated < minTokensToCreate:\n                                                      isFundReleased = 1\n                                              else:\n                                                  log evCreatedToken(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value,\n                                                        address to=0,\n                                                        uint256 amount=caller)\n                                                  if tokensCreated >= minTokensToCreate:\n                                                      if isFundLocked:\n                                                          log evLockFund(\n                                                                address msg_sender=caller,\n                                                                uint256 msg_value=call.value)\n      else:\n          if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) > maxTokensToCreate:\n              if tokensCreated > maxTokensToCreate:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if not maxTokensToCreate - tokensCreated:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if call.value >= weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100:\n                  if maxTokensToCreate - tokensCreated < call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100:\n                      if maxTokensToCreate - tokensCreated:\n                          balanceOf[caller] = maxTokensToCreate - tokensCreated + balanceOf[caller]\n                          tokensCreated = maxTokensToCreate\n                          stor28[caller] = (maxTokensToCreate * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) - (tokensCreated * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) + stor28[caller]\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier <= maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              balanceOf[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                              tokensCreated += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                              stor28[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100 * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                          else:\n                              balanceOf[caller] = maxTokensToCreate - tokensCreated + balanceOf[caller]\n                              tokensCreated = maxTokensToCreate\n                              stor28[caller] = (maxTokensToCreate * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) - (tokensCreated * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) + stor28[caller]\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                  else:\n                      balanceOf[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      tokensCreated += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      stor28[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100 * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      if maxTokensToCreate - tokensCreated:\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier <= maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                          else:\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n              else:\n                  stor28[caller] += call.value\n                  if not isFundReleased:\n                      stor33 = tokensCreated >= maxTokensToCreate or Mask(248, 8, stor33)\n                      if uint8(tokensCreated >= maxTokensToCreate):\n                          if isFundLocked:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                              else:\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if isFundLocked:\n                                      log evLockFund(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value)\n                                  if tokensCreated < minTokensToCreate:\n                                  else:\n                                      if isFundReleased:\n                                          log evReleaseFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                          else:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                              else:\n                                  if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                      if tokensCreated >= minTokensToCreate:\n                                          isFundLocked = 1\n                                      isDaySixtyChecked = 1\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if not isFundLocked:\n                                                  if isFundReleased:\n                                                      log evReleaseFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                                              else:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                      else:\n                          if isDayThirtyChecked:\n                              if isFundLocked:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if tokensCreated >= minTokensToCreate:\n                                          if isFundLocked:\n                                              log evLockFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                              else:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                          if tokensCreated >= minTokensToCreate:\n                                              isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          if isDaySixtyChecked:\n                                              if tokensCreated < minTokensToCreate:\n                                                  isFundReleased = 1\n                                          else:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                              if tokensCreated >= minTokensToCreate:\n                                                  if isFundLocked:\n                                                      log evLockFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                          else:\n                              if block.timestamp < closingTime:\n                                  if isFundLocked:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if not isFundLocked:\n                                                  if isFundReleased:\n                                                      log evReleaseFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                                              else:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                      else:\n                                          if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                                              if isDaySixtyChecked:\n                                                  if tokensCreated < minTokensToCreate:\n                                                      isFundReleased = 1\n                                              else:\n                                                  log evCreatedToken(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value,\n                                                        address to=0,\n                                                        uint256 amount=caller)\n                                                  if tokensCreated >= minTokensToCreate:\n                                          else:\n                                              if tokensCreated >= minTokensToCreate:\n                                                  isFundLocked = 1\n                                              isDaySixtyChecked = 1\n                              else:\n                                  if tokensCreated >= minTokensToCreate:\n                                      isFundLocked = 1\n                                  isDayThirtyChecked = 1\n                                  if not isFundLocked:\n                                      if not isDaySixtyChecked:\n                                          if block.timestamp < closingTime + closingTimeExtensionPeriod:\n          else:\n              if tokensCreated > tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1):\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if not (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if call.value >= weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100:\n                  if (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated < call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100:\n                      if (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated:\n                          balanceOf[caller] = (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated + balanceOf[caller]\n                          tokensCreated = tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)\n                          stor28[caller] = (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) - (tokensCreated * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) + stor28[caller]\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier > maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) > maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              balanceOf[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                              tokensCreated += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                              stor28[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100 * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                          else:\n                              balanceOf[caller] = (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated + balanceOf[caller]\n                              tokensCreated = tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)\n                              stor28[caller] = (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) - (tokensCreated * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) + stor28[caller]\n                              if uint8(tokensCreated / tokensPerTier) > 4:\n                                  if 5 * tokensPerTier <= maxTokensToCreate:\n                              else:\n                                  if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                  else:\n                      balanceOf[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      tokensCreated += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      stor28[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100 * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      if (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated:\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier > maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) > maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                          else:\n                              if uint8(tokensCreated / tokensPerTier) > 4:\n                                  if 5 * tokensPerTier <= maxTokensToCreate:\n                              else:\n                                  if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n              else:\n                  stor28[caller] += call.value\n                  if not isFundReleased:\n                      stor33 = tokensCreated >= maxTokensToCreate or Mask(248, 8, stor33)\n                      if uint8(tokensCreated >= maxTokensToCreate):\n                          if isFundLocked:\n                              if not isDaySixtyChecked:\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated < minTokensToCreate:\n                                      if not isFundLocked:\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                                      else:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                  else:\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                      if isFundReleased:\n                                          log evReleaseFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                              else:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                          else:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                              else:\n                                  if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                      if tokensCreated >= minTokensToCreate:\n                                          isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          isDaySixtyChecked = 1\n                                          if not isDaySixtyChecked:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if isFundLocked:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                              if isFundReleased:\n                                                  log evReleaseFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                      else:\n                          if isDayThirtyChecked:\n                              if isFundLocked:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if tokensCreated >= minTokensToCreate:\n                                  else:\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                      if tokensCreated < minTokensToCreate:\n                                      else:\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                              else:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                          if tokensCreated >= minTokensToCreate:\n                                              isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          if isDaySixtyChecked:\n                                              if tokensCreated < minTokensToCreate:\n                                                  isFundReleased = 1\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                          else:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                              if tokensCreated >= minTokensToCreate:\n                                                  if not isFundLocked:\n                                                      if isFundReleased:\n                                                          log evReleaseFund(\n                                                                address msg_sender=caller,\n                                                                uint256 msg_value=call.value)\n                                                  else:\n                                                      log evLockFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                          else:\n                              if block.timestamp >= closingTime:\n                                  if tokensCreated < minTokensToCreate:\n                                      isDayThirtyChecked = 1\n                                      if isFundLocked:\n                                          if not isDaySixtyChecked:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                      else:\n                                          if not isDaySixtyChecked:\n                                              if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                                  else:\n                                      isFundLocked = 1\n                                      isDayThirtyChecked = 1\n                                      if not isFundLocked:\n                                          if not isDaySixtyChecked:\n                                              if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                              else:\n                                  if isFundLocked:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if isFundLocked:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                              if isFundReleased:\n                                                  log evReleaseFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                              if tokensCreated >= minTokensToCreate:\n                                                  isFundLocked = 1\n                                              isDaySixtyChecked = 1\n                                          else:\n                                              if isDaySixtyChecked:\n                                                  if tokensCreated < minTokensToCreate:\n                                                      isFundReleased = 1\n                                              else:\n                                                  log evCreatedToken(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value,\n                                                        address to=0,\n                                                        uint256 amount=caller)\n                                                  if tokensCreated >= minTokensToCreate:\n                                                      if isFundLocked:\n                                                          log evLockFund(\n                                                                address msg_sender=caller,\n                                                                uint256 msg_value=call.value)\n  else:\n      if uint32(call.func_hash) == isFundReleased():\n          return bool(isFundReleased)\n      if mgmtDistribute() == uint32(call.func_hash):\n          if managementBodyAddress != caller:\n              mem[288] = Mask(32, 112, 'onlyManagementBody') >> 112, mem[306 len 14]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=18, data=mem[288]))\n              require stor0\n              stop\n          if call.value <= 0:\n              mem[288] = mem[312 len 8]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=8, data=mem[288]))\n              require stor0\n              stop\n          if not isHarvestEnabled:\n              mem[288] = Mask(32, 112, 'onlyHarvestEnabled') >> 112, mem[306 len 14]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=18, data=mem[288]))\n              require stor0\n              stop\n          if isDistributionReady:\n              mem[288] = Mask(128, 64, 'onlyDistributionNotReady') >> 64, mem[312 len 8]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=24, data=mem[288]))\n              require stor0\n              stop\n          if isDistributionInProgress:\n              mem[288] = Mask(208, 24, 'onlyDistributionNotInProgress') >> 24, mem[317 len 3]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=29, data=mem[288]))\n              require stor0\n              stop\n          isDistributionInProgress = 1\n          isDistributionReady = 1\n          Mask(224, 0, stor38.field_32) = 0\n          stor38.field_256 % 1 = 0\n          call returnWalletAddress with:\n             value eth.balance(this.address) wei\n               gas 0 wei\n          if ext_call.success:\n              call managementFeeWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call stor39.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call extraBalanceWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              if mgmtRewardPercentage <= 0:\n                  call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args (bountyTokensCreated + tokensCreated)\n                  require ext_call.success\n              else:\n                  call returnWalletAddress.unknownb8b27765(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args mgmtRewardPercentage\n                  require ext_call.success\n                  call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args (bountyTokensCreated + tokensCreated)\n              log evMgmtDistributed(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    uint256 _amount=eth.balance(returnWalletAddress),\n                    bool _success=1)\n          else:\n              mem[352] = mem[381 len 3]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=35, data='payBalanceToReturnWallet:sendFai', 'led', mem[352]))\n              require stor0\n              call managementFeeWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              require ext_call.success\n              call stor39.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call extraBalanceWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              if mgmtRewardPercentage <= 0:\n                  call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args (bountyTokensCreated + tokensCreated)\n                  require ext_call.success\n              else:\n                  call returnWalletAddress.unknownb8b27765(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args mgmtRewardPercentage\n                  require ext_call.success\n                  call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args (bountyTokensCreated + tokensCreated)\n              log evMgmtDistributed(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    uint256 _amount=eth.balance(returnWalletAddress),\n                    bool _success=1)\n          isDistributionInProgress = 0\n          stop\n      if uint32(call.func_hash) != name():\n          if weiPerInitialHONG() == uint32(call.func_hash):\n              return weiPerInitialHONG\n          if votedHarvest(address ) == uint32(call.func_hash):\n              return votedHarvest[_param1]\n          if minTokensToCreate() == uint32(call.func_hash):\n              return minTokensToCreate\n          if supportHarvestQuorum() == uint32(call.func_hash):\n              return supportHarvestQuorum\n          if extraBalanceWallet() == uint32(call.func_hash):\n              return extraBalanceWalletAddress\n          if totalInitialBalance() == uint32(call.func_hash):\n              return totalInitialBalance\n          if divisor() == uint32(call.func_hash):\n              if uint8(tokensCreated / tokensPerTier) > 4:\n                  return 120\n              return uint8((5 * tokensCreated / tokensPerTier) + 100)\n          if voteToHarvestFund() == uint32(call.func_hash):\n              if not balanceOf[caller]:\n                  mem[288] = mem[304 len 16]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=16, data=mem[288]))\n                  require stor0\n                  stop\n              if call.value > 0:\n                  mem[288] = mem[313 len 7]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=7, data=mem[288]))\n                  require stor0\n                  stop\n              if not isFundLocked:\n                  mem[288] = mem[310 len 10]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=10, data=mem[288]))\n                  require stor0\n                  stop\n              if stor35 < 4:\n                  mem[288] = Mask(48, 104, 'currentFiscalYear<4') >> 104, mem[307 len 13]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=19, data=mem[288]))\n                  require stor0\n                  stop\n              supportHarvestQuorum -= votedHarvest[caller]\n              supportHarvestQuorum = balanceOf[caller] + supportHarvestQuorum - votedHarvest[caller]\n              votedHarvest[caller] = balanceOf[caller]\n              if supportHarvestQuorum > (bountyTokensCreated * harvestQuorumPercent) + (tokensCreated * harvestQuorumPercent) / 100:\n                  isHarvestEnabled = 1\n                  log evHarvest(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value)\n              stop\n          if decimals() == uint32(call.func_hash):\n              return decimals\n          if pricePerTokenAtCurrentTier() == uint32(call.func_hash):\n              if uint8(tokensCreated / tokensPerTier) > 4:\n                  return (120 * weiPerInitialHONG / 100)\n              return (weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100)\n          if mgmtFeePercentage() == uint32(call.func_hash):\n              return mgmtFeePercentage\n          if tokensCreated() == uint32(call.func_hash):\n              return tokensCreated\n          if isDistributionReady() == uint32(call.func_hash):\n              return bool(isDistributionReady)\n          if closingTimeExtensionPeriod() == uint32(call.func_hash):\n              return closingTimeExtensionPeriod\n          if votedKickoff(uint256 _param1, address _param2) == uint32(call.func_hash):\n              return votedKickoff[_param1][_param2]\n          if closingTime() == uint32(call.func_hash):\n              return closingTime\n          if lastKickoffDateBuffer() == uint32(call.func_hash):\n              return lastKickoffDateBuffer\n          if isDayThirtyChecked() == uint32(call.func_hash):\n              return bool(isDayThirtyChecked)\n          if isFreezeEnabled() == uint32(call.func_hash):\n              return bool(isFreezeEnabled)\n          if collectMyReturn() == uint32(call.func_hash):\n              if not balanceOf[caller]:\n                  mem[288] = mem[304 len 16]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=16, data=mem[288]))\n              else:\n                  if call.value > 0:\n                      mem[288] = mem[313 len 7]\n                      log evRecord(\n                            address msg_sender=caller,\n                            uint256 msg_value=call.value,\n                            string message=Array(len=7, data=mem[288]))\n                  else:\n                      if isDistributionReady:\n                          balanceOf[caller] = 0\n                          call returnWalletAddress.unknown9f3ef430(address _param1, uint256 _param2) with:\n                               gas gas_remaining - 25050 wei\n                              args caller, balanceOf[caller]\n                          require ext_call.success\n                          stop\n                      mem[288] = Mask(80, 88, 'onlyDistributionReady') >> 88, mem[309 len 11]\n                      log evRecord(\n                            address msg_sender=caller,\n                            uint256 msg_value=call.value,\n                            string message=Array(len=21, data=mem[288]))\n              require stor0\n              stop\n          if isMinTokensReached() == uint32(call.func_hash):\n              return tokensCreated >= minTokensToCreate\n          if isDistributionInProgress() == uint32(call.func_hash):\n              return bool(isDistributionInProgress)\n          if lastKickoffDate() == uint32(call.func_hash):\n              return lastKickoffDate\n          if managementFeeWallet() == uint32(call.func_hash):\n              return managementFeeWalletAddress\n          if supportFreezeQuorum() == uint32(call.func_hash):\n              return supportFreezeQuorum\n          if balanceOf(address account) == uint32(call.func_hash):\n              return balanceOf[address(_param1)]\n          if tokensAvailableAtCurrentTier() == uint32(call.func_hash):\n              if uint8(tokensCreated / tokensPerTier) > 4:\n                  if 5 * tokensPerTier <= maxTokensToCreate:\n                      if tokensCreated <= 5 * tokensPerTier:\n                          return ((5 * tokensPerTier) - tokensCreated)\n                  else:\n                      if tokensCreated <= maxTokensToCreate:\n                          return (maxTokensToCreate - tokensCreated)\n              else:\n                  if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                      if tokensCreated <= tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1):\n                          return ((tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated)\n                  else:\n                      if tokensCreated <= maxTokensToCreate:\n                          return (maxTokensToCreate - tokensCreated)\n              return 0\n          if getCurrentTier() == uint32(call.func_hash):\n              if uint8(tokensCreated / tokensPerTier) > 4:\n                  return 4\n              return uint8(tokensCreated / tokensPerTier)\n          if isFundLocked() == uint32(call.func_hash):\n              return bool(isFundLocked)\n          if votedFreeze(address _param1) == uint32(call.func_hash):\n              return votedFreeze[_param1]\n          if returnWallet() == uint32(call.func_hash):\n              return returnWalletAddress\n          if kickoffQuorumPercent() == uint32(call.func_hash):\n              return kickoffQuorumPercent\n          if isMaxTokensReached() == uint32(call.func_hash):\n              return tokensCreated >= maxTokensToCreate\n          if freezeQuorumPercent() == uint32(call.func_hash):\n              return freezeQuorumPercent\n          if uint32(call.func_hash) != symbol():\n              if maxTokensToCreate() == uint32(call.func_hash):\n                  return maxTokensToCreate\n              if mgmtInvestProject(address _projectWallet, uint256 _amount) == uint32(call.func_hash):\n                  if managementBodyAddress != caller:\n                      mem[288] = Mask(32, 112, 'onlyManagementBody') >> 112, mem[306 len 14]\n                      log evRecord(\n                            address msg_sender=caller,\n                            uint256 msg_value=call.value,\n                            string message=Array(len=18, data=mem[288]))\n                  else:\n                      if call.value <= 0:\n                          mem[288] = mem[312 len 8]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=8, data=mem[288]))\n                      else:\n                          if not stor37[stor35]:\n                              log evMgmtInvestProject(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    address _projectWallet=address(_param1),\n                                    uint256 _amount=_param2,\n                                    bool result=0)\n                              return 0\n                          if isFreezeEnabled:\n                              log evMgmtInvestProject(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    address _projectWallet=address(_param1),\n                                    uint256 _amount=_param2,\n                                    bool result=0)\n                              return 0\n                          if isHarvestEnabled:\n                              log evMgmtInvestProject(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    address _projectWallet=address(_param1),\n                                    uint256 _amount=_param2,\n                                    bool result=0)\n                              return 0\n                          if _param2 >= eth.balance(this.address):\n                              mem[352] = 0, mem[369 len 15]\n                              log evRecord(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    string message=Array(len=49, data='failed:mgmtInvestProject: amount', ' >= actualBalance', mem[352]))\n                          else:\n                              call address(_param1) with:\n                                 value _param2 wei\n                                   gas gas_remaining - 34050 wei\n                              if ext_call.success:\n                                  log evMgmtInvestProject(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address _projectWallet=address(_param1),\n                                        uint256 _amount=_param2,\n                                        bool result=1)\n                                  return 0\n                              mem[352] = 0, mem[375 len 9]\n                              log evRecord(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    string message=Array(len=55, data='failed:mgmtInvestProject: cannot', ' send to _projectWallet', mem[352]))\n                  require stor0\n                  return 0\n              if isHarvestEnabled() == uint32(call.func_hash):\n                  return bool(isHarvestEnabled)\n              if tokensPerTier() == uint32(call.func_hash):\n                  return tokensPerTier\n              if transfer(address recipient, uint256 amount) == uint32(call.func_hash):\n                  if stor35 >= 4:\n                      if votedFreeze[caller] <= _param2:\n                          supportFreezeQuorum -= votedFreeze[caller]\n                          votedFreeze[caller] = 0\n                      else:\n                          votedFreeze[caller] -= _param2\n                          supportFreezeQuorum -= _param2\n                      if votedHarvest[caller] <= _param2:\n                          supportHarvestQuorum -= votedHarvest[caller]\n                          votedHarvest[caller] = 0\n                      else:\n                          votedHarvest[caller] -= _param2\n                          supportHarvestQuorum -= _param2\n                      if not isFundLocked:\n                          mem[352] = mem[378 len 6]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=38, data='failed:transfer: isFundLocked is', ' false', mem[352]))\n                          require stor0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if call.value > 0:\n                          mem[288] = mem[313 len 7]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=7, data=mem[288]))\n                          require stor0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _param2 > 0:\n                          if balanceOf[caller] >= _param2:\n                              if _param2 + balanceOf[address(_param1)] >= balanceOf[address(_param1)]:\n                                  balanceOf[caller] -= _param2\n                                  balanceOf[address(_param1)] += _param2\n                                  log evTransfer(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address _from=_param2,\n                                        address _to=caller,\n                                        uint256 _amount=address(_param1))\n                  else:\n                      if votedKickoff[stor35 + 1][caller] <= _param2:\n                          supportKickoffQuorum[stor35 + 1] -= votedKickoff[stor35 + 1][caller]\n                          votedKickoff[stor35 + 1][caller] = 0\n                      else:\n                          votedKickoff[stor35 + 1][caller] -= _param2\n                          supportKickoffQuorum[stor35 + 1] -= _param2\n                      if votedFreeze[caller] <= _param2:\n                          supportFreezeQuorum -= votedFreeze[caller]\n                          votedFreeze[caller] = 0\n                      else:\n                          votedFreeze[caller] -= _param2\n                          supportFreezeQuorum -= _param2\n                      if votedHarvest[caller] <= _param2:\n                          supportHarvestQuorum -= votedHarvest[caller]\n                          votedHarvest[caller] = 0\n                      else:\n                          votedHarvest[caller] -= _param2\n                          supportHarvestQuorum -= _param2\n                      if not isFundLocked:\n                          mem[352] = mem[378 len 6]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=38, data='failed:transfer: isFundLocked is', ' false', mem[352]))\n                      else:\n                          if call.value > 0:\n                              mem[288] = mem[313 len 7]\n                              log evRecord(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    string message=Array(len=7, data=mem[288]))\n                          else:\n                              if _param2 > 0:\n                                  if balanceOf[caller] >= _param2:\n                                      if _param2 + balanceOf[address(_param1)] >= balanceOf[address(_param1)]:\n                                          balanceOf[caller] -= _param2\n                                          balanceOf[address(_param1)] += _param2\n                                          log evTransfer(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address _from=_param2,\n                                                address _to=caller,\n                                                uint256 _amount=address(_param1))\n              else:\n                  if taxPaid(address _param1) == uint32(call.func_hash):\n                      return taxPaid[_param1]\n                  if maxBountyTokens() == uint32(call.func_hash):\n                      return maxBountyTokens\n                  if uint32(call.func_hash) != voteToKickoffNewFiscalYear():\n                      if supportKickoffQuorum(uint256 _param1) == uint32(call.func_hash):\n                          return supportKickoffQuorum[_param1]\n                      if isInTestMode() == uint32(call.func_hash):\n                          return bool(stor0)\n                      if managementBodyAddress() == uint32(call.func_hash):\n                          return managementBodyAddress\n                      if harvestQuorumPercent() == uint32(call.func_hash):\n                          return harvestQuorumPercent\n                      if isKickoffEnabled(uint256 _param1) == uint32(call.func_hash):\n                          return bool(stor37[_param1])\n                      if mgmtRewardPercentage() == uint32(call.func_hash):\n                          return mgmtRewardPercentage\n                      if recallVoteToFreezeFund() == uint32(call.func_hash):\n                          if balanceOf[caller]:\n                      else:\n                          if bountyTokensCreated() == uint32(call.func_hash):\n                              return bountyTokensCreated\n                          if annualManagementFee() == uint32(call.func_hash):\n                              return annualManagementFee\n                          if uint32(call.func_hash) != tokensAvailableAtTierInternal(uint8 _currentTier, uint256 _tokensPerTier, uint256 _tokensCreated):\n                  else:\n                      if not balanceOf[caller]:\n                          mem[288] = mem[304 len 16]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=16, data=mem[288]))\n                          require stor0\n                          stop\n                      if call.value > 0:\n                          mem[288] = mem[313 len 7]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=7, data=mem[288]))\n                          require stor0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if not isFundLocked:\n                          mem[288] = mem[310 len 10]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=10, data=mem[288]))\n                          require stor0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if stor20A3:\n                          if stor35 > 3:\n                              mem[288] = mem[305 len 15]\n                              log evRecord(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    string message=Array(len=15, data=mem[288]))\n                      else:\n                          supportKickoffQuorum[stor35 + 1] -= votedKickoff[stor35 + 1][caller]\n                          supportKickoffQuorum[stor35 + 1] = supportKickoffQuorum[stor35 + 1] - votedKickoff[stor35 + 1][caller] + balanceOf[caller]\n                          votedKickoff[stor35 + 1][caller] = balanceOf[caller]\n                          if supportKickoffQuorum[stor35 + 1] <= (bountyTokensCreated * kickoffQuorumPercent) + (tokensCreated * kickoffQuorumPercent) / 100:\n                              stop\n                          if stor35 + 1 != 1:\n                              stor37[stor35 + 1] = 1\n                              stor35++\n                              lastKickoffDate = block.timestamp\n                              call managementFeeWalletAddress.unknowna8bcbf3c(uint256 _param1) with:\n                                   gas gas_remaining - 25050 wei\n                                  args annualManagementFee\n                              require ext_call.success\n                              log evKickoff(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    uint256 _fiscal=stor35 + 1)\n                              log evIssueManagementFee(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    uint256 _amount=annualManagementFee,\n                                    bool _success=1)\n                          else:\n                              call extraBalanceWalletAddress.unknownb1a8b25a() with:\n                                   gas gas_remaining - 25050 wei\n                              require ext_call.success\n                              totalInitialBalance = eth.balance(this.address)\n                              Mask(254, 0, stor25.field_0) = mgmtFeePercentage * eth.balance(this.address) / 100 / 4\n                              stor25.field_254 % 4 = 0\n                              call managementFeeWalletAddress with:\n                                 value mgmtFeePercentage * eth.balance(this.address) / 100 wei\n                                   gas 0 wei\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: # Palkeoramix decompiler. \n\ndef storage:\n  stor0 is uint8 at storage 0\n  closingTime is uint256 at storage 1\n  weiPerInitialHONG is uint256 at storage 2\n  name is array of uint256 at storage 3\n  symbol is array of uint256 at storage 4\n  decimals is uint8 at storage 5\n  maxBountyTokens is uint256 at storage 6\n  closingTimeExtensionPeriod is uint256 at storage 7\n  minTokensToCreate is uint256 at storage 8\n  maxTokensToCreate is uint256 at storage 9\n  tokensPerTier is uint256 at storage 10\n  lastKickoffDateBuffer is uint256 at storage 11\n  mgmtRewardPercentage is uint256 at storage 12\n  mgmtFeePercentage is uint256 at storage 13\n  harvestQuorumPercent is uint256 at storage 14\n  freezeQuorumPercent is uint256 at storage 15\n  kickoffQuorumPercent is uint256 at storage 16\n  votedKickoff is mapping of uint256 at storage 18\n  votedFreeze is mapping of uint256 at storage 19\n  votedHarvest is mapping of uint256 at storage 20\n  supportKickoffQuorum is mapping of uint256 at storage 21\n  supportFreezeQuorum is uint256 at storage 22\n  supportHarvestQuorum is uint256 at storage 23\n  totalInitialBalance is uint256 at storage 24\n  stor25 is uint8 at storage 25 offset 254\n  stor25 is uint256 at storage 25\n  annualManagementFee is uint256 at storage 25\n  managementBodyAddress is address at storage 26\n  extraBalanceWalletAddress is address at storage 27\n  stor28 is mapping of uint256 at storage 28\n  taxPaid is mapping of uint256 at storage 29\n  balanceOf is mapping of uint256 at storage 30\n  tokensCreated is uint256 at storage 32\n  isFundLocked is uint8 at storage 33\n  isFundReleased is uint8 at storage 33 offset 8\n  isDayThirtyChecked is uint8 at storage 33 offset 16\n  isDaySixtyChecked is uint8 at storage 33 offset 24\n  stor33 is uint256 at storage 33\n  bountyTokensCreated is uint256 at storage 34\n  stor35 is uint256 at storage 35\n  lastKickoffDate is uint256 at storage 36\n  stor37 is mapping of uint8 at storage 37\n  stor38 is bool at storage 38 offset 256\n  isFreezeEnabled is uint8 at storage 38\n  isHarvestEnabled is uint8 at storage 38 offset 8\n  isDistributionInProgress is uint8 at storage 38 offset 16\n  isDistributionReady is uint8 at storage 38 offset 24\n  returnWalletAddress is address at storage 38 offset 32\n  stor38 is uint256 at storage 38 offset 32\n  stor39 is address at storage 39\n  managementFeeWalletAddress is address at storage 40\n  stor20A3 is uint8 at storage 0x20a3e2dd35f58e582c5288344c035e137cace924bb9daf3762b8ef5a58327e26\n\ndef isFundReleased() payable: \n  return bool(isFundReleased)\n\ndef name() payable: \n  return name[0 len name.length]\n\ndef weiPerInitialHONG() payable: \n  return weiPerInitialHONG\n\ndef votedHarvest(address _param1) payable: \n  return votedHarvest[_param1]\n\ndef minTokensToCreate() payable: \n  return minTokensToCreate\n\ndef supportHarvestQuorum() payable: \n  return supportHarvestQuorum\n\ndef extraBalanceWallet() payable: \n  return extraBalanceWalletAddress\n\ndef totalInitialBalance() payable: \n  return totalInitialBalance\n\ndef decimals() payable: \n  return decimals\n\ndef mgmtFeePercentage() payable: \n  return mgmtFeePercentage\n\ndef tokensCreated() payable: \n  return tokensCreated\n\ndef isDistributionReady() payable: \n  return bool(isDistributionReady)\n\ndef closingTimeExtensionPeriod() payable: \n  return closingTimeExtensionPeriod\n\ndef votedKickoff(uint256 _param1, address _param2) payable: \n  return votedKickoff[_param1][_param2]\n\ndef closingTime() payable: \n  return closingTime\n\ndef lastKickoffDateBuffer() payable: \n  return lastKickoffDateBuffer\n\ndef isDayThirtyChecked() payable: \n  return bool(isDayThirtyChecked)\n\ndef isFreezeEnabled() payable: \n  return bool(isFreezeEnabled)\n\ndef isDistributionInProgress() payable: \n  return bool(isDistributionInProgress)\n\ndef lastKickoffDate() payable: \n  return lastKickoffDate\n\ndef managementFeeWallet() payable: \n  return managementFeeWalletAddress\n\ndef supportFreezeQuorum() payable: \n  return supportFreezeQuorum\n\ndef balanceOf(address account) payable: \n  return balanceOf[address(account)]\n\ndef isFundLocked() payable: \n  return bool(isFundLocked)\n\ndef votedFreeze(address _param1) payable: \n  return votedFreeze[_param1]\n\ndef returnWallet() payable: \n  return returnWalletAddress\n\ndef kickoffQuorumPercent() payable: \n  return kickoffQuorumPercent\n\ndef freezeQuorumPercent() payable: \n  return freezeQuorumPercent\n\ndef symbol() payable: \n  return symbol[0 len symbol.length]\n\ndef maxTokensToCreate() payable: \n  return maxTokensToCreate\n\ndef isHarvestEnabled() payable: \n  return bool(isHarvestEnabled)\n\ndef tokensPerTier() payable: \n  return tokensPerTier\n\ndef taxPaid(address _param1) payable: \n  return taxPaid[_param1]\n\ndef maxBountyTokens() payable: \n  return maxBountyTokens\n\ndef supportKickoffQuorum(uint256 _param1) payable: \n  return supportKickoffQuorum[_param1]\n\ndef isInTestMode() payable: \n  return bool(stor0)\n\ndef managementBodyAddress() payable: \n  return managementBodyAddress\n\ndef harvestQuorumPercent() payable: \n  return harvestQuorumPercent\n\ndef isKickoffEnabled(uint256 _param1) payable: \n  return bool(stor37[_param1])\n\ndef mgmtRewardPercentage() payable: \n  return mgmtRewardPercentage\n\ndef bountyTokensCreated() payable: \n  return bountyTokensCreated\n\ndef annualManagementFee() payable: \n  return annualManagementFee\n\ndef isDaySixtyChecked() payable: \n  return bool(isDaySixtyChecked)\n\n#\n#  Regular functions\n#\n\ndef isMinTokensReached() payable: \n  return tokensCreated >= minTokensToCreate\n\ndef isMaxTokensReached() payable: \n  return tokensCreated >= maxTokensToCreate\n\ndef getCurrentTier() payable: \n  if uint8(tokensCreated / tokensPerTier) > 4:\n      return 4\n  return uint8(tokensCreated / tokensPerTier)\n\ndef divisor() payable: \n  if uint8(tokensCreated / tokensPerTier) > 4:\n      return 120\n  return uint8((5 * tokensCreated / tokensPerTier) + 100)\n\ndef pricePerTokenAtCurrentTier() payable: \n  if uint8(tokensCreated / tokensPerTier) > 4:\n      return (120 * weiPerInitialHONG / 100)\n  return (weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100)\n\ndef tokensAvailableAtTierInternal(uint8 _currentTier, uint256 _tokensPerTier, uint256 _tokensCreated) payable: \n  if _tokensPerTier * uint8(_currentTier + 1) <= maxTokensToCreate:\n      if _tokensCreated <= _tokensPerTier * uint8(_currentTier + 1):\n          return ((_tokensPerTier * uint8(_currentTier + 1)) - _tokensCreated)\n  else:\n      if _tokensCreated <= maxTokensToCreate:\n          return (maxTokensToCreate - _tokensCreated)\n  return 0\n\ndef tokensAvailableAtCurrentTier() payable: \n  if uint8(tokensCreated / tokensPerTier) > 4:\n      if 5 * tokensPerTier <= maxTokensToCreate:\n          if tokensCreated <= 5 * tokensPerTier:\n              return ((5 * tokensPerTier) - tokensCreated)\n      else:\n          if tokensCreated <= maxTokensToCreate:\n              return (maxTokensToCreate - tokensCreated)\n  else:\n      if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n          if tokensCreated <= tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1):\n              return ((tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated)\n      else:\n          if tokensCreated <= maxTokensToCreate:\n              return (maxTokensToCreate - tokensCreated)\n  return 0\n\ndef recallVoteToFreezeFund() payable: \n  if not balanceOf[caller]:\n      mem[288] = mem[304 len 16]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=16, data=mem[288]))\n  else:\n      if isFreezeEnabled:\n          mem[288] = mem[307 len 13]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=13, data=mem[288]))\n      else:\n          if call.value <= 0:\n              supportFreezeQuorum -= votedFreeze[caller]\n              votedFreeze[caller] = 0\n              stop\n          mem[288] = mem[313 len 7]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=7, data=mem[288]))\n  require stor0\n\ndef collectMyReturn() payable: \n  if not balanceOf[caller]:\n      mem[288] = mem[304 len 16]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=16, data=mem[288]))\n  else:\n      if call.value > 0:\n          mem[288] = mem[313 len 7]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=7, data=mem[288]))\n      else:\n          if isDistributionReady:\n              balanceOf[caller] = 0\n              call returnWalletAddress.unknown9f3ef430(address _param1, uint256 _param2) with:\n                   gas gas_remaining - 25050 wei\n                  args caller, balanceOf[caller]\n              require ext_call.success\n              stop\n          mem[288] = Mask(80, 88, 'onlyDistributionReady') >> 88, mem[309 len 11]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=21, data=mem[288]))\n  require stor0\n\ndef voteToHarvestFund() payable: \n  if not balanceOf[caller]:\n      mem[288] = mem[304 len 16]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=16, data=mem[288]))\n      require stor0\n      stop\n  if call.value > 0:\n      mem[288] = mem[313 len 7]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=7, data=mem[288]))\n      require stor0\n      stop\n  if not isFundLocked:\n      mem[288] = mem[310 len 10]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=10, data=mem[288]))\n      require stor0\n      stop\n  if stor35 < 4:\n      mem[288] = Mask(48, 104, 'currentFiscalYear<4') >> 104, mem[307 len 13]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=19, data=mem[288]))\n      require stor0\n      stop\n  supportHarvestQuorum -= votedHarvest[caller]\n  supportHarvestQuorum = balanceOf[caller] + supportHarvestQuorum - votedHarvest[caller]\n  votedHarvest[caller] = balanceOf[caller]\n  if supportHarvestQuorum > (bountyTokensCreated * harvestQuorumPercent) + (tokensCreated * harvestQuorumPercent) / 100:\n      isHarvestEnabled = 1\n      log evHarvest(\n            address msg_sender=caller,\n            uint256 msg_value=call.value)\n\ndef mgmtInvestProject(address _projectWallet, uint256 _amount) payable: \n  if managementBodyAddress != caller:\n      mem[288] = Mask(32, 112, 'onlyManagementBody') >> 112, mem[306 len 14]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=18, data=mem[288]))\n  else:\n      if call.value <= 0:\n          mem[288] = mem[312 len 8]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=8, data=mem[288]))\n      else:\n          if not stor37[stor35]:\n              log evMgmtInvestProject(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    address _projectWallet=address(_projectWallet),\n                    uint256 _amount=_amount,\n                    bool result=0)\n              return 0\n          if isFreezeEnabled:\n              log evMgmtInvestProject(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    address _projectWallet=address(_projectWallet),\n                    uint256 _amount=_amount,\n                    bool result=0)\n              return 0\n          if isHarvestEnabled:\n              log evMgmtInvestProject(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    address _projectWallet=address(_projectWallet),\n                    uint256 _amount=_amount,\n                    bool result=0)\n              return 0\n          if _amount >= eth.balance(this.address):\n              mem[352] = 0, mem[369 len 15]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=49, data='failed:mgmtInvestProject: amount', ' >= actualBalance', mem[352]))\n          else:\n              call _projectWallet with:\n                 value _amount wei\n                   gas gas_remaining - 34050 wei\n              if ext_call.success:\n                  log evMgmtInvestProject(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        address _projectWallet=address(_projectWallet),\n                        uint256 _amount=_amount,\n                        bool result=1)\n                  return 0\n              mem[352] = 0, mem[375 len 9]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=55, data='failed:mgmtInvestProject: cannot', ' send to _projectWallet', mem[352]))\n  require stor0\n  return 0\n\ndef refundMyIcoInvestment() payable: \n  if call.value > 0:\n      mem[288] = mem[313 len 7]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=7, data=mem[288]))\n      if stor0:\n          stop\n  else:\n      if isFundLocked:\n          mem[288] = mem[311 len 9]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=9, data=mem[288]))\n          if stor0:\n              stop\n      else:\n          if not balanceOf[caller]:\n              mem[288] = mem[304 len 16]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=16, data=mem[288]))\n              if stor0:\n                  stop\n          else:\n              if not stor28[caller]:\n                  mem[288] = mem[310 len 10]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=10, data=mem[288]))\n                  if stor0:\n                      stop\n              else:\n                  if balanceOf[caller] > tokensCreated:\n                      mem[288] = Mask(16, 120, 'invalidTokenCount') >> 120, mem[305 len 15]\n                      log evRecord(\n                            address msg_sender=caller,\n                            uint256 msg_value=call.value,\n                            string message=Array(len=17, data=mem[288]))\n                      if stor0:\n                          stop\n                  else:\n                      balanceOf[caller] = 0\n                      stor28[caller] = 0\n                      taxPaid[caller] = 0\n                      tokensCreated -= balanceOf[caller]\n                      call extraBalanceWalletAddress.unknown51fa7efd(uint256 _param1) with:\n                           gas gas_remaining - 25050 wei\n                          args taxPaid[caller]\n                      if ext_call.success:\n                          call caller with:\n                             value stor28[caller] wei\n                               gas 0 wei\n                          if ext_call.success:\n                              log evRefund(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    address to=stor28[caller],\n                                    uint256 value=1,\n                                    bool result=caller)\n                              stop\n                          log evRefund(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                address to=stor28[caller],\n                                uint256 value=0,\n                                bool result=caller)\n                          mem[288] = Mask(16, 120, 'refund:SendFailed') >> 120, mem[305 len 15]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=17, data=mem[288]))\n                          if stor0:\n                              stop\n  revert \n\ndef transfer(address recipient, uint256 amount) payable: \n  if stor35 < 4:\n      if votedKickoff[stor35 + 1][caller] <= amount:\n          supportKickoffQuorum[stor35 + 1] -= votedKickoff[stor35 + 1][caller]\n          votedKickoff[stor35 + 1][caller] = 0\n      else:\n          votedKickoff[stor35 + 1][caller] -= amount\n          supportKickoffQuorum[stor35 + 1] -= amount\n  if votedFreeze[caller] <= amount:\n      supportFreezeQuorum -= votedFreeze[caller]\n      votedFreeze[caller] = 0\n  else:\n      votedFreeze[caller] -= amount\n      supportFreezeQuorum -= amount\n  if votedHarvest[caller] <= amount:\n      supportHarvestQuorum -= votedHarvest[caller]\n      votedHarvest[caller] = 0\n  else:\n      votedHarvest[caller] -= amount\n      supportHarvestQuorum -= amount\n  if not isFundLocked:\n      mem[352] = mem[378 len 6]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=38, data='failed:transfer: isFundLocked is', ' false', mem[352]))\n      if stor0:\n          return 0\n  else:\n      if call.value <= 0:\n          if amount > 0:\n              if balanceOf[caller] >= amount:\n                  if amount + balanceOf[address(recipient)] >= balanceOf[address(recipient)]:\n                      balanceOf[caller] -= amount\n                      balanceOf[recipient] += amount\n                      log evTransfer(\n                            address msg_sender=caller,\n                            uint256 msg_value=call.value,\n                            address _from=amount,\n                            address _to=caller,\n                            uint256 _amount=recipient)\n                      return 1\n          if isFundLocked:\n              mem[352] = 0, mem[371 len 13]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=51, data='failed:transfer: cannot send sen', 'd to _projectWallet', mem[352]))\n          else:\n              mem[352] = mem[378 len 6]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=38, data='failed:transfer: isFundLocked is', ' false', mem[352]))\n          if stor0:\n              return 0\n      else:\n          mem[288] = mem[313 len 7]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=7, data=mem[288]))\n          if stor0:\n              if isFundLocked:\n                  mem[416] = 0, mem[435 len 13]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=51, data='failed:transfer: cannot send sen', 'd to _projectWallet', mem[416]))\n              else:\n                  mem[416] = mem[442 len 6]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=38, data='failed:transfer: isFundLocked is', ' false', mem[416]))\n              if stor0:\n                  return 0\n  revert \n\ndef voteToKickoffNewFiscalYear() payable: \n  if not balanceOf[caller]:\n      mem[288] = mem[304 len 16]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=16, data=mem[288]))\n      require stor0\n      stop\n  if call.value > 0:\n      mem[288] = mem[313 len 7]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=7, data=mem[288]))\n      require stor0\n      stop\n  if not isFundLocked:\n      mem[288] = mem[310 len 10]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=10, data=mem[288]))\n      require stor0\n      stop\n  if stor20A3:\n      if stor35 > 3:\n          mem[288] = mem[305 len 15]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=15, data=mem[288]))\n          require stor0\n          stop\n      if lastKickoffDateBuffer + lastKickoffDate >= block.timestamp:\n          mem[288] = mem[304 len 16]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=16, data=mem[288]))\n          require stor0\n          stop\n  supportKickoffQuorum[stor35 + 1] -= votedKickoff[stor35 + 1][caller]\n  supportKickoffQuorum[stor35 + 1] = supportKickoffQuorum[stor35 + 1] - votedKickoff[stor35 + 1][caller] + balanceOf[caller]\n  votedKickoff[stor35 + 1][caller] = balanceOf[caller]\n  if supportKickoffQuorum[stor35 + 1] > (bountyTokensCreated * kickoffQuorumPercent) + (tokensCreated * kickoffQuorumPercent) / 100:\n      if stor35 + 1 != 1:\n          stor37[stor35 + 1] = 1\n          stor35++\n          lastKickoffDate = block.timestamp\n          call managementFeeWalletAddress.unknowna8bcbf3c(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args annualManagementFee\n          require ext_call.success\n      else:\n          call extraBalanceWalletAddress.unknownb1a8b25a() with:\n               gas gas_remaining - 25050 wei\n          require ext_call.success\n          totalInitialBalance = eth.balance(this.address)\n          Mask(254, 0, stor25.field_0) = mgmtFeePercentage * eth.balance(this.address) / 100 / 4\n          stor25.field_254 % 4 = 0\n          call managementFeeWalletAddress with:\n             value mgmtFeePercentage * eth.balance(this.address) / 100 wei\n               gas 0 wei\n          if not ext_call.success:\n              mem[352] = mem[381 len 3]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=35, data='kickoff:ManagementFeePoolWalletF', 'ail', mem[352]))\n              require stor0\n              stop\n          stor37[stor35 + 1] = 1\n          stor35++\n          lastKickoffDate = block.timestamp\n          call managementFeeWalletAddress.unknowna8bcbf3c(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args annualManagementFee\n      log evKickoff(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            uint256 _fiscal=stor35 + 1)\n      log evIssueManagementFee(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            uint256 _amount=annualManagementFee,\n            bool _success=1)\n\ndef mgmtDistribute() payable: \n  if managementBodyAddress != caller:\n      mem[288] = Mask(32, 112, 'onlyManagementBody') >> 112, mem[306 len 14]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=18, data=mem[288]))\n      require stor0\n      stop\n  if call.value <= 0:\n      mem[288] = mem[312 len 8]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=8, data=mem[288]))\n      require stor0\n      stop\n  if not isHarvestEnabled:\n      mem[288] = Mask(32, 112, 'onlyHarvestEnabled') >> 112, mem[306 len 14]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=18, data=mem[288]))\n      require stor0\n      stop\n  if isDistributionReady:\n      mem[288] = Mask(128, 64, 'onlyDistributionNotReady') >> 64, mem[312 len 8]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=24, data=mem[288]))\n      require stor0\n      stop\n  if isDistributionInProgress:\n      mem[288] = Mask(208, 24, 'onlyDistributionNotInProgress') >> 24, mem[317 len 3]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=29, data=mem[288]))\n      require stor0\n      stop\n  isDistributionInProgress = 1\n  isDistributionReady = 1\n  Mask(224, 0, stor38.field_32) = 0\n  stor38.field_256 % 1 = 0\n  call returnWalletAddress with:\n     value eth.balance(this.address) wei\n       gas 0 wei\n  if ext_call.success:\n      call managementFeeWalletAddress.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      call stor39.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      call extraBalanceWalletAddress.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      if mgmtRewardPercentage <= 0:\n          call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args (bountyTokensCreated + tokensCreated)\n          require ext_call.success\n      else:\n          call returnWalletAddress.unknownb8b27765(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args mgmtRewardPercentage\n          require ext_call.success\n          call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args (bountyTokensCreated + tokensCreated)\n      log evMgmtDistributed(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            uint256 _amount=eth.balance(returnWalletAddress),\n            bool _success=1)\n  else:\n      mem[352] = mem[381 len 3]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=35, data='payBalanceToReturnWallet:sendFai', 'led', mem[352]))\n      require stor0\n      call managementFeeWalletAddress.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      require ext_call.success\n      call stor39.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      call extraBalanceWalletAddress.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      if mgmtRewardPercentage <= 0:\n          call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args (bountyTokensCreated + tokensCreated)\n          require ext_call.success\n      else:\n          call returnWalletAddress.unknownb8b27765(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args mgmtRewardPercentage\n          require ext_call.success\n          call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args (bountyTokensCreated + tokensCreated)\n      log evMgmtDistributed(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            uint256 _amount=eth.balance(returnWalletAddress),\n            bool _success=1)\n  isDistributionInProgress = 0\n\ndef voteToFreezeFund() payable: \n  if not balanceOf[caller]:\n      mem[288] = mem[304 len 16]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=16, data=mem[288]))\n      require stor0\n      stop\n  if call.value > 0:\n      mem[288] = mem[313 len 7]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=7, data=mem[288]))\n      require stor0\n      stop\n  if not isFundLocked:\n      mem[288] = mem[310 len 10]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=10, data=mem[288]))\n      require stor0\n      stop\n  if stor35 >= 4:\n      mem[288] = Mask(64, 96, 'currentFiscalYear>=4') >> 96, mem[308 len 12]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=20, data=mem[288]))\n      require stor0\n      stop\n  if isDistributionInProgress:\n      mem[288] = Mask(208, 24, 'onlyDistributionNotInProgress') >> 24, mem[317 len 3]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=29, data=mem[288]))\n      require stor0\n      stop\n  supportFreezeQuorum -= votedFreeze[caller]\n  supportFreezeQuorum = balanceOf[caller] + supportFreezeQuorum - votedFreeze[caller]\n  votedFreeze[caller] = balanceOf[caller]\n  if supportFreezeQuorum > (bountyTokensCreated * freezeQuorumPercent) + (tokensCreated * freezeQuorumPercent) / 100:\n      isFreezeEnabled = 1\n      if isDistributionInProgress:\n          mem[288] = Mask(208, 24, 'onlyDistributionNotInProgress') >> 24, mem[317 len 3]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=29, data=mem[288]))\n          require stor0\n      else:\n          isDistributionInProgress = 1\n          isDistributionReady = 1\n          Mask(224, 0, stor38.field_32) = 0\n          stor38.field_256 % 1 = 0\n          call returnWalletAddress with:\n             value eth.balance(this.address) wei\n               gas 0 wei\n          if ext_call.success:\n              call managementFeeWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call stor39.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call extraBalanceWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                   gas gas_remaining - 25050 wei\n                  args (bountyTokensCreated + tokensCreated)\n              require ext_call.success\n              log evMgmtDistributed(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    uint256 _amount=eth.balance(returnWalletAddress),\n                    bool _success=1)\n          else:\n              mem[352] = mem[381 len 3]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=35, data='payBalanceToReturnWallet:sendFai', 'led', mem[352]))\n              require stor0\n              call managementFeeWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              require ext_call.success\n              call stor39.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call extraBalanceWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                   gas gas_remaining - 25050 wei\n                  args (bountyTokensCreated + tokensCreated)\n              require ext_call.success\n              log evMgmtDistributed(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    uint256 _amount=eth.balance(returnWalletAddress),\n                    bool _success=1)\n          isDistributionInProgress = 0\n      log evFreeze(\n            address msg_sender=caller,\n            uint256 msg_value=call.value)\n\ndef _fallback(?) payable: # default function\n  if not calldata.size:\n      if extraBalanceWalletAddress == caller:\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=34, data='Recevied ether from ManagedAccou', 'nt'))\n          return 1\n      if caller == returnWalletAddress:\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=34, data='Recevied ether from ManagedAccou', 'nt'))\n          return 1\n      if caller == stor39:\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=34, data='Recevied ether from ManagedAccou', 'nt'))\n          return 1\n      if caller == managementFeeWalletAddress:\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=34, data='Recevied ether from ManagedAccou', 'nt'))\n          return 1\n      if isFundLocked:\n          mem[288] = mem[311 len 9]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=9, data=mem[288]))\n          require stor0\n          return 0\n      if isFundReleased:\n          mem[288] = mem[309 len 11]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=11, data=mem[288]))\n          require stor0\n          return 0\n      if call.value <= 0:\n          mem[288] = mem[312 len 8]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=8, data=mem[288]))\n          require stor0\n          return 0\n      if uint8(tokensCreated / tokensPerTier) > 4:\n          if 5 * tokensPerTier > maxTokensToCreate:\n              if tokensCreated > maxTokensToCreate:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if not maxTokensToCreate - tokensCreated:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if call.value >= 120 * weiPerInitialHONG / 100:\n                  if maxTokensToCreate - tokensCreated < call.value / 120 * weiPerInitialHONG / 100:\n                      if maxTokensToCreate - tokensCreated:\n                          balanceOf[caller] = maxTokensToCreate - tokensCreated + balanceOf[caller]\n                          tokensCreated = maxTokensToCreate\n                          stor28[caller] = (maxTokensToCreate * 120 * weiPerInitialHONG / 100) - (tokensCreated * 120 * weiPerInitialHONG / 100) + stor28[caller]\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier <= maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              balanceOf[caller] += call.value / 120 * weiPerInitialHONG / 100\n                              tokensCreated += call.value / 120 * weiPerInitialHONG / 100\n                              stor28[caller] += call.value / 120 * weiPerInitialHONG / 100 * 120 * weiPerInitialHONG / 100\n                          else:\n                              balanceOf[caller] = maxTokensToCreate - tokensCreated + balanceOf[caller]\n                              tokensCreated = maxTokensToCreate\n                              stor28[caller] = (maxTokensToCreate * 120 * weiPerInitialHONG / 100) - (tokensCreated * 120 * weiPerInitialHONG / 100) + stor28[caller]\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                  else:\n                      balanceOf[caller] += call.value / 120 * weiPerInitialHONG / 100\n                      tokensCreated += call.value / 120 * weiPerInitialHONG / 100\n                      stor28[caller] += call.value / 120 * weiPerInitialHONG / 100 * 120 * weiPerInitialHONG / 100\n                      if maxTokensToCreate - tokensCreated:\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier <= maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                          else:\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n              else:\n                  stor28[caller] += call.value\n                  if not isFundReleased:\n                      stor33 = tokensCreated >= maxTokensToCreate or Mask(248, 8, stor33)\n                      if uint8(tokensCreated >= maxTokensToCreate):\n                          if isFundLocked:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                              else:\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if isFundLocked:\n                                      log evLockFund(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value)\n                                  if tokensCreated < minTokensToCreate:\n                                  else:\n                                      if isFundReleased:\n                                          log evReleaseFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                          else:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                              else:\n                                  if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                      if tokensCreated >= minTokensToCreate:\n                                          isFundLocked = 1\n                                      isDaySixtyChecked = 1\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if not isFundLocked:\n                                                  if isFundReleased:\n                                                      log evReleaseFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                                              else:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                      else:\n                          if isDayThirtyChecked:\n                              if isFundLocked:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if tokensCreated >= minTokensToCreate:\n                                          if isFundLocked:\n                                              log evLockFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                              else:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                          if tokensCreated >= minTokensToCreate:\n                                              isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          if isDaySixtyChecked:\n                                              if tokensCreated < minTokensToCreate:\n                                                  isFundReleased = 1\n                                          else:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                              if tokensCreated >= minTokensToCreate:\n                                                  if isFundLocked:\n                                                      log evLockFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                          else:\n                              if block.timestamp < closingTime:\n                                  if isFundLocked:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if not isFundLocked:\n                                                  if isFundReleased:\n                                                      log evReleaseFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                                              else:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                      else:\n                                          if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                                              if isDaySixtyChecked:\n                                                  if tokensCreated < minTokensToCreate:\n                                                      isFundReleased = 1\n                                              else:\n                                                  log evCreatedToken(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value,\n                                                        address to=0,\n                                                        uint256 amount=caller)\n                                                  if tokensCreated >= minTokensToCreate:\n                                          else:\n                                              if tokensCreated >= minTokensToCreate:\n                                                  isFundLocked = 1\n                                              isDaySixtyChecked = 1\n                              else:\n                                  if tokensCreated >= minTokensToCreate:\n                                      isFundLocked = 1\n                                  isDayThirtyChecked = 1\n                                  if not isFundLocked:\n                                      if not isDaySixtyChecked:\n                                          if block.timestamp < closingTime + closingTimeExtensionPeriod:\n          else:\n              if tokensCreated > 5 * tokensPerTier:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if not (5 * tokensPerTier) - tokensCreated:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if call.value >= 120 * weiPerInitialHONG / 100:\n                  if (5 * tokensPerTier) - tokensCreated < call.value / 120 * weiPerInitialHONG / 100:\n                      if (5 * tokensPerTier) - tokensCreated:\n                          balanceOf[caller] = (5 * tokensPerTier) - tokensCreated + balanceOf[caller]\n                          tokensCreated = 5 * tokensPerTier\n                          stor28[caller] = (5 * tokensPerTier * 120 * weiPerInitialHONG / 100) - (tokensCreated * 120 * weiPerInitialHONG / 100) + stor28[caller]\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier > maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) > maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              balanceOf[caller] += call.value / 120 * weiPerInitialHONG / 100\n                              tokensCreated += call.value / 120 * weiPerInitialHONG / 100\n                              stor28[caller] += call.value / 120 * weiPerInitialHONG / 100 * 120 * weiPerInitialHONG / 100\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                          else:\n                              balanceOf[caller] = (5 * tokensPerTier) - tokensCreated + balanceOf[caller]\n                              tokensCreated = 5 * tokensPerTier\n                              stor28[caller] = (5 * tokensPerTier * 120 * weiPerInitialHONG / 100) - (tokensCreated * 120 * weiPerInitialHONG / 100) + stor28[caller]\n                              if uint8(tokensCreated / tokensPerTier) > 4:\n                                  if 5 * tokensPerTier <= maxTokensToCreate:\n                              else:\n                                  if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                  else:\n                      balanceOf[caller] += call.value / 120 * weiPerInitialHONG / 100\n                      tokensCreated += call.value / 120 * weiPerInitialHONG / 100\n                      stor28[caller] += call.value / 120 * weiPerInitialHONG / 100 * 120 * weiPerInitialHONG / 100\n                      if (5 * tokensPerTier) - tokensCreated:\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier > maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) > maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                          else:\n                              if uint8(tokensCreated / tokensPerTier) > 4:\n                                  if 5 * tokensPerTier <= maxTokensToCreate:\n                              else:\n                                  if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n              else:\n                  stor28[caller] += call.value\n                  if not isFundReleased:\n                      stor33 = tokensCreated >= maxTokensToCreate or Mask(248, 8, stor33)\n                      if uint8(tokensCreated >= maxTokensToCreate):\n                          if isFundLocked:\n                              if not isDaySixtyChecked:\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated < minTokensToCreate:\n                                      if not isFundLocked:\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                                      else:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                  else:\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                      if isFundReleased:\n                                          log evReleaseFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                              else:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                          else:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                              else:\n                                  if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                      if tokensCreated >= minTokensToCreate:\n                                          isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          isDaySixtyChecked = 1\n                                          if not isDaySixtyChecked:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if isFundLocked:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                              if isFundReleased:\n                                                  log evReleaseFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                      else:\n                          if isDayThirtyChecked:\n                              if isFundLocked:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if tokensCreated >= minTokensToCreate:\n                                  else:\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                      if tokensCreated < minTokensToCreate:\n                                      else:\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                              else:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                          if tokensCreated >= minTokensToCreate:\n                                              isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          if isDaySixtyChecked:\n                                              if tokensCreated < minTokensToCreate:\n                                                  isFundReleased = 1\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                          else:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                              if tokensCreated >= minTokensToCreate:\n                                                  if not isFundLocked:\n                                                      if isFundReleased:\n                                                          log evReleaseFund(\n                                                                address msg_sender=caller,\n                                                                uint256 msg_value=call.value)\n                                                  else:\n                                                      log evLockFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                          else:\n                              if block.timestamp >= closingTime:\n                                  if tokensCreated < minTokensToCreate:\n                                      isDayThirtyChecked = 1\n                                      if isFundLocked:\n                                          if not isDaySixtyChecked:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                      else:\n                                          if not isDaySixtyChecked:\n                                              if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                                  else:\n                                      isFundLocked = 1\n                                      isDayThirtyChecked = 1\n                                      if not isFundLocked:\n                                          if not isDaySixtyChecked:\n                                              if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                              else:\n                                  if isFundLocked:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if isFundLocked:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                              if isFundReleased:\n                                                  log evReleaseFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                              if tokensCreated >= minTokensToCreate:\n                                                  isFundLocked = 1\n                                              isDaySixtyChecked = 1\n                                          else:\n                                              if isDaySixtyChecked:\n                                                  if tokensCreated < minTokensToCreate:\n                                                      isFundReleased = 1\n                                              else:\n                                                  log evCreatedToken(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value,\n                                                        address to=0,\n                                                        uint256 amount=caller)\n                                                  if tokensCreated >= minTokensToCreate:\n                                                      if isFundLocked:\n                                                          log evLockFund(\n                                                                address msg_sender=caller,\n                                                                uint256 msg_value=call.value)\n      else:\n          if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) > maxTokensToCreate:\n              if tokensCreated > maxTokensToCreate:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if not maxTokensToCreate - tokensCreated:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if call.value >= weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100:\n                  if maxTokensToCreate - tokensCreated < call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100:\n                      if maxTokensToCreate - tokensCreated:\n                          balanceOf[caller] = maxTokensToCreate - tokensCreated + balanceOf[caller]\n                          tokensCreated = maxTokensToCreate\n                          stor28[caller] = (maxTokensToCreate * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) - (tokensCreated * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) + stor28[caller]\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier <= maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              balanceOf[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                              tokensCreated += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                              stor28[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100 * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                          else:\n                              balanceOf[caller] = maxTokensToCreate - tokensCreated + balanceOf[caller]\n                              tokensCreated = maxTokensToCreate\n                              stor28[caller] = (maxTokensToCreate * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) - (tokensCreated * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) + stor28[caller]\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                  else:\n                      balanceOf[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      tokensCreated += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      stor28[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100 * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      if maxTokensToCreate - tokensCreated:\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier <= maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                          else:\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n              else:\n                  stor28[caller] += call.value\n                  if not isFundReleased:\n                      stor33 = tokensCreated >= maxTokensToCreate or Mask(248, 8, stor33)\n                      if uint8(tokensCreated >= maxTokensToCreate):\n                          if isFundLocked:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                              else:\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if isFundLocked:\n                                      log evLockFund(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value)\n                                  if tokensCreated < minTokensToCreate:\n                                  else:\n                                      if isFundReleased:\n                                          log evReleaseFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                          else:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                              else:\n                                  if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                      if tokensCreated >= minTokensToCreate:\n                                          isFundLocked = 1\n                                      isDaySixtyChecked = 1\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if not isFundLocked:\n                                                  if isFundReleased:\n                                                      log evReleaseFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                                              else:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                      else:\n                          if isDayThirtyChecked:\n                              if isFundLocked:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if tokensCreated >= minTokensToCreate:\n                                          if isFundLocked:\n                                              log evLockFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                              else:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                          if tokensCreated >= minTokensToCreate:\n                                              isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          if isDaySixtyChecked:\n                                              if tokensCreated < minTokensToCreate:\n                                                  isFundReleased = 1\n                                          else:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                              if tokensCreated >= minTokensToCreate:\n                                                  if isFundLocked:\n                                                      log evLockFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                          else:\n                              if block.timestamp < closingTime:\n                                  if isFundLocked:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if not isFundLocked:\n                                                  if isFundReleased:\n                                                      log evReleaseFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                                              else:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                      else:\n                                          if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                                              if isDaySixtyChecked:\n                                                  if tokensCreated < minTokensToCreate:\n                                                      isFundReleased = 1\n                                              else:\n                                                  log evCreatedToken(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value,\n                                                        address to=0,\n                                                        uint256 amount=caller)\n                                                  if tokensCreated >= minTokensToCreate:\n                                          else:\n                                              if tokensCreated >= minTokensToCreate:\n                                                  isFundLocked = 1\n                                              isDaySixtyChecked = 1\n                              else:\n                                  if tokensCreated >= minTokensToCreate:\n                                      isFundLocked = 1\n                                  isDayThirtyChecked = 1\n                                  if not isFundLocked:\n                                      if not isDaySixtyChecked:\n                                          if block.timestamp < closingTime + closingTimeExtensionPeriod:\n          else:\n              if tokensCreated > tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1):\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if not (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if call.value >= weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100:\n                  if (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated < call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100:\n                      if (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated:\n                          balanceOf[caller] = (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated + balanceOf[caller]\n                          tokensCreated = tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)\n                          stor28[caller] = (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) - (tokensCreated * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) + stor28[caller]\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier > maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) > maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              balanceOf[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                              tokensCreated += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                              stor28[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100 * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                          else:\n                              balanceOf[caller] = (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated + balanceOf[caller]\n                              tokensCreated = tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)\n                              stor28[caller] = (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) - (tokensCreated * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) + stor28[caller]\n                              if uint8(tokensCreated / tokensPerTier) > 4:\n                                  if 5 * tokensPerTier <= maxTokensToCreate:\n                              else:\n                                  if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                  else:\n                      balanceOf[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      tokensCreated += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      stor28[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100 * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      if (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated:\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier > maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) > maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                          else:\n                              if uint8(tokensCreated / tokensPerTier) > 4:\n                                  if 5 * tokensPerTier <= maxTokensToCreate:\n                              else:\n                                  if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n              else:\n                  stor28[caller] += call.value\n                  if not isFundReleased:\n                      stor33 = tokensCreated >= maxTokensToCreate or Mask(248, 8, stor33)\n                      if uint8(tokensCreated >= maxTokensToCreate):\n                          if isFundLocked:\n                              if not isDaySixtyChecked:\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated < minTokensToCreate:\n                                      if not isFundLocked:\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                                      else:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                  else:\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                      if isFundReleased:\n                                          log evReleaseFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                              else:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                          else:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                              else:\n                                  if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                      if tokensCreated >= minTokensToCreate:\n                                          isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          isDaySixtyChecked = 1\n                                          if not isDaySixtyChecked:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if isFundLocked:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                              if isFundReleased:\n                                                  log evReleaseFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                      else:\n                          if isDayThirtyChecked:\n                              if isFundLocked:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if tokensCreated >= minTokensToCreate:\n                                  else:\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                      if tokensCreated < minTokensToCreate:\n                                      else:\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                              else:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                          if tokensCreated >= minTokensToCreate:\n                                              isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          if isDaySixtyChecked:\n                                              if tokensCreated < minTokensToCreate:\n                                                  isFundReleased = 1\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                          else:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                              if tokensCreated >= minTokensToCreate:\n                                                  if not isFundLocked:\n                                                      if isFundReleased:\n                                                          log evReleaseFund(\n                                                                address msg_sender=caller,\n                                                                uint256 msg_value=call.value)\n                                                  else:\n                                                      log evLockFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                          else:\n                              if block.timestamp >= closingTime:\n                                  if tokensCreated < minTokensToCreate:\n                                      isDayThirtyChecked = 1\n                                      if isFundLocked:\n                                          if not isDaySixtyChecked:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                      else:\n                                          if not isDaySixtyChecked:\n                                              if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                                  else:\n                                      isFundLocked = 1\n                                      isDayThirtyChecked = 1\n                                      if not isFundLocked:\n                                          if not isDaySixtyChecked:\n                                              if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                              else:\n                                  if isFundLocked:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if isFundLocked:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                              if isFundReleased:\n                                                  log evReleaseFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                              if tokensCreated >= minTokensToCreate:\n                                                  isFundLocked = 1\n                                              isDaySixtyChecked = 1\n                                          else:\n                                              if isDaySixtyChecked:\n                                                  if tokensCreated < minTokensToCreate:\n                                                      isFundReleased = 1\n                                              else:\n                                                  log evCreatedToken(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value,\n                                                        address to=0,\n                                                        uint256 amount=caller)\n                                                  if tokensCreated >= minTokensToCreate:\n                                                      if isFundLocked:\n                                                          log evLockFund(\n                                                                address msg_sender=caller,\n                                                                uint256 msg_value=call.value)\n  else:\n      if uint32(call.func_hash) == isFundReleased():\n          return bool(isFundReleased)\n      if mgmtDistribute() == uint32(call.func_hash):\n          if managementBodyAddress != caller:\n              mem[288] = Mask(32, 112, 'onlyManagementBody') >> 112, mem[306 len 14]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=18, data=mem[288]))\n              require stor0\n              stop\n          if call.value <= 0:\n              mem[288] = mem[312 len 8]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=8, data=mem[288]))\n              require stor0\n              stop\n          if not isHarvestEnabled:\n              mem[288] = Mask(32, 112, 'onlyHarvestEnabled') >> 112, mem[306 len 14]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=18, data=mem[288]))\n              require stor0\n              stop\n          if isDistributionReady:\n              mem[288] = Mask(128, 64, 'onlyDistributionNotReady') >> 64, mem[312 len 8]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=24, data=mem[288]))\n              require stor0\n              stop\n          if isDistributionInProgress:\n              mem[288] = Mask(208, 24, 'onlyDistributionNotInProgress') >> 24, mem[317 len 3]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=29, data=mem[288]))\n              require stor0\n              stop\n          isDistributionInProgress = 1\n          isDistributionReady = 1\n          Mask(224, 0, stor38.field_32) = 0\n          stor38.field_256 % 1 = 0\n          call returnWalletAddress with:\n             value eth.balance(this.address) wei\n               gas 0 wei\n          if ext_call.success:\n              call managementFeeWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call stor39.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call extraBalanceWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              if mgmtRewardPercentage <= 0:\n                  call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args (bountyTokensCreated + tokensCreated)\n                  require ext_call.success\n              else:\n                  call returnWalletAddress.unknownb8b27765(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args mgmtRewardPercentage\n                  require ext_call.success\n                  call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args (bountyTokensCreated + tokensCreated)\n              log evMgmtDistributed(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    uint256 _amount=eth.balance(returnWalletAddress),\n                    bool _success=1)\n          else:\n              mem[352] = mem[381 len 3]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=35, data='payBalanceToReturnWallet:sendFai', 'led', mem[352]))\n              require stor0\n              call managementFeeWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              require ext_call.success\n              call stor39.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call extraBalanceWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              if mgmtRewardPercentage <= 0:\n                  call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args (bountyTokensCreated + tokensCreated)\n                  require ext_call.success\n              else:\n                  call returnWalletAddress.unknownb8b27765(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args mgmtRewardPercentage\n                  require ext_call.success\n                  call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args (bountyTokensCreated + tokensCreated)\n              log evMgmtDistributed(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    uint256 _amount=eth.balance(returnWalletAddress),\n                    bool _success=1)\n          isDistributionInProgress = 0\n          stop\n      if uint32(call.func_hash) != name():\n          if weiPerInitialHONG() == uint32(call.func_hash):\n              return weiPerInitialHONG\n          if votedHarvest(address ) == uint32(call.func_hash):\n              return votedHarvest[_param1]\n          if minTokensToCreate() == uint32(call.func_hash):\n              return minTokensToCreate\n          if supportHarvestQuorum() == uint32(call.func_hash):\n              return supportHarvestQuorum\n          if extraBalanceWallet() == uint32(call.func_hash):\n              return extraBalanceWalletAddress\n          if totalInitialBalance() == uint32(call.func_hash):\n              return totalInitialBalance\n          if divisor() == uint32(call.func_hash):\n              if uint8(tokensCreated / tokensPerTier) > 4:\n                  return 120\n              return uint8((5 * tokensCreated / tokensPerTier) + 100)\n          if voteToHarvestFund() == uint32(call.func_hash):\n              if not balanceOf[caller]:\n                  mem[288] = mem[304 len 16]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=16, data=mem[288]))\n                  require stor0\n                  stop\n              if call.value > 0:\n                  mem[288] = mem[313 len 7]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=7, data=mem[288]))\n                  require stor0\n                  stop\n              if not isFundLocked:\n                  mem[288] = mem[310 len 10]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=10, data=mem[288]))\n                  require stor0\n                  stop\n              if stor35 < 4:\n                  mem[288] = Mask(48, 104, 'currentFiscalYear<4') >> 104, mem[307 len 13]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=19, data=mem[288]))\n                  require stor0\n                  stop\n              supportHarvestQuorum -= votedHarvest[caller]\n              supportHarvestQuorum = balanceOf[caller] + supportHarvestQuorum - votedHarvest[caller]\n              votedHarvest[caller] = balanceOf[caller]\n              if supportHarvestQuorum > (bountyTokensCreated * harvestQuorumPercent) + (tokensCreated * harvestQuorumPercent) / 100:\n                  isHarvestEnabled = 1\n                  log evHarvest(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value)\n              stop\n          if decimals() == uint32(call.func_hash):\n              return decimals\n          if pricePerTokenAtCurrentTier() == uint32(call.func_hash):\n              if uint8(tokensCreated / tokensPerTier) > 4:\n                  return (120 * weiPerInitialHONG / 100)\n              return (weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100)\n          if mgmtFeePercentage() == uint32(call.func_hash):\n              return mgmtFeePercentage\n          if tokensCreated() == uint32(call.func_hash):\n              return tokensCreated\n          if isDistributionReady() == uint32(call.func_hash):\n              return bool(isDistributionReady)\n          if closingTimeExtensionPeriod() == uint32(call.func_hash):\n              return closingTimeExtensionPeriod\n          if votedKickoff(uint256 _param1, address _param2) == uint32(call.func_hash):\n              return votedKickoff[_param1][_param2]\n          if closingTime() == uint32(call.func_hash):\n              return closingTime\n          if lastKickoffDateBuffer() == uint32(call.func_hash):\n              return lastKickoffDateBuffer\n          if isDayThirtyChecked() == uint32(call.func_hash):\n              return bool(isDayThirtyChecked)\n          if isFreezeEnabled() == uint32(call.func_hash):\n              return bool(isFreezeEnabled)\n          if collectMyReturn() == uint32(call.func_hash):\n              if not balanceOf[caller]:\n                  mem[288] = mem[304 len 16]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=16, data=mem[288]))\n              else:\n                  if call.value > 0:\n                      mem[288] = mem[313 len 7]\n                      log evRecord(\n                            address msg_sender=caller,\n                            uint256 msg_value=call.value,\n                            string message=Array(len=7, data=mem[288]))\n                  else:\n                      if isDistributionReady:\n                          balanceOf[caller] = 0\n                          call returnWalletAddress.unknown9f3ef430(address _param1, uint256 _param2) with:\n                               gas gas_remaining - 25050 wei\n                              args caller, balanceOf[caller]\n                          require ext_call.success\n                          stop\n                      mem[288] = Mask(80, 88, 'onlyDistributionReady') >> 88, mem[309 len 11]\n                      log evRecord(\n                            address msg_sender=caller,\n                            uint256 msg_value=call.value,\n                            string message=Array(len=21, data=mem[288]))\n              require stor0\n              stop\n          if isMinTokensReached() == uint32(call.func_hash):\n              return tokensCreated >= minTokensToCreate\n          if isDistributionInProgress() == uint32(call.func_hash):\n              return bool(isDistributionInProgress)\n          if lastKickoffDate() == uint32(call.func_hash):\n              return lastKickoffDate\n          if managementFeeWallet() == uint32(call.func_hash):\n              return managementFeeWalletAddress\n          if supportFreezeQuorum() == uint32(call.func_hash):\n              return supportFreezeQuorum\n          if balanceOf(address account) == uint32(call.func_hash):\n              return balanceOf[address(_param1)]\n          if tokensAvailableAtCurrentTier() == uint32(call.func_hash):\n              if uint8(tokensCreated / tokensPerTier) > 4:\n                  if 5 * tokensPerTier <= maxTokensToCreate:\n                      if tokensCreated <= 5 * tokensPerTier:\n                          return ((5 * tokensPerTier) - tokensCreated)\n                  else:\n                      if tokensCreated <= maxTokensToCreate:\n                          return (maxTokensToCreate - tokensCreated)\n              else:\n                  if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                      if tokensCreated <= tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1):\n                          return ((tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated)\n                  else:\n                      if tokensCreated <= maxTokensToCreate:\n                          return (maxTokensToCreate - tokensCreated)\n              return 0\n          if getCurrentTier() == uint32(call.func_hash):\n              if uint8(tokensCreated / tokensPerTier) > 4:\n                  return 4\n              return uint8(tokensCreated / tokensPerTier)\n          if isFundLocked() == uint32(call.func_hash):\n              return bool(isFundLocked)\n          if votedFreeze(address _param1) == uint32(call.func_hash):\n              return votedFreeze[_param1]\n          if returnWallet() == uint32(call.func_hash):\n              return returnWalletAddress\n          if kickoffQuorumPercent() == uint32(call.func_hash):\n              return kickoffQuorumPercent\n          if isMaxTokensReached() == uint32(call.func_hash):\n              return tokensCreated >= maxTokensToCreate\n          if freezeQuorumPercent() == uint32(call.func_hash):\n              return freezeQuorumPercent\n          if uint32(call.func_hash) != symbol():\n              if maxTokensToCreate() == uint32(call.func_hash):\n                  return maxTokensToCreate\n              if mgmtInvestProject(address _projectWallet, uint256 _amount) == uint32(call.func_hash):\n                  if managementBodyAddress != caller:\n                      mem[288] = Mask(32, 112, 'onlyManagementBody') >> 112, mem[306 len 14]\n                      log evRecord(\n                            address msg_sender=caller,\n                            uint256 msg_value=call.value,\n                            string message=Array(len=18, data=mem[288]))\n                  else:\n                      if call.value <= 0:\n                          mem[288] = mem[312 len 8]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=8, data=mem[288]))\n                      else:\n                          if not stor37[stor35]:\n                              log evMgmtInvestProject(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    address _projectWallet=address(_param1),\n                                    uint256 _amount=_param2,\n                                    bool result=0)\n                              return 0\n                          if isFreezeEnabled:\n                              log evMgmtInvestProject(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    address _projectWallet=address(_param1),\n                                    uint256 _amount=_param2,\n                                    bool result=0)\n                              return 0\n                          if isHarvestEnabled:\n                              log evMgmtInvestProject(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    address _projectWallet=address(_param1),\n                                    uint256 _amount=_param2,\n                                    bool result=0)\n                              return 0\n                          if _param2 >= eth.balance(this.address):\n                              mem[352] = 0, mem[369 len 15]\n                              log evRecord(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    string message=Array(len=49, data='failed:mgmtInvestProject: amount', ' >= actualBalance', mem[352]))\n                          else:\n                              call address(_param1) with:\n                                 value _param2 wei\n                                   gas gas_remaining - 34050 wei\n                              if ext_call.success:\n                                  log evMgmtInvestProject(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address _projectWallet=address(_param1),\n                                        uint256 _amount=_param2,\n                                        bool result=1)\n                                  return 0\n                              mem[352] = 0, mem[375 len 9]\n                              log evRecord(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    string message=Array(len=55, data='failed:mgmtInvestProject: cannot', ' send to _projectWallet', mem[352]))\n                  require stor0\n                  return 0\n              if isHarvestEnabled() == uint32(call.func_hash):\n                  return bool(isHarvestEnabled)\n              if tokensPerTier() == uint32(call.func_hash):\n                  return tokensPerTier\n              if transfer(address recipient, uint256 amount) == uint32(call.func_hash):\n                  if stor35 >= 4:\n                      if votedFreeze[caller] <= _param2:\n                          supportFreezeQuorum -= votedFreeze[caller]\n                          votedFreeze[caller] = 0\n                      else:\n                          votedFreeze[caller] -= _param2\n                          supportFreezeQuorum -= _param2\n                      if votedHarvest[caller] <= _param2:\n                          supportHarvestQuorum -= votedHarvest[caller]\n                          votedHarvest[caller] = 0\n                      else:\n                          votedHarvest[caller] -= _param2\n                          supportHarvestQuorum -= _param2\n                      if not isFundLocked:\n                          mem[352] = mem[378 len 6]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=38, data='failed:transfer: isFundLocked is', ' false', mem[352]))\n                          require stor0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if call.value > 0:\n                          mem[288] = mem[313 len 7]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=7, data=mem[288]))\n                          require stor0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _param2 > 0:\n                          if balanceOf[caller] >= _param2:\n                              if _param2 + balanceOf[address(_param1)] >= balanceOf[address(_param1)]:\n                                  balanceOf[caller] -= _param2\n                                  balanceOf[address(_param1)] += _param2\n                                  log evTransfer(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address _from=_param2,\n                                        address _to=caller,\n                                        uint256 _amount=address(_param1))\n                  else:\n                      if votedKickoff[stor35 + 1][caller] <= _param2:\n                          supportKickoffQuorum[stor35 + 1] -= votedKickoff[stor35 + 1][caller]\n                          votedKickoff[stor35 + 1][caller] = 0\n                      else:\n                          votedKickoff[stor35 + 1][caller] -= _param2\n                          supportKickoffQuorum[stor35 + 1] -= _param2\n                      if votedFreeze[caller] <= _param2:\n                          supportFreezeQuorum -= votedFreeze[caller]\n                          votedFreeze[caller] = 0\n                      else:\n                          votedFreeze[caller] -= _param2\n                          supportFreezeQuorum -= _param2\n                      if votedHarvest[caller] <= _param2:\n                          supportHarvestQuorum -= votedHarvest[caller]\n                          votedHarvest[caller] = 0\n                      else:\n                          votedHarvest[caller] -= _param2\n                          supportHarvestQuorum -= _param2\n                      if not isFundLocked:\n                          mem[352] = mem[378 len 6]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=38, data='failed:transfer: isFundLocked is', ' false', mem[352]))\n                      else:\n                          if call.value > 0:\n                              mem[288] = mem[313 len 7]\n                              log evRecord(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    string message=Array(len=7, data=mem[288]))\n                          else:\n                              if _param2 > 0:\n                                  if balanceOf[caller] >= _param2:\n                                      if _param2 + balanceOf[address(_param1)] >= balanceOf[address(_param1)]:\n                                          balanceOf[caller] -= _param2\n                                          balanceOf[address(_param1)] += _param2\n                                          log evTransfer(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address _from=_param2,\n                                                address _to=caller,\n                                                uint256 _amount=address(_param1))\n              else:\n                  if taxPaid(address _param1) == uint32(call.func_hash):\n                      return taxPaid[_param1]\n                  if maxBountyTokens() == uint32(call.func_hash):\n                      return maxBountyTokens\n                  if uint32(call.func_hash) != voteToKickoffNewFiscalYear():\n                      if supportKickoffQuorum(uint256 _param1) == uint32(call.func_hash):\n                          return supportKickoffQuorum[_param1]\n                      if isInTestMode() == uint32(call.func_hash):\n                          return bool(stor0)\n                      if managementBodyAddress() == uint32(call.func_hash):\n                          return managementBodyAddress\n                      if harvestQuorumPercent() == uint32(call.func_hash):\n                          return harvestQuorumPercent\n                      if isKickoffEnabled(uint256 _param1) == uint32(call.func_hash):\n                          return bool(stor37[_param1])\n                      if mgmtRewardPercentage() == uint32(call.func_hash):\n                          return mgmtRewardPercentage\n                      if recallVoteToFreezeFund() == uint32(call.func_hash):\n                          if balanceOf[caller]:\n                      else:\n                          if bountyTokensCreated() == uint32(call.func_hash):\n                              return bountyTokensCreated\n                          if annualManagementFee() == uint32(call.func_hash):\n                              return annualManagementFee\n                          if uint32(call.func_hash) != tokensAvailableAtTierInternal(uint8 _currentTier, uint256 _tokensPerTier, uint256 _tokensCreated):\n                  else:\n                      if not balanceOf[caller]:\n                          mem[288] = mem[304 len 16]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=16, data=mem[288]))\n                          require stor0\n                          stop\n                      if call.value > 0:\n                          mem[288] = mem[313 len 7]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=7, data=mem[288]))\n                          require stor0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if not isFundLocked:\n                          mem[288] = mem[310 len 10]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=10, data=mem[288]))\n                          require stor0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if stor20A3:\n                          if stor35 > 3:\n                              mem[288] = mem[305 len 15]\n                              log evRecord(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    string message=Array(len=15, data=mem[288]))\n                      else:\n                          supportKickoffQuorum[stor35 + 1] -= votedKickoff[stor35 + 1][caller]\n                          supportKickoffQuorum[stor35 + 1] = supportKickoffQuorum[stor35 + 1] - votedKickoff[stor35 + 1][caller] + balanceOf[caller]\n                          votedKickoff[stor35 + 1][caller] = balanceOf[caller]\n                          if supportKickoffQuorum[stor35 + 1] <= (bountyTokensCreated * kickoffQuorumPercent) + (tokensCreated * kickoffQuorumPercent) / 100:\n                              stop\n                          if stor35 + 1 != 1:\n                              stor37[stor35 + 1] = 1\n                              stor35++\n                              lastKickoffDate = block.timestamp\n                              call managementFeeWalletAddress.unknowna8bcbf3c(uint256 _param1) with:\n                                   gas gas_remaining - 25050 wei\n                                  args annualManagementFee\n                              require ext_call.success\n                              log evKickoff(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    uint256 _fiscal=stor35 + 1)\n                              log evIssueManagementFee(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    uint256 _amount=annualManagementFee,\n                                    bool _success=1)\n                          else:\n                              call extraBalanceWalletAddress.unknownb1a8b25a() with:\n                                   gas gas_remaining - 25050 wei\n                              require ext_call.success\n                              totalInitialBalance = eth.balance(this.address)\n                              Mask(254, 0, stor25.field_0) = mgmtFeePercentage * eth.balance(this.address) / 100 / 4\n                              stor25.field_254 % 4 = 0\n                              call managementFeeWalletAddress with:\n                                 value mgmtFeePercentage * eth.balance(this.address) / 100 wei\n                                   gas 0 wei\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: # Palkeoramix decompiler. \n\ndef storage:\n  stor0 is uint8 at storage 0\n  closingTime is uint256 at storage 1\n  weiPerInitialHONG is uint256 at storage 2\n  name is array of uint256 at storage 3\n  symbol is array of uint256 at storage 4\n  decimals is uint8 at storage 5\n  maxBountyTokens is uint256 at storage 6\n  closingTimeExtensionPeriod is uint256 at storage 7\n  minTokensToCreate is uint256 at storage 8\n  maxTokensToCreate is uint256 at storage 9\n  tokensPerTier is uint256 at storage 10\n  lastKickoffDateBuffer is uint256 at storage 11\n  mgmtRewardPercentage is uint256 at storage 12\n  mgmtFeePercentage is uint256 at storage 13\n  harvestQuorumPercent is uint256 at storage 14\n  freezeQuorumPercent is uint256 at storage 15\n  kickoffQuorumPercent is uint256 at storage 16\n  votedKickoff is mapping of uint256 at storage 18\n  votedFreeze is mapping of uint256 at storage 19\n  votedHarvest is mapping of uint256 at storage 20\n  supportKickoffQuorum is mapping of uint256 at storage 21\n  supportFreezeQuorum is uint256 at storage 22\n  supportHarvestQuorum is uint256 at storage 23\n  totalInitialBalance is uint256 at storage 24\n  stor25 is uint8 at storage 25 offset 254\n  stor25 is uint256 at storage 25\n  annualManagementFee is uint256 at storage 25\n  managementBodyAddress is address at storage 26\n  extraBalanceWalletAddress is address at storage 27\n  stor28 is mapping of uint256 at storage 28\n  taxPaid is mapping of uint256 at storage 29\n  balanceOf is mapping of uint256 at storage 30\n  tokensCreated is uint256 at storage 32\n  isFundLocked is uint8 at storage 33\n  isFundReleased is uint8 at storage 33 offset 8\n  isDayThirtyChecked is uint8 at storage 33 offset 16\n  isDaySixtyChecked is uint8 at storage 33 offset 24\n  stor33 is uint256 at storage 33\n  bountyTokensCreated is uint256 at storage 34\n  stor35 is uint256 at storage 35\n  lastKickoffDate is uint256 at storage 36\n  stor37 is mapping of uint8 at storage 37\n  stor38 is bool at storage 38 offset 256\n  isFreezeEnabled is uint8 at storage 38\n  isHarvestEnabled is uint8 at storage 38 offset 8\n  isDistributionInProgress is uint8 at storage 38 offset 16\n  isDistributionReady is uint8 at storage 38 offset 24\n  returnWalletAddress is address at storage 38 offset 32\n  stor38 is uint256 at storage 38 offset 32\n  stor39 is address at storage 39\n  managementFeeWalletAddress is address at storage 40\n  stor20A3 is uint8 at storage 0x20a3e2dd35f58e582c5288344c035e137cace924bb9daf3762b8ef5a58327e26\n\ndef isFundReleased() payable: \n  return bool(isFundReleased)\n\ndef name() payable: \n  return name[0 len name.length]\n\ndef weiPerInitialHONG() payable: \n  return weiPerInitialHONG\n\ndef votedHarvest(address _param1) payable: \n  return votedHarvest[_param1]\n\ndef minTokensToCreate() payable: \n  return minTokensToCreate\n\ndef supportHarvestQuorum() payable: \n  return supportHarvestQuorum\n\ndef extraBalanceWallet() payable: \n  return extraBalanceWalletAddress\n\ndef totalInitialBalance() payable: \n  return totalInitialBalance\n\ndef decimals() payable: \n  return decimals\n\ndef mgmtFeePercentage() payable: \n  return mgmtFeePercentage\n\ndef tokensCreated() payable: \n  return tokensCreated\n\ndef isDistributionReady() payable: \n  return bool(isDistributionReady)\n\ndef closingTimeExtensionPeriod() payable: \n  return closingTimeExtensionPeriod\n\ndef votedKickoff(uint256 _param1, address _param2) payable: \n  return votedKickoff[_param1][_param2]\n\ndef closingTime() payable: \n  return closingTime\n\ndef lastKickoffDateBuffer() payable: \n  return lastKickoffDateBuffer\n\ndef isDayThirtyChecked() payable: \n  return bool(isDayThirtyChecked)\n\ndef isFreezeEnabled() payable: \n  return bool(isFreezeEnabled)\n\ndef isDistributionInProgress() payable: \n  return bool(isDistributionInProgress)\n\ndef lastKickoffDate() payable: \n  return lastKickoffDate\n\ndef managementFeeWallet() payable: \n  return managementFeeWalletAddress\n\ndef supportFreezeQuorum() payable: \n  return supportFreezeQuorum\n\ndef balanceOf(address account) payable: \n  return balanceOf[address(account)]\n\ndef isFundLocked() payable: \n  return bool(isFundLocked)\n\ndef votedFreeze(address _param1) payable: \n  return votedFreeze[_param1]\n\ndef returnWallet() payable: \n  return returnWalletAddress\n\ndef kickoffQuorumPercent() payable: \n  return kickoffQuorumPercent\n\ndef freezeQuorumPercent() payable: \n  return freezeQuorumPercent\n\ndef symbol() payable: \n  return symbol[0 len symbol.length]\n\ndef maxTokensToCreate() payable: \n  return maxTokensToCreate\n\ndef isHarvestEnabled() payable: \n  return bool(isHarvestEnabled)\n\ndef tokensPerTier() payable: \n  return tokensPerTier\n\ndef taxPaid(address _param1) payable: \n  return taxPaid[_param1]\n\ndef maxBountyTokens() payable: \n  return maxBountyTokens\n\ndef supportKickoffQuorum(uint256 _param1) payable: \n  return supportKickoffQuorum[_param1]\n\ndef isInTestMode() payable: \n  return bool(stor0)\n\ndef managementBodyAddress() payable: \n  return managementBodyAddress\n\ndef harvestQuorumPercent() payable: \n  return harvestQuorumPercent\n\ndef isKickoffEnabled(uint256 _param1) payable: \n  return bool(stor37[_param1])\n\ndef mgmtRewardPercentage() payable: \n  return mgmtRewardPercentage\n\ndef bountyTokensCreated() payable: \n  return bountyTokensCreated\n\ndef annualManagementFee() payable: \n  return annualManagementFee\n\ndef isDaySixtyChecked() payable: \n  return bool(isDaySixtyChecked)\n\n#\n#  Regular functions\n#\n\ndef isMinTokensReached() payable: \n  return tokensCreated >= minTokensToCreate\n\ndef isMaxTokensReached() payable: \n  return tokensCreated >= maxTokensToCreate\n\ndef getCurrentTier() payable: \n  if uint8(tokensCreated / tokensPerTier) > 4:\n      return 4\n  return uint8(tokensCreated / tokensPerTier)\n\ndef divisor() payable: \n  if uint8(tokensCreated / tokensPerTier) > 4:\n      return 120\n  return uint8((5 * tokensCreated / tokensPerTier) + 100)\n\ndef pricePerTokenAtCurrentTier() payable: \n  if uint8(tokensCreated / tokensPerTier) > 4:\n      return (120 * weiPerInitialHONG / 100)\n  return (weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100)\n\ndef tokensAvailableAtTierInternal(uint8 _currentTier, uint256 _tokensPerTier, uint256 _tokensCreated) payable: \n  if _tokensPerTier * uint8(_currentTier + 1) <= maxTokensToCreate:\n      if _tokensCreated <= _tokensPerTier * uint8(_currentTier + 1):\n          return ((_tokensPerTier * uint8(_currentTier + 1)) - _tokensCreated)\n  else:\n      if _tokensCreated <= maxTokensToCreate:\n          return (maxTokensToCreate - _tokensCreated)\n  return 0\n\ndef tokensAvailableAtCurrentTier() payable: \n  if uint8(tokensCreated / tokensPerTier) > 4:\n      if 5 * tokensPerTier <= maxTokensToCreate:\n          if tokensCreated <= 5 * tokensPerTier:\n              return ((5 * tokensPerTier) - tokensCreated)\n      else:\n          if tokensCreated <= maxTokensToCreate:\n              return (maxTokensToCreate - tokensCreated)\n  else:\n      if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n          if tokensCreated <= tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1):\n              return ((tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated)\n      else:\n          if tokensCreated <= maxTokensToCreate:\n              return (maxTokensToCreate - tokensCreated)\n  return 0\n\ndef recallVoteToFreezeFund() payable: \n  if not balanceOf[caller]:\n      mem[288] = mem[304 len 16]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=16, data=mem[288]))\n  else:\n      if isFreezeEnabled:\n          mem[288] = mem[307 len 13]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=13, data=mem[288]))\n      else:\n          if call.value <= 0:\n              supportFreezeQuorum -= votedFreeze[caller]\n              votedFreeze[caller] = 0\n              stop\n          mem[288] = mem[313 len 7]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=7, data=mem[288]))\n  require stor0\n\ndef collectMyReturn() payable: \n  if not balanceOf[caller]:\n      mem[288] = mem[304 len 16]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=16, data=mem[288]))\n  else:\n      if call.value > 0:\n          mem[288] = mem[313 len 7]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=7, data=mem[288]))\n      else:\n          if isDistributionReady:\n              balanceOf[caller] = 0\n              call returnWalletAddress.unknown9f3ef430(address _param1, uint256 _param2) with:\n                   gas gas_remaining - 25050 wei\n                  args caller, balanceOf[caller]\n              require ext_call.success\n              stop\n          mem[288] = Mask(80, 88, 'onlyDistributionReady') >> 88, mem[309 len 11]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=21, data=mem[288]))\n  require stor0\n\ndef voteToHarvestFund() payable: \n  if not balanceOf[caller]:\n      mem[288] = mem[304 len 16]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=16, data=mem[288]))\n      require stor0\n      stop\n  if call.value > 0:\n      mem[288] = mem[313 len 7]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=7, data=mem[288]))\n      require stor0\n      stop\n  if not isFundLocked:\n      mem[288] = mem[310 len 10]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=10, data=mem[288]))\n      require stor0\n      stop\n  if stor35 < 4:\n      mem[288] = Mask(48, 104, 'currentFiscalYear<4') >> 104, mem[307 len 13]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=19, data=mem[288]))\n      require stor0\n      stop\n  supportHarvestQuorum -= votedHarvest[caller]\n  supportHarvestQuorum = balanceOf[caller] + supportHarvestQuorum - votedHarvest[caller]\n  votedHarvest[caller] = balanceOf[caller]\n  if supportHarvestQuorum > (bountyTokensCreated * harvestQuorumPercent) + (tokensCreated * harvestQuorumPercent) / 100:\n      isHarvestEnabled = 1\n      log evHarvest(\n            address msg_sender=caller,\n            uint256 msg_value=call.value)\n\ndef mgmtInvestProject(address _projectWallet, uint256 _amount) payable: \n  if managementBodyAddress != caller:\n      mem[288] = Mask(32, 112, 'onlyManagementBody') >> 112, mem[306 len 14]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=18, data=mem[288]))\n  else:\n      if call.value <= 0:\n          mem[288] = mem[312 len 8]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=8, data=mem[288]))\n      else:\n          if not stor37[stor35]:\n              log evMgmtInvestProject(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    address _projectWallet=address(_projectWallet),\n                    uint256 _amount=_amount,\n                    bool result=0)\n              return 0\n          if isFreezeEnabled:\n              log evMgmtInvestProject(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    address _projectWallet=address(_projectWallet),\n                    uint256 _amount=_amount,\n                    bool result=0)\n              return 0\n          if isHarvestEnabled:\n              log evMgmtInvestProject(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    address _projectWallet=address(_projectWallet),\n                    uint256 _amount=_amount,\n                    bool result=0)\n              return 0\n          if _amount >= eth.balance(this.address):\n              mem[352] = 0, mem[369 len 15]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=49, data='failed:mgmtInvestProject: amount', ' >= actualBalance', mem[352]))\n          else:\n              call _projectWallet with:\n                 value _amount wei\n                   gas gas_remaining - 34050 wei\n              if ext_call.success:\n                  log evMgmtInvestProject(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        address _projectWallet=address(_projectWallet),\n                        uint256 _amount=_amount,\n                        bool result=1)\n                  return 0\n              mem[352] = 0, mem[375 len 9]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=55, data='failed:mgmtInvestProject: cannot', ' send to _projectWallet', mem[352]))\n  require stor0\n  return 0\n\ndef refundMyIcoInvestment() payable: \n  if call.value > 0:\n      mem[288] = mem[313 len 7]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=7, data=mem[288]))\n      if stor0:\n          stop\n  else:\n      if isFundLocked:\n          mem[288] = mem[311 len 9]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=9, data=mem[288]))\n          if stor0:\n              stop\n      else:\n          if not balanceOf[caller]:\n              mem[288] = mem[304 len 16]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=16, data=mem[288]))\n              if stor0:\n                  stop\n          else:\n              if not stor28[caller]:\n                  mem[288] = mem[310 len 10]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=10, data=mem[288]))\n                  if stor0:\n                      stop\n              else:\n                  if balanceOf[caller] > tokensCreated:\n                      mem[288] = Mask(16, 120, 'invalidTokenCount') >> 120, mem[305 len 15]\n                      log evRecord(\n                            address msg_sender=caller,\n                            uint256 msg_value=call.value,\n                            string message=Array(len=17, data=mem[288]))\n                      if stor0:\n                          stop\n                  else:\n                      balanceOf[caller] = 0\n                      stor28[caller] = 0\n                      taxPaid[caller] = 0\n                      tokensCreated -= balanceOf[caller]\n                      call extraBalanceWalletAddress.unknown51fa7efd(uint256 _param1) with:\n                           gas gas_remaining - 25050 wei\n                          args taxPaid[caller]\n                      if ext_call.success:\n                          call caller with:\n                             value stor28[caller] wei\n                               gas 0 wei\n                          if ext_call.success:\n                              log evRefund(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    address to=stor28[caller],\n                                    uint256 value=1,\n                                    bool result=caller)\n                              stop\n                          log evRefund(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                address to=stor28[caller],\n                                uint256 value=0,\n                                bool result=caller)\n                          mem[288] = Mask(16, 120, 'refund:SendFailed') >> 120, mem[305 len 15]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=17, data=mem[288]))\n                          if stor0:\n                              stop\n  revert \n\ndef transfer(address recipient, uint256 amount) payable: \n  if stor35 < 4:\n      if votedKickoff[stor35 + 1][caller] <= amount:\n          supportKickoffQuorum[stor35 + 1] -= votedKickoff[stor35 + 1][caller]\n          votedKickoff[stor35 + 1][caller] = 0\n      else:\n          votedKickoff[stor35 + 1][caller] -= amount\n          supportKickoffQuorum[stor35 + 1] -= amount\n  if votedFreeze[caller] <= amount:\n      supportFreezeQuorum -= votedFreeze[caller]\n      votedFreeze[caller] = 0\n  else:\n      votedFreeze[caller] -= amount\n      supportFreezeQuorum -= amount\n  if votedHarvest[caller] <= amount:\n      supportHarvestQuorum -= votedHarvest[caller]\n      votedHarvest[caller] = 0\n  else:\n      votedHarvest[caller] -= amount\n      supportHarvestQuorum -= amount\n  if not isFundLocked:\n      mem[352] = mem[378 len 6]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=38, data='failed:transfer: isFundLocked is', ' false', mem[352]))\n      if stor0:\n          return 0\n  else:\n      if call.value <= 0:\n          if amount > 0:\n              if balanceOf[caller] >= amount:\n                  if amount + balanceOf[address(recipient)] >= balanceOf[address(recipient)]:\n                      balanceOf[caller] -= amount\n                      balanceOf[recipient] += amount\n                      log evTransfer(\n                            address msg_sender=caller,\n                            uint256 msg_value=call.value,\n                            address _from=amount,\n                            address _to=caller,\n                            uint256 _amount=recipient)\n                      return 1\n          if isFundLocked:\n              mem[352] = 0, mem[371 len 13]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=51, data='failed:transfer: cannot send sen', 'd to _projectWallet', mem[352]))\n          else:\n              mem[352] = mem[378 len 6]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=38, data='failed:transfer: isFundLocked is', ' false', mem[352]))\n          if stor0:\n              return 0\n      else:\n          mem[288] = mem[313 len 7]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=7, data=mem[288]))\n          if stor0:\n              if isFundLocked:\n                  mem[416] = 0, mem[435 len 13]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=51, data='failed:transfer: cannot send sen', 'd to _projectWallet', mem[416]))\n              else:\n                  mem[416] = mem[442 len 6]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=38, data='failed:transfer: isFundLocked is', ' false', mem[416]))\n              if stor0:\n                  return 0\n  revert \n\ndef voteToKickoffNewFiscalYear() payable: \n  if not balanceOf[caller]:\n      mem[288] = mem[304 len 16]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=16, data=mem[288]))\n      require stor0\n      stop\n  if call.value > 0:\n      mem[288] = mem[313 len 7]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=7, data=mem[288]))\n      require stor0\n      stop\n  if not isFundLocked:\n      mem[288] = mem[310 len 10]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=10, data=mem[288]))\n      require stor0\n      stop\n  if stor20A3:\n      if stor35 > 3:\n          mem[288] = mem[305 len 15]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=15, data=mem[288]))\n          require stor0\n          stop\n      if lastKickoffDateBuffer + lastKickoffDate >= block.timestamp:\n          mem[288] = mem[304 len 16]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=16, data=mem[288]))\n          require stor0\n          stop\n  supportKickoffQuorum[stor35 + 1] -= votedKickoff[stor35 + 1][caller]\n  supportKickoffQuorum[stor35 + 1] = supportKickoffQuorum[stor35 + 1] - votedKickoff[stor35 + 1][caller] + balanceOf[caller]\n  votedKickoff[stor35 + 1][caller] = balanceOf[caller]\n  if supportKickoffQuorum[stor35 + 1] > (bountyTokensCreated * kickoffQuorumPercent) + (tokensCreated * kickoffQuorumPercent) / 100:\n      if stor35 + 1 != 1:\n          stor37[stor35 + 1] = 1\n          stor35++\n          lastKickoffDate = block.timestamp\n          call managementFeeWalletAddress.unknowna8bcbf3c(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args annualManagementFee\n          require ext_call.success\n      else:\n          call extraBalanceWalletAddress.unknownb1a8b25a() with:\n               gas gas_remaining - 25050 wei\n          require ext_call.success\n          totalInitialBalance = eth.balance(this.address)\n          Mask(254, 0, stor25.field_0) = mgmtFeePercentage * eth.balance(this.address) / 100 / 4\n          stor25.field_254 % 4 = 0\n          call managementFeeWalletAddress with:\n             value mgmtFeePercentage * eth.balance(this.address) / 100 wei\n               gas 0 wei\n          if not ext_call.success:\n              mem[352] = mem[381 len 3]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=35, data='kickoff:ManagementFeePoolWalletF', 'ail', mem[352]))\n              require stor0\n              stop\n          stor37[stor35 + 1] = 1\n          stor35++\n          lastKickoffDate = block.timestamp\n          call managementFeeWalletAddress.unknowna8bcbf3c(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args annualManagementFee\n      log evKickoff(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            uint256 _fiscal=stor35 + 1)\n      log evIssueManagementFee(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            uint256 _amount=annualManagementFee,\n            bool _success=1)\n\ndef mgmtDistribute() payable: \n  if managementBodyAddress != caller:\n      mem[288] = Mask(32, 112, 'onlyManagementBody') >> 112, mem[306 len 14]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=18, data=mem[288]))\n      require stor0\n      stop\n  if call.value <= 0:\n      mem[288] = mem[312 len 8]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=8, data=mem[288]))\n      require stor0\n      stop\n  if not isHarvestEnabled:\n      mem[288] = Mask(32, 112, 'onlyHarvestEnabled') >> 112, mem[306 len 14]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=18, data=mem[288]))\n      require stor0\n      stop\n  if isDistributionReady:\n      mem[288] = Mask(128, 64, 'onlyDistributionNotReady') >> 64, mem[312 len 8]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=24, data=mem[288]))\n      require stor0\n      stop\n  if isDistributionInProgress:\n      mem[288] = Mask(208, 24, 'onlyDistributionNotInProgress') >> 24, mem[317 len 3]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=29, data=mem[288]))\n      require stor0\n      stop\n  isDistributionInProgress = 1\n  isDistributionReady = 1\n  Mask(224, 0, stor38.field_32) = 0\n  stor38.field_256 % 1 = 0\n  call returnWalletAddress with:\n     value eth.balance(this.address) wei\n       gas 0 wei\n  if ext_call.success:\n      call managementFeeWalletAddress.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      call stor39.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      call extraBalanceWalletAddress.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      if mgmtRewardPercentage <= 0:\n          call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args (bountyTokensCreated + tokensCreated)\n          require ext_call.success\n      else:\n          call returnWalletAddress.unknownb8b27765(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args mgmtRewardPercentage\n          require ext_call.success\n          call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args (bountyTokensCreated + tokensCreated)\n      log evMgmtDistributed(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            uint256 _amount=eth.balance(returnWalletAddress),\n            bool _success=1)\n  else:\n      mem[352] = mem[381 len 3]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=35, data='payBalanceToReturnWallet:sendFai', 'led', mem[352]))\n      require stor0\n      call managementFeeWalletAddress.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      require ext_call.success\n      call stor39.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      call extraBalanceWalletAddress.unknownfc44fd28() with:\n           gas gas_remaining - 25050 wei\n      if mgmtRewardPercentage <= 0:\n          call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args (bountyTokensCreated + tokensCreated)\n          require ext_call.success\n      else:\n          call returnWalletAddress.unknownb8b27765(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args mgmtRewardPercentage\n          require ext_call.success\n          call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n               gas gas_remaining - 25050 wei\n              args (bountyTokensCreated + tokensCreated)\n      log evMgmtDistributed(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            uint256 _amount=eth.balance(returnWalletAddress),\n            bool _success=1)\n  isDistributionInProgress = 0\n\ndef voteToFreezeFund() payable: \n  if not balanceOf[caller]:\n      mem[288] = mem[304 len 16]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=16, data=mem[288]))\n      require stor0\n      stop\n  if call.value > 0:\n      mem[288] = mem[313 len 7]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=7, data=mem[288]))\n      require stor0\n      stop\n  if not isFundLocked:\n      mem[288] = mem[310 len 10]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=10, data=mem[288]))\n      require stor0\n      stop\n  if stor35 >= 4:\n      mem[288] = Mask(64, 96, 'currentFiscalYear>=4') >> 96, mem[308 len 12]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=20, data=mem[288]))\n      require stor0\n      stop\n  if isDistributionInProgress:\n      mem[288] = Mask(208, 24, 'onlyDistributionNotInProgress') >> 24, mem[317 len 3]\n      log evRecord(\n            address msg_sender=caller,\n            uint256 msg_value=call.value,\n            string message=Array(len=29, data=mem[288]))\n      require stor0\n      stop\n  supportFreezeQuorum -= votedFreeze[caller]\n  supportFreezeQuorum = balanceOf[caller] + supportFreezeQuorum - votedFreeze[caller]\n  votedFreeze[caller] = balanceOf[caller]\n  if supportFreezeQuorum > (bountyTokensCreated * freezeQuorumPercent) + (tokensCreated * freezeQuorumPercent) / 100:\n      isFreezeEnabled = 1\n      if isDistributionInProgress:\n          mem[288] = Mask(208, 24, 'onlyDistributionNotInProgress') >> 24, mem[317 len 3]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=29, data=mem[288]))\n          require stor0\n      else:\n          isDistributionInProgress = 1\n          isDistributionReady = 1\n          Mask(224, 0, stor38.field_32) = 0\n          stor38.field_256 % 1 = 0\n          call returnWalletAddress with:\n             value eth.balance(this.address) wei\n               gas 0 wei\n          if ext_call.success:\n              call managementFeeWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call stor39.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call extraBalanceWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                   gas gas_remaining - 25050 wei\n                  args (bountyTokensCreated + tokensCreated)\n              require ext_call.success\n              log evMgmtDistributed(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    uint256 _amount=eth.balance(returnWalletAddress),\n                    bool _success=1)\n          else:\n              mem[352] = mem[381 len 3]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=35, data='payBalanceToReturnWallet:sendFai', 'led', mem[352]))\n              require stor0\n              call managementFeeWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              require ext_call.success\n              call stor39.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call extraBalanceWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                   gas gas_remaining - 25050 wei\n                  args (bountyTokensCreated + tokensCreated)\n              require ext_call.success\n              log evMgmtDistributed(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    uint256 _amount=eth.balance(returnWalletAddress),\n                    bool _success=1)\n          isDistributionInProgress = 0\n      log evFreeze(\n            address msg_sender=caller,\n            uint256 msg_value=call.value)\n\ndef _fallback(?) payable: # default function\n  if not calldata.size:\n      if extraBalanceWalletAddress == caller:\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=34, data='Recevied ether from ManagedAccou', 'nt'))\n          return 1\n      if caller == returnWalletAddress:\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=34, data='Recevied ether from ManagedAccou', 'nt'))\n          return 1\n      if caller == stor39:\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=34, data='Recevied ether from ManagedAccou', 'nt'))\n          return 1\n      if caller == managementFeeWalletAddress:\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=34, data='Recevied ether from ManagedAccou', 'nt'))\n          return 1\n      if isFundLocked:\n          mem[288] = mem[311 len 9]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=9, data=mem[288]))\n          require stor0\n          return 0\n      if isFundReleased:\n          mem[288] = mem[309 len 11]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=11, data=mem[288]))\n          require stor0\n          return 0\n      if call.value <= 0:\n          mem[288] = mem[312 len 8]\n          log evRecord(\n                address msg_sender=caller,\n                uint256 msg_value=call.value,\n                string message=Array(len=8, data=mem[288]))\n          require stor0\n          return 0\n      if uint8(tokensCreated / tokensPerTier) > 4:\n          if 5 * tokensPerTier > maxTokensToCreate:\n              if tokensCreated > maxTokensToCreate:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if not maxTokensToCreate - tokensCreated:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if call.value >= 120 * weiPerInitialHONG / 100:\n                  if maxTokensToCreate - tokensCreated < call.value / 120 * weiPerInitialHONG / 100:\n                      if maxTokensToCreate - tokensCreated:\n                          balanceOf[caller] = maxTokensToCreate - tokensCreated + balanceOf[caller]\n                          tokensCreated = maxTokensToCreate\n                          stor28[caller] = (maxTokensToCreate * 120 * weiPerInitialHONG / 100) - (tokensCreated * 120 * weiPerInitialHONG / 100) + stor28[caller]\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier <= maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              balanceOf[caller] += call.value / 120 * weiPerInitialHONG / 100\n                              tokensCreated += call.value / 120 * weiPerInitialHONG / 100\n                              stor28[caller] += call.value / 120 * weiPerInitialHONG / 100 * 120 * weiPerInitialHONG / 100\n                          else:\n                              balanceOf[caller] = maxTokensToCreate - tokensCreated + balanceOf[caller]\n                              tokensCreated = maxTokensToCreate\n                              stor28[caller] = (maxTokensToCreate * 120 * weiPerInitialHONG / 100) - (tokensCreated * 120 * weiPerInitialHONG / 100) + stor28[caller]\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                  else:\n                      balanceOf[caller] += call.value / 120 * weiPerInitialHONG / 100\n                      tokensCreated += call.value / 120 * weiPerInitialHONG / 100\n                      stor28[caller] += call.value / 120 * weiPerInitialHONG / 100 * 120 * weiPerInitialHONG / 100\n                      if maxTokensToCreate - tokensCreated:\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier <= maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                          else:\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n              else:\n                  stor28[caller] += call.value\n                  if not isFundReleased:\n                      stor33 = tokensCreated >= maxTokensToCreate or Mask(248, 8, stor33)\n                      if uint8(tokensCreated >= maxTokensToCreate):\n                          if isFundLocked:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                              else:\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if isFundLocked:\n                                      log evLockFund(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value)\n                                  if tokensCreated < minTokensToCreate:\n                                  else:\n                                      if isFundReleased:\n                                          log evReleaseFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                          else:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                              else:\n                                  if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                      if tokensCreated >= minTokensToCreate:\n                                          isFundLocked = 1\n                                      isDaySixtyChecked = 1\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if not isFundLocked:\n                                                  if isFundReleased:\n                                                      log evReleaseFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                                              else:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                      else:\n                          if isDayThirtyChecked:\n                              if isFundLocked:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if tokensCreated >= minTokensToCreate:\n                                          if isFundLocked:\n                                              log evLockFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                              else:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                          if tokensCreated >= minTokensToCreate:\n                                              isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          if isDaySixtyChecked:\n                                              if tokensCreated < minTokensToCreate:\n                                                  isFundReleased = 1\n                                          else:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                              if tokensCreated >= minTokensToCreate:\n                                                  if isFundLocked:\n                                                      log evLockFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                          else:\n                              if block.timestamp < closingTime:\n                                  if isFundLocked:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if not isFundLocked:\n                                                  if isFundReleased:\n                                                      log evReleaseFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                                              else:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                      else:\n                                          if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                                              if isDaySixtyChecked:\n                                                  if tokensCreated < minTokensToCreate:\n                                                      isFundReleased = 1\n                                              else:\n                                                  log evCreatedToken(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value,\n                                                        address to=0,\n                                                        uint256 amount=caller)\n                                                  if tokensCreated >= minTokensToCreate:\n                                          else:\n                                              if tokensCreated >= minTokensToCreate:\n                                                  isFundLocked = 1\n                                              isDaySixtyChecked = 1\n                              else:\n                                  if tokensCreated >= minTokensToCreate:\n                                      isFundLocked = 1\n                                  isDayThirtyChecked = 1\n                                  if not isFundLocked:\n                                      if not isDaySixtyChecked:\n                                          if block.timestamp < closingTime + closingTimeExtensionPeriod:\n          else:\n              if tokensCreated > 5 * tokensPerTier:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if not (5 * tokensPerTier) - tokensCreated:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if call.value >= 120 * weiPerInitialHONG / 100:\n                  if (5 * tokensPerTier) - tokensCreated < call.value / 120 * weiPerInitialHONG / 100:\n                      if (5 * tokensPerTier) - tokensCreated:\n                          balanceOf[caller] = (5 * tokensPerTier) - tokensCreated + balanceOf[caller]\n                          tokensCreated = 5 * tokensPerTier\n                          stor28[caller] = (5 * tokensPerTier * 120 * weiPerInitialHONG / 100) - (tokensCreated * 120 * weiPerInitialHONG / 100) + stor28[caller]\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier > maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) > maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              balanceOf[caller] += call.value / 120 * weiPerInitialHONG / 100\n                              tokensCreated += call.value / 120 * weiPerInitialHONG / 100\n                              stor28[caller] += call.value / 120 * weiPerInitialHONG / 100 * 120 * weiPerInitialHONG / 100\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                          else:\n                              balanceOf[caller] = (5 * tokensPerTier) - tokensCreated + balanceOf[caller]\n                              tokensCreated = 5 * tokensPerTier\n                              stor28[caller] = (5 * tokensPerTier * 120 * weiPerInitialHONG / 100) - (tokensCreated * 120 * weiPerInitialHONG / 100) + stor28[caller]\n                              if uint8(tokensCreated / tokensPerTier) > 4:\n                                  if 5 * tokensPerTier <= maxTokensToCreate:\n                              else:\n                                  if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                  else:\n                      balanceOf[caller] += call.value / 120 * weiPerInitialHONG / 100\n                      tokensCreated += call.value / 120 * weiPerInitialHONG / 100\n                      stor28[caller] += call.value / 120 * weiPerInitialHONG / 100 * 120 * weiPerInitialHONG / 100\n                      if (5 * tokensPerTier) - tokensCreated:\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier > maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) > maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                          else:\n                              if uint8(tokensCreated / tokensPerTier) > 4:\n                                  if 5 * tokensPerTier <= maxTokensToCreate:\n                              else:\n                                  if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n              else:\n                  stor28[caller] += call.value\n                  if not isFundReleased:\n                      stor33 = tokensCreated >= maxTokensToCreate or Mask(248, 8, stor33)\n                      if uint8(tokensCreated >= maxTokensToCreate):\n                          if isFundLocked:\n                              if not isDaySixtyChecked:\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated < minTokensToCreate:\n                                      if not isFundLocked:\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                                      else:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                  else:\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                      if isFundReleased:\n                                          log evReleaseFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                              else:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                          else:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                              else:\n                                  if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                      if tokensCreated >= minTokensToCreate:\n                                          isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          isDaySixtyChecked = 1\n                                          if not isDaySixtyChecked:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if isFundLocked:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                              if isFundReleased:\n                                                  log evReleaseFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                      else:\n                          if isDayThirtyChecked:\n                              if isFundLocked:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if tokensCreated >= minTokensToCreate:\n                                  else:\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                      if tokensCreated < minTokensToCreate:\n                                      else:\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                              else:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                          if tokensCreated >= minTokensToCreate:\n                                              isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          if isDaySixtyChecked:\n                                              if tokensCreated < minTokensToCreate:\n                                                  isFundReleased = 1\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                          else:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                              if tokensCreated >= minTokensToCreate:\n                                                  if not isFundLocked:\n                                                      if isFundReleased:\n                                                          log evReleaseFund(\n                                                                address msg_sender=caller,\n                                                                uint256 msg_value=call.value)\n                                                  else:\n                                                      log evLockFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                          else:\n                              if block.timestamp >= closingTime:\n                                  if tokensCreated < minTokensToCreate:\n                                      isDayThirtyChecked = 1\n                                      if isFundLocked:\n                                          if not isDaySixtyChecked:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                      else:\n                                          if not isDaySixtyChecked:\n                                              if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                                  else:\n                                      isFundLocked = 1\n                                      isDayThirtyChecked = 1\n                                      if not isFundLocked:\n                                          if not isDaySixtyChecked:\n                                              if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                              else:\n                                  if isFundLocked:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if isFundLocked:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                              if isFundReleased:\n                                                  log evReleaseFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                              if tokensCreated >= minTokensToCreate:\n                                                  isFundLocked = 1\n                                              isDaySixtyChecked = 1\n                                          else:\n                                              if isDaySixtyChecked:\n                                                  if tokensCreated < minTokensToCreate:\n                                                      isFundReleased = 1\n                                              else:\n                                                  log evCreatedToken(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value,\n                                                        address to=0,\n                                                        uint256 amount=caller)\n                                                  if tokensCreated >= minTokensToCreate:\n                                                      if isFundLocked:\n                                                          log evLockFund(\n                                                                address msg_sender=caller,\n                                                                uint256 msg_value=call.value)\n      else:\n          if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) > maxTokensToCreate:\n              if tokensCreated > maxTokensToCreate:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if not maxTokensToCreate - tokensCreated:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if call.value >= weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100:\n                  if maxTokensToCreate - tokensCreated < call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100:\n                      if maxTokensToCreate - tokensCreated:\n                          balanceOf[caller] = maxTokensToCreate - tokensCreated + balanceOf[caller]\n                          tokensCreated = maxTokensToCreate\n                          stor28[caller] = (maxTokensToCreate * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) - (tokensCreated * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) + stor28[caller]\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier <= maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              balanceOf[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                              tokensCreated += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                              stor28[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100 * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                          else:\n                              balanceOf[caller] = maxTokensToCreate - tokensCreated + balanceOf[caller]\n                              tokensCreated = maxTokensToCreate\n                              stor28[caller] = (maxTokensToCreate * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) - (tokensCreated * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) + stor28[caller]\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                  else:\n                      balanceOf[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      tokensCreated += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      stor28[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100 * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      if maxTokensToCreate - tokensCreated:\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier <= maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                          else:\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n              else:\n                  stor28[caller] += call.value\n                  if not isFundReleased:\n                      stor33 = tokensCreated >= maxTokensToCreate or Mask(248, 8, stor33)\n                      if uint8(tokensCreated >= maxTokensToCreate):\n                          if isFundLocked:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                              else:\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if isFundLocked:\n                                      log evLockFund(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value)\n                                  if tokensCreated < minTokensToCreate:\n                                  else:\n                                      if isFundReleased:\n                                          log evReleaseFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                          else:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                              else:\n                                  if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                      if tokensCreated >= minTokensToCreate:\n                                          isFundLocked = 1\n                                      isDaySixtyChecked = 1\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if not isFundLocked:\n                                                  if isFundReleased:\n                                                      log evReleaseFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                                              else:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                      else:\n                          if isDayThirtyChecked:\n                              if isFundLocked:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if tokensCreated >= minTokensToCreate:\n                                          if isFundLocked:\n                                              log evLockFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                              else:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                          if tokensCreated >= minTokensToCreate:\n                                              isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          if isDaySixtyChecked:\n                                              if tokensCreated < minTokensToCreate:\n                                                  isFundReleased = 1\n                                          else:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                              if tokensCreated >= minTokensToCreate:\n                                                  if isFundLocked:\n                                                      log evLockFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                          else:\n                              if block.timestamp < closingTime:\n                                  if isFundLocked:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if not isFundLocked:\n                                                  if isFundReleased:\n                                                      log evReleaseFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                                              else:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                      else:\n                                          if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                                              if isDaySixtyChecked:\n                                                  if tokensCreated < minTokensToCreate:\n                                                      isFundReleased = 1\n                                              else:\n                                                  log evCreatedToken(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value,\n                                                        address to=0,\n                                                        uint256 amount=caller)\n                                                  if tokensCreated >= minTokensToCreate:\n                                          else:\n                                              if tokensCreated >= minTokensToCreate:\n                                                  isFundLocked = 1\n                                              isDaySixtyChecked = 1\n                              else:\n                                  if tokensCreated >= minTokensToCreate:\n                                      isFundLocked = 1\n                                  isDayThirtyChecked = 1\n                                  if not isFundLocked:\n                                      if not isDaySixtyChecked:\n                                          if block.timestamp < closingTime + closingTimeExtensionPeriod:\n          else:\n              if tokensCreated > tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1):\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if not (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated:\n                  mem[288] = mem[306 len 14]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=14, data=mem[288]))\n                  require stor0\n                  return 0\n              if call.value >= weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100:\n                  if (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated < call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100:\n                      if (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated:\n                          balanceOf[caller] = (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated + balanceOf[caller]\n                          tokensCreated = tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)\n                          stor28[caller] = (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) - (tokensCreated * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) + stor28[caller]\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier > maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) > maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              balanceOf[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                              tokensCreated += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                              stor28[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100 * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                          else:\n                              balanceOf[caller] = (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated + balanceOf[caller]\n                              tokensCreated = tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)\n                              stor28[caller] = (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) - (tokensCreated * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100) + stor28[caller]\n                              if uint8(tokensCreated / tokensPerTier) > 4:\n                                  if 5 * tokensPerTier <= maxTokensToCreate:\n                              else:\n                                  if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                  else:\n                      balanceOf[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      tokensCreated += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      stor28[caller] += call.value / weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100 * weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100\n                      if (tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated:\n                          if uint8(tokensCreated / tokensPerTier) > 4:\n                              if 5 * tokensPerTier > maxTokensToCreate:\n                          else:\n                              if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) > maxTokensToCreate:\n                      else:\n                          if maxTokensToCreate == tokensCreated:\n                              if uint8(tokensCreated / tokensPerTier) <= 4:\n                          else:\n                              if uint8(tokensCreated / tokensPerTier) > 4:\n                                  if 5 * tokensPerTier <= maxTokensToCreate:\n                              else:\n                                  if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n              else:\n                  stor28[caller] += call.value\n                  if not isFundReleased:\n                      stor33 = tokensCreated >= maxTokensToCreate or Mask(248, 8, stor33)\n                      if uint8(tokensCreated >= maxTokensToCreate):\n                          if isFundLocked:\n                              if not isDaySixtyChecked:\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated < minTokensToCreate:\n                                      if not isFundLocked:\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                                      else:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                  else:\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                      if isFundReleased:\n                                          log evReleaseFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                              else:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                          else:\n                              if isDaySixtyChecked:\n                                  if tokensCreated < minTokensToCreate:\n                                      isFundReleased = 1\n                                  log evCreatedToken(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address to=0,\n                                        uint256 amount=caller)\n                                  if tokensCreated >= minTokensToCreate:\n                              else:\n                                  if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                      if tokensCreated >= minTokensToCreate:\n                                          isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          isDaySixtyChecked = 1\n                                          if not isDaySixtyChecked:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if isFundLocked:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                              if isFundReleased:\n                                                  log evReleaseFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                      else:\n                          if isDayThirtyChecked:\n                              if isFundLocked:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if tokensCreated >= minTokensToCreate:\n                                  else:\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                      if isFundLocked:\n                                          log evLockFund(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value)\n                                      if tokensCreated < minTokensToCreate:\n                                      else:\n                                          if isFundReleased:\n                                              log evReleaseFund(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value)\n                              else:\n                                  if isDaySixtyChecked:\n                                      if tokensCreated < minTokensToCreate:\n                                          isFundReleased = 1\n                                      log evCreatedToken(\n                                            address msg_sender=caller,\n                                            uint256 msg_value=call.value,\n                                            address to=0,\n                                            uint256 amount=caller)\n                                  else:\n                                      if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                          if tokensCreated >= minTokensToCreate:\n                                              isFundLocked = 1\n                                          isDaySixtyChecked = 1\n                                      else:\n                                          if isDaySixtyChecked:\n                                              if tokensCreated < minTokensToCreate:\n                                                  isFundReleased = 1\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                          else:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                              if tokensCreated >= minTokensToCreate:\n                                                  if not isFundLocked:\n                                                      if isFundReleased:\n                                                          log evReleaseFund(\n                                                                address msg_sender=caller,\n                                                                uint256 msg_value=call.value)\n                                                  else:\n                                                      log evLockFund(\n                                                            address msg_sender=caller,\n                                                            uint256 msg_value=call.value)\n                          else:\n                              if block.timestamp >= closingTime:\n                                  if tokensCreated < minTokensToCreate:\n                                      isDayThirtyChecked = 1\n                                      if isFundLocked:\n                                          if not isDaySixtyChecked:\n                                              log evCreatedToken(\n                                                    address msg_sender=caller,\n                                                    uint256 msg_value=call.value,\n                                                    address to=0,\n                                                    uint256 amount=caller)\n                                      else:\n                                          if not isDaySixtyChecked:\n                                              if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                                  else:\n                                      isFundLocked = 1\n                                      isDayThirtyChecked = 1\n                                      if not isFundLocked:\n                                          if not isDaySixtyChecked:\n                                              if block.timestamp < closingTime + closingTimeExtensionPeriod:\n                              else:\n                                  if isFundLocked:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                          if tokensCreated >= minTokensToCreate:\n                                              if isFundLocked:\n                                                  log evLockFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                              if isFundReleased:\n                                                  log evReleaseFund(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value)\n                                  else:\n                                      if isDaySixtyChecked:\n                                          if tokensCreated < minTokensToCreate:\n                                              isFundReleased = 1\n                                          log evCreatedToken(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address to=0,\n                                                uint256 amount=caller)\n                                      else:\n                                          if block.timestamp >= closingTime + closingTimeExtensionPeriod:\n                                              if tokensCreated >= minTokensToCreate:\n                                                  isFundLocked = 1\n                                              isDaySixtyChecked = 1\n                                          else:\n                                              if isDaySixtyChecked:\n                                                  if tokensCreated < minTokensToCreate:\n                                                      isFundReleased = 1\n                                              else:\n                                                  log evCreatedToken(\n                                                        address msg_sender=caller,\n                                                        uint256 msg_value=call.value,\n                                                        address to=0,\n                                                        uint256 amount=caller)\n                                                  if tokensCreated >= minTokensToCreate:\n                                                      if isFundLocked:\n                                                          log evLockFund(\n                                                                address msg_sender=caller,\n                                                                uint256 msg_value=call.value)\n  else:\n      if uint32(call.func_hash) == isFundReleased():\n          return bool(isFundReleased)\n      if mgmtDistribute() == uint32(call.func_hash):\n          if managementBodyAddress != caller:\n              mem[288] = Mask(32, 112, 'onlyManagementBody') >> 112, mem[306 len 14]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=18, data=mem[288]))\n              require stor0\n              stop\n          if call.value <= 0:\n              mem[288] = mem[312 len 8]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=8, data=mem[288]))\n              require stor0\n              stop\n          if not isHarvestEnabled:\n              mem[288] = Mask(32, 112, 'onlyHarvestEnabled') >> 112, mem[306 len 14]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=18, data=mem[288]))\n              require stor0\n              stop\n          if isDistributionReady:\n              mem[288] = Mask(128, 64, 'onlyDistributionNotReady') >> 64, mem[312 len 8]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=24, data=mem[288]))\n              require stor0\n              stop\n          if isDistributionInProgress:\n              mem[288] = Mask(208, 24, 'onlyDistributionNotInProgress') >> 24, mem[317 len 3]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=29, data=mem[288]))\n              require stor0\n              stop\n          isDistributionInProgress = 1\n          isDistributionReady = 1\n          Mask(224, 0, stor38.field_32) = 0\n          stor38.field_256 % 1 = 0\n          call returnWalletAddress with:\n             value eth.balance(this.address) wei\n               gas 0 wei\n          if ext_call.success:\n              call managementFeeWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call stor39.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call extraBalanceWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              if mgmtRewardPercentage <= 0:\n                  call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args (bountyTokensCreated + tokensCreated)\n                  require ext_call.success\n              else:\n                  call returnWalletAddress.unknownb8b27765(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args mgmtRewardPercentage\n                  require ext_call.success\n                  call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args (bountyTokensCreated + tokensCreated)\n              log evMgmtDistributed(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    uint256 _amount=eth.balance(returnWalletAddress),\n                    bool _success=1)\n          else:\n              mem[352] = mem[381 len 3]\n              log evRecord(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    string message=Array(len=35, data='payBalanceToReturnWallet:sendFai', 'led', mem[352]))\n              require stor0\n              call managementFeeWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              require ext_call.success\n              call stor39.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              call extraBalanceWalletAddress.unknownfc44fd28() with:\n                   gas gas_remaining - 25050 wei\n              if mgmtRewardPercentage <= 0:\n                  call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args (bountyTokensCreated + tokensCreated)\n                  require ext_call.success\n              else:\n                  call returnWalletAddress.unknownb8b27765(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args mgmtRewardPercentage\n                  require ext_call.success\n                  call returnWalletAddress.unknown2033d9ae(uint256 _param1) with:\n                       gas gas_remaining - 25050 wei\n                      args (bountyTokensCreated + tokensCreated)\n              log evMgmtDistributed(\n                    address msg_sender=caller,\n                    uint256 msg_value=call.value,\n                    uint256 _amount=eth.balance(returnWalletAddress),\n                    bool _success=1)\n          isDistributionInProgress = 0\n          stop\n      if uint32(call.func_hash) != name():\n          if weiPerInitialHONG() == uint32(call.func_hash):\n              return weiPerInitialHONG\n          if votedHarvest(address ) == uint32(call.func_hash):\n              return votedHarvest[_param1]\n          if minTokensToCreate() == uint32(call.func_hash):\n              return minTokensToCreate\n          if supportHarvestQuorum() == uint32(call.func_hash):\n              return supportHarvestQuorum\n          if extraBalanceWallet() == uint32(call.func_hash):\n              return extraBalanceWalletAddress\n          if totalInitialBalance() == uint32(call.func_hash):\n              return totalInitialBalance\n          if divisor() == uint32(call.func_hash):\n              if uint8(tokensCreated / tokensPerTier) > 4:\n                  return 120\n              return uint8((5 * tokensCreated / tokensPerTier) + 100)\n          if voteToHarvestFund() == uint32(call.func_hash):\n              if not balanceOf[caller]:\n                  mem[288] = mem[304 len 16]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=16, data=mem[288]))\n                  require stor0\n                  stop\n              if call.value > 0:\n                  mem[288] = mem[313 len 7]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=7, data=mem[288]))\n                  require stor0\n                  stop\n              if not isFundLocked:\n                  mem[288] = mem[310 len 10]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=10, data=mem[288]))\n                  require stor0\n                  stop\n              if stor35 < 4:\n                  mem[288] = Mask(48, 104, 'currentFiscalYear<4') >> 104, mem[307 len 13]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=19, data=mem[288]))\n                  require stor0\n                  stop\n              supportHarvestQuorum -= votedHarvest[caller]\n              supportHarvestQuorum = balanceOf[caller] + supportHarvestQuorum - votedHarvest[caller]\n              votedHarvest[caller] = balanceOf[caller]\n              if supportHarvestQuorum > (bountyTokensCreated * harvestQuorumPercent) + (tokensCreated * harvestQuorumPercent) / 100:\n                  isHarvestEnabled = 1\n                  log evHarvest(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value)\n              stop\n          if decimals() == uint32(call.func_hash):\n              return decimals\n          if pricePerTokenAtCurrentTier() == uint32(call.func_hash):\n              if uint8(tokensCreated / tokensPerTier) > 4:\n                  return (120 * weiPerInitialHONG / 100)\n              return (weiPerInitialHONG * uint8((5 * tokensCreated / tokensPerTier) + 100) / 100)\n          if mgmtFeePercentage() == uint32(call.func_hash):\n              return mgmtFeePercentage\n          if tokensCreated() == uint32(call.func_hash):\n              return tokensCreated\n          if isDistributionReady() == uint32(call.func_hash):\n              return bool(isDistributionReady)\n          if closingTimeExtensionPeriod() == uint32(call.func_hash):\n              return closingTimeExtensionPeriod\n          if votedKickoff(uint256 _param1, address _param2) == uint32(call.func_hash):\n              return votedKickoff[_param1][_param2]\n          if closingTime() == uint32(call.func_hash):\n              return closingTime\n          if lastKickoffDateBuffer() == uint32(call.func_hash):\n              return lastKickoffDateBuffer\n          if isDayThirtyChecked() == uint32(call.func_hash):\n              return bool(isDayThirtyChecked)\n          if isFreezeEnabled() == uint32(call.func_hash):\n              return bool(isFreezeEnabled)\n          if collectMyReturn() == uint32(call.func_hash):\n              if not balanceOf[caller]:\n                  mem[288] = mem[304 len 16]\n                  log evRecord(\n                        address msg_sender=caller,\n                        uint256 msg_value=call.value,\n                        string message=Array(len=16, data=mem[288]))\n              else:\n                  if call.value > 0:\n                      mem[288] = mem[313 len 7]\n                      log evRecord(\n                            address msg_sender=caller,\n                            uint256 msg_value=call.value,\n                            string message=Array(len=7, data=mem[288]))\n                  else:\n                      if isDistributionReady:\n                          balanceOf[caller] = 0\n                          call returnWalletAddress.unknown9f3ef430(address _param1, uint256 _param2) with:\n                               gas gas_remaining - 25050 wei\n                              args caller, balanceOf[caller]\n                          require ext_call.success\n                          stop\n                      mem[288] = Mask(80, 88, 'onlyDistributionReady') >> 88, mem[309 len 11]\n                      log evRecord(\n                            address msg_sender=caller,\n                            uint256 msg_value=call.value,\n                            string message=Array(len=21, data=mem[288]))\n              require stor0\n              stop\n          if isMinTokensReached() == uint32(call.func_hash):\n              return tokensCreated >= minTokensToCreate\n          if isDistributionInProgress() == uint32(call.func_hash):\n              return bool(isDistributionInProgress)\n          if lastKickoffDate() == uint32(call.func_hash):\n              return lastKickoffDate\n          if managementFeeWallet() == uint32(call.func_hash):\n              return managementFeeWalletAddress\n          if supportFreezeQuorum() == uint32(call.func_hash):\n              return supportFreezeQuorum\n          if balanceOf(address account) == uint32(call.func_hash):\n              return balanceOf[address(_param1)]\n          if tokensAvailableAtCurrentTier() == uint32(call.func_hash):\n              if uint8(tokensCreated / tokensPerTier) > 4:\n                  if 5 * tokensPerTier <= maxTokensToCreate:\n                      if tokensCreated <= 5 * tokensPerTier:\n                          return ((5 * tokensPerTier) - tokensCreated)\n                  else:\n                      if tokensCreated <= maxTokensToCreate:\n                          return (maxTokensToCreate - tokensCreated)\n              else:\n                  if tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1) <= maxTokensToCreate:\n                      if tokensCreated <= tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1):\n                          return ((tokensPerTier * uint8((tokensCreated / tokensPerTier) + 1)) - tokensCreated)\n                  else:\n                      if tokensCreated <= maxTokensToCreate:\n                          return (maxTokensToCreate - tokensCreated)\n              return 0\n          if getCurrentTier() == uint32(call.func_hash):\n              if uint8(tokensCreated / tokensPerTier) > 4:\n                  return 4\n              return uint8(tokensCreated / tokensPerTier)\n          if isFundLocked() == uint32(call.func_hash):\n              return bool(isFundLocked)\n          if votedFreeze(address _param1) == uint32(call.func_hash):\n              return votedFreeze[_param1]\n          if returnWallet() == uint32(call.func_hash):\n              return returnWalletAddress\n          if kickoffQuorumPercent() == uint32(call.func_hash):\n              return kickoffQuorumPercent\n          if isMaxTokensReached() == uint32(call.func_hash):\n              return tokensCreated >= maxTokensToCreate\n          if freezeQuorumPercent() == uint32(call.func_hash):\n              return freezeQuorumPercent\n          if uint32(call.func_hash) != symbol():\n              if maxTokensToCreate() == uint32(call.func_hash):\n                  return maxTokensToCreate\n              if mgmtInvestProject(address _projectWallet, uint256 _amount) == uint32(call.func_hash):\n                  if managementBodyAddress != caller:\n                      mem[288] = Mask(32, 112, 'onlyManagementBody') >> 112, mem[306 len 14]\n                      log evRecord(\n                            address msg_sender=caller,\n                            uint256 msg_value=call.value,\n                            string message=Array(len=18, data=mem[288]))\n                  else:\n                      if call.value <= 0:\n                          mem[288] = mem[312 len 8]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=8, data=mem[288]))\n                      else:\n                          if not stor37[stor35]:\n                              log evMgmtInvestProject(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    address _projectWallet=address(_param1),\n                                    uint256 _amount=_param2,\n                                    bool result=0)\n                              return 0\n                          if isFreezeEnabled:\n                              log evMgmtInvestProject(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    address _projectWallet=address(_param1),\n                                    uint256 _amount=_param2,\n                                    bool result=0)\n                              return 0\n                          if isHarvestEnabled:\n                              log evMgmtInvestProject(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    address _projectWallet=address(_param1),\n                                    uint256 _amount=_param2,\n                                    bool result=0)\n                              return 0\n                          if _param2 >= eth.balance(this.address):\n                              mem[352] = 0, mem[369 len 15]\n                              log evRecord(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    string message=Array(len=49, data='failed:mgmtInvestProject: amount', ' >= actualBalance', mem[352]))\n                          else:\n                              call address(_param1) with:\n                                 value _param2 wei\n                                   gas gas_remaining - 34050 wei\n                              if ext_call.success:\n                                  log evMgmtInvestProject(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address _projectWallet=address(_param1),\n                                        uint256 _amount=_param2,\n                                        bool result=1)\n                                  return 0\n                              mem[352] = 0, mem[375 len 9]\n                              log evRecord(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    string message=Array(len=55, data='failed:mgmtInvestProject: cannot', ' send to _projectWallet', mem[352]))\n                  require stor0\n                  return 0\n              if isHarvestEnabled() == uint32(call.func_hash):\n                  return bool(isHarvestEnabled)\n              if tokensPerTier() == uint32(call.func_hash):\n                  return tokensPerTier\n              if transfer(address recipient, uint256 amount) == uint32(call.func_hash):\n                  if stor35 >= 4:\n                      if votedFreeze[caller] <= _param2:\n                          supportFreezeQuorum -= votedFreeze[caller]\n                          votedFreeze[caller] = 0\n                      else:\n                          votedFreeze[caller] -= _param2\n                          supportFreezeQuorum -= _param2\n                      if votedHarvest[caller] <= _param2:\n                          supportHarvestQuorum -= votedHarvest[caller]\n                          votedHarvest[caller] = 0\n                      else:\n                          votedHarvest[caller] -= _param2\n                          supportHarvestQuorum -= _param2\n                      if not isFundLocked:\n                          mem[352] = mem[378 len 6]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=38, data='failed:transfer: isFundLocked is', ' false', mem[352]))\n                          require stor0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if call.value > 0:\n                          mem[288] = mem[313 len 7]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=7, data=mem[288]))\n                          require stor0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if _param2 > 0:\n                          if balanceOf[caller] >= _param2:\n                              if _param2 + balanceOf[address(_param1)] >= balanceOf[address(_param1)]:\n                                  balanceOf[caller] -= _param2\n                                  balanceOf[address(_param1)] += _param2\n                                  log evTransfer(\n                                        address msg_sender=caller,\n                                        uint256 msg_value=call.value,\n                                        address _from=_param2,\n                                        address _to=caller,\n                                        uint256 _amount=address(_param1))\n                  else:\n                      if votedKickoff[stor35 + 1][caller] <= _param2:\n                          supportKickoffQuorum[stor35 + 1] -= votedKickoff[stor35 + 1][caller]\n                          votedKickoff[stor35 + 1][caller] = 0\n                      else:\n                          votedKickoff[stor35 + 1][caller] -= _param2\n                          supportKickoffQuorum[stor35 + 1] -= _param2\n                      if votedFreeze[caller] <= _param2:\n                          supportFreezeQuorum -= votedFreeze[caller]\n                          votedFreeze[caller] = 0\n                      else:\n                          votedFreeze[caller] -= _param2\n                          supportFreezeQuorum -= _param2\n                      if votedHarvest[caller] <= _param2:\n                          supportHarvestQuorum -= votedHarvest[caller]\n                          votedHarvest[caller] = 0\n                      else:\n                          votedHarvest[caller] -= _param2\n                          supportHarvestQuorum -= _param2\n                      if not isFundLocked:\n                          mem[352] = mem[378 len 6]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=38, data='failed:transfer: isFundLocked is', ' false', mem[352]))\n                      else:\n                          if call.value > 0:\n                              mem[288] = mem[313 len 7]\n                              log evRecord(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    string message=Array(len=7, data=mem[288]))\n                          else:\n                              if _param2 > 0:\n                                  if balanceOf[caller] >= _param2:\n                                      if _param2 + balanceOf[address(_param1)] >= balanceOf[address(_param1)]:\n                                          balanceOf[caller] -= _param2\n                                          balanceOf[address(_param1)] += _param2\n                                          log evTransfer(\n                                                address msg_sender=caller,\n                                                uint256 msg_value=call.value,\n                                                address _from=_param2,\n                                                address _to=caller,\n                                                uint256 _amount=address(_param1))\n              else:\n                  if taxPaid(address _param1) == uint32(call.func_hash):\n                      return taxPaid[_param1]\n                  if maxBountyTokens() == uint32(call.func_hash):\n                      return maxBountyTokens\n                  if uint32(call.func_hash) != voteToKickoffNewFiscalYear():\n                      if supportKickoffQuorum(uint256 _param1) == uint32(call.func_hash):\n                          return supportKickoffQuorum[_param1]\n                      if isInTestMode() == uint32(call.func_hash):\n                          return bool(stor0)\n                      if managementBodyAddress() == uint32(call.func_hash):\n                          return managementBodyAddress\n                      if harvestQuorumPercent() == uint32(call.func_hash):\n                          return harvestQuorumPercent\n                      if isKickoffEnabled(uint256 _param1) == uint32(call.func_hash):\n                          return bool(stor37[_param1])\n                      if mgmtRewardPercentage() == uint32(call.func_hash):\n                          return mgmtRewardPercentage\n                      if recallVoteToFreezeFund() == uint32(call.func_hash):\n                          if balanceOf[caller]:\n                      else:\n                          if bountyTokensCreated() == uint32(call.func_hash):\n                              return bountyTokensCreated\n                          if annualManagementFee() == uint32(call.func_hash):\n                              return annualManagementFee\n                          if uint32(call.func_hash) != tokensAvailableAtTierInternal(uint8 _currentTier, uint256 _tokensPerTier, uint256 _tokensCreated):\n                  else:\n                      if not balanceOf[caller]:\n                          mem[288] = mem[304 len 16]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=16, data=mem[288]))\n                          require stor0\n                          stop\n                      if call.value > 0:\n                          mem[288] = mem[313 len 7]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=7, data=mem[288]))\n                          require stor0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if not isFundLocked:\n                          mem[288] = mem[310 len 10]\n                          log evRecord(\n                                address msg_sender=caller,\n                                uint256 msg_value=call.value,\n                                string message=Array(len=10, data=mem[288]))\n                          require stor0\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if stor20A3:\n                          if stor35 > 3:\n                              mem[288] = mem[305 len 15]\n                              log evRecord(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    string message=Array(len=15, data=mem[288]))\n                      else:\n                          supportKickoffQuorum[stor35 + 1] -= votedKickoff[stor35 + 1][caller]\n                          supportKickoffQuorum[stor35 + 1] = supportKickoffQuorum[stor35 + 1] - votedKickoff[stor35 + 1][caller] + balanceOf[caller]\n                          votedKickoff[stor35 + 1][caller] = balanceOf[caller]\n                          if supportKickoffQuorum[stor35 + 1] <= (bountyTokensCreated * kickoffQuorumPercent) + (tokensCreated * kickoffQuorumPercent) / 100:\n                              stop\n                          if stor35 + 1 != 1:\n                              stor37[stor35 + 1] = 1\n                              stor35++\n                              lastKickoffDate = block.timestamp\n                              call managementFeeWalletAddress.unknowna8bcbf3c(uint256 _param1) with:\n                                   gas gas_remaining - 25050 wei\n                                  args annualManagementFee\n                              require ext_call.success\n                              log evKickoff(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    uint256 _fiscal=stor35 + 1)\n                              log evIssueManagementFee(\n                                    address msg_sender=caller,\n                                    uint256 msg_value=call.value,\n                                    uint256 _amount=annualManagementFee,\n                                    bool _success=1)\n                          else:\n                              call extraBalanceWalletAddress.unknownb1a8b25a() with:\n                                   gas gas_remaining - 25050 wei\n                              require ext_call.success\n                              totalInitialBalance = eth.balance(this.address)\n                              Mask(254, 0, stor25.field_0) = mgmtFeePercentage * eth.balance(this.address) / 100 / 4\n                              stor25.field_254 % 4 = 0\n                              call managementFeeWalletAddress with:\n                                 value mgmtFeePercentage * eth.balance(this.address) / 100 wei\n                                   gas 0 wei\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n.",
	"status": "1",
	"time_cost": 51.21213507652283,
	"usage": {
		"completion_tokens": 592,
		"prompt_tokens": 23316,
		"total_tokens": 23908
	}
}