{
	"address": "0xc7c9b856d33651cc2bcd9e0099efa85f59f78302",
	"input_format": "DecompiledCode",
	"ir": "# Palkeoramix decompiler. \n\nconst version = '2.0.0'\n\ndef storage:\n  owner is address at storage 0\n  stor1 is mapping of uint8 at storage 1\n  stor2 is mapping of uint8 at storage 2\n  tokenList is mapping of uint256 at storage 3\n  orderFilled is mapping of uint256 at storage 4\n  stor5 is mapping of uint8 at storage 5\n  withdrawAllowance is mapping of uint256 at storage 6\n  applyList is mapping of uint256 at storage 7\n  latestApply is mapping of uint256 at storage 8\n  canceled is mapping of uint256 at storage 9\n  applyWait is uint256 at storage 10\n  feeRate is uint256 at storage 11\n  withdrawEnabled is uint8 at storage 12\n  stop is uint8 at storage 12 offset 8\n  stor13 is uint256 at storage 13\n  depositToEnabled is uint8 at storage 14\n  transferEnabled is uint8 at storage 14 offset 8\n  changeChannelEnabled is uint8 at storage 14 offset 16\n  stor14 is uint256 at storage 14 offset 16\n  stor14 is uint256 at storage 14 offset 8\n\ndef stop(): # not payable\n  return bool(stop)\n\ndef applyList(address _param1, address _param2, uint256 _param3): # not payable\n  return applyList[_param1][_param2][_param3]\n\ndef withdrawEnabled(): # not payable\n  return bool(withdrawEnabled)\n\ndef tokenList(address _param1, address _param2, uint256 _param3): # not payable\n  return tokenList[_param1][_param2][_param3]\n\ndef withdrawn(bytes32 _param1): # not payable\n  return bool(stor5[_param1])\n\ndef depositToEnabled(): # not payable\n  return bool(depositToEnabled)\n\ndef admins(address _param1): # not payable\n  return bool(stor1[_param1])\n\ndef transferEnabled(): # not payable\n  return bool(transferEnabled)\n\ndef orderFilled(address _param1, bytes32 _param2): # not payable\n  return orderFilled[_param1][_param2]\n\ndef changeChannelEnabled(): # not payable\n  return bool(changeChannelEnabled)\n\ndef owner(): # not payable\n  return owner\n\ndef feeRate(): # not payable\n  return feeRate\n\ndef canceled(address _param1, uint256 _param2): # not payable\n  return canceled[_param1][_param2]\n\ndef latestApply(address _param1, address _param2, uint256 _param3): # not payable\n  return latestApply[_param1][_param2][_param3]\n\ndef feeAccounts(address _param1): # not payable\n  return bool(stor2[_param1])\n\ndef withdrawAllowance(address _param1, address _param2, uint256 _param3): # not payable\n  return withdrawAllowance[_param1][_param2][_param3]\n\ndef balanceOf(address _token, address _owner, uint256 _depth): # not payable\n  return tokenList[address(_token)][address(_owner)][_depth]\n\ndef applyWait(): # not payable\n  return applyWait\n\n#\n#  Regular functions\n#\n\ndef _fallback(?): # not payable, default function\n  revert\n\ndef stopTrade(): # not payable\n  require owner == caller\n  stop = 1\n\ndef changeFeeRate(uint256 rate): # not payable\n  require owner == caller\n  require rate >= 10\n  feeRate = rate\n\ndef enableWithdraw(bool enabled): # not payable\n  require owner == caller\n  withdrawEnabled = uint8(enabled)\n\ndef enableDepositTo(bool enabled): # not payable\n  require owner == caller\n  depositToEnabled = uint8(enabled)\n\ndef enableTransfer(bool _enable): # not payable\n  require owner == caller\n  Mask(248, 0, stor14.field_8) = Mask(248, 0, _enable)\n\ndef enableChangeChannel(bool enabled): # not payable\n  require owner == caller\n  Mask(240, 0, stor14.field_16) = Mask(240, 0, enabled)\n\ndef changeLockTime(uint256 lock): # not payable\n  require owner == caller\n  require lock <= 168 * 24 * 3600\n  applyWait = lock\n\ndef batchTrade(address[13][] addresses, uint256[15][] values, uint8[2][] v, bytes32[2][] r, bytes32[2][] s): # not payable\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef setFeeAccount(address acc, bool asFee): # not payable\n  require owner == caller\n  require acc\n  stor2[address(acc)] = uint8(asFee)\n\ndef setAdmin(address admin, bool isAdmin): # not payable\n  require owner == caller\n  require admin\n  stor1[address(admin)] = uint8(isAdmin)\n\ndef transferOwnership(address newOwner): # not payable\n  require owner == caller\n  require newOwner\n  log OwnershipTransferred(\n        address previousOwner=owner,\n        address newOwner=newOwner)\n  owner = newOwner\n\ndef getOrderHash(address tokenBuy, uint256 amountBuy, address tokenSell, uint256 amountSell, address base, uint256 expires, uint256 nonce, address feeToken, address channelFeeAccount, uint256 channelId): # not payable\n  return sha3(address(this.address), uint64(tokenBuy), amountBuy, tokenSell, amountSell, base, expires, nonce, feeToken, channelFeeAccount, channelId)\n\ndef deposit(uint256 _amount) payable: \n  require call.value + tokenList[0][caller][_amount] >= tokenList[0][caller][_amount]\n  tokenList[0][caller][_amount] += call.value\n  log Deposit(\n        address sender=call.value,\n        address to=call.value + tokenList[0][caller][_amount],\n        uint256 shares=_amount,\n        uint256 amount0=0,\n        uint256 amount1=caller)\n\ndef depositTo(address _holderAddress, uint256 _value) payable: \n  require depositToEnabled\n  require _holderAddress\n  require call.value > 0\n  require call.value + tokenList[0][_holderAddress][_value] >= tokenList[0][_holderAddress][_value]\n  tokenList[0][_holderAddress][_value] += call.value\n  log DepositTo(\n        address token=call.value,\n        address from=call.value + tokenList[0][_holderAddress][_value],\n        address user=_value,\n        uint256 amount=0,\n        uint256 balance=caller,\n        uint256 channelId=_holderAddress)\n\ndef depositToken(address token, uint256 amount, uint256 unlock_date): # not payable\n  require token\n  require amount + tokenList[address(token)][caller][unlock_date] >= tokenList[address(token)][caller][unlock_date]\n  tokenList[address(token)][caller][unlock_date] += amount\n  require ext_code.size(token)\n  call token.transferFrom(address sender, address recipient, uint256 amount) with:\n       gas gas_remaining - 710 wei\n      args caller, address(this.address), amount\n  require ext_call.success\n  require ext_call.return_data[0]\n  log Deposit(\n        address sender=amount,\n        address to=tokenList[address(token)][caller][unlock_date],\n        uint256 shares=unlock_date,\n        uint256 amount0=token,\n        uint256 amount1=caller)\n\ndef withdrawNoLimit(address token, uint256 amount, uint256 channelId): # not payable\n  require withdrawEnabled\n  require amount <= tokenList[address(token)][caller][channelId]\n  require tokenList[address(token)][caller][channelId] >= amount\n  tokenList[address(token)][caller][channelId] -= amount\n  if not token:\n      call caller with:\n         value amount wei\n           gas 2300 * is_zero(value) wei\n      require ext_call.success\n  else:\n      require ext_code.size(token)\n      call token.transfer(address recipient, uint256 amount) with:\n           gas gas_remaining - 710 wei\n          args caller, amount\n      require ext_call.success\n      require ext_call.return_data[0]\n  log Withdraw(\n        address sender=amount,\n        address to=tokenList[address(token)][caller][channelId],\n        uint256 shares=channelId,\n        uint256 amount0=token,\n        uint256 amount1=caller)\n\ndef changeChannel(address token, uint256 amount, uint256 fromChannelId, uint256 toChannelId): # not payable\n  require changeChannelEnabled\n  require amount <= tokenList[address(token)][caller][fromChannelId]\n  require tokenList[address(token)][caller][fromChannelId] >= amount\n  tokenList[address(token)][caller][fromChannelId] -= amount\n  require amount + tokenList[address(token)][caller][toChannelId] >= tokenList[address(token)][caller][toChannelId]\n  tokenList[address(token)][caller][toChannelId] += amount\n  log ChangeChannel(\n        address token=amount,\n        address user=fromChannelId,\n        uint256 amount=toChannelId,\n        uint256 fromChannelId=token,\n        uint256 toChannelId=caller)\n\ndef depositTokenTo(address token, address to, uint256 amount, uint256 channelId): # not payable\n  require depositToEnabled\n  require token\n  require to\n  require amount > 0\n  require amount + tokenList[address(token)][address(to)][channelId] >= tokenList[address(token)][address(to)][channelId]\n  tokenList[address(token)][address(to)][channelId] += amount\n  require ext_code.size(token)\n  call token.transferFrom(address sender, address recipient, uint256 amount) with:\n       gas gas_remaining - 710 wei\n      args caller, address(this.address), amount\n  require ext_call.success\n  require ext_call.return_data[0]\n  log DepositTo(\n        address token=amount,\n        address from=tokenList[address(token)][address(to)][channelId],\n        address user=channelId,\n        uint256 amount=token,\n        uint256 balance=caller,\n        uint256 channelId=to)\n\ndef innerTransfer(address token, address to, uint256 amount, uint256 channelId): # not payable\n  require transferEnabled\n  require to\n  require amount <= tokenList[address(token)][caller][channelId]\n  require tokenList[address(token)][caller][channelId] >= amount\n  tokenList[address(token)][caller][channelId] -= amount\n  require amount + tokenList[address(token)][address(to)][channelId] >= tokenList[address(token)][address(to)][channelId]\n  tokenList[address(token)][address(to)][channelId] += amount\n  log InnerTransfer(\n        address token=amount,\n        address from=tokenList[address(token)][caller][channelId],\n        address to=channelId,\n        uint256 amount=token,\n        uint256 balance=caller,\n        uint256 channelId=to)\n\ndef applyWithdraw(address token, uint256 amount, uint256 channelId): # not payable\n  require amount + applyList[address(token)][caller][channelId] >= applyList[address(token)][caller][channelId]\n  require withdrawAllowance[address(token)][caller][channelId] >= 0\n  require withdrawAllowance[address(token)][caller][channelId] + amount + applyList[address(token)][caller][channelId] <= tokenList[address(token)][caller][channelId]\n  applyList[address(token)][caller][channelId] += amount\n  latestApply[address(token)][caller][channelId] = block.timestamp\n  log ApplyWithdraw(\n        address token=amount,\n        address user=block.timestamp,\n        uint256 amount=channelId,\n        uint256 time=token,\n        uint256 channelId=caller)\n\ndef approveWithdraw(address spender, address yieldToken, uint256 shares): # not payable\n  require stor1[caller]\n  require applyList[address(spender)][address(yieldToken)][shares] + withdrawAllowance[address(spender)][address(yieldToken)][shares] >= withdrawAllowance[address(spender)][address(yieldToken)][shares]\n  withdrawAllowance[address(spender)][address(yieldToken)][shares] += applyList[address(spender)][address(yieldToken)][shares]\n  applyList[address(spender)][address(yieldToken)][shares] = 0\n  latestApply[address(spender)][address(yieldToken)][shares] = 0\n  log ApproveWithdraw(\n        address token=shares,\n        address user=spender,\n        uint256 channelId=yieldToken)\n\ndef batchCancel(address[] users, uint256[] nonces, uint256 channelId): # not payable\n  mem[128 len 32 * users.length] = call.data[users + 36 len 32 * users.length]\n  mem[(32 * users.length) + 128] = nonces.length\n  mem[(32 * users.length) + 160 len 32 * nonces.length] = call.data[nonces + 36 len 32 * nonces.length]\n  require stor1[caller]\n  require users.length == nonces.length\n  idx = 0\n  s = 0\n  while idx < users.length:\n      require idx < users.length\n      require idx < nonces.length\n      require mem[(32 * idx) + (32 * users.length) + 160] >= canceled[mem[(32 * idx) + 140 len 20]][channelId]\n      require idx < nonces.length\n      require idx < users.length\n      mem[0] = channelId\n      mem[32] = sha3(mem[(32 * idx) + 140 len 20], 9)\n      canceled[mem[(32 * idx) + 140 len 20]][channelId] = mem[(32 * idx) + (32 * users.length) + 160]\n      idx = idx + 1\n      s = s + 1\n      continue \n  log BatchCancel(\n        uint256 count=users.length,\n        uint256 channelId=channelId)\n\ndef batchChangeChannel(address[] token, uint256[] amount, uint256 fromChannelId, uint256 toChannelId): # not payable\n  mem[96] = token.length\n  mem[128 len 32 * token.length] = call.data[token + 36 len 32 * token.length]\n  mem[64] = (32 * token.length) + (32 * amount.length) + 160\n  mem[(32 * token.length) + 128] = amount.length\n  mem[(32 * token.length) + 160 len 32 * amount.length] = call.data[amount + 36 len 32 * amount.length]\n  require changeChannelEnabled\n  require token.length == amount.length\n  require amount.length <= 200\n  idx = 0\n  while idx < amount.length:\n      require idx < mem[96]\n      _28 = mem[(32 * idx) + 128]\n      require idx < mem[(32 * token.length) + 128]\n      require changeChannelEnabled\n      require mem[(32 * idx) + (32 * token.length) + 160] <= tokenList[mem[(32 * idx) + 140 len 20]][caller][fromChannelId]\n      require tokenList[address(mem[(32 * idx) + 128])][caller][fromChannelId] >= mem[(32 * idx) + (32 * token.length) + 160]\n      tokenList[address(mem[(32 * idx) + 128])][caller][fromChannelId] -= mem[(32 * idx) + (32 * token.length) + 160]\n      require mem[(32 * idx) + (32 * token.length) + 160] + tokenList[address(mem[(32 * idx) + 128])][caller][toChannelId] >= tokenList[address(mem[(32 * idx) + 128])][caller][toChannelId]\n      mem[0] = toChannelId\n      mem[32] = sha3(caller, sha3(address(mem[(32 * idx) + 128]), 3))\n      tokenList[address(mem[(32 * idx) + 128])][caller][toChannelId] += mem[(32 * idx) + (32 * token.length) + 160]\n      mem[mem[64]] = mem[(32 * idx) + (32 * token.length) + 160]\n      mem[mem[64] + 32] = fromChannelId\n      mem[mem[64] + 64] = toChannelId\n      log ChangeChannel(\n            address token=mem[mem[64]],\n            address user=fromChannelId,\n            uint256 amount=toChannelId,\n            uint256 fromChannelId=address(_28),\n            uint256 toChannelId=caller)\n      idx = idx + 1\n      continue \n\ndef withdraw(address _address, uint256 amount, uint256 _amountHB): # not payable\n  require amount <= tokenList[address(_address)][caller][_amountHB]\n  if amount > withdrawAllowance[address(_address)][caller][_amountHB]:\n      require latestApply[address(_address)][caller][_amountHB]\n      require block.timestamp >= latestApply[address(_address)][caller][_amountHB]\n      require block.timestamp - latestApply[address(_address)][caller][_amountHB] > applyWait\n      require applyList[address(_address)][caller][_amountHB] + withdrawAllowance[address(_address)][caller][_amountHB] >= withdrawAllowance[address(_address)][caller][_amountHB]\n      withdrawAllowance[address(_address)][caller][_amountHB] += applyList[address(_address)][caller][_amountHB]\n      applyList[address(_address)][caller][_amountHB] = 0\n  require amount <= withdrawAllowance[address(_address)][caller][_amountHB]\n  require withdrawAllowance[address(_address)][caller][_amountHB] >= amount\n  withdrawAllowance[address(_address)][caller][_amountHB] -= amount\n  require tokenList[address(_address)][caller][_amountHB] >= amount\n  tokenList[address(_address)][caller][_amountHB] -= amount\n  latestApply[address(_address)][caller][_amountHB] = 0\n  if not _address:\n      call caller with:\n         value amount wei\n           gas 2300 * is_zero(value) wei\n      require ext_call.success\n  else:\n      require ext_code.size(_address)\n      call _address.transfer(address recipient, uint256 amount) with:\n           gas gas_remaining - 710 wei\n          args caller, amount\n      require ext_call.success\n      require ext_call.return_data[0]\n  log Withdraw(\n        address sender=amount,\n        address to=tokenList[address(_address)][caller][_amountHB],\n        uint256 shares=_amountHB,\n        uint256 amount0=_address,\n        uint256 amount1=caller)\n\ndef batchInnerTransfer(address[] token, address[] to, uint256[] amount, uint256 channelId): # not payable\n  mem[96] = token.length\n  mem[128 len 32 * token.length] = call.data[token + 36 len 32 * token.length]\n  mem[(32 * token.length) + 128] = to.length\n  mem[(32 * token.length) + 160 len 32 * to.length] = call.data[to + 36 len 32 * to.length]\n  mem[64] = (32 * token.length) + (32 * to.length) + (32 * amount.length) + 192\n  mem[(32 * token.length) + (32 * to.length) + 160] = amount.length\n  mem[(32 * token.length) + (32 * to.length) + 192 len 32 * amount.length] = call.data[amount + 36 len 32 * amount.length]\n  require transferEnabled\n  require to.length == amount.length\n  require to.length <= 200\n  idx = 0\n  while idx < to.length:\n      require idx < mem[96]\n      _34 = mem[(32 * idx) + 128]\n      require idx < mem[(32 * token.length) + 128]\n      _36 = mem[(32 * idx) + (32 * token.length) + 160]\n      require idx < mem[(32 * token.length) + (32 * to.length) + 160]\n      require transferEnabled\n      require mem[(32 * idx) + (32 * token.length) + 172 len 20]\n      require mem[(32 * idx) + (32 * token.length) + (32 * to.length) + 192] <= tokenList[mem[(32 * idx) + 140 len 20]][caller][channelId]\n      require tokenList[address(mem[(32 * idx) + 128])][caller][channelId] >= mem[(32 * idx) + (32 * token.length) + (32 * to.length) + 192]\n      tokenList[address(mem[(32 * idx) + 128])][caller][channelId] -= mem[(32 * idx) + (32 * token.length) + (32 * to.length) + 192]\n      require mem[(32 * idx) + (32 * token.length) + (32 * to.length) + 192] + tokenList[address(mem[(32 * idx) + 128])][address(mem[(32 * idx) + (32 * token.length) + 160])][channelId] >= tokenList[address(mem[(32 * idx) + 128])][address(mem[(32 * idx) + (32 * token.length) + 160])][channelId]\n      tokenList[address(mem[(32 * idx) + 128])][address(mem[(32 * idx) + (32 * token.length) + 160])][channelId] += mem[(32 * idx) + (32 * token.length) + (32 * to.length) + 192]\n      mem[0] = channelId\n      mem[32] = sha3(caller, sha3(address(mem[(32 * idx) + 128]), 3))\n      _54 = sha3(channelId, sha3(caller, sha3(address(mem[(32 * idx) + 128]), 3)))\n      mem[mem[64]] = mem[(32 * idx) + (32 * token.length) + (32 * to.length) + 192]\n      mem[mem[64] + 32] = stor[_54]\n      mem[mem[64] + 64] = channelId\n      log InnerTransfer(\n            address token=mem[mem[64]],\n            address from=stor[_54],\n            address to=channelId,\n            uint256 amount=address(_34),\n            uint256 balance=caller,\n            uint256 channelId=address(_36))\n      idx = idx + 1\n      continue \n\ndef batchDepositTokenTo(address[] token, address[] to, uint256[] amount, uint256 channelId): # not payable\n  mem[96] = token.length\n  mem[128 len 32 * token.length] = call.data[token + 36 len 32 * token.length]\n  mem[(32 * token.length) + 128] = to.length\n  mem[(32 * token.length) + 160 len 32 * to.length] = call.data[to + 36 len 32 * to.length]\n  mem[64] = (32 * token.length) + (32 * to.length) + (32 * amount.length) + 192\n  mem[(32 * token.length) + (32 * to.length) + 160] = amount.length\n  mem[(32 * token.length) + (32 * to.length) + 192 len 32 * amount.length] = call.data[amount + 36 len 32 * amount.length]\n  require depositToEnabled\n  require to.length == amount.length\n  require to.length <= 200\n  idx = 0\n  while idx < to.length:\n      require idx < mem[96]\n      _32 = mem[(32 * idx) + 128]\n      require idx < mem[(32 * token.length) + 128]\n      _34 = mem[(32 * idx) + (32 * token.length) + 160]\n      require idx < mem[(32 * token.length) + (32 * to.length) + 160]\n      _36 = mem[(32 * idx) + (32 * token.length) + (32 * to.length) + 192]\n      require depositToEnabled\n      require mem[(32 * idx) + 140 len 20]\n      require mem[(32 * idx) + (32 * token.length) + 172 len 20]\n      require mem[(32 * idx) + (32 * token.length) + (32 * to.length) + 192] > 0\n      require mem[(32 * idx) + (32 * token.length) + (32 * to.length) + 192] + tokenList[mem[(32 * idx) + 140 len 20]][address(mem[(32 * idx) + (32 * token.length) + 160])][channelId] >= tokenList[mem[(32 * idx) + 140 len 20]][address(mem[(32 * idx) + (32 * token.length) + 160])][channelId]\n      tokenList[address(mem[(32 * idx) + 128])][address(mem[(32 * idx) + (32 * token.length) + 160])][channelId] = mem[(32 * idx) + (32 * token.length) + (32 * to.length) + 192] + tokenList[mem[(32 * idx) + 140 len 20]][address(mem[(32 * idx) + (32 * token.length) + 160])][channelId]\n      mem[mem[64] + 68] = mem[(32 * idx) + (32 * token.length) + (32 * to.length) + 192]\n      require ext_code.size(address(_32))\n      call address(_32).transferFrom(address sender, address recipient, uint256 amount) with:\n           gas gas_remaining - 710 wei\n          args caller, address(this.address), _36\n      require ext_call.success\n      require ext_call.return_data[0]\n      mem[0] = channelId\n      mem[32] = sha3(address(_34), sha3(address(_32), 3))\n      mem[mem[64]] = _36\n      mem[mem[64] + 32] = tokenList[address(_32)][address(_34)][channelId]\n      mem[mem[64] + 64] = channelId\n      log DepositTo(\n            address token=_36,\n            address from=tokenList[address(_32)][address(_34)][channelId],\n            address user=channelId,\n            uint256 amount=address(_32),\n            uint256 balance=caller,\n            uint256 channelId=address(_34))\n      idx = idx + 1\n      continue \n\ndef refund(address user, address[] tokens, uint256[] channelIds): # not payable\n  mem[96] = tokens.length\n  mem[128 len 32 * tokens.length] = call.data[tokens + 36 len 32 * tokens.length]\n  mem[64] = (32 * tokens.length) + (32 * channelIds.length) + 160\n  mem[(32 * tokens.length) + 128] = channelIds.length\n  mem[(32 * tokens.length) + 160 len 32 * channelIds.length] = call.data[channelIds + 36 len 32 * channelIds.length]\n  mem[0] = caller\n  require stor1[caller]\n  s = 0\n  idx = 0\n  while idx < tokens.length:\n      require idx < mem[96]\n      _35 = mem[(32 * idx) + 128]\n      _62 = mem[(32 * tokens.length) + 128]\n      t = 0\n      t = 0\n      s = 0\n      while s < _62:\n          require s < mem[(32 * tokens.length) + 128]\n          _64 = mem[(32 * s) + (32 * tokens.length) + 160]\n          mem[0] = mem[(32 * s) + (32 * tokens.length) + 160]\n          mem[32] = sha3(address(user), sha3(address(_35), 3))\n          _67 = sha3(mem[(32 * s) + (32 * tokens.length) + 160], sha3(address(user), sha3(address(_35), 3)))\n          if tokenList[address(_35)][address(user)][mem[(32 * s) + (32 * tokens.length) + 160]] <= 0:\n              t = tokenList[address(_35)][address(user)][mem[(32 * s) + (32 * tokens.length) + 160]]\n              t = mem[(32 * s) + (32 * tokens.length) + 160]\n              s = s + 1\n              continue \n          tokenList[address(_35)][address(user)][mem[(32 * s) + (32 * tokens.length) + 160]] = 0\n          if not address(_35):\n              call user with:\n                 value tokenList[address(_35)][address(user)][mem[(32 * s) + (32 * tokens.length) + 160]] wei\n                   gas 2300 * is_zero(value) wei\n              require ext_call.success\n              mem[0] = mem[(32 * s) + (32 * tokens.length) + 160]\n              mem[32] = sha3(address(user), sha3(address(_35), 3))\n              _80 = sha3(mem[(32 * s) + (32 * tokens.length) + 160], sha3(address(user), sha3(address(_35), 3)))\n              mem[mem[64]] = tokenList[address(_35)][address(user)][mem[(32 * s) + (32 * tokens.length) + 160]]\n              mem[mem[64] + 32] = stor[_80]\n              mem[mem[64] + 64] = _64\n              log Withdraw(\n                    address sender=mem[mem[64]],\n                    address to=stor[_80],\n                    uint256 shares=_64,\n                    uint256 amount0=address(_35),\n                    uint256 amount1=user)\n          else:\n              require ext_code.size(address(_35))\n              call address(_35).transfer(address recipient, uint256 amount) with:\n                   gas gas_remaining - 710 wei\n                  args address(user), tokenList[address(_35)][address(user)][mem[(32 * s) + (32 * tokens.length) + 160]]\n              require ext_call.success\n              require ext_call.return_data[0]\n              mem[0] = mem[(32 * s) + (32 * tokens.length) + 160]\n              mem[32] = sha3(address(user), sha3(address(_35), 3))\n              mem[mem[64]] = tokenList[address(_35)][address(user)][mem[(32 * s) + (32 * tokens.length) + 160]]\n              mem[mem[64] + 32] = tokenList[address(_35)][address(user)][_64]\n              mem[mem[64] + 64] = _64\n              log Withdraw(\n                    address sender=stor[_67],\n                    address to=tokenList[address(_35)][address(user)][_64],\n                    uint256 shares=_64,\n                    uint256 amount0=address(_35),\n                    uint256 amount1=user)\n          t = stor[_67]\n          t = _64\n          s = s + 1\n          continue \n      s = _35\n      idx = idx + 1\n      continue \n\ndef adminWithdraw(address[4] addresses, uint256[5] values, uint8 v, bytes32 r, bytes32 s): # not payable\n  require stor1[caller]\n  require stor2[address(call.data[68])]\n  require call.data[132] <= tokenList[address(call.data[36])][address(call.data[4])][call.data[260]]\n  if call.data[196]:\n      require call.data[196]\n      require feeRate * call.data[196] / call.data[196] == feeRate\n  if feeRate * call.data[196] <= call.data[132]:\n      if call.data[228]:\n          require call.data[228]\n          require feeRate * call.data[228] / call.data[228] == feeRate\n      if feeRate * call.data[228] <= call.data[132]:\n          require not stor5[this.address][address(call.data[4])][address(call.data[36])][call.data[132]][call.data[164]][address(call.data[100])][call.data[260]]\n          stor5[this.address][address(call.data[4])][address(call.data[36])][call.data[132]][call.data[164]][address(call.data[100])][call.data[260]] = 1\n          signer = erecover(sha3(Mask(224, 32, '\\x19Ethereum Signed Message:\\n32') >> 32, sha3(this.address, address(call.data[4]), address(call.data[36]), call.data[132], call.data[164], address(call.data[100]), call.data[260])), cd[292] << 248, cd[324], cd[356]) # precompiled\n          require erecover.result\n          require address(signer) == address(call.data[4])\n          require tokenList[address(call.data[36])][address(call.data[4])][call.data[260]] >= call.data[132]\n          tokenList[address(call.data[36])][address(call.data[4])][call.data[260]] -= call.data[132]\n          require call.data[196] + tokenList[address(call.data[36])][address(call.data[68])][stor13] >= tokenList[address(call.data[36])][address(call.data[68])][stor13]\n          tokenList[address(call.data[36])][address(call.data[68])][stor13] += call.data[196]\n          require call.data[228] + tokenList[address(call.data[36])][address(call.data[100])][call.data[260]] >= tokenList[address(call.data[36])][address(call.data[100])][call.data[260]]\n          tokenList[address(call.data[36])][address(call.data[100])][call.data[260]] += call.data[228]\n          require call.data[132] >= call.data[196]\n          require call.data[132] - call.data[196] >= call.data[228]\n          if not address(call.data[36]):\n              call address(call.data[4]) with:\n                 value call.data[132] - call.data[196] - call.data[228] wei\n                   gas 2300 * is_zero(value) wei\n              require ext_call.success\n          else:\n              require ext_code.size(address(call.data[36]))\n              call address(call.data[36]).transfer(address recipient, uint256 amount) with:\n                   gas gas_remaining - 710 wei\n                  args address(call.data[4]), call.data[132] - call.data[196] - call.data[228]\n              require ext_call.success\n              require ext_call.return_data[0]\n          log Withdraw(\n                address sender=call.data[132] - call.data[196] - call.data[228],\n                address to=tokenList[address(call.data[36])][address(call.data[4])][call.data[260]],\n                uint256 shares=call.data[260],\n                uint256 amount0=address(call.data[36]),\n                uint256 amount1=address(call.data[4]))\n      else:\n          require feeRate\n          require not stor5[this.address][address(call.data[4])][address(call.data[36])][call.data[132]][call.data[164]][address(call.data[100])][call.data[260]]\n          stor5[this.address][address(call.data[4])][address(call.data[36])][call.data[132]][call.data[164]][address(call.data[100])][call.data[260]] = 1\n          signer = erecover(sha3(Mask(224, 32, '\\x19Ethereum Signed Message:\\n32') >> 32, sha3(this.address, address(call.data[4]), address(call.data[36]), call.data[132], call.data[164], address(call.data[100]), call.data[260])), cd[292] << 248, cd[324], cd[356]) # precompiled\n          require erecover.result\n          require address(signer) == address(call.data[4])\n          require tokenList[address(call.data[36])][address(call.data[4])][call.data[260]] >= call.data[132]\n          tokenList[address(call.data[36])][address(call.data[4])][call.data[260]] -= call.data[132]\n          require call.data[196] + tokenList[address(call.data[36])][address(call.data[68])][stor13] >= tokenList[address(call.data[36])][address(call.data[68])][stor13]\n          tokenList[address(call.data[36])][address(call.data[68])][stor13] += call.data[196]\n          require (call.data[132] / feeRate) + tokenList[address(call.data[36])][address(call.data[100])][call.data[260]] >= tokenList[address(call.data[36])][address(call.data[100])][call.data[260]]\n          tokenList[address(call.data[36])][address(call.data[100])][call.data[260]] += call.data[132] / feeRate\n          require call.data[132] >= call.data[196]\n          require call.data[132] - call.data[196] >= call.data[132] / feeRate\n          if not address(call.data[36]):\n              call address(call.data[4]) with:\n                 value call.data[132] - call.data[196] - (call.data[132] / feeRate) wei\n                   gas 2300 * is_zero(value) wei\n              require ext_call.success\n          else:\n              require ext_code.size(address(call.data[36]))\n              call address(call.data[36]).transfer(address recipient, uint256 amount) with:\n                   gas gas_remaining - 710 wei\n                  args address(call.data[4]), call.data[132] - call.data[196] - (call.data[132] / feeRate)\n              require ext_call.success\n              require ext_call.return_data[0]\n          log Withdraw(\n                address sender=call.data[132] - call.data[196] - (call.data[132] / feeRate),\n                address to=tokenList[address(call.data[36])][address(call.data[4])][call.data[260]],\n                uint256 shares=call.data[260],\n                uint256 amount0=address(call.data[36]),\n                uint256 amount1=address(call.data[4]))\n  else:\n      require feeRate\n      if call.data[228]:\n          require call.data[228]\n          require feeRate * call.data[228] / call.data[228] == feeRate\n      if feeRate * call.data[228] <= call.data[132]:\n          require not stor5[this.address][address(call.data[4])][address(call.data[36])][call.data[132]][call.data[164]][address(call.data[100])][call.data[260]]\n          stor5[this.address][address(call.data[4])][address(call.data[36])][call.data[132]][call.data[164]][address(call.data[100])][call.data[260]] = 1\n          signer = erecover(sha3(Mask(224, 32, '\\x19Ethereum Signed Message:\\n32') >> 32, sha3(this.address, address(call.data[4]), address(call.data[36]), call.data[132], call.data[164], address(call.data[100]), call.data[260])), cd[292] << 248, cd[324], cd[356]) # precompiled\n          require erecover.result\n          require address(signer) == address(call.data[4])\n          require tokenList[address(call.data[36])][address(call.data[4])][call.data[260]] >= call.data[132]\n          tokenList[address(call.data[36])][address(call.data[4])][call.data[260]] -= call.data[132]\n          require (call.data[132] / feeRate) + tokenList[address(call.data[36])][address(call.data[68])][stor13] >= tokenList[address(call.data[36])][address(call.data[68])][stor13]\n          tokenList[address(call.data[36])][address(call.data[68])][stor13] += call.data[132] / feeRate\n          require call.data[228] + tokenList[address(call.data[36])][address(call.data[100])][call.data[260]] >= tokenList[address(call.data[36])][address(call.data[100])][call.data[260]]\n          tokenList[address(call.data[36])][address(call.data[100])][call.data[260]] += call.data[228]\n          require call.data[132] >= call.data[132] / feeRate\n          require call.data[132] - (call.data[132] / feeRate) >= call.data[228]\n          if not address(call.data[36]):\n              call address(call.data[4]) with:\n                 value call.data[132] - (call.data[132] / feeRate) - call.data[228] wei\n                   gas 2300 * is_zero(value) wei\n              require ext_call.success\n          else:\n              require ext_code.size(address(call.data[36]))\n              call address(call.data[36]).transfer(address recipient, uint256 amount) with:\n                   gas gas_remaining - 710 wei\n                  args address(call.data[4]), call.data[132] - (call.data[132] / feeRate) - call.data[228]\n              require ext_call.success\n              require ext_call.return_data[0]\n          log Withdraw(\n                address sender=call.data[132] - (call.data[132] / feeRate) - call.data[228],\n                address to=tokenList[address(call.data[36])][address(call.data[4])][call.data[260]],\n                uint256 shares=call.data[260],\n                uint256 amount0=address(call.data[36]),\n                uint256 amount1=address(call.data[4]))\n      else:\n          require feeRate\n          require not stor5[this.address][address(call.data[4])][address(call.data[36])][call.data[132]][call.data[164]][address(call.data[100])][call.data[260]]\n          stor5[this.address][address(call.data[4])][address(call.data[36])][call.data[132]][call.data[164]][address(call.data[100])][call.data[260]] = 1\n          signer = erecover(sha3(Mask(224, 32, '\\x19Ethereum Signed Message:\\n32') >> 32, sha3(this.address, address(call.data[4]), address(call.data[36]), call.data[132], call.data[164], address(call.data[100]), call.data[260])), cd[292] << 248, cd[324], cd[356]) # precompiled\n          require erecover.result\n          require address(signer) == address(call.data[4])\n          require tokenList[address(call.data[36])][address(call.data[4])][call.data[260]] >= call.data[132]\n          tokenList[address(call.data[36])][address(call.data[4])][call.data[260]] -= call.data[132]\n          require (call.data[132] / feeRate) + tokenList[address(call.data[36])][address(call.data[68])][stor13] >= tokenList[address(call.data[36])][address(call.data[68])][stor13]\n          tokenList[address(call.data[36])][address(call.data[68])][stor13] += call.data[132] / feeRate\n          require (call.data[132] / feeRate) + tokenList[address(call.data[36])][address(call.data[100])][call.data[260]] >= tokenList[address(call.data[36])][address(call.data[100])][call.data[260]]\n          tokenList[address(call.data[36])][address(call.data[100])][call.data[260]] += call.data[132] / feeRate\n          require call.data[132] >= call.data[132] / feeRate\n          require call.data[132] - (call.data[132] / feeRate) >= call.data[132] / feeRate\n          if not address(call.data[36]):\n              call address(call.data[4]) with:\n                 value call.data[132] - (2 * call.data[132] / feeRate) wei\n                   gas 2300 * is_zero(value) wei\n              require ext_call.success\n          else:\n              require ext_code.size(address(call.data[36]))\n              call address(call.data[36]).transfer(address recipient, uint256 amount) with:\n                   gas gas_remaining - 710 wei\n                  args address(call.data[4]), call.data[132] - (2 * call.data[132] / feeRate)\n              require ext_call.success\n              require ext_call.return_data[0]\n          log Withdraw(\n                address sender=call.data[132] - (2 * call.data[132] / feeRate),\n                address to=tokenList[address(call.data[36])][address(call.data[4])][call.data[260]],\n                uint256 shares=call.data[260],\n                uint256 amount0=address(call.data[36]),\n                uint256 amount1=address(call.data[4]))\n\ndef trade(address[13] addresses, uint256[15] values, uint8[2] v, bytes32[2] r, bytes32[2] s): # not payable\n  require stor1[caller]\n  require stor2[address(call.data[324])]\n  require not stop\n  require call.data[612] >= block.number\n  require call.data[644] >= block.number\n  require call.data[676] >= canceled[address(call.data[132])][call.data[836]]\n  require call.data[708] >= canceled[address(call.data[164])][call.data[868]]\n  require address(call.data[196]) == uint64(call.data[228]) << 96\n  require address(call.data[4]) == uint64(call.data[100]) << 96\n  require address(call.data[68]) == uint64(call.data[36]) << 96\n  if uint64(call.data[228]) << 96 == address(call.data[36]):\n      signer = erecover(sha3(Mask(224, 32, '\\x19Ethereum Signed Message:\\n32') >> 32, sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])), call.data[900] << 248, call.data[964], call.data[1028]) # precompiled\n      require erecover.result\n      require address(signer) == address(call.data[132])\n      signer = erecover(sha3(Mask(224, 32, '\\x19Ethereum Signed Message:\\n32') >> 32, sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])), call.data[932] << 248, call.data[996], call.data[1060]) # precompiled\n      require erecover.result\n      require address(signer) == address(call.data[164])\n      if not call.data[420]:\n          if not call.data[484]:\n              require call.data[516] * call.data[484] >= call.data[452] * call.data[420]\n              if uint64(call.data[228]) << 96 != address(call.data[36]):\n                  require call.data[452] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  require call.data[484] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[740] > 0\n                  require call.data[740] <= call.data[484] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[740] <= call.data[452] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  if not call.data[420]:\n                      require call.data[484]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n                      require call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n                      require (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                          if call.data[772] + call.data[548] >= call.data[548]:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      else:\n                                          if feeRate:\n                                              if (call.data[740] * call.data[420] / call.data[484] / feeRate) + call.data[548] >= call.data[548]:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      if call.data[772]:\n                                          if feeRate * call.data[772] / call.data[772] == feeRate:\n                                              if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                              if feeRate:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if feeRate:\n                                      if not call.data[772]:\n                                          if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                              require call.data[772] + (call.data[740] * call.data[420] / call.data[484] / feeRate) >= call.data[740] * call.data[420] / call.data[484] / feeRate\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require feeRate\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if call.data[772]:\n                                          if feeRate * call.data[772] / call.data[772] == feeRate:\n                                              if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                              if feeRate:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require call.data[548]\n                          require feeRate * call.data[548] / call.data[548] == feeRate\n                          if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                              if not call.data[772]:\n                                  if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require call.data[772]\n                              require feeRate * call.data[772] / call.data[772] == feeRate\n                              if feeRate * call.data[772] > call.data[740] * call.data[420] / call.data[484]:\n                          else:\n                              require feeRate\n                              if not call.data[772]:\n                                  if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require call.data[772]\n                              require feeRate * call.data[772] / call.data[772] == feeRate\n                      else:\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n                  else:\n                      require call.data[420]\n                      require call.data[740] * call.data[420] / call.data[420] == call.data[740]\n                      require call.data[484]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n                      require call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n                      require (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  if feeRate * call.data[772] > call.data[740] * call.data[420] / call.data[484]:\n                              else:\n                                  require feeRate\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                          else:\n                              require call.data[548]\n                              require feeRate * call.data[548] / call.data[548] == feeRate\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] > call.data[740] * call.data[420] / call.data[484]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                                  require call.data[772]\n                      else:\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n              else:\n                  require call.data[420] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[516] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  require call.data[740] > 0\n                  require call.data[740] <= call.data[420] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[740] <= call.data[516] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  if not call.data[484]:\n                      require call.data[420]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n                      require (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n                      require call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740]:\n                                          if call.data[772] + call.data[548] >= call.data[548]:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      else:\n                                          if feeRate:\n                                              if (call.data[740] / feeRate) + call.data[548] >= call.data[548]:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      if call.data[772]:\n                                          if feeRate * call.data[772] / call.data[772] == feeRate:\n                                              if feeRate * call.data[772] <= call.data[740]:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                              if feeRate:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if feeRate:\n                                      if not call.data[772]:\n                                          if feeRate * call.data[772] <= call.data[740]:\n                                              require call.data[772] + (call.data[740] / feeRate) >= call.data[740] / feeRate\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require feeRate\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if call.data[772]:\n                                          if feeRate * call.data[772] / call.data[772] == feeRate:\n                                              if feeRate * call.data[772] <= call.data[740]:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                              if feeRate:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require call.data[548]\n                          require feeRate * call.data[548] / call.data[548] == feeRate\n                          if feeRate * call.data[548] <= call.data[740]:\n                              if not call.data[772]:\n                                  if feeRate * call.data[772] <= call.data[740]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require call.data[772]\n                              require feeRate * call.data[772] / call.data[772] == feeRate\n                              if feeRate * call.data[772] > call.data[740]:\n                          else:\n                              require feeRate\n                              if not call.data[772]:\n                                  if feeRate * call.data[772] <= call.data[740]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require call.data[772]\n                              require feeRate * call.data[772] / call.data[772] == feeRate\n                      else:\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n                  else:\n                      require call.data[484]\n                      require call.data[740] * call.data[484] / call.data[484] == call.data[740]\n                      require call.data[420]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n                      require (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n                      require call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  if feeRate * call.data[772] > call.data[740]:\n                              else:\n                                  require feeRate\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                          else:\n                              require call.data[548]\n                              require feeRate * call.data[548] / call.data[548] == feeRate\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] > call.data[740]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                                  require call.data[772]\n                      else:\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n          else:\n              require call.data[484]\n              require call.data[516] * call.data[484] / call.data[484] == call.data[516]\n              require call.data[516] * call.data[484] >= call.data[452] * call.data[420]\n              if uint64(call.data[228]) << 96 != address(call.data[36]):\n                  require call.data[452] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  require call.data[484] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[740] > 0\n                  require call.data[740] <= call.data[484] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[740] <= call.data[452] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  if not call.data[420]:\n                      require call.data[484]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n                      require call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n                      require (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  if feeRate * call.data[772] > call.data[740] * call.data[420] / call.data[484]:\n                              else:\n                                  require feeRate\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                          else:\n                              require call.data[548]\n                              require feeRate * call.data[548] / call.data[548] == feeRate\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] > call.data[740] * call.data[420] / call.data[484]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                                  require call.data[772]\n                      else:\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n                  else:\n                      require call.data[420]\n                      require call.data[740] * call.data[420] / call.data[420] == call.data[740]\n                      require call.data[484]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n                      require call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n                      require (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] > call.data[740] * call.data[420] / call.data[484]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                                  require call.data[772]\n                          else:\n                              require call.data[548]\n                              require feeRate * call.data[548] / call.data[548] == feeRate\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                      else:\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n              else:\n                  require call.data[420] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[516] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  require call.data[740] > 0\n                  require call.data[740] <= call.data[420] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[740] <= call.data[516] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  if not call.data[484]:\n                      require call.data[420]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n                      require (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n                      require call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  if feeRate * call.data[772] > call.data[740]:\n                              else:\n                                  require feeRate\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                          else:\n                              require call.data[548]\n                              require feeRate * call.data[548] / call.data[548] == feeRate\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] > call.data[740]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                                  require call.data[772]\n                      else:\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n                  else:\n                      require call.data[484]\n                      require call.data[740] * call.data[484] / call.data[484] == call.data[740]\n                      require call.data[420]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n                      require (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n                      require call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] > call.data[740]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                                  require call.data[772]\n                          else:\n                              require call.data[548]\n                              require feeRate * call.data[548] / call.data[548] == feeRate\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                      else:\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n      else:\n          require call.data[420]\n          require call.data[452] * call.data[420] / call.data[420] == call.data[452]\n          if not call.data[484]:\n              require call.data[516] * call.data[484] >= call.data[452] * call.data[420]\n              if uint64(call.data[228]) << 96 != address(call.data[36]):\n                  require call.data[452] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  require call.data[484] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[740] > 0\n                  require call.data[740] <= call.data[484] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[740] <= call.data[452] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  if not call.data[420]:\n                      require call.data[484]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n                      require call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n                      require (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  if feeRate * call.data[772] > call.data[740] * call.data[420] / call.data[484]:\n                              else:\n                                  require feeRate\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                          else:\n                              require call.data[548]\n                              require feeRate * call.data[548] / call.data[548] == feeRate\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] > call.data[740] * call.data[420] / call.data[484]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                                  require call.data[772]\n                      else:\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n                  else:\n                      require call.data[420]\n                      require call.data[740] * call.data[420] / call.data[420] == call.data[740]\n                      require call.data[484]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n                      require call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n                      require (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] > call.data[740] * call.data[420] / call.data[484]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                                  require call.data[772]\n                          else:\n                              require call.data[548]\n                              require feeRate * call.data[548] / call.data[548] == feeRate\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                      else:\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n              else:\n                  require call.data[420] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[516] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  require call.data[740] > 0\n                  require call.data[740] <= call.data[420] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[740] <= call.data[516] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  if not call.data[484]:\n                      require call.data[420]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n                      require (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n                      require call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  if feeRate * call.data[772] > call.data[740]:\n                              else:\n                                  require feeRate\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                          else:\n                              require call.data[548]\n                              require feeRate * call.data[548] / call.data[548] == feeRate\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] > call.data[740]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                                  require call.data[772]\n                      else:\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n                  else:\n                      require call.data[484]\n                      require call.data[740] * call.data[484] / call.data[484] == call.data[740]\n                      require call.data[420]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n                      require (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n                      require call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] > call.data[740]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                                  require call.data[772]\n                          else:\n                              require call.data[548]\n                              require feeRate * call.data[548] / call.data[548] == feeRate\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                      else:\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n          else:\n              require call.data[484]\n              require call.data[516] * call.data[484] / call.data[484] == call.data[516]\n              require call.data[516] * call.data[484] >= call.data[452] * call.data[420]\n              if uint64(call.data[228]) << 96 != address(call.data[36]):\n                  require call.data[452] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  require call.data[484] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[740] > 0\n                  require call.data[740] <= call.data[484] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[740] <= call.data[452] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  if not call.data[420]:\n                      require call.data[484]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n                      require call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n                      require (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] > call.data[740] * call.data[420] / call.data[484]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                                  require call.data[772]\n                          else:\n                              require call.data[548]\n                              require feeRate * call.data[548] / call.data[548] == feeRate\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                      else:\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n                  else:\n                      require call.data[420]\n                      require call.data[740] * call.data[420] / call.data[420] == call.data[740]\n                      require call.data[484]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n                      require call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n                      require (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.data[548]\n                          require feeRate * call.data[548] / call.data[548] == feeRate\n                          if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require feeRate\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require call.data[772] + call.data[548] >= call.data[548]\n                      require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                      require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                      tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                      require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                      tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n              else:\n                  require call.data[420] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[516] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  require call.data[740] > 0\n                  require call.data[740] <= call.data[420] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[740] <= call.data[516] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  if not call.data[484]:\n                      require call.data[420]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n                      require (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n                      require call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] > call.data[740]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                                  require call.data[772]\n                          else:\n                              require call.data[548]\n                              require feeRate * call.data[548] / call.data[548] == feeRate\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                      else:\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n                  else:\n                      require call.data[484]\n                      require call.data[740] * call.data[484] / call.data[484] == call.data[740]\n                      require call.data[420]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n                      require (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n                      require call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if call.data[772]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.data[548]\n                          require feeRate * call.data[548] / call.data[548] == feeRate\n                          if feeRate * call.data[548] <= call.data[740]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require feeRate\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require call.data[772] + call.data[548] >= call.data[548]\n                      require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                      require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                      tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                      require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                      tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n  else:\n      require uint64(call.data[228]) << 96 == address(call.data[100])\n      signer = erecover(sha3(Mask(224, 32, '\\x19Ethereum Signed Message:\\n32') >> 32, sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])), call.data[900] << 248, call.data[964], call.data[1028]) # precompiled\n      require erecover.result\n      require address(signer) == address(call.data[132])\n      signer = erecover(sha3(Mask(224, 32, '\\x19Ethereum Signed Message:\\n32') >> 32, sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])), call.data[932] << 248, call.data[996], call.data[1060]) # precompiled\n      require erecover.result\n      require address(signer) == address(call.data[164])\n      if not call.data[420]:\n          if not call.data[484]:\n              require call.data[516] * call.data[484] >= call.data[452] * call.data[420]\n              if uint64(call.data[228]) << 96 != address(call.data[36]):\n                  require call.data[452] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  require call.data[484] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[740] > 0\n                  require call.data[740] <= call.data[484] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[740] <= call.data[452] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  if not call.data[420]:\n                      require call.data[484]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n                      require call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n                      require (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                          require call.data[772] + call.data[548] >= call.data[548]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if not call.data[772]:\n                                  if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require call.data[772]\n                              require feeRate * call.data[772] / call.data[772] == feeRate\n                              if feeRate * call.data[772] > call.data[740] * call.data[420] / call.data[484]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.data[548]\n                          require feeRate * call.data[548] / call.data[548] == feeRate\n                          if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                              if not call.data[772]:\n                                  if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require call.data[772]\n                              require feeRate * call.data[772] / call.data[772] == feeRate\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require feeRate\n                          if not call.data[772]:\n                              if feeRate * call.data[772] > call.data[740] * call.data[420] / call.data[484]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.data[772]\n                          require feeRate * call.data[772] / call.data[772] == feeRate\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      require call.data[420]\n                      require call.data[740] * call.data[420] / call.data[420] == call.data[740]\n                      require call.data[484]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n                      require call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n                      require (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if feeRate:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] > call.data[740] * call.data[420] / call.data[484]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if call.data[772]:\n                                      if feeRate * call.data[772] / call.data[772] == feeRate:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if call.data[548]:\n                                  if feeRate * call.data[548] / call.data[548] == feeRate:\n                                      if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                          if call.data[772]:\n                                              require call.data[772]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if feeRate:\n                                          if not call.data[772]:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          if call.data[772]:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          revert\n              else:\n                  require call.data[420] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[516] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  require call.data[740] > 0\n                  require call.data[740] <= call.data[420] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                  require call.data[740] <= call.data[516] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                  if not call.data[484]:\n                      require call.data[420]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n                      require (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n                      require call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740]:\n                                          require call.data[772] + call.data[548] >= call.data[548]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  if feeRate * call.data[772] <= call.data[740]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require feeRate\n                              if not call.data[772]:\n                                  if feeRate * call.data[772] <= call.data[740]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require call.data[772]\n                              require feeRate * call.data[772] / call.data[772] == feeRate\n                              if feeRate * call.data[772] > call.data[740]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.data[548]\n                          require feeRate * call.data[548] / call.data[548] == feeRate\n                          if feeRate * call.data[548] <= call.data[740]:\n                              if not call.data[772]:\n                                  if feeRate * call.data[772] <= call.data[740]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require call.data[772]\n                              require feeRate * call.data[772] / call.data[772] == feeRate\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require feeRate\n                          if not call.data[772]:\n                              if feeRate * call.data[772] > call.data[740]:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.data[772]\n                          require feeRate * call.data[772] / call.data[772] == feeRate\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      require call.data[484]\n                      require call.data[740] * call.data[484] / call.data[484] == call.data[740]\n                      require call.data[420]\n                      require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                      require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                      require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]\n                      tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n                      require (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                      tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n                      require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]\n                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n                      require call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                      tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n                      if not address(call.data[260]):\n                          if not call.data[548]:\n                              if feeRate * call.data[548] <= call.data[740]:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] <= call.data[740]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.data[772]\n                                  require feeRate * call.data[772] / call.data[772] == feeRate\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if feeRate:\n                                  if not call.data[772]:\n                                      if feeRate * call.data[772] > call.data[740]:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if call.data[772]:\n                                      if feeRate * call.data[772] / call.data[772] == feeRate:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if call.data[548]:\n                                  if feeRate * call.data[548] / call.data[548] == feeRate:\n                                      if feeRate * call.data[548] <= call.data[740]:\n                                          if call.data[772]:\n                                              require call.data[772]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if feeRate:\n                                          if not call.data[772]:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          if call.data[772]:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          revert\n              ('bool', ('mask_shl', 160, 0, 0, ('call.data', 260, 32)))\n              require call.data[772] + call.data[548] >= call.data[548]\n              require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n              require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n              tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n              require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n              tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n              require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n              tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          require call.data[484]\n          require call.data[516] * call.data[484] / call.data[484] == call.data[516]\n          require call.data[516] * call.data[484] >= call.data[452] * call.data[420]\n          if uint64(call.data[228]) << 96 != address(call.data[36]):\n              if call.data[452] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]:\n                  if call.data[484] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]:\n                      require call.data[740] > 0\n                      require call.data[740] <= call.data[484] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      require call.data[740] <= call.data[452] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      if not call.data[420]:\n                          require call.data[484]\n                          require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                          orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                          require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                          orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                          require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]\n                          tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n                          require call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                          tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n                          require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]\n                          tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n                          require (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                          tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n                          if not address(call.data[260]):\n                              if not call.data[548]:\n                                  if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                      if not call.data[772]:\n                                          if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require feeRate\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require call.data[772]\n                                      require feeRate * call.data[772] / call.data[772] == feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if feeRate:\n                                      if not call.data[772]:\n                                          if feeRate * call.data[772] > call.data[740] * call.data[420] / call.data[484]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if call.data[772]:\n                                          if feeRate * call.data[772] / call.data[772] == feeRate:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if call.data[548]:\n                                      if feeRate * call.data[548] / call.data[548] == feeRate:\n                                          if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                              if call.data[772]:\n                                                  require call.data[772]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          if feeRate:\n                                              if not call.data[772]:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                              if call.data[772]:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if call.data[420]:\n                          if call.data[740] * call.data[420] / call.data[420] == call.data[740]:\n                              if call.data[484]:\n                                  if call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]:\n                                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                                      if call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]:\n                                          orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                                          if tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]:\n                                              tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n                                              if call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]:\n                                                  tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n                                                  if tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]:\n                                                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n                                                      if (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]:\n                                                          tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n                                                          if not address(call.data[260]):\n                                                              if not call.data[548]:\n                                                                  if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                                                      if call.data[772]:\n                                                                          require call.data[772]\n                                                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                                  require feeRate\n                                                                  if not call.data[772]:\n                                                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                                  require call.data[772]\n                                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                              require call.data[548]\n                                                              require feeRate * call.data[548] / call.data[548] == feeRate\n                                                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                                                  if call.data[772]:\n                                                              else:\n                                                                  require feeRate\n                                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                          if call.data[772] + call.data[548] >= call.data[548]:\n                                                              require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                                                              if call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]:\n                                                                  tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                                                                  if call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]:\n                                                                      tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                                                                      if tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]:\n                                                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          else:\n              if call.data[420] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]:\n                  if call.data[516] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]:\n                      require call.data[740] > 0\n                      require call.data[740] <= call.data[420] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      require call.data[740] <= call.data[516] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      if not call.data[484]:\n                          require call.data[420]\n                          require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                          orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                          require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                          orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                          require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]\n                          tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n                          require (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                          tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n                          require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]\n                          tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n                          require call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                          tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n                          if not address(call.data[260]):\n                              if not call.data[548]:\n                                  if feeRate * call.data[548] <= call.data[740]:\n                                      if not call.data[772]:\n                                          if feeRate * call.data[772] <= call.data[740]:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require feeRate\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require call.data[772]\n                                      require feeRate * call.data[772] / call.data[772] == feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if feeRate:\n                                      if not call.data[772]:\n                                          if feeRate * call.data[772] > call.data[740]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if call.data[772]:\n                                          if feeRate * call.data[772] / call.data[772] == feeRate:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if call.data[548]:\n                                      if feeRate * call.data[548] / call.data[548] == feeRate:\n                                          if feeRate * call.data[548] <= call.data[740]:\n                                              if call.data[772]:\n                                                  require call.data[772]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          if feeRate:\n                                              if not call.data[772]:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                              if call.data[772]:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if call.data[484]:\n                          if call.data[740] * call.data[484] / call.data[484] == call.data[740]:\n                              if call.data[420]:\n                                  if call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]:\n                                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                                      if call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]:\n                                          orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                                          if tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]:\n                                              tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n                                              if (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]:\n                                                  tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n                                                  if tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]:\n                                                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n                                                      if call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]:\n                                                          tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n                                                          if not address(call.data[260]):\n                                                              if not call.data[548]:\n                                                                  if feeRate * call.data[548] <= call.data[740]:\n                                                                      if call.data[772]:\n                                                                          require call.data[772]\n                                                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                                  require feeRate\n                                                                  if not call.data[772]:\n                                                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                                  require call.data[772]\n                                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                              require call.data[548]\n                                                              require feeRate * call.data[548] / call.data[548] == feeRate\n                                                              if feeRate * call.data[548] <= call.data[740]:\n                                                                  if call.data[772]:\n                                                              else:\n                                                                  require feeRate\n                                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                          if call.data[772] + call.data[548] >= call.data[548]:\n                                                              require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                                                              if call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]:\n                                                                  tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                                                                  if call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]:\n                                                                      tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                                                                      if tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]:\n                                                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          revert\n      require call.data[420]\n      require call.data[452] * call.data[420] / call.data[420] == call.data[452]\n      if not call.data[484]:\n          require call.data[516] * call.data[484] >= call.data[452] * call.data[420]\n          if uint64(call.data[228]) << 96 != address(call.data[36]):\n              if call.data[452] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]:\n                  if call.data[484] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]:\n                      require call.data[740] > 0\n                      require call.data[740] <= call.data[484] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      require call.data[740] <= call.data[452] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      if not call.data[420]:\n                          require call.data[484]\n                          require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                          orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                          require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                          orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                          require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]\n                          tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n                          require call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                          tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n                          require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]\n                          tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n                          require (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                          tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n                          if not address(call.data[260]):\n                              if not call.data[548]:\n                                  if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                      if not call.data[772]:\n                                          if feeRate * call.data[772] <= call.data[740] * call.data[420] / call.data[484]:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require feeRate\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require call.data[772]\n                                      require feeRate * call.data[772] / call.data[772] == feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if feeRate:\n                                      if not call.data[772]:\n                                          if feeRate * call.data[772] > call.data[740] * call.data[420] / call.data[484]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if call.data[772]:\n                                          if feeRate * call.data[772] / call.data[772] == feeRate:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if call.data[548]:\n                                      if feeRate * call.data[548] / call.data[548] == feeRate:\n                                          if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                              if call.data[772]:\n                                                  require call.data[772]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          if feeRate:\n                                              if not call.data[772]:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                              if call.data[772]:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if call.data[420]:\n                          if call.data[740] * call.data[420] / call.data[420] == call.data[740]:\n                              if call.data[484]:\n                                  if call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]:\n                                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                                      if call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]:\n                                          orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                                          if tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]:\n                                              tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n                                              if call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]:\n                                                  tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n                                                  if tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]:\n                                                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n                                                      if (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]:\n                                                          tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n                                                          if not address(call.data[260]):\n                                                              if not call.data[548]:\n                                                                  if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                                                      if call.data[772]:\n                                                                          require call.data[772]\n                                                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                                  require feeRate\n                                                                  if not call.data[772]:\n                                                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                                  require call.data[772]\n                                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                              require call.data[548]\n                                                              require feeRate * call.data[548] / call.data[548] == feeRate\n                                                              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                                                                  if call.data[772]:\n                                                              else:\n                                                                  require feeRate\n                                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                          if call.data[772] + call.data[548] >= call.data[548]:\n                                                              require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                                                              if call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]:\n                                                                  tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                                                                  if call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]:\n                                                                      tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                                                                      if tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]:\n                                                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          else:\n              if call.data[420] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]:\n                  if call.data[516] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]:\n                      require call.data[740] > 0\n                      require call.data[740] <= call.data[420] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                      require call.data[740] <= call.data[516] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                      if not call.data[484]:\n                          require call.data[420]\n                          require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n                          orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                          require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n                          orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                          require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]\n                          tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n                          require (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n                          tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n                          require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]\n                          tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n                          require call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n                          tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n                          if not address(call.data[260]):\n                              if not call.data[548]:\n                                  if feeRate * call.data[548] <= call.data[740]:\n                                      if not call.data[772]:\n                                          if feeRate * call.data[772] <= call.data[740]:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require feeRate\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require call.data[772]\n                                      require feeRate * call.data[772] / call.data[772] == feeRate\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if feeRate:\n                                      if not call.data[772]:\n                                          if feeRate * call.data[772] > call.data[740]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if call.data[772]:\n                                          if feeRate * call.data[772] / call.data[772] == feeRate:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if call.data[548]:\n                                      if feeRate * call.data[548] / call.data[548] == feeRate:\n                                          if feeRate * call.data[548] <= call.data[740]:\n                                              if call.data[772]:\n                                                  require call.data[772]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          if feeRate:\n                                              if not call.data[772]:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                              if call.data[772]:\n                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              revert\n                          require call.data[772] + call.data[548] >= call.data[548]\n                          require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                          require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n                          tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                          require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n                          tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                          require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n                          tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] = tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] - call.data[772] - call.data[548]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if call.data[484]:\n                          if call.data[740] * call.data[484] / call.data[484] == call.data[740]:\n                              if call.data[420]:\n                                  if call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]:\n                                      orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n                                      if call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]:\n                                          orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n                                          if tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]:\n                                              tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n                                              if (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]:\n                                                  tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n                                                  if tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]:\n                                                      tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n                                                      if call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]:\n                                                          tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n                                                          if not address(call.data[260]):\n                                                              if not call.data[548]:\n                                                                  if feeRate * call.data[548] <= call.data[740]:\n                                                                      if call.data[772]:\n                                                                          require call.data[772]\n                                                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                                  require feeRate\n                                                                  if not call.data[772]:\n                                                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                                  require call.data[772]\n                                                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                              require call.data[548]\n                                                              require feeRate * call.data[548] / call.data[548] == feeRate\n                                                              if feeRate * call.data[548] <= call.data[740]:\n                                                                  if call.data[772]:\n                                                              else:\n                                                                  require feeRate\n                                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                          if call.data[772] + call.data[548] >= call.data[548]:\n                                                              require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n                                                              if call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]:\n                                                                  tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n                                                                  if call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]:\n                                                                      tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n                                                                      if tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]:\n                                                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          revert\n      require call.data[484]\n      require call.data[516] * call.data[484] / call.data[484] == call.data[516]\n      require call.data[516] * call.data[484] >= call.data[452] * call.data[420]\n      if uint64(call.data[228]) << 96 != address(call.data[36]):\n          require call.data[452] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n          require call.data[484] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n          require call.data[740] > 0\n          require call.data[740] <= call.data[484] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n          require call.data[740] <= call.data[452] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n          if not call.data[420]:\n              require call.data[484]\n              require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n              orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n              require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n              orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n              require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]\n              tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n              require call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n              tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n              require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]\n              tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n              require (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n              tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n              if not address(call.data[260]):\n                  if not call.data[548]:\n                      if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                          if call.data[772]:\n                              require call.data[772]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require feeRate\n                      if not call.data[772]:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require call.data[772]\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require call.data[548]\n                  require feeRate * call.data[548] / call.data[548] == feeRate\n                  if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                      if call.data[772]:\n                  else:\n                      require feeRate\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require call.data[772] + call.data[548] >= call.data[548]\n              require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n              require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n              tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n              require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n              tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n              require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          require call.data[420]\n          require call.data[740] * call.data[420] / call.data[420] == call.data[740]\n          require call.data[484]\n          require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n          orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n          require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n          orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n          require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740] * call.data[420] / call.data[484]\n          tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740] * call.data[420] / call.data[484]\n          require call.data[740] + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n          tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740]\n          require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740]\n          tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740]\n          require (call.data[740] * call.data[420] / call.data[484]) + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n          tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740] * call.data[420] / call.data[484]\n          if not address(call.data[260]):\n              if not call.data[548]:\n                  if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                      if call.data[772]:\n                  else:\n                      require feeRate\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require call.data[548]\n              require feeRate * call.data[548] / call.data[548] == feeRate\n              if feeRate * call.data[548] <= call.data[740] * call.data[420] / call.data[484]:\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require feeRate\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n      else:\n          require call.data[420] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n          require call.data[516] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n          require call.data[740] > 0\n          require call.data[740] <= call.data[420] - orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n          require call.data[740] <= call.data[516] - orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n          if not call.data[484]:\n              require call.data[420]\n              require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n              orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n              require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n              orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n              require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]\n              tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n              require (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n              tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n              require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]\n              tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n              require call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n              tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n              if not address(call.data[260]):\n                  if not call.data[548]:\n                      if feeRate * call.data[548] <= call.data[740]:\n                          if call.data[772]:\n                              require call.data[772]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require feeRate\n                      if not call.data[772]:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require call.data[772]\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require call.data[548]\n                  require feeRate * call.data[548] / call.data[548] == feeRate\n                  if feeRate * call.data[548] <= call.data[740]:\n                      if call.data[772]:\n                  else:\n                      require feeRate\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require call.data[772] + call.data[548] >= call.data[548]\n              require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n              require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n              tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n              require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n              tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n              require tokenList[address(call.data[260])][address(call.data[132])][call.data[836]] >= call.data[772] + call.data[548]\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          require call.data[484]\n          require call.data[740] * call.data[484] / call.data[484] == call.data[740]\n          require call.data[420]\n          require call.data[740] + orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] >= orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])]\n          orderFilled[address(call.data[164])][sha3(this.address, address(call.data[36]), call.data[452], address(call.data[100]), call.data[516], address(call.data[228]), call.data[644], call.data[708], address(call.data[292]), address(call.data[388]), call.data[868])] += call.data[740]\n          require call.data[740] + orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] >= orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])]\n          orderFilled[address(call.data[132])][sha3(this.address, address(call.data[4]), call.data[420], address(call.data[68]), call.data[484], address(call.data[196]), call.data[612], call.data[676], address(call.data[260]), address(call.data[356]), call.data[836])] += call.data[740]\n          require tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] >= call.data[740]\n          tokenList[address(call.data[100])][address(call.data[164])][call.data[868]] -= call.data[740]\n          require (call.data[740] * call.data[484] / call.data[420]) + tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] >= tokenList[address(call.data[36])][address(call.data[164])][call.data[868]]\n          tokenList[address(call.data[36])][address(call.data[164])][call.data[868]] += call.data[740] * call.data[484] / call.data[420]\n          require tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] >= call.data[740] * call.data[484] / call.data[420]\n          tokenList[address(call.data[68])][address(call.data[132])][call.data[836]] -= call.data[740] * call.data[484] / call.data[420]\n          require call.data[740] + tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] >= tokenList[address(call.data[4])][address(call.data[132])][call.data[836]]\n          tokenList[address(call.data[4])][address(call.data[132])][call.data[836]] += call.data[740]\n          if not address(call.data[260]):\n              if not call.data[548]:\n                  if feeRate * call.data[548] <= call.data[740]:\n                      if call.data[772]:\n                  else:\n                      require feeRate\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require call.data[548]\n              require feeRate * call.data[548] / call.data[548] == feeRate\n              if feeRate * call.data[548] <= call.data[740]:\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require feeRate\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n      ('bool', ('mask_shl', 160, 0, 0, ('call.data', 260, 32)))\n      require call.data[772] + call.data[548] >= call.data[548]\n      require call.data[772] + call.data[548] <= tokenList[address(call.data[260])][address(call.data[132])][call.data[836]]\n      require call.data[548] + tokenList[address(call.data[260])][address(call.data[324])][stor13] >= tokenList[address(call.data[260])][address(call.data[324])][stor13]\n      tokenList[address(call.data[260])][address(call.data[324])][stor13] += call.data[548]\n      require call.data[772] + tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] >= tokenList[address(call.data[260])][address(call.data[356])][call.data[836]]\n      tokenList[address(call.data[260])][address(call.data[356])][call.data[836]] += call.data[772]\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n",
	"language": "Solidity",
	"status": "This model's maximum context length is 32768 tokens. However, your messages resulted in 62360 tokens. Please reduce the length of the messages."
}