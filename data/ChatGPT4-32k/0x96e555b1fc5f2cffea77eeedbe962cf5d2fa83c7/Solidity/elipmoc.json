{
	"address": "0x96e555b1fc5f2cffea77eeedbe962cf5d2fa83c7",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here's the equivalent solidity contract code:\n\n```solidity\npragma solidity ^0.8.2;\n\ncontract Game {\n    uint256 private _contributeBlue;\n    uint256 private _contributeRed;\n    address private _beneficiary;\n\n    function amountContributedForRedTeam() public view returns (uint256) {\n        return _contributeRed;\n    }\n\n    function whoIsWinning() public view returns (uint256) {\n        if (_contributeBlue <= _contributeRed) {\n            if (_contributeBlue >= _contributeRed) {\n                return 0;\n            } else {\n                return 2;\n            }\n        } else {\n            return 1;\n        }\n    }\n\n    function contributeBlue() public payable {\n        _contributeBlue += msg.value;\n    }\n\n    fallback() external payable {\n        if (msg.value % 2 == 1) {\n            _contributeBlue += msg.value;\n        } else {\n            _contributeRed += msg.value;\n        }\n    }\n\n    function amountContributedForBlueTeam() public view returns (uint256) {\n        return _contributeBlue;\n    }\n\n    function contributeRed() public payable {\n        _contributeRed += msg.value;\n    }\n\n    function claimDonation() public {\n        (bool success, ) = _beneficiary.call{value: address(this).balance, gas: 2300}(\"\");\n        require(success, \"Transfer failed.\");\n    }\n\n    function beneficiary() public view returns (address) {\n        return _beneficiary;\n    }\n}\n```\n\nPlease note that in the solidity version, there's no direct equivalent for the `__function_selector__` function from the decompiled code. In Solidity, the function selector is determined automatically from the function signature, so it's not something you have to code manually.",
				"role": "assistant"
			}
		}
	],
	"created": 1701467727,
	"id": "chatcmpl-8R5lnjVAmJFaea4xEvAXpg5y7nARQ",
	"input_format": "DecompiledCode",
	"ir": "// Decompiled at www.contract-library.com\n// 2021.08.25 08:50 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _contributeBlue; // STORAGE[0x1]\nuint256 _contributeRed; // STORAGE[0x2]\naddress _beneficiary; // STORAGE[0x0] bytes 0 to 19\n\n\nfunction amountContributedForRedTeam() public nonPayable { \n    return _contributeRed;\n}\n\nfunction whoIsWinning() public nonPayable { \n    if (_contributeBlue <= _contributeRed) {\n        if (_contributeBlue >= _contributeRed) {\n            v0 = v1 = 0;\n        } else {\n            v0 = 2;\n        }\n    } else {\n        v0 = v2 = 1;\n    }\n    return v0;\n}\n\nfunction contributeBlue() public payable { \n    _contributeBlue += msg.value;\n}\n\nfunction fallback() public payable { \n    if (msg.value % 2) {\n        _contributeBlue += msg.value;\n    } else {\n        _contributeRed += msg.value;\n    }\n}\n\nfunction amountContributedForBlueTeam() public nonPayable { \n    return _contributeBlue;\n}\n\nfunction contributeRed() public payable { \n    _contributeRed += msg.value;\n}\n\nfunction claimDonation() public nonPayable { \n    v0 = _beneficiary.call().value(this.balance).gas(2300 * !this.balance);\n    require(v0); // checks call status, propagates error data on error\n}\n\nfunction beneficiary() public nonPayable { \n    return _beneficiary;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint256 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (0x38af3eed > function_selector >> 224) {\n            if (0x300016f == function_selector >> 224) {\n                amountContributedForBlueTeam();\n            } else if (0x22e53ecb == function_selector >> 224) {\n                contributeRed();\n            } else if (0x2f4a9f85 == function_selector >> 224) {\n                claimDonation();\n            }\n        } else if (0x38af3eed == function_selector >> 224) {\n            beneficiary();\n        } else if (0x827c0241 == function_selector >> 224) {\n            amountContributedForRedTeam();\n        } else if (0xb22a6c82 == function_selector >> 224) {\n            whoIsWinning();\n        } else if (0xd10637a5 == function_selector >> 224) {\n            contributeBlue();\n        }\n    }\n    fallback();\n}\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.25 08:50 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _contributeBlue; // STORAGE[0x1]\nuint256 _contributeRed; // STORAGE[0x2]\naddress _beneficiary; // STORAGE[0x0] bytes 0 to 19\n\n\nfunction amountContributedForRedTeam() public nonPayable { \n    return _contributeRed;\n}\n\nfunction whoIsWinning() public nonPayable { \n    if (_contributeBlue <= _contributeRed) {\n        if (_contributeBlue >= _contributeRed) {\n            v0 = v1 = 0;\n        } else {\n            v0 = 2;\n        }\n    } else {\n        v0 = v2 = 1;\n    }\n    return v0;\n}\n\nfunction contributeBlue() public payable { \n    _contributeBlue += msg.value;\n}\n\nfunction fallback() public payable { \n    if (msg.value % 2) {\n        _contributeBlue += msg.value;\n    } else {\n        _contributeRed += msg.value;\n    }\n}\n\nfunction amountContributedForBlueTeam() public nonPayable { \n    return _contributeBlue;\n}\n\nfunction contributeRed() public payable { \n    _contributeRed += msg.value;\n}\n\nfunction claimDonation() public nonPayable { \n    v0 = _beneficiary.call().value(this.balance).gas(2300 * !this.balance);\n    require(v0); // checks call status, propagates error data on error\n}\n\nfunction beneficiary() public nonPayable { \n    return _beneficiary;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint256 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (0x38af3eed > function_selector >> 224) {\n            if (0x300016f == function_selector >> 224) {\n                amountContributedForBlueTeam();\n            } else if (0x22e53ecb == function_selector >> 224) {\n                contributeRed();\n            } else if (0x2f4a9f85 == function_selector >> 224) {\n                claimDonation();\n            }\n        } else if (0x38af3eed == function_selector >> 224) {\n            beneficiary();\n        } else if (0x827c0241 == function_selector >> 224) {\n            amountContributedForRedTeam();\n        } else if (0xb22a6c82 == function_selector >> 224) {\n            whoIsWinning();\n        } else if (0xd10637a5 == function_selector >> 224) {\n            contributeBlue();\n        }\n    }\n    fallback();\n}\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.25 08:50 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _contributeBlue; // STORAGE[0x1]\nuint256 _contributeRed; // STORAGE[0x2]\naddress _beneficiary; // STORAGE[0x0] bytes 0 to 19\n\n\nfunction amountContributedForRedTeam() public nonPayable { \n    return _contributeRed;\n}\n\nfunction whoIsWinning() public nonPayable { \n    if (_contributeBlue <= _contributeRed) {\n        if (_contributeBlue >= _contributeRed) {\n            v0 = v1 = 0;\n        } else {\n            v0 = 2;\n        }\n    } else {\n        v0 = v2 = 1;\n    }\n    return v0;\n}\n\nfunction contributeBlue() public payable { \n    _contributeBlue += msg.value;\n}\n\nfunction fallback() public payable { \n    if (msg.value % 2) {\n        _contributeBlue += msg.value;\n    } else {\n        _contributeRed += msg.value;\n    }\n}\n\nfunction amountContributedForBlueTeam() public nonPayable { \n    return _contributeBlue;\n}\n\nfunction contributeRed() public payable { \n    _contributeRed += msg.value;\n}\n\nfunction claimDonation() public nonPayable { \n    v0 = _beneficiary.call().value(this.balance).gas(2300 * !this.balance);\n    require(v0); // checks call status, propagates error data on error\n}\n\nfunction beneficiary() public nonPayable { \n    return _beneficiary;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint256 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (0x38af3eed > function_selector >> 224) {\n            if (0x300016f == function_selector >> 224) {\n                amountContributedForBlueTeam();\n            } else if (0x22e53ecb == function_selector >> 224) {\n                contributeRed();\n            } else if (0x2f4a9f85 == function_selector >> 224) {\n                claimDonation();\n            }\n        } else if (0x38af3eed == function_selector >> 224) {\n            beneficiary();\n        } else if (0x827c0241 == function_selector >> 224) {\n            amountContributedForRedTeam();\n        } else if (0xb22a6c82 == function_selector >> 224) {\n            whoIsWinning();\n        } else if (0xd10637a5 == function_selector >> 224) {\n            contributeBlue();\n        }\n    }\n    fallback();\n}\n.",
	"status": "1",
	"time_cost": 19.00576424598694,
	"usage": {
		"completion_tokens": 374,
		"prompt_tokens": 669,
		"total_tokens": 1043
	}
}