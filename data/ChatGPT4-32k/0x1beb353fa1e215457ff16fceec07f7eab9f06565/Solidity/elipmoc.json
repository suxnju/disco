{
	"address": "0x1beb353fa1e215457ff16fceec07f7eab9f06565",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Based on the decompiled code, here is a Solidity contract that recreates the functionality:\n\n```solidity\npragma solidity ^0.5.0;\n\ncontract MyContract {\n    mapping (address => uint256) public map_0;\n    address public _decline;\n    address public _request;\n\n    event Received(address sender, uint256 value);\n    event Declined(address sender, address recipient);\n    event Approved(address sender, uint256 value, uint256 balance);\n    event Requested(address sender, uint256 value, uint256 balance);\n\n    function Request(address varg0, uint256 varg1) public { \n        require(msg.sender == _request);\n        require(varg0 != address(0));\n        require(varg0 != address(this));\n        require(varg1 > 0);\n        require(map_0[varg0] == 0);\n        map_0[varg0] = varg1;\n        emit Requested(varg0, varg1, address(this).balance);\n    }\n\n    function() external payable { \n        emit Received(msg.sender, msg.value);\n    }\n\n    function Decline(address varg0) public { \n        require(msg.sender == _decline || msg.sender == _request);\n        map_0[varg0] = 0;\n        emit Declined(msg.sender, varg0);\n    }\n\n    function Approve(address varg0, uint256 varg1) public { \n        require(msg.sender == _decline);\n        require(varg1 > 0);\n        require(map_0[varg0] == varg1);\n        map_0[varg0] = 0;\n        (bool success,) = varg0.call.value(varg1).gas(2300)(\"\");\n        require(success);\n        emit Approved(varg0, varg1, address(this).balance);\n    }\n}\n```\n\nPlease note that this code is an interpretation of the decompiled code and may not exactly match the original source code. Additionally, the function `__function_selector__` is not included because in Solidity, function selectors are handled automatically by the EVM and do not need to be explicitly defined in the contract.",
				"role": "assistant"
			}
		}
	],
	"created": 1701457140,
	"id": "chatcmpl-8R312oWqyFdafQHLuMcyeUkYQjauQ",
	"input_format": "DecompiledCode",
	"ir": "// Decompiled at www.contract-library.com\n// 2021.08.26 13:54 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) map_0; // STORAGE[0x0]\naddress _decline; // STORAGE[0x1] bytes 0 to 19\naddress _request; // STORAGE[0x2] bytes 0 to 19\n\n// Events\nReceived(address, uint256);\nDeclined(address, address);\nApproved(address, uint256, uint256);\nRequested(address, uint256, uint256);\n\nfunction Request(address varg0, uint256 varg1) public nonPayable { \n    require(msg.sender == _request);\n    v0 = v1 = varg0 != 0;\n    if (v1) {\n        v0 = v2 = varg0 != address(this);\n    }\n    require(v0);\n    require(varg1 > 0);\n    require(map_0[varg0] == 0);\n    map_0[varg0] = varg1;\n    emit Requested(varg0, varg1, (address(this)).balance);\n}\n\nfunction fallback() public payable { \n    emit Received(msg.sender, msg.value);\n}\n\nfunction Decline(address varg0) public nonPayable { \n    v0 = v1 = msg.sender == _decline;\n    if (msg.sender != _decline) {\n        v0 = v2 = msg.sender == _request;\n    }\n    require(v0);\n    map_0[varg0] = 0;\n    emit Declined(msg.sender, varg0);\n}\n\nfunction Approve(address varg0, uint256 varg1) public nonPayable { \n    require(msg.sender == _decline);\n    require(varg1 > 0);\n    require(map_0[varg0] == varg1);\n    map_0[varg0] = 0;\n    v0 = varg0.call().value(varg1).gas(!varg1 * 2300);\n    require(v0); // checks call status, propagates error data on error\n    emit Approved(varg0, varg1, (address(this)).balance);\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (0x46055acd == function_selector) {\n            Decline(address);\n        } else if (0x90ec57f1 == function_selector) {\n            Approve(address,uint256);\n        } else if (0xe31c60e3 == function_selector) {\n            Request(address,uint256);\n        }\n    }\n    fallback();\n}\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.26 13:54 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) map_0; // STORAGE[0x0]\naddress _decline; // STORAGE[0x1] bytes 0 to 19\naddress _request; // STORAGE[0x2] bytes 0 to 19\n\n// Events\nReceived(address, uint256);\nDeclined(address, address);\nApproved(address, uint256, uint256);\nRequested(address, uint256, uint256);\n\nfunction Request(address varg0, uint256 varg1) public nonPayable { \n    require(msg.sender == _request);\n    v0 = v1 = varg0 != 0;\n    if (v1) {\n        v0 = v2 = varg0 != address(this);\n    }\n    require(v0);\n    require(varg1 > 0);\n    require(map_0[varg0] == 0);\n    map_0[varg0] = varg1;\n    emit Requested(varg0, varg1, (address(this)).balance);\n}\n\nfunction fallback() public payable { \n    emit Received(msg.sender, msg.value);\n}\n\nfunction Decline(address varg0) public nonPayable { \n    v0 = v1 = msg.sender == _decline;\n    if (msg.sender != _decline) {\n        v0 = v2 = msg.sender == _request;\n    }\n    require(v0);\n    map_0[varg0] = 0;\n    emit Declined(msg.sender, varg0);\n}\n\nfunction Approve(address varg0, uint256 varg1) public nonPayable { \n    require(msg.sender == _decline);\n    require(varg1 > 0);\n    require(map_0[varg0] == varg1);\n    map_0[varg0] = 0;\n    v0 = varg0.call().value(varg1).gas(!varg1 * 2300);\n    require(v0); // checks call status, propagates error data on error\n    emit Approved(varg0, varg1, (address(this)).balance);\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (0x46055acd == function_selector) {\n            Decline(address);\n        } else if (0x90ec57f1 == function_selector) {\n            Approve(address,uint256);\n        } else if (0xe31c60e3 == function_selector) {\n            Request(address,uint256);\n        }\n    }\n    fallback();\n}\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.26 13:54 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) map_0; // STORAGE[0x0]\naddress _decline; // STORAGE[0x1] bytes 0 to 19\naddress _request; // STORAGE[0x2] bytes 0 to 19\n\n// Events\nReceived(address, uint256);\nDeclined(address, address);\nApproved(address, uint256, uint256);\nRequested(address, uint256, uint256);\n\nfunction Request(address varg0, uint256 varg1) public nonPayable { \n    require(msg.sender == _request);\n    v0 = v1 = varg0 != 0;\n    if (v1) {\n        v0 = v2 = varg0 != address(this);\n    }\n    require(v0);\n    require(varg1 > 0);\n    require(map_0[varg0] == 0);\n    map_0[varg0] = varg1;\n    emit Requested(varg0, varg1, (address(this)).balance);\n}\n\nfunction fallback() public payable { \n    emit Received(msg.sender, msg.value);\n}\n\nfunction Decline(address varg0) public nonPayable { \n    v0 = v1 = msg.sender == _decline;\n    if (msg.sender != _decline) {\n        v0 = v2 = msg.sender == _request;\n    }\n    require(v0);\n    map_0[varg0] = 0;\n    emit Declined(msg.sender, varg0);\n}\n\nfunction Approve(address varg0, uint256 varg1) public nonPayable { \n    require(msg.sender == _decline);\n    require(varg1 > 0);\n    require(map_0[varg0] == varg1);\n    map_0[varg0] = 0;\n    v0 = varg0.call().value(varg1).gas(!varg1 * 2300);\n    require(v0); // checks call status, propagates error data on error\n    emit Approved(varg0, varg1, (address(this)).balance);\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (0x46055acd == function_selector) {\n            Decline(address);\n        } else if (0x90ec57f1 == function_selector) {\n            Approve(address,uint256);\n        } else if (0xe31c60e3 == function_selector) {\n            Request(address,uint256);\n        }\n    }\n    fallback();\n}\n.",
	"status": "1",
	"time_cost": 23.820690631866455,
	"usage": {
		"completion_tokens": 449,
		"prompt_tokens": 659,
		"total_tokens": 1108
	}
}