{
	"address": "0x11f77ce7d607edc91f679d79419519483187e948",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is a Solidity contract created based on the provided bytecode:\n\n```solidity\npragma solidity ^0.5.0;\n\ncontract Contract {\n    bytes32 data;\n    \n    function set(bytes32 _data) public payable {\n        if (msg.value > 0) {\n            revert();\n        }\n        data = _data;\n    }\n    \n    function get() public view returns (bytes32) {\n        return data;\n    }\n    \n    function compare(bytes32 _data1, bytes32 _data2) public view returns (bool) {\n        return _data1 == _data2;\n    }\n    \n    function complexOperation(bytes32 _data1, bytes32 _data2) public {\n        require(_data1 != _data2, \"Inputs must not be equal\");\n        data = keccak256(abi.encode(_data1 ^ _data2));\n    }\n}\n```\n\nPlease note that this contract is a simplification and interpretation based on the provided information. The contract stores a `bytes32` variable, `data`, and provides four functions:\n\n- The `set` function allows you to set the `data` field. It reverts if any ether is sent with the transaction.\n- The `get` function returns the current value of `data`.\n- The `compare` function checks if two `bytes32` inputs are equal.\n- The `complexOperation` function requires that two `bytes32` inputs are not equal, then sets `data` to the keccak256 hash of the bitwise XOR of the inputs.\n\nThe actual contract represented by your bytecode may be more complex and have additional functionality.",
				"role": "assistant"
			}
		}
	],
	"created": 1700475028,
	"id": "chatcmpl-8MvWWuihw9atxyESxvBXJBeue3n8I",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] == 0xf1753550) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x04;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x70a08231) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x6352211e) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (memory[0x0160:0x0180] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            memory[0x00:0x20] = memory[0x0160:0x0180];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x081812fc) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x00;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x01;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0xe985e9c5) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x24:0x44];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp27 = keccak256(memory[0xc0:0xe0]) + 0x01;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = temp27;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x4cdc9549) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0x0100])];\n            memory[0x01a0:0x01c0] = memory[0x0180:0x01a0] == memory[0x0140:0x0160];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x01;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160] == storage[keccak256(memory[0xc0:0x0100])];\n            memory[0x0200:0x0220] = 0xe985e9c5;\n            memory[0x0220:0x0240] = memory[0x0180:0x01a0];\n            memory[0x0240:0x0260] = memory[0x0140:0x0160];\n            var temp26;\n            temp26, memory[0x02a0:0x02c0] = address(address(this)).call.gas(msg.gas)(memory[0x021c:0x0260]);\n        \n            if (!temp26) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01e0:0x0200] = memory[0x02a0:0x02c0];\n            memory[0x00:0x20] = memory[0x01a0:0x01c0] | memory[0x01c0:0x01e0] | memory[0x01e0:0x0200];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x4f6ccce7) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] >= storage[0x05]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x06;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0xadfb83a6) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x00;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x08;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x2f745c59) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0180:0x01a0] = 0x70a08231;\n            memory[0x01a0:0x01c0] = memory[0x0140:0x0160];\n            var temp24;\n            temp24, memory[0x0200:0x0220] = address(address(this)).call.gas(msg.gas)(memory[0x019c:0x01c0]);\n        \n            if (!temp24) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0160:0x0180] >= memory[0x0200:0x0220]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp25 = keccak256(memory[0xc0:0xe0]) + 0x02;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = temp25;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (0x00) {\n            memory[0x0180:0x01a0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n        \n            var temp18 = memory[0x0140:0x0160];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n            storage[keccak256(memory[0xc0:0x0100])] = temp18;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0xe0])];\n            var temp19 = memory[0x01a0:0x01c0];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x08;\n            storage[keccak256(memory[0xc0:0x0100])] = temp19;\n            var temp20 = memory[0x0160:0x0180];\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp21 = keccak256(memory[0xc0:0xe0]) + 0x02;\n            memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n            memory[0xc0:0xe0] = temp21;\n            storage[keccak256(memory[0xc0:0x0100])] = temp20;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp22 = keccak256(memory[0xc0:0xe0]);\n            var-3 = temp22;\n        \n            if (storage[var-3] + 0x01 < storage[var-3]) { revert(memory[0x00:0x00]); }\n        \n            var temp23 = var-3;\n            storage[temp23] = storage[temp23] + 0x01;\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0180:0x01a0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            var temp11 = memory[0x0140:0x0160];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])] != temp11) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var-3 = keccak256(memory[0xc0:0xe0]);\n        \n            if (storage[var-3] < 0x01) { revert(memory[0x00:0x00]); }\n        \n            var temp12 = var-3;\n            storage[temp12] = storage[temp12] - 0x01;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0xe0])];\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp13 = keccak256(memory[0xc0:0xe0]) + 0x02;\n            memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n            memory[0xc0:0xe0] = temp13;\n            memory[0x01c0:0x01e0] = storage[keccak256(memory[0xc0:0x0100])];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x08;\n            memory[0x01e0:0x0200] = storage[keccak256(memory[0xc0:0x0100])];\n            var temp14 = memory[0x01e0:0x0200];\n            memory[0xe0:0x0100] = memory[0x01c0:0x01e0];\n            memory[0xc0:0xe0] = 0x08;\n            storage[keccak256(memory[0xc0:0x0100])] = temp14;\n            var temp15 = memory[0x01c0:0x01e0];\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp16 = keccak256(memory[0xc0:0xe0]) + 0x02;\n            memory[0xe0:0x0100] = memory[0x01e0:0x0200];\n            memory[0xc0:0xe0] = temp16;\n            storage[keccak256(memory[0xc0:0x0100])] = temp15;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp17 = keccak256(memory[0xc0:0xe0]) + 0x02;\n            memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n            memory[0xc0:0xe0] = temp17;\n            storage[keccak256(memory[0xc0:0x0100])] = 0x05;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x08;\n            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x08;\n            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0180:0x01a0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            var temp10 = memory[0x0140:0x0160];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])] != temp10) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x01;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])] == 0x00) {\n                // Error: Could not resolve jump destination!\n            } else {\n                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                memory[0xc0:0xe0] = 0x01;\n                storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                // Error: Could not resolve jump destination!\n            }\n        } else if (0x00) {\n            // Error: StackRead before write???\n            var var-3;\n            // Error: StackRead before write???\n            var var-1;\n            // Error: StackRead before write???\n            var var-5;\n            // Error: StackRead before write???\n            var var-4;\n            // Error: StackRead before write???\n            var var-2;\n            memory[0x01c0:0x01e0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01e0:0x0200] = 0x4cdc9549;\n            memory[0x0200:0x0220] = memory[0x01a0:0x01c0];\n            memory[0x0220:0x0240] = memory[0x0180:0x01a0];\n            var temp9;\n            temp9, memory[0x0280:0x02a0] = address(address(this)).call.gas(msg.gas)(memory[0x01fc:0x0240]);\n        \n            if (!temp9) { revert(memory[0x00:0x00]); }\n        \n            if (!memory[0x0280:0x02a0]) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0160:0x0180] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            var-5 = memory[0x0140:0x0160];\n            var-4 = memory[0x0160:0x0180];\n            var-3 = memory[0x0180:0x01a0];\n            var-2 = memory[0x01a0:0x01c0];\n            var-1 = memory[0x01c0:0x01e0];\n            var0 = memory[0x01e0:0x0200];\n            var1 = memory[0x0200:0x0220];\n            var2 = memory[0x0220:0x0240];\n            var3 = memory[0x0240:0x0260];\n            var4 = memory[0x0260:0x0280];\n            var5 = memory[0x0280:0x02a0];\n            memory[0x02a0:0x02c0] = 0x91127c1f;\n            memory[0x02c0:0x02e0] = memory[0x0140:0x0160];\n            memory[0x02e0:0x0300] = memory[0x0180:0x01a0];\n            var6 = memory[0x02e0:0x0300];\n            var7 = memory[0x02c0:0x02e0];\n            var8 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x23b872dd) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x24:0x44];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            memory[0x01a0:0x01c0] = 0x092863fe;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n            memory[0x01e0:0x0200] = memory[0x0160:0x0180];\n            memory[0x0200:0x0220] = memory[0x0180:0x01a0];\n            memory[0x0220:0x0240] = memory[0x0140:0x0160];\n            var3 = memory[0x0220:0x0240];\n            var4 = memory[0x0200:0x0220];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x01c0:0x01e0];\n            var7 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x42842e0e) {\n            memory[0x0600:0x0620] = 0x00;\n            var0 = 0x0600;\n            var temp7 = memory[var0:var0 + 0x20] + 0x20;\n            var1 = temp7;\n            var temp8;\n            temp8, memory[0x01c0:0x01c0 + var1] = address(0x04).call.gas(var1 / 0x0a + 0x12)(memory[var0:var0 + var1]);\n        \n            if (temp8) { goto label_0B19; }\n            else { revert(memory[0x00:0x00]); }\n        } else if (memory[0x00:0x20] == 0xb88d4fde) {\n            memory[0x01c0:0x05e0] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0420];\n        \n            if (msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x20] > 0x0400) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01c0:0x0600] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0440];\n            goto label_0B19;\n        } else if (0x00) {\n        label_0B19:\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x24:0x44];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            var8 = memory[0x0240:0x0260];\n            var9 = memory[0x0260:0x0280];\n            var10 = memory[0x0280:0x02a0];\n            var var11 = memory[0x02a0:0x02c0];\n            var var12 = memory[0x02c0:0x02e0];\n            var var13 = memory[0x02e0:0x0300];\n            var var14 = memory[0x0300:0x0320];\n            var var15 = memory[0x0320:0x0340];\n            var var16 = memory[0x0340:0x0360];\n            var var17 = memory[0x0360:0x0380];\n            var var18 = memory[0x0380:0x03a0];\n            var var19 = memory[0x03a0:0x03c0];\n            var var20 = memory[0x03c0:0x03e0];\n            var var21 = memory[0x03e0:0x0400];\n            var var22 = memory[0x0400:0x0420];\n            var var23 = memory[0x0420:0x0440];\n            var var24 = memory[0x0440:0x0460];\n            var var25 = memory[0x0460:0x0480];\n            var var26 = memory[0x0480:0x04a0];\n            var var27 = memory[0x04a0:0x04c0];\n            var var28 = memory[0x04c0:0x04e0];\n            var var29 = memory[0x04e0:0x0500];\n            var var30 = memory[0x0500:0x0520];\n            var var31 = memory[0x0520:0x0540];\n            var var32 = memory[0x0540:0x0560];\n            var var33 = memory[0x0560:0x0580];\n            var var34 = memory[0x0580:0x05a0];\n            var var35 = memory[0x05a0:0x05c0];\n            var var36 = memory[0x05c0:0x05e0];\n            var var37 = memory[0x05e0:0x0600];\n            var var38 = memory[0x0600:0x0620];\n            var var39 = memory[0x0620:0x0640];\n            memory[0x0640:0x0660] = 0x092863fe;\n            memory[0x0660:0x0680] = memory[0x0140:0x0160];\n            memory[0x0680:0x06a0] = memory[0x0160:0x0180];\n            memory[0x06a0:0x06c0] = memory[0x0180:0x01a0];\n            memory[0x06c0:0x06e0] = msg.sender;\n            var var40 = memory[0x06c0:0x06e0];\n            var var41 = memory[0x06a0:0x06c0];\n            var var42 = memory[0x0680:0x06a0];\n            var var43 = memory[0x0660:0x0680];\n            var var44 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x095ea7b3) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (memory[0x0180:0x01a0] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] == memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])] == msg.sender;\n            memory[0xe0:0x0100] = memory[0x0180:0x01a0];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp5 = keccak256(memory[0xc0:0xe0]) + 0x01;\n            memory[0xe0:0x0100] = msg.sender;\n            memory[0xc0:0xe0] = temp5;\n            memory[0x01c0:0x01e0] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (!(memory[0x01a0:0x01c0] | memory[0x01c0:0x01e0])) { revert(memory[0x00:0x00]); }\n        \n            var temp6 = memory[0x0140:0x0160];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x01;\n            storage[keccak256(memory[0xc0:0x0100])] = temp6;\n            log(memory[0x00:0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, memory[0x0180:0x01a0], memory[0x0140:0x0160], memory[0x0160:0x0180]]);\n            stop();\n        } else if (memory[0x00:0x20] == 0xa22cb465) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x24:0x44];\n        \n            if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] == msg.sender) { revert(memory[0x00:0x00]); }\n        \n            var temp3 = memory[0x0160:0x0180];\n            memory[0xe0:0x0100] = msg.sender;\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp4 = keccak256(memory[0xc0:0xe0]) + 0x01;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = temp4;\n            storage[keccak256(memory[0xc0:0x0100])] = temp3;\n            memory[0x0180:0x01a0] = memory[0x0160:0x0180];\n            log(memory[0x0180:0x01a0], [0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, msg.sender, memory[0x0140:0x0160]]);\n            stop();\n        } else if (memory[0x00:0x20] == 0x40c10f19) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            memory[0x0180:0x01a0] = 0xff5ce378;\n            memory[0x01a0:0x01c0] = memory[0x0140:0x0160];\n            memory[0x01c0:0x01e0] = memory[0x0160:0x0180];\n            var2 = memory[0x01c0:0x01e0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x42966c68) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0160:0x0180] = 0x4cdc9549;\n            memory[0x0180:0x01a0] = msg.sender;\n            memory[0x01a0:0x01c0] = memory[0x0140:0x0160];\n            var temp2;\n            temp2, memory[0x0200:0x0220] = address(address(this)).call.gas(msg.gas)(memory[0x017c:0x01c0]);\n        \n            if (!temp2) { revert(memory[0x00:0x00]); }\n        \n            if (!memory[0x0200:0x0220]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x0220:0x0240] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (memory[0x0220:0x0240] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var var1 = memory[0x0160:0x0180];\n            var var2 = memory[0x0180:0x01a0];\n            var var3 = memory[0x01a0:0x01c0];\n            var var4 = memory[0x01c0:0x01e0];\n            var var5 = memory[0x01e0:0x0200];\n            var var6 = memory[0x0200:0x0220];\n            var var7 = memory[0x0220:0x0240];\n            memory[0x0240:0x0260] = 0x91127c1f;\n            memory[0x0260:0x0280] = memory[0x0220:0x0240];\n            memory[0x0280:0x02a0] = memory[0x0140:0x0160];\n            var var8 = memory[0x0280:0x02a0];\n            var var9 = memory[0x0260:0x0280];\n            var var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xab649b0a) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x0f03a7ff) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x01;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x46692f51) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x02;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] != 0x07546172) {\n            if (memory[0x00:0x20] == 0xf5268bb5) {\n                memory[0x0140:0x0160] = msg.data[0x04:0x24];\n            \n                if (msg.value) { revert(memory[0x00:0x00]); }\n            \n                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                memory[0xc0:0xe0] = 0x04;\n                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                return memory[0x00:0x20];\n            } else if (memory[0x00:0x20] != 0x18160ddd) {\n                if (memory[0x00:0x20] == 0x647f0779) {\n                    memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x07;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0xd6fc4b46) {\n                    memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x09;\n                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0xbf3a3e01) {\n                    memory[0x0140:0x0180] = msg.data[0x04:0x44];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x24:0x44];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x09;\n                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                    var temp1 = keccak256(memory[0xc0:0xe0]) + 0x01;\n                    memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                    memory[0xc0:0xe0] = temp1;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] != 0x157cee46) { revert(memory[0x00:0x00]); }\n                else {\n                    memory[0x0140:0x0180] = msg.data[0x04:0x44];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x09;\n                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                    var temp0 = keccak256(memory[0xc0:0xe0]) + 0x02;\n                    memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                    memory[0xc0:0xe0] = temp0;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                }\n            } else if (!msg.value) {\n                memory[0x00:0x20] = storage[0x05];\n                return memory[0x00:0x20];\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x00:0x20] = storage[0x03];\n            return memory[0x00:0x20];\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] == 0xf1753550) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x04;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x70a08231) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x6352211e) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (memory[0x0160:0x0180] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            memory[0x00:0x20] = memory[0x0160:0x0180];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x081812fc) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x00;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x01;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0xe985e9c5) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x24:0x44];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp27 = keccak256(memory[0xc0:0xe0]) + 0x01;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = temp27;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x4cdc9549) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0x0100])];\n            memory[0x01a0:0x01c0] = memory[0x0180:0x01a0] == memory[0x0140:0x0160];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x01;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160] == storage[keccak256(memory[0xc0:0x0100])];\n            memory[0x0200:0x0220] = 0xe985e9c5;\n            memory[0x0220:0x0240] = memory[0x0180:0x01a0];\n            memory[0x0240:0x0260] = memory[0x0140:0x0160];\n            var temp26;\n            temp26, memory[0x02a0:0x02c0] = address(address(this)).call.gas(msg.gas)(memory[0x021c:0x0260]);\n        \n            if (!temp26) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01e0:0x0200] = memory[0x02a0:0x02c0];\n            memory[0x00:0x20] = memory[0x01a0:0x01c0] | memory[0x01c0:0x01e0] | memory[0x01e0:0x0200];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x4f6ccce7) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] >= storage[0x05]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x06;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0xadfb83a6) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x00;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x08;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x2f745c59) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0180:0x01a0] = 0x70a08231;\n            memory[0x01a0:0x01c0] = memory[0x0140:0x0160];\n            var temp24;\n            temp24, memory[0x0200:0x0220] = address(address(this)).call.gas(msg.gas)(memory[0x019c:0x01c0]);\n        \n            if (!temp24) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0160:0x0180] >= memory[0x0200:0x0220]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp25 = keccak256(memory[0xc0:0xe0]) + 0x02;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = temp25;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (0x00) {\n            memory[0x0180:0x01a0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n        \n            var temp18 = memory[0x0140:0x0160];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n            storage[keccak256(memory[0xc0:0x0100])] = temp18;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0xe0])];\n            var temp19 = memory[0x01a0:0x01c0];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x08;\n            storage[keccak256(memory[0xc0:0x0100])] = temp19;\n            var temp20 = memory[0x0160:0x0180];\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp21 = keccak256(memory[0xc0:0xe0]) + 0x02;\n            memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n            memory[0xc0:0xe0] = temp21;\n            storage[keccak256(memory[0xc0:0x0100])] = temp20;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp22 = keccak256(memory[0xc0:0xe0]);\n            var-3 = temp22;\n        \n            if (storage[var-3] + 0x01 < storage[var-3]) { revert(memory[0x00:0x00]); }\n        \n            var temp23 = var-3;\n            storage[temp23] = storage[temp23] + 0x01;\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0180:0x01a0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            var temp11 = memory[0x0140:0x0160];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])] != temp11) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var-3 = keccak256(memory[0xc0:0xe0]);\n        \n            if (storage[var-3] < 0x01) { revert(memory[0x00:0x00]); }\n        \n            var temp12 = var-3;\n            storage[temp12] = storage[temp12] - 0x01;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0xe0])];\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp13 = keccak256(memory[0xc0:0xe0]) + 0x02;\n            memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n            memory[0xc0:0xe0] = temp13;\n            memory[0x01c0:0x01e0] = storage[keccak256(memory[0xc0:0x0100])];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x08;\n            memory[0x01e0:0x0200] = storage[keccak256(memory[0xc0:0x0100])];\n            var temp14 = memory[0x01e0:0x0200];\n            memory[0xe0:0x0100] = memory[0x01c0:0x01e0];\n            memory[0xc0:0xe0] = 0x08;\n            storage[keccak256(memory[0xc0:0x0100])] = temp14;\n            var temp15 = memory[0x01c0:0x01e0];\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp16 = keccak256(memory[0xc0:0xe0]) + 0x02;\n            memory[0xe0:0x0100] = memory[0x01e0:0x0200];\n            memory[0xc0:0xe0] = temp16;\n            storage[keccak256(memory[0xc0:0x0100])] = temp15;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp17 = keccak256(memory[0xc0:0xe0]) + 0x02;\n            memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n            memory[0xc0:0xe0] = temp17;\n            storage[keccak256(memory[0xc0:0x0100])] = 0x05;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x08;\n            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x08;\n            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0180:0x01a0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            var temp10 = memory[0x0140:0x0160];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])] != temp10) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x01;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])] == 0x00) {\n                // Error: Could not resolve jump destination!\n            } else {\n                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                memory[0xc0:0xe0] = 0x01;\n                storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                // Error: Could not resolve jump destination!\n            }\n        } else if (0x00) {\n            // Error: StackRead before write???\n            var var-3;\n            // Error: StackRead before write???\n            var var-1;\n            // Error: StackRead before write???\n            var var-5;\n            // Error: StackRead before write???\n            var var-4;\n            // Error: StackRead before write???\n            var var-2;\n            memory[0x01c0:0x01e0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01e0:0x0200] = 0x4cdc9549;\n            memory[0x0200:0x0220] = memory[0x01a0:0x01c0];\n            memory[0x0220:0x0240] = memory[0x0180:0x01a0];\n            var temp9;\n            temp9, memory[0x0280:0x02a0] = address(address(this)).call.gas(msg.gas)(memory[0x01fc:0x0240]);\n        \n            if (!temp9) { revert(memory[0x00:0x00]); }\n        \n            if (!memory[0x0280:0x02a0]) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0160:0x0180] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            var-5 = memory[0x0140:0x0160];\n            var-4 = memory[0x0160:0x0180];\n            var-3 = memory[0x0180:0x01a0];\n            var-2 = memory[0x01a0:0x01c0];\n            var-1 = memory[0x01c0:0x01e0];\n            var0 = memory[0x01e0:0x0200];\n            var1 = memory[0x0200:0x0220];\n            var2 = memory[0x0220:0x0240];\n            var3 = memory[0x0240:0x0260];\n            var4 = memory[0x0260:0x0280];\n            var5 = memory[0x0280:0x02a0];\n            memory[0x02a0:0x02c0] = 0x91127c1f;\n            memory[0x02c0:0x02e0] = memory[0x0140:0x0160];\n            memory[0x02e0:0x0300] = memory[0x0180:0x01a0];\n            var6 = memory[0x02e0:0x0300];\n            var7 = memory[0x02c0:0x02e0];\n            var8 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x23b872dd) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x24:0x44];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            memory[0x01a0:0x01c0] = 0x092863fe;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n            memory[0x01e0:0x0200] = memory[0x0160:0x0180];\n            memory[0x0200:0x0220] = memory[0x0180:0x01a0];\n            memory[0x0220:0x0240] = memory[0x0140:0x0160];\n            var3 = memory[0x0220:0x0240];\n            var4 = memory[0x0200:0x0220];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x01c0:0x01e0];\n            var7 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x42842e0e) {\n            memory[0x0600:0x0620] = 0x00;\n            var0 = 0x0600;\n            var temp7 = memory[var0:var0 + 0x20] + 0x20;\n            var1 = temp7;\n            var temp8;\n            temp8, memory[0x01c0:0x01c0 + var1] = address(0x04).call.gas(var1 / 0x0a + 0x12)(memory[var0:var0 + var1]);\n        \n            if (temp8) { goto label_0B19; }\n            else { revert(memory[0x00:0x00]); }\n        } else if (memory[0x00:0x20] == 0xb88d4fde) {\n            memory[0x01c0:0x05e0] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0420];\n        \n            if (msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x20] > 0x0400) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01c0:0x0600] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0440];\n            goto label_0B19;\n        } else if (0x00) {\n        label_0B19:\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x24:0x44];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            var8 = memory[0x0240:0x0260];\n            var9 = memory[0x0260:0x0280];\n            var10 = memory[0x0280:0x02a0];\n            var var11 = memory[0x02a0:0x02c0];\n            var var12 = memory[0x02c0:0x02e0];\n            var var13 = memory[0x02e0:0x0300];\n            var var14 = memory[0x0300:0x0320];\n            var var15 = memory[0x0320:0x0340];\n            var var16 = memory[0x0340:0x0360];\n            var var17 = memory[0x0360:0x0380];\n            var var18 = memory[0x0380:0x03a0];\n            var var19 = memory[0x03a0:0x03c0];\n            var var20 = memory[0x03c0:0x03e0];\n            var var21 = memory[0x03e0:0x0400];\n            var var22 = memory[0x0400:0x0420];\n            var var23 = memory[0x0420:0x0440];\n            var var24 = memory[0x0440:0x0460];\n            var var25 = memory[0x0460:0x0480];\n            var var26 = memory[0x0480:0x04a0];\n            var var27 = memory[0x04a0:0x04c0];\n            var var28 = memory[0x04c0:0x04e0];\n            var var29 = memory[0x04e0:0x0500];\n            var var30 = memory[0x0500:0x0520];\n            var var31 = memory[0x0520:0x0540];\n            var var32 = memory[0x0540:0x0560];\n            var var33 = memory[0x0560:0x0580];\n            var var34 = memory[0x0580:0x05a0];\n            var var35 = memory[0x05a0:0x05c0];\n            var var36 = memory[0x05c0:0x05e0];\n            var var37 = memory[0x05e0:0x0600];\n            var var38 = memory[0x0600:0x0620];\n            var var39 = memory[0x0620:0x0640];\n            memory[0x0640:0x0660] = 0x092863fe;\n            memory[0x0660:0x0680] = memory[0x0140:0x0160];\n            memory[0x0680:0x06a0] = memory[0x0160:0x0180];\n            memory[0x06a0:0x06c0] = memory[0x0180:0x01a0];\n            memory[0x06c0:0x06e0] = msg.sender;\n            var var40 = memory[0x06c0:0x06e0];\n            var var41 = memory[0x06a0:0x06c0];\n            var var42 = memory[0x0680:0x06a0];\n            var var43 = memory[0x0660:0x0680];\n            var var44 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x095ea7b3) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (memory[0x0180:0x01a0] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] == memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])] == msg.sender;\n            memory[0xe0:0x0100] = memory[0x0180:0x01a0];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp5 = keccak256(memory[0xc0:0xe0]) + 0x01;\n            memory[0xe0:0x0100] = msg.sender;\n            memory[0xc0:0xe0] = temp5;\n            memory[0x01c0:0x01e0] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (!(memory[0x01a0:0x01c0] | memory[0x01c0:0x01e0])) { revert(memory[0x00:0x00]); }\n        \n            var temp6 = memory[0x0140:0x0160];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x01;\n            storage[keccak256(memory[0xc0:0x0100])] = temp6;\n            log(memory[0x00:0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, memory[0x0180:0x01a0], memory[0x0140:0x0160], memory[0x0160:0x0180]]);\n            stop();\n        } else if (memory[0x00:0x20] == 0xa22cb465) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x24:0x44];\n        \n            if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] == msg.sender) { revert(memory[0x00:0x00]); }\n        \n            var temp3 = memory[0x0160:0x0180];\n            memory[0xe0:0x0100] = msg.sender;\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp4 = keccak256(memory[0xc0:0xe0]) + 0x01;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = temp4;\n            storage[keccak256(memory[0xc0:0x0100])] = temp3;\n            memory[0x0180:0x01a0] = memory[0x0160:0x0180];\n            log(memory[0x0180:0x01a0], [0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, msg.sender, memory[0x0140:0x0160]]);\n            stop();\n        } else if (memory[0x00:0x20] == 0x40c10f19) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            memory[0x0180:0x01a0] = 0xff5ce378;\n            memory[0x01a0:0x01c0] = memory[0x0140:0x0160];\n            memory[0x01c0:0x01e0] = memory[0x0160:0x0180];\n            var2 = memory[0x01c0:0x01e0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x42966c68) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0160:0x0180] = 0x4cdc9549;\n            memory[0x0180:0x01a0] = msg.sender;\n            memory[0x01a0:0x01c0] = memory[0x0140:0x0160];\n            var temp2;\n            temp2, memory[0x0200:0x0220] = address(address(this)).call.gas(msg.gas)(memory[0x017c:0x01c0]);\n        \n            if (!temp2) { revert(memory[0x00:0x00]); }\n        \n            if (!memory[0x0200:0x0220]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x0220:0x0240] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (memory[0x0220:0x0240] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var var1 = memory[0x0160:0x0180];\n            var var2 = memory[0x0180:0x01a0];\n            var var3 = memory[0x01a0:0x01c0];\n            var var4 = memory[0x01c0:0x01e0];\n            var var5 = memory[0x01e0:0x0200];\n            var var6 = memory[0x0200:0x0220];\n            var var7 = memory[0x0220:0x0240];\n            memory[0x0240:0x0260] = 0x91127c1f;\n            memory[0x0260:0x0280] = memory[0x0220:0x0240];\n            memory[0x0280:0x02a0] = memory[0x0140:0x0160];\n            var var8 = memory[0x0280:0x02a0];\n            var var9 = memory[0x0260:0x0280];\n            var var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xab649b0a) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x0f03a7ff) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x01;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x46692f51) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x02;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] != 0x07546172) {\n            if (memory[0x00:0x20] == 0xf5268bb5) {\n                memory[0x0140:0x0160] = msg.data[0x04:0x24];\n            \n                if (msg.value) { revert(memory[0x00:0x00]); }\n            \n                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                memory[0xc0:0xe0] = 0x04;\n                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                return memory[0x00:0x20];\n            } else if (memory[0x00:0x20] != 0x18160ddd) {\n                if (memory[0x00:0x20] == 0x647f0779) {\n                    memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x07;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0xd6fc4b46) {\n                    memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x09;\n                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0xbf3a3e01) {\n                    memory[0x0140:0x0180] = msg.data[0x04:0x44];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x24:0x44];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x09;\n                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                    var temp1 = keccak256(memory[0xc0:0xe0]) + 0x01;\n                    memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                    memory[0xc0:0xe0] = temp1;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] != 0x157cee46) { revert(memory[0x00:0x00]); }\n                else {\n                    memory[0x0140:0x0180] = msg.data[0x04:0x44];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x09;\n                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                    var temp0 = keccak256(memory[0xc0:0xe0]) + 0x02;\n                    memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                    memory[0xc0:0xe0] = temp0;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                }\n            } else if (!msg.value) {\n                memory[0x00:0x20] = storage[0x05];\n                return memory[0x00:0x20];\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x00:0x20] = storage[0x03];\n            return memory[0x00:0x20];\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] == 0xf1753550) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x04;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x70a08231) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x6352211e) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (memory[0x0160:0x0180] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            memory[0x00:0x20] = memory[0x0160:0x0180];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x081812fc) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x00;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x01;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0xe985e9c5) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x24:0x44];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp27 = keccak256(memory[0xc0:0xe0]) + 0x01;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = temp27;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x4cdc9549) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0x0100])];\n            memory[0x01a0:0x01c0] = memory[0x0180:0x01a0] == memory[0x0140:0x0160];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x01;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160] == storage[keccak256(memory[0xc0:0x0100])];\n            memory[0x0200:0x0220] = 0xe985e9c5;\n            memory[0x0220:0x0240] = memory[0x0180:0x01a0];\n            memory[0x0240:0x0260] = memory[0x0140:0x0160];\n            var temp26;\n            temp26, memory[0x02a0:0x02c0] = address(address(this)).call.gas(msg.gas)(memory[0x021c:0x0260]);\n        \n            if (!temp26) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01e0:0x0200] = memory[0x02a0:0x02c0];\n            memory[0x00:0x20] = memory[0x01a0:0x01c0] | memory[0x01c0:0x01e0] | memory[0x01e0:0x0200];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x4f6ccce7) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] >= storage[0x05]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x06;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0xadfb83a6) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x00;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x08;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x2f745c59) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0180:0x01a0] = 0x70a08231;\n            memory[0x01a0:0x01c0] = memory[0x0140:0x0160];\n            var temp24;\n            temp24, memory[0x0200:0x0220] = address(address(this)).call.gas(msg.gas)(memory[0x019c:0x01c0]);\n        \n            if (!temp24) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0160:0x0180] >= memory[0x0200:0x0220]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp25 = keccak256(memory[0xc0:0xe0]) + 0x02;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = temp25;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (0x00) {\n            memory[0x0180:0x01a0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n        \n            var temp18 = memory[0x0140:0x0160];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n            storage[keccak256(memory[0xc0:0x0100])] = temp18;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0xe0])];\n            var temp19 = memory[0x01a0:0x01c0];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x08;\n            storage[keccak256(memory[0xc0:0x0100])] = temp19;\n            var temp20 = memory[0x0160:0x0180];\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp21 = keccak256(memory[0xc0:0xe0]) + 0x02;\n            memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n            memory[0xc0:0xe0] = temp21;\n            storage[keccak256(memory[0xc0:0x0100])] = temp20;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp22 = keccak256(memory[0xc0:0xe0]);\n            var-3 = temp22;\n        \n            if (storage[var-3] + 0x01 < storage[var-3]) { revert(memory[0x00:0x00]); }\n        \n            var temp23 = var-3;\n            storage[temp23] = storage[temp23] + 0x01;\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0180:0x01a0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            var temp11 = memory[0x0140:0x0160];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])] != temp11) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var-3 = keccak256(memory[0xc0:0xe0]);\n        \n            if (storage[var-3] < 0x01) { revert(memory[0x00:0x00]); }\n        \n            var temp12 = var-3;\n            storage[temp12] = storage[temp12] - 0x01;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0xe0])];\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp13 = keccak256(memory[0xc0:0xe0]) + 0x02;\n            memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n            memory[0xc0:0xe0] = temp13;\n            memory[0x01c0:0x01e0] = storage[keccak256(memory[0xc0:0x0100])];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x08;\n            memory[0x01e0:0x0200] = storage[keccak256(memory[0xc0:0x0100])];\n            var temp14 = memory[0x01e0:0x0200];\n            memory[0xe0:0x0100] = memory[0x01c0:0x01e0];\n            memory[0xc0:0xe0] = 0x08;\n            storage[keccak256(memory[0xc0:0x0100])] = temp14;\n            var temp15 = memory[0x01c0:0x01e0];\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp16 = keccak256(memory[0xc0:0xe0]) + 0x02;\n            memory[0xe0:0x0100] = memory[0x01e0:0x0200];\n            memory[0xc0:0xe0] = temp16;\n            storage[keccak256(memory[0xc0:0x0100])] = temp15;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp17 = keccak256(memory[0xc0:0xe0]) + 0x02;\n            memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n            memory[0xc0:0xe0] = temp17;\n            storage[keccak256(memory[0xc0:0x0100])] = 0x05;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x08;\n            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x08;\n            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0180:0x01a0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            var temp10 = memory[0x0140:0x0160];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])] != temp10) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x01;\n        \n            if (storage[keccak256(memory[0xc0:0x0100])] == 0x00) {\n                // Error: Could not resolve jump destination!\n            } else {\n                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                memory[0xc0:0xe0] = 0x01;\n                storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                // Error: Could not resolve jump destination!\n            }\n        } else if (0x00) {\n            // Error: StackRead before write???\n            var var-3;\n            // Error: StackRead before write???\n            var var-1;\n            // Error: StackRead before write???\n            var var-5;\n            // Error: StackRead before write???\n            var var-4;\n            // Error: StackRead before write???\n            var var-2;\n            memory[0x01c0:0x01e0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01e0:0x0200] = 0x4cdc9549;\n            memory[0x0200:0x0220] = memory[0x01a0:0x01c0];\n            memory[0x0220:0x0240] = memory[0x0180:0x01a0];\n            var temp9;\n            temp9, memory[0x0280:0x02a0] = address(address(this)).call.gas(msg.gas)(memory[0x01fc:0x0240]);\n        \n            if (!temp9) { revert(memory[0x00:0x00]); }\n        \n            if (!memory[0x0280:0x02a0]) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0160:0x0180] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            var-5 = memory[0x0140:0x0160];\n            var-4 = memory[0x0160:0x0180];\n            var-3 = memory[0x0180:0x01a0];\n            var-2 = memory[0x01a0:0x01c0];\n            var-1 = memory[0x01c0:0x01e0];\n            var0 = memory[0x01e0:0x0200];\n            var1 = memory[0x0200:0x0220];\n            var2 = memory[0x0220:0x0240];\n            var3 = memory[0x0240:0x0260];\n            var4 = memory[0x0260:0x0280];\n            var5 = memory[0x0280:0x02a0];\n            memory[0x02a0:0x02c0] = 0x91127c1f;\n            memory[0x02c0:0x02e0] = memory[0x0140:0x0160];\n            memory[0x02e0:0x0300] = memory[0x0180:0x01a0];\n            var6 = memory[0x02e0:0x0300];\n            var7 = memory[0x02c0:0x02e0];\n            var8 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x23b872dd) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x24:0x44];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            memory[0x01a0:0x01c0] = 0x092863fe;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n            memory[0x01e0:0x0200] = memory[0x0160:0x0180];\n            memory[0x0200:0x0220] = memory[0x0180:0x01a0];\n            memory[0x0220:0x0240] = memory[0x0140:0x0160];\n            var3 = memory[0x0220:0x0240];\n            var4 = memory[0x0200:0x0220];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x01c0:0x01e0];\n            var7 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x42842e0e) {\n            memory[0x0600:0x0620] = 0x00;\n            var0 = 0x0600;\n            var temp7 = memory[var0:var0 + 0x20] + 0x20;\n            var1 = temp7;\n            var temp8;\n            temp8, memory[0x01c0:0x01c0 + var1] = address(0x04).call.gas(var1 / 0x0a + 0x12)(memory[var0:var0 + var1]);\n        \n            if (temp8) { goto label_0B19; }\n            else { revert(memory[0x00:0x00]); }\n        } else if (memory[0x00:0x20] == 0xb88d4fde) {\n            memory[0x01c0:0x05e0] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0420];\n        \n            if (msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x20] > 0x0400) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01c0:0x0600] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0440];\n            goto label_0B19;\n        } else if (0x00) {\n        label_0B19:\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x24:0x44];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            var8 = memory[0x0240:0x0260];\n            var9 = memory[0x0260:0x0280];\n            var10 = memory[0x0280:0x02a0];\n            var var11 = memory[0x02a0:0x02c0];\n            var var12 = memory[0x02c0:0x02e0];\n            var var13 = memory[0x02e0:0x0300];\n            var var14 = memory[0x0300:0x0320];\n            var var15 = memory[0x0320:0x0340];\n            var var16 = memory[0x0340:0x0360];\n            var var17 = memory[0x0360:0x0380];\n            var var18 = memory[0x0380:0x03a0];\n            var var19 = memory[0x03a0:0x03c0];\n            var var20 = memory[0x03c0:0x03e0];\n            var var21 = memory[0x03e0:0x0400];\n            var var22 = memory[0x0400:0x0420];\n            var var23 = memory[0x0420:0x0440];\n            var var24 = memory[0x0440:0x0460];\n            var var25 = memory[0x0460:0x0480];\n            var var26 = memory[0x0480:0x04a0];\n            var var27 = memory[0x04a0:0x04c0];\n            var var28 = memory[0x04c0:0x04e0];\n            var var29 = memory[0x04e0:0x0500];\n            var var30 = memory[0x0500:0x0520];\n            var var31 = memory[0x0520:0x0540];\n            var var32 = memory[0x0540:0x0560];\n            var var33 = memory[0x0560:0x0580];\n            var var34 = memory[0x0580:0x05a0];\n            var var35 = memory[0x05a0:0x05c0];\n            var var36 = memory[0x05c0:0x05e0];\n            var var37 = memory[0x05e0:0x0600];\n            var var38 = memory[0x0600:0x0620];\n            var var39 = memory[0x0620:0x0640];\n            memory[0x0640:0x0660] = 0x092863fe;\n            memory[0x0660:0x0680] = memory[0x0140:0x0160];\n            memory[0x0680:0x06a0] = memory[0x0160:0x0180];\n            memory[0x06a0:0x06c0] = memory[0x0180:0x01a0];\n            memory[0x06c0:0x06e0] = msg.sender;\n            var var40 = memory[0x06c0:0x06e0];\n            var var41 = memory[0x06a0:0x06c0];\n            var var42 = memory[0x0680:0x06a0];\n            var var43 = memory[0x0660:0x0680];\n            var var44 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x095ea7b3) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (memory[0x0180:0x01a0] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] == memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])] == msg.sender;\n            memory[0xe0:0x0100] = memory[0x0180:0x01a0];\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp5 = keccak256(memory[0xc0:0xe0]) + 0x01;\n            memory[0xe0:0x0100] = msg.sender;\n            memory[0xc0:0xe0] = temp5;\n            memory[0x01c0:0x01e0] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (!(memory[0x01a0:0x01c0] | memory[0x01c0:0x01e0])) { revert(memory[0x00:0x00]); }\n        \n            var temp6 = memory[0x0140:0x0160];\n            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n            memory[0xc0:0xe0] = 0x01;\n            storage[keccak256(memory[0xc0:0x0100])] = temp6;\n            log(memory[0x00:0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, memory[0x0180:0x01a0], memory[0x0140:0x0160], memory[0x0160:0x0180]]);\n            stop();\n        } else if (memory[0x00:0x20] == 0xa22cb465) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x24:0x44];\n        \n            if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] == msg.sender) { revert(memory[0x00:0x00]); }\n        \n            var temp3 = memory[0x0160:0x0180];\n            memory[0xe0:0x0100] = msg.sender;\n            memory[0xc0:0xe0] = 0x09;\n            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            var temp4 = keccak256(memory[0xc0:0xe0]) + 0x01;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = temp4;\n            storage[keccak256(memory[0xc0:0x0100])] = temp3;\n            memory[0x0180:0x01a0] = memory[0x0160:0x0180];\n            log(memory[0x0180:0x01a0], [0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, msg.sender, memory[0x0140:0x0160]]);\n            stop();\n        } else if (memory[0x00:0x20] == 0x40c10f19) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            memory[0x0180:0x01a0] = 0xff5ce378;\n            memory[0x01a0:0x01c0] = memory[0x0140:0x0160];\n            memory[0x01c0:0x01e0] = memory[0x0160:0x0180];\n            var2 = memory[0x01c0:0x01e0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x42966c68) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0160:0x0180] = 0x4cdc9549;\n            memory[0x0180:0x01a0] = msg.sender;\n            memory[0x01a0:0x01c0] = memory[0x0140:0x0160];\n            var temp2;\n            temp2, memory[0x0200:0x0220] = address(address(this)).call.gas(msg.gas)(memory[0x017c:0x01c0]);\n        \n            if (!temp2) { revert(memory[0x00:0x00]); }\n        \n            if (!memory[0x0200:0x0220]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x0220:0x0240] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (memory[0x0220:0x0240] == 0x00) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var var1 = memory[0x0160:0x0180];\n            var var2 = memory[0x0180:0x01a0];\n            var var3 = memory[0x01a0:0x01c0];\n            var var4 = memory[0x01c0:0x01e0];\n            var var5 = memory[0x01e0:0x0200];\n            var var6 = memory[0x0200:0x0220];\n            var var7 = memory[0x0220:0x0240];\n            memory[0x0240:0x0260] = 0x91127c1f;\n            memory[0x0260:0x0280] = memory[0x0220:0x0240];\n            memory[0x0280:0x02a0] = memory[0x0140:0x0160];\n            var var8 = memory[0x0280:0x02a0];\n            var var9 = memory[0x0260:0x0280];\n            var var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xab649b0a) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x00;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x0f03a7ff) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x01;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] == 0x46692f51) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x02;\n            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n            return memory[0x00:0x20];\n        } else if (memory[0x00:0x20] != 0x07546172) {\n            if (memory[0x00:0x20] == 0xf5268bb5) {\n                memory[0x0140:0x0160] = msg.data[0x04:0x24];\n            \n                if (msg.value) { revert(memory[0x00:0x00]); }\n            \n                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                memory[0xc0:0xe0] = 0x04;\n                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                return memory[0x00:0x20];\n            } else if (memory[0x00:0x20] != 0x18160ddd) {\n                if (memory[0x00:0x20] == 0x647f0779) {\n                    memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x07;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0xd6fc4b46) {\n                    memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x09;\n                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0xbf3a3e01) {\n                    memory[0x0140:0x0180] = msg.data[0x04:0x44];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x24:0x44];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x09;\n                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                    var temp1 = keccak256(memory[0xc0:0xe0]) + 0x01;\n                    memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                    memory[0xc0:0xe0] = temp1;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] != 0x157cee46) { revert(memory[0x00:0x00]); }\n                else {\n                    memory[0x0140:0x0180] = msg.data[0x04:0x44];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x09;\n                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                    var temp0 = keccak256(memory[0xc0:0xe0]) + 0x02;\n                    memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                    memory[0xc0:0xe0] = temp0;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                }\n            } else if (!msg.value) {\n                memory[0x00:0x20] = storage[0x05];\n                return memory[0x00:0x20];\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x00:0x20] = storage[0x03];\n            return memory[0x00:0x20];\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
	"status": "1",
	"time_cost": 27.02466917037964,
	"usage": {
		"completion_tokens": 329,
		"prompt_tokens": 11746,
		"total_tokens": 12075
	}
}