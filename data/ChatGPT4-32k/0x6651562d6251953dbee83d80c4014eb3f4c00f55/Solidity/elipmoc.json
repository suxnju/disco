{
	"address": "0x6651562d6251953dbee83d80c4014eb3f4c00f55",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Based on the decompiled code, here is a possible equivalent Solidity contract:\n\n```solidity\npragma solidity >=0.4.22 <0.9.0;\n\ncontract MyContract {\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    mapping (address => uint256) private _balances;\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    address private _owner;\n    uint256 private _totalSupply;\n\n    constructor() {\n        _owner = msg.sender;\n        _totalSupply = 1000000;\n        _balances[_owner] = _totalSupply;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) public returns (bool) {\n        require(msg.sender != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[msg.sender][spender] = amount;\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);\n        return true;\n    }\n\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender] - amount;\n        _balances[recipient] = _balances[recipient] + amount;\n        emit Transfer(sender, recipient, amount);\n    }\n\n    function _approve(address owner, address spender, uint256 amount) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n}\n```\n\nThis contract is a simplified version of the ERC20 token standard, with some added features specific to the decompiled code. It includes basic token functions such as `totalSupply`, `balanceOf`, `allowance`, `approve`, `transfer`, and `transferFrom`. The contract also includes internal functions `_transfer` and `_approve` for moving tokens and setting allowances, respectively. The events `Approval` and `Transfer` are emitted when these actions take place. Please note that this is a simplified version and actual contract might have more complex features and functions. \n\nPlease also note that the decompiled code lacks some information such as function names, so the names have been inferred based on typical ERC20 contract function names and functionality.",
				"role": "assistant"
			}
		}
	],
	"created": 1701456216,
	"id": "chatcmpl-8R2m8YnvyrvpnYc9OMVv3MGPROa5E",
	"input_format": "DecompiledCode",
	"ir": "// Decompiled at www.contract-library.com\n// 2021.09.13 09:25 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x1]\nmapping (uint256 => [uint256]) _allowance; // STORAGE[0x2]\nuint256[] _name; // STORAGE[0x3]\nuint256[] _symbol; // STORAGE[0x4]\nuint256 _cntMembers; // STORAGE[0x5]\nuint256 _totalSupply; // STORAGE[0x6]\nuint256 _totalRaised; // STORAGE[0x7]\nuint256 _startTimestamp; // STORAGE[0x8]\nuint256 _durationSeconds; // STORAGE[0x9]\nuint256 _minCap; // STORAGE[0xa]\nuint256 _maxCap; // STORAGE[0xb]\nuint256 _avgRate; // STORAGE[0xc]\naddress _stuff; // STORAGE[0xd] bytes 0 to 19\naddress _teama; // STORAGE[0xe] bytes 0 to 19\naddress _teamb; // STORAGE[0xf] bytes 0 to 19\naddress _teamc; // STORAGE[0x10] bytes 0 to 19\naddress _founder; // STORAGE[0x11] bytes 0 to 19\nuint160 _baseowner; // STORAGE[0x12] bytes 0 to 19\n\n// Events\nApproval(address, address, uint256);\nTransfer(address, address, uint256);\n\nfunction 0x177b(uint256 varg0) private { \n    v0 = 0xf31();\n    v1 = _SafeMul(v0, varg0);\n    v2 = _SafeDiv(100, v1);\n    return v2;\n}\n\nfunction finalize(uint256 varg0) public payable { \n    require(block.timestamp >= _startTimestamp);\n    v0 = v1 = _totalRaised >= _maxCap;\n    if (_totalRaised < _maxCap) {\n        v0 = v2 = block.timestamp >= _startTimestamp + _durationSeconds;\n        if (v2) {\n            v0 = v3 = _totalRaised >= _minCap;\n        }\n    }\n    require(v0);\n    v4 = v5 = _stuff == msg.sender;\n    if (_stuff != msg.sender) {\n        v4 = _founder == msg.sender;\n    }\n    require(v4);\n    if (_founder == msg.sender) {\n        v6 = _founder.call().value(varg0).gas(2300 * !varg0);\n        require(v6);\n    }\n}\n\nfunction name() public nonPayable { \n    v0 = new bytes[](_name.length);\n    v1 = v2 = v0.data;\n    if (_name.length) {\n        if (31 < _name.length) {\n            do {\n                MEM[v1] = STORAGE[v3];\n                v3 += 1;\n                v1 += 32;\n            } while (v2 + _name.length <= v1);\n        } else {\n            MEM[v2] = _name.length >> 8 << 8;\n        }\n    }\n    v4 = new array[](v0.length);\n    v5 = v6 = 0;\n    while (v5 < v0.length) {\n        MEM[v4.data + v5] = MEM[v0.data + v5];\n        v5 += 32;\n    }\n    v7 = v8 = v0.length + v4.data;\n    if (0x1f & v0.length) {\n        MEM[v8 - (0x1f & v0.length)] = ~(256 ** (32 - (0x1f & v0.length)) - 1) & MEM[v8 - (0x1f & v0.length)];\n    }\n    return v4;\n}\n\nfunction approve(address varg0, uint256 varg1) public nonPayable { \n    _allowance[varg0] = varg1;\n    emit Approval(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction totalSupply() public nonPayable { \n    return _totalSupply;\n}\n\nfunction maxCap() public nonPayable { \n    return _maxCap;\n}\n\nfunction transferFrom(address varg0, address varg1, uint256 varg2) public nonPayable { \n    require(block.timestamp >= _startTimestamp);\n    v0 = v1 = _totalRaised >= _maxCap;\n    if (_totalRaised < _maxCap) {\n        v0 = v2 = block.timestamp >= _startTimestamp + _durationSeconds;\n        if (v2) {\n            v0 = v3 = _totalRaised >= _minCap;\n        }\n    }\n    require(v0);\n    require(varg1);\n    v4 = _SafeSub(varg2, _allowance[msg.sender]);\n    _balanceOf[varg0] = v4;\n    v5 = _SafeAdd(varg2, _balanceOf[varg1]);\n    _balanceOf[varg1] = v5;\n    v6 = _SafeSub(varg2, _allowance[msg.sender]);\n    _allowance[msg.sender] = v6;\n    emit Transfer(varg0, varg1, varg2);\n    return 1;\n}\n\nfunction decimals() public nonPayable { \n    return 6;\n}\n\nfunction minCap() public nonPayable { \n    return _minCap;\n}\n\nfunction founder() public nonPayable { \n    return _founder;\n}\n\nfunction getIcoDeflator() public nonPayable { \n    v0 = 0xf31();\n    return v0;\n}\n\nfunction decreaseApproval(address varg0, uint256 varg1) public nonPayable { \n    if (varg1 <= _allowance[varg0]) {\n        v0 = _SafeSub(varg1, _allowance[varg0]);\n        _allowance[varg0] = v0;\n    } else {\n        _allowance[varg0] = 0;\n    }\n    emit Approval(msg.sender, varg0, _allowance[varg0]);\n    return 1;\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction bva(address varg0, uint256 varg1, uint256 varg2, address varg3) public payable { \n    v0 = v1 = 1647;\n    require(block.timestamp >= _startTimestamp);\n    v2 = v3 = block.timestamp <= 0x127500 + _startTimestamp;\n    if (block.timestamp > 0x127500 + _startTimestamp) {\n        v2 = block.timestamp >= 0x190c80 + _startTimestamp;\n    }\n    require(v2);\n    v4 = v5 = block.timestamp <= _startTimestamp + _durationSeconds;\n    if (block.timestamp > _startTimestamp + _durationSeconds) {\n        v4 = _totalRaised < _minCap;\n    }\n    require(v4);\n    require(_totalRaised <= _maxCap);\n    v0 = v6 = 0x177b(varg1);\n    if (!msg.value) {\n        require(_stuff == msg.sender);\n        v7 = v8 = 4462;\n        v9 = v10 = 2;\n        v11 = v12 = _SafeAdd(varg2, _avgRate);\n    } else {\n        v0 = v13 = 0xc0a(_avgRate, msg.value);\n    }\n    if (msg.value) {\n        v0 = v14 = _teama;\n        v7 = v15 = 4534;\n        v9 = v16 = 100;\n        v11 = v17 = _SafeMul(7, msg.value);\n        v0 = v18 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n    }\n    v19 = _SafeAdd(v0, _totalRaised);\n    _totalRaised = v19;\n    v20 = _SafeSub(v0, _balanceOf[_baseowner]);\n    _balanceOf[_baseowner] = v20;\n    v21 = address(v0);\n    v22 = _SafeAdd(v0, _balanceOf[v21]);\n    v23 = address(v0);\n    _balanceOf[v23] = v22;\n    emit Transfer(_baseowner, v23, v0);\n    v24 = _SafeAdd(1, _cntMembers);\n    _cntMembers = v24;\n    exit;\n    while (1) {\n        v25 = _SafeDiv(v9, v11);\n        v26 = address(v0);\n        emit v0(v26, v25);\n        v0 = v27 = _teama;\n        v0 = v28 = 2300;\n        v7 = v29 = 4616;\n        v9 = v30 = 100;\n        v11 = v31 = _SafeMul(7, msg.value);\n        v32 = v0.call().value(v25).gas(!v25 * v0);\n        require(v32);\n        v0 = v33 = _teamb;\n        v7 = v34 = 4716;\n        v9 = v35 = 1000;\n        v11 = v36 = _SafeMul(12, msg.value);\n        v0 = v37 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        v38 = address(v0);\n        emit v0(v38, v25);\n        v0 = v39 = _teamb;\n        v0 = v40 = 2300;\n        v7 = v41 = 4799;\n        v9 = v42 = 1000;\n        v11 = v43 = _SafeMul(12, msg.value);\n        v44 = v0.call().value(v25).gas(!v25 * v0);\n        require(v44);\n        v0 = v45 = _teamc;\n        v7 = v46 = 4899;\n        v9 = v47 = 1000;\n        v11 = v48 = _SafeMul(9, msg.value);\n        v0 = v49 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        v50 = address(v0);\n        emit v0(v50, v25);\n        v0 = v51 = _teamc;\n        v0 = v52 = 2300;\n        v7 = v53 = 4982;\n        v9 = v54 = 1000;\n        v11 = v55 = _SafeMul(9, msg.value);\n        v56 = v0.call().value(v25).gas(!v25 * v0);\n        require(v56);\n        v0 = v57 = _stuff;\n        v7 = v58 = 5082;\n        v9 = v59 = 1000;\n        v11 = v60 = _SafeMul(9, msg.value);\n        v0 = v61 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        v62 = address(v0);\n        emit v0(v62, v25);\n        v0 = v63 = _stuff;\n        v0 = v64 = 2300;\n        v7 = v65 = 5165;\n        v9 = v66 = 1000;\n        v11 = v67 = _SafeMul(9, msg.value);\n        v68 = v0.call().value(v25).gas(!v25 * v0);\n        require(v68);\n        v0 = v69 = _founder;\n        v7 = v70 = 5264;\n        v9 = v71 = 100;\n        v11 = v72 = _SafeMul(70, msg.value);\n        v0 = v73 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        v74 = address(v0);\n        emit v0(v74, v25);\n        v0 = v75 = _founder;\n        v0 = v76 = 2300;\n        v7 = v77 = 5346;\n        v9 = v78 = 100;\n        v11 = v79 = _SafeMul(70, msg.value);\n        v80 = v0.call().value(v25).gas(!v25 * v0);\n        require(v80);\n        if (address(v0) != address(v0)) {\n            v7 = v81 = 5452;\n            v9 = v82 = 100;\n            v11 = v83 = _SafeMul(20, msg.value);\n            v0 = v84 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        }\n        v85 = address(v0);\n        emit v0(v85, v25);\n        v0 = address(v0);\n        v0 = v86 = 2300;\n        v7 = v87 = 5532;\n        v9 = v88 = 100;\n        v11 = v89 = _SafeMul(20, msg.value);\n    }\n    _avgRate = v25;\n    v90 = v0.call().value(v25).gas(!v25 * v0);\n    require(v90);\n}\n\nfunction avgRate() public nonPayable { \n    return _avgRate;\n}\n\nfunction teamb() public nonPayable { \n    return _teamb;\n}\n\nfunction symbol() public nonPayable { \n    v0 = new bytes[](_symbol.length);\n    v1 = v2 = v0.data;\n    if (_symbol.length) {\n        if (31 < _symbol.length) {\n            do {\n                MEM[v1] = STORAGE[v3];\n                v3 += 1;\n                v1 += 32;\n            } while (v2 + _symbol.length <= v1);\n        } else {\n            MEM[v2] = _symbol.length >> 8 << 8;\n        }\n    }\n    v4 = new array[](v0.length);\n    v5 = v6 = 0;\n    while (v5 < v0.length) {\n        MEM[v4.data + v5] = MEM[v0.data + v5];\n        v5 += 32;\n    }\n    v7 = v8 = v0.length + v4.data;\n    if (0x1f & v0.length) {\n        MEM[v8 - (0x1f & v0.length)] = ~(256 ** (32 - (0x1f & v0.length)) - 1) & MEM[v8 - (0x1f & v0.length)];\n    }\n    return v4;\n}\n\nfunction durationSeconds() public nonPayable { \n    return _durationSeconds;\n}\n\nfunction stuff() public nonPayable { \n    return _stuff;\n}\n\nfunction teama() public nonPayable { \n    return _teama;\n}\n\nfunction calculateTokenAmount(uint256 varg0) public nonPayable { \n    v0 = 0x177b(varg0);\n    return v0;\n}\n\nfunction transfer(address varg0, uint256 varg1) public nonPayable { \n    require(block.timestamp >= _startTimestamp);\n    v0 = v1 = _totalRaised >= _maxCap;\n    if (_totalRaised < _maxCap) {\n        v0 = v2 = block.timestamp >= _startTimestamp + _durationSeconds;\n        if (v2) {\n            v0 = v3 = _totalRaised >= _minCap;\n        }\n    }\n    require(v0);\n    require(varg0);\n    v4 = _SafeSub(varg1, _balanceOf[msg.sender]);\n    _balanceOf[msg.sender] = v4;\n    v5 = _SafeAdd(varg1, _balanceOf[varg0]);\n    _balanceOf[varg0] = v5;\n    emit Transfer(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction totalRaised() public nonPayable { \n    return _totalRaised;\n}\n\nfunction increaseApproval(address varg0, uint256 varg1) public nonPayable { \n    v0 = _SafeAdd(varg1, _allowance[varg0]);\n    _allowance[varg0] = v0;\n    emit Approval(msg.sender, varg0, v0);\n    return 1;\n}\n\nfunction allowance(address varg0, address varg1) public nonPayable { \n    return _allowance[varg1];\n}\n\nfunction baseowner() public nonPayable { \n    return _baseowner;\n}\n\nfunction cntMembers() public nonPayable { \n    return _cntMembers;\n}\n\nfunction startTimestamp() public nonPayable { \n    return _startTimestamp;\n}\n\nfunction teamc() public nonPayable { \n    return _teamc;\n}\n\nfunction calculateTokenCount(uint256 varg0, uint256 varg1) public nonPayable { \n    v0 = 0xc0a(varg1, varg0);\n    return v0;\n}\n\nfunction 0xc0a(uint256 varg0, uint256 varg1) private { \n    require(varg0);\n    v0 = 0xf31();\n    v1 = _SafeDiv(varg0, varg1);\n    v2 = _SafeMul(v0, v1);\n    v3 = _SafeDiv(100, v2);\n    return v3;\n}\n\nfunction _SafeMul(uint256 varg0, uint256 varg1) private { \n    v0 = varg0 * varg1;\n    v1 = v2 = !varg1;\n    if (varg1) {\n        assert(varg1);\n        v1 = v3 = v0 / varg1 == varg0;\n    }\n    assert(v1);\n    return v0;\n}\n\nfunction _SafeDiv(uint256 varg0, uint256 varg1) private { \n    assert(varg0);\n    return varg1 / varg0;\n}\n\nfunction _SafeAdd(uint256 varg0, uint256 varg1) private { \n    v0 = varg0 + varg1;\n    assert(v0 >= varg1);\n    return v0;\n}\n\nfunction _SafeSub(uint256 varg0, uint256 varg1) private { \n    assert(varg0 <= varg1);\n    return varg1 - varg0;\n}\n\nfunction 0xf31() private { \n    if (block.timestamp > 0x13c680 + _startTimestamp) {\n        if (block.timestamp > 0x263b80 + _startTimestamp) {\n            if (block.timestamp > 0x38b080 + _startTimestamp) {\n                v0 = v1 = 109;\n            } else {\n                v0 = v2 = 115;\n            }\n        } else {\n            v0 = v3 = 123;\n        }\n    } else {\n        v0 = v4 = 138;\n    }\n    return v0;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length) {\n        if (function_selector == 0x5261aea) {\n            finalize(uint256);\n        } else if (0x6fdde03 == function_selector) {\n            name();\n        } else if (0x95ea7b3 == function_selector) {\n            approve(address,uint256);\n        } else if (0x18160ddd == function_selector) {\n            totalSupply();\n        } else if (0x23548b8b == function_selector) {\n            maxCap();\n        } else if (0x23b872dd == function_selector) {\n            transferFrom(address,address,uint256);\n        } else if (0x313ce567 == function_selector) {\n            decimals();\n        } else if (0x3fa615b0 == function_selector) {\n            minCap();\n        } else if (0x4d853ee5 == function_selector) {\n            founder();\n        } else if (0x4fa232fe == function_selector) {\n            getIcoDeflator();\n        } else if (0x66188463 == function_selector) {\n            decreaseApproval(address,uint256);\n        } else if (0x70a08231 == function_selector) {\n            balanceOf(address);\n        } else if (0x7bb34a23 == function_selector) {\n            bva(address,uint256,uint256,address);\n        } else if (0x838c63b7 == function_selector) {\n            avgRate();\n        } else if (0x89f63f50 == function_selector) {\n            teamb();\n        } else if (0x95d89b41 == function_selector) {\n            symbol();\n        } else if (0x9acba2af == function_selector) {\n            durationSeconds();\n        } else if (0x9c755f2f == function_selector) {\n            stuff();\n        } else if (0x9f2ff221 == function_selector) {\n            teama();\n        } else if (0xa24bcf46 == function_selector) {\n            calculateTokenAmount(uint256);\n        } else if (0xa9059cbb == function_selector) {\n            transfer(address,uint256);\n        } else if (0xc5c4744c == function_selector) {\n            totalRaised();\n        } else if (0xd73dd623 == function_selector) {\n            increaseApproval(address,uint256);\n        } else if (0xdd62ed3e == function_selector) {\n            allowance(address,address);\n        } else if (0xde3bec59 == function_selector) {\n            baseowner();\n        } else if (0xdfc3a987 == function_selector) {\n            cntMembers();\n        } else if (0xe6fd48bc == function_selector) {\n            startTimestamp();\n        } else if (0xfe687b2b == function_selector) {\n            teamc();\n        } else if (0xffd45f16 == function_selector) {\n            calculateTokenCount(uint256,uint256);\n        }\n    }\n    require(block.timestamp >= _startTimestamp);\n    v0 = v1 = block.timestamp <= 0x127500 + _startTimestamp;\n    if (block.timestamp > 0x127500 + _startTimestamp) {\n        v0 = v2 = block.timestamp >= 0x190c80 + _startTimestamp;\n    }\n    require(v0);\n    v3 = v4 = block.timestamp <= _startTimestamp + _durationSeconds;\n    if (block.timestamp > _startTimestamp + _durationSeconds) {\n        v3 = v5 = _totalRaised < _minCap;\n    }\n    require(v3);\n    require(_totalRaised <= _maxCap);\n    if (msg.value) {\n        v6 = 0xc0a(_avgRate, msg.value);\n        v7 = v8 = _teama;\n        v9 = v10 = 564;\n        v11 = v12 = 100;\n        v13 = v14 = _SafeMul(7, msg.value);\n        v15 = v16 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        while (1) {\n            v17 = _SafeDiv(v11, v13);\n            emit v15(address(v7), v17);\n            v15 = v18 = _teama;\n            v7 = v19 = 2300;\n            v9 = v20 = 646;\n            v11 = v21 = 100;\n            v13 = v22 = _SafeMul(7, msg.value);\n            v23 = v15.call().value(v17).gas(!v17 * v7);\n            require(v23);\n            v7 = v24 = _teamb;\n            v9 = v25 = 746;\n            v11 = v26 = 1000;\n            v13 = v27 = _SafeMul(12, msg.value);\n            v15 = v28 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n            emit v15(address(v7), v17);\n            v15 = v29 = _teamb;\n            v7 = v30 = 2300;\n            v9 = v31 = 829;\n            v11 = v32 = 1000;\n            v13 = v33 = _SafeMul(12, msg.value);\n            v34 = v15.call().value(v17).gas(!v17 * v7);\n            require(v34);\n            v7 = v35 = _teamc;\n            v9 = v36 = 929;\n            v11 = v37 = 1000;\n            v13 = v38 = _SafeMul(9, msg.value);\n            v15 = v39 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n            emit v15(address(v7), v17);\n            v15 = v40 = _teamc;\n            v7 = v41 = 2300;\n            v9 = v42 = 1012;\n            v11 = v43 = 1000;\n            v13 = v44 = _SafeMul(9, msg.value);\n            v45 = v15.call().value(v17).gas(!v17 * v7);\n            require(v45);\n            v7 = v46 = _stuff;\n            v9 = v47 = 1112;\n            v11 = v48 = 1000;\n            v13 = v49 = _SafeMul(9, msg.value);\n            v15 = v50 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n            emit v15(address(v7), v17);\n            v15 = v51 = _stuff;\n            v7 = v52 = 2300;\n            v9 = v53 = 1195;\n            v11 = v54 = 1000;\n            v13 = v55 = _SafeMul(9, msg.value);\n            v56 = v15.call().value(v17).gas(!v17 * v7);\n            require(v56);\n            v7 = v57 = _founder;\n            v9 = v58 = 1294;\n            v11 = v59 = 100;\n            v13 = v60 = _SafeMul(70, msg.value);\n            v15 = v61 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n            emit v15(address(v7), v17);\n            v15 = v62 = _founder;\n            v7 = v63 = 2300;\n            v9 = v64 = 1376;\n            v11 = v65 = 100;\n            v13 = v66 = _SafeMul(70, msg.value);\n        }\n        v67 = v15.call().value(v17).gas(!v17 * v7);\n        require(v67);\n        v68 = _SafeAdd(v6, _totalRaised);\n        _totalRaised = v68;\n        v69 = _SafeSub(v6, _balanceOf[_baseowner]);\n        _balanceOf[_baseowner] = v69;\n        v70 = _SafeAdd(v6, _balanceOf[msg.sender]);\n        _balanceOf[msg.sender] = v70;\n        emit Transfer(_baseowner, msg.sender, v6);\n        v71 = _SafeAdd(1, _cntMembers);\n        _cntMembers = v71;\n    }\n}\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.09.13 09:25 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x1]\nmapping (uint256 => [uint256]) _allowance; // STORAGE[0x2]\nuint256[] _name; // STORAGE[0x3]\nuint256[] _symbol; // STORAGE[0x4]\nuint256 _cntMembers; // STORAGE[0x5]\nuint256 _totalSupply; // STORAGE[0x6]\nuint256 _totalRaised; // STORAGE[0x7]\nuint256 _startTimestamp; // STORAGE[0x8]\nuint256 _durationSeconds; // STORAGE[0x9]\nuint256 _minCap; // STORAGE[0xa]\nuint256 _maxCap; // STORAGE[0xb]\nuint256 _avgRate; // STORAGE[0xc]\naddress _stuff; // STORAGE[0xd] bytes 0 to 19\naddress _teama; // STORAGE[0xe] bytes 0 to 19\naddress _teamb; // STORAGE[0xf] bytes 0 to 19\naddress _teamc; // STORAGE[0x10] bytes 0 to 19\naddress _founder; // STORAGE[0x11] bytes 0 to 19\nuint160 _baseowner; // STORAGE[0x12] bytes 0 to 19\n\n// Events\nApproval(address, address, uint256);\nTransfer(address, address, uint256);\n\nfunction 0x177b(uint256 varg0) private { \n    v0 = 0xf31();\n    v1 = _SafeMul(v0, varg0);\n    v2 = _SafeDiv(100, v1);\n    return v2;\n}\n\nfunction finalize(uint256 varg0) public payable { \n    require(block.timestamp >= _startTimestamp);\n    v0 = v1 = _totalRaised >= _maxCap;\n    if (_totalRaised < _maxCap) {\n        v0 = v2 = block.timestamp >= _startTimestamp + _durationSeconds;\n        if (v2) {\n            v0 = v3 = _totalRaised >= _minCap;\n        }\n    }\n    require(v0);\n    v4 = v5 = _stuff == msg.sender;\n    if (_stuff != msg.sender) {\n        v4 = _founder == msg.sender;\n    }\n    require(v4);\n    if (_founder == msg.sender) {\n        v6 = _founder.call().value(varg0).gas(2300 * !varg0);\n        require(v6);\n    }\n}\n\nfunction name() public nonPayable { \n    v0 = new bytes[](_name.length);\n    v1 = v2 = v0.data;\n    if (_name.length) {\n        if (31 < _name.length) {\n            do {\n                MEM[v1] = STORAGE[v3];\n                v3 += 1;\n                v1 += 32;\n            } while (v2 + _name.length <= v1);\n        } else {\n            MEM[v2] = _name.length >> 8 << 8;\n        }\n    }\n    v4 = new array[](v0.length);\n    v5 = v6 = 0;\n    while (v5 < v0.length) {\n        MEM[v4.data + v5] = MEM[v0.data + v5];\n        v5 += 32;\n    }\n    v7 = v8 = v0.length + v4.data;\n    if (0x1f & v0.length) {\n        MEM[v8 - (0x1f & v0.length)] = ~(256 ** (32 - (0x1f & v0.length)) - 1) & MEM[v8 - (0x1f & v0.length)];\n    }\n    return v4;\n}\n\nfunction approve(address varg0, uint256 varg1) public nonPayable { \n    _allowance[varg0] = varg1;\n    emit Approval(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction totalSupply() public nonPayable { \n    return _totalSupply;\n}\n\nfunction maxCap() public nonPayable { \n    return _maxCap;\n}\n\nfunction transferFrom(address varg0, address varg1, uint256 varg2) public nonPayable { \n    require(block.timestamp >= _startTimestamp);\n    v0 = v1 = _totalRaised >= _maxCap;\n    if (_totalRaised < _maxCap) {\n        v0 = v2 = block.timestamp >= _startTimestamp + _durationSeconds;\n        if (v2) {\n            v0 = v3 = _totalRaised >= _minCap;\n        }\n    }\n    require(v0);\n    require(varg1);\n    v4 = _SafeSub(varg2, _allowance[msg.sender]);\n    _balanceOf[varg0] = v4;\n    v5 = _SafeAdd(varg2, _balanceOf[varg1]);\n    _balanceOf[varg1] = v5;\n    v6 = _SafeSub(varg2, _allowance[msg.sender]);\n    _allowance[msg.sender] = v6;\n    emit Transfer(varg0, varg1, varg2);\n    return 1;\n}\n\nfunction decimals() public nonPayable { \n    return 6;\n}\n\nfunction minCap() public nonPayable { \n    return _minCap;\n}\n\nfunction founder() public nonPayable { \n    return _founder;\n}\n\nfunction getIcoDeflator() public nonPayable { \n    v0 = 0xf31();\n    return v0;\n}\n\nfunction decreaseApproval(address varg0, uint256 varg1) public nonPayable { \n    if (varg1 <= _allowance[varg0]) {\n        v0 = _SafeSub(varg1, _allowance[varg0]);\n        _allowance[varg0] = v0;\n    } else {\n        _allowance[varg0] = 0;\n    }\n    emit Approval(msg.sender, varg0, _allowance[varg0]);\n    return 1;\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction bva(address varg0, uint256 varg1, uint256 varg2, address varg3) public payable { \n    v0 = v1 = 1647;\n    require(block.timestamp >= _startTimestamp);\n    v2 = v3 = block.timestamp <= 0x127500 + _startTimestamp;\n    if (block.timestamp > 0x127500 + _startTimestamp) {\n        v2 = block.timestamp >= 0x190c80 + _startTimestamp;\n    }\n    require(v2);\n    v4 = v5 = block.timestamp <= _startTimestamp + _durationSeconds;\n    if (block.timestamp > _startTimestamp + _durationSeconds) {\n        v4 = _totalRaised < _minCap;\n    }\n    require(v4);\n    require(_totalRaised <= _maxCap);\n    v0 = v6 = 0x177b(varg1);\n    if (!msg.value) {\n        require(_stuff == msg.sender);\n        v7 = v8 = 4462;\n        v9 = v10 = 2;\n        v11 = v12 = _SafeAdd(varg2, _avgRate);\n    } else {\n        v0 = v13 = 0xc0a(_avgRate, msg.value);\n    }\n    if (msg.value) {\n        v0 = v14 = _teama;\n        v7 = v15 = 4534;\n        v9 = v16 = 100;\n        v11 = v17 = _SafeMul(7, msg.value);\n        v0 = v18 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n    }\n    v19 = _SafeAdd(v0, _totalRaised);\n    _totalRaised = v19;\n    v20 = _SafeSub(v0, _balanceOf[_baseowner]);\n    _balanceOf[_baseowner] = v20;\n    v21 = address(v0);\n    v22 = _SafeAdd(v0, _balanceOf[v21]);\n    v23 = address(v0);\n    _balanceOf[v23] = v22;\n    emit Transfer(_baseowner, v23, v0);\n    v24 = _SafeAdd(1, _cntMembers);\n    _cntMembers = v24;\n    exit;\n    while (1) {\n        v25 = _SafeDiv(v9, v11);\n        v26 = address(v0);\n        emit v0(v26, v25);\n        v0 = v27 = _teama;\n        v0 = v28 = 2300;\n        v7 = v29 = 4616;\n        v9 = v30 = 100;\n        v11 = v31 = _SafeMul(7, msg.value);\n        v32 = v0.call().value(v25).gas(!v25 * v0);\n        require(v32);\n        v0 = v33 = _teamb;\n        v7 = v34 = 4716;\n        v9 = v35 = 1000;\n        v11 = v36 = _SafeMul(12, msg.value);\n        v0 = v37 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        v38 = address(v0);\n        emit v0(v38, v25);\n        v0 = v39 = _teamb;\n        v0 = v40 = 2300;\n        v7 = v41 = 4799;\n        v9 = v42 = 1000;\n        v11 = v43 = _SafeMul(12, msg.value);\n        v44 = v0.call().value(v25).gas(!v25 * v0);\n        require(v44);\n        v0 = v45 = _teamc;\n        v7 = v46 = 4899;\n        v9 = v47 = 1000;\n        v11 = v48 = _SafeMul(9, msg.value);\n        v0 = v49 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        v50 = address(v0);\n        emit v0(v50, v25);\n        v0 = v51 = _teamc;\n        v0 = v52 = 2300;\n        v7 = v53 = 4982;\n        v9 = v54 = 1000;\n        v11 = v55 = _SafeMul(9, msg.value);\n        v56 = v0.call().value(v25).gas(!v25 * v0);\n        require(v56);\n        v0 = v57 = _stuff;\n        v7 = v58 = 5082;\n        v9 = v59 = 1000;\n        v11 = v60 = _SafeMul(9, msg.value);\n        v0 = v61 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        v62 = address(v0);\n        emit v0(v62, v25);\n        v0 = v63 = _stuff;\n        v0 = v64 = 2300;\n        v7 = v65 = 5165;\n        v9 = v66 = 1000;\n        v11 = v67 = _SafeMul(9, msg.value);\n        v68 = v0.call().value(v25).gas(!v25 * v0);\n        require(v68);\n        v0 = v69 = _founder;\n        v7 = v70 = 5264;\n        v9 = v71 = 100;\n        v11 = v72 = _SafeMul(70, msg.value);\n        v0 = v73 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        v74 = address(v0);\n        emit v0(v74, v25);\n        v0 = v75 = _founder;\n        v0 = v76 = 2300;\n        v7 = v77 = 5346;\n        v9 = v78 = 100;\n        v11 = v79 = _SafeMul(70, msg.value);\n        v80 = v0.call().value(v25).gas(!v25 * v0);\n        require(v80);\n        if (address(v0) != address(v0)) {\n            v7 = v81 = 5452;\n            v9 = v82 = 100;\n            v11 = v83 = _SafeMul(20, msg.value);\n            v0 = v84 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        }\n        v85 = address(v0);\n        emit v0(v85, v25);\n        v0 = address(v0);\n        v0 = v86 = 2300;\n        v7 = v87 = 5532;\n        v9 = v88 = 100;\n        v11 = v89 = _SafeMul(20, msg.value);\n    }\n    _avgRate = v25;\n    v90 = v0.call().value(v25).gas(!v25 * v0);\n    require(v90);\n}\n\nfunction avgRate() public nonPayable { \n    return _avgRate;\n}\n\nfunction teamb() public nonPayable { \n    return _teamb;\n}\n\nfunction symbol() public nonPayable { \n    v0 = new bytes[](_symbol.length);\n    v1 = v2 = v0.data;\n    if (_symbol.length) {\n        if (31 < _symbol.length) {\n            do {\n                MEM[v1] = STORAGE[v3];\n                v3 += 1;\n                v1 += 32;\n            } while (v2 + _symbol.length <= v1);\n        } else {\n            MEM[v2] = _symbol.length >> 8 << 8;\n        }\n    }\n    v4 = new array[](v0.length);\n    v5 = v6 = 0;\n    while (v5 < v0.length) {\n        MEM[v4.data + v5] = MEM[v0.data + v5];\n        v5 += 32;\n    }\n    v7 = v8 = v0.length + v4.data;\n    if (0x1f & v0.length) {\n        MEM[v8 - (0x1f & v0.length)] = ~(256 ** (32 - (0x1f & v0.length)) - 1) & MEM[v8 - (0x1f & v0.length)];\n    }\n    return v4;\n}\n\nfunction durationSeconds() public nonPayable { \n    return _durationSeconds;\n}\n\nfunction stuff() public nonPayable { \n    return _stuff;\n}\n\nfunction teama() public nonPayable { \n    return _teama;\n}\n\nfunction calculateTokenAmount(uint256 varg0) public nonPayable { \n    v0 = 0x177b(varg0);\n    return v0;\n}\n\nfunction transfer(address varg0, uint256 varg1) public nonPayable { \n    require(block.timestamp >= _startTimestamp);\n    v0 = v1 = _totalRaised >= _maxCap;\n    if (_totalRaised < _maxCap) {\n        v0 = v2 = block.timestamp >= _startTimestamp + _durationSeconds;\n        if (v2) {\n            v0 = v3 = _totalRaised >= _minCap;\n        }\n    }\n    require(v0);\n    require(varg0);\n    v4 = _SafeSub(varg1, _balanceOf[msg.sender]);\n    _balanceOf[msg.sender] = v4;\n    v5 = _SafeAdd(varg1, _balanceOf[varg0]);\n    _balanceOf[varg0] = v5;\n    emit Transfer(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction totalRaised() public nonPayable { \n    return _totalRaised;\n}\n\nfunction increaseApproval(address varg0, uint256 varg1) public nonPayable { \n    v0 = _SafeAdd(varg1, _allowance[varg0]);\n    _allowance[varg0] = v0;\n    emit Approval(msg.sender, varg0, v0);\n    return 1;\n}\n\nfunction allowance(address varg0, address varg1) public nonPayable { \n    return _allowance[varg1];\n}\n\nfunction baseowner() public nonPayable { \n    return _baseowner;\n}\n\nfunction cntMembers() public nonPayable { \n    return _cntMembers;\n}\n\nfunction startTimestamp() public nonPayable { \n    return _startTimestamp;\n}\n\nfunction teamc() public nonPayable { \n    return _teamc;\n}\n\nfunction calculateTokenCount(uint256 varg0, uint256 varg1) public nonPayable { \n    v0 = 0xc0a(varg1, varg0);\n    return v0;\n}\n\nfunction 0xc0a(uint256 varg0, uint256 varg1) private { \n    require(varg0);\n    v0 = 0xf31();\n    v1 = _SafeDiv(varg0, varg1);\n    v2 = _SafeMul(v0, v1);\n    v3 = _SafeDiv(100, v2);\n    return v3;\n}\n\nfunction _SafeMul(uint256 varg0, uint256 varg1) private { \n    v0 = varg0 * varg1;\n    v1 = v2 = !varg1;\n    if (varg1) {\n        assert(varg1);\n        v1 = v3 = v0 / varg1 == varg0;\n    }\n    assert(v1);\n    return v0;\n}\n\nfunction _SafeDiv(uint256 varg0, uint256 varg1) private { \n    assert(varg0);\n    return varg1 / varg0;\n}\n\nfunction _SafeAdd(uint256 varg0, uint256 varg1) private { \n    v0 = varg0 + varg1;\n    assert(v0 >= varg1);\n    return v0;\n}\n\nfunction _SafeSub(uint256 varg0, uint256 varg1) private { \n    assert(varg0 <= varg1);\n    return varg1 - varg0;\n}\n\nfunction 0xf31() private { \n    if (block.timestamp > 0x13c680 + _startTimestamp) {\n        if (block.timestamp > 0x263b80 + _startTimestamp) {\n            if (block.timestamp > 0x38b080 + _startTimestamp) {\n                v0 = v1 = 109;\n            } else {\n                v0 = v2 = 115;\n            }\n        } else {\n            v0 = v3 = 123;\n        }\n    } else {\n        v0 = v4 = 138;\n    }\n    return v0;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length) {\n        if (function_selector == 0x5261aea) {\n            finalize(uint256);\n        } else if (0x6fdde03 == function_selector) {\n            name();\n        } else if (0x95ea7b3 == function_selector) {\n            approve(address,uint256);\n        } else if (0x18160ddd == function_selector) {\n            totalSupply();\n        } else if (0x23548b8b == function_selector) {\n            maxCap();\n        } else if (0x23b872dd == function_selector) {\n            transferFrom(address,address,uint256);\n        } else if (0x313ce567 == function_selector) {\n            decimals();\n        } else if (0x3fa615b0 == function_selector) {\n            minCap();\n        } else if (0x4d853ee5 == function_selector) {\n            founder();\n        } else if (0x4fa232fe == function_selector) {\n            getIcoDeflator();\n        } else if (0x66188463 == function_selector) {\n            decreaseApproval(address,uint256);\n        } else if (0x70a08231 == function_selector) {\n            balanceOf(address);\n        } else if (0x7bb34a23 == function_selector) {\n            bva(address,uint256,uint256,address);\n        } else if (0x838c63b7 == function_selector) {\n            avgRate();\n        } else if (0x89f63f50 == function_selector) {\n            teamb();\n        } else if (0x95d89b41 == function_selector) {\n            symbol();\n        } else if (0x9acba2af == function_selector) {\n            durationSeconds();\n        } else if (0x9c755f2f == function_selector) {\n            stuff();\n        } else if (0x9f2ff221 == function_selector) {\n            teama();\n        } else if (0xa24bcf46 == function_selector) {\n            calculateTokenAmount(uint256);\n        } else if (0xa9059cbb == function_selector) {\n            transfer(address,uint256);\n        } else if (0xc5c4744c == function_selector) {\n            totalRaised();\n        } else if (0xd73dd623 == function_selector) {\n            increaseApproval(address,uint256);\n        } else if (0xdd62ed3e == function_selector) {\n            allowance(address,address);\n        } else if (0xde3bec59 == function_selector) {\n            baseowner();\n        } else if (0xdfc3a987 == function_selector) {\n            cntMembers();\n        } else if (0xe6fd48bc == function_selector) {\n            startTimestamp();\n        } else if (0xfe687b2b == function_selector) {\n            teamc();\n        } else if (0xffd45f16 == function_selector) {\n            calculateTokenCount(uint256,uint256);\n        }\n    }\n    require(block.timestamp >= _startTimestamp);\n    v0 = v1 = block.timestamp <= 0x127500 + _startTimestamp;\n    if (block.timestamp > 0x127500 + _startTimestamp) {\n        v0 = v2 = block.timestamp >= 0x190c80 + _startTimestamp;\n    }\n    require(v0);\n    v3 = v4 = block.timestamp <= _startTimestamp + _durationSeconds;\n    if (block.timestamp > _startTimestamp + _durationSeconds) {\n        v3 = v5 = _totalRaised < _minCap;\n    }\n    require(v3);\n    require(_totalRaised <= _maxCap);\n    if (msg.value) {\n        v6 = 0xc0a(_avgRate, msg.value);\n        v7 = v8 = _teama;\n        v9 = v10 = 564;\n        v11 = v12 = 100;\n        v13 = v14 = _SafeMul(7, msg.value);\n        v15 = v16 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        while (1) {\n            v17 = _SafeDiv(v11, v13);\n            emit v15(address(v7), v17);\n            v15 = v18 = _teama;\n            v7 = v19 = 2300;\n            v9 = v20 = 646;\n            v11 = v21 = 100;\n            v13 = v22 = _SafeMul(7, msg.value);\n            v23 = v15.call().value(v17).gas(!v17 * v7);\n            require(v23);\n            v7 = v24 = _teamb;\n            v9 = v25 = 746;\n            v11 = v26 = 1000;\n            v13 = v27 = _SafeMul(12, msg.value);\n            v15 = v28 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n            emit v15(address(v7), v17);\n            v15 = v29 = _teamb;\n            v7 = v30 = 2300;\n            v9 = v31 = 829;\n            v11 = v32 = 1000;\n            v13 = v33 = _SafeMul(12, msg.value);\n            v34 = v15.call().value(v17).gas(!v17 * v7);\n            require(v34);\n            v7 = v35 = _teamc;\n            v9 = v36 = 929;\n            v11 = v37 = 1000;\n            v13 = v38 = _SafeMul(9, msg.value);\n            v15 = v39 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n            emit v15(address(v7), v17);\n            v15 = v40 = _teamc;\n            v7 = v41 = 2300;\n            v9 = v42 = 1012;\n            v11 = v43 = 1000;\n            v13 = v44 = _SafeMul(9, msg.value);\n            v45 = v15.call().value(v17).gas(!v17 * v7);\n            require(v45);\n            v7 = v46 = _stuff;\n            v9 = v47 = 1112;\n            v11 = v48 = 1000;\n            v13 = v49 = _SafeMul(9, msg.value);\n            v15 = v50 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n            emit v15(address(v7), v17);\n            v15 = v51 = _stuff;\n            v7 = v52 = 2300;\n            v9 = v53 = 1195;\n            v11 = v54 = 1000;\n            v13 = v55 = _SafeMul(9, msg.value);\n            v56 = v15.call().value(v17).gas(!v17 * v7);\n            require(v56);\n            v7 = v57 = _founder;\n            v9 = v58 = 1294;\n            v11 = v59 = 100;\n            v13 = v60 = _SafeMul(70, msg.value);\n            v15 = v61 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n            emit v15(address(v7), v17);\n            v15 = v62 = _founder;\n            v7 = v63 = 2300;\n            v9 = v64 = 1376;\n            v11 = v65 = 100;\n            v13 = v66 = _SafeMul(70, msg.value);\n        }\n        v67 = v15.call().value(v17).gas(!v17 * v7);\n        require(v67);\n        v68 = _SafeAdd(v6, _totalRaised);\n        _totalRaised = v68;\n        v69 = _SafeSub(v6, _balanceOf[_baseowner]);\n        _balanceOf[_baseowner] = v69;\n        v70 = _SafeAdd(v6, _balanceOf[msg.sender]);\n        _balanceOf[msg.sender] = v70;\n        emit Transfer(_baseowner, msg.sender, v6);\n        v71 = _SafeAdd(1, _cntMembers);\n        _cntMembers = v71;\n    }\n}\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.09.13 09:25 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x1]\nmapping (uint256 => [uint256]) _allowance; // STORAGE[0x2]\nuint256[] _name; // STORAGE[0x3]\nuint256[] _symbol; // STORAGE[0x4]\nuint256 _cntMembers; // STORAGE[0x5]\nuint256 _totalSupply; // STORAGE[0x6]\nuint256 _totalRaised; // STORAGE[0x7]\nuint256 _startTimestamp; // STORAGE[0x8]\nuint256 _durationSeconds; // STORAGE[0x9]\nuint256 _minCap; // STORAGE[0xa]\nuint256 _maxCap; // STORAGE[0xb]\nuint256 _avgRate; // STORAGE[0xc]\naddress _stuff; // STORAGE[0xd] bytes 0 to 19\naddress _teama; // STORAGE[0xe] bytes 0 to 19\naddress _teamb; // STORAGE[0xf] bytes 0 to 19\naddress _teamc; // STORAGE[0x10] bytes 0 to 19\naddress _founder; // STORAGE[0x11] bytes 0 to 19\nuint160 _baseowner; // STORAGE[0x12] bytes 0 to 19\n\n// Events\nApproval(address, address, uint256);\nTransfer(address, address, uint256);\n\nfunction 0x177b(uint256 varg0) private { \n    v0 = 0xf31();\n    v1 = _SafeMul(v0, varg0);\n    v2 = _SafeDiv(100, v1);\n    return v2;\n}\n\nfunction finalize(uint256 varg0) public payable { \n    require(block.timestamp >= _startTimestamp);\n    v0 = v1 = _totalRaised >= _maxCap;\n    if (_totalRaised < _maxCap) {\n        v0 = v2 = block.timestamp >= _startTimestamp + _durationSeconds;\n        if (v2) {\n            v0 = v3 = _totalRaised >= _minCap;\n        }\n    }\n    require(v0);\n    v4 = v5 = _stuff == msg.sender;\n    if (_stuff != msg.sender) {\n        v4 = _founder == msg.sender;\n    }\n    require(v4);\n    if (_founder == msg.sender) {\n        v6 = _founder.call().value(varg0).gas(2300 * !varg0);\n        require(v6);\n    }\n}\n\nfunction name() public nonPayable { \n    v0 = new bytes[](_name.length);\n    v1 = v2 = v0.data;\n    if (_name.length) {\n        if (31 < _name.length) {\n            do {\n                MEM[v1] = STORAGE[v3];\n                v3 += 1;\n                v1 += 32;\n            } while (v2 + _name.length <= v1);\n        } else {\n            MEM[v2] = _name.length >> 8 << 8;\n        }\n    }\n    v4 = new array[](v0.length);\n    v5 = v6 = 0;\n    while (v5 < v0.length) {\n        MEM[v4.data + v5] = MEM[v0.data + v5];\n        v5 += 32;\n    }\n    v7 = v8 = v0.length + v4.data;\n    if (0x1f & v0.length) {\n        MEM[v8 - (0x1f & v0.length)] = ~(256 ** (32 - (0x1f & v0.length)) - 1) & MEM[v8 - (0x1f & v0.length)];\n    }\n    return v4;\n}\n\nfunction approve(address varg0, uint256 varg1) public nonPayable { \n    _allowance[varg0] = varg1;\n    emit Approval(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction totalSupply() public nonPayable { \n    return _totalSupply;\n}\n\nfunction maxCap() public nonPayable { \n    return _maxCap;\n}\n\nfunction transferFrom(address varg0, address varg1, uint256 varg2) public nonPayable { \n    require(block.timestamp >= _startTimestamp);\n    v0 = v1 = _totalRaised >= _maxCap;\n    if (_totalRaised < _maxCap) {\n        v0 = v2 = block.timestamp >= _startTimestamp + _durationSeconds;\n        if (v2) {\n            v0 = v3 = _totalRaised >= _minCap;\n        }\n    }\n    require(v0);\n    require(varg1);\n    v4 = _SafeSub(varg2, _allowance[msg.sender]);\n    _balanceOf[varg0] = v4;\n    v5 = _SafeAdd(varg2, _balanceOf[varg1]);\n    _balanceOf[varg1] = v5;\n    v6 = _SafeSub(varg2, _allowance[msg.sender]);\n    _allowance[msg.sender] = v6;\n    emit Transfer(varg0, varg1, varg2);\n    return 1;\n}\n\nfunction decimals() public nonPayable { \n    return 6;\n}\n\nfunction minCap() public nonPayable { \n    return _minCap;\n}\n\nfunction founder() public nonPayable { \n    return _founder;\n}\n\nfunction getIcoDeflator() public nonPayable { \n    v0 = 0xf31();\n    return v0;\n}\n\nfunction decreaseApproval(address varg0, uint256 varg1) public nonPayable { \n    if (varg1 <= _allowance[varg0]) {\n        v0 = _SafeSub(varg1, _allowance[varg0]);\n        _allowance[varg0] = v0;\n    } else {\n        _allowance[varg0] = 0;\n    }\n    emit Approval(msg.sender, varg0, _allowance[varg0]);\n    return 1;\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction bva(address varg0, uint256 varg1, uint256 varg2, address varg3) public payable { \n    v0 = v1 = 1647;\n    require(block.timestamp >= _startTimestamp);\n    v2 = v3 = block.timestamp <= 0x127500 + _startTimestamp;\n    if (block.timestamp > 0x127500 + _startTimestamp) {\n        v2 = block.timestamp >= 0x190c80 + _startTimestamp;\n    }\n    require(v2);\n    v4 = v5 = block.timestamp <= _startTimestamp + _durationSeconds;\n    if (block.timestamp > _startTimestamp + _durationSeconds) {\n        v4 = _totalRaised < _minCap;\n    }\n    require(v4);\n    require(_totalRaised <= _maxCap);\n    v0 = v6 = 0x177b(varg1);\n    if (!msg.value) {\n        require(_stuff == msg.sender);\n        v7 = v8 = 4462;\n        v9 = v10 = 2;\n        v11 = v12 = _SafeAdd(varg2, _avgRate);\n    } else {\n        v0 = v13 = 0xc0a(_avgRate, msg.value);\n    }\n    if (msg.value) {\n        v0 = v14 = _teama;\n        v7 = v15 = 4534;\n        v9 = v16 = 100;\n        v11 = v17 = _SafeMul(7, msg.value);\n        v0 = v18 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n    }\n    v19 = _SafeAdd(v0, _totalRaised);\n    _totalRaised = v19;\n    v20 = _SafeSub(v0, _balanceOf[_baseowner]);\n    _balanceOf[_baseowner] = v20;\n    v21 = address(v0);\n    v22 = _SafeAdd(v0, _balanceOf[v21]);\n    v23 = address(v0);\n    _balanceOf[v23] = v22;\n    emit Transfer(_baseowner, v23, v0);\n    v24 = _SafeAdd(1, _cntMembers);\n    _cntMembers = v24;\n    exit;\n    while (1) {\n        v25 = _SafeDiv(v9, v11);\n        v26 = address(v0);\n        emit v0(v26, v25);\n        v0 = v27 = _teama;\n        v0 = v28 = 2300;\n        v7 = v29 = 4616;\n        v9 = v30 = 100;\n        v11 = v31 = _SafeMul(7, msg.value);\n        v32 = v0.call().value(v25).gas(!v25 * v0);\n        require(v32);\n        v0 = v33 = _teamb;\n        v7 = v34 = 4716;\n        v9 = v35 = 1000;\n        v11 = v36 = _SafeMul(12, msg.value);\n        v0 = v37 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        v38 = address(v0);\n        emit v0(v38, v25);\n        v0 = v39 = _teamb;\n        v0 = v40 = 2300;\n        v7 = v41 = 4799;\n        v9 = v42 = 1000;\n        v11 = v43 = _SafeMul(12, msg.value);\n        v44 = v0.call().value(v25).gas(!v25 * v0);\n        require(v44);\n        v0 = v45 = _teamc;\n        v7 = v46 = 4899;\n        v9 = v47 = 1000;\n        v11 = v48 = _SafeMul(9, msg.value);\n        v0 = v49 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        v50 = address(v0);\n        emit v0(v50, v25);\n        v0 = v51 = _teamc;\n        v0 = v52 = 2300;\n        v7 = v53 = 4982;\n        v9 = v54 = 1000;\n        v11 = v55 = _SafeMul(9, msg.value);\n        v56 = v0.call().value(v25).gas(!v25 * v0);\n        require(v56);\n        v0 = v57 = _stuff;\n        v7 = v58 = 5082;\n        v9 = v59 = 1000;\n        v11 = v60 = _SafeMul(9, msg.value);\n        v0 = v61 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        v62 = address(v0);\n        emit v0(v62, v25);\n        v0 = v63 = _stuff;\n        v0 = v64 = 2300;\n        v7 = v65 = 5165;\n        v9 = v66 = 1000;\n        v11 = v67 = _SafeMul(9, msg.value);\n        v68 = v0.call().value(v25).gas(!v25 * v0);\n        require(v68);\n        v0 = v69 = _founder;\n        v7 = v70 = 5264;\n        v9 = v71 = 100;\n        v11 = v72 = _SafeMul(70, msg.value);\n        v0 = v73 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        v74 = address(v0);\n        emit v0(v74, v25);\n        v0 = v75 = _founder;\n        v0 = v76 = 2300;\n        v7 = v77 = 5346;\n        v9 = v78 = 100;\n        v11 = v79 = _SafeMul(70, msg.value);\n        v80 = v0.call().value(v25).gas(!v25 * v0);\n        require(v80);\n        if (address(v0) != address(v0)) {\n            v7 = v81 = 5452;\n            v9 = v82 = 100;\n            v11 = v83 = _SafeMul(20, msg.value);\n            v0 = v84 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        }\n        v85 = address(v0);\n        emit v0(v85, v25);\n        v0 = address(v0);\n        v0 = v86 = 2300;\n        v7 = v87 = 5532;\n        v9 = v88 = 100;\n        v11 = v89 = _SafeMul(20, msg.value);\n    }\n    _avgRate = v25;\n    v90 = v0.call().value(v25).gas(!v25 * v0);\n    require(v90);\n}\n\nfunction avgRate() public nonPayable { \n    return _avgRate;\n}\n\nfunction teamb() public nonPayable { \n    return _teamb;\n}\n\nfunction symbol() public nonPayable { \n    v0 = new bytes[](_symbol.length);\n    v1 = v2 = v0.data;\n    if (_symbol.length) {\n        if (31 < _symbol.length) {\n            do {\n                MEM[v1] = STORAGE[v3];\n                v3 += 1;\n                v1 += 32;\n            } while (v2 + _symbol.length <= v1);\n        } else {\n            MEM[v2] = _symbol.length >> 8 << 8;\n        }\n    }\n    v4 = new array[](v0.length);\n    v5 = v6 = 0;\n    while (v5 < v0.length) {\n        MEM[v4.data + v5] = MEM[v0.data + v5];\n        v5 += 32;\n    }\n    v7 = v8 = v0.length + v4.data;\n    if (0x1f & v0.length) {\n        MEM[v8 - (0x1f & v0.length)] = ~(256 ** (32 - (0x1f & v0.length)) - 1) & MEM[v8 - (0x1f & v0.length)];\n    }\n    return v4;\n}\n\nfunction durationSeconds() public nonPayable { \n    return _durationSeconds;\n}\n\nfunction stuff() public nonPayable { \n    return _stuff;\n}\n\nfunction teama() public nonPayable { \n    return _teama;\n}\n\nfunction calculateTokenAmount(uint256 varg0) public nonPayable { \n    v0 = 0x177b(varg0);\n    return v0;\n}\n\nfunction transfer(address varg0, uint256 varg1) public nonPayable { \n    require(block.timestamp >= _startTimestamp);\n    v0 = v1 = _totalRaised >= _maxCap;\n    if (_totalRaised < _maxCap) {\n        v0 = v2 = block.timestamp >= _startTimestamp + _durationSeconds;\n        if (v2) {\n            v0 = v3 = _totalRaised >= _minCap;\n        }\n    }\n    require(v0);\n    require(varg0);\n    v4 = _SafeSub(varg1, _balanceOf[msg.sender]);\n    _balanceOf[msg.sender] = v4;\n    v5 = _SafeAdd(varg1, _balanceOf[varg0]);\n    _balanceOf[varg0] = v5;\n    emit Transfer(msg.sender, varg0, varg1);\n    return 1;\n}\n\nfunction totalRaised() public nonPayable { \n    return _totalRaised;\n}\n\nfunction increaseApproval(address varg0, uint256 varg1) public nonPayable { \n    v0 = _SafeAdd(varg1, _allowance[varg0]);\n    _allowance[varg0] = v0;\n    emit Approval(msg.sender, varg0, v0);\n    return 1;\n}\n\nfunction allowance(address varg0, address varg1) public nonPayable { \n    return _allowance[varg1];\n}\n\nfunction baseowner() public nonPayable { \n    return _baseowner;\n}\n\nfunction cntMembers() public nonPayable { \n    return _cntMembers;\n}\n\nfunction startTimestamp() public nonPayable { \n    return _startTimestamp;\n}\n\nfunction teamc() public nonPayable { \n    return _teamc;\n}\n\nfunction calculateTokenCount(uint256 varg0, uint256 varg1) public nonPayable { \n    v0 = 0xc0a(varg1, varg0);\n    return v0;\n}\n\nfunction 0xc0a(uint256 varg0, uint256 varg1) private { \n    require(varg0);\n    v0 = 0xf31();\n    v1 = _SafeDiv(varg0, varg1);\n    v2 = _SafeMul(v0, v1);\n    v3 = _SafeDiv(100, v2);\n    return v3;\n}\n\nfunction _SafeMul(uint256 varg0, uint256 varg1) private { \n    v0 = varg0 * varg1;\n    v1 = v2 = !varg1;\n    if (varg1) {\n        assert(varg1);\n        v1 = v3 = v0 / varg1 == varg0;\n    }\n    assert(v1);\n    return v0;\n}\n\nfunction _SafeDiv(uint256 varg0, uint256 varg1) private { \n    assert(varg0);\n    return varg1 / varg0;\n}\n\nfunction _SafeAdd(uint256 varg0, uint256 varg1) private { \n    v0 = varg0 + varg1;\n    assert(v0 >= varg1);\n    return v0;\n}\n\nfunction _SafeSub(uint256 varg0, uint256 varg1) private { \n    assert(varg0 <= varg1);\n    return varg1 - varg0;\n}\n\nfunction 0xf31() private { \n    if (block.timestamp > 0x13c680 + _startTimestamp) {\n        if (block.timestamp > 0x263b80 + _startTimestamp) {\n            if (block.timestamp > 0x38b080 + _startTimestamp) {\n                v0 = v1 = 109;\n            } else {\n                v0 = v2 = 115;\n            }\n        } else {\n            v0 = v3 = 123;\n        }\n    } else {\n        v0 = v4 = 138;\n    }\n    return v0;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length) {\n        if (function_selector == 0x5261aea) {\n            finalize(uint256);\n        } else if (0x6fdde03 == function_selector) {\n            name();\n        } else if (0x95ea7b3 == function_selector) {\n            approve(address,uint256);\n        } else if (0x18160ddd == function_selector) {\n            totalSupply();\n        } else if (0x23548b8b == function_selector) {\n            maxCap();\n        } else if (0x23b872dd == function_selector) {\n            transferFrom(address,address,uint256);\n        } else if (0x313ce567 == function_selector) {\n            decimals();\n        } else if (0x3fa615b0 == function_selector) {\n            minCap();\n        } else if (0x4d853ee5 == function_selector) {\n            founder();\n        } else if (0x4fa232fe == function_selector) {\n            getIcoDeflator();\n        } else if (0x66188463 == function_selector) {\n            decreaseApproval(address,uint256);\n        } else if (0x70a08231 == function_selector) {\n            balanceOf(address);\n        } else if (0x7bb34a23 == function_selector) {\n            bva(address,uint256,uint256,address);\n        } else if (0x838c63b7 == function_selector) {\n            avgRate();\n        } else if (0x89f63f50 == function_selector) {\n            teamb();\n        } else if (0x95d89b41 == function_selector) {\n            symbol();\n        } else if (0x9acba2af == function_selector) {\n            durationSeconds();\n        } else if (0x9c755f2f == function_selector) {\n            stuff();\n        } else if (0x9f2ff221 == function_selector) {\n            teama();\n        } else if (0xa24bcf46 == function_selector) {\n            calculateTokenAmount(uint256);\n        } else if (0xa9059cbb == function_selector) {\n            transfer(address,uint256);\n        } else if (0xc5c4744c == function_selector) {\n            totalRaised();\n        } else if (0xd73dd623 == function_selector) {\n            increaseApproval(address,uint256);\n        } else if (0xdd62ed3e == function_selector) {\n            allowance(address,address);\n        } else if (0xde3bec59 == function_selector) {\n            baseowner();\n        } else if (0xdfc3a987 == function_selector) {\n            cntMembers();\n        } else if (0xe6fd48bc == function_selector) {\n            startTimestamp();\n        } else if (0xfe687b2b == function_selector) {\n            teamc();\n        } else if (0xffd45f16 == function_selector) {\n            calculateTokenCount(uint256,uint256);\n        }\n    }\n    require(block.timestamp >= _startTimestamp);\n    v0 = v1 = block.timestamp <= 0x127500 + _startTimestamp;\n    if (block.timestamp > 0x127500 + _startTimestamp) {\n        v0 = v2 = block.timestamp >= 0x190c80 + _startTimestamp;\n    }\n    require(v0);\n    v3 = v4 = block.timestamp <= _startTimestamp + _durationSeconds;\n    if (block.timestamp > _startTimestamp + _durationSeconds) {\n        v3 = v5 = _totalRaised < _minCap;\n    }\n    require(v3);\n    require(_totalRaised <= _maxCap);\n    if (msg.value) {\n        v6 = 0xc0a(_avgRate, msg.value);\n        v7 = v8 = _teama;\n        v9 = v10 = 564;\n        v11 = v12 = 100;\n        v13 = v14 = _SafeMul(7, msg.value);\n        v15 = v16 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n        while (1) {\n            v17 = _SafeDiv(v11, v13);\n            emit v15(address(v7), v17);\n            v15 = v18 = _teama;\n            v7 = v19 = 2300;\n            v9 = v20 = 646;\n            v11 = v21 = 100;\n            v13 = v22 = _SafeMul(7, msg.value);\n            v23 = v15.call().value(v17).gas(!v17 * v7);\n            require(v23);\n            v7 = v24 = _teamb;\n            v9 = v25 = 746;\n            v11 = v26 = 1000;\n            v13 = v27 = _SafeMul(12, msg.value);\n            v15 = v28 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n            emit v15(address(v7), v17);\n            v15 = v29 = _teamb;\n            v7 = v30 = 2300;\n            v9 = v31 = 829;\n            v11 = v32 = 1000;\n            v13 = v33 = _SafeMul(12, msg.value);\n            v34 = v15.call().value(v17).gas(!v17 * v7);\n            require(v34);\n            v7 = v35 = _teamc;\n            v9 = v36 = 929;\n            v11 = v37 = 1000;\n            v13 = v38 = _SafeMul(9, msg.value);\n            v15 = v39 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n            emit v15(address(v7), v17);\n            v15 = v40 = _teamc;\n            v7 = v41 = 2300;\n            v9 = v42 = 1012;\n            v11 = v43 = 1000;\n            v13 = v44 = _SafeMul(9, msg.value);\n            v45 = v15.call().value(v17).gas(!v17 * v7);\n            require(v45);\n            v7 = v46 = _stuff;\n            v9 = v47 = 1112;\n            v11 = v48 = 1000;\n            v13 = v49 = _SafeMul(9, msg.value);\n            v15 = v50 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n            emit v15(address(v7), v17);\n            v15 = v51 = _stuff;\n            v7 = v52 = 2300;\n            v9 = v53 = 1195;\n            v11 = v54 = 1000;\n            v13 = v55 = _SafeMul(9, msg.value);\n            v56 = v15.call().value(v17).gas(!v17 * v7);\n            require(v56);\n            v7 = v57 = _founder;\n            v9 = v58 = 1294;\n            v11 = v59 = 100;\n            v13 = v60 = _SafeMul(70, msg.value);\n            v15 = v61 = 0xfe01ee96133d3632c083ea915249f4ce813a4ae890804e659920170391a370d2;\n            emit v15(address(v7), v17);\n            v15 = v62 = _founder;\n            v7 = v63 = 2300;\n            v9 = v64 = 1376;\n            v11 = v65 = 100;\n            v13 = v66 = _SafeMul(70, msg.value);\n        }\n        v67 = v15.call().value(v17).gas(!v17 * v7);\n        require(v67);\n        v68 = _SafeAdd(v6, _totalRaised);\n        _totalRaised = v68;\n        v69 = _SafeSub(v6, _balanceOf[_baseowner]);\n        _balanceOf[_baseowner] = v69;\n        v70 = _SafeAdd(v6, _balanceOf[msg.sender]);\n        _balanceOf[msg.sender] = v70;\n        emit Transfer(_baseowner, msg.sender, v6);\n        v71 = _SafeAdd(1, _cntMembers);\n        _cntMembers = v71;\n    }\n}\n.",
	"status": "1",
	"time_cost": 42.678462505340576,
	"usage": {
		"completion_tokens": 708,
		"prompt_tokens": 6091,
		"total_tokens": 6799
	}
}