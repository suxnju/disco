{
	"address": "0xba69e7c96e9541863f009e713caf26d4ad2241a0",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Below is a Solidity contract that represents your decompiled code. Please note that due to the low-level nature of the decompiled code, some functionalities might not be optimized or fully accurate in Solidity. \n\n```Solidity\npragma solidity >=0.4.22 <0.9.0;\n\ncontract Contract {\n    uint256 storage_0;\n    uint256 storage_4;\n    uint256 storage_5;\n    mapping(uint256 => uint256) storage_map;\n    \n    function currentManager() public view returns (address) {\n        return address(uint160(storage_4));\n    }\n\n    function found() payable public {\n        require(msg.sender == address(uint160(storage_0)));\n        storage_5 += msg.value;\n    }\n\n    function investors(uint256 arg0) public view returns (address, uint256, uint256, uint256) {\n        return (\n            address(uint160(storage_map[arg0 * 4])),\n            storage_map[arg0 * 4 + 1],\n            storage_map[arg0 * 4 + 2],\n            uint8(storage_map[arg0 * 4 + 3])\n        );\n    }\n\n    function balance() public view returns (uint256) {\n        return storage_5;\n    }\n\n    function setOfficialWebsite(string memory arg0) public {\n        require(msg.sender == address(uint160(storage_0)));\n        // Update the official website to arg0\n        // This code was decompiled from EVM and the actual implementation\n        // may vary depending on the original high-level language\n    }\n    \n    function invest() public payable {\n        uint256 index = storage_map[2]++;\n        require(msg.value >= 0x016345785d8a0000);\n        storage_map[index * 4] = uint256(uint160(msg.sender));\n        storage_map[index * 4 + 1] = msg.value;\n        storage_map[index * 4 + 2] = block.timestamp;\n        if (msg.value > 0x0de0b6b3a7640000) {\n            storage_map[index * 4 + 3] = 0x63;\n            storage_5 += (msg.value * 0x63) / 0x64;\n            address(uint160(storage_4)).transfer(msg.value / 0x64);\n        } else {\n            storage_map[index * 4 + 3] = 0x6e;\n        }\n    }\n}\n```\n\nThis contract is a simple investment contract where users can invest ether and the contract keeps the record of the investors and their investments. There are also functions to get the balance of the contract and to update the official website of the contract. There are certain parts of the original code that do not have a direct translation in Solidity and hence have been left out or simplified.",
				"role": "assistant"
			}
		}
	],
	"created": 1700473976,
	"id": "chatcmpl-8MvFYfYmQkrtPwwBs4yyQiTYajGpY",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n    \n        if (msg.data.length) { goto label_000B; }\n    \n    label_0056:\n        var var0 = 0x0247;\n    \n        if (msg.value >= 0x016345785d8a0000) {\n            var var1 = 0x0251;\n            invest();\n            var1 = 0x0268;\n            var var2 = 0x00;\n            var var3 = 0x00;\n            var var4 = 0x00;\n            var var5 = 0x0364;\n            var5 = func_025E();\n            // Error: Could not resolve method call return address!\n        } else {\n        label_0002:\n            memory[0x40:0x60] = var0;\n        \n            if (!msg.data.length) { goto label_0056; }\n        \n        label_000B:\n            var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (var0 == 0x104b6704) {\n                // Dispatch table entry for currentManager()\n                var1 = 0x026a;\n                var2 = storage[0x04] & 0x02 ** 0xa0 - 0x01;\n                var temp0 = memory[0x40:0x60];\n                memory[temp0:temp0 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n                var temp1 = memory[0x40:0x60];\n                return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n            } else if (var0 == 0x3d750b28) {\n                // Dispatch table entry for found()\n                var1 = 0x0247;\n                var temp2 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp2 & msg.sender != temp2 & storage[0x00]) { goto label_0002; }\n            \n                found();\n                stop();\n            } else if (var0 == 0x3feb5f2b) {\n                // Dispatch table entry for investors(uint256)\n                var1 = 0x0287;\n                var2 = msg.data[0x04:0x24];\n                var3 = 0x02;\n                var4 = var2;\n            \n                if (var4 >= storage[var3]) { goto label_0002; }\n            \n                var2, var3, var4, var5 = investors(var2, var3);\n                var temp3 = memory[0x40:0x60];\n                memory[temp3:temp3 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n                memory[temp3 + 0x20:temp3 + 0x20 + 0x20] = var3;\n                memory[temp3 + 0x40:temp3 + 0x40 + 0x20] = var4;\n                memory[temp3 + 0x60:temp3 + 0x60 + 0x20] = var5 & 0xff;\n                var temp4 = memory[0x40:0x60];\n                return memory[temp4:temp4 + temp3 - temp4 + 0x80];\n            } else if (var0 == 0xb3a2a6c0) {\n                // Dispatch table entry for setOfficialWebsite(string)\n                var temp5 = memory[0x40:0x60];\n                var temp6 = msg.data[0x04:0x24];\n                var temp7 = msg.data[temp6 + 0x04:temp6 + 0x04 + 0x20];\n                memory[0x40:0x60] = temp5 + (temp7 + 0x1f) / 0x20 * 0x20 + 0x20;\n                memory[temp5:temp5 + 0x20] = temp7;\n                var1 = 0x0247;\n                memory[temp5 + 0x20:temp5 + 0x20 + temp7] = msg.data[temp6 + 0x24:temp6 + 0x24 + temp7];\n                var2 = temp5;\n                var temp8 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp8 & msg.sender != temp8 & storage[0x00]) { goto label_0002; }\n            \n                setOfficialWebsite(var2);\n                stop();\n            } else if (var0 == 0xb69ef8a8) {\n                // Dispatch table entry for balance()\n                var1 = 0x02bb;\n                var2 = storage[0x05];\n                var temp9 = memory[0x40:0x60];\n                memory[temp9:temp9 + 0x20] = var2;\n                var temp10 = memory[0x40:0x60];\n                return memory[temp10:temp10 + temp9 - temp10 + 0x20];\n            } else if (var0 == 0xe8b5e51f) {\n                // Dispatch table entry for invest()\n                var1 = 0x0247;\n                invest();\n                stop();\n            } else { goto label_0056; }\n        }\n    }\n    \n    function investors(var arg0, var arg1) returns (var arg0, var arg1, var r2, var r3) {\n        memory[0x00:0x20] = arg1;\n        var temp0 = arg0 * 0x04;\n        arg0 = storage[temp0 + 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace] & 0x02 ** 0xa0 - 0x01;\n        r2 = storage[temp0 + 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0];\n        arg1 = storage[temp0 + 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf];\n        r3 = storage[temp0 + 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad1] & 0xff;\n        return arg0, arg1, r2, r3;\n    }\n    \n    function invest() {\n        var var0 = 0x02;\n        var temp0 = storage[var0];\n        var var1 = temp0;\n        var temp1 = var1 + 0x01;\n        var var2 = temp1;\n        storage[var0] = var2;\n        var var3 = var0;\n        var var4 = var2;\n        var var5 = var1;\n    \n        if (!var5 > var4) {\n        label_03DC:\n            var temp2 = var0;\n            var0 = var2;\n            memory[0x00:0x20] = temp2;\n            var1 = var1 * 0x04 + keccak256(memory[0x00:0x20]);\n            var2 = 0x00;\n            var temp3 = memory[0x40:0x60];\n            var3 = temp3;\n            memory[0x40:0x60] = var3 + 0x80;\n            memory[var3:var3 + 0x20] = msg.sender;\n            var temp4 = var3 + 0x20;\n            memory[temp4:temp4 + 0x20] = msg.value;\n            var4 = temp4 + 0x20;\n            var5 = 0x0411;\n            var5 = func_025E();\n            var temp5 = var4;\n            memory[temp5:temp5 + 0x20] = var5;\n            var4 = temp5 + 0x20;\n            var5 = 0x0432;\n            var var6 = 0x00;\n        \n            if (msg.value > 0x0de0b6b3a7640000) {\n                var5 = func_06FB(var6);\n                memory[var4:var4 + 0x20] = var5;\n                var temp6 = var3;\n                var temp7 = var1;\n                storage[temp7] = (storage[temp7] & ~0xffffffffffffffffffffffffffffffffffffffff) | memory[temp6:temp6 + 0x20];\n                storage[temp7 + 0x01] = memory[temp6 + 0x20:temp6 + 0x20 + 0x20];\n                storage[temp7 + 0x02] = memory[temp6 + 0x40:temp6 + 0x40 + 0x20];\n                var temp8 = temp7 + 0x03;\n                storage[temp8] = memory[temp6 + 0x60:temp6 + 0x60 + 0x20] | (storage[temp8] & ~0xff);\n                var temp9 = msg.value;\n                storage[0x05] = storage[0x05] + (temp9 * 0x63) / 0x64;\n                var temp10 = memory[0x40:0x60];\n                memory[temp10:temp10 + 0x00] = address(storage[0x04] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(temp9 / 0x64)(memory[temp10:temp10 + 0x00]);\n                var temp11 = memory[0x40:0x60];\n                memory[temp11:temp11 + 0x20] = msg.sender;\n                memory[temp11 + 0x20:temp11 + 0x20 + 0x20] = msg.value;\n                var temp12 = memory[0x40:0x60];\n                log(memory[temp12:temp12 + temp11 - temp12 + 0x40], [0xd90d253a9de34d2fdd5a75ae49ea17fcb43af32fc8ea08cc6d2341991dd3872e]);\n                return;\n            } else {\n                var6 = 0x6e;\n                var5 = var6;\n                // Error: Could not resolve jump destination!\n            }\n        } else {\n            memory[0x00:0x20] = var3;\n            var temp13 = keccak256(memory[0x00:0x20]);\n            var temp14 = temp13 + var5 * 0x04;\n            var5 = 0x03dc;\n            var6 = temp14;\n            var var7 = temp13 + var4 * 0x04;\n        \n            if (var6 <= var7) {\n                var5 = func_03CE(var6, var7);\n                goto label_03DC;\n            } else {\n            label_0209:\n                var temp15 = var7;\n                storage[temp15] = storage[temp15] & ~0xffffffffffffffffffffffffffffffffffffffff;\n                storage[temp15 + 0x01] = 0x00;\n                storage[temp15 + 0x02] = 0x00;\n                var7 = temp15 + 0x01;\n                var temp16 = temp15 + 0x03;\n                storage[temp16] = storage[temp16] & ~0xff;\n            \n                if (var6 > var7) { goto label_0209; }\n            \n                var5 = func_03CE(var6, var7);\n                // Error: Could not resolve method call return address!\n            }\n        }\n    }\n    \n    function func_025E() returns (var r0) { return block.timestamp / 0x015180; }\n    \n    function setOfficialWebsite(var arg0) {\n        var temp0 = arg0;\n        var var0 = 0x01;\n        var temp1 = memory[temp0:temp0 + 0x20];\n        var var2 = temp1;\n        var temp2 = storage[var0];\n        memory[0x00:0x20] = var0;\n        var var3 = keccak256(memory[0x00:0x20]);\n        var var4 = temp0 + 0x20;\n        var var1 = var3 + ((!(temp2 & 0x01) * 0x0100 - 0x01 & temp2) / 0x02 + 0x1f) / 0x20;\n    \n        if (0x1f < var2) {\n            var temp3 = var2;\n            storage[var0] = temp3 + temp3 + 0x01;\n        \n            if (!temp3) {\n            label_0318:\n                var temp4 = var1;\n                var1 = 0x03c9;\n                var2 = temp4;\n            \n                if (var2 <= var3) {\n                    var1 = func_03CE(var2, var3);\n                \n                label_03C9:\n                    return;\n                } else {\n                    var1 = func_0329(var2, var3);\n                    goto label_03C9;\n                }\n            } else {\n                var temp5 = var2;\n                var temp6 = var4;\n                var2 = temp6;\n                var4 = var2 + temp5;\n            \n                if (var4 <= var2) { goto label_0318; }\n            \n            label_034F:\n                var temp7 = var2;\n                var temp8 = var3;\n                storage[temp8] = memory[temp7:temp7 + 0x20];\n                var2 = temp7 + 0x20;\n                var4 = var4;\n                var3 = temp8 + 0x01;\n            \n                if (var4 <= var2) { goto label_0318; }\n                else { goto label_034F; }\n            }\n        } else {\n            var temp9 = var2;\n            storage[var0] = temp9 + temp9 | (memory[var4:var4 + 0x20] & ~0xff);\n            var temp10 = var1;\n            var1 = 0x03c9;\n            var2 = temp10;\n        \n            if (var2 <= var3) {\n                var1 = func_03CE(var2, var3);\n                goto label_03C9;\n            } else {\n                var1 = func_0329(var2, var3);\n                goto label_03C9;\n            }\n        }\n    }\n    \n    function func_0329(var arg0, var arg1) returns (var r0) {\n        var temp0 = arg1;\n        storage[temp0] = 0x00;\n        arg1 = temp0 + 0x01;\n    \n        if (arg0 <= arg1) {\n            r0 = func_03CE(arg0, arg1);\n            // Error: Could not resolve method call return address!\n        } else {\n            r0 = func_0329(arg0, arg1);\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function func_03CE(var arg0, var arg1) returns (var r0) { return arg0; }\n    \n    function found() {\n        storage[0x05] = msg.value + storage[0x05];\n    }\n    \n    function func_06FB(var arg0) returns (var r0) {\n        if (msg.value <= 0x8ac7230489e80000) {\n            arg0 = 0x78;\n            goto label_0265;\n        } else if (msg.value > 0x056bc75e2d63100000) {\n            arg0 = 0x00;\n        \n        label_0265:\n            return arg0;\n        } else {\n            arg0 = 0x82;\n            goto label_0265;\n        }\n    }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n    \n        if (msg.data.length) { goto label_000B; }\n    \n    label_0056:\n        var var0 = 0x0247;\n    \n        if (msg.value >= 0x016345785d8a0000) {\n            var var1 = 0x0251;\n            invest();\n            var1 = 0x0268;\n            var var2 = 0x00;\n            var var3 = 0x00;\n            var var4 = 0x00;\n            var var5 = 0x0364;\n            var5 = func_025E();\n            // Error: Could not resolve method call return address!\n        } else {\n        label_0002:\n            memory[0x40:0x60] = var0;\n        \n            if (!msg.data.length) { goto label_0056; }\n        \n        label_000B:\n            var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (var0 == 0x104b6704) {\n                // Dispatch table entry for currentManager()\n                var1 = 0x026a;\n                var2 = storage[0x04] & 0x02 ** 0xa0 - 0x01;\n                var temp0 = memory[0x40:0x60];\n                memory[temp0:temp0 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n                var temp1 = memory[0x40:0x60];\n                return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n            } else if (var0 == 0x3d750b28) {\n                // Dispatch table entry for found()\n                var1 = 0x0247;\n                var temp2 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp2 & msg.sender != temp2 & storage[0x00]) { goto label_0002; }\n            \n                found();\n                stop();\n            } else if (var0 == 0x3feb5f2b) {\n                // Dispatch table entry for investors(uint256)\n                var1 = 0x0287;\n                var2 = msg.data[0x04:0x24];\n                var3 = 0x02;\n                var4 = var2;\n            \n                if (var4 >= storage[var3]) { goto label_0002; }\n            \n                var2, var3, var4, var5 = investors(var2, var3);\n                var temp3 = memory[0x40:0x60];\n                memory[temp3:temp3 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n                memory[temp3 + 0x20:temp3 + 0x20 + 0x20] = var3;\n                memory[temp3 + 0x40:temp3 + 0x40 + 0x20] = var4;\n                memory[temp3 + 0x60:temp3 + 0x60 + 0x20] = var5 & 0xff;\n                var temp4 = memory[0x40:0x60];\n                return memory[temp4:temp4 + temp3 - temp4 + 0x80];\n            } else if (var0 == 0xb3a2a6c0) {\n                // Dispatch table entry for setOfficialWebsite(string)\n                var temp5 = memory[0x40:0x60];\n                var temp6 = msg.data[0x04:0x24];\n                var temp7 = msg.data[temp6 + 0x04:temp6 + 0x04 + 0x20];\n                memory[0x40:0x60] = temp5 + (temp7 + 0x1f) / 0x20 * 0x20 + 0x20;\n                memory[temp5:temp5 + 0x20] = temp7;\n                var1 = 0x0247;\n                memory[temp5 + 0x20:temp5 + 0x20 + temp7] = msg.data[temp6 + 0x24:temp6 + 0x24 + temp7];\n                var2 = temp5;\n                var temp8 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp8 & msg.sender != temp8 & storage[0x00]) { goto label_0002; }\n            \n                setOfficialWebsite(var2);\n                stop();\n            } else if (var0 == 0xb69ef8a8) {\n                // Dispatch table entry for balance()\n                var1 = 0x02bb;\n                var2 = storage[0x05];\n                var temp9 = memory[0x40:0x60];\n                memory[temp9:temp9 + 0x20] = var2;\n                var temp10 = memory[0x40:0x60];\n                return memory[temp10:temp10 + temp9 - temp10 + 0x20];\n            } else if (var0 == 0xe8b5e51f) {\n                // Dispatch table entry for invest()\n                var1 = 0x0247;\n                invest();\n                stop();\n            } else { goto label_0056; }\n        }\n    }\n    \n    function investors(var arg0, var arg1) returns (var arg0, var arg1, var r2, var r3) {\n        memory[0x00:0x20] = arg1;\n        var temp0 = arg0 * 0x04;\n        arg0 = storage[temp0 + 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace] & 0x02 ** 0xa0 - 0x01;\n        r2 = storage[temp0 + 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0];\n        arg1 = storage[temp0 + 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf];\n        r3 = storage[temp0 + 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad1] & 0xff;\n        return arg0, arg1, r2, r3;\n    }\n    \n    function invest() {\n        var var0 = 0x02;\n        var temp0 = storage[var0];\n        var var1 = temp0;\n        var temp1 = var1 + 0x01;\n        var var2 = temp1;\n        storage[var0] = var2;\n        var var3 = var0;\n        var var4 = var2;\n        var var5 = var1;\n    \n        if (!var5 > var4) {\n        label_03DC:\n            var temp2 = var0;\n            var0 = var2;\n            memory[0x00:0x20] = temp2;\n            var1 = var1 * 0x04 + keccak256(memory[0x00:0x20]);\n            var2 = 0x00;\n            var temp3 = memory[0x40:0x60];\n            var3 = temp3;\n            memory[0x40:0x60] = var3 + 0x80;\n            memory[var3:var3 + 0x20] = msg.sender;\n            var temp4 = var3 + 0x20;\n            memory[temp4:temp4 + 0x20] = msg.value;\n            var4 = temp4 + 0x20;\n            var5 = 0x0411;\n            var5 = func_025E();\n            var temp5 = var4;\n            memory[temp5:temp5 + 0x20] = var5;\n            var4 = temp5 + 0x20;\n            var5 = 0x0432;\n            var var6 = 0x00;\n        \n            if (msg.value > 0x0de0b6b3a7640000) {\n                var5 = func_06FB(var6);\n                memory[var4:var4 + 0x20] = var5;\n                var temp6 = var3;\n                var temp7 = var1;\n                storage[temp7] = (storage[temp7] & ~0xffffffffffffffffffffffffffffffffffffffff) | memory[temp6:temp6 + 0x20];\n                storage[temp7 + 0x01] = memory[temp6 + 0x20:temp6 + 0x20 + 0x20];\n                storage[temp7 + 0x02] = memory[temp6 + 0x40:temp6 + 0x40 + 0x20];\n                var temp8 = temp7 + 0x03;\n                storage[temp8] = memory[temp6 + 0x60:temp6 + 0x60 + 0x20] | (storage[temp8] & ~0xff);\n                var temp9 = msg.value;\n                storage[0x05] = storage[0x05] + (temp9 * 0x63) / 0x64;\n                var temp10 = memory[0x40:0x60];\n                memory[temp10:temp10 + 0x00] = address(storage[0x04] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(temp9 / 0x64)(memory[temp10:temp10 + 0x00]);\n                var temp11 = memory[0x40:0x60];\n                memory[temp11:temp11 + 0x20] = msg.sender;\n                memory[temp11 + 0x20:temp11 + 0x20 + 0x20] = msg.value;\n                var temp12 = memory[0x40:0x60];\n                log(memory[temp12:temp12 + temp11 - temp12 + 0x40], [0xd90d253a9de34d2fdd5a75ae49ea17fcb43af32fc8ea08cc6d2341991dd3872e]);\n                return;\n            } else {\n                var6 = 0x6e;\n                var5 = var6;\n                // Error: Could not resolve jump destination!\n            }\n        } else {\n            memory[0x00:0x20] = var3;\n            var temp13 = keccak256(memory[0x00:0x20]);\n            var temp14 = temp13 + var5 * 0x04;\n            var5 = 0x03dc;\n            var6 = temp14;\n            var var7 = temp13 + var4 * 0x04;\n        \n            if (var6 <= var7) {\n                var5 = func_03CE(var6, var7);\n                goto label_03DC;\n            } else {\n            label_0209:\n                var temp15 = var7;\n                storage[temp15] = storage[temp15] & ~0xffffffffffffffffffffffffffffffffffffffff;\n                storage[temp15 + 0x01] = 0x00;\n                storage[temp15 + 0x02] = 0x00;\n                var7 = temp15 + 0x01;\n                var temp16 = temp15 + 0x03;\n                storage[temp16] = storage[temp16] & ~0xff;\n            \n                if (var6 > var7) { goto label_0209; }\n            \n                var5 = func_03CE(var6, var7);\n                // Error: Could not resolve method call return address!\n            }\n        }\n    }\n    \n    function func_025E() returns (var r0) { return block.timestamp / 0x015180; }\n    \n    function setOfficialWebsite(var arg0) {\n        var temp0 = arg0;\n        var var0 = 0x01;\n        var temp1 = memory[temp0:temp0 + 0x20];\n        var var2 = temp1;\n        var temp2 = storage[var0];\n        memory[0x00:0x20] = var0;\n        var var3 = keccak256(memory[0x00:0x20]);\n        var var4 = temp0 + 0x20;\n        var var1 = var3 + ((!(temp2 & 0x01) * 0x0100 - 0x01 & temp2) / 0x02 + 0x1f) / 0x20;\n    \n        if (0x1f < var2) {\n            var temp3 = var2;\n            storage[var0] = temp3 + temp3 + 0x01;\n        \n            if (!temp3) {\n            label_0318:\n                var temp4 = var1;\n                var1 = 0x03c9;\n                var2 = temp4;\n            \n                if (var2 <= var3) {\n                    var1 = func_03CE(var2, var3);\n                \n                label_03C9:\n                    return;\n                } else {\n                    var1 = func_0329(var2, var3);\n                    goto label_03C9;\n                }\n            } else {\n                var temp5 = var2;\n                var temp6 = var4;\n                var2 = temp6;\n                var4 = var2 + temp5;\n            \n                if (var4 <= var2) { goto label_0318; }\n            \n            label_034F:\n                var temp7 = var2;\n                var temp8 = var3;\n                storage[temp8] = memory[temp7:temp7 + 0x20];\n                var2 = temp7 + 0x20;\n                var4 = var4;\n                var3 = temp8 + 0x01;\n            \n                if (var4 <= var2) { goto label_0318; }\n                else { goto label_034F; }\n            }\n        } else {\n            var temp9 = var2;\n            storage[var0] = temp9 + temp9 | (memory[var4:var4 + 0x20] & ~0xff);\n            var temp10 = var1;\n            var1 = 0x03c9;\n            var2 = temp10;\n        \n            if (var2 <= var3) {\n                var1 = func_03CE(var2, var3);\n                goto label_03C9;\n            } else {\n                var1 = func_0329(var2, var3);\n                goto label_03C9;\n            }\n        }\n    }\n    \n    function func_0329(var arg0, var arg1) returns (var r0) {\n        var temp0 = arg1;\n        storage[temp0] = 0x00;\n        arg1 = temp0 + 0x01;\n    \n        if (arg0 <= arg1) {\n            r0 = func_03CE(arg0, arg1);\n            // Error: Could not resolve method call return address!\n        } else {\n            r0 = func_0329(arg0, arg1);\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function func_03CE(var arg0, var arg1) returns (var r0) { return arg0; }\n    \n    function found() {\n        storage[0x05] = msg.value + storage[0x05];\n    }\n    \n    function func_06FB(var arg0) returns (var r0) {\n        if (msg.value <= 0x8ac7230489e80000) {\n            arg0 = 0x78;\n            goto label_0265;\n        } else if (msg.value > 0x056bc75e2d63100000) {\n            arg0 = 0x00;\n        \n        label_0265:\n            return arg0;\n        } else {\n            arg0 = 0x82;\n            goto label_0265;\n        }\n    }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n    \n        if (msg.data.length) { goto label_000B; }\n    \n    label_0056:\n        var var0 = 0x0247;\n    \n        if (msg.value >= 0x016345785d8a0000) {\n            var var1 = 0x0251;\n            invest();\n            var1 = 0x0268;\n            var var2 = 0x00;\n            var var3 = 0x00;\n            var var4 = 0x00;\n            var var5 = 0x0364;\n            var5 = func_025E();\n            // Error: Could not resolve method call return address!\n        } else {\n        label_0002:\n            memory[0x40:0x60] = var0;\n        \n            if (!msg.data.length) { goto label_0056; }\n        \n        label_000B:\n            var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (var0 == 0x104b6704) {\n                // Dispatch table entry for currentManager()\n                var1 = 0x026a;\n                var2 = storage[0x04] & 0x02 ** 0xa0 - 0x01;\n                var temp0 = memory[0x40:0x60];\n                memory[temp0:temp0 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n                var temp1 = memory[0x40:0x60];\n                return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n            } else if (var0 == 0x3d750b28) {\n                // Dispatch table entry for found()\n                var1 = 0x0247;\n                var temp2 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp2 & msg.sender != temp2 & storage[0x00]) { goto label_0002; }\n            \n                found();\n                stop();\n            } else if (var0 == 0x3feb5f2b) {\n                // Dispatch table entry for investors(uint256)\n                var1 = 0x0287;\n                var2 = msg.data[0x04:0x24];\n                var3 = 0x02;\n                var4 = var2;\n            \n                if (var4 >= storage[var3]) { goto label_0002; }\n            \n                var2, var3, var4, var5 = investors(var2, var3);\n                var temp3 = memory[0x40:0x60];\n                memory[temp3:temp3 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n                memory[temp3 + 0x20:temp3 + 0x20 + 0x20] = var3;\n                memory[temp3 + 0x40:temp3 + 0x40 + 0x20] = var4;\n                memory[temp3 + 0x60:temp3 + 0x60 + 0x20] = var5 & 0xff;\n                var temp4 = memory[0x40:0x60];\n                return memory[temp4:temp4 + temp3 - temp4 + 0x80];\n            } else if (var0 == 0xb3a2a6c0) {\n                // Dispatch table entry for setOfficialWebsite(string)\n                var temp5 = memory[0x40:0x60];\n                var temp6 = msg.data[0x04:0x24];\n                var temp7 = msg.data[temp6 + 0x04:temp6 + 0x04 + 0x20];\n                memory[0x40:0x60] = temp5 + (temp7 + 0x1f) / 0x20 * 0x20 + 0x20;\n                memory[temp5:temp5 + 0x20] = temp7;\n                var1 = 0x0247;\n                memory[temp5 + 0x20:temp5 + 0x20 + temp7] = msg.data[temp6 + 0x24:temp6 + 0x24 + temp7];\n                var2 = temp5;\n                var temp8 = 0x02 ** 0xa0 - 0x01;\n            \n                if (temp8 & msg.sender != temp8 & storage[0x00]) { goto label_0002; }\n            \n                setOfficialWebsite(var2);\n                stop();\n            } else if (var0 == 0xb69ef8a8) {\n                // Dispatch table entry for balance()\n                var1 = 0x02bb;\n                var2 = storage[0x05];\n                var temp9 = memory[0x40:0x60];\n                memory[temp9:temp9 + 0x20] = var2;\n                var temp10 = memory[0x40:0x60];\n                return memory[temp10:temp10 + temp9 - temp10 + 0x20];\n            } else if (var0 == 0xe8b5e51f) {\n                // Dispatch table entry for invest()\n                var1 = 0x0247;\n                invest();\n                stop();\n            } else { goto label_0056; }\n        }\n    }\n    \n    function investors(var arg0, var arg1) returns (var arg0, var arg1, var r2, var r3) {\n        memory[0x00:0x20] = arg1;\n        var temp0 = arg0 * 0x04;\n        arg0 = storage[temp0 + 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace] & 0x02 ** 0xa0 - 0x01;\n        r2 = storage[temp0 + 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0];\n        arg1 = storage[temp0 + 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf];\n        r3 = storage[temp0 + 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad1] & 0xff;\n        return arg0, arg1, r2, r3;\n    }\n    \n    function invest() {\n        var var0 = 0x02;\n        var temp0 = storage[var0];\n        var var1 = temp0;\n        var temp1 = var1 + 0x01;\n        var var2 = temp1;\n        storage[var0] = var2;\n        var var3 = var0;\n        var var4 = var2;\n        var var5 = var1;\n    \n        if (!var5 > var4) {\n        label_03DC:\n            var temp2 = var0;\n            var0 = var2;\n            memory[0x00:0x20] = temp2;\n            var1 = var1 * 0x04 + keccak256(memory[0x00:0x20]);\n            var2 = 0x00;\n            var temp3 = memory[0x40:0x60];\n            var3 = temp3;\n            memory[0x40:0x60] = var3 + 0x80;\n            memory[var3:var3 + 0x20] = msg.sender;\n            var temp4 = var3 + 0x20;\n            memory[temp4:temp4 + 0x20] = msg.value;\n            var4 = temp4 + 0x20;\n            var5 = 0x0411;\n            var5 = func_025E();\n            var temp5 = var4;\n            memory[temp5:temp5 + 0x20] = var5;\n            var4 = temp5 + 0x20;\n            var5 = 0x0432;\n            var var6 = 0x00;\n        \n            if (msg.value > 0x0de0b6b3a7640000) {\n                var5 = func_06FB(var6);\n                memory[var4:var4 + 0x20] = var5;\n                var temp6 = var3;\n                var temp7 = var1;\n                storage[temp7] = (storage[temp7] & ~0xffffffffffffffffffffffffffffffffffffffff) | memory[temp6:temp6 + 0x20];\n                storage[temp7 + 0x01] = memory[temp6 + 0x20:temp6 + 0x20 + 0x20];\n                storage[temp7 + 0x02] = memory[temp6 + 0x40:temp6 + 0x40 + 0x20];\n                var temp8 = temp7 + 0x03;\n                storage[temp8] = memory[temp6 + 0x60:temp6 + 0x60 + 0x20] | (storage[temp8] & ~0xff);\n                var temp9 = msg.value;\n                storage[0x05] = storage[0x05] + (temp9 * 0x63) / 0x64;\n                var temp10 = memory[0x40:0x60];\n                memory[temp10:temp10 + 0x00] = address(storage[0x04] & 0x02 ** 0xa0 - 0x01).call.gas(0x00).value(temp9 / 0x64)(memory[temp10:temp10 + 0x00]);\n                var temp11 = memory[0x40:0x60];\n                memory[temp11:temp11 + 0x20] = msg.sender;\n                memory[temp11 + 0x20:temp11 + 0x20 + 0x20] = msg.value;\n                var temp12 = memory[0x40:0x60];\n                log(memory[temp12:temp12 + temp11 - temp12 + 0x40], [0xd90d253a9de34d2fdd5a75ae49ea17fcb43af32fc8ea08cc6d2341991dd3872e]);\n                return;\n            } else {\n                var6 = 0x6e;\n                var5 = var6;\n                // Error: Could not resolve jump destination!\n            }\n        } else {\n            memory[0x00:0x20] = var3;\n            var temp13 = keccak256(memory[0x00:0x20]);\n            var temp14 = temp13 + var5 * 0x04;\n            var5 = 0x03dc;\n            var6 = temp14;\n            var var7 = temp13 + var4 * 0x04;\n        \n            if (var6 <= var7) {\n                var5 = func_03CE(var6, var7);\n                goto label_03DC;\n            } else {\n            label_0209:\n                var temp15 = var7;\n                storage[temp15] = storage[temp15] & ~0xffffffffffffffffffffffffffffffffffffffff;\n                storage[temp15 + 0x01] = 0x00;\n                storage[temp15 + 0x02] = 0x00;\n                var7 = temp15 + 0x01;\n                var temp16 = temp15 + 0x03;\n                storage[temp16] = storage[temp16] & ~0xff;\n            \n                if (var6 > var7) { goto label_0209; }\n            \n                var5 = func_03CE(var6, var7);\n                // Error: Could not resolve method call return address!\n            }\n        }\n    }\n    \n    function func_025E() returns (var r0) { return block.timestamp / 0x015180; }\n    \n    function setOfficialWebsite(var arg0) {\n        var temp0 = arg0;\n        var var0 = 0x01;\n        var temp1 = memory[temp0:temp0 + 0x20];\n        var var2 = temp1;\n        var temp2 = storage[var0];\n        memory[0x00:0x20] = var0;\n        var var3 = keccak256(memory[0x00:0x20]);\n        var var4 = temp0 + 0x20;\n        var var1 = var3 + ((!(temp2 & 0x01) * 0x0100 - 0x01 & temp2) / 0x02 + 0x1f) / 0x20;\n    \n        if (0x1f < var2) {\n            var temp3 = var2;\n            storage[var0] = temp3 + temp3 + 0x01;\n        \n            if (!temp3) {\n            label_0318:\n                var temp4 = var1;\n                var1 = 0x03c9;\n                var2 = temp4;\n            \n                if (var2 <= var3) {\n                    var1 = func_03CE(var2, var3);\n                \n                label_03C9:\n                    return;\n                } else {\n                    var1 = func_0329(var2, var3);\n                    goto label_03C9;\n                }\n            } else {\n                var temp5 = var2;\n                var temp6 = var4;\n                var2 = temp6;\n                var4 = var2 + temp5;\n            \n                if (var4 <= var2) { goto label_0318; }\n            \n            label_034F:\n                var temp7 = var2;\n                var temp8 = var3;\n                storage[temp8] = memory[temp7:temp7 + 0x20];\n                var2 = temp7 + 0x20;\n                var4 = var4;\n                var3 = temp8 + 0x01;\n            \n                if (var4 <= var2) { goto label_0318; }\n                else { goto label_034F; }\n            }\n        } else {\n            var temp9 = var2;\n            storage[var0] = temp9 + temp9 | (memory[var4:var4 + 0x20] & ~0xff);\n            var temp10 = var1;\n            var1 = 0x03c9;\n            var2 = temp10;\n        \n            if (var2 <= var3) {\n                var1 = func_03CE(var2, var3);\n                goto label_03C9;\n            } else {\n                var1 = func_0329(var2, var3);\n                goto label_03C9;\n            }\n        }\n    }\n    \n    function func_0329(var arg0, var arg1) returns (var r0) {\n        var temp0 = arg1;\n        storage[temp0] = 0x00;\n        arg1 = temp0 + 0x01;\n    \n        if (arg0 <= arg1) {\n            r0 = func_03CE(arg0, arg1);\n            // Error: Could not resolve method call return address!\n        } else {\n            r0 = func_0329(arg0, arg1);\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function func_03CE(var arg0, var arg1) returns (var r0) { return arg0; }\n    \n    function found() {\n        storage[0x05] = msg.value + storage[0x05];\n    }\n    \n    function func_06FB(var arg0) returns (var r0) {\n        if (msg.value <= 0x8ac7230489e80000) {\n            arg0 = 0x78;\n            goto label_0265;\n        } else if (msg.value > 0x056bc75e2d63100000) {\n            arg0 = 0x00;\n        \n        label_0265:\n            return arg0;\n        } else {\n            arg0 = 0x82;\n            goto label_0265;\n        }\n    }\n}\n\n.",
	"status": "1",
	"time_cost": 23.98414969444275,
	"usage": {
		"completion_tokens": 572,
		"prompt_tokens": 3572,
		"total_tokens": 4144
	}
}