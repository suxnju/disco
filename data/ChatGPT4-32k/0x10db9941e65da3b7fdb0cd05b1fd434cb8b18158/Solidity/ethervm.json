{
	"address": "0x10db9941e65da3b7fdb0cd05b1fd434cb8b18158",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is the Solidity contract code that matches the decompiled code logic:\n\n```solidity\npragma solidity ^0.4.24;\n\ncontract Contract {\n    uint256 private startStake;\n    uint256 private minStake;\n    uint256 private endStake;\n    uint256 private startAuction;\n    uint256 private endAuction;\n    address private owner;\n    address private token;\n    uint256 private tokenBalance;\n    uint256 private reserveStake;\n    uint256 private slotStake;\n    uint256 private slotPrice;\n    uint256 private slotBid;\n    uint256 private slotWinner;\n    uint256 private lastFinaliseBlockNumber;\n    uint256 private auctionId;\n    uint256 private totalAuctionSlots;\n    uint256 private totalAuctionSupply;\n    uint256 private lastClaimedAuctionSlot;\n    uint256 private sealedBid;\n    uint256 private sealedBidBlockNumber;\n    uint256 private slotSupply;\n    \n    function main() external payable {\n        // the decompiled code is hard to translate directly into Solidity\n        // as it includes lots of low-level EVM operations, this is a rough \n        // approximation of what the code might look like at a high level\n        // note: this code is not expected to compile or run correctly\n        if (msg.sender == owner) {\n            if (msg.value == 0) {\n                startAuction();\n            } else {\n                finalizeAuction();\n            }\n        } else {\n            if (msg.value > 0) {\n                bid();\n            } else {\n                claimSlot();\n            }\n        }\n    }\n    \n    function startAuction() internal {\n        require(block.number < startAuction, \"Auction already started\");\n        require(msg.value == 0, \"No value should be sent\");\n        \n        startAuction = block.number;\n        endAuction = block.number + auctionLength;\n        auctionId++;\n    }\n    \n    function finalizeAuction() internal {\n        require(block.number > endAuction, \"Auction not yet over\");\n        require(msg.value == 0, \"No value should be sent\");\n\n        lastFinaliseBlockNumber = block.number;\n        lastClaimedAuctionSlot = 0;\n        totalAuctionSupply = tokenBalance;\n    }\n    \n    function bid() internal {\n        require(block.number >= startAuction, \"Auction not yet started\");\n        require(block.number <= endAuction, \"Auction already ended\");\n        require(msg.value >= minStake, \"Bid too low\");\n        \n        sealedBid = msg.value;\n        sealedBidBlockNumber = block.number;\n    }\n    \n    function claimSlot() internal {\n        require(block.number > endAuction, \"Auction not yet over\");\n        require(msg.value == 0, \"No value should be sent\");\n        require(lastClaimedAuctionSlot < totalAuctionSlots, \"All slots claimed\");\n\n        lastClaimedAuctionSlot++;\n        slotSupply = totalAuctionSupply / totalAuctionSlots;\n        totalAuctionSupply -= slotSupply;\n        tokenBalance -= slotSupply;\n    }\n}\n```\n\nThe contract seems to be some kind of auction contract where users can start auctions, bid on them, and claim slots. However, the decompiled code is too low-level and lacks context to determine the exact functioning of the contract. The actual contract might have more functions and events, and might interact with other contracts or tokens.",
				"role": "assistant"
			}
		}
	],
	"created": 1700475207,
	"id": "chatcmpl-8MvZPIQ2aZ5gzNRaBUv2mq4P5H5vn",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp47 = block.number < storage[keccak256(memory[0xc0:0xe0]) + 0x04];\n            memory[0xc0:0xe0] = 0x0b;\n            var temp48 = (storage[keccak256(memory[0xc0:0xe0]) + 0x01] > 0x00) & temp47;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp49 = storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n            memory[0xc0:0xe0] = 0x0b;\n            var temp50 = (storage[keccak256(memory[0xc0:0xe0]) + 0x02] < temp49) & temp48;\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x00:0x20] = !storage[keccak256(memory[0xc0:0xe0])] & temp50;\n            var-1 = memory[0x00:0x20];\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp46 = !storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x00:0x20] = (storage[keccak256(memory[0xc0:0xe0])] > 0x00) | temp46;\n            var-1 = memory[0x00:0x20];\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0xe0]) + 0x05];\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0xe0]) + 0x03];\n        \n            if (block.number > memory[0x0180:0x01a0]) {\n                memory[0xc0:0xe0] = 0x0b;\n            \n                if (!storage[keccak256(memory[0xc0:0xe0]) + 0x07]) {\n                    var-1 = 0x00;\n                    goto label_0217;\n                } else if (block.number >= memory[0x0180:0x01a0]) {\n                    var-1 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                    var0 = storage[keccak256(memory[0xc0:0xe0]) + 0x07];\n                \n                    if (block.number < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp44 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                \n                    if ((storage[keccak256(memory[0xc0:0xe0]) + 0x07] * temp44) / var0 != var-1) { revert(memory[0x00:0x00]); }\n                \n                    if (block.number < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp45 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                    var-1 = storage[keccak256(memory[0xc0:0xe0]) + 0x07] * temp45;\n                \n                label_0217:\n                    memory[0xc0:0xe0] = 0x0b;\n                \n                    if (memory[0x0160:0x0180] < storage[keccak256(memory[0xc0:0xe0]) + 0x06]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xc0:0xe0] = 0x0b;\n                    var0 = memory[0x0160:0x0180] - storage[keccak256(memory[0xc0:0xe0]) + 0x06];\n                \n                    if (var-1 <= var0) {\n                        memory[0x01a0:0x01c0] = var-1;\n                    \n                        if (memory[0x0160:0x0180] < memory[0x01a0:0x01c0]) { revert(memory[0x00:0x00]); }\n                    \n                    label_0272:\n                        memory[0x00:0x20] = memory[0x0160:0x0180] - memory[0x01a0:0x01c0];\n                        var-1 = memory[0x00:0x20];\n                        // Error: Could not resolve jump destination!\n                    } else {\n                        var1 = var0;\n                        memory[0x01a0:0x01c0] = var1;\n                    \n                        if (memory[0x0160:0x0180] >= memory[0x01a0:0x01c0]) { goto label_0272; }\n                        else { revert(memory[0x00:0x00]); }\n                    }\n                } else { revert(memory[0x00:0x00]); }\n            } else {\n                memory[0x00:0x20] = memory[0x0160:0x0180];\n                var-1 = memory[0x00:0x20];\n                // Error: Could not resolve jump destination!\n            }\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            var-1 = memory[0x0140:0x0160];\n            var0 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            // Error: StackRead before write???\n            var var-1;\n            // Error: StackRead before write???\n            var var-2;\n            memory[0x0160:0x0180] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x03;\n            memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (memory[0x01a0:0x01c0] <= 0x00) {\n                memory[0x00:0x20] = memory[0x0180:0x01a0];\n                var-2 = memory[0x00:0x20];\n                // Error: Could not resolve jump destination!\n            } else {\n                memory[0x0200:0x0220] = 0x08c379a0;\n                memory[0x0220:0x0240] = 0x20;\n                memory[0x0240:0x0260] = 0x27;\n                memory[0x0260:0x0280] = 0x49732062696464657220616e642061756374696f6e206e6f742066696e616c69;\n                memory[0x0280:0x02a0] = 0x7365642079657400000000000000000000000000000000000000000000000000;\n                var-2 = memory[0x0140:0x0160];\n                var-1 = memory[0x0160:0x0180];\n                var0 = memory[0x0180:0x01a0];\n                var1 = memory[0x01a0:0x01c0];\n                var2 = 0x06;\n                // Unhandled termination\n            }\n        } else if (memory[0x00:0x20] != 0xa3169b14) {\n            if (memory[0x00:0x20] != 0x40fff189) {\n                if (memory[0x00:0x20] != 0x287d274b) {\n                    if (memory[0x00:0x20] != 0x454a2ab3) {\n                        if (memory[0x00:0x20] != 0x579632a9) {\n                            if (memory[0x00:0x20] != 0xc5f0204c) {\n                                if (memory[0x00:0x20] != 0x2e1bc98f) {\n                                    if (memory[0x00:0x20] != 0xa0b5323f) {\n                                        if (memory[0x00:0x20] != 0x90d209ca) {\n                                            if (memory[0x00:0x20] != 0xe335cfab) {\n                                                if (memory[0x00:0x20] != 0x7e00ab0a) {\n                                                    if (memory[0x00:0x20] != 0x5a58cd4c) {\n                                                        if (memory[0x00:0x20] != 0xb9f890de) {\n                                                            if (memory[0x00:0x20] != 0x190eaaba) {\n                                                                if (memory[0x00:0x20] != 0x151a67b4) {\n                                                                    if (memory[0x00:0x20] != 0xa9215db4) {\n                                                                        if (memory[0x00:0x20] != 0x714436f2) {\n                                                                            if (memory[0x00:0x20] != 0x83e98bc3) {\n                                                                                if (memory[0x00:0x20] != 0x8146f323) {\n                                                                                    if (memory[0x00:0x20] != 0xeb91d37e) {\n                                                                                        if (memory[0x00:0x20] != 0xbac4159d) {\n                                                                                            if (memory[0x00:0x20] != 0x8da5cb5b) {\n                                                                                                if (memory[0x00:0x20] != 0x573c0b0e) {\n                                                                                                    if (memory[0x00:0x20] != 0xefec6739) {\n                                                                                                        if (memory[0x00:0x20] != 0x7cfb9d7f) {\n                                                                                                            if (memory[0x00:0x20] != 0x34e11eea) {\n                                                                                                                if (memory[0x00:0x20] != 0xca0341c6) {\n                                                                                                                    if (memory[0x00:0x20] != 0xd750da0b) {\n                                                                                                                        if (memory[0x00:0x20] != 0x43b8063a) {\n                                                                                                                            if (memory[0x00:0x20] != 0xd2572c8b) {\n                                                                                                                                if (memory[0x00:0x20] != 0x78be921f) {\n                                                                                                                                    if (memory[0x00:0x20] != 0x5d85af0c) {\n                                                                                                                                        if (memory[0x00:0x20] != 0xca964f6d) {\n                                                                                                                                            if (memory[0x00:0x20] != 0x965ac0af) {\n                                                                                                                                                if (memory[0x00:0x20] != 0xfbc6ef00) {\n                                                                                                                                                    if (memory[0x00:0x20] != 0x8cf0d66f) {\n                                                                                                                                                        if (memory[0x00:0x20] != 0x20f8d74c) {\n                                                                                                                                                            if (memory[0x00:0x20] != 0x0d9be7dd) {\n                                                                                                                                                                if (memory[0x00:0x20] != 0x6ebcddb8) {\n                                                                                                                                                                    if (memory[0x00:0x20] != 0x85245104) {\n                                                                                                                                                                        if (memory[0x00:0x20] != 0xfc614adb) {\n                                                                                                                                                                            if (memory[0x00:0x20] != 0x96bcc37f) {\n                                                                                                                                                                                if (memory[0x00:0x20] != 0x39c6dd93) {\n                                                                                                                                                                                    if (memory[0x00:0x20] != 0xb99fa9fc) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                \n                                                                                                                                                                                    if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                \n                                                                                                                                                                                    memory[0x00:0x20] = storage[0x0d];\n                                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                                                    memory[0x00:0x20] = storage[0x0c];\n                                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x09];\n                                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n                                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                                        memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x07];\n                                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x06];\n                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x05];\n                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x04];\n                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                        memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x03];\n                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                        memory[0x00:0x20] = storage[0x0a];\n                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                } else if (!msg.value) {\n                                                                                                                                    var var0 = msg.data[0x04:0x24];\n                                                                                                                                \n                                                                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                \n                                                                                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                    memory[0xc0:0xe0] = 0x09;\n                                                                                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                            } else if (!msg.value) {\n                                                                                                                                var0 = msg.data[0x04:0x24];\n                                                                                                                            \n                                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                            \n                                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                memory[0xc0:0xe0] = 0x09;\n                                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                                return memory[0x00:0x20];\n                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                        } else if (!msg.value) {\n                                                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                                                        \n                                                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                        \n                                                                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                            memory[0xc0:0xe0] = 0x09;\n                                                                                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                            return memory[0x00:0x20];\n                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                    } else if (!msg.value) {\n                                                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                                                    \n                                                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                    \n                                                                                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                        memory[0xc0:0xe0] = 0x08;\n                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                                        return memory[0x00:0x20];\n                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                } else if (!msg.value) {\n                                                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                                                \n                                                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                \n                                                                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                    memory[0xc0:0xe0] = 0x07;\n                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                                    return memory[0x00:0x20];\n                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                            } else if (!msg.value) {\n                                                                                                                var0 = msg.data[0x04:0x24];\n                                                                                                            \n                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                            \n                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                memory[0xc0:0xe0] = 0x06;\n                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                return memory[0x00:0x20];\n                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                        } else if (!msg.value) {\n                                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                                        \n                                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                        \n                                                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                            memory[0xc0:0xe0] = 0x06;\n                                                                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                            return memory[0x00:0x20];\n                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                    } else if (!msg.value) {\n                                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                                    \n                                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                    \n                                                                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                        memory[0xc0:0xe0] = 0x05;\n                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                        return memory[0x00:0x20];\n                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                } else if (!msg.value) {\n                                                                                                    memory[0x00:0x20] = storage[0x02];\n                                                                                                    return memory[0x00:0x20];\n                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                            } else if (!msg.value) {\n                                                                                                memory[0x00:0x20] = storage[0x01];\n                                                                                                return memory[0x00:0x20];\n                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                        } else if (!msg.value) {\n                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                        \n                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x0140:0x0160] = 0xce96fe20;\n                                                                                            memory[0x0160:0x0180] = msg.data[0x04:0x24];\n                                                                                            var0 = memory[0x0160:0x0180];\n                                                                                            var var1 = 0x06;\n                                                                                            // Unhandled termination\n                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                    } else if (!msg.value) {\n                                                                                        var0 = 0x06;\n                                                                                        // Unhandled termination\n                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                } else if (!msg.value) {\n                                                                                    var0 = 0x06;\n                                                                                    // Unhandled termination\n                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                            } else if (!msg.value) {\n                                                                                var0 = 0x06;\n                                                                                // Unhandled termination\n                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                        } else if (!msg.value) {\n                                                                            memory[0x0160:0x0180] = 0x08c379a0;\n                                                                            memory[0x0180:0x01a0] = 0x20;\n                                                                            memory[0x01a0:0x01c0] = 0x13;\n                                                                            memory[0x01c0:0x01e0] = 0x536c6f7473206e6f74207965742066696e616c00000000000000000000000000;\n                                                                            var0 = 0x06;\n                                                                            // Unhandled termination\n                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                    } else if (!msg.value) {\n                                                                        memory[0x0160:0x0180] = 0x08c379a0;\n                                                                        memory[0x0180:0x01a0] = 0x20;\n                                                                        memory[0x01a0:0x01c0] = 0x15;\n                                                                        memory[0x01c0:0x01e0] = 0x5374616b657273206e6f74207965742066696e616c0000000000000000000000;\n                                                                        var0 = 0x06;\n                                                                        // Unhandled termination\n                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                } else if (!msg.value) {\n                                                                    var0 = msg.data[0x04:0x24];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x0160:0x0180] = 0x08c379a0;\n                                                                    memory[0x0180:0x01a0] = 0x20;\n                                                                    memory[0x01a0:0x01c0] = 0x13;\n                                                                    memory[0x01c0:0x01e0] = 0x536c6f7473206e6f74207965742066696e616c00000000000000000000000000;\n                                                                    var0 = 0x06;\n                                                                    // Unhandled termination\n                                                                } else { revert(memory[0x00:0x00]); }\n                                                            } else if (!msg.value) {\n                                                                memory[0x00:0x20] = 0x0186a0;\n                                                                return memory[0x00:0x20];\n                                                            } else { revert(memory[0x00:0x00]); }\n                                                        } else if (!msg.value) {\n                                                            memory[0x00:0x20] = storage[0x00];\n                                                            return memory[0x00:0x20];\n                                                        } else { revert(memory[0x00:0x00]); }\n                                                    } else if (!msg.value) {\n                                                        memory[0x0140:0x0160] = 0x08c379a0;\n                                                        memory[0x0160:0x0180] = 0x20;\n                                                        memory[0x0180:0x01a0] = 0x0a;\n                                                        memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                                                    \n                                                        if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                                                    \n                                                        memory[0x01e0:0x0200] = 0x08c379a0;\n                                                        memory[0x0200:0x0220] = 0x20;\n                                                        memory[0x0220:0x0240] = 0x0f;\n                                                        memory[0x0240:0x0260] = 0x496e206c6f636b75702070686173650000000000000000000000000000000000;\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x01fc:0x0280]); }\n                                                    \n                                                        memory[0x0280:0x02a0] = 0x08c379a0;\n                                                        memory[0x02a0:0x02c0] = 0x20;\n                                                        memory[0x02c0:0x02e0] = 0x1a;\n                                                        memory[0x02e0:0x0300] = 0x6561726c6965737444656c657465206e6f742072656163686564000000000000;\n                                                    \n                                                        if (block.timestamp < storage[0x02]) { revert(memory[0x029c:0x0320]); }\n                                                    \n                                                        if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0340:0x0360] = 0x70a08231;\n                                                        memory[0x0360:0x0380] = address(this);\n                                                        var temp0;\n                                                        temp0, memory[0x03c0:0x03e0] = address(storage[0x00]).staticcall.gas(msg.gas)(memory[0x035c:0x0380]);\n                                                    \n                                                        if (!temp0) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0320:0x0340] = memory[0x03c0:0x03e0];\n                                                    \n                                                        if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0400:0x0420] = 0xa9059cbb;\n                                                        memory[0x0420:0x0440] = storage[0x01];\n                                                        memory[0x0440:0x0460] = memory[0x0320:0x0340];\n                                                        var temp1;\n                                                        temp1, memory[0x04a0:0x04c0] = address(storage[0x00]).call.gas(msg.gas)(memory[0x041c:0x0460]);\n                                                    \n                                                        if (!temp1) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x03e0:0x0400] = memory[0x04a0:0x04c0];\n                                                        memory[0x04c0:0x04e0] = 0x08c379a0;\n                                                        memory[0x04e0:0x0500] = 0x20;\n                                                        memory[0x0500:0x0520] = 0x0f;\n                                                        memory[0x0520:0x0540] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n                                                    \n                                                        if (memory[0x03e0:0x0400]) { selfdestruct(storage[0x01]); }\n                                                        else { revert(memory[0x04dc:0x0560]); }\n                                                    } else { revert(memory[0x00:0x00]); }\n                                                } else if (!msg.value) {\n                                                    memory[0xc0:0xe0] = 0x0b;\n                                                    var temp2 = !storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                    memory[0xe0:0x0100] = msg.sender;\n                                                    memory[0xc0:0xe0] = 0x06;\n                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                \n                                                    if (!((storage[keccak256(memory[0xc0:0xe0]) + 0x01] < storage[0x0a]) | temp2)) {\n                                                    label_3E34:\n                                                    \n                                                        if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0180:0x01a0] = 0xa9059cbb;\n                                                        memory[0x01a0:0x01c0] = msg.sender;\n                                                        memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n                                                        var temp3;\n                                                        temp3, memory[0x0220:0x0240] = address(storage[0x00]).call.gas(msg.gas)(memory[0x019c:0x01e0]);\n                                                    \n                                                        if (!temp3) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0160:0x0180] = memory[0x0220:0x0240];\n                                                        memory[0x0240:0x0260] = 0x08c379a0;\n                                                        memory[0x0260:0x0280] = 0x20;\n                                                        memory[0x0280:0x02a0] = 0x0f;\n                                                        memory[0x02a0:0x02c0] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n                                                    \n                                                        if (!memory[0x0160:0x0180]) { revert(memory[0x025c:0x02e0]); }\n                                                    \n                                                        memory[0x00:0x20] = memory[0x0140:0x0160];\n                                                        return memory[0x00:0x20];\n                                                    } else {\n                                                        var0 = 0x0140;\n                                                        var temp4 = memory[var0:var0 + 0x20];\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x06;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                    \n                                                        if (memory[var0:var0 + 0x20] + storage[keccak256(memory[0xc0:0xe0])] < temp4) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x06;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                        var temp5 = var0;\n                                                        memory[temp5:temp5 + 0x20] = memory[temp5:temp5 + 0x20] + storage[keccak256(memory[0xc0:0xe0])];\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x06;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                        var temp6 = keccak256(memory[0xc0:0xe0]);\n                                                        storage[temp6] = 0x00;\n                                                        storage[temp6 + 0x01] = 0x00;\n                                                        goto label_3E34;\n                                                    }\n                                                } else { revert(memory[0x00:0x00]); }\n                                            } else if (!msg.value) {\n                                                memory[0xe0:0x0100] = msg.sender;\n                                                memory[0xc0:0xe0] = 0x07;\n                                                memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                var0 = memory[0x0140:0x0160];\n                                                var1 = memory[0x0160:0x0180];\n                                                memory[0x01a0:0x01c0] = 0xce96fe20;\n                                                memory[0x01c0:0x01e0] = msg.sender;\n                                                var var2 = memory[0x01c0:0x01e0];\n                                                var var3 = 0x06;\n                                                // Unhandled termination\n                                            } else { revert(memory[0x00:0x00]); }\n                                        } else if (!msg.value) {\n                                            var0 = msg.data[0x24:0x44];\n                                        \n                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0x0140:0x0160] = 0x08c379a0;\n                                            memory[0x0160:0x0180] = 0x20;\n                                            memory[0x0180:0x01a0] = 0x0f;\n                                            memory[0x01a0:0x01c0] = 0x4e6f742063757272656e74204149440000000000000000000000000000000000;\n                                        \n                                            if (msg.data[0x04:0x24] != storage[0x0a]) { revert(memory[0x015c:0x01e0]); }\n                                        \n                                            memory[0x0220:0x0240] = 0x08c379a0;\n                                            memory[0x0240:0x0260] = 0x20;\n                                            memory[0x0260:0x0280] = 0x14;\n                                            memory[0x0280:0x02a0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                                            var0 = memory[0x0140:0x0160];\n                                            var1 = memory[0x0160:0x0180];\n                                            var2 = memory[0x0180:0x01a0];\n                                            var3 = memory[0x01a0:0x01c0];\n                                            var var4 = memory[0x01c0:0x01e0];\n                                            var var5 = 0x06;\n                                            // Unhandled termination\n                                        } else { revert(memory[0x00:0x00]); }\n                                    } else if (!msg.value) {\n                                        memory[0x01a0:0x01c0] = 0x08c379a0;\n                                        memory[0x01c0:0x01e0] = 0x20;\n                                        memory[0x01e0:0x0200] = 0x1d;\n                                        memory[0x0200:0x0220] = 0x42696464696e67207068617365206f6620414944206e6f74206f766572000000;\n                                        memory[0xe0:0x0100] = msg.sender;\n                                        memory[0xc0:0xe0] = 0x09;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = storage[keccak256(memory[0xc0:0xe0]) + 0x02] < storage[0x0a];\n                                        var1 = memory[0x0140:0x0160];\n                                        var2 = 0x06;\n                                        // Unhandled termination\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    memory[0x0140:0x0160] = 0x08c379a0;\n                                    memory[0x0160:0x0180] = 0x20;\n                                    memory[0x0180:0x01a0] = 0x13;\n                                    memory[0x01a0:0x01c0] = 0x4e6f742063757272656e742061756374696f6e00000000000000000000000000;\n                                \n                                    if (msg.data[0x04:0x24] != storage[0x0a]) { revert(memory[0x015c:0x01e0]); }\n                                \n                                    memory[0x0220:0x0240] = 0x08c379a0;\n                                    memory[0x0240:0x0260] = 0x20;\n                                    memory[0x0260:0x0280] = 0x14;\n                                    memory[0x0280:0x02a0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                                    var0 = memory[0x0140:0x0160];\n                                    var1 = memory[0x0160:0x0180];\n                                    var2 = memory[0x0180:0x01a0];\n                                    var3 = memory[0x01a0:0x01c0];\n                                    var4 = memory[0x01c0:0x01e0];\n                                    var5 = 0x06;\n                                    // Unhandled termination\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                memory[0x0140:0x0160] = 0x08c379a0;\n                                memory[0x0160:0x0180] = 0x20;\n                                memory[0x0180:0x01a0] = 0x2e;\n                                memory[0x01a0:0x01c0] = 0x41756374696f6e206e6f742066696e616c6973656420796574206f72206e6f20;\n                                memory[0x01c0:0x01e0] = 0x61756374696f6e20746f20656e64000000000000000000000000000000000000;\n                                memory[0xc0:0xe0] = 0x0b;\n                            \n                                if (storage[keccak256(memory[0xc0:0xe0])] <= 0x00) { revert(memory[0x015c:0x0200]); }\n                            \n                                memory[0x0200:0x0220] = 0x08c379a0;\n                                memory[0x0220:0x0240] = 0x20;\n                                memory[0x0240:0x0260] = 0x0f;\n                                memory[0x0260:0x0280] = 0x4c6f636b7570206e6f74206f7665720000000000000000000000000000000000;\n                                memory[0xc0:0xe0] = 0x0b;\n                            \n                                if (block.number < storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x021c:0x02a0]); }\n                            \n                                memory[0xc0:0xe0] = 0x0b;\n                                memory[0x02a0:0x02c0] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                memory[0x02c0:0x02e0] = storage[0x0d];\n                                var0 = 0x0c;\n                            \n                                if (!memory[0x02a0:0x02c0]) {\n                                    var1 = 0x00;\n                                \n                                    if (storage[var0] >= var1) { goto label_2737; }\n                                    else { revert(memory[0x00:0x00]); }\n                                } else if ((memory[0x02a0:0x02c0] * memory[0x02c0:0x02e0]) / memory[0x02a0:0x02c0] == memory[0x02c0:0x02e0]) {\n                                    if (storage[var0] < memory[0x02a0:0x02c0] * memory[0x02c0:0x02e0]) { revert(memory[0x00:0x00]); }\n                                \n                                label_2737:\n                                \n                                    if (!memory[0x02a0:0x02c0]) {\n                                        var1 = 0x00;\n                                        var temp24 = var0;\n                                        storage[temp24] = storage[temp24] - var1;\n                                    \n                                        if (block.timestamp + 0x4f1a00 >= block.timestamp) { goto label_2786; }\n                                        else { revert(memory[0x00:0x00]); }\n                                    } else if ((memory[0x02a0:0x02c0] * memory[0x02c0:0x02e0]) / memory[0x02a0:0x02c0] == memory[0x02c0:0x02e0]) {\n                                        var temp7 = var0;\n                                        storage[temp7] = storage[temp7] - memory[0x02a0:0x02c0] * memory[0x02c0:0x02e0];\n                                    \n                                        if (block.timestamp + 0x4f1a00 < block.timestamp) { revert(memory[0x00:0x00]); }\n                                    \n                                    label_2786:\n                                        storage[0x02] = block.timestamp + 0x4f1a00;\n                                        var0 = 0x0300;\n                                        memory[var0:var0 + 0x20] = 0x00;\n                                        var1 = 0x012c;\n                                        var2 = memory[0x0300:0x0320];\n                                    \n                                        if (var2 >= 0x012c) { revert(memory[0x00:0x00]); }\n                                    \n                                    label_27AE:\n                                        memory[0xc0:0xe0] = 0x04;\n                                        memory[0x02e0:0x0300] = storage[keccak256(memory[0xc0:0xe0]) + var2];\n                                    \n                                        if (!memory[0x02e0:0x0300]) { goto label_28F7; }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        var2 = keccak256(memory[0xc0:0x0100]);\n                                        var3 = storage[var2];\n                                        memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                        memory[0xc0:0xe0] = 0x03;\n                                    \n                                        if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                            var temp8 = memory[0x02c0:0x02e0];\n                                            memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            var temp9 = storage[keccak256(memory[0xc0:0x0100])];\n                                            var temp10 = memory[0x02c0:0x02e0];\n                                            memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if ((storage[keccak256(memory[0xc0:0x0100])] * temp10) / temp9 != temp8) { revert(memory[0x00:0x00]); }\n                                        \n                                            var temp11 = memory[0x02c0:0x02e0];\n                                            memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            var4 = storage[keccak256(memory[0xc0:0x0100])] * temp11;\n                                        \n                                        label_284F:\n                                        \n                                            if (storage[var2] + var4 < var3) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                                var temp12 = memory[0x02c0:0x02e0];\n                                                memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var temp13 = storage[keccak256(memory[0xc0:0x0100])];\n                                                var temp14 = memory[0x02c0:0x02e0];\n                                                memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                                memory[0xc0:0xe0] = 0x03;\n                                            \n                                                if ((storage[keccak256(memory[0xc0:0x0100])] * temp14) / temp13 != temp12) { revert(memory[0x00:0x00]); }\n                                            \n                                                var temp15 = memory[0x02c0:0x02e0];\n                                                memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var temp16 = var2;\n                                                storage[temp16] = storage[temp16] + storage[keccak256(memory[0xc0:0x0100])] * temp15;\n                                                memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                var temp17 = var0;\n                                                var temp18 = memory[temp17:temp17 + 0x20] + 0x01;\n                                                memory[temp17:temp17 + 0x20] = temp18;\n                                            \n                                                if (var1 != temp18) {\n                                                label_279C:\n                                                    var2 = memory[0x0300:0x0320];\n                                                \n                                                    if (var2 < 0x012c) { goto label_27AE; }\n                                                    else { revert(memory[0x00:0x00]); }\n                                                } else {\n                                                label_28F7:\n                                                    memory[0xc0:0xe0] = 0x04;\n                                                    var temp19 = keccak256(memory[0xc0:0xe0]);\n                                                    storage[temp19] = 0x00;\n                                                    storage[temp19 + 0x01] = 0x00;\n                                                    storage[temp19 + 0x02] = 0x00;\n                                                    storage[temp19 + 0x03] = 0x00;\n                                                    storage[temp19 + 0x04] = 0x00;\n                                                    storage[temp19 + 0x05] = 0x00;\n                                                    storage[temp19 + 0x06] = 0x00;\n                                                    storage[temp19 + 0x07] = 0x00;\n                                                    storage[temp19 + 0x08] = 0x00;\n                                                    storage[temp19 + 0x09] = 0x00;\n                                                    storage[temp19 + 0x0a] = 0x00;\n                                                    storage[temp19 + 0x0b] = 0x00;\n                                                    storage[temp19 + 0x0c] = 0x00;\n                                                    storage[temp19 + 0x0d] = 0x00;\n                                                    storage[temp19 + 0x0e] = 0x00;\n                                                    storage[temp19 + 0x0f] = 0x00;\n                                                    storage[temp19 + 0x10] = 0x00;\n                                                    storage[temp19 + 0x11] = 0x00;\n                                                    storage[temp19 + 0x12] = 0x00;\n                                                    storage[temp19 + 0x13] = 0x00;\n                                                    storage[temp19 + 0x14] = 0x00;\n                                                    storage[temp19 + 0x15] = 0x00;\n                                                    storage[temp19 + 0x16] = 0x00;\n                                                    storage[temp19 + 0x17] = 0x00;\n                                                    storage[temp19 + 0x18] = 0x00;\n                                                    storage[temp19 + 0x19] = 0x00;\n                                                    storage[temp19 + 0x1a] = 0x00;\n                                                    storage[temp19 + 0x1b] = 0x00;\n                                                    storage[temp19 + 0x1c] = 0x00;\n                                                    storage[temp19 + 0x1d] = 0x00;\n                                                    storage[temp19 + 0x1e] = 0x00;\n                                                    storage[temp19 + 0x1f] = 0x00;\n                                                    storage[temp19 + 0x20] = 0x00;\n                                                    storage[temp19 + 0x21] = 0x00;\n                                                    storage[temp19 + 0x22] = 0x00;\n                                                    storage[temp19 + 0x23] = 0x00;\n                                                    storage[temp19 + 0x24] = 0x00;\n                                                    storage[temp19 + 0x25] = 0x00;\n                                                    storage[temp19 + 0x26] = 0x00;\n                                                    storage[temp19 + 0x27] = 0x00;\n                                                    storage[temp19 + 0x28] = 0x00;\n                                                    storage[temp19 + 0x29] = 0x00;\n                                                    storage[temp19 + 0x2a] = 0x00;\n                                                    storage[temp19 + 0x2b] = 0x00;\n                                                    storage[temp19 + 0x2c] = 0x00;\n                                                    storage[temp19 + 0x2d] = 0x00;\n                                                    storage[temp19 + 0x2e] = 0x00;\n                                                    storage[temp19 + 0x2f] = 0x00;\n                                                    storage[temp19 + 0x30] = 0x00;\n                                                    storage[temp19 + 0x31] = 0x00;\n                                                    storage[temp19 + 0x32] = 0x00;\n                                                    storage[temp19 + 0x33] = 0x00;\n                                                    storage[temp19 + 0x34] = 0x00;\n                                                    storage[temp19 + 0x35] = 0x00;\n                                                    storage[temp19 + 0x36] = 0x00;\n                                                    storage[temp19 + 0x37] = 0x00;\n                                                    storage[temp19 + 0x38] = 0x00;\n                                                    storage[temp19 + 0x39] = 0x00;\n                                                    storage[temp19 + 0x3a] = 0x00;\n                                                    storage[temp19 + 0x3b] = 0x00;\n                                                    storage[temp19 + 0x3c] = 0x00;\n                                                    storage[temp19 + 0x3d] = 0x00;\n                                                    storage[temp19 + 0x3e] = 0x00;\n                                                    storage[temp19 + 0x3f] = 0x00;\n                                                    storage[temp19 + 0x40] = 0x00;\n                                                    storage[temp19 + 0x41] = 0x00;\n                                                    storage[temp19 + 0x42] = 0x00;\n                                                    storage[temp19 + 0x43] = 0x00;\n                                                    storage[temp19 + 0x44] = 0x00;\n                                                    storage[temp19 + 0x45] = 0x00;\n                                                    storage[temp19 + 0x46] = 0x00;\n                                                    storage[temp19 + 0x47] = 0x00;\n                                                    storage[temp19 + 0x48] = 0x00;\n                                                    storage[temp19 + 0x49] = 0x00;\n                                                    storage[temp19 + 0x4a] = 0x00;\n                                                    storage[temp19 + 0x4b] = 0x00;\n                                                    storage[temp19 + 0x4c] = 0x00;\n                                                    storage[temp19 + 0x4d] = 0x00;\n                                                    storage[temp19 + 0x4e] = 0x00;\n                                                    storage[temp19 + 0x4f] = 0x00;\n                                                    storage[temp19 + 0x50] = 0x00;\n                                                    storage[temp19 + 0x51] = 0x00;\n                                                    storage[temp19 + 0x52] = 0x00;\n                                                    storage[temp19 + 0x53] = 0x00;\n                                                    storage[temp19 + 0x54] = 0x00;\n                                                    storage[temp19 + 0x55] = 0x00;\n                                                    storage[temp19 + 0x56] = 0x00;\n                                                    storage[temp19 + 0x57] = 0x00;\n                                                    storage[temp19 + 0x58] = 0x00;\n                                                    storage[temp19 + 0x59] = 0x00;\n                                                    storage[temp19 + 0x5a] = 0x00;\n                                                    storage[temp19 + 0x5b] = 0x00;\n                                                    storage[temp19 + 0x5c] = 0x00;\n                                                    storage[temp19 + 0x5d] = 0x00;\n                                                    storage[temp19 + 0x5e] = 0x00;\n                                                    storage[temp19 + 0x5f] = 0x00;\n                                                    storage[temp19 + 0x60] = 0x00;\n                                                    storage[temp19 + 0x61] = 0x00;\n                                                    storage[temp19 + 0x62] = 0x00;\n                                                    storage[temp19 + 0x63] = 0x00;\n                                                    storage[temp19 + 0x64] = 0x00;\n                                                    storage[temp19 + 0x65] = 0x00;\n                                                    storage[temp19 + 0x66] = 0x00;\n                                                    storage[temp19 + 0x67] = 0x00;\n                                                    storage[temp19 + 0x68] = 0x00;\n                                                    storage[temp19 + 0x69] = 0x00;\n                                                    storage[temp19 + 0x6a] = 0x00;\n                                                    storage[temp19 + 0x6b] = 0x00;\n                                                    storage[temp19 + 0x6c] = 0x00;\n                                                    storage[temp19 + 0x6d] = 0x00;\n                                                    storage[temp19 + 0x6e] = 0x00;\n                                                    storage[temp19 + 0x6f] = 0x00;\n                                                    storage[temp19 + 0x70] = 0x00;\n                                                    storage[temp19 + 0x71] = 0x00;\n                                                    storage[temp19 + 0x72] = 0x00;\n                                                    storage[temp19 + 0x73] = 0x00;\n                                                    storage[temp19 + 0x74] = 0x00;\n                                                    storage[temp19 + 0x75] = 0x00;\n                                                    storage[temp19 + 0x76] = 0x00;\n                                                    storage[temp19 + 0x77] = 0x00;\n                                                    storage[temp19 + 0x78] = 0x00;\n                                                    storage[temp19 + 0x79] = 0x00;\n                                                    storage[temp19 + 0x7a] = 0x00;\n                                                    storage[temp19 + 0x7b] = 0x00;\n                                                    storage[temp19 + 0x7c] = 0x00;\n                                                    storage[temp19 + 0x7d] = 0x00;\n                                                    storage[temp19 + 0x7e] = 0x00;\n                                                    storage[temp19 + 0x7f] = 0x00;\n                                                    storage[temp19 + 0x80] = 0x00;\n                                                    storage[temp19 + 0x81] = 0x00;\n                                                    storage[temp19 + 0x82] = 0x00;\n                                                    storage[temp19 + 0x83] = 0x00;\n                                                    storage[temp19 + 0x84] = 0x00;\n                                                    storage[temp19 + 0x85] = 0x00;\n                                                    storage[temp19 + 0x86] = 0x00;\n                                                    storage[temp19 + 0x87] = 0x00;\n                                                    storage[temp19 + 0x88] = 0x00;\n                                                    storage[temp19 + 0x89] = 0x00;\n                                                    storage[temp19 + 0x8a] = 0x00;\n                                                    storage[temp19 + 0x8b] = 0x00;\n                                                    storage[temp19 + 0x8c] = 0x00;\n                                                    storage[temp19 + 0x8d] = 0x00;\n                                                    storage[temp19 + 0x8e] = 0x00;\n                                                    storage[temp19 + 0x8f] = 0x00;\n                                                    storage[temp19 + 0x90] = 0x00;\n                                                    storage[temp19 + 0x91] = 0x00;\n                                                    storage[temp19 + 0x92] = 0x00;\n                                                    storage[temp19 + 0x93] = 0x00;\n                                                    storage[temp19 + 0x94] = 0x00;\n                                                    storage[temp19 + 0x95] = 0x00;\n                                                    storage[temp19 + 0x96] = 0x00;\n                                                    storage[temp19 + 0x97] = 0x00;\n                                                    storage[temp19 + 0x98] = 0x00;\n                                                    storage[temp19 + 0x99] = 0x00;\n                                                    storage[temp19 + 0x9a] = 0x00;\n                                                    storage[temp19 + 0x9b] = 0x00;\n                                                    storage[temp19 + 0x9c] = 0x00;\n                                                    storage[temp19 + 0x9d] = 0x00;\n                                                    storage[temp19 + 0x9e] = 0x00;\n                                                    storage[temp19 + 0x9f] = 0x00;\n                                                    storage[temp19 + 0xa0] = 0x00;\n                                                    storage[temp19 + 0xa1] = 0x00;\n                                                    storage[temp19 + 0xa2] = 0x00;\n                                                    storage[temp19 + 0xa3] = 0x00;\n                                                    storage[temp19 + 0xa4] = 0x00;\n                                                    storage[temp19 + 0xa5] = 0x00;\n                                                    storage[temp19 + 0xa6] = 0x00;\n                                                    storage[temp19 + 0xa7] = 0x00;\n                                                    storage[temp19 + 0xa8] = 0x00;\n                                                    storage[temp19 + 0xa9] = 0x00;\n                                                    storage[temp19 + 0xaa] = 0x00;\n                                                    storage[temp19 + 0xab] = 0x00;\n                                                    storage[temp19 + 0xac] = 0x00;\n                                                    storage[temp19 + 0xad] = 0x00;\n                                                    storage[temp19 + 0xae] = 0x00;\n                                                    storage[temp19 + 0xaf] = 0x00;\n                                                    storage[temp19 + 0xb0] = 0x00;\n                                                    storage[temp19 + 0xb1] = 0x00;\n                                                    storage[temp19 + 0xb2] = 0x00;\n                                                    storage[temp19 + 0xb3] = 0x00;\n                                                    storage[temp19 + 0xb4] = 0x00;\n                                                    storage[temp19 + 0xb5] = 0x00;\n                                                    storage[temp19 + 0xb6] = 0x00;\n                                                    storage[temp19 + 0xb7] = 0x00;\n                                                    storage[temp19 + 0xb8] = 0x00;\n                                                    storage[temp19 + 0xb9] = 0x00;\n                                                    storage[temp19 + 0xba] = 0x00;\n                                                    storage[temp19 + 0xbb] = 0x00;\n                                                    storage[temp19 + 0xbc] = 0x00;\n                                                    storage[temp19 + 0xbd] = 0x00;\n                                                    storage[temp19 + 0xbe] = 0x00;\n                                                    storage[temp19 + 0xbf] = 0x00;\n                                                    storage[temp19 + 0xc0] = 0x00;\n                                                    storage[temp19 + 0xc1] = 0x00;\n                                                    storage[temp19 + 0xc2] = 0x00;\n                                                    storage[temp19 + 0xc3] = 0x00;\n                                                    storage[temp19 + 0xc4] = 0x00;\n                                                    storage[temp19 + 0xc5] = 0x00;\n                                                    storage[temp19 + 0xc6] = 0x00;\n                                                    storage[temp19 + 0xc7] = 0x00;\n                                                    storage[temp19 + 0xc8] = 0x00;\n                                                    storage[temp19 + 0xc9] = 0x00;\n                                                    storage[temp19 + 0xca] = 0x00;\n                                                    storage[temp19 + 0xcb] = 0x00;\n                                                    storage[temp19 + 0xcc] = 0x00;\n                                                    storage[temp19 + 0xcd] = 0x00;\n                                                    storage[temp19 + 0xce] = 0x00;\n                                                    storage[temp19 + 0xcf] = 0x00;\n                                                    storage[temp19 + 0xd0] = 0x00;\n                                                    storage[temp19 + 0xd1] = 0x00;\n                                                    storage[temp19 + 0xd2] = 0x00;\n                                                    storage[temp19 + 0xd3] = 0x00;\n                                                    storage[temp19 + 0xd4] = 0x00;\n                                                    storage[temp19 + 0xd5] = 0x00;\n                                                    storage[temp19 + 0xd6] = 0x00;\n                                                    storage[temp19 + 0xd7] = 0x00;\n                                                    storage[temp19 + 0xd8] = 0x00;\n                                                    storage[temp19 + 0xd9] = 0x00;\n                                                    storage[temp19 + 0xda] = 0x00;\n                                                    storage[temp19 + 0xdb] = 0x00;\n                                                    storage[temp19 + 0xdc] = 0x00;\n                                                    storage[temp19 + 0xdd] = 0x00;\n                                                    storage[temp19 + 0xde] = 0x00;\n                                                    storage[temp19 + 0xdf] = 0x00;\n                                                    storage[temp19 + 0xe0] = 0x00;\n                                                    storage[temp19 + 0xe1] = 0x00;\n                                                    storage[temp19 + 0xe2] = 0x00;\n                                                    storage[temp19 + 0xe3] = 0x00;\n                                                    storage[temp19 + 0xe4] = 0x00;\n                                                    storage[temp19 + 0xe5] = 0x00;\n                                                    storage[temp19 + 0xe6] = 0x00;\n                                                    storage[temp19 + 0xe7] = 0x00;\n                                                    storage[temp19 + 0xe8] = 0x00;\n                                                    storage[temp19 + 0xe9] = 0x00;\n                                                    storage[temp19 + 0xea] = 0x00;\n                                                    storage[temp19 + 0xeb] = 0x00;\n                                                    storage[temp19 + 0xec] = 0x00;\n                                                    storage[temp19 + 0xed] = 0x00;\n                                                    storage[temp19 + 0xee] = 0x00;\n                                                    storage[temp19 + 0xef] = 0x00;\n                                                    storage[temp19 + 0xf0] = 0x00;\n                                                    storage[temp19 + 0xf1] = 0x00;\n                                                    storage[temp19 + 0xf2] = 0x00;\n                                                    storage[temp19 + 0xf3] = 0x00;\n                                                    storage[temp19 + 0xf4] = 0x00;\n                                                    storage[temp19 + 0xf5] = 0x00;\n                                                    storage[temp19 + 0xf6] = 0x00;\n                                                    storage[temp19 + 0xf7] = 0x00;\n                                                    storage[temp19 + 0xf8] = 0x00;\n                                                    storage[temp19 + 0xf9] = 0x00;\n                                                    storage[temp19 + 0xfa] = 0x00;\n                                                    storage[temp19 + 0xfb] = 0x00;\n                                                    storage[temp19 + 0xfc] = 0x00;\n                                                    storage[temp19 + 0xfd] = 0x00;\n                                                    storage[temp19 + 0xfe] = 0x00;\n                                                    storage[temp19 + 0xff] = 0x00;\n                                                    storage[temp19 + 0x0100] = 0x00;\n                                                    storage[temp19 + 0x0101] = 0x00;\n                                                    storage[temp19 + 0x0102] = 0x00;\n                                                    storage[temp19 + 0x0103] = 0x00;\n                                                    storage[temp19 + 0x0104] = 0x00;\n                                                    storage[temp19 + 0x0105] = 0x00;\n                                                    storage[temp19 + 0x0106] = 0x00;\n                                                    storage[temp19 + 0x0107] = 0x00;\n                                                    storage[temp19 + 0x0108] = 0x00;\n                                                    storage[temp19 + 0x0109] = 0x00;\n                                                    storage[temp19 + 0x010a] = 0x00;\n                                                    storage[temp19 + 0x010b] = 0x00;\n                                                    storage[temp19 + 0x010c] = 0x00;\n                                                    storage[temp19 + 0x010d] = 0x00;\n                                                    storage[temp19 + 0x010e] = 0x00;\n                                                    storage[temp19 + 0x010f] = 0x00;\n                                                    storage[temp19 + 0x0110] = 0x00;\n                                                    storage[temp19 + 0x0111] = 0x00;\n                                                    storage[temp19 + 0x0112] = 0x00;\n                                                    storage[temp19 + 0x0113] = 0x00;\n                                                    storage[temp19 + 0x0114] = 0x00;\n                                                    storage[temp19 + 0x0115] = 0x00;\n                                                    storage[temp19 + 0x0116] = 0x00;\n                                                    storage[temp19 + 0x0117] = 0x00;\n                                                    storage[temp19 + 0x0118] = 0x00;\n                                                    storage[temp19 + 0x0119] = 0x00;\n                                                    storage[temp19 + 0x011a] = 0x00;\n                                                    storage[temp19 + 0x011b] = 0x00;\n                                                    storage[temp19 + 0x011c] = 0x00;\n                                                    storage[temp19 + 0x011d] = 0x00;\n                                                    storage[temp19 + 0x011e] = 0x00;\n                                                    storage[temp19 + 0x011f] = 0x00;\n                                                    storage[temp19 + 0x0120] = 0x00;\n                                                    storage[temp19 + 0x0121] = 0x00;\n                                                    storage[temp19 + 0x0122] = 0x00;\n                                                    storage[temp19 + 0x0123] = 0x00;\n                                                    storage[temp19 + 0x0124] = 0x00;\n                                                    storage[temp19 + 0x0125] = 0x00;\n                                                    storage[temp19 + 0x0126] = 0x00;\n                                                    storage[temp19 + 0x0127] = 0x00;\n                                                    storage[temp19 + 0x0128] = 0x00;\n                                                    storage[temp19 + 0x0129] = 0x00;\n                                                    storage[temp19 + 0x012a] = 0x00;\n                                                    storage[temp19 + 0x012b] = 0x00;\n                                                    memory[0xc0:0xe0] = 0x0b;\n                                                    var temp20 = keccak256(memory[0xc0:0xe0]);\n                                                    storage[temp20] = 0x00;\n                                                    storage[temp20 + 0x01] = 0x00;\n                                                    storage[temp20 + 0x02] = 0x00;\n                                                    storage[temp20 + 0x03] = 0x00;\n                                                    storage[temp20 + 0x04] = 0x00;\n                                                    storage[temp20 + 0x05] = 0x00;\n                                                    storage[temp20 + 0x06] = 0x00;\n                                                    storage[temp20 + 0x07] = 0x00;\n                                                    storage[temp20 + 0x08] = 0x00;\n                                                    storage[temp20 + 0x09] = 0x00;\n                                                    storage[0x0d] = 0x00;\n                                                    memory[0x0320:0x0340] = storage[0x0a];\n                                                    log(memory[0x0320:0x0340], [0x893cdbbcaf3dd1e2014d91d0db208a57dd1344fcb1751d1691b668ec58489271]);\n                                                    stop();\n                                                }\n                                            } else {\n                                                var3 = 0x00;\n                                                var temp21 = var2;\n                                                storage[temp21] = storage[temp21] + var3;\n                                                memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                var temp22 = var0;\n                                                var temp23 = memory[temp22:temp22 + 0x20] + 0x01;\n                                                memory[temp22:temp22 + 0x20] = temp23;\n                                            \n                                                if (var1 != temp23) { goto label_279C; }\n                                                else { goto label_28F7; }\n                                            }\n                                        } else {\n                                            var4 = 0x00;\n                                            goto label_284F;\n                                        }\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else { revert(memory[0x00:0x00]); }\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            var0 = memory[0x0140:0x0160];\n                            var1 = 0x06;\n                            // Unhandled termination\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0x0160:0x0180] = 0x08c379a0;\n                        memory[0x0180:0x01a0] = 0x20;\n                        memory[0x01a0:0x01c0] = 0x14;\n                        memory[0x01c0:0x01e0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                        var0 = 0x06;\n                        // Unhandled termination\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                \n                    memory[0x0140:0x0160] = 0x08c379a0;\n                    memory[0x0160:0x0180] = 0x20;\n                    memory[0x0180:0x01a0] = 0x0a;\n                    memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                \n                    if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                \n                    memory[0x01e0:0x0200] = 0x08c379a0;\n                    memory[0x0200:0x0220] = 0x20;\n                    memory[0x0220:0x0240] = 0x10;\n                    memory[0x0240:0x0260] = 0x4e6f7468696e6720746f2061626f727400000000000000000000000000000000;\n                    memory[0xc0:0xe0] = 0x0b;\n                \n                    if (storage[keccak256(memory[0xc0:0xe0]) + 0x01] <= 0x00) { revert(memory[0x01fc:0x0280]); }\n                \n                    memory[0xc0:0xe0] = 0x0b;\n                    memory[0x02c0:0x02e0] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                \n                    if (!msg.data[0x04:0x24]) {\n                        var0 = 0x03c0;\n                        memory[var0:var0 + 0x20] = 0x00;\n                        var1 = 0x012c;\n                        var2 = memory[0x03c0:0x03e0];\n                    \n                        if (var2 >= 0x012c) { revert(memory[0x00:0x00]); }\n                    \n                    label_0FA5:\n                        memory[0xc0:0xe0] = 0x04;\n                        memory[0x0280:0x02a0] = storage[keccak256(memory[0xc0:0xe0]) + var2];\n                    \n                        if (!memory[0x0280:0x02a0]) { goto label_10F7; }\n                    \n                        if (!msg.data[0x04:0x24]) {\n                        label_10D2:\n                            memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                            memory[0xc0:0xe0] = 0x03;\n                            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                            var temp25 = var0;\n                            var temp26 = memory[temp25:temp25 + 0x20] + 0x01;\n                            memory[temp25:temp25 + 0x20] = temp26;\n                        \n                            if (var1 != temp26) {\n                                var2 = memory[0x03c0:0x03e0];\n                            \n                                if (var2 < 0x012c) { goto label_0FA5; }\n                                else { revert(memory[0x00:0x00]); }\n                            } else {\n                            label_10F7:\n                                memory[0xc0:0xe0] = 0x04;\n                                var temp27 = keccak256(memory[0xc0:0xe0]);\n                                storage[temp27] = 0x00;\n                                storage[temp27 + 0x01] = 0x00;\n                                storage[temp27 + 0x02] = 0x00;\n                                storage[temp27 + 0x03] = 0x00;\n                                storage[temp27 + 0x04] = 0x00;\n                                storage[temp27 + 0x05] = 0x00;\n                                storage[temp27 + 0x06] = 0x00;\n                                storage[temp27 + 0x07] = 0x00;\n                                storage[temp27 + 0x08] = 0x00;\n                                storage[temp27 + 0x09] = 0x00;\n                                storage[temp27 + 0x0a] = 0x00;\n                                storage[temp27 + 0x0b] = 0x00;\n                                storage[temp27 + 0x0c] = 0x00;\n                                storage[temp27 + 0x0d] = 0x00;\n                                storage[temp27 + 0x0e] = 0x00;\n                                storage[temp27 + 0x0f] = 0x00;\n                                storage[temp27 + 0x10] = 0x00;\n                                storage[temp27 + 0x11] = 0x00;\n                                storage[temp27 + 0x12] = 0x00;\n                                storage[temp27 + 0x13] = 0x00;\n                                storage[temp27 + 0x14] = 0x00;\n                                storage[temp27 + 0x15] = 0x00;\n                                storage[temp27 + 0x16] = 0x00;\n                                storage[temp27 + 0x17] = 0x00;\n                                storage[temp27 + 0x18] = 0x00;\n                                storage[temp27 + 0x19] = 0x00;\n                                storage[temp27 + 0x1a] = 0x00;\n                                storage[temp27 + 0x1b] = 0x00;\n                                storage[temp27 + 0x1c] = 0x00;\n                                storage[temp27 + 0x1d] = 0x00;\n                                storage[temp27 + 0x1e] = 0x00;\n                                storage[temp27 + 0x1f] = 0x00;\n                                storage[temp27 + 0x20] = 0x00;\n                                storage[temp27 + 0x21] = 0x00;\n                                storage[temp27 + 0x22] = 0x00;\n                                storage[temp27 + 0x23] = 0x00;\n                                storage[temp27 + 0x24] = 0x00;\n                                storage[temp27 + 0x25] = 0x00;\n                                storage[temp27 + 0x26] = 0x00;\n                                storage[temp27 + 0x27] = 0x00;\n                                storage[temp27 + 0x28] = 0x00;\n                                storage[temp27 + 0x29] = 0x00;\n                                storage[temp27 + 0x2a] = 0x00;\n                                storage[temp27 + 0x2b] = 0x00;\n                                storage[temp27 + 0x2c] = 0x00;\n                                storage[temp27 + 0x2d] = 0x00;\n                                storage[temp27 + 0x2e] = 0x00;\n                                storage[temp27 + 0x2f] = 0x00;\n                                storage[temp27 + 0x30] = 0x00;\n                                storage[temp27 + 0x31] = 0x00;\n                                storage[temp27 + 0x32] = 0x00;\n                                storage[temp27 + 0x33] = 0x00;\n                                storage[temp27 + 0x34] = 0x00;\n                                storage[temp27 + 0x35] = 0x00;\n                                storage[temp27 + 0x36] = 0x00;\n                                storage[temp27 + 0x37] = 0x00;\n                                storage[temp27 + 0x38] = 0x00;\n                                storage[temp27 + 0x39] = 0x00;\n                                storage[temp27 + 0x3a] = 0x00;\n                                storage[temp27 + 0x3b] = 0x00;\n                                storage[temp27 + 0x3c] = 0x00;\n                                storage[temp27 + 0x3d] = 0x00;\n                                storage[temp27 + 0x3e] = 0x00;\n                                storage[temp27 + 0x3f] = 0x00;\n                                storage[temp27 + 0x40] = 0x00;\n                                storage[temp27 + 0x41] = 0x00;\n                                storage[temp27 + 0x42] = 0x00;\n                                storage[temp27 + 0x43] = 0x00;\n                                storage[temp27 + 0x44] = 0x00;\n                                storage[temp27 + 0x45] = 0x00;\n                                storage[temp27 + 0x46] = 0x00;\n                                storage[temp27 + 0x47] = 0x00;\n                                storage[temp27 + 0x48] = 0x00;\n                                storage[temp27 + 0x49] = 0x00;\n                                storage[temp27 + 0x4a] = 0x00;\n                                storage[temp27 + 0x4b] = 0x00;\n                                storage[temp27 + 0x4c] = 0x00;\n                                storage[temp27 + 0x4d] = 0x00;\n                                storage[temp27 + 0x4e] = 0x00;\n                                storage[temp27 + 0x4f] = 0x00;\n                                storage[temp27 + 0x50] = 0x00;\n                                storage[temp27 + 0x51] = 0x00;\n                                storage[temp27 + 0x52] = 0x00;\n                                storage[temp27 + 0x53] = 0x00;\n                                storage[temp27 + 0x54] = 0x00;\n                                storage[temp27 + 0x55] = 0x00;\n                                storage[temp27 + 0x56] = 0x00;\n                                storage[temp27 + 0x57] = 0x00;\n                                storage[temp27 + 0x58] = 0x00;\n                                storage[temp27 + 0x59] = 0x00;\n                                storage[temp27 + 0x5a] = 0x00;\n                                storage[temp27 + 0x5b] = 0x00;\n                                storage[temp27 + 0x5c] = 0x00;\n                                storage[temp27 + 0x5d] = 0x00;\n                                storage[temp27 + 0x5e] = 0x00;\n                                storage[temp27 + 0x5f] = 0x00;\n                                storage[temp27 + 0x60] = 0x00;\n                                storage[temp27 + 0x61] = 0x00;\n                                storage[temp27 + 0x62] = 0x00;\n                                storage[temp27 + 0x63] = 0x00;\n                                storage[temp27 + 0x64] = 0x00;\n                                storage[temp27 + 0x65] = 0x00;\n                                storage[temp27 + 0x66] = 0x00;\n                                storage[temp27 + 0x67] = 0x00;\n                                storage[temp27 + 0x68] = 0x00;\n                                storage[temp27 + 0x69] = 0x00;\n                                storage[temp27 + 0x6a] = 0x00;\n                                storage[temp27 + 0x6b] = 0x00;\n                                storage[temp27 + 0x6c] = 0x00;\n                                storage[temp27 + 0x6d] = 0x00;\n                                storage[temp27 + 0x6e] = 0x00;\n                                storage[temp27 + 0x6f] = 0x00;\n                                storage[temp27 + 0x70] = 0x00;\n                                storage[temp27 + 0x71] = 0x00;\n                                storage[temp27 + 0x72] = 0x00;\n                                storage[temp27 + 0x73] = 0x00;\n                                storage[temp27 + 0x74] = 0x00;\n                                storage[temp27 + 0x75] = 0x00;\n                                storage[temp27 + 0x76] = 0x00;\n                                storage[temp27 + 0x77] = 0x00;\n                                storage[temp27 + 0x78] = 0x00;\n                                storage[temp27 + 0x79] = 0x00;\n                                storage[temp27 + 0x7a] = 0x00;\n                                storage[temp27 + 0x7b] = 0x00;\n                                storage[temp27 + 0x7c] = 0x00;\n                                storage[temp27 + 0x7d] = 0x00;\n                                storage[temp27 + 0x7e] = 0x00;\n                                storage[temp27 + 0x7f] = 0x00;\n                                storage[temp27 + 0x80] = 0x00;\n                                storage[temp27 + 0x81] = 0x00;\n                                storage[temp27 + 0x82] = 0x00;\n                                storage[temp27 + 0x83] = 0x00;\n                                storage[temp27 + 0x84] = 0x00;\n                                storage[temp27 + 0x85] = 0x00;\n                                storage[temp27 + 0x86] = 0x00;\n                                storage[temp27 + 0x87] = 0x00;\n                                storage[temp27 + 0x88] = 0x00;\n                                storage[temp27 + 0x89] = 0x00;\n                                storage[temp27 + 0x8a] = 0x00;\n                                storage[temp27 + 0x8b] = 0x00;\n                                storage[temp27 + 0x8c] = 0x00;\n                                storage[temp27 + 0x8d] = 0x00;\n                                storage[temp27 + 0x8e] = 0x00;\n                                storage[temp27 + 0x8f] = 0x00;\n                                storage[temp27 + 0x90] = 0x00;\n                                storage[temp27 + 0x91] = 0x00;\n                                storage[temp27 + 0x92] = 0x00;\n                                storage[temp27 + 0x93] = 0x00;\n                                storage[temp27 + 0x94] = 0x00;\n                                storage[temp27 + 0x95] = 0x00;\n                                storage[temp27 + 0x96] = 0x00;\n                                storage[temp27 + 0x97] = 0x00;\n                                storage[temp27 + 0x98] = 0x00;\n                                storage[temp27 + 0x99] = 0x00;\n                                storage[temp27 + 0x9a] = 0x00;\n                                storage[temp27 + 0x9b] = 0x00;\n                                storage[temp27 + 0x9c] = 0x00;\n                                storage[temp27 + 0x9d] = 0x00;\n                                storage[temp27 + 0x9e] = 0x00;\n                                storage[temp27 + 0x9f] = 0x00;\n                                storage[temp27 + 0xa0] = 0x00;\n                                storage[temp27 + 0xa1] = 0x00;\n                                storage[temp27 + 0xa2] = 0x00;\n                                storage[temp27 + 0xa3] = 0x00;\n                                storage[temp27 + 0xa4] = 0x00;\n                                storage[temp27 + 0xa5] = 0x00;\n                                storage[temp27 + 0xa6] = 0x00;\n                                storage[temp27 + 0xa7] = 0x00;\n                                storage[temp27 + 0xa8] = 0x00;\n                                storage[temp27 + 0xa9] = 0x00;\n                                storage[temp27 + 0xaa] = 0x00;\n                                storage[temp27 + 0xab] = 0x00;\n                                storage[temp27 + 0xac] = 0x00;\n                                storage[temp27 + 0xad] = 0x00;\n                                storage[temp27 + 0xae] = 0x00;\n                                storage[temp27 + 0xaf] = 0x00;\n                                storage[temp27 + 0xb0] = 0x00;\n                                storage[temp27 + 0xb1] = 0x00;\n                                storage[temp27 + 0xb2] = 0x00;\n                                storage[temp27 + 0xb3] = 0x00;\n                                storage[temp27 + 0xb4] = 0x00;\n                                storage[temp27 + 0xb5] = 0x00;\n                                storage[temp27 + 0xb6] = 0x00;\n                                storage[temp27 + 0xb7] = 0x00;\n                                storage[temp27 + 0xb8] = 0x00;\n                                storage[temp27 + 0xb9] = 0x00;\n                                storage[temp27 + 0xba] = 0x00;\n                                storage[temp27 + 0xbb] = 0x00;\n                                storage[temp27 + 0xbc] = 0x00;\n                                storage[temp27 + 0xbd] = 0x00;\n                                storage[temp27 + 0xbe] = 0x00;\n                                storage[temp27 + 0xbf] = 0x00;\n                                storage[temp27 + 0xc0] = 0x00;\n                                storage[temp27 + 0xc1] = 0x00;\n                                storage[temp27 + 0xc2] = 0x00;\n                                storage[temp27 + 0xc3] = 0x00;\n                                storage[temp27 + 0xc4] = 0x00;\n                                storage[temp27 + 0xc5] = 0x00;\n                                storage[temp27 + 0xc6] = 0x00;\n                                storage[temp27 + 0xc7] = 0x00;\n                                storage[temp27 + 0xc8] = 0x00;\n                                storage[temp27 + 0xc9] = 0x00;\n                                storage[temp27 + 0xca] = 0x00;\n                                storage[temp27 + 0xcb] = 0x00;\n                                storage[temp27 + 0xcc] = 0x00;\n                                storage[temp27 + 0xcd] = 0x00;\n                                storage[temp27 + 0xce] = 0x00;\n                                storage[temp27 + 0xcf] = 0x00;\n                                storage[temp27 + 0xd0] = 0x00;\n                                storage[temp27 + 0xd1] = 0x00;\n                                storage[temp27 + 0xd2] = 0x00;\n                                storage[temp27 + 0xd3] = 0x00;\n                                storage[temp27 + 0xd4] = 0x00;\n                                storage[temp27 + 0xd5] = 0x00;\n                                storage[temp27 + 0xd6] = 0x00;\n                                storage[temp27 + 0xd7] = 0x00;\n                                storage[temp27 + 0xd8] = 0x00;\n                                storage[temp27 + 0xd9] = 0x00;\n                                storage[temp27 + 0xda] = 0x00;\n                                storage[temp27 + 0xdb] = 0x00;\n                                storage[temp27 + 0xdc] = 0x00;\n                                storage[temp27 + 0xdd] = 0x00;\n                                storage[temp27 + 0xde] = 0x00;\n                                storage[temp27 + 0xdf] = 0x00;\n                                storage[temp27 + 0xe0] = 0x00;\n                                storage[temp27 + 0xe1] = 0x00;\n                                storage[temp27 + 0xe2] = 0x00;\n                                storage[temp27 + 0xe3] = 0x00;\n                                storage[temp27 + 0xe4] = 0x00;\n                                storage[temp27 + 0xe5] = 0x00;\n                                storage[temp27 + 0xe6] = 0x00;\n                                storage[temp27 + 0xe7] = 0x00;\n                                storage[temp27 + 0xe8] = 0x00;\n                                storage[temp27 + 0xe9] = 0x00;\n                                storage[temp27 + 0xea] = 0x00;\n                                storage[temp27 + 0xeb] = 0x00;\n                                storage[temp27 + 0xec] = 0x00;\n                                storage[temp27 + 0xed] = 0x00;\n                                storage[temp27 + 0xee] = 0x00;\n                                storage[temp27 + 0xef] = 0x00;\n                                storage[temp27 + 0xf0] = 0x00;\n                                storage[temp27 + 0xf1] = 0x00;\n                                storage[temp27 + 0xf2] = 0x00;\n                                storage[temp27 + 0xf3] = 0x00;\n                                storage[temp27 + 0xf4] = 0x00;\n                                storage[temp27 + 0xf5] = 0x00;\n                                storage[temp27 + 0xf6] = 0x00;\n                                storage[temp27 + 0xf7] = 0x00;\n                                storage[temp27 + 0xf8] = 0x00;\n                                storage[temp27 + 0xf9] = 0x00;\n                                storage[temp27 + 0xfa] = 0x00;\n                                storage[temp27 + 0xfb] = 0x00;\n                                storage[temp27 + 0xfc] = 0x00;\n                                storage[temp27 + 0xfd] = 0x00;\n                                storage[temp27 + 0xfe] = 0x00;\n                                storage[temp27 + 0xff] = 0x00;\n                                storage[temp27 + 0x0100] = 0x00;\n                                storage[temp27 + 0x0101] = 0x00;\n                                storage[temp27 + 0x0102] = 0x00;\n                                storage[temp27 + 0x0103] = 0x00;\n                                storage[temp27 + 0x0104] = 0x00;\n                                storage[temp27 + 0x0105] = 0x00;\n                                storage[temp27 + 0x0106] = 0x00;\n                                storage[temp27 + 0x0107] = 0x00;\n                                storage[temp27 + 0x0108] = 0x00;\n                                storage[temp27 + 0x0109] = 0x00;\n                                storage[temp27 + 0x010a] = 0x00;\n                                storage[temp27 + 0x010b] = 0x00;\n                                storage[temp27 + 0x010c] = 0x00;\n                                storage[temp27 + 0x010d] = 0x00;\n                                storage[temp27 + 0x010e] = 0x00;\n                                storage[temp27 + 0x010f] = 0x00;\n                                storage[temp27 + 0x0110] = 0x00;\n                                storage[temp27 + 0x0111] = 0x00;\n                                storage[temp27 + 0x0112] = 0x00;\n                                storage[temp27 + 0x0113] = 0x00;\n                                storage[temp27 + 0x0114] = 0x00;\n                                storage[temp27 + 0x0115] = 0x00;\n                                storage[temp27 + 0x0116] = 0x00;\n                                storage[temp27 + 0x0117] = 0x00;\n                                storage[temp27 + 0x0118] = 0x00;\n                                storage[temp27 + 0x0119] = 0x00;\n                                storage[temp27 + 0x011a] = 0x00;\n                                storage[temp27 + 0x011b] = 0x00;\n                                storage[temp27 + 0x011c] = 0x00;\n                                storage[temp27 + 0x011d] = 0x00;\n                                storage[temp27 + 0x011e] = 0x00;\n                                storage[temp27 + 0x011f] = 0x00;\n                                storage[temp27 + 0x0120] = 0x00;\n                                storage[temp27 + 0x0121] = 0x00;\n                                storage[temp27 + 0x0122] = 0x00;\n                                storage[temp27 + 0x0123] = 0x00;\n                                storage[temp27 + 0x0124] = 0x00;\n                                storage[temp27 + 0x0125] = 0x00;\n                                storage[temp27 + 0x0126] = 0x00;\n                                storage[temp27 + 0x0127] = 0x00;\n                                storage[temp27 + 0x0128] = 0x00;\n                                storage[temp27 + 0x0129] = 0x00;\n                                storage[temp27 + 0x012a] = 0x00;\n                                storage[temp27 + 0x012b] = 0x00;\n                                memory[0xc0:0xe0] = 0x0b;\n                                var temp28 = keccak256(memory[0xc0:0xe0]);\n                                storage[temp28] = 0x00;\n                                storage[temp28 + 0x01] = 0x00;\n                                storage[temp28 + 0x02] = 0x00;\n                                storage[temp28 + 0x03] = 0x00;\n                                storage[temp28 + 0x04] = 0x00;\n                                storage[temp28 + 0x05] = 0x00;\n                                storage[temp28 + 0x06] = 0x00;\n                                storage[temp28 + 0x07] = 0x00;\n                                storage[temp28 + 0x08] = 0x00;\n                                storage[temp28 + 0x09] = 0x00;\n                                storage[0x0d] = 0x00;\n                                memory[0x03e0:0x0400] = storage[0x0a];\n                                memory[0x0400:0x0420] = msg.data[0x04:0x24];\n                                log(memory[0x03e0:0x0420], [0x7cf7d9a307304a7cf180a171a89e959717bfb63d9de5f33ee00674ea058e49]);\n                                stop();\n                            }\n                        } else {\n                            memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                            memory[0xc0:0xe0] = 0x07;\n                            var2 = keccak256(memory[0xc0:0x0100]);\n                            var3 = storage[var2];\n                            memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                            memory[0xc0:0xe0] = 0x03;\n                        \n                            if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                var temp29 = memory[0x02a0:0x02c0];\n                                memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                memory[0xc0:0xe0] = 0x03;\n                                var temp30 = storage[keccak256(memory[0xc0:0x0100])];\n                                var temp31 = memory[0x02a0:0x02c0];\n                                memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                memory[0xc0:0xe0] = 0x03;\n                            \n                                if ((storage[keccak256(memory[0xc0:0x0100])] * temp31) / temp30 != temp29) { revert(memory[0x00:0x00]); }\n                            \n                                var temp32 = memory[0x02a0:0x02c0];\n                                memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                memory[0xc0:0xe0] = 0x03;\n                                var4 = storage[keccak256(memory[0xc0:0x0100])] * temp32;\n                            \n                            label_104E:\n                            \n                                if (storage[var2] + var4 < var3) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                memory[0xc0:0xe0] = 0x03;\n                            \n                                if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                    var temp33 = memory[0x02a0:0x02c0];\n                                    memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                    memory[0xc0:0xe0] = 0x03;\n                                    var temp34 = storage[keccak256(memory[0xc0:0x0100])];\n                                    var temp35 = memory[0x02a0:0x02c0];\n                                    memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                    memory[0xc0:0xe0] = 0x03;\n                                \n                                    if ((storage[keccak256(memory[0xc0:0x0100])] * temp35) / temp34 != temp33) { revert(memory[0x00:0x00]); }\n                                \n                                    var temp36 = memory[0x02a0:0x02c0];\n                                    memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                    memory[0xc0:0xe0] = 0x03;\n                                    var3 = storage[keccak256(memory[0xc0:0x0100])] * temp36;\n                                \n                                label_10CB:\n                                    var temp37 = var2;\n                                    storage[temp37] = storage[temp37] + var3;\n                                    goto label_10D2;\n                                } else {\n                                    var3 = 0x00;\n                                    goto label_10CB;\n                                }\n                            } else {\n                                var4 = 0x00;\n                                goto label_104E;\n                            }\n                        }\n                    } else {\n                        memory[0x0320:0x0340] = 0x08c379a0;\n                        memory[0x0340:0x0360] = 0x20;\n                        memory[0x0360:0x0380] = 0x0d;\n                        memory[0x0380:0x03a0] = 0x4e6f742066696e616c6973656400000000000000000000000000000000000000;\n                        memory[0x02e0:0x0300] = 0x0140;\n                        var0 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                        memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                    \n                        if (memory[0x02e0:0x0300] >= 0x02e0) {\n                        label_0EB4:\n                            var1 = 0x06;\n                            // Unhandled termination\n                        } else {\n                        label_0EB0:\n                            var1 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                            memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                        \n                            if (memory[0x02e0:0x0300] >= 0x02e0) { goto label_0EB4; }\n                            else { goto label_0EB0; }\n                        }\n                    }\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0x0140:0x0160] = 0x08c379a0;\n                memory[0x0160:0x0180] = 0x20;\n                memory[0x0180:0x01a0] = 0x0a;\n                memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n            \n                if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n            \n                memory[0x0220:0x0240] = 0x08c379a0;\n                memory[0x0240:0x0260] = 0x20;\n                memory[0x0260:0x0280] = 0x10;\n                memory[0x0280:0x02a0] = 0x496e2062696464696e6720706861736500000000000000000000000000000000;\n                var0 = memory[0x0140:0x0160];\n                var1 = memory[0x0160:0x0180];\n                var2 = memory[0x0180:0x01a0];\n                var3 = memory[0x01a0:0x01c0];\n                var4 = memory[0x01c0:0x01e0];\n                var5 = 0x06;\n                // Unhandled termination\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x0140:0x0160] = 0x08c379a0;\n            memory[0x0160:0x0180] = 0x20;\n            memory[0x0180:0x01a0] = 0x0a;\n            memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n        \n            if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n        \n            memory[0x01e0:0x0200] = 0x08c379a0;\n            memory[0x0200:0x0220] = 0x20;\n            memory[0x0220:0x0240] = 0x12;\n            memory[0x0240:0x0260] = 0x496e76616c69642073746172745374616b650000000000000000000000000000;\n        \n            if (msg.data[0x24:0x44] <= msg.data[0x44:0x64]) { revert(memory[0x01fc:0x0280]); }\n        \n            memory[0x0280:0x02a0] = 0x08c379a0;\n            memory[0x02a0:0x02c0] = 0x20;\n            memory[0x02c0:0x02e0] = 0x12;\n            memory[0x02e0:0x0300] = 0x496e76616c6420736c6f74206e756d6265720000000000000000000000000000;\n        \n            if (!((msg.data[0xa4:0xc4] > 0x00) & (msg.data[0xa4:0xc4] <= 0x012c))) { revert(memory[0x029c:0x0320]); }\n        \n            memory[0x0320:0x0340] = 0x08c379a0;\n            memory[0x0340:0x0360] = 0x20;\n            memory[0x0360:0x0380] = 0x1a;\n            memory[0x0380:0x03a0] = 0x5374617274206265666f72652063757272656e7420626c6f636b000000000000;\n        \n            if (msg.data[0x04:0x24] < block.number) { revert(memory[0x033c:0x03c0]); }\n        \n            memory[0x03c0:0x03e0] = 0x08c379a0;\n            memory[0x03e0:0x0400] = 0x20;\n            memory[0x0400:0x0420] = 0x22;\n            memory[0x0420:0x0440] = 0x52657365727665207374616b652068617320746f206265206174206c65617374;\n            memory[0x0440:0x0460] = 0x2031000000000000000000000000000000000000000000000000000000000000;\n        \n            if (msg.data[0x44:0x64] <= 0x00) { revert(memory[0x03dc:0x0480]); }\n        \n            memory[0x0480:0x04a0] = 0x08c379a0;\n            memory[0x04a0:0x04c0] = 0x20;\n            memory[0x04c0:0x04e0] = 0x13;\n            memory[0x04e0:0x0500] = 0x456e642063757272656e742061756374696f6e00000000000000000000000000;\n            memory[0xc0:0xe0] = 0x0b;\n        \n            if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x049c:0x0520]); }\n        \n            var0 = 0x0a;\n        \n            if (storage[var0] + 0x01 < storage[var0]) { revert(memory[0x00:0x00]); }\n        \n            var temp38 = var0;\n            storage[temp38] = storage[temp38] + 0x01;\n        \n            if (!msg.data[0x64:0x84]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x64:0x84];\n            var1 = 0x01;\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x24:0x44] - msg.data[0x44:0x64];\n            var3 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var3 < var2) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var2 < var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01;\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x24:0x44] - msg.data[0x44:0x64];\n            var3 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var3 < var2) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0520:0x0540] = (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var2) - var1 / var0;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24] + msg.data[0x64:0x84];\n            var1 = 0x19;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] + var1 < var0) { revert(memory[0x00:0x00]); }\n        \n            var0 = 0x19;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0540:0x0560] = msg.data[0x04:0x24] + msg.data[0x64:0x84] + var0;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x03] = msg.data[0x04:0x24];\n            var temp39 = memory[0x0540:0x0560];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x04] = temp39;\n        \n            if (memory[0x0540:0x0560] + msg.data[0x84:0xa4] < memory[0x0540:0x0560]) { revert(memory[0x00:0x00]); }\n        \n            var temp40 = memory[0x0540:0x0560] + msg.data[0x84:0xa4];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x01] = temp40;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x05] = msg.data[0x24:0x44];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x06] = msg.data[0x44:0x64];\n            var temp41 = memory[0x0520:0x0540];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x07] = temp41;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x08] = msg.data[0xa4:0xc4];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0])] = 0x00;\n            var0 = 0x0c;\n        \n            if (storage[var0] + msg.data[0xc4:0xe4] < storage[var0]) { revert(memory[0x00:0x00]); }\n        \n            var temp42 = var0;\n            storage[temp42] = storage[temp42] + msg.data[0xc4:0xe4];\n            memory[0xc0:0xe0] = 0x0b;\n        \n            if (!storage[keccak256(memory[0xc0:0xe0]) + 0x08]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xc0:0xe0] = 0x0b;\n            storage[0x0d] = storage[0x0c] / storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n        \n            if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0580:0x05a0] = 0x23b872dd;\n            memory[0x05a0:0x05c0] = msg.sender;\n            memory[0x05c0:0x05e0] = address(this);\n            memory[0x05e0:0x0600] = msg.data[0xc4:0xe4];\n            var temp43;\n            temp43, memory[0x0640:0x0660] = address(storage[0x00]).call.gas(msg.gas)(memory[0x059c:0x0600]);\n        \n            if (!temp43) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0560:0x0580] = memory[0x0640:0x0660];\n            memory[0x0660:0x0680] = 0x08c379a0;\n            memory[0x0680:0x06a0] = 0x20;\n            memory[0x06a0:0x06c0] = 0x0f;\n            memory[0x06c0:0x06e0] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n        \n            if (!memory[0x0560:0x0580]) { revert(memory[0x067c:0x0700]); }\n        \n            memory[0x0700:0x0720] = storage[0x0a];\n            memory[0x0720:0x0740] = msg.data[0x04:0x24];\n            memory[0x0740:0x0760] = memory[0x0540:0x0560];\n        \n            if (memory[0x0540:0x0560] + msg.data[0x84:0xa4] < memory[0x0540:0x0560]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0760:0x0780] = memory[0x0540:0x0560] + msg.data[0x84:0xa4];\n            memory[0x0780:0x07a0] = msg.data[0x24:0x44];\n            memory[0x07a0:0x07c0] = msg.data[0x44:0x64];\n            memory[0x07c0:0x07e0] = memory[0x0520:0x0540];\n            memory[0x07e0:0x0800] = msg.data[0xa4:0xc4];\n            memory[0x0800:0x0820] = storage[0x0d];\n            log(memory[0x0700:0x0820], [0xede627ce4bced8a9b0a39e006c0a1d534d530222904131c567cc925f8090e972]);\n            stop();\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp47 = block.number < storage[keccak256(memory[0xc0:0xe0]) + 0x04];\n            memory[0xc0:0xe0] = 0x0b;\n            var temp48 = (storage[keccak256(memory[0xc0:0xe0]) + 0x01] > 0x00) & temp47;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp49 = storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n            memory[0xc0:0xe0] = 0x0b;\n            var temp50 = (storage[keccak256(memory[0xc0:0xe0]) + 0x02] < temp49) & temp48;\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x00:0x20] = !storage[keccak256(memory[0xc0:0xe0])] & temp50;\n            var-1 = memory[0x00:0x20];\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp46 = !storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x00:0x20] = (storage[keccak256(memory[0xc0:0xe0])] > 0x00) | temp46;\n            var-1 = memory[0x00:0x20];\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0xe0]) + 0x05];\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0xe0]) + 0x03];\n        \n            if (block.number > memory[0x0180:0x01a0]) {\n                memory[0xc0:0xe0] = 0x0b;\n            \n                if (!storage[keccak256(memory[0xc0:0xe0]) + 0x07]) {\n                    var-1 = 0x00;\n                    goto label_0217;\n                } else if (block.number >= memory[0x0180:0x01a0]) {\n                    var-1 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                    var0 = storage[keccak256(memory[0xc0:0xe0]) + 0x07];\n                \n                    if (block.number < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp44 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                \n                    if ((storage[keccak256(memory[0xc0:0xe0]) + 0x07] * temp44) / var0 != var-1) { revert(memory[0x00:0x00]); }\n                \n                    if (block.number < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp45 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                    var-1 = storage[keccak256(memory[0xc0:0xe0]) + 0x07] * temp45;\n                \n                label_0217:\n                    memory[0xc0:0xe0] = 0x0b;\n                \n                    if (memory[0x0160:0x0180] < storage[keccak256(memory[0xc0:0xe0]) + 0x06]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xc0:0xe0] = 0x0b;\n                    var0 = memory[0x0160:0x0180] - storage[keccak256(memory[0xc0:0xe0]) + 0x06];\n                \n                    if (var-1 <= var0) {\n                        memory[0x01a0:0x01c0] = var-1;\n                    \n                        if (memory[0x0160:0x0180] < memory[0x01a0:0x01c0]) { revert(memory[0x00:0x00]); }\n                    \n                    label_0272:\n                        memory[0x00:0x20] = memory[0x0160:0x0180] - memory[0x01a0:0x01c0];\n                        var-1 = memory[0x00:0x20];\n                        // Error: Could not resolve jump destination!\n                    } else {\n                        var1 = var0;\n                        memory[0x01a0:0x01c0] = var1;\n                    \n                        if (memory[0x0160:0x0180] >= memory[0x01a0:0x01c0]) { goto label_0272; }\n                        else { revert(memory[0x00:0x00]); }\n                    }\n                } else { revert(memory[0x00:0x00]); }\n            } else {\n                memory[0x00:0x20] = memory[0x0160:0x0180];\n                var-1 = memory[0x00:0x20];\n                // Error: Could not resolve jump destination!\n            }\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            var-1 = memory[0x0140:0x0160];\n            var0 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            // Error: StackRead before write???\n            var var-1;\n            // Error: StackRead before write???\n            var var-2;\n            memory[0x0160:0x0180] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x03;\n            memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (memory[0x01a0:0x01c0] <= 0x00) {\n                memory[0x00:0x20] = memory[0x0180:0x01a0];\n                var-2 = memory[0x00:0x20];\n                // Error: Could not resolve jump destination!\n            } else {\n                memory[0x0200:0x0220] = 0x08c379a0;\n                memory[0x0220:0x0240] = 0x20;\n                memory[0x0240:0x0260] = 0x27;\n                memory[0x0260:0x0280] = 0x49732062696464657220616e642061756374696f6e206e6f742066696e616c69;\n                memory[0x0280:0x02a0] = 0x7365642079657400000000000000000000000000000000000000000000000000;\n                var-2 = memory[0x0140:0x0160];\n                var-1 = memory[0x0160:0x0180];\n                var0 = memory[0x0180:0x01a0];\n                var1 = memory[0x01a0:0x01c0];\n                var2 = 0x06;\n                // Unhandled termination\n            }\n        } else if (memory[0x00:0x20] != 0xa3169b14) {\n            if (memory[0x00:0x20] != 0x40fff189) {\n                if (memory[0x00:0x20] != 0x287d274b) {\n                    if (memory[0x00:0x20] != 0x454a2ab3) {\n                        if (memory[0x00:0x20] != 0x579632a9) {\n                            if (memory[0x00:0x20] != 0xc5f0204c) {\n                                if (memory[0x00:0x20] != 0x2e1bc98f) {\n                                    if (memory[0x00:0x20] != 0xa0b5323f) {\n                                        if (memory[0x00:0x20] != 0x90d209ca) {\n                                            if (memory[0x00:0x20] != 0xe335cfab) {\n                                                if (memory[0x00:0x20] != 0x7e00ab0a) {\n                                                    if (memory[0x00:0x20] != 0x5a58cd4c) {\n                                                        if (memory[0x00:0x20] != 0xb9f890de) {\n                                                            if (memory[0x00:0x20] != 0x190eaaba) {\n                                                                if (memory[0x00:0x20] != 0x151a67b4) {\n                                                                    if (memory[0x00:0x20] != 0xa9215db4) {\n                                                                        if (memory[0x00:0x20] != 0x714436f2) {\n                                                                            if (memory[0x00:0x20] != 0x83e98bc3) {\n                                                                                if (memory[0x00:0x20] != 0x8146f323) {\n                                                                                    if (memory[0x00:0x20] != 0xeb91d37e) {\n                                                                                        if (memory[0x00:0x20] != 0xbac4159d) {\n                                                                                            if (memory[0x00:0x20] != 0x8da5cb5b) {\n                                                                                                if (memory[0x00:0x20] != 0x573c0b0e) {\n                                                                                                    if (memory[0x00:0x20] != 0xefec6739) {\n                                                                                                        if (memory[0x00:0x20] != 0x7cfb9d7f) {\n                                                                                                            if (memory[0x00:0x20] != 0x34e11eea) {\n                                                                                                                if (memory[0x00:0x20] != 0xca0341c6) {\n                                                                                                                    if (memory[0x00:0x20] != 0xd750da0b) {\n                                                                                                                        if (memory[0x00:0x20] != 0x43b8063a) {\n                                                                                                                            if (memory[0x00:0x20] != 0xd2572c8b) {\n                                                                                                                                if (memory[0x00:0x20] != 0x78be921f) {\n                                                                                                                                    if (memory[0x00:0x20] != 0x5d85af0c) {\n                                                                                                                                        if (memory[0x00:0x20] != 0xca964f6d) {\n                                                                                                                                            if (memory[0x00:0x20] != 0x965ac0af) {\n                                                                                                                                                if (memory[0x00:0x20] != 0xfbc6ef00) {\n                                                                                                                                                    if (memory[0x00:0x20] != 0x8cf0d66f) {\n                                                                                                                                                        if (memory[0x00:0x20] != 0x20f8d74c) {\n                                                                                                                                                            if (memory[0x00:0x20] != 0x0d9be7dd) {\n                                                                                                                                                                if (memory[0x00:0x20] != 0x6ebcddb8) {\n                                                                                                                                                                    if (memory[0x00:0x20] != 0x85245104) {\n                                                                                                                                                                        if (memory[0x00:0x20] != 0xfc614adb) {\n                                                                                                                                                                            if (memory[0x00:0x20] != 0x96bcc37f) {\n                                                                                                                                                                                if (memory[0x00:0x20] != 0x39c6dd93) {\n                                                                                                                                                                                    if (memory[0x00:0x20] != 0xb99fa9fc) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                \n                                                                                                                                                                                    if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                \n                                                                                                                                                                                    memory[0x00:0x20] = storage[0x0d];\n                                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                                                    memory[0x00:0x20] = storage[0x0c];\n                                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x09];\n                                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n                                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                                        memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x07];\n                                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x06];\n                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x05];\n                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x04];\n                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                        memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x03];\n                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                        memory[0x00:0x20] = storage[0x0a];\n                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                } else if (!msg.value) {\n                                                                                                                                    var var0 = msg.data[0x04:0x24];\n                                                                                                                                \n                                                                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                \n                                                                                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                    memory[0xc0:0xe0] = 0x09;\n                                                                                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                            } else if (!msg.value) {\n                                                                                                                                var0 = msg.data[0x04:0x24];\n                                                                                                                            \n                                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                            \n                                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                memory[0xc0:0xe0] = 0x09;\n                                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                                return memory[0x00:0x20];\n                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                        } else if (!msg.value) {\n                                                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                                                        \n                                                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                        \n                                                                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                            memory[0xc0:0xe0] = 0x09;\n                                                                                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                            return memory[0x00:0x20];\n                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                    } else if (!msg.value) {\n                                                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                                                    \n                                                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                    \n                                                                                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                        memory[0xc0:0xe0] = 0x08;\n                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                                        return memory[0x00:0x20];\n                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                } else if (!msg.value) {\n                                                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                                                \n                                                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                \n                                                                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                    memory[0xc0:0xe0] = 0x07;\n                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                                    return memory[0x00:0x20];\n                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                            } else if (!msg.value) {\n                                                                                                                var0 = msg.data[0x04:0x24];\n                                                                                                            \n                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                            \n                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                memory[0xc0:0xe0] = 0x06;\n                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                return memory[0x00:0x20];\n                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                        } else if (!msg.value) {\n                                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                                        \n                                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                        \n                                                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                            memory[0xc0:0xe0] = 0x06;\n                                                                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                            return memory[0x00:0x20];\n                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                    } else if (!msg.value) {\n                                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                                    \n                                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                    \n                                                                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                        memory[0xc0:0xe0] = 0x05;\n                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                        return memory[0x00:0x20];\n                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                } else if (!msg.value) {\n                                                                                                    memory[0x00:0x20] = storage[0x02];\n                                                                                                    return memory[0x00:0x20];\n                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                            } else if (!msg.value) {\n                                                                                                memory[0x00:0x20] = storage[0x01];\n                                                                                                return memory[0x00:0x20];\n                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                        } else if (!msg.value) {\n                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                        \n                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x0140:0x0160] = 0xce96fe20;\n                                                                                            memory[0x0160:0x0180] = msg.data[0x04:0x24];\n                                                                                            var0 = memory[0x0160:0x0180];\n                                                                                            var var1 = 0x06;\n                                                                                            // Unhandled termination\n                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                    } else if (!msg.value) {\n                                                                                        var0 = 0x06;\n                                                                                        // Unhandled termination\n                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                } else if (!msg.value) {\n                                                                                    var0 = 0x06;\n                                                                                    // Unhandled termination\n                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                            } else if (!msg.value) {\n                                                                                var0 = 0x06;\n                                                                                // Unhandled termination\n                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                        } else if (!msg.value) {\n                                                                            memory[0x0160:0x0180] = 0x08c379a0;\n                                                                            memory[0x0180:0x01a0] = 0x20;\n                                                                            memory[0x01a0:0x01c0] = 0x13;\n                                                                            memory[0x01c0:0x01e0] = 0x536c6f7473206e6f74207965742066696e616c00000000000000000000000000;\n                                                                            var0 = 0x06;\n                                                                            // Unhandled termination\n                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                    } else if (!msg.value) {\n                                                                        memory[0x0160:0x0180] = 0x08c379a0;\n                                                                        memory[0x0180:0x01a0] = 0x20;\n                                                                        memory[0x01a0:0x01c0] = 0x15;\n                                                                        memory[0x01c0:0x01e0] = 0x5374616b657273206e6f74207965742066696e616c0000000000000000000000;\n                                                                        var0 = 0x06;\n                                                                        // Unhandled termination\n                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                } else if (!msg.value) {\n                                                                    var0 = msg.data[0x04:0x24];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x0160:0x0180] = 0x08c379a0;\n                                                                    memory[0x0180:0x01a0] = 0x20;\n                                                                    memory[0x01a0:0x01c0] = 0x13;\n                                                                    memory[0x01c0:0x01e0] = 0x536c6f7473206e6f74207965742066696e616c00000000000000000000000000;\n                                                                    var0 = 0x06;\n                                                                    // Unhandled termination\n                                                                } else { revert(memory[0x00:0x00]); }\n                                                            } else if (!msg.value) {\n                                                                memory[0x00:0x20] = 0x0186a0;\n                                                                return memory[0x00:0x20];\n                                                            } else { revert(memory[0x00:0x00]); }\n                                                        } else if (!msg.value) {\n                                                            memory[0x00:0x20] = storage[0x00];\n                                                            return memory[0x00:0x20];\n                                                        } else { revert(memory[0x00:0x00]); }\n                                                    } else if (!msg.value) {\n                                                        memory[0x0140:0x0160] = 0x08c379a0;\n                                                        memory[0x0160:0x0180] = 0x20;\n                                                        memory[0x0180:0x01a0] = 0x0a;\n                                                        memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                                                    \n                                                        if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                                                    \n                                                        memory[0x01e0:0x0200] = 0x08c379a0;\n                                                        memory[0x0200:0x0220] = 0x20;\n                                                        memory[0x0220:0x0240] = 0x0f;\n                                                        memory[0x0240:0x0260] = 0x496e206c6f636b75702070686173650000000000000000000000000000000000;\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x01fc:0x0280]); }\n                                                    \n                                                        memory[0x0280:0x02a0] = 0x08c379a0;\n                                                        memory[0x02a0:0x02c0] = 0x20;\n                                                        memory[0x02c0:0x02e0] = 0x1a;\n                                                        memory[0x02e0:0x0300] = 0x6561726c6965737444656c657465206e6f742072656163686564000000000000;\n                                                    \n                                                        if (block.timestamp < storage[0x02]) { revert(memory[0x029c:0x0320]); }\n                                                    \n                                                        if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0340:0x0360] = 0x70a08231;\n                                                        memory[0x0360:0x0380] = address(this);\n                                                        var temp0;\n                                                        temp0, memory[0x03c0:0x03e0] = address(storage[0x00]).staticcall.gas(msg.gas)(memory[0x035c:0x0380]);\n                                                    \n                                                        if (!temp0) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0320:0x0340] = memory[0x03c0:0x03e0];\n                                                    \n                                                        if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0400:0x0420] = 0xa9059cbb;\n                                                        memory[0x0420:0x0440] = storage[0x01];\n                                                        memory[0x0440:0x0460] = memory[0x0320:0x0340];\n                                                        var temp1;\n                                                        temp1, memory[0x04a0:0x04c0] = address(storage[0x00]).call.gas(msg.gas)(memory[0x041c:0x0460]);\n                                                    \n                                                        if (!temp1) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x03e0:0x0400] = memory[0x04a0:0x04c0];\n                                                        memory[0x04c0:0x04e0] = 0x08c379a0;\n                                                        memory[0x04e0:0x0500] = 0x20;\n                                                        memory[0x0500:0x0520] = 0x0f;\n                                                        memory[0x0520:0x0540] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n                                                    \n                                                        if (memory[0x03e0:0x0400]) { selfdestruct(storage[0x01]); }\n                                                        else { revert(memory[0x04dc:0x0560]); }\n                                                    } else { revert(memory[0x00:0x00]); }\n                                                } else if (!msg.value) {\n                                                    memory[0xc0:0xe0] = 0x0b;\n                                                    var temp2 = !storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                    memory[0xe0:0x0100] = msg.sender;\n                                                    memory[0xc0:0xe0] = 0x06;\n                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                \n                                                    if (!((storage[keccak256(memory[0xc0:0xe0]) + 0x01] < storage[0x0a]) | temp2)) {\n                                                    label_3E34:\n                                                    \n                                                        if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0180:0x01a0] = 0xa9059cbb;\n                                                        memory[0x01a0:0x01c0] = msg.sender;\n                                                        memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n                                                        var temp3;\n                                                        temp3, memory[0x0220:0x0240] = address(storage[0x00]).call.gas(msg.gas)(memory[0x019c:0x01e0]);\n                                                    \n                                                        if (!temp3) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0160:0x0180] = memory[0x0220:0x0240];\n                                                        memory[0x0240:0x0260] = 0x08c379a0;\n                                                        memory[0x0260:0x0280] = 0x20;\n                                                        memory[0x0280:0x02a0] = 0x0f;\n                                                        memory[0x02a0:0x02c0] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n                                                    \n                                                        if (!memory[0x0160:0x0180]) { revert(memory[0x025c:0x02e0]); }\n                                                    \n                                                        memory[0x00:0x20] = memory[0x0140:0x0160];\n                                                        return memory[0x00:0x20];\n                                                    } else {\n                                                        var0 = 0x0140;\n                                                        var temp4 = memory[var0:var0 + 0x20];\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x06;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                    \n                                                        if (memory[var0:var0 + 0x20] + storage[keccak256(memory[0xc0:0xe0])] < temp4) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x06;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                        var temp5 = var0;\n                                                        memory[temp5:temp5 + 0x20] = memory[temp5:temp5 + 0x20] + storage[keccak256(memory[0xc0:0xe0])];\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x06;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                        var temp6 = keccak256(memory[0xc0:0xe0]);\n                                                        storage[temp6] = 0x00;\n                                                        storage[temp6 + 0x01] = 0x00;\n                                                        goto label_3E34;\n                                                    }\n                                                } else { revert(memory[0x00:0x00]); }\n                                            } else if (!msg.value) {\n                                                memory[0xe0:0x0100] = msg.sender;\n                                                memory[0xc0:0xe0] = 0x07;\n                                                memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                var0 = memory[0x0140:0x0160];\n                                                var1 = memory[0x0160:0x0180];\n                                                memory[0x01a0:0x01c0] = 0xce96fe20;\n                                                memory[0x01c0:0x01e0] = msg.sender;\n                                                var var2 = memory[0x01c0:0x01e0];\n                                                var var3 = 0x06;\n                                                // Unhandled termination\n                                            } else { revert(memory[0x00:0x00]); }\n                                        } else if (!msg.value) {\n                                            var0 = msg.data[0x24:0x44];\n                                        \n                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0x0140:0x0160] = 0x08c379a0;\n                                            memory[0x0160:0x0180] = 0x20;\n                                            memory[0x0180:0x01a0] = 0x0f;\n                                            memory[0x01a0:0x01c0] = 0x4e6f742063757272656e74204149440000000000000000000000000000000000;\n                                        \n                                            if (msg.data[0x04:0x24] != storage[0x0a]) { revert(memory[0x015c:0x01e0]); }\n                                        \n                                            memory[0x0220:0x0240] = 0x08c379a0;\n                                            memory[0x0240:0x0260] = 0x20;\n                                            memory[0x0260:0x0280] = 0x14;\n                                            memory[0x0280:0x02a0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                                            var0 = memory[0x0140:0x0160];\n                                            var1 = memory[0x0160:0x0180];\n                                            var2 = memory[0x0180:0x01a0];\n                                            var3 = memory[0x01a0:0x01c0];\n                                            var var4 = memory[0x01c0:0x01e0];\n                                            var var5 = 0x06;\n                                            // Unhandled termination\n                                        } else { revert(memory[0x00:0x00]); }\n                                    } else if (!msg.value) {\n                                        memory[0x01a0:0x01c0] = 0x08c379a0;\n                                        memory[0x01c0:0x01e0] = 0x20;\n                                        memory[0x01e0:0x0200] = 0x1d;\n                                        memory[0x0200:0x0220] = 0x42696464696e67207068617365206f6620414944206e6f74206f766572000000;\n                                        memory[0xe0:0x0100] = msg.sender;\n                                        memory[0xc0:0xe0] = 0x09;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = storage[keccak256(memory[0xc0:0xe0]) + 0x02] < storage[0x0a];\n                                        var1 = memory[0x0140:0x0160];\n                                        var2 = 0x06;\n                                        // Unhandled termination\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    memory[0x0140:0x0160] = 0x08c379a0;\n                                    memory[0x0160:0x0180] = 0x20;\n                                    memory[0x0180:0x01a0] = 0x13;\n                                    memory[0x01a0:0x01c0] = 0x4e6f742063757272656e742061756374696f6e00000000000000000000000000;\n                                \n                                    if (msg.data[0x04:0x24] != storage[0x0a]) { revert(memory[0x015c:0x01e0]); }\n                                \n                                    memory[0x0220:0x0240] = 0x08c379a0;\n                                    memory[0x0240:0x0260] = 0x20;\n                                    memory[0x0260:0x0280] = 0x14;\n                                    memory[0x0280:0x02a0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                                    var0 = memory[0x0140:0x0160];\n                                    var1 = memory[0x0160:0x0180];\n                                    var2 = memory[0x0180:0x01a0];\n                                    var3 = memory[0x01a0:0x01c0];\n                                    var4 = memory[0x01c0:0x01e0];\n                                    var5 = 0x06;\n                                    // Unhandled termination\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                memory[0x0140:0x0160] = 0x08c379a0;\n                                memory[0x0160:0x0180] = 0x20;\n                                memory[0x0180:0x01a0] = 0x2e;\n                                memory[0x01a0:0x01c0] = 0x41756374696f6e206e6f742066696e616c6973656420796574206f72206e6f20;\n                                memory[0x01c0:0x01e0] = 0x61756374696f6e20746f20656e64000000000000000000000000000000000000;\n                                memory[0xc0:0xe0] = 0x0b;\n                            \n                                if (storage[keccak256(memory[0xc0:0xe0])] <= 0x00) { revert(memory[0x015c:0x0200]); }\n                            \n                                memory[0x0200:0x0220] = 0x08c379a0;\n                                memory[0x0220:0x0240] = 0x20;\n                                memory[0x0240:0x0260] = 0x0f;\n                                memory[0x0260:0x0280] = 0x4c6f636b7570206e6f74206f7665720000000000000000000000000000000000;\n                                memory[0xc0:0xe0] = 0x0b;\n                            \n                                if (block.number < storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x021c:0x02a0]); }\n                            \n                                memory[0xc0:0xe0] = 0x0b;\n                                memory[0x02a0:0x02c0] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                memory[0x02c0:0x02e0] = storage[0x0d];\n                                var0 = 0x0c;\n                            \n                                if (!memory[0x02a0:0x02c0]) {\n                                    var1 = 0x00;\n                                \n                                    if (storage[var0] >= var1) { goto label_2737; }\n                                    else { revert(memory[0x00:0x00]); }\n                                } else if ((memory[0x02a0:0x02c0] * memory[0x02c0:0x02e0]) / memory[0x02a0:0x02c0] == memory[0x02c0:0x02e0]) {\n                                    if (storage[var0] < memory[0x02a0:0x02c0] * memory[0x02c0:0x02e0]) { revert(memory[0x00:0x00]); }\n                                \n                                label_2737:\n                                \n                                    if (!memory[0x02a0:0x02c0]) {\n                                        var1 = 0x00;\n                                        var temp24 = var0;\n                                        storage[temp24] = storage[temp24] - var1;\n                                    \n                                        if (block.timestamp + 0x4f1a00 >= block.timestamp) { goto label_2786; }\n                                        else { revert(memory[0x00:0x00]); }\n                                    } else if ((memory[0x02a0:0x02c0] * memory[0x02c0:0x02e0]) / memory[0x02a0:0x02c0] == memory[0x02c0:0x02e0]) {\n                                        var temp7 = var0;\n                                        storage[temp7] = storage[temp7] - memory[0x02a0:0x02c0] * memory[0x02c0:0x02e0];\n                                    \n                                        if (block.timestamp + 0x4f1a00 < block.timestamp) { revert(memory[0x00:0x00]); }\n                                    \n                                    label_2786:\n                                        storage[0x02] = block.timestamp + 0x4f1a00;\n                                        var0 = 0x0300;\n                                        memory[var0:var0 + 0x20] = 0x00;\n                                        var1 = 0x012c;\n                                        var2 = memory[0x0300:0x0320];\n                                    \n                                        if (var2 >= 0x012c) { revert(memory[0x00:0x00]); }\n                                    \n                                    label_27AE:\n                                        memory[0xc0:0xe0] = 0x04;\n                                        memory[0x02e0:0x0300] = storage[keccak256(memory[0xc0:0xe0]) + var2];\n                                    \n                                        if (!memory[0x02e0:0x0300]) { goto label_28F7; }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        var2 = keccak256(memory[0xc0:0x0100]);\n                                        var3 = storage[var2];\n                                        memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                        memory[0xc0:0xe0] = 0x03;\n                                    \n                                        if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                            var temp8 = memory[0x02c0:0x02e0];\n                                            memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            var temp9 = storage[keccak256(memory[0xc0:0x0100])];\n                                            var temp10 = memory[0x02c0:0x02e0];\n                                            memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if ((storage[keccak256(memory[0xc0:0x0100])] * temp10) / temp9 != temp8) { revert(memory[0x00:0x00]); }\n                                        \n                                            var temp11 = memory[0x02c0:0x02e0];\n                                            memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            var4 = storage[keccak256(memory[0xc0:0x0100])] * temp11;\n                                        \n                                        label_284F:\n                                        \n                                            if (storage[var2] + var4 < var3) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                                var temp12 = memory[0x02c0:0x02e0];\n                                                memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var temp13 = storage[keccak256(memory[0xc0:0x0100])];\n                                                var temp14 = memory[0x02c0:0x02e0];\n                                                memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                                memory[0xc0:0xe0] = 0x03;\n                                            \n                                                if ((storage[keccak256(memory[0xc0:0x0100])] * temp14) / temp13 != temp12) { revert(memory[0x00:0x00]); }\n                                            \n                                                var temp15 = memory[0x02c0:0x02e0];\n                                                memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var temp16 = var2;\n                                                storage[temp16] = storage[temp16] + storage[keccak256(memory[0xc0:0x0100])] * temp15;\n                                                memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                var temp17 = var0;\n                                                var temp18 = memory[temp17:temp17 + 0x20] + 0x01;\n                                                memory[temp17:temp17 + 0x20] = temp18;\n                                            \n                                                if (var1 != temp18) {\n                                                label_279C:\n                                                    var2 = memory[0x0300:0x0320];\n                                                \n                                                    if (var2 < 0x012c) { goto label_27AE; }\n                                                    else { revert(memory[0x00:0x00]); }\n                                                } else {\n                                                label_28F7:\n                                                    memory[0xc0:0xe0] = 0x04;\n                                                    var temp19 = keccak256(memory[0xc0:0xe0]);\n                                                    storage[temp19] = 0x00;\n                                                    storage[temp19 + 0x01] = 0x00;\n                                                    storage[temp19 + 0x02] = 0x00;\n                                                    storage[temp19 + 0x03] = 0x00;\n                                                    storage[temp19 + 0x04] = 0x00;\n                                                    storage[temp19 + 0x05] = 0x00;\n                                                    storage[temp19 + 0x06] = 0x00;\n                                                    storage[temp19 + 0x07] = 0x00;\n                                                    storage[temp19 + 0x08] = 0x00;\n                                                    storage[temp19 + 0x09] = 0x00;\n                                                    storage[temp19 + 0x0a] = 0x00;\n                                                    storage[temp19 + 0x0b] = 0x00;\n                                                    storage[temp19 + 0x0c] = 0x00;\n                                                    storage[temp19 + 0x0d] = 0x00;\n                                                    storage[temp19 + 0x0e] = 0x00;\n                                                    storage[temp19 + 0x0f] = 0x00;\n                                                    storage[temp19 + 0x10] = 0x00;\n                                                    storage[temp19 + 0x11] = 0x00;\n                                                    storage[temp19 + 0x12] = 0x00;\n                                                    storage[temp19 + 0x13] = 0x00;\n                                                    storage[temp19 + 0x14] = 0x00;\n                                                    storage[temp19 + 0x15] = 0x00;\n                                                    storage[temp19 + 0x16] = 0x00;\n                                                    storage[temp19 + 0x17] = 0x00;\n                                                    storage[temp19 + 0x18] = 0x00;\n                                                    storage[temp19 + 0x19] = 0x00;\n                                                    storage[temp19 + 0x1a] = 0x00;\n                                                    storage[temp19 + 0x1b] = 0x00;\n                                                    storage[temp19 + 0x1c] = 0x00;\n                                                    storage[temp19 + 0x1d] = 0x00;\n                                                    storage[temp19 + 0x1e] = 0x00;\n                                                    storage[temp19 + 0x1f] = 0x00;\n                                                    storage[temp19 + 0x20] = 0x00;\n                                                    storage[temp19 + 0x21] = 0x00;\n                                                    storage[temp19 + 0x22] = 0x00;\n                                                    storage[temp19 + 0x23] = 0x00;\n                                                    storage[temp19 + 0x24] = 0x00;\n                                                    storage[temp19 + 0x25] = 0x00;\n                                                    storage[temp19 + 0x26] = 0x00;\n                                                    storage[temp19 + 0x27] = 0x00;\n                                                    storage[temp19 + 0x28] = 0x00;\n                                                    storage[temp19 + 0x29] = 0x00;\n                                                    storage[temp19 + 0x2a] = 0x00;\n                                                    storage[temp19 + 0x2b] = 0x00;\n                                                    storage[temp19 + 0x2c] = 0x00;\n                                                    storage[temp19 + 0x2d] = 0x00;\n                                                    storage[temp19 + 0x2e] = 0x00;\n                                                    storage[temp19 + 0x2f] = 0x00;\n                                                    storage[temp19 + 0x30] = 0x00;\n                                                    storage[temp19 + 0x31] = 0x00;\n                                                    storage[temp19 + 0x32] = 0x00;\n                                                    storage[temp19 + 0x33] = 0x00;\n                                                    storage[temp19 + 0x34] = 0x00;\n                                                    storage[temp19 + 0x35] = 0x00;\n                                                    storage[temp19 + 0x36] = 0x00;\n                                                    storage[temp19 + 0x37] = 0x00;\n                                                    storage[temp19 + 0x38] = 0x00;\n                                                    storage[temp19 + 0x39] = 0x00;\n                                                    storage[temp19 + 0x3a] = 0x00;\n                                                    storage[temp19 + 0x3b] = 0x00;\n                                                    storage[temp19 + 0x3c] = 0x00;\n                                                    storage[temp19 + 0x3d] = 0x00;\n                                                    storage[temp19 + 0x3e] = 0x00;\n                                                    storage[temp19 + 0x3f] = 0x00;\n                                                    storage[temp19 + 0x40] = 0x00;\n                                                    storage[temp19 + 0x41] = 0x00;\n                                                    storage[temp19 + 0x42] = 0x00;\n                                                    storage[temp19 + 0x43] = 0x00;\n                                                    storage[temp19 + 0x44] = 0x00;\n                                                    storage[temp19 + 0x45] = 0x00;\n                                                    storage[temp19 + 0x46] = 0x00;\n                                                    storage[temp19 + 0x47] = 0x00;\n                                                    storage[temp19 + 0x48] = 0x00;\n                                                    storage[temp19 + 0x49] = 0x00;\n                                                    storage[temp19 + 0x4a] = 0x00;\n                                                    storage[temp19 + 0x4b] = 0x00;\n                                                    storage[temp19 + 0x4c] = 0x00;\n                                                    storage[temp19 + 0x4d] = 0x00;\n                                                    storage[temp19 + 0x4e] = 0x00;\n                                                    storage[temp19 + 0x4f] = 0x00;\n                                                    storage[temp19 + 0x50] = 0x00;\n                                                    storage[temp19 + 0x51] = 0x00;\n                                                    storage[temp19 + 0x52] = 0x00;\n                                                    storage[temp19 + 0x53] = 0x00;\n                                                    storage[temp19 + 0x54] = 0x00;\n                                                    storage[temp19 + 0x55] = 0x00;\n                                                    storage[temp19 + 0x56] = 0x00;\n                                                    storage[temp19 + 0x57] = 0x00;\n                                                    storage[temp19 + 0x58] = 0x00;\n                                                    storage[temp19 + 0x59] = 0x00;\n                                                    storage[temp19 + 0x5a] = 0x00;\n                                                    storage[temp19 + 0x5b] = 0x00;\n                                                    storage[temp19 + 0x5c] = 0x00;\n                                                    storage[temp19 + 0x5d] = 0x00;\n                                                    storage[temp19 + 0x5e] = 0x00;\n                                                    storage[temp19 + 0x5f] = 0x00;\n                                                    storage[temp19 + 0x60] = 0x00;\n                                                    storage[temp19 + 0x61] = 0x00;\n                                                    storage[temp19 + 0x62] = 0x00;\n                                                    storage[temp19 + 0x63] = 0x00;\n                                                    storage[temp19 + 0x64] = 0x00;\n                                                    storage[temp19 + 0x65] = 0x00;\n                                                    storage[temp19 + 0x66] = 0x00;\n                                                    storage[temp19 + 0x67] = 0x00;\n                                                    storage[temp19 + 0x68] = 0x00;\n                                                    storage[temp19 + 0x69] = 0x00;\n                                                    storage[temp19 + 0x6a] = 0x00;\n                                                    storage[temp19 + 0x6b] = 0x00;\n                                                    storage[temp19 + 0x6c] = 0x00;\n                                                    storage[temp19 + 0x6d] = 0x00;\n                                                    storage[temp19 + 0x6e] = 0x00;\n                                                    storage[temp19 + 0x6f] = 0x00;\n                                                    storage[temp19 + 0x70] = 0x00;\n                                                    storage[temp19 + 0x71] = 0x00;\n                                                    storage[temp19 + 0x72] = 0x00;\n                                                    storage[temp19 + 0x73] = 0x00;\n                                                    storage[temp19 + 0x74] = 0x00;\n                                                    storage[temp19 + 0x75] = 0x00;\n                                                    storage[temp19 + 0x76] = 0x00;\n                                                    storage[temp19 + 0x77] = 0x00;\n                                                    storage[temp19 + 0x78] = 0x00;\n                                                    storage[temp19 + 0x79] = 0x00;\n                                                    storage[temp19 + 0x7a] = 0x00;\n                                                    storage[temp19 + 0x7b] = 0x00;\n                                                    storage[temp19 + 0x7c] = 0x00;\n                                                    storage[temp19 + 0x7d] = 0x00;\n                                                    storage[temp19 + 0x7e] = 0x00;\n                                                    storage[temp19 + 0x7f] = 0x00;\n                                                    storage[temp19 + 0x80] = 0x00;\n                                                    storage[temp19 + 0x81] = 0x00;\n                                                    storage[temp19 + 0x82] = 0x00;\n                                                    storage[temp19 + 0x83] = 0x00;\n                                                    storage[temp19 + 0x84] = 0x00;\n                                                    storage[temp19 + 0x85] = 0x00;\n                                                    storage[temp19 + 0x86] = 0x00;\n                                                    storage[temp19 + 0x87] = 0x00;\n                                                    storage[temp19 + 0x88] = 0x00;\n                                                    storage[temp19 + 0x89] = 0x00;\n                                                    storage[temp19 + 0x8a] = 0x00;\n                                                    storage[temp19 + 0x8b] = 0x00;\n                                                    storage[temp19 + 0x8c] = 0x00;\n                                                    storage[temp19 + 0x8d] = 0x00;\n                                                    storage[temp19 + 0x8e] = 0x00;\n                                                    storage[temp19 + 0x8f] = 0x00;\n                                                    storage[temp19 + 0x90] = 0x00;\n                                                    storage[temp19 + 0x91] = 0x00;\n                                                    storage[temp19 + 0x92] = 0x00;\n                                                    storage[temp19 + 0x93] = 0x00;\n                                                    storage[temp19 + 0x94] = 0x00;\n                                                    storage[temp19 + 0x95] = 0x00;\n                                                    storage[temp19 + 0x96] = 0x00;\n                                                    storage[temp19 + 0x97] = 0x00;\n                                                    storage[temp19 + 0x98] = 0x00;\n                                                    storage[temp19 + 0x99] = 0x00;\n                                                    storage[temp19 + 0x9a] = 0x00;\n                                                    storage[temp19 + 0x9b] = 0x00;\n                                                    storage[temp19 + 0x9c] = 0x00;\n                                                    storage[temp19 + 0x9d] = 0x00;\n                                                    storage[temp19 + 0x9e] = 0x00;\n                                                    storage[temp19 + 0x9f] = 0x00;\n                                                    storage[temp19 + 0xa0] = 0x00;\n                                                    storage[temp19 + 0xa1] = 0x00;\n                                                    storage[temp19 + 0xa2] = 0x00;\n                                                    storage[temp19 + 0xa3] = 0x00;\n                                                    storage[temp19 + 0xa4] = 0x00;\n                                                    storage[temp19 + 0xa5] = 0x00;\n                                                    storage[temp19 + 0xa6] = 0x00;\n                                                    storage[temp19 + 0xa7] = 0x00;\n                                                    storage[temp19 + 0xa8] = 0x00;\n                                                    storage[temp19 + 0xa9] = 0x00;\n                                                    storage[temp19 + 0xaa] = 0x00;\n                                                    storage[temp19 + 0xab] = 0x00;\n                                                    storage[temp19 + 0xac] = 0x00;\n                                                    storage[temp19 + 0xad] = 0x00;\n                                                    storage[temp19 + 0xae] = 0x00;\n                                                    storage[temp19 + 0xaf] = 0x00;\n                                                    storage[temp19 + 0xb0] = 0x00;\n                                                    storage[temp19 + 0xb1] = 0x00;\n                                                    storage[temp19 + 0xb2] = 0x00;\n                                                    storage[temp19 + 0xb3] = 0x00;\n                                                    storage[temp19 + 0xb4] = 0x00;\n                                                    storage[temp19 + 0xb5] = 0x00;\n                                                    storage[temp19 + 0xb6] = 0x00;\n                                                    storage[temp19 + 0xb7] = 0x00;\n                                                    storage[temp19 + 0xb8] = 0x00;\n                                                    storage[temp19 + 0xb9] = 0x00;\n                                                    storage[temp19 + 0xba] = 0x00;\n                                                    storage[temp19 + 0xbb] = 0x00;\n                                                    storage[temp19 + 0xbc] = 0x00;\n                                                    storage[temp19 + 0xbd] = 0x00;\n                                                    storage[temp19 + 0xbe] = 0x00;\n                                                    storage[temp19 + 0xbf] = 0x00;\n                                                    storage[temp19 + 0xc0] = 0x00;\n                                                    storage[temp19 + 0xc1] = 0x00;\n                                                    storage[temp19 + 0xc2] = 0x00;\n                                                    storage[temp19 + 0xc3] = 0x00;\n                                                    storage[temp19 + 0xc4] = 0x00;\n                                                    storage[temp19 + 0xc5] = 0x00;\n                                                    storage[temp19 + 0xc6] = 0x00;\n                                                    storage[temp19 + 0xc7] = 0x00;\n                                                    storage[temp19 + 0xc8] = 0x00;\n                                                    storage[temp19 + 0xc9] = 0x00;\n                                                    storage[temp19 + 0xca] = 0x00;\n                                                    storage[temp19 + 0xcb] = 0x00;\n                                                    storage[temp19 + 0xcc] = 0x00;\n                                                    storage[temp19 + 0xcd] = 0x00;\n                                                    storage[temp19 + 0xce] = 0x00;\n                                                    storage[temp19 + 0xcf] = 0x00;\n                                                    storage[temp19 + 0xd0] = 0x00;\n                                                    storage[temp19 + 0xd1] = 0x00;\n                                                    storage[temp19 + 0xd2] = 0x00;\n                                                    storage[temp19 + 0xd3] = 0x00;\n                                                    storage[temp19 + 0xd4] = 0x00;\n                                                    storage[temp19 + 0xd5] = 0x00;\n                                                    storage[temp19 + 0xd6] = 0x00;\n                                                    storage[temp19 + 0xd7] = 0x00;\n                                                    storage[temp19 + 0xd8] = 0x00;\n                                                    storage[temp19 + 0xd9] = 0x00;\n                                                    storage[temp19 + 0xda] = 0x00;\n                                                    storage[temp19 + 0xdb] = 0x00;\n                                                    storage[temp19 + 0xdc] = 0x00;\n                                                    storage[temp19 + 0xdd] = 0x00;\n                                                    storage[temp19 + 0xde] = 0x00;\n                                                    storage[temp19 + 0xdf] = 0x00;\n                                                    storage[temp19 + 0xe0] = 0x00;\n                                                    storage[temp19 + 0xe1] = 0x00;\n                                                    storage[temp19 + 0xe2] = 0x00;\n                                                    storage[temp19 + 0xe3] = 0x00;\n                                                    storage[temp19 + 0xe4] = 0x00;\n                                                    storage[temp19 + 0xe5] = 0x00;\n                                                    storage[temp19 + 0xe6] = 0x00;\n                                                    storage[temp19 + 0xe7] = 0x00;\n                                                    storage[temp19 + 0xe8] = 0x00;\n                                                    storage[temp19 + 0xe9] = 0x00;\n                                                    storage[temp19 + 0xea] = 0x00;\n                                                    storage[temp19 + 0xeb] = 0x00;\n                                                    storage[temp19 + 0xec] = 0x00;\n                                                    storage[temp19 + 0xed] = 0x00;\n                                                    storage[temp19 + 0xee] = 0x00;\n                                                    storage[temp19 + 0xef] = 0x00;\n                                                    storage[temp19 + 0xf0] = 0x00;\n                                                    storage[temp19 + 0xf1] = 0x00;\n                                                    storage[temp19 + 0xf2] = 0x00;\n                                                    storage[temp19 + 0xf3] = 0x00;\n                                                    storage[temp19 + 0xf4] = 0x00;\n                                                    storage[temp19 + 0xf5] = 0x00;\n                                                    storage[temp19 + 0xf6] = 0x00;\n                                                    storage[temp19 + 0xf7] = 0x00;\n                                                    storage[temp19 + 0xf8] = 0x00;\n                                                    storage[temp19 + 0xf9] = 0x00;\n                                                    storage[temp19 + 0xfa] = 0x00;\n                                                    storage[temp19 + 0xfb] = 0x00;\n                                                    storage[temp19 + 0xfc] = 0x00;\n                                                    storage[temp19 + 0xfd] = 0x00;\n                                                    storage[temp19 + 0xfe] = 0x00;\n                                                    storage[temp19 + 0xff] = 0x00;\n                                                    storage[temp19 + 0x0100] = 0x00;\n                                                    storage[temp19 + 0x0101] = 0x00;\n                                                    storage[temp19 + 0x0102] = 0x00;\n                                                    storage[temp19 + 0x0103] = 0x00;\n                                                    storage[temp19 + 0x0104] = 0x00;\n                                                    storage[temp19 + 0x0105] = 0x00;\n                                                    storage[temp19 + 0x0106] = 0x00;\n                                                    storage[temp19 + 0x0107] = 0x00;\n                                                    storage[temp19 + 0x0108] = 0x00;\n                                                    storage[temp19 + 0x0109] = 0x00;\n                                                    storage[temp19 + 0x010a] = 0x00;\n                                                    storage[temp19 + 0x010b] = 0x00;\n                                                    storage[temp19 + 0x010c] = 0x00;\n                                                    storage[temp19 + 0x010d] = 0x00;\n                                                    storage[temp19 + 0x010e] = 0x00;\n                                                    storage[temp19 + 0x010f] = 0x00;\n                                                    storage[temp19 + 0x0110] = 0x00;\n                                                    storage[temp19 + 0x0111] = 0x00;\n                                                    storage[temp19 + 0x0112] = 0x00;\n                                                    storage[temp19 + 0x0113] = 0x00;\n                                                    storage[temp19 + 0x0114] = 0x00;\n                                                    storage[temp19 + 0x0115] = 0x00;\n                                                    storage[temp19 + 0x0116] = 0x00;\n                                                    storage[temp19 + 0x0117] = 0x00;\n                                                    storage[temp19 + 0x0118] = 0x00;\n                                                    storage[temp19 + 0x0119] = 0x00;\n                                                    storage[temp19 + 0x011a] = 0x00;\n                                                    storage[temp19 + 0x011b] = 0x00;\n                                                    storage[temp19 + 0x011c] = 0x00;\n                                                    storage[temp19 + 0x011d] = 0x00;\n                                                    storage[temp19 + 0x011e] = 0x00;\n                                                    storage[temp19 + 0x011f] = 0x00;\n                                                    storage[temp19 + 0x0120] = 0x00;\n                                                    storage[temp19 + 0x0121] = 0x00;\n                                                    storage[temp19 + 0x0122] = 0x00;\n                                                    storage[temp19 + 0x0123] = 0x00;\n                                                    storage[temp19 + 0x0124] = 0x00;\n                                                    storage[temp19 + 0x0125] = 0x00;\n                                                    storage[temp19 + 0x0126] = 0x00;\n                                                    storage[temp19 + 0x0127] = 0x00;\n                                                    storage[temp19 + 0x0128] = 0x00;\n                                                    storage[temp19 + 0x0129] = 0x00;\n                                                    storage[temp19 + 0x012a] = 0x00;\n                                                    storage[temp19 + 0x012b] = 0x00;\n                                                    memory[0xc0:0xe0] = 0x0b;\n                                                    var temp20 = keccak256(memory[0xc0:0xe0]);\n                                                    storage[temp20] = 0x00;\n                                                    storage[temp20 + 0x01] = 0x00;\n                                                    storage[temp20 + 0x02] = 0x00;\n                                                    storage[temp20 + 0x03] = 0x00;\n                                                    storage[temp20 + 0x04] = 0x00;\n                                                    storage[temp20 + 0x05] = 0x00;\n                                                    storage[temp20 + 0x06] = 0x00;\n                                                    storage[temp20 + 0x07] = 0x00;\n                                                    storage[temp20 + 0x08] = 0x00;\n                                                    storage[temp20 + 0x09] = 0x00;\n                                                    storage[0x0d] = 0x00;\n                                                    memory[0x0320:0x0340] = storage[0x0a];\n                                                    log(memory[0x0320:0x0340], [0x893cdbbcaf3dd1e2014d91d0db208a57dd1344fcb1751d1691b668ec58489271]);\n                                                    stop();\n                                                }\n                                            } else {\n                                                var3 = 0x00;\n                                                var temp21 = var2;\n                                                storage[temp21] = storage[temp21] + var3;\n                                                memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                var temp22 = var0;\n                                                var temp23 = memory[temp22:temp22 + 0x20] + 0x01;\n                                                memory[temp22:temp22 + 0x20] = temp23;\n                                            \n                                                if (var1 != temp23) { goto label_279C; }\n                                                else { goto label_28F7; }\n                                            }\n                                        } else {\n                                            var4 = 0x00;\n                                            goto label_284F;\n                                        }\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else { revert(memory[0x00:0x00]); }\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            var0 = memory[0x0140:0x0160];\n                            var1 = 0x06;\n                            // Unhandled termination\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0x0160:0x0180] = 0x08c379a0;\n                        memory[0x0180:0x01a0] = 0x20;\n                        memory[0x01a0:0x01c0] = 0x14;\n                        memory[0x01c0:0x01e0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                        var0 = 0x06;\n                        // Unhandled termination\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                \n                    memory[0x0140:0x0160] = 0x08c379a0;\n                    memory[0x0160:0x0180] = 0x20;\n                    memory[0x0180:0x01a0] = 0x0a;\n                    memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                \n                    if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                \n                    memory[0x01e0:0x0200] = 0x08c379a0;\n                    memory[0x0200:0x0220] = 0x20;\n                    memory[0x0220:0x0240] = 0x10;\n                    memory[0x0240:0x0260] = 0x4e6f7468696e6720746f2061626f727400000000000000000000000000000000;\n                    memory[0xc0:0xe0] = 0x0b;\n                \n                    if (storage[keccak256(memory[0xc0:0xe0]) + 0x01] <= 0x00) { revert(memory[0x01fc:0x0280]); }\n                \n                    memory[0xc0:0xe0] = 0x0b;\n                    memory[0x02c0:0x02e0] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                \n                    if (!msg.data[0x04:0x24]) {\n                        var0 = 0x03c0;\n                        memory[var0:var0 + 0x20] = 0x00;\n                        var1 = 0x012c;\n                        var2 = memory[0x03c0:0x03e0];\n                    \n                        if (var2 >= 0x012c) { revert(memory[0x00:0x00]); }\n                    \n                    label_0FA5:\n                        memory[0xc0:0xe0] = 0x04;\n                        memory[0x0280:0x02a0] = storage[keccak256(memory[0xc0:0xe0]) + var2];\n                    \n                        if (!memory[0x0280:0x02a0]) { goto label_10F7; }\n                    \n                        if (!msg.data[0x04:0x24]) {\n                        label_10D2:\n                            memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                            memory[0xc0:0xe0] = 0x03;\n                            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                            var temp25 = var0;\n                            var temp26 = memory[temp25:temp25 + 0x20] + 0x01;\n                            memory[temp25:temp25 + 0x20] = temp26;\n                        \n                            if (var1 != temp26) {\n                                var2 = memory[0x03c0:0x03e0];\n                            \n                                if (var2 < 0x012c) { goto label_0FA5; }\n                                else { revert(memory[0x00:0x00]); }\n                            } else {\n                            label_10F7:\n                                memory[0xc0:0xe0] = 0x04;\n                                var temp27 = keccak256(memory[0xc0:0xe0]);\n                                storage[temp27] = 0x00;\n                                storage[temp27 + 0x01] = 0x00;\n                                storage[temp27 + 0x02] = 0x00;\n                                storage[temp27 + 0x03] = 0x00;\n                                storage[temp27 + 0x04] = 0x00;\n                                storage[temp27 + 0x05] = 0x00;\n                                storage[temp27 + 0x06] = 0x00;\n                                storage[temp27 + 0x07] = 0x00;\n                                storage[temp27 + 0x08] = 0x00;\n                                storage[temp27 + 0x09] = 0x00;\n                                storage[temp27 + 0x0a] = 0x00;\n                                storage[temp27 + 0x0b] = 0x00;\n                                storage[temp27 + 0x0c] = 0x00;\n                                storage[temp27 + 0x0d] = 0x00;\n                                storage[temp27 + 0x0e] = 0x00;\n                                storage[temp27 + 0x0f] = 0x00;\n                                storage[temp27 + 0x10] = 0x00;\n                                storage[temp27 + 0x11] = 0x00;\n                                storage[temp27 + 0x12] = 0x00;\n                                storage[temp27 + 0x13] = 0x00;\n                                storage[temp27 + 0x14] = 0x00;\n                                storage[temp27 + 0x15] = 0x00;\n                                storage[temp27 + 0x16] = 0x00;\n                                storage[temp27 + 0x17] = 0x00;\n                                storage[temp27 + 0x18] = 0x00;\n                                storage[temp27 + 0x19] = 0x00;\n                                storage[temp27 + 0x1a] = 0x00;\n                                storage[temp27 + 0x1b] = 0x00;\n                                storage[temp27 + 0x1c] = 0x00;\n                                storage[temp27 + 0x1d] = 0x00;\n                                storage[temp27 + 0x1e] = 0x00;\n                                storage[temp27 + 0x1f] = 0x00;\n                                storage[temp27 + 0x20] = 0x00;\n                                storage[temp27 + 0x21] = 0x00;\n                                storage[temp27 + 0x22] = 0x00;\n                                storage[temp27 + 0x23] = 0x00;\n                                storage[temp27 + 0x24] = 0x00;\n                                storage[temp27 + 0x25] = 0x00;\n                                storage[temp27 + 0x26] = 0x00;\n                                storage[temp27 + 0x27] = 0x00;\n                                storage[temp27 + 0x28] = 0x00;\n                                storage[temp27 + 0x29] = 0x00;\n                                storage[temp27 + 0x2a] = 0x00;\n                                storage[temp27 + 0x2b] = 0x00;\n                                storage[temp27 + 0x2c] = 0x00;\n                                storage[temp27 + 0x2d] = 0x00;\n                                storage[temp27 + 0x2e] = 0x00;\n                                storage[temp27 + 0x2f] = 0x00;\n                                storage[temp27 + 0x30] = 0x00;\n                                storage[temp27 + 0x31] = 0x00;\n                                storage[temp27 + 0x32] = 0x00;\n                                storage[temp27 + 0x33] = 0x00;\n                                storage[temp27 + 0x34] = 0x00;\n                                storage[temp27 + 0x35] = 0x00;\n                                storage[temp27 + 0x36] = 0x00;\n                                storage[temp27 + 0x37] = 0x00;\n                                storage[temp27 + 0x38] = 0x00;\n                                storage[temp27 + 0x39] = 0x00;\n                                storage[temp27 + 0x3a] = 0x00;\n                                storage[temp27 + 0x3b] = 0x00;\n                                storage[temp27 + 0x3c] = 0x00;\n                                storage[temp27 + 0x3d] = 0x00;\n                                storage[temp27 + 0x3e] = 0x00;\n                                storage[temp27 + 0x3f] = 0x00;\n                                storage[temp27 + 0x40] = 0x00;\n                                storage[temp27 + 0x41] = 0x00;\n                                storage[temp27 + 0x42] = 0x00;\n                                storage[temp27 + 0x43] = 0x00;\n                                storage[temp27 + 0x44] = 0x00;\n                                storage[temp27 + 0x45] = 0x00;\n                                storage[temp27 + 0x46] = 0x00;\n                                storage[temp27 + 0x47] = 0x00;\n                                storage[temp27 + 0x48] = 0x00;\n                                storage[temp27 + 0x49] = 0x00;\n                                storage[temp27 + 0x4a] = 0x00;\n                                storage[temp27 + 0x4b] = 0x00;\n                                storage[temp27 + 0x4c] = 0x00;\n                                storage[temp27 + 0x4d] = 0x00;\n                                storage[temp27 + 0x4e] = 0x00;\n                                storage[temp27 + 0x4f] = 0x00;\n                                storage[temp27 + 0x50] = 0x00;\n                                storage[temp27 + 0x51] = 0x00;\n                                storage[temp27 + 0x52] = 0x00;\n                                storage[temp27 + 0x53] = 0x00;\n                                storage[temp27 + 0x54] = 0x00;\n                                storage[temp27 + 0x55] = 0x00;\n                                storage[temp27 + 0x56] = 0x00;\n                                storage[temp27 + 0x57] = 0x00;\n                                storage[temp27 + 0x58] = 0x00;\n                                storage[temp27 + 0x59] = 0x00;\n                                storage[temp27 + 0x5a] = 0x00;\n                                storage[temp27 + 0x5b] = 0x00;\n                                storage[temp27 + 0x5c] = 0x00;\n                                storage[temp27 + 0x5d] = 0x00;\n                                storage[temp27 + 0x5e] = 0x00;\n                                storage[temp27 + 0x5f] = 0x00;\n                                storage[temp27 + 0x60] = 0x00;\n                                storage[temp27 + 0x61] = 0x00;\n                                storage[temp27 + 0x62] = 0x00;\n                                storage[temp27 + 0x63] = 0x00;\n                                storage[temp27 + 0x64] = 0x00;\n                                storage[temp27 + 0x65] = 0x00;\n                                storage[temp27 + 0x66] = 0x00;\n                                storage[temp27 + 0x67] = 0x00;\n                                storage[temp27 + 0x68] = 0x00;\n                                storage[temp27 + 0x69] = 0x00;\n                                storage[temp27 + 0x6a] = 0x00;\n                                storage[temp27 + 0x6b] = 0x00;\n                                storage[temp27 + 0x6c] = 0x00;\n                                storage[temp27 + 0x6d] = 0x00;\n                                storage[temp27 + 0x6e] = 0x00;\n                                storage[temp27 + 0x6f] = 0x00;\n                                storage[temp27 + 0x70] = 0x00;\n                                storage[temp27 + 0x71] = 0x00;\n                                storage[temp27 + 0x72] = 0x00;\n                                storage[temp27 + 0x73] = 0x00;\n                                storage[temp27 + 0x74] = 0x00;\n                                storage[temp27 + 0x75] = 0x00;\n                                storage[temp27 + 0x76] = 0x00;\n                                storage[temp27 + 0x77] = 0x00;\n                                storage[temp27 + 0x78] = 0x00;\n                                storage[temp27 + 0x79] = 0x00;\n                                storage[temp27 + 0x7a] = 0x00;\n                                storage[temp27 + 0x7b] = 0x00;\n                                storage[temp27 + 0x7c] = 0x00;\n                                storage[temp27 + 0x7d] = 0x00;\n                                storage[temp27 + 0x7e] = 0x00;\n                                storage[temp27 + 0x7f] = 0x00;\n                                storage[temp27 + 0x80] = 0x00;\n                                storage[temp27 + 0x81] = 0x00;\n                                storage[temp27 + 0x82] = 0x00;\n                                storage[temp27 + 0x83] = 0x00;\n                                storage[temp27 + 0x84] = 0x00;\n                                storage[temp27 + 0x85] = 0x00;\n                                storage[temp27 + 0x86] = 0x00;\n                                storage[temp27 + 0x87] = 0x00;\n                                storage[temp27 + 0x88] = 0x00;\n                                storage[temp27 + 0x89] = 0x00;\n                                storage[temp27 + 0x8a] = 0x00;\n                                storage[temp27 + 0x8b] = 0x00;\n                                storage[temp27 + 0x8c] = 0x00;\n                                storage[temp27 + 0x8d] = 0x00;\n                                storage[temp27 + 0x8e] = 0x00;\n                                storage[temp27 + 0x8f] = 0x00;\n                                storage[temp27 + 0x90] = 0x00;\n                                storage[temp27 + 0x91] = 0x00;\n                                storage[temp27 + 0x92] = 0x00;\n                                storage[temp27 + 0x93] = 0x00;\n                                storage[temp27 + 0x94] = 0x00;\n                                storage[temp27 + 0x95] = 0x00;\n                                storage[temp27 + 0x96] = 0x00;\n                                storage[temp27 + 0x97] = 0x00;\n                                storage[temp27 + 0x98] = 0x00;\n                                storage[temp27 + 0x99] = 0x00;\n                                storage[temp27 + 0x9a] = 0x00;\n                                storage[temp27 + 0x9b] = 0x00;\n                                storage[temp27 + 0x9c] = 0x00;\n                                storage[temp27 + 0x9d] = 0x00;\n                                storage[temp27 + 0x9e] = 0x00;\n                                storage[temp27 + 0x9f] = 0x00;\n                                storage[temp27 + 0xa0] = 0x00;\n                                storage[temp27 + 0xa1] = 0x00;\n                                storage[temp27 + 0xa2] = 0x00;\n                                storage[temp27 + 0xa3] = 0x00;\n                                storage[temp27 + 0xa4] = 0x00;\n                                storage[temp27 + 0xa5] = 0x00;\n                                storage[temp27 + 0xa6] = 0x00;\n                                storage[temp27 + 0xa7] = 0x00;\n                                storage[temp27 + 0xa8] = 0x00;\n                                storage[temp27 + 0xa9] = 0x00;\n                                storage[temp27 + 0xaa] = 0x00;\n                                storage[temp27 + 0xab] = 0x00;\n                                storage[temp27 + 0xac] = 0x00;\n                                storage[temp27 + 0xad] = 0x00;\n                                storage[temp27 + 0xae] = 0x00;\n                                storage[temp27 + 0xaf] = 0x00;\n                                storage[temp27 + 0xb0] = 0x00;\n                                storage[temp27 + 0xb1] = 0x00;\n                                storage[temp27 + 0xb2] = 0x00;\n                                storage[temp27 + 0xb3] = 0x00;\n                                storage[temp27 + 0xb4] = 0x00;\n                                storage[temp27 + 0xb5] = 0x00;\n                                storage[temp27 + 0xb6] = 0x00;\n                                storage[temp27 + 0xb7] = 0x00;\n                                storage[temp27 + 0xb8] = 0x00;\n                                storage[temp27 + 0xb9] = 0x00;\n                                storage[temp27 + 0xba] = 0x00;\n                                storage[temp27 + 0xbb] = 0x00;\n                                storage[temp27 + 0xbc] = 0x00;\n                                storage[temp27 + 0xbd] = 0x00;\n                                storage[temp27 + 0xbe] = 0x00;\n                                storage[temp27 + 0xbf] = 0x00;\n                                storage[temp27 + 0xc0] = 0x00;\n                                storage[temp27 + 0xc1] = 0x00;\n                                storage[temp27 + 0xc2] = 0x00;\n                                storage[temp27 + 0xc3] = 0x00;\n                                storage[temp27 + 0xc4] = 0x00;\n                                storage[temp27 + 0xc5] = 0x00;\n                                storage[temp27 + 0xc6] = 0x00;\n                                storage[temp27 + 0xc7] = 0x00;\n                                storage[temp27 + 0xc8] = 0x00;\n                                storage[temp27 + 0xc9] = 0x00;\n                                storage[temp27 + 0xca] = 0x00;\n                                storage[temp27 + 0xcb] = 0x00;\n                                storage[temp27 + 0xcc] = 0x00;\n                                storage[temp27 + 0xcd] = 0x00;\n                                storage[temp27 + 0xce] = 0x00;\n                                storage[temp27 + 0xcf] = 0x00;\n                                storage[temp27 + 0xd0] = 0x00;\n                                storage[temp27 + 0xd1] = 0x00;\n                                storage[temp27 + 0xd2] = 0x00;\n                                storage[temp27 + 0xd3] = 0x00;\n                                storage[temp27 + 0xd4] = 0x00;\n                                storage[temp27 + 0xd5] = 0x00;\n                                storage[temp27 + 0xd6] = 0x00;\n                                storage[temp27 + 0xd7] = 0x00;\n                                storage[temp27 + 0xd8] = 0x00;\n                                storage[temp27 + 0xd9] = 0x00;\n                                storage[temp27 + 0xda] = 0x00;\n                                storage[temp27 + 0xdb] = 0x00;\n                                storage[temp27 + 0xdc] = 0x00;\n                                storage[temp27 + 0xdd] = 0x00;\n                                storage[temp27 + 0xde] = 0x00;\n                                storage[temp27 + 0xdf] = 0x00;\n                                storage[temp27 + 0xe0] = 0x00;\n                                storage[temp27 + 0xe1] = 0x00;\n                                storage[temp27 + 0xe2] = 0x00;\n                                storage[temp27 + 0xe3] = 0x00;\n                                storage[temp27 + 0xe4] = 0x00;\n                                storage[temp27 + 0xe5] = 0x00;\n                                storage[temp27 + 0xe6] = 0x00;\n                                storage[temp27 + 0xe7] = 0x00;\n                                storage[temp27 + 0xe8] = 0x00;\n                                storage[temp27 + 0xe9] = 0x00;\n                                storage[temp27 + 0xea] = 0x00;\n                                storage[temp27 + 0xeb] = 0x00;\n                                storage[temp27 + 0xec] = 0x00;\n                                storage[temp27 + 0xed] = 0x00;\n                                storage[temp27 + 0xee] = 0x00;\n                                storage[temp27 + 0xef] = 0x00;\n                                storage[temp27 + 0xf0] = 0x00;\n                                storage[temp27 + 0xf1] = 0x00;\n                                storage[temp27 + 0xf2] = 0x00;\n                                storage[temp27 + 0xf3] = 0x00;\n                                storage[temp27 + 0xf4] = 0x00;\n                                storage[temp27 + 0xf5] = 0x00;\n                                storage[temp27 + 0xf6] = 0x00;\n                                storage[temp27 + 0xf7] = 0x00;\n                                storage[temp27 + 0xf8] = 0x00;\n                                storage[temp27 + 0xf9] = 0x00;\n                                storage[temp27 + 0xfa] = 0x00;\n                                storage[temp27 + 0xfb] = 0x00;\n                                storage[temp27 + 0xfc] = 0x00;\n                                storage[temp27 + 0xfd] = 0x00;\n                                storage[temp27 + 0xfe] = 0x00;\n                                storage[temp27 + 0xff] = 0x00;\n                                storage[temp27 + 0x0100] = 0x00;\n                                storage[temp27 + 0x0101] = 0x00;\n                                storage[temp27 + 0x0102] = 0x00;\n                                storage[temp27 + 0x0103] = 0x00;\n                                storage[temp27 + 0x0104] = 0x00;\n                                storage[temp27 + 0x0105] = 0x00;\n                                storage[temp27 + 0x0106] = 0x00;\n                                storage[temp27 + 0x0107] = 0x00;\n                                storage[temp27 + 0x0108] = 0x00;\n                                storage[temp27 + 0x0109] = 0x00;\n                                storage[temp27 + 0x010a] = 0x00;\n                                storage[temp27 + 0x010b] = 0x00;\n                                storage[temp27 + 0x010c] = 0x00;\n                                storage[temp27 + 0x010d] = 0x00;\n                                storage[temp27 + 0x010e] = 0x00;\n                                storage[temp27 + 0x010f] = 0x00;\n                                storage[temp27 + 0x0110] = 0x00;\n                                storage[temp27 + 0x0111] = 0x00;\n                                storage[temp27 + 0x0112] = 0x00;\n                                storage[temp27 + 0x0113] = 0x00;\n                                storage[temp27 + 0x0114] = 0x00;\n                                storage[temp27 + 0x0115] = 0x00;\n                                storage[temp27 + 0x0116] = 0x00;\n                                storage[temp27 + 0x0117] = 0x00;\n                                storage[temp27 + 0x0118] = 0x00;\n                                storage[temp27 + 0x0119] = 0x00;\n                                storage[temp27 + 0x011a] = 0x00;\n                                storage[temp27 + 0x011b] = 0x00;\n                                storage[temp27 + 0x011c] = 0x00;\n                                storage[temp27 + 0x011d] = 0x00;\n                                storage[temp27 + 0x011e] = 0x00;\n                                storage[temp27 + 0x011f] = 0x00;\n                                storage[temp27 + 0x0120] = 0x00;\n                                storage[temp27 + 0x0121] = 0x00;\n                                storage[temp27 + 0x0122] = 0x00;\n                                storage[temp27 + 0x0123] = 0x00;\n                                storage[temp27 + 0x0124] = 0x00;\n                                storage[temp27 + 0x0125] = 0x00;\n                                storage[temp27 + 0x0126] = 0x00;\n                                storage[temp27 + 0x0127] = 0x00;\n                                storage[temp27 + 0x0128] = 0x00;\n                                storage[temp27 + 0x0129] = 0x00;\n                                storage[temp27 + 0x012a] = 0x00;\n                                storage[temp27 + 0x012b] = 0x00;\n                                memory[0xc0:0xe0] = 0x0b;\n                                var temp28 = keccak256(memory[0xc0:0xe0]);\n                                storage[temp28] = 0x00;\n                                storage[temp28 + 0x01] = 0x00;\n                                storage[temp28 + 0x02] = 0x00;\n                                storage[temp28 + 0x03] = 0x00;\n                                storage[temp28 + 0x04] = 0x00;\n                                storage[temp28 + 0x05] = 0x00;\n                                storage[temp28 + 0x06] = 0x00;\n                                storage[temp28 + 0x07] = 0x00;\n                                storage[temp28 + 0x08] = 0x00;\n                                storage[temp28 + 0x09] = 0x00;\n                                storage[0x0d] = 0x00;\n                                memory[0x03e0:0x0400] = storage[0x0a];\n                                memory[0x0400:0x0420] = msg.data[0x04:0x24];\n                                log(memory[0x03e0:0x0420], [0x7cf7d9a307304a7cf180a171a89e959717bfb63d9de5f33ee00674ea058e49]);\n                                stop();\n                            }\n                        } else {\n                            memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                            memory[0xc0:0xe0] = 0x07;\n                            var2 = keccak256(memory[0xc0:0x0100]);\n                            var3 = storage[var2];\n                            memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                            memory[0xc0:0xe0] = 0x03;\n                        \n                            if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                var temp29 = memory[0x02a0:0x02c0];\n                                memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                memory[0xc0:0xe0] = 0x03;\n                                var temp30 = storage[keccak256(memory[0xc0:0x0100])];\n                                var temp31 = memory[0x02a0:0x02c0];\n                                memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                memory[0xc0:0xe0] = 0x03;\n                            \n                                if ((storage[keccak256(memory[0xc0:0x0100])] * temp31) / temp30 != temp29) { revert(memory[0x00:0x00]); }\n                            \n                                var temp32 = memory[0x02a0:0x02c0];\n                                memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                memory[0xc0:0xe0] = 0x03;\n                                var4 = storage[keccak256(memory[0xc0:0x0100])] * temp32;\n                            \n                            label_104E:\n                            \n                                if (storage[var2] + var4 < var3) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                memory[0xc0:0xe0] = 0x03;\n                            \n                                if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                    var temp33 = memory[0x02a0:0x02c0];\n                                    memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                    memory[0xc0:0xe0] = 0x03;\n                                    var temp34 = storage[keccak256(memory[0xc0:0x0100])];\n                                    var temp35 = memory[0x02a0:0x02c0];\n                                    memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                    memory[0xc0:0xe0] = 0x03;\n                                \n                                    if ((storage[keccak256(memory[0xc0:0x0100])] * temp35) / temp34 != temp33) { revert(memory[0x00:0x00]); }\n                                \n                                    var temp36 = memory[0x02a0:0x02c0];\n                                    memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                    memory[0xc0:0xe0] = 0x03;\n                                    var3 = storage[keccak256(memory[0xc0:0x0100])] * temp36;\n                                \n                                label_10CB:\n                                    var temp37 = var2;\n                                    storage[temp37] = storage[temp37] + var3;\n                                    goto label_10D2;\n                                } else {\n                                    var3 = 0x00;\n                                    goto label_10CB;\n                                }\n                            } else {\n                                var4 = 0x00;\n                                goto label_104E;\n                            }\n                        }\n                    } else {\n                        memory[0x0320:0x0340] = 0x08c379a0;\n                        memory[0x0340:0x0360] = 0x20;\n                        memory[0x0360:0x0380] = 0x0d;\n                        memory[0x0380:0x03a0] = 0x4e6f742066696e616c6973656400000000000000000000000000000000000000;\n                        memory[0x02e0:0x0300] = 0x0140;\n                        var0 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                        memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                    \n                        if (memory[0x02e0:0x0300] >= 0x02e0) {\n                        label_0EB4:\n                            var1 = 0x06;\n                            // Unhandled termination\n                        } else {\n                        label_0EB0:\n                            var1 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                            memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                        \n                            if (memory[0x02e0:0x0300] >= 0x02e0) { goto label_0EB4; }\n                            else { goto label_0EB0; }\n                        }\n                    }\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0x0140:0x0160] = 0x08c379a0;\n                memory[0x0160:0x0180] = 0x20;\n                memory[0x0180:0x01a0] = 0x0a;\n                memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n            \n                if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n            \n                memory[0x0220:0x0240] = 0x08c379a0;\n                memory[0x0240:0x0260] = 0x20;\n                memory[0x0260:0x0280] = 0x10;\n                memory[0x0280:0x02a0] = 0x496e2062696464696e6720706861736500000000000000000000000000000000;\n                var0 = memory[0x0140:0x0160];\n                var1 = memory[0x0160:0x0180];\n                var2 = memory[0x0180:0x01a0];\n                var3 = memory[0x01a0:0x01c0];\n                var4 = memory[0x01c0:0x01e0];\n                var5 = 0x06;\n                // Unhandled termination\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x0140:0x0160] = 0x08c379a0;\n            memory[0x0160:0x0180] = 0x20;\n            memory[0x0180:0x01a0] = 0x0a;\n            memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n        \n            if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n        \n            memory[0x01e0:0x0200] = 0x08c379a0;\n            memory[0x0200:0x0220] = 0x20;\n            memory[0x0220:0x0240] = 0x12;\n            memory[0x0240:0x0260] = 0x496e76616c69642073746172745374616b650000000000000000000000000000;\n        \n            if (msg.data[0x24:0x44] <= msg.data[0x44:0x64]) { revert(memory[0x01fc:0x0280]); }\n        \n            memory[0x0280:0x02a0] = 0x08c379a0;\n            memory[0x02a0:0x02c0] = 0x20;\n            memory[0x02c0:0x02e0] = 0x12;\n            memory[0x02e0:0x0300] = 0x496e76616c6420736c6f74206e756d6265720000000000000000000000000000;\n        \n            if (!((msg.data[0xa4:0xc4] > 0x00) & (msg.data[0xa4:0xc4] <= 0x012c))) { revert(memory[0x029c:0x0320]); }\n        \n            memory[0x0320:0x0340] = 0x08c379a0;\n            memory[0x0340:0x0360] = 0x20;\n            memory[0x0360:0x0380] = 0x1a;\n            memory[0x0380:0x03a0] = 0x5374617274206265666f72652063757272656e7420626c6f636b000000000000;\n        \n            if (msg.data[0x04:0x24] < block.number) { revert(memory[0x033c:0x03c0]); }\n        \n            memory[0x03c0:0x03e0] = 0x08c379a0;\n            memory[0x03e0:0x0400] = 0x20;\n            memory[0x0400:0x0420] = 0x22;\n            memory[0x0420:0x0440] = 0x52657365727665207374616b652068617320746f206265206174206c65617374;\n            memory[0x0440:0x0460] = 0x2031000000000000000000000000000000000000000000000000000000000000;\n        \n            if (msg.data[0x44:0x64] <= 0x00) { revert(memory[0x03dc:0x0480]); }\n        \n            memory[0x0480:0x04a0] = 0x08c379a0;\n            memory[0x04a0:0x04c0] = 0x20;\n            memory[0x04c0:0x04e0] = 0x13;\n            memory[0x04e0:0x0500] = 0x456e642063757272656e742061756374696f6e00000000000000000000000000;\n            memory[0xc0:0xe0] = 0x0b;\n        \n            if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x049c:0x0520]); }\n        \n            var0 = 0x0a;\n        \n            if (storage[var0] + 0x01 < storage[var0]) { revert(memory[0x00:0x00]); }\n        \n            var temp38 = var0;\n            storage[temp38] = storage[temp38] + 0x01;\n        \n            if (!msg.data[0x64:0x84]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x64:0x84];\n            var1 = 0x01;\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x24:0x44] - msg.data[0x44:0x64];\n            var3 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var3 < var2) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var2 < var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01;\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x24:0x44] - msg.data[0x44:0x64];\n            var3 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var3 < var2) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0520:0x0540] = (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var2) - var1 / var0;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24] + msg.data[0x64:0x84];\n            var1 = 0x19;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] + var1 < var0) { revert(memory[0x00:0x00]); }\n        \n            var0 = 0x19;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0540:0x0560] = msg.data[0x04:0x24] + msg.data[0x64:0x84] + var0;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x03] = msg.data[0x04:0x24];\n            var temp39 = memory[0x0540:0x0560];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x04] = temp39;\n        \n            if (memory[0x0540:0x0560] + msg.data[0x84:0xa4] < memory[0x0540:0x0560]) { revert(memory[0x00:0x00]); }\n        \n            var temp40 = memory[0x0540:0x0560] + msg.data[0x84:0xa4];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x01] = temp40;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x05] = msg.data[0x24:0x44];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x06] = msg.data[0x44:0x64];\n            var temp41 = memory[0x0520:0x0540];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x07] = temp41;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x08] = msg.data[0xa4:0xc4];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0])] = 0x00;\n            var0 = 0x0c;\n        \n            if (storage[var0] + msg.data[0xc4:0xe4] < storage[var0]) { revert(memory[0x00:0x00]); }\n        \n            var temp42 = var0;\n            storage[temp42] = storage[temp42] + msg.data[0xc4:0xe4];\n            memory[0xc0:0xe0] = 0x0b;\n        \n            if (!storage[keccak256(memory[0xc0:0xe0]) + 0x08]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xc0:0xe0] = 0x0b;\n            storage[0x0d] = storage[0x0c] / storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n        \n            if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0580:0x05a0] = 0x23b872dd;\n            memory[0x05a0:0x05c0] = msg.sender;\n            memory[0x05c0:0x05e0] = address(this);\n            memory[0x05e0:0x0600] = msg.data[0xc4:0xe4];\n            var temp43;\n            temp43, memory[0x0640:0x0660] = address(storage[0x00]).call.gas(msg.gas)(memory[0x059c:0x0600]);\n        \n            if (!temp43) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0560:0x0580] = memory[0x0640:0x0660];\n            memory[0x0660:0x0680] = 0x08c379a0;\n            memory[0x0680:0x06a0] = 0x20;\n            memory[0x06a0:0x06c0] = 0x0f;\n            memory[0x06c0:0x06e0] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n        \n            if (!memory[0x0560:0x0580]) { revert(memory[0x067c:0x0700]); }\n        \n            memory[0x0700:0x0720] = storage[0x0a];\n            memory[0x0720:0x0740] = msg.data[0x04:0x24];\n            memory[0x0740:0x0760] = memory[0x0540:0x0560];\n        \n            if (memory[0x0540:0x0560] + msg.data[0x84:0xa4] < memory[0x0540:0x0560]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0760:0x0780] = memory[0x0540:0x0560] + msg.data[0x84:0xa4];\n            memory[0x0780:0x07a0] = msg.data[0x24:0x44];\n            memory[0x07a0:0x07c0] = msg.data[0x44:0x64];\n            memory[0x07c0:0x07e0] = memory[0x0520:0x0540];\n            memory[0x07e0:0x0800] = msg.data[0xa4:0xc4];\n            memory[0x0800:0x0820] = storage[0x0d];\n            log(memory[0x0700:0x0820], [0xede627ce4bced8a9b0a39e006c0a1d534d530222904131c567cc925f8090e972]);\n            stop();\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp47 = block.number < storage[keccak256(memory[0xc0:0xe0]) + 0x04];\n            memory[0xc0:0xe0] = 0x0b;\n            var temp48 = (storage[keccak256(memory[0xc0:0xe0]) + 0x01] > 0x00) & temp47;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp49 = storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n            memory[0xc0:0xe0] = 0x0b;\n            var temp50 = (storage[keccak256(memory[0xc0:0xe0]) + 0x02] < temp49) & temp48;\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x00:0x20] = !storage[keccak256(memory[0xc0:0xe0])] & temp50;\n            var-1 = memory[0x00:0x20];\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            var temp46 = !storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x00:0x20] = (storage[keccak256(memory[0xc0:0xe0])] > 0x00) | temp46;\n            var-1 = memory[0x00:0x20];\n            // Error: Could not resolve jump destination!\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0xe0]) + 0x05];\n            memory[0xc0:0xe0] = 0x0b;\n            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0xe0]) + 0x03];\n        \n            if (block.number > memory[0x0180:0x01a0]) {\n                memory[0xc0:0xe0] = 0x0b;\n            \n                if (!storage[keccak256(memory[0xc0:0xe0]) + 0x07]) {\n                    var-1 = 0x00;\n                    goto label_0217;\n                } else if (block.number >= memory[0x0180:0x01a0]) {\n                    var-1 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                    var0 = storage[keccak256(memory[0xc0:0xe0]) + 0x07];\n                \n                    if (block.number < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp44 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                \n                    if ((storage[keccak256(memory[0xc0:0xe0]) + 0x07] * temp44) / var0 != var-1) { revert(memory[0x00:0x00]); }\n                \n                    if (block.number < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp45 = block.number - memory[0x0180:0x01a0];\n                    memory[0xc0:0xe0] = 0x0b;\n                    var-1 = storage[keccak256(memory[0xc0:0xe0]) + 0x07] * temp45;\n                \n                label_0217:\n                    memory[0xc0:0xe0] = 0x0b;\n                \n                    if (memory[0x0160:0x0180] < storage[keccak256(memory[0xc0:0xe0]) + 0x06]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xc0:0xe0] = 0x0b;\n                    var0 = memory[0x0160:0x0180] - storage[keccak256(memory[0xc0:0xe0]) + 0x06];\n                \n                    if (var-1 <= var0) {\n                        memory[0x01a0:0x01c0] = var-1;\n                    \n                        if (memory[0x0160:0x0180] < memory[0x01a0:0x01c0]) { revert(memory[0x00:0x00]); }\n                    \n                    label_0272:\n                        memory[0x00:0x20] = memory[0x0160:0x0180] - memory[0x01a0:0x01c0];\n                        var-1 = memory[0x00:0x20];\n                        // Error: Could not resolve jump destination!\n                    } else {\n                        var1 = var0;\n                        memory[0x01a0:0x01c0] = var1;\n                    \n                        if (memory[0x0160:0x0180] >= memory[0x01a0:0x01c0]) { goto label_0272; }\n                        else { revert(memory[0x00:0x00]); }\n                    }\n                } else { revert(memory[0x00:0x00]); }\n            } else {\n                memory[0x00:0x20] = memory[0x0160:0x0180];\n                var-1 = memory[0x00:0x20];\n                // Error: Could not resolve jump destination!\n            }\n        } else if (0x00) {\n            memory[0x0140:0x0160] = var-1;\n            var-1 = memory[0x0140:0x0160];\n            var0 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            // Error: StackRead before write???\n            var var-1;\n            // Error: StackRead before write???\n            var var-2;\n            memory[0x0160:0x0180] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n            memory[0xc0:0xe0] = 0x03;\n            memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n        \n            if (memory[0x01a0:0x01c0] <= 0x00) {\n                memory[0x00:0x20] = memory[0x0180:0x01a0];\n                var-2 = memory[0x00:0x20];\n                // Error: Could not resolve jump destination!\n            } else {\n                memory[0x0200:0x0220] = 0x08c379a0;\n                memory[0x0220:0x0240] = 0x20;\n                memory[0x0240:0x0260] = 0x27;\n                memory[0x0260:0x0280] = 0x49732062696464657220616e642061756374696f6e206e6f742066696e616c69;\n                memory[0x0280:0x02a0] = 0x7365642079657400000000000000000000000000000000000000000000000000;\n                var-2 = memory[0x0140:0x0160];\n                var-1 = memory[0x0160:0x0180];\n                var0 = memory[0x0180:0x01a0];\n                var1 = memory[0x01a0:0x01c0];\n                var2 = 0x06;\n                // Unhandled termination\n            }\n        } else if (memory[0x00:0x20] != 0xa3169b14) {\n            if (memory[0x00:0x20] != 0x40fff189) {\n                if (memory[0x00:0x20] != 0x287d274b) {\n                    if (memory[0x00:0x20] != 0x454a2ab3) {\n                        if (memory[0x00:0x20] != 0x579632a9) {\n                            if (memory[0x00:0x20] != 0xc5f0204c) {\n                                if (memory[0x00:0x20] != 0x2e1bc98f) {\n                                    if (memory[0x00:0x20] != 0xa0b5323f) {\n                                        if (memory[0x00:0x20] != 0x90d209ca) {\n                                            if (memory[0x00:0x20] != 0xe335cfab) {\n                                                if (memory[0x00:0x20] != 0x7e00ab0a) {\n                                                    if (memory[0x00:0x20] != 0x5a58cd4c) {\n                                                        if (memory[0x00:0x20] != 0xb9f890de) {\n                                                            if (memory[0x00:0x20] != 0x190eaaba) {\n                                                                if (memory[0x00:0x20] != 0x151a67b4) {\n                                                                    if (memory[0x00:0x20] != 0xa9215db4) {\n                                                                        if (memory[0x00:0x20] != 0x714436f2) {\n                                                                            if (memory[0x00:0x20] != 0x83e98bc3) {\n                                                                                if (memory[0x00:0x20] != 0x8146f323) {\n                                                                                    if (memory[0x00:0x20] != 0xeb91d37e) {\n                                                                                        if (memory[0x00:0x20] != 0xbac4159d) {\n                                                                                            if (memory[0x00:0x20] != 0x8da5cb5b) {\n                                                                                                if (memory[0x00:0x20] != 0x573c0b0e) {\n                                                                                                    if (memory[0x00:0x20] != 0xefec6739) {\n                                                                                                        if (memory[0x00:0x20] != 0x7cfb9d7f) {\n                                                                                                            if (memory[0x00:0x20] != 0x34e11eea) {\n                                                                                                                if (memory[0x00:0x20] != 0xca0341c6) {\n                                                                                                                    if (memory[0x00:0x20] != 0xd750da0b) {\n                                                                                                                        if (memory[0x00:0x20] != 0x43b8063a) {\n                                                                                                                            if (memory[0x00:0x20] != 0xd2572c8b) {\n                                                                                                                                if (memory[0x00:0x20] != 0x78be921f) {\n                                                                                                                                    if (memory[0x00:0x20] != 0x5d85af0c) {\n                                                                                                                                        if (memory[0x00:0x20] != 0xca964f6d) {\n                                                                                                                                            if (memory[0x00:0x20] != 0x965ac0af) {\n                                                                                                                                                if (memory[0x00:0x20] != 0xfbc6ef00) {\n                                                                                                                                                    if (memory[0x00:0x20] != 0x8cf0d66f) {\n                                                                                                                                                        if (memory[0x00:0x20] != 0x20f8d74c) {\n                                                                                                                                                            if (memory[0x00:0x20] != 0x0d9be7dd) {\n                                                                                                                                                                if (memory[0x00:0x20] != 0x6ebcddb8) {\n                                                                                                                                                                    if (memory[0x00:0x20] != 0x85245104) {\n                                                                                                                                                                        if (memory[0x00:0x20] != 0xfc614adb) {\n                                                                                                                                                                            if (memory[0x00:0x20] != 0x96bcc37f) {\n                                                                                                                                                                                if (memory[0x00:0x20] != 0x39c6dd93) {\n                                                                                                                                                                                    if (memory[0x00:0x20] != 0xb99fa9fc) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                \n                                                                                                                                                                                    if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                                                                                                                                \n                                                                                                                                                                                    memory[0x00:0x20] = storage[0x0d];\n                                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                                                    memory[0x00:0x20] = storage[0x0c];\n                                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x09];\n                                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n                                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                                        memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x07];\n                                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x06];\n                                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x05];\n                                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x04];\n                                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                                        memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x03];\n                                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                                } else if (!msg.value) {\n                                                                                                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                                            } else if (!msg.value) {\n                                                                                                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                                                return memory[0x00:0x20];\n                                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                                        } else if (!msg.value) {\n                                                                                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                                            return memory[0x00:0x20];\n                                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                                    } else if (!msg.value) {\n                                                                                                                                        memory[0x00:0x20] = storage[0x0a];\n                                                                                                                                        return memory[0x00:0x20];\n                                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                                } else if (!msg.value) {\n                                                                                                                                    var var0 = msg.data[0x04:0x24];\n                                                                                                                                \n                                                                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                                \n                                                                                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                    memory[0xc0:0xe0] = 0x09;\n                                                                                                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                                                                                                                    return memory[0x00:0x20];\n                                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                                            } else if (!msg.value) {\n                                                                                                                                var0 = msg.data[0x04:0x24];\n                                                                                                                            \n                                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                            \n                                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                                memory[0xc0:0xe0] = 0x09;\n                                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                                return memory[0x00:0x20];\n                                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                                        } else if (!msg.value) {\n                                                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                                                        \n                                                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                        \n                                                                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                            memory[0xc0:0xe0] = 0x09;\n                                                                                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                                            return memory[0x00:0x20];\n                                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                                    } else if (!msg.value) {\n                                                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                                                    \n                                                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                    \n                                                                                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                        memory[0xc0:0xe0] = 0x08;\n                                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                                        return memory[0x00:0x20];\n                                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                                } else if (!msg.value) {\n                                                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                                                \n                                                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                                \n                                                                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                    memory[0xc0:0xe0] = 0x07;\n                                                                                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                                    return memory[0x00:0x20];\n                                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                                            } else if (!msg.value) {\n                                                                                                                var0 = msg.data[0x04:0x24];\n                                                                                                            \n                                                                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                            \n                                                                                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                                memory[0xc0:0xe0] = 0x06;\n                                                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                                                                                return memory[0x00:0x20];\n                                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                                        } else if (!msg.value) {\n                                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                                        \n                                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                        \n                                                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                            memory[0xc0:0xe0] = 0x06;\n                                                                                                            memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                                                                                            return memory[0x00:0x20];\n                                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                                    } else if (!msg.value) {\n                                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                                    \n                                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                                    \n                                                                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                                                        memory[0xc0:0xe0] = 0x05;\n                                                                                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                                                        return memory[0x00:0x20];\n                                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                                } else if (!msg.value) {\n                                                                                                    memory[0x00:0x20] = storage[0x02];\n                                                                                                    return memory[0x00:0x20];\n                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                            } else if (!msg.value) {\n                                                                                                memory[0x00:0x20] = storage[0x01];\n                                                                                                return memory[0x00:0x20];\n                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                        } else if (!msg.value) {\n                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                        \n                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x0140:0x0160] = 0xce96fe20;\n                                                                                            memory[0x0160:0x0180] = msg.data[0x04:0x24];\n                                                                                            var0 = memory[0x0160:0x0180];\n                                                                                            var var1 = 0x06;\n                                                                                            // Unhandled termination\n                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                    } else if (!msg.value) {\n                                                                                        var0 = 0x06;\n                                                                                        // Unhandled termination\n                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                } else if (!msg.value) {\n                                                                                    var0 = 0x06;\n                                                                                    // Unhandled termination\n                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                            } else if (!msg.value) {\n                                                                                var0 = 0x06;\n                                                                                // Unhandled termination\n                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                        } else if (!msg.value) {\n                                                                            memory[0x0160:0x0180] = 0x08c379a0;\n                                                                            memory[0x0180:0x01a0] = 0x20;\n                                                                            memory[0x01a0:0x01c0] = 0x13;\n                                                                            memory[0x01c0:0x01e0] = 0x536c6f7473206e6f74207965742066696e616c00000000000000000000000000;\n                                                                            var0 = 0x06;\n                                                                            // Unhandled termination\n                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                    } else if (!msg.value) {\n                                                                        memory[0x0160:0x0180] = 0x08c379a0;\n                                                                        memory[0x0180:0x01a0] = 0x20;\n                                                                        memory[0x01a0:0x01c0] = 0x15;\n                                                                        memory[0x01c0:0x01e0] = 0x5374616b657273206e6f74207965742066696e616c0000000000000000000000;\n                                                                        var0 = 0x06;\n                                                                        // Unhandled termination\n                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                } else if (!msg.value) {\n                                                                    var0 = msg.data[0x04:0x24];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x0160:0x0180] = 0x08c379a0;\n                                                                    memory[0x0180:0x01a0] = 0x20;\n                                                                    memory[0x01a0:0x01c0] = 0x13;\n                                                                    memory[0x01c0:0x01e0] = 0x536c6f7473206e6f74207965742066696e616c00000000000000000000000000;\n                                                                    var0 = 0x06;\n                                                                    // Unhandled termination\n                                                                } else { revert(memory[0x00:0x00]); }\n                                                            } else if (!msg.value) {\n                                                                memory[0x00:0x20] = 0x0186a0;\n                                                                return memory[0x00:0x20];\n                                                            } else { revert(memory[0x00:0x00]); }\n                                                        } else if (!msg.value) {\n                                                            memory[0x00:0x20] = storage[0x00];\n                                                            return memory[0x00:0x20];\n                                                        } else { revert(memory[0x00:0x00]); }\n                                                    } else if (!msg.value) {\n                                                        memory[0x0140:0x0160] = 0x08c379a0;\n                                                        memory[0x0160:0x0180] = 0x20;\n                                                        memory[0x0180:0x01a0] = 0x0a;\n                                                        memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                                                    \n                                                        if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                                                    \n                                                        memory[0x01e0:0x0200] = 0x08c379a0;\n                                                        memory[0x0200:0x0220] = 0x20;\n                                                        memory[0x0220:0x0240] = 0x0f;\n                                                        memory[0x0240:0x0260] = 0x496e206c6f636b75702070686173650000000000000000000000000000000000;\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x01fc:0x0280]); }\n                                                    \n                                                        memory[0x0280:0x02a0] = 0x08c379a0;\n                                                        memory[0x02a0:0x02c0] = 0x20;\n                                                        memory[0x02c0:0x02e0] = 0x1a;\n                                                        memory[0x02e0:0x0300] = 0x6561726c6965737444656c657465206e6f742072656163686564000000000000;\n                                                    \n                                                        if (block.timestamp < storage[0x02]) { revert(memory[0x029c:0x0320]); }\n                                                    \n                                                        if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0340:0x0360] = 0x70a08231;\n                                                        memory[0x0360:0x0380] = address(this);\n                                                        var temp0;\n                                                        temp0, memory[0x03c0:0x03e0] = address(storage[0x00]).staticcall.gas(msg.gas)(memory[0x035c:0x0380]);\n                                                    \n                                                        if (!temp0) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0320:0x0340] = memory[0x03c0:0x03e0];\n                                                    \n                                                        if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0400:0x0420] = 0xa9059cbb;\n                                                        memory[0x0420:0x0440] = storage[0x01];\n                                                        memory[0x0440:0x0460] = memory[0x0320:0x0340];\n                                                        var temp1;\n                                                        temp1, memory[0x04a0:0x04c0] = address(storage[0x00]).call.gas(msg.gas)(memory[0x041c:0x0460]);\n                                                    \n                                                        if (!temp1) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x03e0:0x0400] = memory[0x04a0:0x04c0];\n                                                        memory[0x04c0:0x04e0] = 0x08c379a0;\n                                                        memory[0x04e0:0x0500] = 0x20;\n                                                        memory[0x0500:0x0520] = 0x0f;\n                                                        memory[0x0520:0x0540] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n                                                    \n                                                        if (memory[0x03e0:0x0400]) { selfdestruct(storage[0x01]); }\n                                                        else { revert(memory[0x04dc:0x0560]); }\n                                                    } else { revert(memory[0x00:0x00]); }\n                                                } else if (!msg.value) {\n                                                    memory[0xc0:0xe0] = 0x0b;\n                                                    var temp2 = !storage[keccak256(memory[0xc0:0xe0]) + 0x01];\n                                                    memory[0xe0:0x0100] = msg.sender;\n                                                    memory[0xc0:0xe0] = 0x06;\n                                                    memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                \n                                                    if (!((storage[keccak256(memory[0xc0:0xe0]) + 0x01] < storage[0x0a]) | temp2)) {\n                                                    label_3E34:\n                                                    \n                                                        if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0180:0x01a0] = 0xa9059cbb;\n                                                        memory[0x01a0:0x01c0] = msg.sender;\n                                                        memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n                                                        var temp3;\n                                                        temp3, memory[0x0220:0x0240] = address(storage[0x00]).call.gas(msg.gas)(memory[0x019c:0x01e0]);\n                                                    \n                                                        if (!temp3) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0160:0x0180] = memory[0x0220:0x0240];\n                                                        memory[0x0240:0x0260] = 0x08c379a0;\n                                                        memory[0x0260:0x0280] = 0x20;\n                                                        memory[0x0280:0x02a0] = 0x0f;\n                                                        memory[0x02a0:0x02c0] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n                                                    \n                                                        if (!memory[0x0160:0x0180]) { revert(memory[0x025c:0x02e0]); }\n                                                    \n                                                        memory[0x00:0x20] = memory[0x0140:0x0160];\n                                                        return memory[0x00:0x20];\n                                                    } else {\n                                                        var0 = 0x0140;\n                                                        var temp4 = memory[var0:var0 + 0x20];\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x06;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                    \n                                                        if (memory[var0:var0 + 0x20] + storage[keccak256(memory[0xc0:0xe0])] < temp4) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x06;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                        var temp5 = var0;\n                                                        memory[temp5:temp5 + 0x20] = memory[temp5:temp5 + 0x20] + storage[keccak256(memory[0xc0:0xe0])];\n                                                        memory[0xe0:0x0100] = msg.sender;\n                                                        memory[0xc0:0xe0] = 0x06;\n                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                        var temp6 = keccak256(memory[0xc0:0xe0]);\n                                                        storage[temp6] = 0x00;\n                                                        storage[temp6 + 0x01] = 0x00;\n                                                        goto label_3E34;\n                                                    }\n                                                } else { revert(memory[0x00:0x00]); }\n                                            } else if (!msg.value) {\n                                                memory[0xe0:0x0100] = msg.sender;\n                                                memory[0xc0:0xe0] = 0x07;\n                                                memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                var0 = memory[0x0140:0x0160];\n                                                var1 = memory[0x0160:0x0180];\n                                                memory[0x01a0:0x01c0] = 0xce96fe20;\n                                                memory[0x01c0:0x01e0] = msg.sender;\n                                                var var2 = memory[0x01c0:0x01e0];\n                                                var var3 = 0x06;\n                                                // Unhandled termination\n                                            } else { revert(memory[0x00:0x00]); }\n                                        } else if (!msg.value) {\n                                            var0 = msg.data[0x24:0x44];\n                                        \n                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0x0140:0x0160] = 0x08c379a0;\n                                            memory[0x0160:0x0180] = 0x20;\n                                            memory[0x0180:0x01a0] = 0x0f;\n                                            memory[0x01a0:0x01c0] = 0x4e6f742063757272656e74204149440000000000000000000000000000000000;\n                                        \n                                            if (msg.data[0x04:0x24] != storage[0x0a]) { revert(memory[0x015c:0x01e0]); }\n                                        \n                                            memory[0x0220:0x0240] = 0x08c379a0;\n                                            memory[0x0240:0x0260] = 0x20;\n                                            memory[0x0260:0x0280] = 0x14;\n                                            memory[0x0280:0x02a0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                                            var0 = memory[0x0140:0x0160];\n                                            var1 = memory[0x0160:0x0180];\n                                            var2 = memory[0x0180:0x01a0];\n                                            var3 = memory[0x01a0:0x01c0];\n                                            var var4 = memory[0x01c0:0x01e0];\n                                            var var5 = 0x06;\n                                            // Unhandled termination\n                                        } else { revert(memory[0x00:0x00]); }\n                                    } else if (!msg.value) {\n                                        memory[0x01a0:0x01c0] = 0x08c379a0;\n                                        memory[0x01c0:0x01e0] = 0x20;\n                                        memory[0x01e0:0x0200] = 0x1d;\n                                        memory[0x0200:0x0220] = 0x42696464696e67207068617365206f6620414944206e6f74206f766572000000;\n                                        memory[0xe0:0x0100] = msg.sender;\n                                        memory[0xc0:0xe0] = 0x09;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = storage[keccak256(memory[0xc0:0xe0]) + 0x02] < storage[0x0a];\n                                        var1 = memory[0x0140:0x0160];\n                                        var2 = 0x06;\n                                        // Unhandled termination\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    memory[0x0140:0x0160] = 0x08c379a0;\n                                    memory[0x0160:0x0180] = 0x20;\n                                    memory[0x0180:0x01a0] = 0x13;\n                                    memory[0x01a0:0x01c0] = 0x4e6f742063757272656e742061756374696f6e00000000000000000000000000;\n                                \n                                    if (msg.data[0x04:0x24] != storage[0x0a]) { revert(memory[0x015c:0x01e0]); }\n                                \n                                    memory[0x0220:0x0240] = 0x08c379a0;\n                                    memory[0x0240:0x0260] = 0x20;\n                                    memory[0x0260:0x0280] = 0x14;\n                                    memory[0x0280:0x02a0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                                    var0 = memory[0x0140:0x0160];\n                                    var1 = memory[0x0160:0x0180];\n                                    var2 = memory[0x0180:0x01a0];\n                                    var3 = memory[0x01a0:0x01c0];\n                                    var4 = memory[0x01c0:0x01e0];\n                                    var5 = 0x06;\n                                    // Unhandled termination\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                memory[0x0140:0x0160] = 0x08c379a0;\n                                memory[0x0160:0x0180] = 0x20;\n                                memory[0x0180:0x01a0] = 0x2e;\n                                memory[0x01a0:0x01c0] = 0x41756374696f6e206e6f742066696e616c6973656420796574206f72206e6f20;\n                                memory[0x01c0:0x01e0] = 0x61756374696f6e20746f20656e64000000000000000000000000000000000000;\n                                memory[0xc0:0xe0] = 0x0b;\n                            \n                                if (storage[keccak256(memory[0xc0:0xe0])] <= 0x00) { revert(memory[0x015c:0x0200]); }\n                            \n                                memory[0x0200:0x0220] = 0x08c379a0;\n                                memory[0x0220:0x0240] = 0x20;\n                                memory[0x0240:0x0260] = 0x0f;\n                                memory[0x0260:0x0280] = 0x4c6f636b7570206e6f74206f7665720000000000000000000000000000000000;\n                                memory[0xc0:0xe0] = 0x0b;\n                            \n                                if (block.number < storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x021c:0x02a0]); }\n                            \n                                memory[0xc0:0xe0] = 0x0b;\n                                memory[0x02a0:0x02c0] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                memory[0x02c0:0x02e0] = storage[0x0d];\n                                var0 = 0x0c;\n                            \n                                if (!memory[0x02a0:0x02c0]) {\n                                    var1 = 0x00;\n                                \n                                    if (storage[var0] >= var1) { goto label_2737; }\n                                    else { revert(memory[0x00:0x00]); }\n                                } else if ((memory[0x02a0:0x02c0] * memory[0x02c0:0x02e0]) / memory[0x02a0:0x02c0] == memory[0x02c0:0x02e0]) {\n                                    if (storage[var0] < memory[0x02a0:0x02c0] * memory[0x02c0:0x02e0]) { revert(memory[0x00:0x00]); }\n                                \n                                label_2737:\n                                \n                                    if (!memory[0x02a0:0x02c0]) {\n                                        var1 = 0x00;\n                                        var temp24 = var0;\n                                        storage[temp24] = storage[temp24] - var1;\n                                    \n                                        if (block.timestamp + 0x4f1a00 >= block.timestamp) { goto label_2786; }\n                                        else { revert(memory[0x00:0x00]); }\n                                    } else if ((memory[0x02a0:0x02c0] * memory[0x02c0:0x02e0]) / memory[0x02a0:0x02c0] == memory[0x02c0:0x02e0]) {\n                                        var temp7 = var0;\n                                        storage[temp7] = storage[temp7] - memory[0x02a0:0x02c0] * memory[0x02c0:0x02e0];\n                                    \n                                        if (block.timestamp + 0x4f1a00 < block.timestamp) { revert(memory[0x00:0x00]); }\n                                    \n                                    label_2786:\n                                        storage[0x02] = block.timestamp + 0x4f1a00;\n                                        var0 = 0x0300;\n                                        memory[var0:var0 + 0x20] = 0x00;\n                                        var1 = 0x012c;\n                                        var2 = memory[0x0300:0x0320];\n                                    \n                                        if (var2 >= 0x012c) { revert(memory[0x00:0x00]); }\n                                    \n                                    label_27AE:\n                                        memory[0xc0:0xe0] = 0x04;\n                                        memory[0x02e0:0x0300] = storage[keccak256(memory[0xc0:0xe0]) + var2];\n                                    \n                                        if (!memory[0x02e0:0x0300]) { goto label_28F7; }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        var2 = keccak256(memory[0xc0:0x0100]);\n                                        var3 = storage[var2];\n                                        memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                        memory[0xc0:0xe0] = 0x03;\n                                    \n                                        if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                            var temp8 = memory[0x02c0:0x02e0];\n                                            memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            var temp9 = storage[keccak256(memory[0xc0:0x0100])];\n                                            var temp10 = memory[0x02c0:0x02e0];\n                                            memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if ((storage[keccak256(memory[0xc0:0x0100])] * temp10) / temp9 != temp8) { revert(memory[0x00:0x00]); }\n                                        \n                                            var temp11 = memory[0x02c0:0x02e0];\n                                            memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            var4 = storage[keccak256(memory[0xc0:0x0100])] * temp11;\n                                        \n                                        label_284F:\n                                        \n                                            if (storage[var2] + var4 < var3) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                            memory[0xc0:0xe0] = 0x03;\n                                        \n                                            if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                                var temp12 = memory[0x02c0:0x02e0];\n                                                memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var temp13 = storage[keccak256(memory[0xc0:0x0100])];\n                                                var temp14 = memory[0x02c0:0x02e0];\n                                                memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                                memory[0xc0:0xe0] = 0x03;\n                                            \n                                                if ((storage[keccak256(memory[0xc0:0x0100])] * temp14) / temp13 != temp12) { revert(memory[0x00:0x00]); }\n                                            \n                                                var temp15 = memory[0x02c0:0x02e0];\n                                                memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                var temp16 = var2;\n                                                storage[temp16] = storage[temp16] + storage[keccak256(memory[0xc0:0x0100])] * temp15;\n                                                memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                var temp17 = var0;\n                                                var temp18 = memory[temp17:temp17 + 0x20] + 0x01;\n                                                memory[temp17:temp17 + 0x20] = temp18;\n                                            \n                                                if (var1 != temp18) {\n                                                label_279C:\n                                                    var2 = memory[0x0300:0x0320];\n                                                \n                                                    if (var2 < 0x012c) { goto label_27AE; }\n                                                    else { revert(memory[0x00:0x00]); }\n                                                } else {\n                                                label_28F7:\n                                                    memory[0xc0:0xe0] = 0x04;\n                                                    var temp19 = keccak256(memory[0xc0:0xe0]);\n                                                    storage[temp19] = 0x00;\n                                                    storage[temp19 + 0x01] = 0x00;\n                                                    storage[temp19 + 0x02] = 0x00;\n                                                    storage[temp19 + 0x03] = 0x00;\n                                                    storage[temp19 + 0x04] = 0x00;\n                                                    storage[temp19 + 0x05] = 0x00;\n                                                    storage[temp19 + 0x06] = 0x00;\n                                                    storage[temp19 + 0x07] = 0x00;\n                                                    storage[temp19 + 0x08] = 0x00;\n                                                    storage[temp19 + 0x09] = 0x00;\n                                                    storage[temp19 + 0x0a] = 0x00;\n                                                    storage[temp19 + 0x0b] = 0x00;\n                                                    storage[temp19 + 0x0c] = 0x00;\n                                                    storage[temp19 + 0x0d] = 0x00;\n                                                    storage[temp19 + 0x0e] = 0x00;\n                                                    storage[temp19 + 0x0f] = 0x00;\n                                                    storage[temp19 + 0x10] = 0x00;\n                                                    storage[temp19 + 0x11] = 0x00;\n                                                    storage[temp19 + 0x12] = 0x00;\n                                                    storage[temp19 + 0x13] = 0x00;\n                                                    storage[temp19 + 0x14] = 0x00;\n                                                    storage[temp19 + 0x15] = 0x00;\n                                                    storage[temp19 + 0x16] = 0x00;\n                                                    storage[temp19 + 0x17] = 0x00;\n                                                    storage[temp19 + 0x18] = 0x00;\n                                                    storage[temp19 + 0x19] = 0x00;\n                                                    storage[temp19 + 0x1a] = 0x00;\n                                                    storage[temp19 + 0x1b] = 0x00;\n                                                    storage[temp19 + 0x1c] = 0x00;\n                                                    storage[temp19 + 0x1d] = 0x00;\n                                                    storage[temp19 + 0x1e] = 0x00;\n                                                    storage[temp19 + 0x1f] = 0x00;\n                                                    storage[temp19 + 0x20] = 0x00;\n                                                    storage[temp19 + 0x21] = 0x00;\n                                                    storage[temp19 + 0x22] = 0x00;\n                                                    storage[temp19 + 0x23] = 0x00;\n                                                    storage[temp19 + 0x24] = 0x00;\n                                                    storage[temp19 + 0x25] = 0x00;\n                                                    storage[temp19 + 0x26] = 0x00;\n                                                    storage[temp19 + 0x27] = 0x00;\n                                                    storage[temp19 + 0x28] = 0x00;\n                                                    storage[temp19 + 0x29] = 0x00;\n                                                    storage[temp19 + 0x2a] = 0x00;\n                                                    storage[temp19 + 0x2b] = 0x00;\n                                                    storage[temp19 + 0x2c] = 0x00;\n                                                    storage[temp19 + 0x2d] = 0x00;\n                                                    storage[temp19 + 0x2e] = 0x00;\n                                                    storage[temp19 + 0x2f] = 0x00;\n                                                    storage[temp19 + 0x30] = 0x00;\n                                                    storage[temp19 + 0x31] = 0x00;\n                                                    storage[temp19 + 0x32] = 0x00;\n                                                    storage[temp19 + 0x33] = 0x00;\n                                                    storage[temp19 + 0x34] = 0x00;\n                                                    storage[temp19 + 0x35] = 0x00;\n                                                    storage[temp19 + 0x36] = 0x00;\n                                                    storage[temp19 + 0x37] = 0x00;\n                                                    storage[temp19 + 0x38] = 0x00;\n                                                    storage[temp19 + 0x39] = 0x00;\n                                                    storage[temp19 + 0x3a] = 0x00;\n                                                    storage[temp19 + 0x3b] = 0x00;\n                                                    storage[temp19 + 0x3c] = 0x00;\n                                                    storage[temp19 + 0x3d] = 0x00;\n                                                    storage[temp19 + 0x3e] = 0x00;\n                                                    storage[temp19 + 0x3f] = 0x00;\n                                                    storage[temp19 + 0x40] = 0x00;\n                                                    storage[temp19 + 0x41] = 0x00;\n                                                    storage[temp19 + 0x42] = 0x00;\n                                                    storage[temp19 + 0x43] = 0x00;\n                                                    storage[temp19 + 0x44] = 0x00;\n                                                    storage[temp19 + 0x45] = 0x00;\n                                                    storage[temp19 + 0x46] = 0x00;\n                                                    storage[temp19 + 0x47] = 0x00;\n                                                    storage[temp19 + 0x48] = 0x00;\n                                                    storage[temp19 + 0x49] = 0x00;\n                                                    storage[temp19 + 0x4a] = 0x00;\n                                                    storage[temp19 + 0x4b] = 0x00;\n                                                    storage[temp19 + 0x4c] = 0x00;\n                                                    storage[temp19 + 0x4d] = 0x00;\n                                                    storage[temp19 + 0x4e] = 0x00;\n                                                    storage[temp19 + 0x4f] = 0x00;\n                                                    storage[temp19 + 0x50] = 0x00;\n                                                    storage[temp19 + 0x51] = 0x00;\n                                                    storage[temp19 + 0x52] = 0x00;\n                                                    storage[temp19 + 0x53] = 0x00;\n                                                    storage[temp19 + 0x54] = 0x00;\n                                                    storage[temp19 + 0x55] = 0x00;\n                                                    storage[temp19 + 0x56] = 0x00;\n                                                    storage[temp19 + 0x57] = 0x00;\n                                                    storage[temp19 + 0x58] = 0x00;\n                                                    storage[temp19 + 0x59] = 0x00;\n                                                    storage[temp19 + 0x5a] = 0x00;\n                                                    storage[temp19 + 0x5b] = 0x00;\n                                                    storage[temp19 + 0x5c] = 0x00;\n                                                    storage[temp19 + 0x5d] = 0x00;\n                                                    storage[temp19 + 0x5e] = 0x00;\n                                                    storage[temp19 + 0x5f] = 0x00;\n                                                    storage[temp19 + 0x60] = 0x00;\n                                                    storage[temp19 + 0x61] = 0x00;\n                                                    storage[temp19 + 0x62] = 0x00;\n                                                    storage[temp19 + 0x63] = 0x00;\n                                                    storage[temp19 + 0x64] = 0x00;\n                                                    storage[temp19 + 0x65] = 0x00;\n                                                    storage[temp19 + 0x66] = 0x00;\n                                                    storage[temp19 + 0x67] = 0x00;\n                                                    storage[temp19 + 0x68] = 0x00;\n                                                    storage[temp19 + 0x69] = 0x00;\n                                                    storage[temp19 + 0x6a] = 0x00;\n                                                    storage[temp19 + 0x6b] = 0x00;\n                                                    storage[temp19 + 0x6c] = 0x00;\n                                                    storage[temp19 + 0x6d] = 0x00;\n                                                    storage[temp19 + 0x6e] = 0x00;\n                                                    storage[temp19 + 0x6f] = 0x00;\n                                                    storage[temp19 + 0x70] = 0x00;\n                                                    storage[temp19 + 0x71] = 0x00;\n                                                    storage[temp19 + 0x72] = 0x00;\n                                                    storage[temp19 + 0x73] = 0x00;\n                                                    storage[temp19 + 0x74] = 0x00;\n                                                    storage[temp19 + 0x75] = 0x00;\n                                                    storage[temp19 + 0x76] = 0x00;\n                                                    storage[temp19 + 0x77] = 0x00;\n                                                    storage[temp19 + 0x78] = 0x00;\n                                                    storage[temp19 + 0x79] = 0x00;\n                                                    storage[temp19 + 0x7a] = 0x00;\n                                                    storage[temp19 + 0x7b] = 0x00;\n                                                    storage[temp19 + 0x7c] = 0x00;\n                                                    storage[temp19 + 0x7d] = 0x00;\n                                                    storage[temp19 + 0x7e] = 0x00;\n                                                    storage[temp19 + 0x7f] = 0x00;\n                                                    storage[temp19 + 0x80] = 0x00;\n                                                    storage[temp19 + 0x81] = 0x00;\n                                                    storage[temp19 + 0x82] = 0x00;\n                                                    storage[temp19 + 0x83] = 0x00;\n                                                    storage[temp19 + 0x84] = 0x00;\n                                                    storage[temp19 + 0x85] = 0x00;\n                                                    storage[temp19 + 0x86] = 0x00;\n                                                    storage[temp19 + 0x87] = 0x00;\n                                                    storage[temp19 + 0x88] = 0x00;\n                                                    storage[temp19 + 0x89] = 0x00;\n                                                    storage[temp19 + 0x8a] = 0x00;\n                                                    storage[temp19 + 0x8b] = 0x00;\n                                                    storage[temp19 + 0x8c] = 0x00;\n                                                    storage[temp19 + 0x8d] = 0x00;\n                                                    storage[temp19 + 0x8e] = 0x00;\n                                                    storage[temp19 + 0x8f] = 0x00;\n                                                    storage[temp19 + 0x90] = 0x00;\n                                                    storage[temp19 + 0x91] = 0x00;\n                                                    storage[temp19 + 0x92] = 0x00;\n                                                    storage[temp19 + 0x93] = 0x00;\n                                                    storage[temp19 + 0x94] = 0x00;\n                                                    storage[temp19 + 0x95] = 0x00;\n                                                    storage[temp19 + 0x96] = 0x00;\n                                                    storage[temp19 + 0x97] = 0x00;\n                                                    storage[temp19 + 0x98] = 0x00;\n                                                    storage[temp19 + 0x99] = 0x00;\n                                                    storage[temp19 + 0x9a] = 0x00;\n                                                    storage[temp19 + 0x9b] = 0x00;\n                                                    storage[temp19 + 0x9c] = 0x00;\n                                                    storage[temp19 + 0x9d] = 0x00;\n                                                    storage[temp19 + 0x9e] = 0x00;\n                                                    storage[temp19 + 0x9f] = 0x00;\n                                                    storage[temp19 + 0xa0] = 0x00;\n                                                    storage[temp19 + 0xa1] = 0x00;\n                                                    storage[temp19 + 0xa2] = 0x00;\n                                                    storage[temp19 + 0xa3] = 0x00;\n                                                    storage[temp19 + 0xa4] = 0x00;\n                                                    storage[temp19 + 0xa5] = 0x00;\n                                                    storage[temp19 + 0xa6] = 0x00;\n                                                    storage[temp19 + 0xa7] = 0x00;\n                                                    storage[temp19 + 0xa8] = 0x00;\n                                                    storage[temp19 + 0xa9] = 0x00;\n                                                    storage[temp19 + 0xaa] = 0x00;\n                                                    storage[temp19 + 0xab] = 0x00;\n                                                    storage[temp19 + 0xac] = 0x00;\n                                                    storage[temp19 + 0xad] = 0x00;\n                                                    storage[temp19 + 0xae] = 0x00;\n                                                    storage[temp19 + 0xaf] = 0x00;\n                                                    storage[temp19 + 0xb0] = 0x00;\n                                                    storage[temp19 + 0xb1] = 0x00;\n                                                    storage[temp19 + 0xb2] = 0x00;\n                                                    storage[temp19 + 0xb3] = 0x00;\n                                                    storage[temp19 + 0xb4] = 0x00;\n                                                    storage[temp19 + 0xb5] = 0x00;\n                                                    storage[temp19 + 0xb6] = 0x00;\n                                                    storage[temp19 + 0xb7] = 0x00;\n                                                    storage[temp19 + 0xb8] = 0x00;\n                                                    storage[temp19 + 0xb9] = 0x00;\n                                                    storage[temp19 + 0xba] = 0x00;\n                                                    storage[temp19 + 0xbb] = 0x00;\n                                                    storage[temp19 + 0xbc] = 0x00;\n                                                    storage[temp19 + 0xbd] = 0x00;\n                                                    storage[temp19 + 0xbe] = 0x00;\n                                                    storage[temp19 + 0xbf] = 0x00;\n                                                    storage[temp19 + 0xc0] = 0x00;\n                                                    storage[temp19 + 0xc1] = 0x00;\n                                                    storage[temp19 + 0xc2] = 0x00;\n                                                    storage[temp19 + 0xc3] = 0x00;\n                                                    storage[temp19 + 0xc4] = 0x00;\n                                                    storage[temp19 + 0xc5] = 0x00;\n                                                    storage[temp19 + 0xc6] = 0x00;\n                                                    storage[temp19 + 0xc7] = 0x00;\n                                                    storage[temp19 + 0xc8] = 0x00;\n                                                    storage[temp19 + 0xc9] = 0x00;\n                                                    storage[temp19 + 0xca] = 0x00;\n                                                    storage[temp19 + 0xcb] = 0x00;\n                                                    storage[temp19 + 0xcc] = 0x00;\n                                                    storage[temp19 + 0xcd] = 0x00;\n                                                    storage[temp19 + 0xce] = 0x00;\n                                                    storage[temp19 + 0xcf] = 0x00;\n                                                    storage[temp19 + 0xd0] = 0x00;\n                                                    storage[temp19 + 0xd1] = 0x00;\n                                                    storage[temp19 + 0xd2] = 0x00;\n                                                    storage[temp19 + 0xd3] = 0x00;\n                                                    storage[temp19 + 0xd4] = 0x00;\n                                                    storage[temp19 + 0xd5] = 0x00;\n                                                    storage[temp19 + 0xd6] = 0x00;\n                                                    storage[temp19 + 0xd7] = 0x00;\n                                                    storage[temp19 + 0xd8] = 0x00;\n                                                    storage[temp19 + 0xd9] = 0x00;\n                                                    storage[temp19 + 0xda] = 0x00;\n                                                    storage[temp19 + 0xdb] = 0x00;\n                                                    storage[temp19 + 0xdc] = 0x00;\n                                                    storage[temp19 + 0xdd] = 0x00;\n                                                    storage[temp19 + 0xde] = 0x00;\n                                                    storage[temp19 + 0xdf] = 0x00;\n                                                    storage[temp19 + 0xe0] = 0x00;\n                                                    storage[temp19 + 0xe1] = 0x00;\n                                                    storage[temp19 + 0xe2] = 0x00;\n                                                    storage[temp19 + 0xe3] = 0x00;\n                                                    storage[temp19 + 0xe4] = 0x00;\n                                                    storage[temp19 + 0xe5] = 0x00;\n                                                    storage[temp19 + 0xe6] = 0x00;\n                                                    storage[temp19 + 0xe7] = 0x00;\n                                                    storage[temp19 + 0xe8] = 0x00;\n                                                    storage[temp19 + 0xe9] = 0x00;\n                                                    storage[temp19 + 0xea] = 0x00;\n                                                    storage[temp19 + 0xeb] = 0x00;\n                                                    storage[temp19 + 0xec] = 0x00;\n                                                    storage[temp19 + 0xed] = 0x00;\n                                                    storage[temp19 + 0xee] = 0x00;\n                                                    storage[temp19 + 0xef] = 0x00;\n                                                    storage[temp19 + 0xf0] = 0x00;\n                                                    storage[temp19 + 0xf1] = 0x00;\n                                                    storage[temp19 + 0xf2] = 0x00;\n                                                    storage[temp19 + 0xf3] = 0x00;\n                                                    storage[temp19 + 0xf4] = 0x00;\n                                                    storage[temp19 + 0xf5] = 0x00;\n                                                    storage[temp19 + 0xf6] = 0x00;\n                                                    storage[temp19 + 0xf7] = 0x00;\n                                                    storage[temp19 + 0xf8] = 0x00;\n                                                    storage[temp19 + 0xf9] = 0x00;\n                                                    storage[temp19 + 0xfa] = 0x00;\n                                                    storage[temp19 + 0xfb] = 0x00;\n                                                    storage[temp19 + 0xfc] = 0x00;\n                                                    storage[temp19 + 0xfd] = 0x00;\n                                                    storage[temp19 + 0xfe] = 0x00;\n                                                    storage[temp19 + 0xff] = 0x00;\n                                                    storage[temp19 + 0x0100] = 0x00;\n                                                    storage[temp19 + 0x0101] = 0x00;\n                                                    storage[temp19 + 0x0102] = 0x00;\n                                                    storage[temp19 + 0x0103] = 0x00;\n                                                    storage[temp19 + 0x0104] = 0x00;\n                                                    storage[temp19 + 0x0105] = 0x00;\n                                                    storage[temp19 + 0x0106] = 0x00;\n                                                    storage[temp19 + 0x0107] = 0x00;\n                                                    storage[temp19 + 0x0108] = 0x00;\n                                                    storage[temp19 + 0x0109] = 0x00;\n                                                    storage[temp19 + 0x010a] = 0x00;\n                                                    storage[temp19 + 0x010b] = 0x00;\n                                                    storage[temp19 + 0x010c] = 0x00;\n                                                    storage[temp19 + 0x010d] = 0x00;\n                                                    storage[temp19 + 0x010e] = 0x00;\n                                                    storage[temp19 + 0x010f] = 0x00;\n                                                    storage[temp19 + 0x0110] = 0x00;\n                                                    storage[temp19 + 0x0111] = 0x00;\n                                                    storage[temp19 + 0x0112] = 0x00;\n                                                    storage[temp19 + 0x0113] = 0x00;\n                                                    storage[temp19 + 0x0114] = 0x00;\n                                                    storage[temp19 + 0x0115] = 0x00;\n                                                    storage[temp19 + 0x0116] = 0x00;\n                                                    storage[temp19 + 0x0117] = 0x00;\n                                                    storage[temp19 + 0x0118] = 0x00;\n                                                    storage[temp19 + 0x0119] = 0x00;\n                                                    storage[temp19 + 0x011a] = 0x00;\n                                                    storage[temp19 + 0x011b] = 0x00;\n                                                    storage[temp19 + 0x011c] = 0x00;\n                                                    storage[temp19 + 0x011d] = 0x00;\n                                                    storage[temp19 + 0x011e] = 0x00;\n                                                    storage[temp19 + 0x011f] = 0x00;\n                                                    storage[temp19 + 0x0120] = 0x00;\n                                                    storage[temp19 + 0x0121] = 0x00;\n                                                    storage[temp19 + 0x0122] = 0x00;\n                                                    storage[temp19 + 0x0123] = 0x00;\n                                                    storage[temp19 + 0x0124] = 0x00;\n                                                    storage[temp19 + 0x0125] = 0x00;\n                                                    storage[temp19 + 0x0126] = 0x00;\n                                                    storage[temp19 + 0x0127] = 0x00;\n                                                    storage[temp19 + 0x0128] = 0x00;\n                                                    storage[temp19 + 0x0129] = 0x00;\n                                                    storage[temp19 + 0x012a] = 0x00;\n                                                    storage[temp19 + 0x012b] = 0x00;\n                                                    memory[0xc0:0xe0] = 0x0b;\n                                                    var temp20 = keccak256(memory[0xc0:0xe0]);\n                                                    storage[temp20] = 0x00;\n                                                    storage[temp20 + 0x01] = 0x00;\n                                                    storage[temp20 + 0x02] = 0x00;\n                                                    storage[temp20 + 0x03] = 0x00;\n                                                    storage[temp20 + 0x04] = 0x00;\n                                                    storage[temp20 + 0x05] = 0x00;\n                                                    storage[temp20 + 0x06] = 0x00;\n                                                    storage[temp20 + 0x07] = 0x00;\n                                                    storage[temp20 + 0x08] = 0x00;\n                                                    storage[temp20 + 0x09] = 0x00;\n                                                    storage[0x0d] = 0x00;\n                                                    memory[0x0320:0x0340] = storage[0x0a];\n                                                    log(memory[0x0320:0x0340], [0x893cdbbcaf3dd1e2014d91d0db208a57dd1344fcb1751d1691b668ec58489271]);\n                                                    stop();\n                                                }\n                                            } else {\n                                                var3 = 0x00;\n                                                var temp21 = var2;\n                                                storage[temp21] = storage[temp21] + var3;\n                                                memory[0xe0:0x0100] = memory[0x02e0:0x0300];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                var temp22 = var0;\n                                                var temp23 = memory[temp22:temp22 + 0x20] + 0x01;\n                                                memory[temp22:temp22 + 0x20] = temp23;\n                                            \n                                                if (var1 != temp23) { goto label_279C; }\n                                                else { goto label_28F7; }\n                                            }\n                                        } else {\n                                            var4 = 0x00;\n                                            goto label_284F;\n                                        }\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else { revert(memory[0x00:0x00]); }\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            var0 = memory[0x0140:0x0160];\n                            var1 = 0x06;\n                            // Unhandled termination\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0x0160:0x0180] = 0x08c379a0;\n                        memory[0x0180:0x01a0] = 0x20;\n                        memory[0x01a0:0x01c0] = 0x14;\n                        memory[0x01c0:0x01e0] = 0x4e6f7420696e2062696464696e67207068617365000000000000000000000000;\n                        var0 = 0x06;\n                        // Unhandled termination\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                \n                    memory[0x0140:0x0160] = 0x08c379a0;\n                    memory[0x0160:0x0180] = 0x20;\n                    memory[0x0180:0x01a0] = 0x0a;\n                    memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n                \n                    if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n                \n                    memory[0x01e0:0x0200] = 0x08c379a0;\n                    memory[0x0200:0x0220] = 0x20;\n                    memory[0x0220:0x0240] = 0x10;\n                    memory[0x0240:0x0260] = 0x4e6f7468696e6720746f2061626f727400000000000000000000000000000000;\n                    memory[0xc0:0xe0] = 0x0b;\n                \n                    if (storage[keccak256(memory[0xc0:0xe0]) + 0x01] <= 0x00) { revert(memory[0x01fc:0x0280]); }\n                \n                    memory[0xc0:0xe0] = 0x0b;\n                    memory[0x02c0:0x02e0] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                \n                    if (!msg.data[0x04:0x24]) {\n                        var0 = 0x03c0;\n                        memory[var0:var0 + 0x20] = 0x00;\n                        var1 = 0x012c;\n                        var2 = memory[0x03c0:0x03e0];\n                    \n                        if (var2 >= 0x012c) { revert(memory[0x00:0x00]); }\n                    \n                    label_0FA5:\n                        memory[0xc0:0xe0] = 0x04;\n                        memory[0x0280:0x02a0] = storage[keccak256(memory[0xc0:0xe0]) + var2];\n                    \n                        if (!memory[0x0280:0x02a0]) { goto label_10F7; }\n                    \n                        if (!msg.data[0x04:0x24]) {\n                        label_10D2:\n                            memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                            memory[0xc0:0xe0] = 0x03;\n                            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                            var temp25 = var0;\n                            var temp26 = memory[temp25:temp25 + 0x20] + 0x01;\n                            memory[temp25:temp25 + 0x20] = temp26;\n                        \n                            if (var1 != temp26) {\n                                var2 = memory[0x03c0:0x03e0];\n                            \n                                if (var2 < 0x012c) { goto label_0FA5; }\n                                else { revert(memory[0x00:0x00]); }\n                            } else {\n                            label_10F7:\n                                memory[0xc0:0xe0] = 0x04;\n                                var temp27 = keccak256(memory[0xc0:0xe0]);\n                                storage[temp27] = 0x00;\n                                storage[temp27 + 0x01] = 0x00;\n                                storage[temp27 + 0x02] = 0x00;\n                                storage[temp27 + 0x03] = 0x00;\n                                storage[temp27 + 0x04] = 0x00;\n                                storage[temp27 + 0x05] = 0x00;\n                                storage[temp27 + 0x06] = 0x00;\n                                storage[temp27 + 0x07] = 0x00;\n                                storage[temp27 + 0x08] = 0x00;\n                                storage[temp27 + 0x09] = 0x00;\n                                storage[temp27 + 0x0a] = 0x00;\n                                storage[temp27 + 0x0b] = 0x00;\n                                storage[temp27 + 0x0c] = 0x00;\n                                storage[temp27 + 0x0d] = 0x00;\n                                storage[temp27 + 0x0e] = 0x00;\n                                storage[temp27 + 0x0f] = 0x00;\n                                storage[temp27 + 0x10] = 0x00;\n                                storage[temp27 + 0x11] = 0x00;\n                                storage[temp27 + 0x12] = 0x00;\n                                storage[temp27 + 0x13] = 0x00;\n                                storage[temp27 + 0x14] = 0x00;\n                                storage[temp27 + 0x15] = 0x00;\n                                storage[temp27 + 0x16] = 0x00;\n                                storage[temp27 + 0x17] = 0x00;\n                                storage[temp27 + 0x18] = 0x00;\n                                storage[temp27 + 0x19] = 0x00;\n                                storage[temp27 + 0x1a] = 0x00;\n                                storage[temp27 + 0x1b] = 0x00;\n                                storage[temp27 + 0x1c] = 0x00;\n                                storage[temp27 + 0x1d] = 0x00;\n                                storage[temp27 + 0x1e] = 0x00;\n                                storage[temp27 + 0x1f] = 0x00;\n                                storage[temp27 + 0x20] = 0x00;\n                                storage[temp27 + 0x21] = 0x00;\n                                storage[temp27 + 0x22] = 0x00;\n                                storage[temp27 + 0x23] = 0x00;\n                                storage[temp27 + 0x24] = 0x00;\n                                storage[temp27 + 0x25] = 0x00;\n                                storage[temp27 + 0x26] = 0x00;\n                                storage[temp27 + 0x27] = 0x00;\n                                storage[temp27 + 0x28] = 0x00;\n                                storage[temp27 + 0x29] = 0x00;\n                                storage[temp27 + 0x2a] = 0x00;\n                                storage[temp27 + 0x2b] = 0x00;\n                                storage[temp27 + 0x2c] = 0x00;\n                                storage[temp27 + 0x2d] = 0x00;\n                                storage[temp27 + 0x2e] = 0x00;\n                                storage[temp27 + 0x2f] = 0x00;\n                                storage[temp27 + 0x30] = 0x00;\n                                storage[temp27 + 0x31] = 0x00;\n                                storage[temp27 + 0x32] = 0x00;\n                                storage[temp27 + 0x33] = 0x00;\n                                storage[temp27 + 0x34] = 0x00;\n                                storage[temp27 + 0x35] = 0x00;\n                                storage[temp27 + 0x36] = 0x00;\n                                storage[temp27 + 0x37] = 0x00;\n                                storage[temp27 + 0x38] = 0x00;\n                                storage[temp27 + 0x39] = 0x00;\n                                storage[temp27 + 0x3a] = 0x00;\n                                storage[temp27 + 0x3b] = 0x00;\n                                storage[temp27 + 0x3c] = 0x00;\n                                storage[temp27 + 0x3d] = 0x00;\n                                storage[temp27 + 0x3e] = 0x00;\n                                storage[temp27 + 0x3f] = 0x00;\n                                storage[temp27 + 0x40] = 0x00;\n                                storage[temp27 + 0x41] = 0x00;\n                                storage[temp27 + 0x42] = 0x00;\n                                storage[temp27 + 0x43] = 0x00;\n                                storage[temp27 + 0x44] = 0x00;\n                                storage[temp27 + 0x45] = 0x00;\n                                storage[temp27 + 0x46] = 0x00;\n                                storage[temp27 + 0x47] = 0x00;\n                                storage[temp27 + 0x48] = 0x00;\n                                storage[temp27 + 0x49] = 0x00;\n                                storage[temp27 + 0x4a] = 0x00;\n                                storage[temp27 + 0x4b] = 0x00;\n                                storage[temp27 + 0x4c] = 0x00;\n                                storage[temp27 + 0x4d] = 0x00;\n                                storage[temp27 + 0x4e] = 0x00;\n                                storage[temp27 + 0x4f] = 0x00;\n                                storage[temp27 + 0x50] = 0x00;\n                                storage[temp27 + 0x51] = 0x00;\n                                storage[temp27 + 0x52] = 0x00;\n                                storage[temp27 + 0x53] = 0x00;\n                                storage[temp27 + 0x54] = 0x00;\n                                storage[temp27 + 0x55] = 0x00;\n                                storage[temp27 + 0x56] = 0x00;\n                                storage[temp27 + 0x57] = 0x00;\n                                storage[temp27 + 0x58] = 0x00;\n                                storage[temp27 + 0x59] = 0x00;\n                                storage[temp27 + 0x5a] = 0x00;\n                                storage[temp27 + 0x5b] = 0x00;\n                                storage[temp27 + 0x5c] = 0x00;\n                                storage[temp27 + 0x5d] = 0x00;\n                                storage[temp27 + 0x5e] = 0x00;\n                                storage[temp27 + 0x5f] = 0x00;\n                                storage[temp27 + 0x60] = 0x00;\n                                storage[temp27 + 0x61] = 0x00;\n                                storage[temp27 + 0x62] = 0x00;\n                                storage[temp27 + 0x63] = 0x00;\n                                storage[temp27 + 0x64] = 0x00;\n                                storage[temp27 + 0x65] = 0x00;\n                                storage[temp27 + 0x66] = 0x00;\n                                storage[temp27 + 0x67] = 0x00;\n                                storage[temp27 + 0x68] = 0x00;\n                                storage[temp27 + 0x69] = 0x00;\n                                storage[temp27 + 0x6a] = 0x00;\n                                storage[temp27 + 0x6b] = 0x00;\n                                storage[temp27 + 0x6c] = 0x00;\n                                storage[temp27 + 0x6d] = 0x00;\n                                storage[temp27 + 0x6e] = 0x00;\n                                storage[temp27 + 0x6f] = 0x00;\n                                storage[temp27 + 0x70] = 0x00;\n                                storage[temp27 + 0x71] = 0x00;\n                                storage[temp27 + 0x72] = 0x00;\n                                storage[temp27 + 0x73] = 0x00;\n                                storage[temp27 + 0x74] = 0x00;\n                                storage[temp27 + 0x75] = 0x00;\n                                storage[temp27 + 0x76] = 0x00;\n                                storage[temp27 + 0x77] = 0x00;\n                                storage[temp27 + 0x78] = 0x00;\n                                storage[temp27 + 0x79] = 0x00;\n                                storage[temp27 + 0x7a] = 0x00;\n                                storage[temp27 + 0x7b] = 0x00;\n                                storage[temp27 + 0x7c] = 0x00;\n                                storage[temp27 + 0x7d] = 0x00;\n                                storage[temp27 + 0x7e] = 0x00;\n                                storage[temp27 + 0x7f] = 0x00;\n                                storage[temp27 + 0x80] = 0x00;\n                                storage[temp27 + 0x81] = 0x00;\n                                storage[temp27 + 0x82] = 0x00;\n                                storage[temp27 + 0x83] = 0x00;\n                                storage[temp27 + 0x84] = 0x00;\n                                storage[temp27 + 0x85] = 0x00;\n                                storage[temp27 + 0x86] = 0x00;\n                                storage[temp27 + 0x87] = 0x00;\n                                storage[temp27 + 0x88] = 0x00;\n                                storage[temp27 + 0x89] = 0x00;\n                                storage[temp27 + 0x8a] = 0x00;\n                                storage[temp27 + 0x8b] = 0x00;\n                                storage[temp27 + 0x8c] = 0x00;\n                                storage[temp27 + 0x8d] = 0x00;\n                                storage[temp27 + 0x8e] = 0x00;\n                                storage[temp27 + 0x8f] = 0x00;\n                                storage[temp27 + 0x90] = 0x00;\n                                storage[temp27 + 0x91] = 0x00;\n                                storage[temp27 + 0x92] = 0x00;\n                                storage[temp27 + 0x93] = 0x00;\n                                storage[temp27 + 0x94] = 0x00;\n                                storage[temp27 + 0x95] = 0x00;\n                                storage[temp27 + 0x96] = 0x00;\n                                storage[temp27 + 0x97] = 0x00;\n                                storage[temp27 + 0x98] = 0x00;\n                                storage[temp27 + 0x99] = 0x00;\n                                storage[temp27 + 0x9a] = 0x00;\n                                storage[temp27 + 0x9b] = 0x00;\n                                storage[temp27 + 0x9c] = 0x00;\n                                storage[temp27 + 0x9d] = 0x00;\n                                storage[temp27 + 0x9e] = 0x00;\n                                storage[temp27 + 0x9f] = 0x00;\n                                storage[temp27 + 0xa0] = 0x00;\n                                storage[temp27 + 0xa1] = 0x00;\n                                storage[temp27 + 0xa2] = 0x00;\n                                storage[temp27 + 0xa3] = 0x00;\n                                storage[temp27 + 0xa4] = 0x00;\n                                storage[temp27 + 0xa5] = 0x00;\n                                storage[temp27 + 0xa6] = 0x00;\n                                storage[temp27 + 0xa7] = 0x00;\n                                storage[temp27 + 0xa8] = 0x00;\n                                storage[temp27 + 0xa9] = 0x00;\n                                storage[temp27 + 0xaa] = 0x00;\n                                storage[temp27 + 0xab] = 0x00;\n                                storage[temp27 + 0xac] = 0x00;\n                                storage[temp27 + 0xad] = 0x00;\n                                storage[temp27 + 0xae] = 0x00;\n                                storage[temp27 + 0xaf] = 0x00;\n                                storage[temp27 + 0xb0] = 0x00;\n                                storage[temp27 + 0xb1] = 0x00;\n                                storage[temp27 + 0xb2] = 0x00;\n                                storage[temp27 + 0xb3] = 0x00;\n                                storage[temp27 + 0xb4] = 0x00;\n                                storage[temp27 + 0xb5] = 0x00;\n                                storage[temp27 + 0xb6] = 0x00;\n                                storage[temp27 + 0xb7] = 0x00;\n                                storage[temp27 + 0xb8] = 0x00;\n                                storage[temp27 + 0xb9] = 0x00;\n                                storage[temp27 + 0xba] = 0x00;\n                                storage[temp27 + 0xbb] = 0x00;\n                                storage[temp27 + 0xbc] = 0x00;\n                                storage[temp27 + 0xbd] = 0x00;\n                                storage[temp27 + 0xbe] = 0x00;\n                                storage[temp27 + 0xbf] = 0x00;\n                                storage[temp27 + 0xc0] = 0x00;\n                                storage[temp27 + 0xc1] = 0x00;\n                                storage[temp27 + 0xc2] = 0x00;\n                                storage[temp27 + 0xc3] = 0x00;\n                                storage[temp27 + 0xc4] = 0x00;\n                                storage[temp27 + 0xc5] = 0x00;\n                                storage[temp27 + 0xc6] = 0x00;\n                                storage[temp27 + 0xc7] = 0x00;\n                                storage[temp27 + 0xc8] = 0x00;\n                                storage[temp27 + 0xc9] = 0x00;\n                                storage[temp27 + 0xca] = 0x00;\n                                storage[temp27 + 0xcb] = 0x00;\n                                storage[temp27 + 0xcc] = 0x00;\n                                storage[temp27 + 0xcd] = 0x00;\n                                storage[temp27 + 0xce] = 0x00;\n                                storage[temp27 + 0xcf] = 0x00;\n                                storage[temp27 + 0xd0] = 0x00;\n                                storage[temp27 + 0xd1] = 0x00;\n                                storage[temp27 + 0xd2] = 0x00;\n                                storage[temp27 + 0xd3] = 0x00;\n                                storage[temp27 + 0xd4] = 0x00;\n                                storage[temp27 + 0xd5] = 0x00;\n                                storage[temp27 + 0xd6] = 0x00;\n                                storage[temp27 + 0xd7] = 0x00;\n                                storage[temp27 + 0xd8] = 0x00;\n                                storage[temp27 + 0xd9] = 0x00;\n                                storage[temp27 + 0xda] = 0x00;\n                                storage[temp27 + 0xdb] = 0x00;\n                                storage[temp27 + 0xdc] = 0x00;\n                                storage[temp27 + 0xdd] = 0x00;\n                                storage[temp27 + 0xde] = 0x00;\n                                storage[temp27 + 0xdf] = 0x00;\n                                storage[temp27 + 0xe0] = 0x00;\n                                storage[temp27 + 0xe1] = 0x00;\n                                storage[temp27 + 0xe2] = 0x00;\n                                storage[temp27 + 0xe3] = 0x00;\n                                storage[temp27 + 0xe4] = 0x00;\n                                storage[temp27 + 0xe5] = 0x00;\n                                storage[temp27 + 0xe6] = 0x00;\n                                storage[temp27 + 0xe7] = 0x00;\n                                storage[temp27 + 0xe8] = 0x00;\n                                storage[temp27 + 0xe9] = 0x00;\n                                storage[temp27 + 0xea] = 0x00;\n                                storage[temp27 + 0xeb] = 0x00;\n                                storage[temp27 + 0xec] = 0x00;\n                                storage[temp27 + 0xed] = 0x00;\n                                storage[temp27 + 0xee] = 0x00;\n                                storage[temp27 + 0xef] = 0x00;\n                                storage[temp27 + 0xf0] = 0x00;\n                                storage[temp27 + 0xf1] = 0x00;\n                                storage[temp27 + 0xf2] = 0x00;\n                                storage[temp27 + 0xf3] = 0x00;\n                                storage[temp27 + 0xf4] = 0x00;\n                                storage[temp27 + 0xf5] = 0x00;\n                                storage[temp27 + 0xf6] = 0x00;\n                                storage[temp27 + 0xf7] = 0x00;\n                                storage[temp27 + 0xf8] = 0x00;\n                                storage[temp27 + 0xf9] = 0x00;\n                                storage[temp27 + 0xfa] = 0x00;\n                                storage[temp27 + 0xfb] = 0x00;\n                                storage[temp27 + 0xfc] = 0x00;\n                                storage[temp27 + 0xfd] = 0x00;\n                                storage[temp27 + 0xfe] = 0x00;\n                                storage[temp27 + 0xff] = 0x00;\n                                storage[temp27 + 0x0100] = 0x00;\n                                storage[temp27 + 0x0101] = 0x00;\n                                storage[temp27 + 0x0102] = 0x00;\n                                storage[temp27 + 0x0103] = 0x00;\n                                storage[temp27 + 0x0104] = 0x00;\n                                storage[temp27 + 0x0105] = 0x00;\n                                storage[temp27 + 0x0106] = 0x00;\n                                storage[temp27 + 0x0107] = 0x00;\n                                storage[temp27 + 0x0108] = 0x00;\n                                storage[temp27 + 0x0109] = 0x00;\n                                storage[temp27 + 0x010a] = 0x00;\n                                storage[temp27 + 0x010b] = 0x00;\n                                storage[temp27 + 0x010c] = 0x00;\n                                storage[temp27 + 0x010d] = 0x00;\n                                storage[temp27 + 0x010e] = 0x00;\n                                storage[temp27 + 0x010f] = 0x00;\n                                storage[temp27 + 0x0110] = 0x00;\n                                storage[temp27 + 0x0111] = 0x00;\n                                storage[temp27 + 0x0112] = 0x00;\n                                storage[temp27 + 0x0113] = 0x00;\n                                storage[temp27 + 0x0114] = 0x00;\n                                storage[temp27 + 0x0115] = 0x00;\n                                storage[temp27 + 0x0116] = 0x00;\n                                storage[temp27 + 0x0117] = 0x00;\n                                storage[temp27 + 0x0118] = 0x00;\n                                storage[temp27 + 0x0119] = 0x00;\n                                storage[temp27 + 0x011a] = 0x00;\n                                storage[temp27 + 0x011b] = 0x00;\n                                storage[temp27 + 0x011c] = 0x00;\n                                storage[temp27 + 0x011d] = 0x00;\n                                storage[temp27 + 0x011e] = 0x00;\n                                storage[temp27 + 0x011f] = 0x00;\n                                storage[temp27 + 0x0120] = 0x00;\n                                storage[temp27 + 0x0121] = 0x00;\n                                storage[temp27 + 0x0122] = 0x00;\n                                storage[temp27 + 0x0123] = 0x00;\n                                storage[temp27 + 0x0124] = 0x00;\n                                storage[temp27 + 0x0125] = 0x00;\n                                storage[temp27 + 0x0126] = 0x00;\n                                storage[temp27 + 0x0127] = 0x00;\n                                storage[temp27 + 0x0128] = 0x00;\n                                storage[temp27 + 0x0129] = 0x00;\n                                storage[temp27 + 0x012a] = 0x00;\n                                storage[temp27 + 0x012b] = 0x00;\n                                memory[0xc0:0xe0] = 0x0b;\n                                var temp28 = keccak256(memory[0xc0:0xe0]);\n                                storage[temp28] = 0x00;\n                                storage[temp28 + 0x01] = 0x00;\n                                storage[temp28 + 0x02] = 0x00;\n                                storage[temp28 + 0x03] = 0x00;\n                                storage[temp28 + 0x04] = 0x00;\n                                storage[temp28 + 0x05] = 0x00;\n                                storage[temp28 + 0x06] = 0x00;\n                                storage[temp28 + 0x07] = 0x00;\n                                storage[temp28 + 0x08] = 0x00;\n                                storage[temp28 + 0x09] = 0x00;\n                                storage[0x0d] = 0x00;\n                                memory[0x03e0:0x0400] = storage[0x0a];\n                                memory[0x0400:0x0420] = msg.data[0x04:0x24];\n                                log(memory[0x03e0:0x0420], [0x7cf7d9a307304a7cf180a171a89e959717bfb63d9de5f33ee00674ea058e49]);\n                                stop();\n                            }\n                        } else {\n                            memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                            memory[0xc0:0xe0] = 0x07;\n                            var2 = keccak256(memory[0xc0:0x0100]);\n                            var3 = storage[var2];\n                            memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                            memory[0xc0:0xe0] = 0x03;\n                        \n                            if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                var temp29 = memory[0x02a0:0x02c0];\n                                memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                memory[0xc0:0xe0] = 0x03;\n                                var temp30 = storage[keccak256(memory[0xc0:0x0100])];\n                                var temp31 = memory[0x02a0:0x02c0];\n                                memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                memory[0xc0:0xe0] = 0x03;\n                            \n                                if ((storage[keccak256(memory[0xc0:0x0100])] * temp31) / temp30 != temp29) { revert(memory[0x00:0x00]); }\n                            \n                                var temp32 = memory[0x02a0:0x02c0];\n                                memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                memory[0xc0:0xe0] = 0x03;\n                                var4 = storage[keccak256(memory[0xc0:0x0100])] * temp32;\n                            \n                            label_104E:\n                            \n                                if (storage[var2] + var4 < var3) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                memory[0xc0:0xe0] = 0x03;\n                            \n                                if (storage[keccak256(memory[0xc0:0x0100])]) {\n                                    var temp33 = memory[0x02a0:0x02c0];\n                                    memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                    memory[0xc0:0xe0] = 0x03;\n                                    var temp34 = storage[keccak256(memory[0xc0:0x0100])];\n                                    var temp35 = memory[0x02a0:0x02c0];\n                                    memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                    memory[0xc0:0xe0] = 0x03;\n                                \n                                    if ((storage[keccak256(memory[0xc0:0x0100])] * temp35) / temp34 != temp33) { revert(memory[0x00:0x00]); }\n                                \n                                    var temp36 = memory[0x02a0:0x02c0];\n                                    memory[0xe0:0x0100] = memory[0x0280:0x02a0];\n                                    memory[0xc0:0xe0] = 0x03;\n                                    var3 = storage[keccak256(memory[0xc0:0x0100])] * temp36;\n                                \n                                label_10CB:\n                                    var temp37 = var2;\n                                    storage[temp37] = storage[temp37] + var3;\n                                    goto label_10D2;\n                                } else {\n                                    var3 = 0x00;\n                                    goto label_10CB;\n                                }\n                            } else {\n                                var4 = 0x00;\n                                goto label_104E;\n                            }\n                        }\n                    } else {\n                        memory[0x0320:0x0340] = 0x08c379a0;\n                        memory[0x0340:0x0360] = 0x20;\n                        memory[0x0360:0x0380] = 0x0d;\n                        memory[0x0380:0x03a0] = 0x4e6f742066696e616c6973656400000000000000000000000000000000000000;\n                        memory[0x02e0:0x0300] = 0x0140;\n                        var0 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                        memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                    \n                        if (memory[0x02e0:0x0300] >= 0x02e0) {\n                        label_0EB4:\n                            var1 = 0x06;\n                            // Unhandled termination\n                        } else {\n                        label_0EB0:\n                            var1 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                            memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                        \n                            if (memory[0x02e0:0x0300] >= 0x02e0) { goto label_0EB4; }\n                            else { goto label_0EB0; }\n                        }\n                    }\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0x0140:0x0160] = 0x08c379a0;\n                memory[0x0160:0x0180] = 0x20;\n                memory[0x0180:0x01a0] = 0x0a;\n                memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n            \n                if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n            \n                memory[0x0220:0x0240] = 0x08c379a0;\n                memory[0x0240:0x0260] = 0x20;\n                memory[0x0260:0x0280] = 0x10;\n                memory[0x0280:0x02a0] = 0x496e2062696464696e6720706861736500000000000000000000000000000000;\n                var0 = memory[0x0140:0x0160];\n                var1 = memory[0x0160:0x0180];\n                var2 = memory[0x0180:0x01a0];\n                var3 = memory[0x01a0:0x01c0];\n                var4 = memory[0x01c0:0x01e0];\n                var5 = 0x06;\n                // Unhandled termination\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x0140:0x0160] = 0x08c379a0;\n            memory[0x0160:0x0180] = 0x20;\n            memory[0x0180:0x01a0] = 0x0a;\n            memory[0x01a0:0x01c0] = 0x4f776e6572206f6e6c7900000000000000000000000000000000000000000000;\n        \n            if (msg.sender != storage[0x01]) { revert(memory[0x015c:0x01e0]); }\n        \n            memory[0x01e0:0x0200] = 0x08c379a0;\n            memory[0x0200:0x0220] = 0x20;\n            memory[0x0220:0x0240] = 0x12;\n            memory[0x0240:0x0260] = 0x496e76616c69642073746172745374616b650000000000000000000000000000;\n        \n            if (msg.data[0x24:0x44] <= msg.data[0x44:0x64]) { revert(memory[0x01fc:0x0280]); }\n        \n            memory[0x0280:0x02a0] = 0x08c379a0;\n            memory[0x02a0:0x02c0] = 0x20;\n            memory[0x02c0:0x02e0] = 0x12;\n            memory[0x02e0:0x0300] = 0x496e76616c6420736c6f74206e756d6265720000000000000000000000000000;\n        \n            if (!((msg.data[0xa4:0xc4] > 0x00) & (msg.data[0xa4:0xc4] <= 0x012c))) { revert(memory[0x029c:0x0320]); }\n        \n            memory[0x0320:0x0340] = 0x08c379a0;\n            memory[0x0340:0x0360] = 0x20;\n            memory[0x0360:0x0380] = 0x1a;\n            memory[0x0380:0x03a0] = 0x5374617274206265666f72652063757272656e7420626c6f636b000000000000;\n        \n            if (msg.data[0x04:0x24] < block.number) { revert(memory[0x033c:0x03c0]); }\n        \n            memory[0x03c0:0x03e0] = 0x08c379a0;\n            memory[0x03e0:0x0400] = 0x20;\n            memory[0x0400:0x0420] = 0x22;\n            memory[0x0420:0x0440] = 0x52657365727665207374616b652068617320746f206265206174206c65617374;\n            memory[0x0440:0x0460] = 0x2031000000000000000000000000000000000000000000000000000000000000;\n        \n            if (msg.data[0x44:0x64] <= 0x00) { revert(memory[0x03dc:0x0480]); }\n        \n            memory[0x0480:0x04a0] = 0x08c379a0;\n            memory[0x04a0:0x04c0] = 0x20;\n            memory[0x04c0:0x04e0] = 0x13;\n            memory[0x04e0:0x0500] = 0x456e642063757272656e742061756374696f6e00000000000000000000000000;\n            memory[0xc0:0xe0] = 0x0b;\n        \n            if (storage[keccak256(memory[0xc0:0xe0]) + 0x01]) { revert(memory[0x049c:0x0520]); }\n        \n            var0 = 0x0a;\n        \n            if (storage[var0] + 0x01 < storage[var0]) { revert(memory[0x00:0x00]); }\n        \n            var temp38 = var0;\n            storage[temp38] = storage[temp38] + 0x01;\n        \n            if (!msg.data[0x64:0x84]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x64:0x84];\n            var1 = 0x01;\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x24:0x44] - msg.data[0x44:0x64];\n            var3 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var3 < var2) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var2 < var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01;\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x24:0x44] - msg.data[0x44:0x64];\n            var3 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var3 < var2) { revert(memory[0x00:0x00]); }\n        \n            var2 = msg.data[0x64:0x84];\n        \n            if (msg.data[0x24:0x44] < msg.data[0x44:0x64]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0520:0x0540] = (msg.data[0x24:0x44] - msg.data[0x44:0x64] + var2) - var1 / var0;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24] + msg.data[0x64:0x84];\n            var1 = 0x19;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] + var1 < var0) { revert(memory[0x00:0x00]); }\n        \n            var0 = 0x19;\n        \n            if (msg.data[0x04:0x24] + msg.data[0x64:0x84] < msg.data[0x04:0x24]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0540:0x0560] = msg.data[0x04:0x24] + msg.data[0x64:0x84] + var0;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x03] = msg.data[0x04:0x24];\n            var temp39 = memory[0x0540:0x0560];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x04] = temp39;\n        \n            if (memory[0x0540:0x0560] + msg.data[0x84:0xa4] < memory[0x0540:0x0560]) { revert(memory[0x00:0x00]); }\n        \n            var temp40 = memory[0x0540:0x0560] + msg.data[0x84:0xa4];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x01] = temp40;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x05] = msg.data[0x24:0x44];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x06] = msg.data[0x44:0x64];\n            var temp41 = memory[0x0520:0x0540];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x07] = temp41;\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0]) + 0x08] = msg.data[0xa4:0xc4];\n            memory[0xc0:0xe0] = 0x0b;\n            storage[keccak256(memory[0xc0:0xe0])] = 0x00;\n            var0 = 0x0c;\n        \n            if (storage[var0] + msg.data[0xc4:0xe4] < storage[var0]) { revert(memory[0x00:0x00]); }\n        \n            var temp42 = var0;\n            storage[temp42] = storage[temp42] + msg.data[0xc4:0xe4];\n            memory[0xc0:0xe0] = 0x0b;\n        \n            if (!storage[keccak256(memory[0xc0:0xe0]) + 0x08]) { revert(memory[0x00:0x00]); }\n        \n            memory[0xc0:0xe0] = 0x0b;\n            storage[0x0d] = storage[0x0c] / storage[keccak256(memory[0xc0:0xe0]) + 0x08];\n        \n            if (!address(storage[0x00]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (!(address(this) ~ storage[0x00])) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0580:0x05a0] = 0x23b872dd;\n            memory[0x05a0:0x05c0] = msg.sender;\n            memory[0x05c0:0x05e0] = address(this);\n            memory[0x05e0:0x0600] = msg.data[0xc4:0xe4];\n            var temp43;\n            temp43, memory[0x0640:0x0660] = address(storage[0x00]).call.gas(msg.gas)(memory[0x059c:0x0600]);\n        \n            if (!temp43) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0560:0x0580] = memory[0x0640:0x0660];\n            memory[0x0660:0x0680] = 0x08c379a0;\n            memory[0x0680:0x06a0] = 0x20;\n            memory[0x06a0:0x06c0] = 0x0f;\n            memory[0x06c0:0x06e0] = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n        \n            if (!memory[0x0560:0x0580]) { revert(memory[0x067c:0x0700]); }\n        \n            memory[0x0700:0x0720] = storage[0x0a];\n            memory[0x0720:0x0740] = msg.data[0x04:0x24];\n            memory[0x0740:0x0760] = memory[0x0540:0x0560];\n        \n            if (memory[0x0540:0x0560] + msg.data[0x84:0xa4] < memory[0x0540:0x0560]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0760:0x0780] = memory[0x0540:0x0560] + msg.data[0x84:0xa4];\n            memory[0x0780:0x07a0] = msg.data[0x24:0x44];\n            memory[0x07a0:0x07c0] = msg.data[0x44:0x64];\n            memory[0x07c0:0x07e0] = memory[0x0520:0x0540];\n            memory[0x07e0:0x0800] = msg.data[0xa4:0xc4];\n            memory[0x0800:0x0820] = storage[0x0d];\n            log(memory[0x0700:0x0820], [0xede627ce4bced8a9b0a39e006c0a1d534d530222904131c567cc925f8090e972]);\n            stop();\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
	"status": "1",
	"time_cost": 77.38294172286987,
	"usage": {
		"completion_tokens": 705,
		"prompt_tokens": 28853,
		"total_tokens": 29558
	}
}