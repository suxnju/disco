{
	"address": "0x8a883a20940870dc055f2070ac8ec847ed2d9918",
	"input_format": "DecompiledCode",
	"ir": "# Palkeoramix decompiler. \n\nconst name = 'RatScam Round #1'\nconst symbol = ''\n\ndef storage:\n  stor0 is uint256 at storage 0\n  airDropPot_ is uint256 at storage 1\n  airDropTracker_ is uint256 at storage 2\n  pIDxAddr_ is mapping of uint256 at storage 3\n  pIDxName_ is mapping of uint256 at storage 4\n  plyr_ is mapping of struct at storage 5\n  plyrRnds_ is mapping of struct at storage 6\n  stor7 is mapping of uint8 at storage 7\n  stor8 is uint256 at storage 8\n  stor9 is uint256 at storage 9\n  stor10 is uint8 at storage 10\n  stor11 is uint256 at storage 11\n  stor12 is uint256 at storage 12\n  stor13 is uint256 at storage 13\n  stor14 is uint256 at storage 14\n  stor15 is uint256 at storage 15\n  fees_ is uint256 at storage 16\n  potSplit_ is uint256 at storage 17\n  activated_ is uint8 at storage 18\n\ndef pIDxAddr_(address _param1): # not payable\n  return pIDxAddr_[_param1]\n\ndef airDropTracker_(): # not payable\n  return airDropTracker_\n\ndef fees_(): # not payable\n  return fees_\n\ndef plyrNames_(uint256 _param1, bytes32 _param2): # not payable\n  return bool(stor7[_param1][_param2])\n\ndef pIDxName_(bytes32 _param1): # not payable\n  return pIDxName_[_param1]\n\ndef potSplit_(): # not payable\n  return potSplit_\n\ndef plyrRnds_(uint256 _param1): # not payable\n  return plyrRnds_[_param1].field_0, plyrRnds_[_param1].field_256, plyrRnds_[_param1].field_512\n\ndef activated_(): # not payable\n  return bool(activated_)\n\ndef airDropPot_(): # not payable\n  return airDropPot_\n\ndef plyr_(uint256 _param1): # not payable\n  return plyr_[_param1].field_0, \n         plyr_[_param1].field_256,\n         plyr_[_param1].field_512,\n         plyr_[_param1].field_768,\n         plyr_[_param1].field_1024,\n         plyr_[_param1].field_1280\n\n#\n#  Regular functions\n#\n\ndef round_(): # not payable\n  return stor8, stor9, bool(stor10), stor11, stor12, stor13, stor14, stor15\n\ndef activate(): # not payable\n  if 0xc14f8469d4bb31c8e69fae9c16e262f45edc3635 != caller:\n      revert with 0, 'only owner can activate'\n  if activated_:\n      revert with 0, 'ratscam already activated'\n  activated_ = 1\n  stor11 = block.timestamp - stor0\n  stor9 = block.timestamp + 3600\n\ndef getTimeLeft(): # not payable\n  if block.timestamp >= stor9:\n      return 0\n  if block.timestamp <= stor11 + stor0:\n      return (stor0 + stor11 - block.timestamp)\n  if block.timestamp > stor9:\n      revert with 0, 'SafeMath sub failed'\n  return (stor9 - block.timestamp)\n\ndef getCurrentRoundInfo(): # not payable\n  return stor12, \n         stor9,\n         stor11,\n         stor14,\n         stor8,\n         plyr_[stor8].field_0,\n         plyr_[stor8].field_256,\n         (1000 * airDropPot_) + airDropTracker_\n\ndef receivePlayerNameList(uint256 _pID, bytes32 _name): # not payable\n  if caller != 0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'only RatBook can call this function'\n  if not stor7[_pID][_name]:\n      stor7[_pID][_name] = 1\n\ndef receivePlayerInfo(uint256 _pID, address _addr, bytes32 _name, uint256 _laff): # not payable\n  if caller != 0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'only RatBook can call this function'\n  if _pID != pIDxAddr_[address(_addr)]:\n      pIDxAddr_[address(_addr)] = _pID\n  if _pID != pIDxName_[_name]:\n      pIDxName_[_name] = _pID\n  if plyr_[_pID].field_0 != _addr:\n      plyr_[_pID].field_0 = _addr\n  if _name != plyr_[_pID].field_256:\n      plyr_[_pID].field_256 = _name\n  if _laff != plyr_[_pID].field_1280:\n      plyr_[_pID].field_1280 = _laff\n  if not stor7[_pID][_name]:\n      stor7[_pID][_name] = 1\n\ndef getPlayerInfoByAddress(address _addr): # not payable\n  if not stor15:\n      if plyrRnds_[stor3[address(_addr)]].field_512 > 0:\n          revert with 0, 'SafeMath sub failed'\n      if -plyrRnds_[stor3[address(_addr)]].field_512 + plyr_[stor3[address(_addr)]].field_768 < plyr_[stor3[address(_addr)]].field_768:\n          revert with 0, 'SafeMath add failed'\n      return pIDxAddr_[address(_addr)], \n             plyr_[stor3[address(_addr)]].field_256,\n             plyrRnds_[stor3[address(_addr)]].field_256,\n             plyr_[stor3[address(_addr)]].field_512,\n             -plyrRnds_[stor3[address(_addr)]].field_512 + plyr_[stor3[address(_addr)]].field_768,\n             plyr_[stor3[address(_addr)]].field_1024,\n             plyrRnds_[stor3[address(_addr)]].field_0\n  if plyrRnds_[stor3[address(_addr)]].field_256 * stor15 / stor15 != plyrRnds_[stor3[address(_addr)]].field_256:\n      revert with 0, 'SafeMath mul failed'\n  if plyrRnds_[stor3[address(_addr)]].field_512 > plyrRnds_[stor3[address(_addr)]].field_256 * stor15 / 10^18:\n      revert with 0, 'SafeMath sub failed'\n  if (plyrRnds_[stor3[address(_addr)]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[address(_addr)]].field_512 + plyr_[stor3[address(_addr)]].field_768 < plyr_[stor3[address(_addr)]].field_768:\n      revert with 0, 'SafeMath add failed'\n  return pIDxAddr_[address(_addr)], \n         plyr_[stor3[address(_addr)]].field_256,\n         plyrRnds_[stor3[address(_addr)]].field_256,\n         plyr_[stor3[address(_addr)]].field_512,\n         (plyrRnds_[stor3[address(_addr)]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[address(_addr)]].field_512 + plyr_[stor3[address(_addr)]].field_768,\n         plyr_[stor3[address(_addr)]].field_1024,\n         plyrRnds_[stor3[address(_addr)]].field_0\n\ndef registerNameXID(string _nameString, uint256 _affCode, bool _all) payable: \n  mem[64] = ceil32(_nameString.length) + 128\n  mem[96] = _nameString.length\n  mem[128 len _nameString.length] = _nameString[all]\n  if ext_code.size(caller):\n      revert with 0, 'non smart contract address only'\n  if _nameString.length > 32:\n      revert with 0, 'string must be between 1 and 32 characters'\n  if _nameString.length <= 0:\n      revert with 0, 'string must be between 1 and 32 characters'\n  require 0 < _nameString.length\n  if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[128]):\n      revert with 0, 'string cannot start or end with space'\n  require _nameString.length - 1 < _nameString.length\n  if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[_nameString.length + 127]):\n      revert with 0, 'string cannot start or end with space'\n  require 0 < _nameString.length\n  if 0x3000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[128]):\n      require 1 < _nameString.length\n      if 0x7800000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[129]):\n          revert with 0, 'string cannot start with 0x'\n      require 1 < _nameString.length\n      if 0x5800000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[129]):\n          revert with 0, 'string cannot start with 0X'\n  idx = 0\n  s = 0\n  while idx < _nameString.length:\n      require idx < _nameString.length\n      require idx < _nameString.length\n      require idx < _nameString.length\n      if Mask(8, 248, mem[idx + 128]) <= 0x4000000000000000000000000000000000000000000000000000000000000000:\n          if Mask(8, 248, mem[idx + 128]) != 0x2000000000000000000000000000000000000000000000000000000000000000:\n              require idx < _nameString.length\n              if Mask(8, 248, mem[idx + 128]) <= 0x6000000000000000000000000000000000000000000000000000000000000000:\n                  if Mask(8, 248, mem[idx + 128]) <= 0x2f00000000000000000000000000000000000000000000000000000000000000:\n                      revert with 0, 'string contains invalid characters'\n                  require idx < _nameString.length\n                  if Mask(8, 248, mem[idx + 128]) >= 0x3a00000000000000000000000000000000000000000000000000000000000000:\n                      revert with 0, 'string contains invalid characters'\n              else:\n                  if Mask(8, 248, mem[idx + 128]) >= 0x7b00000000000000000000000000000000000000000000000000000000000000:\n                      require idx < _nameString.length\n                      if Mask(8, 248, mem[idx + 128]) <= 0x2f00000000000000000000000000000000000000000000000000000000000000:\n                          revert with 0, 'string contains invalid characters'\n                      require idx < _nameString.length\n                      if Mask(8, 248, mem[idx + 128]) >= 0x3a00000000000000000000000000000000000000000000000000000000000000:\n                          revert with 0, 'string contains invalid characters'\n          if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 128]):\n              require idx + 1 < _nameString.length\n              if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 129]):\n                  revert with 0, 'string cannot contain consecutive spaces'\n          if s:\n              idx = idx + 1\n              s = s\n              continue \n          require idx < _nameString.length\n          if Mask(8, 248, mem[idx + 128]) >= 0x3000000000000000000000000000000000000000000000000000000000000000:\n              require idx < _nameString.length\n              if Mask(8, 248, mem[idx + 128]) <= 0x3900000000000000000000000000000000000000000000000000000000000000:\n                  idx = idx + 1\n                  s = s\n                  continue \n      else:\n          require idx < _nameString.length\n          if Mask(8, 248, mem[idx + 128]) < 0x5b00000000000000000000000000000000000000000000000000000000000000:\n              mem[idx + 128 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 32, ('mem', ('range', ('add', 128, ('var', 0)), 1)))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 32, ('mem', ('range', ('add', 128, ('var', 0)), 1)))), 0) - 256\n              if s:\n                  idx = idx + 1\n                  s = s\n                  continue \n          else:\n              if Mask(8, 248, mem[idx + 128]) != 0x2000000000000000000000000000000000000000000000000000000000000000:\n                  require idx < _nameString.length\n                  if Mask(8, 248, mem[idx + 128]) <= 0x6000000000000000000000000000000000000000000000000000000000000000:\n                      if Mask(8, 248, mem[idx + 128]) <= 0x2f00000000000000000000000000000000000000000000000000000000000000:\n                          revert with 0, 'string contains invalid characters'\n                      require idx < _nameString.length\n                      if Mask(8, 248, mem[idx + 128]) >= 0x3a00000000000000000000000000000000000000000000000000000000000000:\n                          revert with 0, 'string contains invalid characters'\n                  else:\n                      if Mask(8, 248, mem[idx + 128]) >= 0x7b00000000000000000000000000000000000000000000000000000000000000:\n                          require idx < _nameString.length\n                          if Mask(8, 248, mem[idx + 128]) <= 0x2f00000000000000000000000000000000000000000000000000000000000000:\n                              revert with 0, 'string contains invalid characters'\n                          require idx < _nameString.length\n                          if Mask(8, 248, mem[idx + 128]) >= 0x3a00000000000000000000000000000000000000000000000000000000000000:\n                              revert with 0, 'string contains invalid characters'\n              if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 128]):\n                  require idx + 1 < _nameString.length\n                  if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 129]):\n                      revert with 0, 'string cannot contain consecutive spaces'\n              if s:\n                  idx = idx + 1\n                  s = s\n                  continue \n              require idx < _nameString.length\n              if Mask(8, 248, mem[idx + 128]) >= 0x3000000000000000000000000000000000000000000000000000000000000000:\n                  require idx < _nameString.length\n                  if Mask(8, 248, mem[idx + 128]) <= 0x3900000000000000000000000000000000000000000000000000000000000000:\n                      idx = idx + 1\n                      s = s\n                      continue \n      idx = idx + 1\n      s = 1\n      continue \n  if bool(s) != 1:\n      revert with 0, 'string cannot be only numbers'\n  require ext_code.size(0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf)\n  call 0x0089348bf4fb32c4cea21e4158b2d92ed9ee03cf.registerNameXIDFromDapp(address _addr, bytes32 _name, uint256 _affCode, bool _all) with:\n     value call.value wei\n       gas gas_remaining wei\n      args caller, mem[128], _affCode, _all\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  log onNewName(\n        uint256 playerID=bool(ext_call.return_data[0]),\n        address playerAddress=ext_call.return_data[32],\n        bytes32 playerName=plyr_[ext_call.return_data[32]].field_0,\n        bool isNewPlayer=plyr_[ext_call.return_data[32]].field_256,\n        uint256 affiliateID=call.value,\n        address affiliateAddress=block.timestamp,\n        bytes32 affiliateName=pIDxAddr_[caller],\n        uint256 amountPaid=caller,\n        uint256 timeStamp=mem[128])\n\ndef registerNameXname(string _nameString, bytes32 _affCode, bool _all) payable: \n  mem[64] = ceil32(_nameString.length) + 128\n  mem[96] = _nameString.length\n  mem[128 len _nameString.length] = _nameString[all]\n  if ext_code.size(caller):\n      revert with 0, 'non smart contract address only'\n  if _nameString.length > 32:\n      revert with 0, 'string must be between 1 and 32 characters'\n  if _nameString.length <= 0:\n      revert with 0, 'string must be between 1 and 32 characters'\n  require 0 < _nameString.length\n  if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[128]):\n      revert with 0, 'string cannot start or end with space'\n  require _nameString.length - 1 < _nameString.length\n  if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[_nameString.length + 127]):\n      revert with 0, 'string cannot start or end with space'\n  require 0 < _nameString.length\n  if 0x3000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[128]):\n      require 1 < _nameString.length\n      if 0x7800000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[129]):\n          revert with 0, 'string cannot start with 0x'\n      require 1 < _nameString.length\n      if 0x5800000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[129]):\n          revert with 0, 'string cannot start with 0X'\n  idx = 0\n  s = 0\n  while idx < _nameString.length:\n      require idx < _nameString.length\n      require idx < _nameString.length\n      require idx < _nameString.length\n      if Mask(8, 248, mem[idx + 128]) <= 0x4000000000000000000000000000000000000000000000000000000000000000:\n          if Mask(8, 248, mem[idx + 128]) != 0x2000000000000000000000000000000000000000000000000000000000000000:\n              require idx < _nameString.length\n              if Mask(8, 248, mem[idx + 128]) <= 0x6000000000000000000000000000000000000000000000000000000000000000:\n                  if Mask(8, 248, mem[idx + 128]) <= 0x2f00000000000000000000000000000000000000000000000000000000000000:\n                      revert with 0, 'string contains invalid characters'\n                  require idx < _nameString.length\n                  if Mask(8, 248, mem[idx + 128]) >= 0x3a00000000000000000000000000000000000000000000000000000000000000:\n                      revert with 0, 'string contains invalid characters'\n              else:\n                  if Mask(8, 248, mem[idx + 128]) >= 0x7b00000000000000000000000000000000000000000000000000000000000000:\n                      require idx < _nameString.length\n                      if Mask(8, 248, mem[idx + 128]) <= 0x2f00000000000000000000000000000000000000000000000000000000000000:\n                          revert with 0, 'string contains invalid characters'\n                      require idx < _nameString.length\n                      if Mask(8, 248, mem[idx + 128]) >= 0x3a00000000000000000000000000000000000000000000000000000000000000:\n                          revert with 0, 'string contains invalid characters'\n          if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 128]):\n              require idx + 1 < _nameString.length\n              if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 129]):\n                  revert with 0, 'string cannot contain consecutive spaces'\n          if s:\n              idx = idx + 1\n              s = s\n              continue \n          require idx < _nameString.length\n          if Mask(8, 248, mem[idx + 128]) >= 0x3000000000000000000000000000000000000000000000000000000000000000:\n              require idx < _nameString.length\n              if Mask(8, 248, mem[idx + 128]) <= 0x3900000000000000000000000000000000000000000000000000000000000000:\n                  idx = idx + 1\n                  s = s\n                  continue \n      else:\n          require idx < _nameString.length\n          if Mask(8, 248, mem[idx + 128]) < 0x5b00000000000000000000000000000000000000000000000000000000000000:\n              mem[idx + 128 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 32, ('mem', ('range', ('add', 128, ('var', 0)), 1)))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 32, ('mem', ('range', ('add', 128, ('var', 0)), 1)))), 0) - 256\n              if s:\n                  idx = idx + 1\n                  s = s\n                  continue \n          else:\n              if Mask(8, 248, mem[idx + 128]) != 0x2000000000000000000000000000000000000000000000000000000000000000:\n                  require idx < _nameString.length\n                  if Mask(8, 248, mem[idx + 128]) <= 0x6000000000000000000000000000000000000000000000000000000000000000:\n                      if Mask(8, 248, mem[idx + 128]) <= 0x2f00000000000000000000000000000000000000000000000000000000000000:\n                          revert with 0, 'string contains invalid characters'\n                      require idx < _nameString.length\n                      if Mask(8, 248, mem[idx + 128]) >= 0x3a00000000000000000000000000000000000000000000000000000000000000:\n                          revert with 0, 'string contains invalid characters'\n                  else:\n                      if Mask(8, 248, mem[idx + 128]) >= 0x7b00000000000000000000000000000000000000000000000000000000000000:\n                          require idx < _nameString.length\n                          if Mask(8, 248, mem[idx + 128]) <= 0x2f00000000000000000000000000000000000000000000000000000000000000:\n                              revert with 0, 'string contains invalid characters'\n                          require idx < _nameString.length\n                          if Mask(8, 248, mem[idx + 128]) >= 0x3a00000000000000000000000000000000000000000000000000000000000000:\n                              revert with 0, 'string contains invalid characters'\n              if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 128]):\n                  require idx + 1 < _nameString.length\n                  if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 129]):\n                      revert with 0, 'string cannot contain consecutive spaces'\n              if s:\n                  idx = idx + 1\n                  s = s\n                  continue \n              require idx < _nameString.length\n              if Mask(8, 248, mem[idx + 128]) >= 0x3000000000000000000000000000000000000000000000000000000000000000:\n                  require idx < _nameString.length\n                  if Mask(8, 248, mem[idx + 128]) <= 0x3900000000000000000000000000000000000000000000000000000000000000:\n                      idx = idx + 1\n                      s = s\n                      continue \n      idx = idx + 1\n      s = 1\n      continue \n  if bool(s) != 1:\n      revert with 0, 'string cannot be only numbers'\n  require ext_code.size(0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf)\n  call 0x0089348bf4fb32c4cea21e4158b2d92ed9ee03cf.registerNameXnameFromDapp(address _addr, bytes32 _name, bytes32 _affCode, bool _all) with:\n     value call.value wei\n       gas gas_remaining wei\n      args caller, mem[128], _affCode, _all\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  log onNewName(\n        uint256 playerID=bool(ext_call.return_data[0]),\n        address playerAddress=ext_call.return_data[32],\n        bytes32 playerName=plyr_[ext_call.return_data[32]].field_0,\n        bool isNewPlayer=plyr_[ext_call.return_data[32]].field_256,\n        uint256 affiliateID=call.value,\n        address affiliateAddress=block.timestamp,\n        bytes32 affiliateName=pIDxAddr_[caller],\n        uint256 amountPaid=caller,\n        uint256 timeStamp=mem[128])\n\ndef registerNameXaddr(string _nameString, address _affCode, bool _all) payable: \n  mem[64] = ceil32(_nameString.length) + 128\n  mem[96] = _nameString.length\n  mem[128 len _nameString.length] = _nameString[all]\n  if ext_code.size(caller):\n      revert with 0, 'non smart contract address only'\n  if _nameString.length > 32:\n      revert with 0, 'string must be between 1 and 32 characters'\n  if _nameString.length <= 0:\n      revert with 0, 'string must be between 1 and 32 characters'\n  require 0 < _nameString.length\n  if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[128]):\n      revert with 0, 'string cannot start or end with space'\n  require _nameString.length - 1 < _nameString.length\n  if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[_nameString.length + 127]):\n      revert with 0, 'string cannot start or end with space'\n  require 0 < _nameString.length\n  if 0x3000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[128]):\n      require 1 < _nameString.length\n      if 0x7800000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[129]):\n          revert with 0, 'string cannot start with 0x'\n      require 1 < _nameString.length\n      if 0x5800000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[129]):\n          revert with 0, 'string cannot start with 0X'\n  idx = 0\n  s = 0\n  while idx < _nameString.length:\n      require idx < _nameString.length\n      require idx < _nameString.length\n      require idx < _nameString.length\n      if Mask(8, 248, mem[idx + 128]) <= 0x4000000000000000000000000000000000000000000000000000000000000000:\n          if Mask(8, 248, mem[idx + 128]) != 0x2000000000000000000000000000000000000000000000000000000000000000:\n              require idx < _nameString.length\n              if Mask(8, 248, mem[idx + 128]) <= 0x6000000000000000000000000000000000000000000000000000000000000000:\n                  if Mask(8, 248, mem[idx + 128]) <= 0x2f00000000000000000000000000000000000000000000000000000000000000:\n                      revert with 0, 'string contains invalid characters'\n                  require idx < _nameString.length\n                  if Mask(8, 248, mem[idx + 128]) >= 0x3a00000000000000000000000000000000000000000000000000000000000000:\n                      revert with 0, 'string contains invalid characters'\n              else:\n                  if Mask(8, 248, mem[idx + 128]) >= 0x7b00000000000000000000000000000000000000000000000000000000000000:\n                      require idx < _nameString.length\n                      if Mask(8, 248, mem[idx + 128]) <= 0x2f00000000000000000000000000000000000000000000000000000000000000:\n                          revert with 0, 'string contains invalid characters'\n                      require idx < _nameString.length\n                      if Mask(8, 248, mem[idx + 128]) >= 0x3a00000000000000000000000000000000000000000000000000000000000000:\n                          revert with 0, 'string contains invalid characters'\n          if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 128]):\n              require idx + 1 < _nameString.length\n              if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 129]):\n                  revert with 0, 'string cannot contain consecutive spaces'\n          if s:\n              idx = idx + 1\n              s = s\n              continue \n          require idx < _nameString.length\n          if Mask(8, 248, mem[idx + 128]) >= 0x3000000000000000000000000000000000000000000000000000000000000000:\n              require idx < _nameString.length\n              if Mask(8, 248, mem[idx + 128]) <= 0x3900000000000000000000000000000000000000000000000000000000000000:\n                  idx = idx + 1\n                  s = s\n                  continue \n      else:\n          require idx < _nameString.length\n          if Mask(8, 248, mem[idx + 128]) < 0x5b00000000000000000000000000000000000000000000000000000000000000:\n              mem[idx + 128 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 32, ('mem', ('range', ('add', 128, ('var', 0)), 1)))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 32, ('mem', ('range', ('add', 128, ('var', 0)), 1)))), 0) - 256\n              if s:\n                  idx = idx + 1\n                  s = s\n                  continue \n          else:\n              if Mask(8, 248, mem[idx + 128]) != 0x2000000000000000000000000000000000000000000000000000000000000000:\n                  require idx < _nameString.length\n                  if Mask(8, 248, mem[idx + 128]) <= 0x6000000000000000000000000000000000000000000000000000000000000000:\n                      if Mask(8, 248, mem[idx + 128]) <= 0x2f00000000000000000000000000000000000000000000000000000000000000:\n                          revert with 0, 'string contains invalid characters'\n                      require idx < _nameString.length\n                      if Mask(8, 248, mem[idx + 128]) >= 0x3a00000000000000000000000000000000000000000000000000000000000000:\n                          revert with 0, 'string contains invalid characters'\n                  else:\n                      if Mask(8, 248, mem[idx + 128]) >= 0x7b00000000000000000000000000000000000000000000000000000000000000:\n                          require idx < _nameString.length\n                          if Mask(8, 248, mem[idx + 128]) <= 0x2f00000000000000000000000000000000000000000000000000000000000000:\n                              revert with 0, 'string contains invalid characters'\n                          require idx < _nameString.length\n                          if Mask(8, 248, mem[idx + 128]) >= 0x3a00000000000000000000000000000000000000000000000000000000000000:\n                              revert with 0, 'string contains invalid characters'\n              if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 128]):\n                  require idx + 1 < _nameString.length\n                  if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 129]):\n                      revert with 0, 'string cannot contain consecutive spaces'\n              if s:\n                  idx = idx + 1\n                  s = s\n                  continue \n              require idx < _nameString.length\n              if Mask(8, 248, mem[idx + 128]) >= 0x3000000000000000000000000000000000000000000000000000000000000000:\n                  require idx < _nameString.length\n                  if Mask(8, 248, mem[idx + 128]) <= 0x3900000000000000000000000000000000000000000000000000000000000000:\n                      idx = idx + 1\n                      s = s\n                      continue \n      idx = idx + 1\n      s = 1\n      continue \n  if bool(s) != 1:\n      revert with 0, 'string cannot be only numbers'\n  require ext_code.size(0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf)\n  call 0x0089348bf4fb32c4cea21e4158b2d92ed9ee03cf.registerNameXaddrFromDapp(address _addr, bytes32 _name, address _affCode, bool _all) with:\n     value call.value wei\n       gas gas_remaining wei\n      args caller, mem[128], address(_affCode), _all\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  log onNewName(\n        uint256 playerID=bool(ext_call.return_data[0]),\n        address playerAddress=ext_call.return_data[32],\n        bytes32 playerName=plyr_[ext_call.return_data[32]].field_0,\n        bool isNewPlayer=plyr_[ext_call.return_data[32]].field_256,\n        uint256 affiliateID=call.value,\n        address affiliateAddress=block.timestamp,\n        bytes32 affiliateName=pIDxAddr_[caller],\n        uint256 amountPaid=caller,\n        uint256 timeStamp=mem[128])\n\ndef calcKeysReceived(uint256 _eth): # not payable\n  if block.timestamp <= stor0 + stor11:\n      if not _eth:\n          s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000\n          t = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000\n          while s < t:\n              require s\n              if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:\n                  revert with 0, 'SafeMath add failed'\n              s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2\n              t = s\n              continue \n      else:\n          if 10^18 * _eth / _eth != 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if not 10^18 * _eth:\n              s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000\n              t = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000\n              while s < t:\n                  require s\n                  if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:\n                      revert with 0, 'SafeMath add failed'\n                  s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2\n                  t = s\n                  continue \n          else:\n              if 312500000000000000000000000 * 10^18 * _eth / 10^18 * _eth != 312500000 * 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              if (312500000000000000000000000 * 10^18 * _eth) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * _eth:\n                  revert with 0, 'SafeMath add failed'\n              s = (312500000000000000000000000 * 10^18 * _eth) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2\n              t = (312500000000000000000000000 * 10^18 * _eth) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000\n              while s < t:\n                  require s\n                  if s + ((312500000000000000000000000 * 10^18 * _eth) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < (312500000000000000000000000 * 10^18 * _eth) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:\n                      revert with 0, 'SafeMath add failed'\n                  s = s + ((312500000000000000000000000 * 10^18 * _eth) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2\n                  t = s\n                  continue \n      if 74999921875000 * 10^18 > t:\n          revert with 0, 'SafeMath sub failed'\n      return (t - 74999921875000 * 10^18 / 156250000)\n  if block.timestamp > stor9:\n      if stor8:\n          if not _eth:\n              s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000\n              t = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000\n              while s < t:\n                  require s\n                  if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:\n                      revert with 0, 'SafeMath add failed'\n                  s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2\n                  t = s\n                  continue \n          else:\n              if 10^18 * _eth / _eth != 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              if not 10^18 * _eth:\n                  s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000\n                  t = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000\n                  while s < t:\n                      require s\n                      if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:\n                          revert with 0, 'SafeMath add failed'\n                      s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2\n                      t = s\n                      continue \n              else:\n                  if 312500000000000000000000000 * 10^18 * _eth / 10^18 * _eth != 312500000 * 10^18:\n                      revert with 0, 'SafeMath mul failed'\n                  if (312500000000000000000000000 * 10^18 * _eth) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * _eth:\n                      revert with 0, 'SafeMath add failed'\n                  s = (312500000000000000000000000 * 10^18 * _eth) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2\n                  t = (312500000000000000000000000 * 10^18 * _eth) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000\n                  while s < t:\n                      require s\n                      if s + ((312500000000000000000000000 * 10^18 * _eth) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < (312500000000000000000000000 * 10^18 * _eth) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:\n                          revert with 0, 'SafeMath add failed'\n                      s = s + ((312500000000000000000000000 * 10^18 * _eth) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2\n                      t = s\n                      continue \n          if 74999921875000 * 10^18 > t:\n              revert with 0, 'SafeMath sub failed'\n          return (t - 74999921875000 * 10^18 / 156250000)\n  if not stor13:\n      s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000\n      t = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000\n      while s < t:\n          require s\n          if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:\n              revert with 0, 'SafeMath add failed'\n          s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2\n          t = s\n          continue \n  else:\n      if 10^18 * stor13 / stor13 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if not 10^18 * stor13:\n          s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000\n          t = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000\n          while s < t:\n              require s\n              if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:\n                  revert with 0, 'SafeMath add failed'\n              s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2\n              t = s\n              continue \n      else:\n          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n              revert with 0, 'SafeMath add failed'\n          s = (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2\n          t = (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000\n          while s < t:\n              require s\n              if s + ((312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:\n                  revert with 0, 'SafeMath add failed'\n              s = s + ((312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2\n              t = s\n              continue \n  if 74999921875000 * 10^18 > t:\n      revert with 0, 'SafeMath sub failed'\n  if _eth + stor13 < stor13:\n      revert with 0, 'SafeMath add failed'\n  if not _eth + stor13:\n      s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000\n      u = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000\n      while s < u:\n          require s\n          if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:\n              revert with 0, 'SafeMath add failed'\n          s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2\n          u = s\n          continue \n  else:\n      if (10^18 * _eth) + (10^18 * stor13) / _eth + stor13 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if not (10^18 * _eth) + (10^18 * stor13):\n          s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000\n          u = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000\n          while s < u:\n              require s\n              if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:\n                  revert with 0, 'SafeMath add failed'\n              s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2\n              u = s\n              continue \n      else:\n          if (312500000000000000000000000 * 10^18 * _eth) + (312500000000000000000000000 * 10^18 * stor13) / (10^18 * _eth) + (10^18 * stor13) != 312500000 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          s = (312500000000000000000000000 * 10^18 * _eth) + (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2\n          u = (312500000000000000000000000 * 10^18 * _eth) + (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000\n          while s < u:\n              require s\n              if s + ((312500000000000000000000000 * 10^18 * _eth) + (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < (312500000000000000000000000 * 10^18 * _eth) + (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:\n                  revert with 0, 'SafeMath add failed'\n              s = s + ((312500000000000000000000000 * 10^18 * _eth) + (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2\n              u = s\n              continue \n  if 74999921875000 * 10^18 > u:\n      revert with 0, 'SafeMath sub failed'\n  if t - 74999921875000 * 10^18 / 156250000 > u - 74999921875000 * 10^18 / 156250000:\n      revert with 0, 'SafeMath sub failed'\n  return ((u - 74999921875000 * 10^18 / 156250000) - (t - 74999921875000 * 10^18 / 156250000))\n\ndef getBuyPrice(): # not payable\n  if block.timestamp <= stor0 + stor11:\n      return 75 * 10^12\n  if block.timestamp > stor9:\n      if stor8:\n          return 75 * 10^12\n  if stor12 + 10^18 < stor12:\n      revert with 0, 'SafeMath add failed'\n  if 10^18 > stor12 + 10^18:\n      revert with 0, 'SafeMath sub failed'\n  if not stor12:\n      if not stor12:\n          if not stor12 + 10^18:\n              if not stor12 + 10^18:\n                  return 0\n              if (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18 / stor12 + 10^18 != stor12 + 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              if (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              if 0 > (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18)\n          if (10^18 * stor12) + 1000000000000000000 * 10^18 / stor12 + 10^18 != 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 149999843750000 != (10^18 * stor12) + 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if not stor12 + 10^18:\n              if (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if 0 > (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18)\n          if (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18 / stor12 + 10^18 != stor12 + 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if 0 > ((149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18)\n      if stor12 * stor12 / stor12 != stor12:\n          revert with 0, 'SafeMath mul failed'\n      if 78125000 * stor12 * stor12 / 78125000 != stor12 * stor12:\n          revert with 0, 'SafeMath mul failed'\n      if 78125000 * stor12 * stor12 < 78125000 * stor12 * stor12:\n          revert with 0, 'SafeMath add failed'\n      if not stor12 + 10^18:\n          if not stor12 + 10^18:\n              if 78125000 * stor12 * stor12 / 1000000000000000000 * 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              return -(78125000 * stor12 * stor12 / 1000000000000000000 * 10^18)\n          if (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18 / stor12 + 10^18 != stor12 + 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * stor12 * stor12 / 1000000000000000000 * 10^18 > (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - (78125000 * stor12 * stor12 / 1000000000000000000 * 10^18))\n      if (10^18 * stor12) + 1000000000000000000 * 10^18 / stor12 + 10^18 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 149999843750000 != (10^18 * stor12) + 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if not stor12 + 10^18:\n          if (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if 78125000 * stor12 * stor12 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18) - (78125000 * stor12 * stor12 / 1000000000000000000 * 10^18))\n      if (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18 / stor12 + 10^18 != stor12 + 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if 78125000 * stor12 * stor12 / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return ((((149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - (78125000 * stor12 * stor12 / 1000000000000000000 * 10^18))\n  if 10^18 * stor12 / stor12 != 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if 149999843750000 * 10^18 * stor12 / 149999843750000 != 10^18 * stor12:\n      revert with 0, 'SafeMath mul failed'\n  if not stor12:\n      if 149999843750000 * 10^18 * stor12 / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if not stor12 + 10^18:\n          if not stor12 + 10^18:\n              if 149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              return -(149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18)\n          if (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18 / stor12 + 10^18 != stor12 + 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if 149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18 > (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18))\n      if (10^18 * stor12) + 1000000000000000000 * 10^18 / stor12 + 10^18 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 149999843750000 != (10^18 * stor12) + 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if not stor12 + 10^18:\n          if (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if 149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18))\n      if (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18 / stor12 + 10^18 != stor12 + 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if 149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return ((((149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18))\n  if stor12 * stor12 / stor12 != stor12:\n      revert with 0, 'SafeMath mul failed'\n  if 78125000 * stor12 * stor12 / 78125000 != stor12 * stor12:\n      revert with 0, 'SafeMath mul failed'\n  if (149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) < 78125000 * stor12 * stor12:\n      revert with 0, 'SafeMath add failed'\n  if not stor12 + 10^18:\n      if not stor12 + 10^18:\n          if (149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18 > 0:\n              revert with 0, 'SafeMath sub failed'\n          return -((149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18)\n      if (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18 / stor12 + 10^18 != stor12 + 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18 > (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return (((156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18))\n  if (10^18 * stor12) + 1000000000000000000 * 10^18 / stor12 + 10^18 != 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 149999843750000 != (10^18 * stor12) + 1000000000000000000 * 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if not stor12 + 10^18:\n      if (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if (149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return (((149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18))\n  if (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18 / stor12 + 10^18 != stor12 + 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * stor12) + (stor12 * stor12) + 1000000000000000000 * 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if (149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:\n      revert with 0, 'SafeMath add failed'\n  if (149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:\n      revert with 0, 'SafeMath sub failed'\n  return ((((149999843750000 * 10^18 * stor12) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * stor12) + (78125000 * stor12 * stor12) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18))\n\ndef iWantXKeys(uint256 _keys): # not payable\n  if block.timestamp <= stor0 + stor11:\n      if not _keys:\n          if not _keys:\n              return 0\n          if _keys * _keys / _keys != _keys:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * _keys * _keys / 78125000 != _keys * _keys:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * _keys * _keys < 78125000 * _keys * _keys:\n              revert with 0, 'SafeMath add failed'\n          return (78125000 * _keys * _keys / 1000000000000000000 * 10^18)\n      if 10^18 * _keys / _keys != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if 149999843750000 * 10^18 * _keys / 149999843750000 != 10^18 * _keys:\n          revert with 0, 'SafeMath mul failed'\n      if not _keys:\n          if 149999843750000 * 10^18 * _keys / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          return (149999843750000 * 10^18 * _keys / 2 / 1000000000000000000 * 10^18)\n      if _keys * _keys / _keys != _keys:\n          revert with 0, 'SafeMath mul failed'\n      if 78125000 * _keys * _keys / 78125000 != _keys * _keys:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * _keys / 2) + (78125000 * _keys * _keys) < 78125000 * _keys * _keys:\n          revert with 0, 'SafeMath add failed'\n      return ((149999843750000 * 10^18 * _keys / 2) + (78125000 * _keys * _keys) / 1000000000000000000 * 10^18)\n  if block.timestamp > stor9:\n      if stor8:\n          if not _keys:\n              if not _keys:\n                  return 0\n              if _keys * _keys / _keys != _keys:\n                  revert with 0, 'SafeMath mul failed'\n              if 78125000 * _keys * _keys / 78125000 != _keys * _keys:\n                  revert with 0, 'SafeMath mul failed'\n              if 78125000 * _keys * _keys < 78125000 * _keys * _keys:\n                  revert with 0, 'SafeMath add failed'\n              return (78125000 * _keys * _keys / 1000000000000000000 * 10^18)\n          if 10^18 * _keys / _keys != 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if 149999843750000 * 10^18 * _keys / 149999843750000 != 10^18 * _keys:\n              revert with 0, 'SafeMath mul failed'\n          if not _keys:\n              if 149999843750000 * 10^18 * _keys / 2 < 0:\n                  revert with 0, 'SafeMath add failed'\n              return (149999843750000 * 10^18 * _keys / 2 / 1000000000000000000 * 10^18)\n          if _keys * _keys / _keys != _keys:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * _keys * _keys / 78125000 != _keys * _keys:\n              revert with 0, 'SafeMath mul failed'\n          if (149999843750000 * 10^18 * _keys / 2) + (78125000 * _keys * _keys) < 78125000 * _keys * _keys:\n              revert with 0, 'SafeMath add failed'\n          return ((149999843750000 * 10^18 * _keys / 2) + (78125000 * _keys * _keys) / 1000000000000000000 * 10^18)\n  if _keys + stor12 < stor12:\n      revert with 0, 'SafeMath add failed'\n  if _keys > _keys + stor12:\n      revert with 0, 'SafeMath sub failed'\n  if not stor12:\n      if not stor12:\n          if not _keys + stor12:\n              if not _keys + stor12:\n                  return 0\n              if (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12) / _keys + stor12 != _keys + stor12:\n                  revert with 0, 'SafeMath mul failed'\n              if (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 78125000 != (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12):\n                  revert with 0, 'SafeMath mul failed'\n              if 0 > (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18)\n          if (10^18 * _keys) + (10^18 * stor12) / _keys + stor12 != 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 149999843750000 != (10^18 * _keys) + (10^18 * stor12):\n              revert with 0, 'SafeMath mul failed'\n          if not _keys + stor12:\n              if (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if 0 > (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 / 1000000000000000000 * 10^18)\n          if (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12) / _keys + stor12 != _keys + stor12:\n              revert with 0, 'SafeMath mul failed'\n          if (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 78125000 != (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12):\n              revert with 0, 'SafeMath mul failed'\n          if (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if 0 > ((149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2) + (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2) + (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18)\n      if stor12 * stor12 / stor12 != stor12:\n          revert with 0, 'SafeMath mul failed'\n      if 78125000 * stor12 * stor12 / 78125000 != stor12 * stor12:\n          revert with 0, 'SafeMath mul failed'\n      if 78125000 * stor12 * stor12 < 78125000 * stor12 * stor12:\n          revert with 0, 'SafeMath add failed'\n      if not _keys + stor12:\n          if not _keys + stor12:\n              if 78125000 * stor12 * stor12 / 1000000000000000000 * 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              return -(78125000 * stor12 * stor12 / 1000000000000000000 * 10^18)\n          if (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12) / _keys + stor12 != _keys + stor12:\n              revert with 0, 'SafeMath mul failed'\n          if (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 78125000 != (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12):\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * stor12 * stor12 / 1000000000000000000 * 10^18 > (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18) - (78125000 * stor12 * stor12 / 1000000000000000000 * 10^18))\n      if (10^18 * _keys) + (10^18 * stor12) / _keys + stor12 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 149999843750000 != (10^18 * _keys) + (10^18 * stor12):\n          revert with 0, 'SafeMath mul failed'\n      if not _keys + stor12:\n          if (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if 78125000 * stor12 * stor12 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 / 1000000000000000000 * 10^18) - (78125000 * stor12 * stor12 / 1000000000000000000 * 10^18))\n      if (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12) / _keys + stor12 != _keys + stor12:\n          revert with 0, 'SafeMath mul failed'\n      if (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 78125000 != (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12):\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if 78125000 * stor12 * stor12 / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2) + (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return ((((149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2) + (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18) - (78125000 * stor12 * stor12 / 1000000000000000000 * 10^18))\n  if 10^18 * stor12 / stor12 != 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if 149999843750000 * 10^18 * stor12 / 149999843750000 != 10^18 * stor12:\n      revert with 0, 'SafeMath mul failed'\n  if not stor12:\n      if 149999843750000 * 10^18 * stor12 / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if not _keys + stor12:\n          if not _keys + stor12:\n              if 149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              return -(149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18)\n          if (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12) / _keys + stor12 != _keys + stor12:\n              revert with 0, 'SafeMath mul failed'\n          if (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 78125000 != (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12):\n              revert with 0, 'SafeMath mul failed'\n          if 149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18 > (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18))\n      if (10^18 * _keys) + (10^18 * stor12) / _keys + stor12 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 149999843750000 != (10^18 * _keys) + (10^18 * stor12):\n          revert with 0, 'SafeMath mul failed'\n      if not _keys + stor12:\n          if (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if 149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18))\n      if (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12) / _keys + stor12 != _keys + stor12:\n          revert with 0, 'SafeMath mul failed'\n      if (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 78125000 != (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12):\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if 149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2) + (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return ((((149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2) + (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * stor12 / 2 / 1000000000000000000 * 10^18))\n  if stor12 * stor12 / stor12 != stor12:\n      revert with 0, 'SafeMath mul failed'\n  if 78125000 * stor12 * stor12 / 78125000 != stor12 * stor12:\n      revert with 0, 'SafeMath mul failed'\n  if (149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) < 78125000 * stor12 * stor12:\n      revert with 0, 'SafeMath add failed'\n  if not _keys + stor12:\n      if not _keys + stor12:\n          if (149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18 > 0:\n              revert with 0, 'SafeMath sub failed'\n          return -((149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18)\n      if (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12) / _keys + stor12 != _keys + stor12:\n          revert with 0, 'SafeMath mul failed'\n      if (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 78125000 != (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12):\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18 > (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return (((78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18))\n  if (10^18 * _keys) + (10^18 * stor12) / _keys + stor12 != 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 149999843750000 != (10^18 * _keys) + (10^18 * stor12):\n      revert with 0, 'SafeMath mul failed'\n  if not _keys + stor12:\n      if (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if (149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return (((149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18))\n  if (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12) / _keys + stor12 != _keys + stor12:\n      revert with 0, 'SafeMath mul failed'\n  if (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 78125000 != (_keys * _keys) + (stor12 * _keys) + (_keys * stor12) + (stor12 * stor12):\n      revert with 0, 'SafeMath mul failed'\n  if (149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2 < 0:\n      revert with 0, 'SafeMath add failed'\n  if (149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2) + (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18:\n      revert with 0, 'SafeMath sub failed'\n  return ((((149999843750000 * 10^18 * _keys) + (149999843750000 * 10^18 * stor12) / 2) + (78125000 * _keys * _keys) + (78125000 * stor12 * _keys) + (78125000 * _keys * stor12) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * stor12 / 2) + (78125000 * stor12 * stor12) / 1000000000000000000 * 10^18))\n\ndef getPlayerVaults(uint256 _pID): # not payable\n  if block.timestamp <= stor9:\n      if not stor15:\n          if plyrRnds_[_pID].field_512 > 0:\n              revert with 0, 'SafeMath sub failed'\n          if -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n              revert with 0, 'SafeMath add failed'\n          return plyr_[_pID].field_512, -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768, plyr_[_pID].field_1024\n      if plyrRnds_[_pID].field_256 * stor15 / stor15 != plyrRnds_[_pID].field_256:\n          revert with 0, 'SafeMath mul failed'\n      if plyrRnds_[_pID].field_512 > plyrRnds_[_pID].field_256 * stor15 / 10^18:\n          revert with 0, 'SafeMath sub failed'\n      if (plyrRnds_[_pID].field_256 * stor15 / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n          revert with 0, 'SafeMath add failed'\n      return plyr_[_pID].field_512, \n             (plyrRnds_[_pID].field_256 * stor15 / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768,\n             plyr_[_pID].field_1024\n  if stor10:\n      if not stor15:\n          if plyrRnds_[_pID].field_512 > 0:\n              revert with 0, 'SafeMath sub failed'\n          if -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n              revert with 0, 'SafeMath add failed'\n          return plyr_[_pID].field_512, -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768, plyr_[_pID].field_1024\n      if plyrRnds_[_pID].field_256 * stor15 / stor15 != plyrRnds_[_pID].field_256:\n          revert with 0, 'SafeMath mul failed'\n      if plyrRnds_[_pID].field_512 > plyrRnds_[_pID].field_256 * stor15 / 10^18:\n          revert with 0, 'SafeMath sub failed'\n      if (plyrRnds_[_pID].field_256 * stor15 / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n          revert with 0, 'SafeMath add failed'\n      return plyr_[_pID].field_512, \n             (plyrRnds_[_pID].field_256 * stor15 / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768,\n             plyr_[_pID].field_1024\n  if not stor8:\n      if not stor15:\n          if plyrRnds_[_pID].field_512 > 0:\n              revert with 0, 'SafeMath sub failed'\n          if -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n              revert with 0, 'SafeMath add failed'\n          return plyr_[_pID].field_512, -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768, plyr_[_pID].field_1024\n      if plyrRnds_[_pID].field_256 * stor15 / stor15 != plyrRnds_[_pID].field_256:\n          revert with 0, 'SafeMath mul failed'\n      if plyrRnds_[_pID].field_512 > plyrRnds_[_pID].field_256 * stor15 / 10^18:\n          revert with 0, 'SafeMath sub failed'\n      if (plyrRnds_[_pID].field_256 * stor15 / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n          revert with 0, 'SafeMath add failed'\n      return plyr_[_pID].field_512, \n             (plyrRnds_[_pID].field_256 * stor15 / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768,\n             plyr_[_pID].field_1024\n  if _pID != stor8:\n      if not stor14:\n          require stor12\n          if (0 / stor12) + stor15 < stor15:\n              revert with 0, 'SafeMath add failed'\n          if not (0 / stor12) + stor15:\n              if plyrRnds_[_pID].field_512 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              if -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n                  revert with 0, 'SafeMath add failed'\n              return plyr_[_pID].field_512, -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768, plyr_[_pID].field_1024\n          if (0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / (0 / stor12) + stor15 != plyrRnds_[_pID].field_256:\n              revert with 0, 'SafeMath mul failed'\n          if plyrRnds_[_pID].field_512 > (0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18:\n              revert with 0, 'SafeMath sub failed'\n          if ((0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n              revert with 0, 'SafeMath add failed'\n          return plyr_[_pID].field_512, \n                 ((0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768,\n                 plyr_[_pID].field_1024\n      if potSplit_ * stor14 / stor14 != potSplit_:\n          revert with 0, 'SafeMath mul failed'\n      if not potSplit_ * stor14 / 100:\n          require stor12\n          if (0 / stor12) + stor15 < stor15:\n              revert with 0, 'SafeMath add failed'\n          if not (0 / stor12) + stor15:\n              if plyrRnds_[_pID].field_512 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              if -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n                  revert with 0, 'SafeMath add failed'\n              return plyr_[_pID].field_512, -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768, plyr_[_pID].field_1024\n          if (0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / (0 / stor12) + stor15 != plyrRnds_[_pID].field_256:\n              revert with 0, 'SafeMath mul failed'\n          if plyrRnds_[_pID].field_512 > (0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18:\n              revert with 0, 'SafeMath sub failed'\n          if ((0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n              revert with 0, 'SafeMath add failed'\n          return plyr_[_pID].field_512, \n                 ((0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768,\n                 plyr_[_pID].field_1024\n      if 10^18 * potSplit_ * stor14 / 100 / potSplit_ * stor14 / 100 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      require stor12\n      if (10^18 * potSplit_ * stor14 / 100 / stor12) + stor15 < stor15:\n          revert with 0, 'SafeMath add failed'\n      if not (10^18 * potSplit_ * stor14 / 100 / stor12) + stor15:\n          if plyrRnds_[_pID].field_512 > 0:\n              revert with 0, 'SafeMath sub failed'\n          if -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n              revert with 0, 'SafeMath add failed'\n          return plyr_[_pID].field_512, -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768, plyr_[_pID].field_1024\n      if (10^18 * potSplit_ * stor14 / 100 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / (10^18 * potSplit_ * stor14 / 100 / stor12) + stor15 != plyrRnds_[_pID].field_256:\n          revert with 0, 'SafeMath mul failed'\n      if plyrRnds_[_pID].field_512 > (10^18 * potSplit_ * stor14 / 100 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18:\n          revert with 0, 'SafeMath sub failed'\n      if ((10^18 * potSplit_ * stor14 / 100 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n          revert with 0, 'SafeMath add failed'\n      return plyr_[_pID].field_512, \n             ((10^18 * potSplit_ * stor14 / 100 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768,\n             plyr_[_pID].field_1024\n  if not stor14:\n      if plyr_[_pID].field_512 < plyr_[_pID].field_512:\n          revert with 0, 'SafeMath add failed'\n      if not stor14:\n          require stor12\n          if (0 / stor12) + stor15 < stor15:\n              revert with 0, 'SafeMath add failed'\n          if not (0 / stor12) + stor15:\n              if plyrRnds_[_pID].field_512 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              if -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n                  revert with 0, 'SafeMath add failed'\n              return plyr_[_pID].field_512, -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768, plyr_[_pID].field_1024\n          if (0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / (0 / stor12) + stor15 != plyrRnds_[_pID].field_256:\n              revert with 0, 'SafeMath mul failed'\n          if plyrRnds_[_pID].field_512 > (0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18:\n              revert with 0, 'SafeMath sub failed'\n          if ((0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n              revert with 0, 'SafeMath add failed'\n          return plyr_[_pID].field_512, \n                 ((0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768,\n                 plyr_[_pID].field_1024\n      if potSplit_ * stor14 / stor14 != potSplit_:\n          revert with 0, 'SafeMath mul failed'\n      if not potSplit_ * stor14 / 100:\n          require stor12\n          if (0 / stor12) + stor15 < stor15:\n              revert with 0, 'SafeMath add failed'\n          if not (0 / stor12) + stor15:\n              if plyrRnds_[_pID].field_512 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              if -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n                  revert with 0, 'SafeMath add failed'\n              return plyr_[_pID].field_512, -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768, plyr_[_pID].field_1024\n          if (0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / (0 / stor12) + stor15 != plyrRnds_[_pID].field_256:\n              revert with 0, 'SafeMath mul failed'\n          if plyrRnds_[_pID].field_512 > (0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18:\n              revert with 0, 'SafeMath sub failed'\n          if ((0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n              revert with 0, 'SafeMath add failed'\n          return plyr_[_pID].field_512, \n                 ((0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768,\n                 plyr_[_pID].field_1024\n      if 10^18 * potSplit_ * stor14 / 100 / potSplit_ * stor14 / 100 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      require stor12\n      if (10^18 * potSplit_ * stor14 / 100 / stor12) + stor15 < stor15:\n          revert with 0, 'SafeMath add failed'\n      if not (10^18 * potSplit_ * stor14 / 100 / stor12) + stor15:\n          if plyrRnds_[_pID].field_512 > 0:\n              revert with 0, 'SafeMath sub failed'\n          if -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n              revert with 0, 'SafeMath add failed'\n          return plyr_[_pID].field_512, -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768, plyr_[_pID].field_1024\n      if (10^18 * potSplit_ * stor14 / 100 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / (10^18 * potSplit_ * stor14 / 100 / stor12) + stor15 != plyrRnds_[_pID].field_256:\n          revert with 0, 'SafeMath mul failed'\n      if plyrRnds_[_pID].field_512 > (10^18 * potSplit_ * stor14 / 100 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18:\n          revert with 0, 'SafeMath sub failed'\n      if ((10^18 * potSplit_ * stor14 / 100 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n          revert with 0, 'SafeMath add failed'\n      return plyr_[_pID].field_512, \n             ((10^18 * potSplit_ * stor14 / 100 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768,\n             plyr_[_pID].field_1024\n  if 48 * stor14 / stor14 != 48:\n      revert with 0, 'SafeMath mul failed'\n  if (48 * stor14 / 100) + plyr_[_pID].field_512 < plyr_[_pID].field_512:\n      revert with 0, 'SafeMath add failed'\n  if not stor14:\n      require stor12\n      if (0 / stor12) + stor15 < stor15:\n          revert with 0, 'SafeMath add failed'\n      if not (0 / stor12) + stor15:\n          if plyrRnds_[_pID].field_512 > 0:\n              revert with 0, 'SafeMath sub failed'\n          if -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n              revert with 0, 'SafeMath add failed'\n          return (48 * stor14 / 100) + plyr_[_pID].field_512, -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768, plyr_[_pID].field_1024\n      if (0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / (0 / stor12) + stor15 != plyrRnds_[_pID].field_256:\n          revert with 0, 'SafeMath mul failed'\n      if plyrRnds_[_pID].field_512 > (0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18:\n          revert with 0, 'SafeMath sub failed'\n      if ((0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n          revert with 0, 'SafeMath add failed'\n      return (48 * stor14 / 100) + plyr_[_pID].field_512, \n             ((0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768,\n             plyr_[_pID].field_1024\n  if potSplit_ * stor14 / stor14 != potSplit_:\n      revert with 0, 'SafeMath mul failed'\n  if not potSplit_ * stor14 / 100:\n      require stor12\n      if (0 / stor12) + stor15 < stor15:\n          revert with 0, 'SafeMath add failed'\n      if not (0 / stor12) + stor15:\n          if plyrRnds_[_pID].field_512 > 0:\n              revert with 0, 'SafeMath sub failed'\n          if -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n              revert with 0, 'SafeMath add failed'\n          return (48 * stor14 / 100) + plyr_[_pID].field_512, -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768, plyr_[_pID].field_1024\n      if (0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / (0 / stor12) + stor15 != plyrRnds_[_pID].field_256:\n          revert with 0, 'SafeMath mul failed'\n      if plyrRnds_[_pID].field_512 > (0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18:\n          revert with 0, 'SafeMath sub failed'\n      if ((0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n          revert with 0, 'SafeMath add failed'\n      return (48 * stor14 / 100) + plyr_[_pID].field_512, \n             ((0 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768,\n             plyr_[_pID].field_1024\n  if 10^18 * potSplit_ * stor14 / 100 / potSplit_ * stor14 / 100 != 10^18:\n      revert with 0, 'SafeMath mul failed'\n  require stor12\n  if (10^18 * potSplit_ * stor14 / 100 / stor12) + stor15 < stor15:\n      revert with 0, 'SafeMath add failed'\n  if not (10^18 * potSplit_ * stor14 / 100 / stor12) + stor15:\n      if plyrRnds_[_pID].field_512 > 0:\n          revert with 0, 'SafeMath sub failed'\n      if -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n          revert with 0, 'SafeMath add failed'\n      return (48 * stor14 / 100) + plyr_[_pID].field_512, -plyrRnds_[_pID].field_512 + plyr_[_pID].field_768, plyr_[_pID].field_1024\n  if (10^18 * potSplit_ * stor14 / 100 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / (10^18 * potSplit_ * stor14 / 100 / stor12) + stor15 != plyrRnds_[_pID].field_256:\n      revert with 0, 'SafeMath mul failed'\n  if plyrRnds_[_pID].field_512 > (10^18 * potSplit_ * stor14 / 100 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18:\n      revert with 0, 'SafeMath sub failed'\n  if ((10^18 * potSplit_ * stor14 / 100 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768 < plyr_[_pID].field_768:\n      revert with 0, 'SafeMath add failed'\n  return (48 * stor14 / 100) + plyr_[_pID].field_512, \n         ((10^18 * potSplit_ * stor14 / 100 / stor12 * plyrRnds_[_pID].field_256) + (stor15 * plyrRnds_[_pID].field_256) / 10^18) - plyrRnds_[_pID].field_512 + plyr_[_pID].field_768,\n         plyr_[_pID].field_1024\n\ndef buyXaddr(address _affCode) payable: \n  if bool(activated_) != 1:\n      revert with 0, 'yits not ready yet'\n  if ext_code.size(caller):\n      revert with 0, 'non smart contract address only'\n  if call.value < 10^9:\n      revert with 0, 'too little money'\n  if call.value > 100000 * 10^18:\n      revert with 0, 'too much money'\n  if pIDxAddr_[caller]:\n      if not _affCode:\n          if block.timestamp <= stor0 + stor11:\n              if block.timestamp <= stor9:\n                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                      revert with 0, 'SafeMath add failed'\n                  plyr_[stor3[caller]].field_768 += call.value\n                  stop\n              if stor10:\n                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                      revert with 0, 'SafeMath add failed'\n                  plyr_[stor3[caller]].field_768 += call.value\n                  stop\n              stor10 = 1\n              if not stor14 + airDropPot_:\n                  if stor14 + airDropPot_:\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                          revert with 0, 'SafeMath mul failed'\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          require stor12\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require stor12\n              else:\n                  if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                      revert with 0, 'SafeMath mul failed'\n                  if not stor14 + airDropPot_:\n                      require stor12\n                  else:\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                          revert with 0, 'SafeMath mul failed'\n                      if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          require stor12\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n          else:\n              if block.timestamp <= stor9:\n                  if not plyrRnds_[stor3[caller]].field_256:\n                      if 100 * 10^18 <= stor13:\n                          if call.value <= 10^9:\n                              stop\n                          if stor13:\n                              if 10^18 * stor13 / stor13 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if 10^18 * stor13:\n                                  if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                      else:\n                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                              revert with 0, 'SafeMath add failed'\n                          if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                  revert with 0, 'SafeMath sub failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                  else:\n                      if 100 * 10^18 <= stor13:\n                          if call.value <= 10^9:\n                              stop\n                          if stor13:\n                              if 10^18 * stor13 / stor13 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if 10^18 * stor13:\n                                  if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                              revert with 0, 'SafeMath add failed'\n                          if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                  revert with 0, 'SafeMath sub failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                              if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > 10^9:\n              else:\n                  if stor8:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor14 + airDropPot_:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor14 + airDropPot_:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                  else:\n                      if not plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                      else:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n      else:\n          if _affCode != caller:\n              if pIDxAddr_[address(_affCode)] != plyr_[stor3[caller]].field_1280:\n                  plyr_[stor3[caller]].field_1280 = pIDxAddr_[address(_affCode)]\n          if block.timestamp <= stor0 + stor11:\n              if block.timestamp <= stor9:\n                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                      revert with 0, 'SafeMath add failed'\n                  plyr_[stor3[caller]].field_768 += call.value\n                  stop\n              if stor10:\n                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                      revert with 0, 'SafeMath add failed'\n                  plyr_[stor3[caller]].field_768 += call.value\n                  stop\n              stor10 = 1\n              if stor14 + airDropPot_:\n                  if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                      revert with 0, 'SafeMath mul failed'\n                  if not stor14 + airDropPot_:\n                      require stor12\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                      revert with 0, 'SafeMath mul failed'\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                  else:\n              else:\n                  if not stor14 + airDropPot_:\n                      require stor12\n                  else:\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                          revert with 0, 'SafeMath mul failed'\n                      if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          require stor12\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n          else:\n              if block.timestamp <= stor9:\n                  if not plyrRnds_[stor3[caller]].field_256:\n                      if 100 * 10^18 <= stor13:\n                          if call.value <= 10^9:\n                              stop\n                          if stor13:\n                              if 10^18 * stor13 / stor13 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if 10^18 * stor13:\n                                  if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                      else:\n                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                              revert with 0, 'SafeMath add failed'\n                          if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                  revert with 0, 'SafeMath sub failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if 100 * 10^18 <= stor13:\n                          if call.value <= 10^9:\n                              stop\n                          if stor13:\n                              if 10^18 * stor13 / stor13 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if 10^18 * stor13:\n                                  if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                              revert with 0, 'SafeMath add failed'\n                          if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                  revert with 0, 'SafeMath sub failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n              else:\n                  if stor8:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                      if stor14 + airDropPot_:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                  else:\n                      if not plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                      else:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n  else:\n      require ext_code.size(0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf)\n      call 0x0089348bf4fb32c4cea21e4158b2d92ed9ee03cf.getPlayerID(address _addr) with:\n           gas gas_remaining wei\n          args caller\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 32\n      require ext_code.size(0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf)\n      call 0x0089348bf4fb32c4cea21e4158b2d92ed9ee03cf.getPlayerName(uint256 _pID) with:\n           gas gas_remaining wei\n          args ext_call.return_data[0]\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 32\n      require ext_code.size(0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf)\n      call 0x0089348bf4fb32c4cea21e4158b2d92ed9ee03cf.getPlayerLAff(uint256 _pID) with:\n           gas gas_remaining wei\n          args ext_call.return_data[0]\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 32\n      pIDxAddr_[caller] = ext_call.return_data[0]\n      plyr_[ext_call.return_data[0]].field_0 = caller\n      if not ext_call.return_data[0]:\n          if not ext_call.return_data[0]:\n              if not _affCode:\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                  else:\n                      if block.timestamp <= stor9:\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 > stor13:\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                      else:\n                          if stor8:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if stor10:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      stor10 = 1\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n              else:\n                  if _affCode != caller:\n                      if pIDxAddr_[address(_affCode)] != plyr_[stor3[caller]].field_1280:\n                          plyr_[stor3[caller]].field_1280 = pIDxAddr_[address(_affCode)]\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                  else:\n                      if block.timestamp <= stor9:\n                          if plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value > 10^9:\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                      else:\n                          if not stor8:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if not stor10:\n                                      stor10 = 1\n                                  else:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n          else:\n              if ext_call.return_data[0] == ext_call.return_data[0]:\n                  if not _affCode:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          stor10 = 1\n                          if stor14 + airDropPot_:\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value > 10^9:\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                          else:\n                              if not stor8:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                                      else:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                  else:\n                      if _affCode != caller:\n                          if pIDxAddr_[address(_affCode)] != plyr_[stor3[caller]].field_1280:\n                              plyr_[stor3[caller]].field_1280 = pIDxAddr_[address(_affCode)]\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              stor10 = 1\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor8:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n              else:\n                  plyr_[ext_call.return_data[0]].field_1280 = ext_call.return_data[0]\n                  if not _affCode:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              stor10 = 1\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor8:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                  else:\n                      if _affCode != caller:\n                          if pIDxAddr_[address(_affCode)] != plyr_[stor3[caller]].field_1280:\n                              plyr_[stor3[caller]].field_1280 = pIDxAddr_[address(_affCode)]\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  stor10 = 1\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor8:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n      else:\n          pIDxName_[ext_call.return_data[0]] = ext_call.return_data[0]\n          plyr_[ext_call.return_data[0]].field_256 = ext_call.return_data[0]\n          stor7[ext_call.return_data[0]][ext_call.return_data[0]] = 1\n          if not ext_call.return_data[0]:\n              if not _affCode:\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                  else:\n                      if block.timestamp <= stor9:\n                          if plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value > 10^9:\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                      else:\n                          if not stor8:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if not stor10:\n                                      stor10 = 1\n                                  else:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n              else:\n                  if _affCode != caller:\n                      if pIDxAddr_[address(_affCode)] != plyr_[stor3[caller]].field_1280:\n                          plyr_[stor3[caller]].field_1280 = pIDxAddr_[address(_affCode)]\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                      else:\n                          stor10 = 1\n                  else:\n                      if block.timestamp <= stor9:\n                          if plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 > stor13:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if stor8:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if stor10:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      stor10 = 1\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n          else:\n              if ext_call.return_data[0] == ext_call.return_data[0]:\n                  if not _affCode:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              stor10 = 1\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor8:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                  else:\n                      if _affCode != caller:\n                          if pIDxAddr_[address(_affCode)] != plyr_[stor3[caller]].field_1280:\n                              plyr_[stor3[caller]].field_1280 = pIDxAddr_[address(_affCode)]\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  stor10 = 1\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor8:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n              else:\n                  plyr_[ext_call.return_data[0]].field_1280 = ext_call.return_data[0]\n                  if not _affCode:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  stor10 = 1\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor8:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                  else:\n                      if _affCode != caller:\n                          if pIDxAddr_[address(_affCode)] != plyr_[stor3[caller]].field_1280:\n                              plyr_[stor3[caller]].field_1280 = pIDxAddr_[address(_affCode)]\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              if not stor10:\n                                  stor10 = 1\n                              else:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if not stor8:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                              else:\n                                  if block.timestamp > stor9:\n                                      if not stor10:\n                                          stor10 = 1\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef reLoadXname(bytes32 _affCode, uint256 _eth): # not payable\n  if bool(activated_) != 1:\n      revert with 0, 'yits not ready yet'\n  if ext_code.size(caller):\n      revert with 0, 'non smart contract address only'\n  if _eth < 10^9:\n      revert with 0, 'too little money'\n  if _eth > 100000 * 10^18:\n      revert with 0, 'too much money'\n  if not _affCode:\n      if block.timestamp <= stor0 + stor11:\n          if block.timestamp <= stor9:\n              stop\n          if stor10:\n              stop\n          stor10 = 1\n          if not stor14 + airDropPot_:\n              if not stor14 + airDropPot_:\n                  require stor12\n                  if not 0 / stor12:\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if ext_call.success:\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                      else:\n                          if stor14 + airDropPot_ / 10 < 0:\n                              revert with 0, 'SafeMath add failed'\n                  else:\n                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                          revert with 0, 'SafeMath mul failed'\n                      if stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n              else:\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                      revert with 0, 'SafeMath mul failed'\n                  if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      require stor12\n                      if 0 / stor12:\n                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < stor14 + airDropPot_ / 10:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                              if not ext_call.success:\n                  else:\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      require stor12\n                      if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > 0:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n          else:\n              if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                  revert with 0, 'SafeMath mul failed'\n              if not stor14 + airDropPot_:\n                  require stor12\n                  if not 0 / stor12:\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                  else:\n                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                          revert with 0, 'SafeMath mul failed'\n                      if stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n              else:\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                      revert with 0, 'SafeMath mul failed'\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      require stor12\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) <= 0:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                      else:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                  else:\n                      require stor12\n                      if not 0 / stor12:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n      else:\n          if block.timestamp <= stor9:\n              if stor15:\n                  if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                      revert with 0, 'SafeMath mul failed'\n                  if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                      revert with 0, 'SafeMath sub failed'\n                  if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if not plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 > stor13:\n                      else:\n                          if 100 * 10^18 <= stor13:\n                              if _eth <= 10^9:\n                                  stop\n                          else:\n                              if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if _eth + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                  else:\n                      if plyr_[stor3[caller]].field_768 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                      if plyrRnds_[stor3[caller]].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if plyrRnds_[stor3[caller]].field_256:\n              else:\n                  if plyrRnds_[stor3[caller]].field_512 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if not plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 > stor13:\n                              if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                      else:\n                          if 100 * 10^18 <= stor13:\n                              if _eth <= 10^9:\n                                  stop\n                              if stor13:\n                          else:\n                              if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if _eth + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                  else:\n                      if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                      if 0 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = 0\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 > stor13:\n          else:\n              if stor8:\n                  if block.timestamp <= stor9:\n                      stop\n                  if stor10:\n                      stop\n                  stor10 = 1\n                  if not stor14 + airDropPot_:\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if not 0 / stor12:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                          else:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                          else:\n                              require stor12\n                              if not 0 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 <= 0:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                  else:\n                      if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                          revert with 0, 'SafeMath mul failed'\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if not 0 / stor12:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 <= 0:\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              require stor12\n                              if 0 / stor12:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                          else:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n              else:\n                  if stor15:\n                      if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                          revert with 0, 'SafeMath mul failed'\n                      if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                          revert with 0, 'SafeMath sub failed'\n                      if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 > stor13:\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if plyr_[stor3[caller]].field_768 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                          if plyrRnds_[stor3[caller]].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                  else:\n                      if plyrRnds_[stor3[caller]].field_512 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if _eth > 10^9:\n                              else:\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                      else:\n                          if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                          if 0 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = 0\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n  else:\n      if _affCode != plyr_[stor3[caller]].field_256:\n          if pIDxName_[_affCode] != plyr_[stor3[caller]].field_1280:\n              plyr_[stor3[caller]].field_1280 = pIDxName_[_affCode]\n      if block.timestamp <= stor0 + stor11:\n          if block.timestamp <= stor9:\n              stop\n          if stor10:\n              stop\n          stor10 = 1\n          if not stor14 + airDropPot_:\n              if not stor14 + airDropPot_:\n                  require stor12\n                  if not 0 / stor12:\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                  else:\n                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                          revert with 0, 'SafeMath mul failed'\n                      if stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n              else:\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                      revert with 0, 'SafeMath mul failed'\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      require stor12\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) <= 0:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                      else:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                  else:\n                      require stor12\n                      if not 0 / stor12:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n          else:\n              if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                  revert with 0, 'SafeMath mul failed'\n              if not stor14 + airDropPot_:\n                  require stor12\n                  if 0 / stor12:\n                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                          revert with 0, 'SafeMath mul failed'\n                      if stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                  if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                      revert with 0, 'SafeMath add failed'\n                  plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                  call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                     funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                     value stor14 + airDropPot_ / 10 wei\n                       gas gas_remaining wei\n              else:\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                      revert with 0, 'SafeMath mul failed'\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      require stor12\n                      if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 <= 0:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                      else:\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > 0:\n                  else:\n                      require stor12\n                      if 0 / stor12:\n                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) <= 0:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                      else:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n      else:\n          if block.timestamp > stor9:\n              if stor8:\n                  if block.timestamp <= stor9:\n                      stop\n                  if stor10:\n                      stop\n                  stor10 = 1\n                  if stor14 + airDropPot_:\n                      if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                          revert with 0, 'SafeMath mul failed'\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if 0 / stor12:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              require stor12\n                              if not 0 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                  else:\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if not 0 / stor12:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 <= 0:\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              require stor12\n                              if 0 / stor12:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                          else:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n              else:\n                  if stor15:\n                      if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                          revert with 0, 'SafeMath mul failed'\n                      if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                          revert with 0, 'SafeMath sub failed'\n                      if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 > stor13:\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if plyr_[stor3[caller]].field_768 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                          if plyrRnds_[stor3[caller]].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                  else:\n                      if plyrRnds_[stor3[caller]].field_512 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 > stor13:\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                          if 0 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = 0\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n          else:\n              if not stor15:\n                  if plyrRnds_[stor3[caller]].field_512 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if not plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 > stor13:\n                      else:\n                          if 100 * 10^18 <= stor13:\n                              if _eth <= 10^9:\n                                  stop\n                          else:\n                              if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if _eth + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                  else:\n                      if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                      if 0 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = 0\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if plyrRnds_[stor3[caller]].field_256:\n              else:\n                  if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                      revert with 0, 'SafeMath mul failed'\n                  if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                      revert with 0, 'SafeMath sub failed'\n                  if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 <= stor13:\n                              if _eth > 10^9:\n                          else:\n                              if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if _eth + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                  else:\n                      if plyr_[stor3[caller]].field_768 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                      if plyrRnds_[stor3[caller]].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if plyrRnds_[stor3[caller]].field_256:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef buyXid(uint256 _affCode) payable: \n  if bool(activated_) != 1:\n      revert with 0, 'yits not ready yet'\n  if ext_code.size(caller):\n      revert with 0, 'non smart contract address only'\n  if call.value < 10^9:\n      revert with 0, 'too little money'\n  if call.value > 100000 * 10^18:\n      revert with 0, 'too much money'\n  if pIDxAddr_[caller]:\n      if not _affCode:\n          if block.timestamp <= stor0 + stor11:\n              if block.timestamp <= stor9:\n                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                      revert with 0, 'SafeMath add failed'\n                  plyr_[stor3[caller]].field_768 += call.value\n                  stop\n              if stor10:\n                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                      revert with 0, 'SafeMath add failed'\n                  plyr_[stor3[caller]].field_768 += call.value\n                  stop\n              stor10 = 1\n              if not stor14 + airDropPot_:\n                  if stor14 + airDropPot_:\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                          revert with 0, 'SafeMath mul failed'\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          require stor12\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require stor12\n              else:\n                  if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                      revert with 0, 'SafeMath mul failed'\n                  if not stor14 + airDropPot_:\n                      require stor12\n                  else:\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                          revert with 0, 'SafeMath mul failed'\n                      if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          require stor12\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n          else:\n              if block.timestamp <= stor9:\n                  if not plyrRnds_[stor3[caller]].field_256:\n                      if 100 * 10^18 <= stor13:\n                          if call.value <= 10^9:\n                              stop\n                          if stor13:\n                              if 10^18 * stor13 / stor13 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if 10^18 * stor13:\n                                  if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                      else:\n                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                              revert with 0, 'SafeMath add failed'\n                          if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                  revert with 0, 'SafeMath sub failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                  else:\n                      if 100 * 10^18 <= stor13:\n                          if call.value <= 10^9:\n                              stop\n                          if stor13:\n                              if 10^18 * stor13 / stor13 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if 10^18 * stor13:\n                                  if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                              revert with 0, 'SafeMath add failed'\n                          if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                  revert with 0, 'SafeMath sub failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                              if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > 10^9:\n              else:\n                  if stor8:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor14 + airDropPot_:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor14 + airDropPot_:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                  else:\n                      if not plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                      else:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n      else:\n          if _affCode == pIDxAddr_[caller]:\n              if block.timestamp <= stor0 + stor11:\n                  if block.timestamp <= stor9:\n                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 += call.value\n                      stop\n                  if stor10:\n                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 += call.value\n                      stop\n                  stor10 = 1\n                  if stor14 + airDropPot_:\n                      if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                          revert with 0, 'SafeMath mul failed'\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                          revert with 0, 'SafeMath mul failed'\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                      else:\n                  else:\n                      if not stor14 + airDropPot_:\n                          require stor12\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              require stor12\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n              else:\n                  if block.timestamp <= stor9:\n                      if not plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                  else:\n                      if stor8:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          stor10 = 1\n                          if stor14 + airDropPot_:\n                              if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                  revert with 0, 'SafeMath mul failed'\n                          if stor14 + airDropPot_:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n          else:\n              if _affCode == plyr_[stor3[caller]].field_1280:\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                          if not stor14 + airDropPot_:\n                              require stor12\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                          else:\n                      else:\n                          if not stor14 + airDropPot_:\n                              require stor12\n                          else:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  require stor12\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                  else:\n                      if block.timestamp <= stor9:\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                      else:\n                          if stor8:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              stor10 = 1\n                              if stor14 + airDropPot_:\n                                  if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                      revert with 0, 'SafeMath mul failed'\n                              if stor14 + airDropPot_:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if not plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if call.value <= 10^9:\n                                              stop\n                                          if stor13:\n                              else:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                              if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                          if call.value <= 10^9:\n                                              stop\n                                          if stor13:\n                                              if 10^18 * stor13 / stor13 != 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                              if 10^18 * stor13:\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n              else:\n                  plyr_[stor3[caller]].field_1280 = _affCode\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if not stor14 + airDropPot_:\n                          if not stor14 + airDropPot_:\n                              require stor12\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                          else:\n                      else:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor14 + airDropPot_:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                  else:\n                      if block.timestamp <= stor9:\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                      else:\n                          if stor8:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              stor10 = 1\n                              if stor14 + airDropPot_:\n                                  if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                      revert with 0, 'SafeMath mul failed'\n                              else:\n                              if stor14 + airDropPot_:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if not plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                          if call.value <= 10^9:\n                                              stop\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                          if call.value <= 10^9:\n                                              stop\n                                          if stor13:\n                                              if 10^18 * stor13 / stor13 != 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n  else:\n      require ext_code.size(0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf)\n      call 0x0089348bf4fb32c4cea21e4158b2d92ed9ee03cf.getPlayerID(address _addr) with:\n           gas gas_remaining wei\n          args caller\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 32\n      require ext_code.size(0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf)\n      call 0x0089348bf4fb32c4cea21e4158b2d92ed9ee03cf.getPlayerName(uint256 _pID) with:\n           gas gas_remaining wei\n          args ext_call.return_data[0]\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 32\n      require ext_code.size(0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf)\n      call 0x0089348bf4fb32c4cea21e4158b2d92ed9ee03cf.getPlayerLAff(uint256 _pID) with:\n           gas gas_remaining wei\n          args ext_call.return_data[0]\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 32\n      pIDxAddr_[caller] = ext_call.return_data[0]\n      plyr_[ext_call.return_data[0]].field_0 = caller\n      if not ext_call.return_data[0]:\n          if not ext_call.return_data[0]:\n              if not _affCode:\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                  else:\n                      if block.timestamp <= stor9:\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 > stor13:\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                      else:\n                          if stor8:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if stor10:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      stor10 = 1\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n              else:\n                  if _affCode == pIDxAddr_[caller]:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          stor10 = 1\n                          if stor14 + airDropPot_:\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value > 10^9:\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                          else:\n                              if not stor8:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                                      else:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                  else:\n                      if _affCode == plyr_[stor3[caller]].field_1280:\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              stor10 = 1\n                              if stor14 + airDropPot_:\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 <= stor13:\n                                          if call.value > 10^9:\n                                      else:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                              else:\n                                  if not stor8:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if block.timestamp <= stor9:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                                      else:\n                                          if not stor10:\n                                              stor10 = 1\n                                          else:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                              plyr_[stor3[caller]].field_768 += call.value\n                      else:\n                          plyr_[stor3[caller]].field_1280 = _affCode\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  stor10 = 1\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if stor8:\n                                      if block.timestamp <= stor9:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                                      else:\n                                          if stor10:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                          else:\n                                              stor10 = 1\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n          else:\n              if ext_call.return_data[0] == ext_call.return_data[0]:\n                  if not _affCode:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          stor10 = 1\n                          if stor14 + airDropPot_:\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value > 10^9:\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                          else:\n                              if not stor8:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                                      else:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                  else:\n                      if _affCode == pIDxAddr_[caller]:\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  stor10 = 1\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if stor8:\n                                      if block.timestamp <= stor9:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                                      else:\n                                          if stor10:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                          else:\n                                              stor10 = 1\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                      else:\n                          if _affCode == plyr_[stor3[caller]].field_1280:\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                      stop\n                                  if stor10:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      stor10 = 1\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if stor8:\n                                          if block.timestamp <= stor9:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                              plyr_[stor3[caller]].field_768 += call.value\n                                          else:\n                                              if stor10:\n                                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                      revert with 0, 'SafeMath add failed'\n                                              else:\n                                                  stor10 = 1\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_256:\n                                              if 100 * 10^18 > stor13:\n                                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                      revert with 0, 'SafeMath add failed'\n                          else:\n                              plyr_[stor3[caller]].field_1280 = _affCode\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if stor8:\n                                          if block.timestamp <= stor9:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                          else:\n                                              if not stor10:\n                                                  stor10 = 1\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_256:\n                                              if 100 * 10^18 > stor13:\n              else:\n                  plyr_[ext_call.return_data[0]].field_1280 = ext_call.return_data[0]\n                  if not _affCode:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              stor10 = 1\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor8:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                  else:\n                      if _affCode == pIDxAddr_[caller]:\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if stor10:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      stor10 = 1\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if stor8:\n                                      if block.timestamp <= stor9:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if not stor10:\n                                              stor10 = 1\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                      else:\n                          if _affCode == plyr_[stor3[caller]].field_1280:\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if stor8:\n                                          if block.timestamp <= stor9:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                          else:\n                                              if not stor10:\n                                                  stor10 = 1\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_256:\n                                              if 100 * 10^18 > stor13:\n                          else:\n                              plyr_[stor3[caller]].field_1280 = _affCode\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                                      else:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if not stor8:\n                                          if plyrRnds_[stor3[caller]].field_256:\n                                      else:\n                                          if block.timestamp > stor9:\n                                              if not stor10:\n                                                  stor10 = 1\n      else:\n          pIDxName_[ext_call.return_data[0]] = ext_call.return_data[0]\n          plyr_[ext_call.return_data[0]].field_256 = ext_call.return_data[0]\n          stor7[ext_call.return_data[0]][ext_call.return_data[0]] = 1\n          if not ext_call.return_data[0]:\n              if not _affCode:\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                  else:\n                      if block.timestamp <= stor9:\n                          if plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value > 10^9:\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                      else:\n                          if not stor8:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if not stor10:\n                                      stor10 = 1\n                                  else:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n              else:\n                  if _affCode == pIDxAddr_[caller]:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              stor10 = 1\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor8:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                  else:\n                      if _affCode == plyr_[stor3[caller]].field_1280:\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  stor10 = 1\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if stor8:\n                                      if block.timestamp <= stor9:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                                      else:\n                                          if stor10:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                          else:\n                                              stor10 = 1\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                      else:\n                          plyr_[stor3[caller]].field_1280 = _affCode\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if stor10:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      stor10 = 1\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if stor8:\n                                      if block.timestamp <= stor9:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if not stor10:\n                                              stor10 = 1\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n          else:\n              if ext_call.return_data[0] == ext_call.return_data[0]:\n                  if not _affCode:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              stor10 = 1\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor8:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                  else:\n                      if _affCode == pIDxAddr_[caller]:\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if stor10:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      stor10 = 1\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if stor8:\n                                      if block.timestamp <= stor9:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if not stor10:\n                                              stor10 = 1\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                      else:\n                          if _affCode == plyr_[stor3[caller]].field_1280:\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if stor8:\n                                          if block.timestamp <= stor9:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                          else:\n                                              if not stor10:\n                                                  stor10 = 1\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_256:\n                                              if 100 * 10^18 > stor13:\n                          else:\n                              plyr_[stor3[caller]].field_1280 = _affCode\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                                      else:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if not stor8:\n                                          if plyrRnds_[stor3[caller]].field_256:\n                                      else:\n                                          if block.timestamp > stor9:\n                                              if not stor10:\n                                                  stor10 = 1\n              else:\n                  plyr_[ext_call.return_data[0]].field_1280 = ext_call.return_data[0]\n                  if not _affCode:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  stor10 = 1\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor8:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                  else:\n                      if _affCode == pIDxAddr_[caller]:\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if not stor10:\n                                      stor10 = 1\n                                  else:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if not stor8:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                  else:\n                                      if block.timestamp > stor9:\n                                          if not stor10:\n                                              stor10 = 1\n                      else:\n                          if _affCode == plyr_[stor3[caller]].field_1280:\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                                      else:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if not stor8:\n                                          if plyrRnds_[stor3[caller]].field_256:\n                                      else:\n                                          if block.timestamp > stor9:\n                                              if not stor10:\n                                                  stor10 = 1\n                          else:\n                              plyr_[stor3[caller]].field_1280 = _affCode\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                  else:\n                                      if stor8:\n                                          if block.timestamp > stor9:\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_256:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef buyXname(bytes32 _affCode) payable: \n  if bool(activated_) != 1:\n      revert with 0, 'yits not ready yet'\n  if ext_code.size(caller):\n      revert with 0, 'non smart contract address only'\n  if call.value < 10^9:\n      revert with 0, 'too little money'\n  if call.value > 100000 * 10^18:\n      revert with 0, 'too much money'\n  if pIDxAddr_[caller]:\n      if not _affCode:\n          if block.timestamp <= stor0 + stor11:\n              if block.timestamp <= stor9:\n                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                      revert with 0, 'SafeMath add failed'\n                  plyr_[stor3[caller]].field_768 += call.value\n                  stop\n              if stor10:\n                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                      revert with 0, 'SafeMath add failed'\n                  plyr_[stor3[caller]].field_768 += call.value\n                  stop\n              stor10 = 1\n              if not stor14 + airDropPot_:\n                  if stor14 + airDropPot_:\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                          revert with 0, 'SafeMath mul failed'\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          require stor12\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require stor12\n              else:\n                  if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                      revert with 0, 'SafeMath mul failed'\n                  if not stor14 + airDropPot_:\n                      require stor12\n                  else:\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                          revert with 0, 'SafeMath mul failed'\n                      if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          require stor12\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n          else:\n              if block.timestamp <= stor9:\n                  if not plyrRnds_[stor3[caller]].field_256:\n                      if 100 * 10^18 <= stor13:\n                          if call.value <= 10^9:\n                              stop\n                          if stor13:\n                              if 10^18 * stor13 / stor13 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if 10^18 * stor13:\n                                  if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                      else:\n                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                              revert with 0, 'SafeMath add failed'\n                          if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                  revert with 0, 'SafeMath sub failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                  else:\n                      if 100 * 10^18 <= stor13:\n                          if call.value <= 10^9:\n                              stop\n                          if stor13:\n                              if 10^18 * stor13 / stor13 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if 10^18 * stor13:\n                                  if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                              revert with 0, 'SafeMath add failed'\n                          if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                  revert with 0, 'SafeMath sub failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                              if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > 10^9:\n              else:\n                  if stor8:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor14 + airDropPot_:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor14 + airDropPot_:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                  else:\n                      if not plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                      else:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n      else:\n          if _affCode == plyr_[stor3[caller]].field_256:\n              if block.timestamp <= stor0 + stor11:\n                  if block.timestamp <= stor9:\n                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 += call.value\n                      stop\n                  if stor10:\n                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 += call.value\n                      stop\n                  stor10 = 1\n                  if stor14 + airDropPot_:\n                      if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                          revert with 0, 'SafeMath mul failed'\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                          revert with 0, 'SafeMath mul failed'\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                      else:\n                  else:\n                      if not stor14 + airDropPot_:\n                          require stor12\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              require stor12\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n              else:\n                  if block.timestamp <= stor9:\n                      if not plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                  else:\n                      if stor8:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          stor10 = 1\n                          if stor14 + airDropPot_:\n                              if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                  revert with 0, 'SafeMath mul failed'\n                          if stor14 + airDropPot_:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n          else:\n              if pIDxName_[_affCode] == plyr_[stor3[caller]].field_1280:\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                          if not stor14 + airDropPot_:\n                              require stor12\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                          else:\n                      else:\n                          if not stor14 + airDropPot_:\n                              require stor12\n                          else:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  require stor12\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                  else:\n                      if block.timestamp <= stor9:\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                      else:\n                          if stor8:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              stor10 = 1\n                              if stor14 + airDropPot_:\n                                  if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                      revert with 0, 'SafeMath mul failed'\n                              if stor14 + airDropPot_:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if not plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if call.value <= 10^9:\n                                              stop\n                                          if stor13:\n                              else:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                              if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                          if call.value <= 10^9:\n                                              stop\n                                          if stor13:\n                                              if 10^18 * stor13 / stor13 != 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                              if 10^18 * stor13:\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n              else:\n                  plyr_[stor3[caller]].field_1280 = pIDxName_[_affCode]\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if not stor14 + airDropPot_:\n                          if not stor14 + airDropPot_:\n                              require stor12\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                          else:\n                      else:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor14 + airDropPot_:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                  else:\n                      if block.timestamp <= stor9:\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                      else:\n                          if stor8:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              stor10 = 1\n                              if stor14 + airDropPot_:\n                                  if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                      revert with 0, 'SafeMath mul failed'\n                              else:\n                              if stor14 + airDropPot_:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if not plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                          if call.value <= 10^9:\n                                              stop\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                          if call.value <= 10^9:\n                                              stop\n                                          if stor13:\n                                              if 10^18 * stor13 / stor13 != 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n  else:\n      require ext_code.size(0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf)\n      call 0x0089348bf4fb32c4cea21e4158b2d92ed9ee03cf.getPlayerID(address _addr) with:\n           gas gas_remaining wei\n          args caller\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 32\n      require ext_code.size(0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf)\n      call 0x0089348bf4fb32c4cea21e4158b2d92ed9ee03cf.getPlayerName(uint256 _pID) with:\n           gas gas_remaining wei\n          args ext_call.return_data[0]\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 32\n      require ext_code.size(0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf)\n      call 0x0089348bf4fb32c4cea21e4158b2d92ed9ee03cf.getPlayerLAff(uint256 _pID) with:\n           gas gas_remaining wei\n          args ext_call.return_data[0]\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 32\n      pIDxAddr_[caller] = ext_call.return_data[0]\n      plyr_[ext_call.return_data[0]].field_0 = caller\n      if not ext_call.return_data[0]:\n          if not ext_call.return_data[0]:\n              if not _affCode:\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                  else:\n                      if block.timestamp <= stor9:\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 > stor13:\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                      else:\n                          if stor8:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if stor10:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      stor10 = 1\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n              else:\n                  if _affCode == plyr_[stor3[caller]].field_256:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          stor10 = 1\n                          if stor14 + airDropPot_:\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value > 10^9:\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                          else:\n                              if not stor8:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                                      else:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                  else:\n                      if pIDxName_[_affCode] == plyr_[stor3[caller]].field_1280:\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              stor10 = 1\n                              if stor14 + airDropPot_:\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 <= stor13:\n                                          if call.value > 10^9:\n                                      else:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                              else:\n                                  if not stor8:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if block.timestamp <= stor9:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                                      else:\n                                          if not stor10:\n                                              stor10 = 1\n                                          else:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                              plyr_[stor3[caller]].field_768 += call.value\n                      else:\n                          plyr_[stor3[caller]].field_1280 = pIDxName_[_affCode]\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  stor10 = 1\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if stor8:\n                                      if block.timestamp <= stor9:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                                      else:\n                                          if stor10:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                          else:\n                                              stor10 = 1\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n          else:\n              if ext_call.return_data[0] == ext_call.return_data[0]:\n                  if not _affCode:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          stor10 = 1\n                          if stor14 + airDropPot_:\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value > 10^9:\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                          else:\n                              if not stor8:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                                      else:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                  else:\n                      if _affCode == plyr_[stor3[caller]].field_256:\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  stor10 = 1\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if stor8:\n                                      if block.timestamp <= stor9:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                                      else:\n                                          if stor10:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                          else:\n                                              stor10 = 1\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                      else:\n                          if pIDxName_[_affCode] == plyr_[stor3[caller]].field_1280:\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                      stop\n                                  if stor10:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      stor10 = 1\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if stor8:\n                                          if block.timestamp <= stor9:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                              plyr_[stor3[caller]].field_768 += call.value\n                                          else:\n                                              if stor10:\n                                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                      revert with 0, 'SafeMath add failed'\n                                              else:\n                                                  stor10 = 1\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_256:\n                                              if 100 * 10^18 > stor13:\n                                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                      revert with 0, 'SafeMath add failed'\n                          else:\n                              plyr_[stor3[caller]].field_1280 = pIDxName_[_affCode]\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if stor8:\n                                          if block.timestamp <= stor9:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                          else:\n                                              if not stor10:\n                                                  stor10 = 1\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_256:\n                                              if 100 * 10^18 > stor13:\n              else:\n                  plyr_[ext_call.return_data[0]].field_1280 = ext_call.return_data[0]\n                  if not _affCode:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              stor10 = 1\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor8:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                  else:\n                      if _affCode == plyr_[stor3[caller]].field_256:\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if stor10:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      stor10 = 1\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if stor8:\n                                      if block.timestamp <= stor9:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if not stor10:\n                                              stor10 = 1\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                      else:\n                          if pIDxName_[_affCode] == plyr_[stor3[caller]].field_1280:\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if stor8:\n                                          if block.timestamp <= stor9:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                          else:\n                                              if not stor10:\n                                                  stor10 = 1\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_256:\n                                              if 100 * 10^18 > stor13:\n                          else:\n                              plyr_[stor3[caller]].field_1280 = pIDxName_[_affCode]\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                                      else:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if not stor8:\n                                          if plyrRnds_[stor3[caller]].field_256:\n                                      else:\n                                          if block.timestamp > stor9:\n                                              if not stor10:\n                                                  stor10 = 1\n      else:\n          pIDxName_[ext_call.return_data[0]] = ext_call.return_data[0]\n          plyr_[ext_call.return_data[0]].field_256 = ext_call.return_data[0]\n          stor7[ext_call.return_data[0]][ext_call.return_data[0]] = 1\n          if not ext_call.return_data[0]:\n              if not _affCode:\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                  else:\n                      if block.timestamp <= stor9:\n                          if plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value > 10^9:\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                      else:\n                          if not stor8:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if not stor10:\n                                      stor10 = 1\n                                  else:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n              else:\n                  if _affCode == plyr_[stor3[caller]].field_256:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              stor10 = 1\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor8:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                  else:\n                      if pIDxName_[_affCode] == plyr_[stor3[caller]].field_1280:\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  stor10 = 1\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if stor8:\n                                      if block.timestamp <= stor9:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                                      else:\n                                          if stor10:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                          else:\n                                              stor10 = 1\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                      else:\n                          plyr_[stor3[caller]].field_1280 = pIDxName_[_affCode]\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if stor10:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      stor10 = 1\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if stor8:\n                                      if block.timestamp <= stor9:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if not stor10:\n                                              stor10 = 1\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n          else:\n              if ext_call.return_data[0] == ext_call.return_data[0]:\n                  if not _affCode:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              stor10 = 1\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor8:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                  else:\n                      if _affCode == plyr_[stor3[caller]].field_256:\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if stor10:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      stor10 = 1\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if stor8:\n                                      if block.timestamp <= stor9:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          if not stor10:\n                                              stor10 = 1\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                      else:\n                          if pIDxName_[_affCode] == plyr_[stor3[caller]].field_1280:\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if stor8:\n                                          if block.timestamp <= stor9:\n                                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                                  revert with 0, 'SafeMath add failed'\n                                          else:\n                                              if not stor10:\n                                                  stor10 = 1\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_256:\n                                              if 100 * 10^18 > stor13:\n                          else:\n                              plyr_[stor3[caller]].field_1280 = pIDxName_[_affCode]\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                                      else:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if not stor8:\n                                          if plyrRnds_[stor3[caller]].field_256:\n                                      else:\n                                          if block.timestamp > stor9:\n                                              if not stor10:\n                                                  stor10 = 1\n              else:\n                  plyr_[ext_call.return_data[0]].field_1280 = ext_call.return_data[0]\n                  if not _affCode:\n                      if block.timestamp <= stor0 + stor11:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  stor10 = 1\n                      else:\n                          if block.timestamp <= stor9:\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor8:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                  else:\n                      if _affCode == plyr_[stor3[caller]].field_256:\n                          if block.timestamp <= stor0 + stor11:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if not stor10:\n                                      stor10 = 1\n                                  else:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                          else:\n                              if block.timestamp <= stor9:\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if not stor8:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                  else:\n                                      if block.timestamp > stor9:\n                                          if not stor10:\n                                              stor10 = 1\n                      else:\n                          if pIDxName_[_affCode] == plyr_[stor3[caller]].field_1280:\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if not stor10:\n                                          stor10 = 1\n                                      else:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 += call.value\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if not stor8:\n                                          if plyrRnds_[stor3[caller]].field_256:\n                                      else:\n                                          if block.timestamp > stor9:\n                                              if not stor10:\n                                                  stor10 = 1\n                          else:\n                              plyr_[stor3[caller]].field_1280 = pIDxName_[_affCode]\n                              if block.timestamp <= stor0 + stor11:\n                                  if block.timestamp <= stor9:\n                                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 += call.value\n                                  else:\n                                      if stor10:\n                                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                      else:\n                                          stor10 = 1\n                              else:\n                                  if block.timestamp <= stor9:\n                                      if plyrRnds_[stor3[caller]].field_256:\n                                          if 100 * 10^18 > stor13:\n                                  else:\n                                      if stor8:\n                                          if block.timestamp > stor9:\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_256:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef _fallback(?) payable: # default function\n  if bool(activated_) != 1:\n      revert with 0, 'yits not ready yet'\n  if ext_code.size(caller):\n      revert with 0, 'non smart contract address only'\n  if call.value < 10^9:\n      revert with 0, 'too little money'\n  if call.value > 100000 * 10^18:\n      revert with 0, 'too much money'\n  if pIDxAddr_[caller]:\n      if block.timestamp > stor0 + stor11:\n          if block.timestamp <= stor9:\n              if not plyrRnds_[stor3[caller]].field_256:\n                  if 100 * 10^18 <= stor13:\n                      if call.value <= 10^9:\n                          stop\n                      if stor13:\n                          if 10^18 * stor13 / stor13 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if 10^18 * stor13:\n                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                  revert with 0, 'SafeMath add failed'\n                              if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2 >= (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000:\n                                  if 74999921875000 * 10^18 > (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  require (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2\n                                  if ((312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2) + ((312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2) < (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2:\n                                      revert with 0, 'SafeMath add failed'\n                  else:\n                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                          revert with 0, 'SafeMath add failed'\n                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                          if call.value <= 10^9:\n                              stop\n                          if stor13:\n                              if 10^18 * stor13 / stor13 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if 10^18 * stor13:\n                                  if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                              revert with 0, 'SafeMath sub failed'\n                          if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 <= 10^9:\n                              stop\n                          if stor13:\n                              if 10^18 * stor13 / stor13 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if 10^18 * stor13:\n                                  if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n              else:\n                  if 100 * 10^18 <= stor13:\n                      if call.value <= 10^9:\n                          stop\n                      if stor13:\n                          if 10^18 * stor13 / stor13 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if 10^18 * stor13:\n                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                          revert with 0, 'SafeMath add failed'\n                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                          if call.value <= 10^9:\n                              stop\n                          if stor13:\n                              if 10^18 * stor13 / stor13 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if 10^18 * stor13:\n                                  if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                      revert with 0, 'SafeMath add failed'\n                                  if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2 >= (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000:\n                                      if 74999921875000 * 10^18 > (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      require (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2\n                                      if ((312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2) + ((312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2) < (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2:\n                                          revert with 0, 'SafeMath add failed'\n                      else:\n                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                              revert with 0, 'SafeMath sub failed'\n                          if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 <= 10^9:\n                              stop\n                          if stor13:\n                              if 10^18 * stor13 / stor13 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if 10^18 * stor13:\n                                  if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                      revert with 0, 'SafeMath add failed'\n          else:\n              if stor8:\n                  if block.timestamp <= stor9:\n                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 += call.value\n                      stop\n                  if stor10:\n                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 += call.value\n                      stop\n                  stor10 = 1\n                  if not stor14 + airDropPot_:\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if not 0 / stor12:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                          else:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                          else:\n                              require stor12\n                              if not 0 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 <= 0:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                  else:\n                      if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                          revert with 0, 'SafeMath mul failed'\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if not 0 / stor12:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 <= 0:\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              require stor12\n                              if 0 / stor12:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                          else:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n              else:\n                  if not plyrRnds_[stor3[caller]].field_256:\n                      if 100 * 10^18 <= stor13:\n                          if call.value <= 10^9:\n                              stop\n                          if not stor13:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if 10^18 * stor13 / stor13 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if not 10^18 * stor13:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                              revert with 0, 'SafeMath add failed'\n                          if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2 >= (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                          revert with 0, 'SafeMath add failed'\n                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                          if call.value <= 10^9:\n                              stop\n                          if stor13:\n                              if 10^18 * stor13 / stor13 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if 10^18 * stor13:\n                                  if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                              revert with 0, 'SafeMath sub failed'\n                          if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 <= 10^9:\n                              stop\n                          if stor13:\n                              if 10^18 * stor13 / stor13 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                  else:\n                      if 100 * 10^18 <= stor13:\n                          if call.value <= 10^9:\n                              stop\n                          if stor13:\n                              if 10^18 * stor13 / stor13 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              if 10^18 * stor13:\n                                  if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                              revert with 0, 'SafeMath add failed'\n                          if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                          revert with 0, 'SafeMath add failed'\n                                      if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2 < (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000:\n                                          require (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2\n                          else:\n                              if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                  revert with 0, 'SafeMath sub failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                              if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                          revert with 0, 'SafeMath add failed'\n      else:\n          if block.timestamp <= stor9:\n              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                  revert with 0, 'SafeMath add failed'\n              plyr_[stor3[caller]].field_768 += call.value\n              stop\n          if stor10:\n              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                  revert with 0, 'SafeMath add failed'\n              plyr_[stor3[caller]].field_768 += call.value\n              stop\n          stor10 = 1\n          if not stor14 + airDropPot_:\n              if not stor14 + airDropPot_:\n                  require stor12\n                  if not 0 / stor12:\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if ext_call.success:\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                      else:\n                          if stor14 + airDropPot_ / 10 < 0:\n                              revert with 0, 'SafeMath add failed'\n                  else:\n                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                          revert with 0, 'SafeMath mul failed'\n                      if stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n              else:\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                      revert with 0, 'SafeMath mul failed'\n                  if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      require stor12\n                      if 0 / stor12:\n                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < stor14 + airDropPot_ / 10:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                              if not ext_call.success:\n                  else:\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      require stor12\n                      if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > 0:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n          else:\n              if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                  revert with 0, 'SafeMath mul failed'\n              if not stor14 + airDropPot_:\n                  require stor12\n                  if not 0 / stor12:\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                  else:\n                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                          revert with 0, 'SafeMath mul failed'\n                      if stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n              else:\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                      revert with 0, 'SafeMath mul failed'\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      require stor12\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) <= 0:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                      else:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                  else:\n                      require stor12\n                      if not 0 / stor12:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n  else:\n      require ext_code.size(0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf)\n      call 0x0089348bf4fb32c4cea21e4158b2d92ed9ee03cf.getPlayerID(address _addr) with:\n           gas gas_remaining wei\n          args caller\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 32\n      require ext_code.size(0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf)\n      call 0x0089348bf4fb32c4cea21e4158b2d92ed9ee03cf.getPlayerName(uint256 _pID) with:\n           gas gas_remaining wei\n          args ext_call.return_data[0]\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 32\n      require ext_code.size(0x89348bf4fb32c4cea21e4158b2d92ed9ee03cf)\n      call 0x0089348bf4fb32c4cea21e4158b2d92ed9ee03cf.getPlayerLAff(uint256 _pID) with:\n           gas gas_remaining wei\n          args ext_call.return_data[0]\n      if not ext_call.success:\n          revert with ext_call.return_data[0 len return_data.size]\n      require return_data.size >= 32\n      pIDxAddr_[caller] = ext_call.return_data[0]\n      plyr_[ext_call.return_data[0]].field_0 = caller\n      if not ext_call.return_data[0]:\n          if not ext_call.return_data[0]:\n              if block.timestamp <= stor0 + stor11:\n                  if block.timestamp <= stor9:\n                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 += call.value\n                      stop\n                  if stor10:\n                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 += call.value\n                      stop\n                  stor10 = 1\n                  if not stor14 + airDropPot_:\n                      if stor14 + airDropPot_:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require stor12\n                  else:\n                      if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                          revert with 0, 'SafeMath mul failed'\n                      if not stor14 + airDropPot_:\n                          require stor12\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              require stor12\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n              else:\n                  if block.timestamp <= stor9:\n                      if not plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                      else:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 <= 10^9:\n                                      stop\n                  else:\n                      if stor8:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          stor10 = 1\n                          if stor14 + airDropPot_:\n                              if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor14 + airDropPot_:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if stor14 + airDropPot_:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      else:\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n          else:\n              if ext_call.return_data[0] == ext_call.return_data[0]:\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                          if not stor14 + airDropPot_:\n                              require stor12\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                          else:\n                      else:\n                          if not stor14 + airDropPot_:\n                              require stor12\n                          else:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  require stor12\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                  else:\n                      if block.timestamp <= stor9:\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                      else:\n                          if stor8:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              stor10 = 1\n                              if stor14 + airDropPot_:\n                                  if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                      revert with 0, 'SafeMath mul failed'\n                              if stor14 + airDropPot_:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if not plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if call.value <= 10^9:\n                                              stop\n                                          if stor13:\n                              else:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                              if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                                  revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                          if call.value <= 10^9:\n                                              stop\n                                          if stor13:\n                                              if 10^18 * stor13 / stor13 != 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                              if 10^18 * stor13:\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n              else:\n                  plyr_[ext_call.return_data[0]].field_1280 = ext_call.return_data[0]\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if not stor14 + airDropPot_:\n                          if not stor14 + airDropPot_:\n                              require stor12\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                          else:\n                      else:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor14 + airDropPot_:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                  else:\n                      if block.timestamp <= stor9:\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                      else:\n                          if stor8:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              stor10 = 1\n                              if stor14 + airDropPot_:\n                                  if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                      revert with 0, 'SafeMath mul failed'\n                              else:\n                              if stor14 + airDropPot_:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if not plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                          if call.value <= 10^9:\n                                              stop\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                          if call.value <= 10^9:\n                                              stop\n                                          if stor13:\n                                              if 10^18 * stor13 / stor13 != 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n      else:\n          pIDxName_[ext_call.return_data[0]] = ext_call.return_data[0]\n          plyr_[ext_call.return_data[0]].field_256 = ext_call.return_data[0]\n          stor7[ext_call.return_data[0]][ext_call.return_data[0]] = 1\n          if not ext_call.return_data[0]:\n              if block.timestamp <= stor0 + stor11:\n                  if block.timestamp <= stor9:\n                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 += call.value\n                      stop\n                  if stor10:\n                      if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 += call.value\n                      stop\n                  stor10 = 1\n                  if stor14 + airDropPot_:\n                      if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                          revert with 0, 'SafeMath mul failed'\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                          revert with 0, 'SafeMath mul failed'\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                      else:\n                  else:\n                      if not stor14 + airDropPot_:\n                          require stor12\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              require stor12\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n              else:\n                  if block.timestamp <= stor9:\n                      if not plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if 100 * 10^18 <= stor13:\n                              if call.value <= 10^9:\n                                  stop\n                              if stor13:\n                                  if 10^18 * stor13 / stor13 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if 10^18 * stor13:\n                                      if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                  else:\n                      if stor8:\n                          if block.timestamp <= stor9:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          if stor10:\n                              if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 += call.value\n                              stop\n                          stor10 = 1\n                          if stor14 + airDropPot_:\n                              if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                  revert with 0, 'SafeMath mul failed'\n                          if stor14 + airDropPot_:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n          else:\n              if ext_call.return_data[0] == ext_call.return_data[0]:\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if not stor14 + airDropPot_:\n                          if not stor14 + airDropPot_:\n                              require stor12\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                          else:\n                      else:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor14 + airDropPot_:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                  else:\n                      if block.timestamp <= stor9:\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                      else:\n                          if stor8:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              stor10 = 1\n                              if stor14 + airDropPot_:\n                                  if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                      revert with 0, 'SafeMath mul failed'\n                              else:\n                              if stor14 + airDropPot_:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if not plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                          if call.value <= 10^9:\n                                              stop\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                          if call.value <= 10^9:\n                                              stop\n                                          if stor13:\n                                              if 10^18 * stor13 / stor13 != 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n              else:\n                  plyr_[ext_call.return_data[0]].field_1280 = ext_call.return_data[0]\n                  if block.timestamp <= stor0 + stor11:\n                      if block.timestamp <= stor9:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      if stor10:\n                          if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 += call.value\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor14 + airDropPot_:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor14 + airDropPot_:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                  else:\n                      if block.timestamp <= stor9:\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if call.value <= 10^9:\n                                      stop\n                                  if stor13:\n                                      if 10^18 * stor13 / stor13 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * stor13:\n                                          if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * stor13) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * stor13:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                  else:\n                                      if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n                      else:\n                          if stor8:\n                              if block.timestamp <= stor9:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              if stor10:\n                                  if call.value + plyr_[stor3[caller]].field_768 < plyr_[stor3[caller]].field_768:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 += call.value\n                                  stop\n                              stor10 = 1\n                              if stor14 + airDropPot_:\n                                  if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                      revert with 0, 'SafeMath mul failed'\n                              if stor14 + airDropPot_:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              if not plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                          if call.value <= 10^9:\n                                              stop\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 100 * 10^18 <= stor13:\n                                      if call.value <= 10^9:\n                                          stop\n                                      if stor13:\n                                          if 10^18 * stor13 / stor13 != 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if 10^18 * stor13:\n                                              if 312500000000000000000000000 * 10^18 * stor13 / 10^18 * stor13 != 312500000 * 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                                          if call.value <= 10^9:\n                                              stop\n                                          if stor13:\n                                              if 10^18 * stor13 / stor13 != 10^18:\n                                                  revert with 0, 'SafeMath mul failed'\n                                      else:\n                                          if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if -plyrRnds_[stor3[caller]].field_0 + 10 * 10^18 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18 < plyr_[stor3[caller]].field_768:\n                                              revert with 0, 'SafeMath add failed'\n                                          plyr_[stor3[caller]].field_768 = call.value + plyrRnds_[stor3[caller]].field_0 + plyr_[stor3[caller]].field_768 - 10 * 10^18\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef reLoadXid(uint256 _affCode, uint256 _eth): # not payable\n  if bool(activated_) != 1:\n      revert with 0, 'yits not ready yet'\n  if ext_code.size(caller):\n      revert with 0, 'non smart contract address only'\n  if _eth < 10^9:\n      revert with 0, 'too little money'\n  if _eth > 100000 * 10^18:\n      revert with 0, 'too much money'\n  if not _affCode:\n      if block.timestamp <= stor0 + stor11:\n          if block.timestamp <= stor9:\n              stop\n          if stor10:\n              stop\n          stor10 = 1\n          if not stor14 + airDropPot_:\n              if not stor14 + airDropPot_:\n                  require stor12\n                  if not 0 / stor12:\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if ext_call.success:\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                      else:\n                          if stor14 + airDropPot_ / 10 < 0:\n                              revert with 0, 'SafeMath add failed'\n                  else:\n                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                          revert with 0, 'SafeMath mul failed'\n                      if stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n              else:\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                      revert with 0, 'SafeMath mul failed'\n                  if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      require stor12\n                      if 0 / stor12:\n                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < stor14 + airDropPot_ / 10:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                              if not ext_call.success:\n                  else:\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      require stor12\n                      if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > 0:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n          else:\n              if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                  revert with 0, 'SafeMath mul failed'\n              if not stor14 + airDropPot_:\n                  require stor12\n                  if not 0 / stor12:\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                  else:\n                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                          revert with 0, 'SafeMath mul failed'\n                      if stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n              else:\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                      revert with 0, 'SafeMath mul failed'\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      require stor12\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) <= 0:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                      else:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                  else:\n                      require stor12\n                      if not 0 / stor12:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n      else:\n          if block.timestamp <= stor9:\n              if stor15:\n                  if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                      revert with 0, 'SafeMath mul failed'\n                  if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                      revert with 0, 'SafeMath sub failed'\n                  if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if not plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 > stor13:\n                      else:\n                          if 100 * 10^18 <= stor13:\n                              if _eth <= 10^9:\n                                  stop\n                          else:\n                              if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if _eth + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                  else:\n                      if plyr_[stor3[caller]].field_768 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                      if plyrRnds_[stor3[caller]].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if plyrRnds_[stor3[caller]].field_256:\n              else:\n                  if plyrRnds_[stor3[caller]].field_512 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if not plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 > stor13:\n                              if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                      else:\n                          if 100 * 10^18 <= stor13:\n                              if _eth <= 10^9:\n                                  stop\n                              if stor13:\n                          else:\n                              if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if _eth + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                  else:\n                      if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                      if 0 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = 0\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 > stor13:\n          else:\n              if stor8:\n                  if block.timestamp <= stor9:\n                      stop\n                  if stor10:\n                      stop\n                  stor10 = 1\n                  if not stor14 + airDropPot_:\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if not 0 / stor12:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                          else:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                          else:\n                              require stor12\n                              if not 0 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 <= 0:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                  else:\n                      if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                          revert with 0, 'SafeMath mul failed'\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if not 0 / stor12:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 <= 0:\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              require stor12\n                              if 0 / stor12:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                          else:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n              else:\n                  if stor15:\n                      if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                          revert with 0, 'SafeMath mul failed'\n                      if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                          revert with 0, 'SafeMath sub failed'\n                      if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 > stor13:\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if plyr_[stor3[caller]].field_768 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                          if plyrRnds_[stor3[caller]].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                  else:\n                      if plyrRnds_[stor3[caller]].field_512 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if _eth > 10^9:\n                              else:\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                      else:\n                          if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                          if 0 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = 0\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n  else:\n      if _affCode == pIDxAddr_[caller]:\n          if block.timestamp <= stor0 + stor11:\n              if block.timestamp <= stor9:\n                  stop\n              if stor10:\n                  stop\n              stor10 = 1\n              if not stor14 + airDropPot_:\n                  if not stor14 + airDropPot_:\n                      require stor12\n                      if not 0 / stor12:\n                          if plyr_[stor8].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                             funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                             value stor14 + airDropPot_ / 10 wei\n                               gas gas_remaining wei\n                          if not ext_call.success:\n                      else:\n                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 0 / stor12 / 10^18 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -stor12 * 0 / stor12 / 10^18 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if plyr_[stor8].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                             funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                             value stor14 + airDropPot_ / 10 wei\n                               gas gas_remaining wei\n                  else:\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                          revert with 0, 'SafeMath mul failed'\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          require stor12\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) <= 0:\n                                  if plyr_[stor8].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if plyr_[stor8].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                     funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                     value stor14 + airDropPot_ / 10 wei\n                                       gas gas_remaining wei\n                      else:\n                          require stor12\n                          if not 0 / stor12:\n                              if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if plyr_[stor8].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                     funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                     value stor14 + airDropPot_ / 10 wei\n                                       gas gas_remaining wei\n                          else:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if plyr_[stor8].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                     funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                     value stor14 + airDropPot_ / 10 wei\n                                       gas gas_remaining wei\n              else:\n                  if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                      revert with 0, 'SafeMath mul failed'\n                  if not stor14 + airDropPot_:\n                      require stor12\n                      if 0 / stor12:\n                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 0 / stor12 / 10^18 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -stor12 * 0 / stor12 / 10^18 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                  else:\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                          revert with 0, 'SafeMath mul failed'\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          require stor12\n                          if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 <= 0:\n                                  if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > 0:\n                      else:\n                          require stor12\n                          if 0 / stor12:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) <= 0:\n                                  if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                                  call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                     funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                     value stor14 + airDropPot_ / 10 wei\n                                       gas gas_remaining wei\n          else:\n              if block.timestamp > stor9:\n                  if stor8:\n                      if block.timestamp <= stor9:\n                          stop\n                      if stor10:\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                          if not stor14 + airDropPot_:\n                              require stor12\n                              if 0 / stor12:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > 0:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  require stor12\n                                  if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                      if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  require stor12\n                                  if not 0 / stor12:\n                                      if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                      else:\n                          if not stor14 + airDropPot_:\n                              require stor12\n                              if not 0 / stor12:\n                                  if plyr_[stor8].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > 0:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -stor12 * 0 / stor12 / 10^18 <= 0:\n                          else:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  require stor12\n                                  if 0 / stor12:\n                                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              else:\n                                  if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  require stor12\n                                  if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                      if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                  else:\n                      if stor15:\n                          if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                              revert with 0, 'SafeMath mul failed'\n                          if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                          if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyr_[stor3[caller]].field_768 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                              if plyrRnds_[stor3[caller]].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      else:\n                          if plyrRnds_[stor3[caller]].field_512 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = 0\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n              else:\n                  if not stor15:\n                      if plyrRnds_[stor3[caller]].field_512 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 > stor13:\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if _eth <= 10^9:\n                                      stop\n                              else:\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                      else:\n                          if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                          if 0 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = 0\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n                  else:\n                      if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                          revert with 0, 'SafeMath mul failed'\n                      if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                          revert with 0, 'SafeMath sub failed'\n                      if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if _eth > 10^9:\n                              else:\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                      else:\n                          if plyr_[stor3[caller]].field_768 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                          if plyrRnds_[stor3[caller]].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n      else:\n          if _affCode == plyr_[stor3[caller]].field_1280:\n              if block.timestamp <= stor0 + stor11:\n                  if block.timestamp <= stor9:\n                      stop\n                  if stor10:\n                      stop\n                  stor10 = 1\n                  if not stor14 + airDropPot_:\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if not 0 / stor12:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                              if not ext_call.success:\n                          else:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) <= 0:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                         value stor14 + airDropPot_ / 10 wei\n                                           gas gas_remaining wei\n                          else:\n                              require stor12\n                              if not 0 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                         value stor14 + airDropPot_ / 10 wei\n                                           gas gas_remaining wei\n                              else:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                         value stor14 + airDropPot_ / 10 wei\n                                           gas gas_remaining wei\n                  else:\n                      if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                          revert with 0, 'SafeMath mul failed'\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if 0 / stor12:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                          if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                          call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                             funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                             value stor14 + airDropPot_ / 10 wei\n                               gas gas_remaining wei\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 <= 0:\n                                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > 0:\n                          else:\n                              require stor12\n                              if 0 / stor12:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) <= 0:\n                                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                         value stor14 + airDropPot_ / 10 wei\n                                           gas gas_remaining wei\n              else:\n                  if block.timestamp > stor9:\n                      if stor8:\n                          if block.timestamp <= stor9:\n                              stop\n                          if stor10:\n                              stop\n                          stor10 = 1\n                          if stor14 + airDropPot_:\n                              if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                  revert with 0, 'SafeMath mul failed'\n                              if not stor14 + airDropPot_:\n                                  require stor12\n                                  if 0 / stor12:\n                                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 0 / stor12 / 10^18 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require stor12\n                                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      require stor12\n                                      if not 0 / stor12:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                          else:\n                              if not stor14 + airDropPot_:\n                                  require stor12\n                                  if not 0 / stor12:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 0 / stor12 / 10^18 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -stor12 * 0 / stor12 / 10^18 <= 0:\n                              else:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      require stor12\n                                      if 0 / stor12:\n                                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                  else:\n                                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require stor12\n                                      if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                      else:\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                  else:\n                      if not stor15:\n                          if plyrRnds_[stor3[caller]].field_512 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if not plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                              else:\n                                  if 100 * 10^18 <= stor13:\n                                      if _eth <= 10^9:\n                                          stop\n                                  else:\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                          else:\n                              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = 0\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n                      else:\n                          if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                              revert with 0, 'SafeMath mul failed'\n                          if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                          if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if _eth > 10^9:\n                                  else:\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                          else:\n                              if plyr_[stor3[caller]].field_768 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                              if plyrRnds_[stor3[caller]].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n          else:\n              plyr_[stor3[caller]].field_1280 = _affCode\n              if block.timestamp <= stor0 + stor11:\n                  if block.timestamp <= stor9:\n                      stop\n                  if stor10:\n                      stop\n                  stor10 = 1\n                  if stor14 + airDropPot_:\n                      if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                          revert with 0, 'SafeMath mul failed'\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if 0 / stor12:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                          else:\n                              require stor12\n                              if not 0 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 <= 0:\n                                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                  else:\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if 0 / stor12:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                          if plyr_[stor8].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                             funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                             value stor14 + airDropPot_ / 10 wei\n                               gas gas_remaining wei\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 <= 0:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > 0:\n                          else:\n                              require stor12\n                              if 0 / stor12:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) <= 0:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                         value stor14 + airDropPot_ / 10 wei\n                                           gas gas_remaining wei\n              else:\n                  if block.timestamp > stor9:\n                      if stor8:\n                          if block.timestamp <= stor9:\n                              stop\n                          if stor10:\n                              stop\n                          stor10 = 1\n                          if not stor14 + airDropPot_:\n                              if not stor14 + airDropPot_:\n                                  require stor12\n                                  if 0 / stor12:\n                                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 0 / stor12 / 10^18 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require stor12\n                                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      require stor12\n                                      if not 0 / stor12:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                          else:\n                              if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                  revert with 0, 'SafeMath mul failed'\n                              if not stor14 + airDropPot_:\n                                  require stor12\n                                  if 0 / stor12:\n                                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 0 / stor12 / 10^18 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      require stor12\n                                      if 0 / stor12:\n                                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require stor12\n                                      if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                  else:\n                      if stor15:\n                          if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                              revert with 0, 'SafeMath mul failed'\n                          if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                          if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyr_[stor3[caller]].field_768 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                              if plyrRnds_[stor3[caller]].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      else:\n                          if plyrRnds_[stor3[caller]].field_512 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if _eth > 10^9:\n                                  else:\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                          else:\n                              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = 0\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef reLoadXaddr(address _affCode, uint256 _eth): # not payable\n  if bool(activated_) != 1:\n      revert with 0, 'yits not ready yet'\n  if ext_code.size(caller):\n      revert with 0, 'non smart contract address only'\n  if _eth < 10^9:\n      revert with 0, 'too little money'\n  if _eth > 100000 * 10^18:\n      revert with 0, 'too much money'\n  if not _affCode:\n      if block.timestamp <= stor0 + stor11:\n          if block.timestamp <= stor9:\n              stop\n          if stor10:\n              stop\n          stor10 = 1\n          if not stor14 + airDropPot_:\n              if not stor14 + airDropPot_:\n                  require stor12\n                  if not 0 / stor12:\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if ext_call.success:\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                      else:\n                          if stor14 + airDropPot_ / 10 < 0:\n                              revert with 0, 'SafeMath add failed'\n                  else:\n                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                          revert with 0, 'SafeMath mul failed'\n                      if stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n              else:\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                      revert with 0, 'SafeMath mul failed'\n                  if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      require stor12\n                      if 0 / stor12:\n                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < stor14 + airDropPot_ / 10:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                              if not ext_call.success:\n                  else:\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      require stor12\n                      if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > 0:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n          else:\n              if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                  revert with 0, 'SafeMath mul failed'\n              if not stor14 + airDropPot_:\n                  require stor12\n                  if not 0 / stor12:\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                  else:\n                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                          revert with 0, 'SafeMath mul failed'\n                      if stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -stor12 * 0 / stor12 / 10^18 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n              else:\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                      revert with 0, 'SafeMath mul failed'\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      require stor12\n                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) <= 0:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                      else:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                  else:\n                      require stor12\n                      if not 0 / stor12:\n                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath sub failed'\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n      else:\n          if block.timestamp <= stor9:\n              if stor15:\n                  if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                      revert with 0, 'SafeMath mul failed'\n                  if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                      revert with 0, 'SafeMath sub failed'\n                  if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if not plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 > stor13:\n                      else:\n                          if 100 * 10^18 <= stor13:\n                              if _eth <= 10^9:\n                                  stop\n                          else:\n                              if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if _eth + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                  else:\n                      if plyr_[stor3[caller]].field_768 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                      if plyrRnds_[stor3[caller]].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if plyrRnds_[stor3[caller]].field_256:\n              else:\n                  if plyrRnds_[stor3[caller]].field_512 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if not plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 > stor13:\n                              if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                      else:\n                          if 100 * 10^18 <= stor13:\n                              if _eth <= 10^9:\n                                  stop\n                              if stor13:\n                          else:\n                              if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                  revert with 0, 'SafeMath add failed'\n                              if _eth + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                  if plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                                      revert with 0, 'SafeMath sub failed'\n                  else:\n                      if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                      if 0 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = 0\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                      if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath sub failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      if plyrRnds_[stor3[caller]].field_256:\n                          if 100 * 10^18 > stor13:\n          else:\n              if stor8:\n                  if block.timestamp <= stor9:\n                      stop\n                  if stor10:\n                      stop\n                  stor10 = 1\n                  if not stor14 + airDropPot_:\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if not 0 / stor12:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                          else:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                          else:\n                              require stor12\n                              if not 0 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 <= 0:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                  else:\n                      if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                          revert with 0, 'SafeMath mul failed'\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if not 0 / stor12:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 <= 0:\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              require stor12\n                              if 0 / stor12:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                          else:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n              else:\n                  if stor15:\n                      if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                          revert with 0, 'SafeMath mul failed'\n                      if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                          revert with 0, 'SafeMath sub failed'\n                      if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 > stor13:\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if plyr_[stor3[caller]].field_768 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                          if plyrRnds_[stor3[caller]].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                  else:\n                      if plyrRnds_[stor3[caller]].field_512 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if _eth > 10^9:\n                              else:\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                      else:\n                          if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                          if 0 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = 0\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n  else:\n      if caller == _affCode:\n          if block.timestamp <= stor0 + stor11:\n              if block.timestamp <= stor9:\n                  stop\n              if stor10:\n                  stop\n              stor10 = 1\n              if not stor14 + airDropPot_:\n                  if not stor14 + airDropPot_:\n                      require stor12\n                      if not 0 / stor12:\n                          if plyr_[stor8].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                             funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                             value stor14 + airDropPot_ / 10 wei\n                               gas gas_remaining wei\n                          if not ext_call.success:\n                      else:\n                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 0 / stor12 / 10^18 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -stor12 * 0 / stor12 / 10^18 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if plyr_[stor8].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                             funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                             value stor14 + airDropPot_ / 10 wei\n                               gas gas_remaining wei\n                  else:\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                          revert with 0, 'SafeMath mul failed'\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          require stor12\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) <= 0:\n                                  if plyr_[stor8].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if plyr_[stor8].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                     funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                     value stor14 + airDropPot_ / 10 wei\n                                       gas gas_remaining wei\n                      else:\n                          require stor12\n                          if not 0 / stor12:\n                              if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if plyr_[stor8].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                     funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                     value stor14 + airDropPot_ / 10 wei\n                                       gas gas_remaining wei\n                          else:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if plyr_[stor8].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                     funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                     value stor14 + airDropPot_ / 10 wei\n                                       gas gas_remaining wei\n              else:\n                  if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                      revert with 0, 'SafeMath mul failed'\n                  if not stor14 + airDropPot_:\n                      require stor12\n                      if 0 / stor12:\n                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                              revert with 0, 'SafeMath mul failed'\n                          if stor12 * 0 / stor12 / 10^18 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -stor12 * 0 / stor12 / 10^18 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                  else:\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                          revert with 0, 'SafeMath mul failed'\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          require stor12\n                          if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 <= 0:\n                                  if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > 0:\n                      else:\n                          require stor12\n                          if 0 / stor12:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) <= 0:\n                                  if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                                  call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                     funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                     value stor14 + airDropPot_ / 10 wei\n                                       gas gas_remaining wei\n          else:\n              if block.timestamp > stor9:\n                  if stor8:\n                      if block.timestamp <= stor9:\n                          stop\n                      if stor10:\n                          stop\n                      stor10 = 1\n                      if stor14 + airDropPot_:\n                          if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                              revert with 0, 'SafeMath mul failed'\n                          if not stor14 + airDropPot_:\n                              require stor12\n                              if 0 / stor12:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > 0:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  require stor12\n                                  if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                      if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  require stor12\n                                  if not 0 / stor12:\n                                      if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                      else:\n                          if not stor14 + airDropPot_:\n                              require stor12\n                              if not 0 / stor12:\n                                  if plyr_[stor8].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > 0:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if -stor12 * 0 / stor12 / 10^18 <= 0:\n                          else:\n                              if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                  revert with 0, 'SafeMath mul failed'\n                              if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                  require stor12\n                                  if 0 / stor12:\n                                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                              else:\n                                  if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                      revert with 0, 'SafeMath mul failed'\n                                  require stor12\n                                  if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                      if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                  else:\n                      if stor15:\n                          if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                              revert with 0, 'SafeMath mul failed'\n                          if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                          if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyr_[stor3[caller]].field_768 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                              if plyrRnds_[stor3[caller]].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      else:\n                          if plyrRnds_[stor3[caller]].field_512 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = 0\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n              else:\n                  if not stor15:\n                      if plyrRnds_[stor3[caller]].field_512 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if not plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 > stor13:\n                          else:\n                              if 100 * 10^18 <= stor13:\n                                  if _eth <= 10^9:\n                                      stop\n                              else:\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                      else:\n                          if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                          if 0 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = 0\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n                  else:\n                      if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                          revert with 0, 'SafeMath mul failed'\n                      if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                          revert with 0, 'SafeMath sub failed'\n                      if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n                              if 100 * 10^18 <= stor13:\n                                  if _eth > 10^9:\n                              else:\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if _eth + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                      else:\n                          if plyr_[stor3[caller]].field_768 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                          if plyrRnds_[stor3[caller]].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                          if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath sub failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          if plyrRnds_[stor3[caller]].field_256:\n      else:\n          if pIDxAddr_[address(_affCode)] == plyr_[stor3[caller]].field_1280:\n              if block.timestamp <= stor0 + stor11:\n                  if block.timestamp <= stor9:\n                      stop\n                  if stor10:\n                      stop\n                  stor10 = 1\n                  if not stor14 + airDropPot_:\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if not 0 / stor12:\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                              if not ext_call.success:\n                          else:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if plyr_[stor8].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) <= 0:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                         value stor14 + airDropPot_ / 10 wei\n                                           gas gas_remaining wei\n                          else:\n                              require stor12\n                              if not 0 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                         value stor14 + airDropPot_ / 10 wei\n                                           gas gas_remaining wei\n                              else:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                         value stor14 + airDropPot_ / 10 wei\n                                           gas gas_remaining wei\n                  else:\n                      if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                          revert with 0, 'SafeMath mul failed'\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if 0 / stor12:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                          if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                          call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                             funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                             value stor14 + airDropPot_ / 10 wei\n                               gas gas_remaining wei\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 <= 0:\n                                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > 0:\n                          else:\n                              require stor12\n                              if 0 / stor12:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) <= 0:\n                                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                         value stor14 + airDropPot_ / 10 wei\n                                           gas gas_remaining wei\n              else:\n                  if block.timestamp > stor9:\n                      if stor8:\n                          if block.timestamp <= stor9:\n                              stop\n                          if stor10:\n                              stop\n                          stor10 = 1\n                          if stor14 + airDropPot_:\n                              if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                  revert with 0, 'SafeMath mul failed'\n                              if not stor14 + airDropPot_:\n                                  require stor12\n                                  if 0 / stor12:\n                                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 0 / stor12 / 10^18 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require stor12\n                                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      require stor12\n                                      if not 0 / stor12:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                          else:\n                              if not stor14 + airDropPot_:\n                                  require stor12\n                                  if not 0 / stor12:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 0 / stor12 / 10^18 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -stor12 * 0 / stor12 / 10^18 <= 0:\n                              else:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      require stor12\n                                      if 0 / stor12:\n                                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                  else:\n                                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require stor12\n                                      if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                      else:\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                  else:\n                      if not stor15:\n                          if plyrRnds_[stor3[caller]].field_512 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if not plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                              else:\n                                  if 100 * 10^18 <= stor13:\n                                      if _eth <= 10^9:\n                                          stop\n                                  else:\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 > 10 * 10^18:\n                          else:\n                              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = 0\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n                      else:\n                          if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                              revert with 0, 'SafeMath mul failed'\n                          if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                          if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if _eth > 10^9:\n                                  else:\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                          else:\n                              if plyr_[stor3[caller]].field_768 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                              if plyrRnds_[stor3[caller]].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n          else:\n              plyr_[stor3[caller]].field_1280 = pIDxAddr_[address(_affCode)]\n              if block.timestamp <= stor0 + stor11:\n                  if block.timestamp <= stor9:\n                      stop\n                  if stor10:\n                      stop\n                  stor10 = 1\n                  if stor14 + airDropPot_:\n                      if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                          revert with 0, 'SafeMath mul failed'\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if 0 / stor12:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                 value stor14 + airDropPot_ / 10 wei\n                                   gas gas_remaining wei\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                          else:\n                              require stor12\n                              if not 0 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 <= 0:\n                                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                  else:\n                      if not stor14 + airDropPot_:\n                          require stor12\n                          if 0 / stor12:\n                              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                  revert with 0, 'SafeMath mul failed'\n                              if stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -stor12 * 0 / stor12 / 10^18 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                          if plyr_[stor8].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                             funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                             value stor14 + airDropPot_ / 10 wei\n                               gas gas_remaining wei\n                      else:\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                              revert with 0, 'SafeMath mul failed'\n                          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                  revert with 0, 'SafeMath mul failed'\n                              require stor12\n                              if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 <= 0:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > 0:\n                          else:\n                              require stor12\n                              if 0 / stor12:\n                                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) <= 0:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if plyr_[stor8].field_512 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                                         value stor14 + airDropPot_ / 10 wei\n                                           gas gas_remaining wei\n              else:\n                  if block.timestamp > stor9:\n                      if stor8:\n                          if block.timestamp <= stor9:\n                              stop\n                          if stor10:\n                              stop\n                          stor10 = 1\n                          if not stor14 + airDropPot_:\n                              if not stor14 + airDropPot_:\n                                  require stor12\n                                  if 0 / stor12:\n                                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 0 / stor12 / 10^18 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require stor12\n                                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      require stor12\n                                      if not 0 / stor12:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                          else:\n                              if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n                                  revert with 0, 'SafeMath mul failed'\n                              if not stor14 + airDropPot_:\n                                  require stor12\n                                  if 0 / stor12:\n                                      if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if stor12 * 0 / stor12 / 10^18 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if not (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                      require stor12\n                                      if 0 / stor12:\n                                          if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      require stor12\n                                      if not 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                                          if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                                              revert with 0, 'SafeMath mul failed'\n                      else:\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                                  if plyrRnds_[stor3[caller]].field_256:\n                                      if 100 * 10^18 > stor13:\n                                          if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                  if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath sub failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                  else:\n                      if stor15:\n                          if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                              revert with 0, 'SafeMath mul failed'\n                          if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                          if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 > stor13:\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyr_[stor3[caller]].field_768 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                              if plyrRnds_[stor3[caller]].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                      else:\n                          if plyrRnds_[stor3[caller]].field_512 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n                                  if 100 * 10^18 <= stor13:\n                                      if _eth > 10^9:\n                                  else:\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 < plyrRnds_[stor3[caller]].field_0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if _eth + plyrRnds_[stor3[caller]].field_0 <= 10 * 10^18:\n                          else:\n                              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = 0\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                              if _eth > plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath sub failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 - _eth\n                              if plyrRnds_[stor3[caller]].field_256:\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef withdraw(): # not payable\n  if bool(activated_) != 1:\n      revert with 0, 'yits not ready yet'\n  if ext_code.size(caller):\n      revert with 0, 'non smart contract address only'\n  if block.timestamp <= stor9:\n      if not stor15:\n          if plyrRnds_[stor3[caller]].field_512 > 0:\n              revert with 0, 'SafeMath sub failed'\n          if -plyrRnds_[stor3[caller]].field_512 > 0:\n              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                  revert with 0, 'SafeMath add failed'\n              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                  revert with 0, 'SafeMath add failed'\n              plyrRnds_[stor3[caller]].field_512 = 0\n      else:\n          if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n              revert with 0, 'SafeMath mul failed'\n          if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n              revert with 0, 'SafeMath sub failed'\n          if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n              if plyr_[stor3[caller]].field_768 < 0:\n                  revert with 0, 'SafeMath add failed'\n              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n              if plyrRnds_[stor3[caller]].field_512 < 0:\n                  revert with 0, 'SafeMath add failed'\n              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n          revert with 0, 'SafeMath add failed'\n      if plyr_[stor3[caller]].field_1024 < 0:\n          revert with 0, 'SafeMath add failed'\n      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n          plyr_[stor3[caller]].field_512 = 0\n          plyr_[stor3[caller]].field_768 = 0\n          plyr_[stor3[caller]].field_1024 = 0\n          call plyr_[stor3[caller]].field_0 with:\n             value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n               gas 2300 * is_zero(value) wei\n          if not ext_call.success:\n              revert with ext_call.return_data[0 len return_data.size]\n      log onWithdraw(\n            uint256 playerID=caller,\n            address playerAddress=plyr_[stor3[caller]].field_256,\n            bytes32 playerName=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n            uint256 ethOut=block.timestamp,\n            uint256 timeStamp=pIDxAddr_[caller])\n      stop\n  if stor10:\n      if not stor15:\n          if plyrRnds_[stor3[caller]].field_512 > 0:\n              revert with 0, 'SafeMath sub failed'\n          if -plyrRnds_[stor3[caller]].field_512 > 0:\n              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                  revert with 0, 'SafeMath add failed'\n              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                  revert with 0, 'SafeMath add failed'\n              plyrRnds_[stor3[caller]].field_512 = 0\n      else:\n          if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n              revert with 0, 'SafeMath mul failed'\n          if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n              revert with 0, 'SafeMath sub failed'\n          if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n              if plyr_[stor3[caller]].field_768 < 0:\n                  revert with 0, 'SafeMath add failed'\n              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n              if plyrRnds_[stor3[caller]].field_512 < 0:\n                  revert with 0, 'SafeMath add failed'\n              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n          revert with 0, 'SafeMath add failed'\n      if plyr_[stor3[caller]].field_1024 < 0:\n          revert with 0, 'SafeMath add failed'\n      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n          plyr_[stor3[caller]].field_512 = 0\n          plyr_[stor3[caller]].field_768 = 0\n          plyr_[stor3[caller]].field_1024 = 0\n          call plyr_[stor3[caller]].field_0 with:\n             value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n               gas 2300 * is_zero(value) wei\n          if not ext_call.success:\n              revert with ext_call.return_data[0 len return_data.size]\n      log onWithdraw(\n            uint256 playerID=caller,\n            address playerAddress=plyr_[stor3[caller]].field_256,\n            bytes32 playerName=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n            uint256 ethOut=block.timestamp,\n            uint256 timeStamp=pIDxAddr_[caller])\n      stop\n  if not stor8:\n      if not stor15:\n          if plyrRnds_[stor3[caller]].field_512 > 0:\n              revert with 0, 'SafeMath sub failed'\n          if -plyrRnds_[stor3[caller]].field_512 > 0:\n              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                  revert with 0, 'SafeMath add failed'\n              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                  revert with 0, 'SafeMath add failed'\n              plyrRnds_[stor3[caller]].field_512 = 0\n      else:\n          if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n              revert with 0, 'SafeMath mul failed'\n          if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n              revert with 0, 'SafeMath sub failed'\n          if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n              if plyr_[stor3[caller]].field_768 < 0:\n                  revert with 0, 'SafeMath add failed'\n              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n              if plyrRnds_[stor3[caller]].field_512 < 0:\n                  revert with 0, 'SafeMath add failed'\n              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n          revert with 0, 'SafeMath add failed'\n      if plyr_[stor3[caller]].field_1024 < 0:\n          revert with 0, 'SafeMath add failed'\n      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n          plyr_[stor3[caller]].field_512 = 0\n          plyr_[stor3[caller]].field_768 = 0\n          plyr_[stor3[caller]].field_1024 = 0\n          call plyr_[stor3[caller]].field_0 with:\n             value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n               gas 2300 * is_zero(value) wei\n          if not ext_call.success:\n              revert with ext_call.return_data[0 len return_data.size]\n      log onWithdraw(\n            uint256 playerID=caller,\n            address playerAddress=plyr_[stor3[caller]].field_256,\n            bytes32 playerName=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n            uint256 ethOut=block.timestamp,\n            uint256 timeStamp=pIDxAddr_[caller])\n      stop\n  stor10 = 1\n  if not stor14 + airDropPot_:\n      if not stor14 + airDropPot_:\n          require stor12\n          if not 0 / stor12:\n              if plyr_[stor8].field_512 < 0:\n                  revert with 0, 'SafeMath add failed'\n              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                 value stor14 + airDropPot_ / 10 wei\n                   gas gas_remaining wei\n              if not ext_call.success:\n                  if stor14 + airDropPot_ / 10 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  if stor15 + (0 / stor12) < 0 / stor12:\n                      revert with 0, 'SafeMath add failed'\n                  stor15 += 0 / stor12\n                  if stor15:\n                      if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                          revert with 0, 'SafeMath mul failed'\n                      if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                          revert with 0, 'SafeMath sub failed'\n                      if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                          if plyr_[stor3[caller]].field_768 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                          if plyrRnds_[stor3[caller]].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                      else:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                              log onWithdrawAndDistribute(\n                                    address playerAddress=caller,\n                                    bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                    uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                    uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                    uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                    address winnerAddr=plyr_[stor8].field_0,\n                                    bytes32 winnerName=plyr_[stor8].field_256,\n                                    uint256 amountWon=0,\n                                    uint256 newPot=0,\n                                    uint256 genAmount=stor14 + airDropPot_ / 10)\n                              stop\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                          call plyr_[stor3[caller]].field_0 with:\n                             value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=0,\n                                uint256 newPot=0,\n                                uint256 genAmount=stor14 + airDropPot_ / 10)\n                  else:\n                      if plyrRnds_[stor3[caller]].field_512 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                              call plyr_[stor3[caller]].field_0 with:\n                                 value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=0,\n                                uint256 newPot=0,\n                                uint256 genAmount=stor14 + airDropPot_ / 10)\n                          stop\n                      if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                      if 0 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = 0\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n              else:\n                  if stor15 + (0 / stor12) < 0 / stor12:\n                      revert with 0, 'SafeMath add failed'\n                  stor15 += 0 / stor12\n                  if stor15:\n                      if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                          revert with 0, 'SafeMath mul failed'\n                      if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                          revert with 0, 'SafeMath sub failed'\n                      if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                              call plyr_[stor3[caller]].field_0 with:\n                                 value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=0,\n                                uint256 newPot=0,\n                                uint256 genAmount=0)\n                          stop\n                      if plyr_[stor3[caller]].field_768 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                      if plyrRnds_[stor3[caller]].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=0,\n                                uint256 newPot=0,\n                                uint256 genAmount=0)\n                      else:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                          call plyr_[stor3[caller]].field_0 with:\n                             value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                  else:\n                      if plyrRnds_[stor3[caller]].field_512 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                              call plyr_[stor3[caller]].field_0 with:\n                                 value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=0,\n                                uint256 newPot=0,\n                                uint256 genAmount=0)\n                          stop\n                      if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                      if 0 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = 0\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=0,\n                                uint256 newPot=0,\n                                uint256 genAmount=0)\n                          stop\n                      plyr_[stor3[caller]].field_512 = 0\n                      plyr_[stor3[caller]].field_768 = 0\n                      plyr_[stor3[caller]].field_1024 = 0\n                      call plyr_[stor3[caller]].field_0 with:\n                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      log onWithdrawAndDistribute(\n                            address playerAddress=caller,\n                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                            address winnerAddr=plyr_[stor8].field_0,\n                            bytes32 winnerName=plyr_[stor8].field_256,\n                            uint256 amountWon=0,\n                            uint256 newPot=0,\n                            uint256 genAmount=0)\n          else:\n              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                  revert with 0, 'SafeMath mul failed'\n              if stor12 * 0 / stor12 / 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              if -stor12 * 0 / stor12 / 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              if plyr_[stor8].field_512 < 0:\n                  revert with 0, 'SafeMath add failed'\n              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                 value stor14 + airDropPot_ / 10 wei\n                   gas gas_remaining wei\n              if not ext_call.success:\n                  if stor14 + airDropPot_ / 10 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  if stor15 + (0 / stor12) < 0 / stor12:\n                      revert with 0, 'SafeMath add failed'\n                  stor15 += 0 / stor12\n                  if not stor15:\n                      if plyrRnds_[stor3[caller]].field_512 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -plyrRnds_[stor3[caller]].field_512 > 0:\n                          if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                          if 0 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = 0\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                      else:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                              log onWithdrawAndDistribute(\n                                    address playerAddress=caller,\n                                    bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                    uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                    uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                    uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                    address winnerAddr=plyr_[stor8].field_0,\n                                    bytes32 winnerName=plyr_[stor8].field_256,\n                                    uint256 amountWon=0,\n                                    uint256 newPot=0,\n                                    uint256 genAmount=stor14 + airDropPot_ / 10)\n                              stop\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                          call plyr_[stor3[caller]].field_0 with:\n                             value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=0,\n                                uint256 newPot=0,\n                                uint256 genAmount=stor14 + airDropPot_ / 10)\n                  else:\n                      if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                          revert with 0, 'SafeMath mul failed'\n                      if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                          revert with 0, 'SafeMath sub failed'\n                      if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                          if plyr_[stor3[caller]].field_768 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                          if plyrRnds_[stor3[caller]].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                      else:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                              log onWithdrawAndDistribute(\n                                    address playerAddress=caller,\n                                    bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                    uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                    uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                    uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                    address winnerAddr=plyr_[stor8].field_0,\n                                    bytes32 winnerName=plyr_[stor8].field_256,\n                                    uint256 amountWon=0,\n                                    uint256 newPot=0,\n                                    uint256 genAmount=stor14 + airDropPot_ / 10)\n                              stop\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                          call plyr_[stor3[caller]].field_0 with:\n                             value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=0,\n                                uint256 newPot=0,\n                                uint256 genAmount=stor14 + airDropPot_ / 10)\n              else:\n                  if stor15 + (0 / stor12) < 0 / stor12:\n                      revert with 0, 'SafeMath add failed'\n                  stor15 += 0 / stor12\n                  if not stor15:\n                      if plyrRnds_[stor3[caller]].field_512 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                              call plyr_[stor3[caller]].field_0 with:\n                                 value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=0,\n                                uint256 newPot=0,\n                                uint256 genAmount=0)\n                          stop\n                      if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                      if 0 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = 0\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=0,\n                                uint256 newPot=0,\n                                uint256 genAmount=0)\n                      else:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                          call plyr_[stor3[caller]].field_0 with:\n                             value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                  else:\n                      if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                          revert with 0, 'SafeMath mul failed'\n                      if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                          revert with 0, 'SafeMath sub failed'\n                      if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                              call plyr_[stor3[caller]].field_0 with:\n                                 value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=0,\n                                uint256 newPot=0,\n                                uint256 genAmount=0)\n                          stop\n                      if plyr_[stor3[caller]].field_768 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                      if plyrRnds_[stor3[caller]].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=0,\n                                uint256 newPot=0,\n                                uint256 genAmount=0)\n                      else:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                          call plyr_[stor3[caller]].field_0 with:\n                             value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                               gas 2300 * is_zero(value) wei\n      else:\n          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n              revert with 0, 'SafeMath mul failed'\n          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              require stor12\n              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                      revert with 0, 'SafeMath mul failed'\n                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      revert with 0, 'SafeMath sub failed'\n                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > 0:\n                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          revert with 0, 'SafeMath sub failed'\n                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) + (stor14 + airDropPot_ / 10) < stor14 + airDropPot_ / 10:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) + (stor14 + airDropPot_ / 10) wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                      else:\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                  else:\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if (stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) < (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if not stor15:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=0,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                                  else:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=0,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                                  else:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                      else:\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if not stor15:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                  stop\n                              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = 0\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                  stop\n                              if plyr_[stor3[caller]].field_768 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                              if plyrRnds_[stor3[caller]].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n              else:\n                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      revert with 0, 'SafeMath sub failed'\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          revert with 0, 'SafeMath sub failed'\n                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < stor14 + airDropPot_ / 10:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if not stor15:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                      else:\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if not stor15:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                  else:\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if (stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) < (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=0,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                                  else:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=0,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                                      stop\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                                  call plyr_[stor3[caller]].field_0 with:\n                                     value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                      else:\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                  stop\n                              if plyr_[stor3[caller]].field_768 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                              if plyrRnds_[stor3[caller]].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                  stop\n                              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = 0\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                              else:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                                  call plyr_[stor3[caller]].field_0 with:\n                                     value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                       gas 2300 * is_zero(value) wei\n          else:\n              require stor12\n              if 0 / stor12:\n                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                      revert with 0, 'SafeMath mul failed'\n                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      revert with 0, 'SafeMath sub failed'\n                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          revert with 0, 'SafeMath sub failed'\n                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) + (stor14 + airDropPot_ / 10) < stor14 + airDropPot_ / 10:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) + (stor14 + airDropPot_ / 10) wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < stor12 * 0 / stor12 / 10^18:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if not stor15:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                      else:\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if not stor15:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                  else:\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if (stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) < (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=0,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                                  else:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=0,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                                      stop\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                                  call plyr_[stor3[caller]].field_0 with:\n                                     value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                      else:\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                  stop\n                              if plyr_[stor3[caller]].field_768 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                              if plyrRnds_[stor3[caller]].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                  stop\n                              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = 0\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                              else:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                                  call plyr_[stor3[caller]].field_0 with:\n                                     value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                       gas 2300 * is_zero(value) wei\n              else:\n                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      revert with 0, 'SafeMath sub failed'\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          revert with 0, 'SafeMath sub failed'\n                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < stor14 + airDropPot_ / 10:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                      else:\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=0,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=0)\n                                  else:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                  else:\n                      if plyr_[stor8].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if (stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) < (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if not stor15:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=0,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                                      stop\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                                  call plyr_[stor3[caller]].field_0 with:\n                                     value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=0,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                                      stop\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                                  call plyr_[stor3[caller]].field_0 with:\n                                     value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                      else:\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if not stor15:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                  stop\n                              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = 0\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                              else:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                                  call plyr_[stor3[caller]].field_0 with:\n                                     value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                  stop\n                              if plyr_[stor3[caller]].field_768 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                              if plyrRnds_[stor3[caller]].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=0,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                              else:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                                  call plyr_[stor3[caller]].field_0 with:\n                                     value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                       gas 2300 * is_zero(value) wei\n  else:\n      if (45 * stor14) + (45 * airDropPot_) / stor14 + airDropPot_ != 45:\n          revert with 0, 'SafeMath mul failed'\n      if not stor14 + airDropPot_:\n          require stor12\n          if not 0 / stor12:\n              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                  revert with 0, 'SafeMath add failed'\n              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                 value stor14 + airDropPot_ / 10 wei\n                   gas gas_remaining wei\n              if not ext_call.success:\n                  if stor14 + airDropPot_ / 10 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  if stor15 + (0 / stor12) < 0 / stor12:\n                      revert with 0, 'SafeMath add failed'\n                  stor15 += 0 / stor12\n                  if not stor15:\n                      if plyrRnds_[stor3[caller]].field_512 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -plyrRnds_[stor3[caller]].field_512 > 0:\n                          if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                          if 0 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = 0\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                      else:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                              log onWithdrawAndDistribute(\n                                    address playerAddress=caller,\n                                    bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                    uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                    uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                    uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                    address winnerAddr=plyr_[stor8].field_0,\n                                    bytes32 winnerName=plyr_[stor8].field_256,\n                                    uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                    uint256 newPot=0,\n                                    uint256 genAmount=stor14 + airDropPot_ / 10)\n                              stop\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                          call plyr_[stor3[caller]].field_0 with:\n                             value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                uint256 newPot=0,\n                                uint256 genAmount=stor14 + airDropPot_ / 10)\n                  else:\n                      if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                          revert with 0, 'SafeMath mul failed'\n                      if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                          revert with 0, 'SafeMath sub failed'\n                      if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                          if plyr_[stor3[caller]].field_768 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                          if plyrRnds_[stor3[caller]].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                      else:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                              log onWithdrawAndDistribute(\n                                    address playerAddress=caller,\n                                    bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                    uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                    uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                    uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                    address winnerAddr=plyr_[stor8].field_0,\n                                    bytes32 winnerName=plyr_[stor8].field_256,\n                                    uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                    uint256 newPot=0,\n                                    uint256 genAmount=stor14 + airDropPot_ / 10)\n                              stop\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                          call plyr_[stor3[caller]].field_0 with:\n                             value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                uint256 newPot=0,\n                                uint256 genAmount=stor14 + airDropPot_ / 10)\n              else:\n                  if stor15 + (0 / stor12) < 0 / stor12:\n                      revert with 0, 'SafeMath add failed'\n                  stor15 += 0 / stor12\n                  if not stor15:\n                      if plyrRnds_[stor3[caller]].field_512 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                              call plyr_[stor3[caller]].field_0 with:\n                                 value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                uint256 newPot=0,\n                                uint256 genAmount=0)\n                          stop\n                      if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                      if 0 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = 0\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                uint256 newPot=0,\n                                uint256 genAmount=0)\n                      else:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                          call plyr_[stor3[caller]].field_0 with:\n                             value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                  else:\n                      if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                          revert with 0, 'SafeMath mul failed'\n                      if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                          revert with 0, 'SafeMath sub failed'\n                      if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                              call plyr_[stor3[caller]].field_0 with:\n                                 value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                uint256 newPot=0,\n                                uint256 genAmount=0)\n                          stop\n                      if plyr_[stor3[caller]].field_768 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                      if plyrRnds_[stor3[caller]].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                uint256 newPot=0,\n                                uint256 genAmount=0)\n                      else:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                          call plyr_[stor3[caller]].field_0 with:\n                             value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                               gas 2300 * is_zero(value) wei\n          else:\n              if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                  revert with 0, 'SafeMath mul failed'\n              if stor12 * 0 / stor12 / 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              if -stor12 * 0 / stor12 / 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                  revert with 0, 'SafeMath add failed'\n              plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n              call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                 funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                 value stor14 + airDropPot_ / 10 wei\n                   gas gas_remaining wei\n              if not ext_call.success:\n                  if stor14 + airDropPot_ / 10 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  if stor15 + (0 / stor12) < 0 / stor12:\n                      revert with 0, 'SafeMath add failed'\n                  stor15 += 0 / stor12\n                  if stor15:\n                      if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                          revert with 0, 'SafeMath mul failed'\n                      if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                          revert with 0, 'SafeMath sub failed'\n                      if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                          if plyr_[stor3[caller]].field_768 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                          if plyrRnds_[stor3[caller]].field_512 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                      else:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                              log onWithdrawAndDistribute(\n                                    address playerAddress=caller,\n                                    bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                    uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                    uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                    uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                    address winnerAddr=plyr_[stor8].field_0,\n                                    bytes32 winnerName=plyr_[stor8].field_256,\n                                    uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                    uint256 newPot=0,\n                                    uint256 genAmount=stor14 + airDropPot_ / 10)\n                          else:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                              call plyr_[stor3[caller]].field_0 with:\n                                 value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                  else:\n                      if plyrRnds_[stor3[caller]].field_512 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -plyrRnds_[stor3[caller]].field_512 > 0:\n                          if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                          if 0 < -plyrRnds_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          plyrRnds_[stor3[caller]].field_512 = 0\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                      else:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                              log onWithdrawAndDistribute(\n                                    address playerAddress=caller,\n                                    bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                    uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                    uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                    uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                    address winnerAddr=plyr_[stor8].field_0,\n                                    bytes32 winnerName=plyr_[stor8].field_256,\n                                    uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                    uint256 newPot=0,\n                                    uint256 genAmount=stor14 + airDropPot_ / 10)\n                              stop\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                          call plyr_[stor3[caller]].field_0 with:\n                             value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                uint256 newPot=0,\n                                uint256 genAmount=stor14 + airDropPot_ / 10)\n              else:\n                  if stor15 + (0 / stor12) < 0 / stor12:\n                      revert with 0, 'SafeMath add failed'\n                  stor15 += 0 / stor12\n                  if stor15:\n                      if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                          revert with 0, 'SafeMath mul failed'\n                      if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                          revert with 0, 'SafeMath sub failed'\n                      if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                              call plyr_[stor3[caller]].field_0 with:\n                                 value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                uint256 newPot=0,\n                                uint256 genAmount=0)\n                          stop\n                      if plyr_[stor3[caller]].field_768 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                      if plyrRnds_[stor3[caller]].field_512 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                  else:\n                      if plyrRnds_[stor3[caller]].field_512 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n                              call plyr_[stor3[caller]].field_0 with:\n                                 value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                   gas 2300 * is_zero(value) wei\n                              if not ext_call.success:\n                                  revert with ext_call.return_data[0 len return_data.size]\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                uint256 newPot=0,\n                                uint256 genAmount=0)\n                          stop\n                      if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                      if 0 < -plyrRnds_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      plyrRnds_[stor3[caller]].field_512 = 0\n                      if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                          log onWithdrawAndDistribute(\n                                address playerAddress=caller,\n                                bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                address winnerAddr=plyr_[stor8].field_0,\n                                bytes32 winnerName=plyr_[stor8].field_256,\n                                uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                uint256 newPot=0,\n                                uint256 genAmount=0)\n                      else:\n                          plyr_[stor3[caller]].field_512 = 0\n                          plyr_[stor3[caller]].field_768 = 0\n                          plyr_[stor3[caller]].field_1024 = 0\n                          call plyr_[stor3[caller]].field_0 with:\n                             value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                               gas 2300 * is_zero(value) wei\n      else:\n          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / stor14 + airDropPot_ != potSplit_:\n              revert with 0, 'SafeMath mul failed'\n          if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 != 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              require stor12\n              if 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 != stor12:\n                      revert with 0, 'SafeMath mul failed'\n                  if stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      revert with 0, 'SafeMath sub failed'\n                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > 0:\n                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          revert with 0, 'SafeMath sub failed'\n                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) + (stor14 + airDropPot_ / 10) < stor14 + airDropPot_ / 10:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18) + (stor14 + airDropPot_ / 10) wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < stor12 * 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12 / 10^18:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                      else:\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if not stor15:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                  else:\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if (stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) < (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                                  else:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                      else:\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                      stop\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                                  call plyr_[stor3[caller]].field_0 with:\n                                     value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                  stop\n                              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = 0\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n              else:\n                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      revert with 0, 'SafeMath sub failed'\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          revert with 0, 'SafeMath sub failed'\n                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < stor14 + airDropPot_ / 10:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                      else:\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                  else:\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if (stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) < (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if not stor15:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                                  else:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                                  else:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                      else:\n                          if stor15 + (10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12) < 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 10^18 * (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 / stor12\n                          if not stor15:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                  stop\n                              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = 0\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                  stop\n                              if plyr_[stor3[caller]].field_768 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                              if plyrRnds_[stor3[caller]].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n          else:\n              require stor12\n              if 0 / stor12:\n                  if stor12 * 0 / stor12 / 0 / stor12 != stor12:\n                      revert with 0, 'SafeMath mul failed'\n                  if stor12 * 0 / stor12 / 10^18 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      revert with 0, 'SafeMath sub failed'\n                  if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > 0:\n                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          revert with 0, 'SafeMath sub failed'\n                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) + (stor14 + airDropPot_ / 10) < stor14 + airDropPot_ / 10:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) - (stor12 * 0 / stor12 / 10^18) + (stor14 + airDropPot_ / 10) wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < stor12 * 0 / stor12 / 10^18:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                      else:\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                  else:\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if (stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) < (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if not stor15:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                                  else:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                                  else:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                      else:\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if not stor15:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                  stop\n                              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = 0\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                  stop\n                              if plyr_[stor3[caller]].field_768 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                              if plyrRnds_[stor3[caller]].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                          if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                              plyr_[stor3[caller]].field_512 = 0\n                              plyr_[stor3[caller]].field_768 = 0\n                              plyr_[stor3[caller]].field_1024 = 0\n              else:\n                  if 0 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                      revert with 0, 'SafeMath sub failed'\n                  if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > 0:\n                      if (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100 > (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                          revert with 0, 'SafeMath sub failed'\n                      if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < stor14 + airDropPot_ / 10:\n                          revert with 0, 'SafeMath add failed'\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) + (stor14 + airDropPot_ / 10) < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if not stor15:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                      else:\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if not stor15:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                          else:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                  else:\n                      if plyr_[stor8].field_512 + ((45 * stor14) + (45 * airDropPot_) / 100) < (45 * stor14) + (45 * airDropPot_) / 100:\n                          revert with 0, 'SafeMath add failed'\n                      plyr_[stor8].field_512 += (45 * stor14) + (45 * airDropPot_) / 100\n                      call 0x5edbe4c6275be3b42a02fd77674d0a6e490e9aa0 with:\n                         funct Mask(32, 224, sha3(Mask(72, 0, 'deposit()'))) >> 224\n                         value stor14 + airDropPot_ / 10 wei\n                           gas gas_remaining wei\n                      if not ext_call.success:\n                          if (stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100) < (stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100:\n                              revert with 0, 'SafeMath add failed'\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                                  if plyrRnds_[stor3[caller]].field_512 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                                  else:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 > 0:\n                                  if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                                  if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  plyrRnds_[stor3[caller]].field_512 = 0\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              else:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                      log onWithdrawAndDistribute(\n                                            address playerAddress=caller,\n                                            bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                            uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                            uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                            uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                            address winnerAddr=plyr_[stor8].field_0,\n                                            bytes32 winnerName=plyr_[stor8].field_256,\n                                            uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                            uint256 newPot=0,\n                                            uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                                      stop\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                                  call plyr_[stor3[caller]].field_0 with:\n                                     value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                       gas 2300 * is_zero(value) wei\n                                  if not ext_call.success:\n                                      revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 + airDropPot_ / 10) + ((stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100))\n                      else:\n                          if stor15 + (0 / stor12) < 0 / stor12:\n                              revert with 0, 'SafeMath add failed'\n                          stor15 += 0 / stor12\n                          if stor15:\n                              if plyrRnds_[stor3[caller]].field_256 * stor15 / stor15 != plyrRnds_[stor3[caller]].field_256:\n                                  revert with 0, 'SafeMath mul failed'\n                              if plyrRnds_[stor3[caller]].field_512 > plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18:\n                                  revert with 0, 'SafeMath sub failed'\n                              if (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                  stop\n                              if plyr_[stor3[caller]].field_768 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 = plyr_[stor3[caller]].field_768 + (plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18) - plyrRnds_[stor3[caller]].field_512\n                              if plyrRnds_[stor3[caller]].field_512 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = plyrRnds_[stor3[caller]].field_256 * stor15 / 10^18\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                          else:\n                              if plyrRnds_[stor3[caller]].field_512 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -plyrRnds_[stor3[caller]].field_512 <= 0:\n                                  if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 > 0:\n                                      plyr_[stor3[caller]].field_512 = 0\n                                      plyr_[stor3[caller]].field_768 = 0\n                                      plyr_[stor3[caller]].field_1024 = 0\n                                      call plyr_[stor3[caller]].field_0 with:\n                                         value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                           gas 2300 * is_zero(value) wei\n                                      if not ext_call.success:\n                                          revert with ext_call.return_data[0 len return_data.size]\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                                  stop\n                              if plyr_[stor3[caller]].field_768 - plyrRnds_[stor3[caller]].field_512 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyr_[stor3[caller]].field_768 -= plyrRnds_[stor3[caller]].field_512\n                              if 0 < -plyrRnds_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              plyrRnds_[stor3[caller]].field_512 = 0\n                              if plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 < plyr_[stor3[caller]].field_512:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 <= 0:\n                                  log onWithdrawAndDistribute(\n                                        address playerAddress=caller,\n                                        bytes32 playerName=plyr_[stor3[caller]].field_256,\n                                        uint256 ethOut=plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512,\n                                        uint256 compressedData=(10^6 * stor9) + (10^18 * block.timestamp),\n                                        uint256 compressedIDs=(100000000 * 10^18 * stor8) + pIDxAddr_[caller],\n                                        address winnerAddr=plyr_[stor8].field_0,\n                                        bytes32 winnerName=plyr_[stor8].field_256,\n                                        uint256 amountWon=(45 * stor14) + (45 * airDropPot_) / 100,\n                                        uint256 newPot=0,\n                                        uint256 genAmount=(stor14 * potSplit_) + (airDropPot_ * potSplit_) / 100)\n                              else:\n                                  plyr_[stor3[caller]].field_512 = 0\n                                  plyr_[stor3[caller]].field_768 = 0\n                                  plyr_[stor3[caller]].field_1024 = 0\n                                  call plyr_[stor3[caller]].field_0 with:\n                                     value plyr_[stor3[caller]].field_1024 + plyr_[stor3[caller]].field_768 + plyr_[stor3[caller]].field_512 wei\n                                       gas 2300 * is_zero(value) wei\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n",
	"language": "Solidity",
	"status": "This model's maximum context length is 32768 tokens. However, your messages resulted in 263140 tokens. Please reduce the length of the messages."
}