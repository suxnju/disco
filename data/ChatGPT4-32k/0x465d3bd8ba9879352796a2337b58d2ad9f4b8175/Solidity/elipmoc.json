{
	"address": "0x465d3bd8ba9879352796a2337b58d2ad9f4b8175",
	"input_format": "DecompiledCode",
	"ir": "// Decompiled by library.dedaub.com\n// 2022.11.26 18:24 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) _tokenToLimit; // STORAGE[0x2]\nuint256 _owner; // STORAGE[0x0] bytes 0 to 19\nuint256 _paused; // STORAGE[0x3] bytes 0 to 0\nuint256 _edgelessCasino; // STORAGE[0x1] bytes 0 to 19\n\n// Events\nTransfer(address, address, uint256);\nWithdrawal(address, address, uint256);\n\nfunction edgelessCasino() public nonPayable { \n    return _edgelessCasino;\n}\n\nfunction pause() public nonPayable { \n    require(!_paused, Error('Contract is paused.'));\n    require(_edgelessCasino.code.size);\n    v0, v1 = _edgelessCasino.authorized(msg.sender).gas(msg.gas);\n    require(v0); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    require(v1, Error('Sender is not authorized.'));\n    _paused = 1;\n    emit 0xe2fb031ee032dc02d8011dc50b816eb450cf856abd8261680dac74f72165bd2(0xff & (0x1 | ~0xff & STORAGE[0x3]));\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction changeOwner(address varg0) public nonPayable { \n    require(msg.data.length - 4 >= 32);\n    require(msg.sender == _owner);\n    _owner = varg0;\n}\n\nfunction setTokenLimit(address varg0, uint256 varg1) public nonPayable { \n    require(msg.data.length - 4 >= 64);\n    require(msg.sender == _owner);\n    _tokenToLimit[varg0] = varg1;\n}\n\nfunction transfer(address varg0, address varg1, uint256 varg2) public nonPayable { \n    require(msg.data.length - 4 >= 96);\n    require(!_paused, Error('Contract is paused.'));\n    require(_edgelessCasino.code.size);\n    v0, v1 = _edgelessCasino.authorized(msg.sender).gas(msg.gas);\n    require(v0); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    require(v1, Error('Sender is not authorized.'));\n    v2 = v3 = !_tokenToLimit[varg0];\n    if (_tokenToLimit[varg0]) {\n        v2 = v4 = varg2 <= _tokenToLimit[varg0];\n    }\n    require(v2, Error('Amount exceeds transfer limit for asset.'));\n    v5 = 0x785(varg2, varg1, varg0);\n    if (v5) {\n        emit Transfer(varg0, varg1, varg2);\n    }\n    return v5;\n}\n\nfunction adminTransfer(address varg0, address varg1, uint256 varg2) public nonPayable { \n    require(msg.data.length - 4 >= 96);\n    require(msg.sender == _owner);\n    v0 = 0x785(varg2, varg1, varg0);\n    if (v0) {\n        emit Withdrawal(varg0, varg1, varg2);\n        goto 0xbd0x220;\n    }\n    return v0;\n}\n\nfunction 0x785(uint256 varg0, uint256 varg1, uint256 varg2) private { \n    require(address(varg1), Error('Please use valid receiver wallet address.'));\n    if (address(varg2)) {\n        v0 = address(varg2);\n        require(v0.code.size);\n        v1, v2 = v0.balanceOf(this).gas(msg.gas);\n        require(v1); // checks call status, propagates error data on error\n        require(RETURNDATASIZE() >= 32);\n        require(varg0 <= v2, Error('Asset balance is too small.'));\n        v3 = address(varg2);\n        v4 = address(varg1);\n        require(v3.code.size);\n        v5, v6 = v3.transfer(v4, varg0).gas(msg.gas);\n        require(v5); // checks call status, propagates error data on error\n        require(RETURNDATASIZE() >= 32);\n        return v6;\n    } else {\n        require(varg0 <= this.balance, Error('Eth balance is too small.'));\n        v7 = address(varg1).call().value(varg0).gas(2300 * !varg0);\n        assert(v7);\n        return v7;\n    }\n}\n\nfunction () public payable { \n}\n\nfunction activate() public nonPayable { \n    require(1 == _paused, Error('Contract is not paused.'));\n    require(msg.sender == _owner);\n    _paused = 0;\n    emit 0xe2fb031ee032dc02d8011dc50b816eb450cf856abd8261680dac74f72165bd2(0);\n}\n\nfunction paused() public nonPayable { \n    return _paused;\n}\n\nfunction tokenToLimit(address varg0) public nonPayable { \n    require(msg.data.length - 4 >= 32);\n    return _tokenToLimit[varg0];\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(bytes4 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (0x8da5cb5b > function_selector >> 224) {\n            if (0xf15f4c0 == function_selector >> 224) {\n                activate();\n            } else if (0x5c975abb == function_selector >> 224) {\n                paused();\n            } else if (0x78b92c1e == function_selector >> 224) {\n                tokenToLimit(address);\n            } else if (0x837b5c03 == function_selector >> 224) {\n                edgelessCasino();\n            } else if (0x8456cb59 == function_selector >> 224) {\n                pause();\n            }\n        } else if (0x8da5cb5b == function_selector >> 224) {\n            owner();\n        } else if (0xa6f9dae1 == function_selector >> 224) {\n            changeOwner(address);\n        } else if (0xbc017637 == function_selector >> 224) {\n            setTokenLimit(address,uint256);\n        } else if (0xbeabacc8 == function_selector >> 224) {\n            transfer(address,address,uint256);\n        } else if (0xda72c1e8 == function_selector >> 224) {\n            adminTransfer(address,address,uint256);\n        }\n    }\n    ();\n}\n",
	"language": "Solidity",
	"status": "Connection error."
}