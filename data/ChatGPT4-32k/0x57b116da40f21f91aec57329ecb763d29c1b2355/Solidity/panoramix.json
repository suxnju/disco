{
	"address": "0x57b116da40f21f91aec57329ecb763d29c1b2355",
	"input_format": "DecompiledCode",
	"ir": "# Palkeoramix decompiler. \n#\n#  I failed with these: \n#  - attackPlayer(address target)\n#  All the rest is below.\n#\n\nconst name = 'IdleEth'\nconst decimals = 0\nconst symbol = 'Goo'\n\ndef storage:\n  totalSupply is uint256 at storage 0\n  totalGooProduction is uint256 at storage 1\n  gameStarted is uint8 at storage 2 offset 160\n  owner is address at storage 2\n  researchDivPercent is uint256 at storage 3\n  gooDepositDivPercent is uint256 at storage 4\n  totalEtherGooResearchPool is uint256 at storage 5\n  stor6 is array of uint256 at storage 6\n  stor7 is array of uint256 at storage 7\n  stor8 is array of uint256 at storage 8\n  stor9 is array of uint256 at storage 9\n  nextSnapshotTime is uint256 at storage 10\n  etherBalanceOf is mapping of uint256 at storage 11\n  stor12 is mapping of uint256 at storage 12\n  gooProduction is mapping of uint256 at storage 13\n  stor14 is mapping of uint256 at storage 14\n  stor15 is mapping of uint8 at storage 15\n  stor16 is mapping of uint256 at storage 16\n  lastGooProductionUpdate is mapping of uint256 at storage 17\n  stor18 is mapping of uint256 at storage 18\n  stor19 is mapping of uint256 at storage 19\n  stor20 is mapping of uint256 at storage 20\n  stor21 is mapping of uint256 at storage 21\n  stor22 is mapping of uint8 at storage 22\n  stor23 is mapping of address at storage 23\n  stor24 is mapping of struct at storage 24\n  stor25 is mapping of uint256 at storage 25\n  stor26 is mapping of uint256 at storage 26\n  stor27 is mapping of uint256 at storage 27\n  stor28 is mapping of uint256 at storage 28\n  stor29 is mapping of uint256 at storage 29\n  stor30 is mapping of uint256 at storage 30\n  stor31 is mapping of uint256 at storage 31\n  stor32 is mapping of uint256 at storage 32\n  stor33 is mapping of uint256 at storage 33\n  allowance is mapping of uint256 at storage 34\n  stor35 is mapping of uint8 at storage 35\n  stor36 is array of struct at storage 36\n  stor37 is array of struct at storage 37\n  stor38 is array of struct at storage 38\n  stor39 is array of struct at storage 39\n  stor40 is uint256 at storage 40\n  stor41 is uint256 at storage 41\n  stor42 is uint256 at storage 42\n  stor43 is uint8 at storage 43 offset 160\n  stor43 is address at storage 43\n  stor43 is uint256 at storage 43\n  stor44 is uint256 at storage 44\n  stor45 is uint256 at storage 45\n  stor46 is uint256 at storage 46\n  stor47 is uint256 at storage 47\n  stor48 is uint256 at storage 48\n  stor49 is uint8 at storage 49 offset 160\n  stor49 is address at storage 49\n  stor49 is uint256 at storage 49\n  stor50 is uint256 at storage 50\n  stor51 is address at storage 51\n\ndef etherBalanceOf(address provider): # not payable\n  return etherBalanceOf[address(provider)]\n\ndef totalSupply(): # not payable\n  return totalSupply\n\ndef getGooProduction(address player): # not payable\n  return gooProduction[address(player)][stor17[address(player)]]\n\ndef lastGooProductionUpdate(address _param1): # not payable\n  return lastGooProductionUpdate[_param1]\n\ndef totalEtherGooResearchPool(): # not payable\n  return totalEtherGooResearchPool\n\ndef gooDepositDivPercent(): # not payable\n  return gooDepositDivPercent\n\ndef gameStarted(): # not payable\n  return bool(gameStarted)\n\ndef totalGooProduction(): # not payable\n  return totalGooProduction\n\ndef owner(): # not payable\n  return owner\n\ndef researchDivPercent(): # not payable\n  return researchDivPercent\n\ndef nextSnapshotTime(): # not payable\n  return nextSnapshotTime\n\ndef allowance(address owner, address spender): # not payable\n  return allowance[address(owner)][address(spender)]\n\n#\n#  Regular functions\n#\n\ndef _fallback(?) payable: # default function\n  totalEtherGooResearchPool += call.value\n\ndef getLatestItemRaffleInfo(): # not payable\n  return stor40, stor41, stor42, address(stor43.field_0), stor44\n\ndef getLatestUnitRaffleInfo(): # not payable\n  return stor45, stor47, stor48, address(stor49.field_0), stor50\n\ndef withdrawEther(uint256 amount): # not payable\n  require amount <= etherBalanceOf[caller]\n  etherBalanceOf[caller] -= amount\n  call caller with:\n     value amount wei\n       gas 2300 * is_zero(value) wei\n  require ext_call.success\n\ndef approve(address spender, uint256 amount): # not payable\n  allowance[caller][address(spender)] = amount\n  log Approval(\n        address owner=amount,\n        address spender=caller,\n        uint256 value=spender)\n  return 1\n\ndef drawRandomUnitWinner(): # not payable\n  require owner == caller\n  require stor45 < block.timestamp\n  require not uint8(stor49.field_160)\n  require stor48\n  stor50 = mulmod(block.hash(block.number - 1), stor48 + block.timestamp, stor48)\n  uint8(stor49.field_160) = 1\n\ndef drawRandomItemWinner(): # not payable\n  require owner == caller\n  require stor40 < block.timestamp\n  require not uint8(stor43.field_160)\n  require stor42\n  stor44 = mulmod(block.hash(block.number - 1), stor42 + block.timestamp, stor42)\n  uint8(stor43.field_160) = 1\n\ndef startUnitRaffle(uint256 endTime, uint256 unitId): # not payable\n  require owner == caller\n  require block.timestamp < endTime\n  if stor47:\n      require address(stor49.field_0)\n  stor50 = 0\n  Mask(168, 0, stor49.field_0) = 0\n  stor48 = 0\n  stor45 = endTime\n  stor47 = unitId\n  stor46++\n\ndef tweakDailyDividends(uint256 newResearchPercent, uint256 newGooDepositPercent): # not payable\n  require owner == caller\n  require newResearchPercent > 0\n  require newResearchPercent <= 10\n  require newGooDepositPercent > 0\n  require newGooDepositPercent <= 10\n  researchDivPercent = newResearchPercent\n  gooDepositDivPercent = newGooDepositPercent\n\ndef protectAddress(address exchange, bool shouldProtect): # not payable\n  require owner == caller\n  if shouldProtect:\n      require not gooProduction[address(exchange)][stor17[address(exchange)]]\n  stor35[address(exchange)] = uint8(shouldProtect)\n\ndef beginGame(uint256 firstDivsTime) payable: \n  require owner == caller\n  require not gameStarted\n  gameStarted = 1\n  nextSnapshotTime = firstDivsTime\n  stor7.length++\n  if not stor7.length <= stor7.length + 1:\n      idx = stor7.length + 1\n      while stor7.length > idx:\n          stor7[idx] = 0\n          idx = idx + 1\n          continue \n  stor7[stor7.length] = 0\n  totalEtherGooResearchPool = call.value\n\ndef startItemRaffle(uint256 endTime, uint256 rareId): # not payable\n  require owner == caller\n  require ext_code.size(stor51)\n  call stor51.validRareId(uint256 rareId) with:\n       gas gas_remaining wei\n      args rareId\n  require ext_call.success\n  require ext_call.return_data[0]\n  require not stor23[rareId]\n  require block.timestamp < endTime\n  if stor41:\n      require address(stor43.field_0)\n  stor44 = 0\n  Mask(168, 0, stor43.field_0) = 0\n  stor42 = 0\n  stor40 = endTime\n  stor41 = rareId\n\ndef balanceOf(address account): # not payable\n  if stor16[address(account)] <= 0:\n      return stor12[address(account)]\n  if stor16[address(account)] >= block.timestamp:\n      return stor12[address(account)]\n  return (stor12[address(account)] + ((block.timestamp * gooProduction[address(account)][stor17[address(account)]]) - (stor16[address(account)] * gooProduction[address(account)][stor17[address(account)]]) / 100))\n\ndef snapshotDailyGooDepositFunding(): # not payable\n  require owner == caller\n  totalEtherGooResearchPool -= totalEtherGooResearchPool * gooDepositDivPercent / 100\n  stor7.length++\n  if not stor7.length <= stor7.length + 1:\n      idx = stor7.length + 1\n      while stor7.length > idx:\n          stor7[idx] = 0\n          idx = idx + 1\n          continue \n  stor7[stor7.length] = 0\n  stor9.length++\n  if not stor9.length <= stor9.length + 1:\n      idx = stor9.length + 1\n      while stor9.length > idx:\n          stor9[idx] = 0\n          idx = idx + 1\n          continue \n  stor9[stor9.length] = totalEtherGooResearchPool * gooDepositDivPercent / 100\n\ndef snapshotDailyGooResearchFunding(): # not payable\n  require owner == caller\n  totalEtherGooResearchPool -= totalEtherGooResearchPool * researchDivPercent / 100\n  stor6.length++\n  if not stor6.length <= stor6.length + 1:\n      idx = stor6.length + 1\n      while stor6.length > idx:\n          stor6[idx] = 0\n          idx = idx + 1\n          continue \n  stor6[stor6.length] = totalGooProduction\n  stor8.length++\n  if not stor8.length <= stor8.length + 1:\n      idx = stor8.length + 1\n      while stor8.length > idx:\n          stor8[idx] = 0\n          idx = idx + 1\n          continue \n  stor8[stor8.length] = totalEtherGooResearchPool * researchDivPercent / 100\n  nextSnapshotTime = block.timestamp + (24 * 3600)\n\ndef transfer(address recipient, uint256 amount): # not payable\n  stor16[caller] = block.timestamp\n  if stor16[caller] <= 0:\n  else:\n      if stor16[caller] >= block.timestamp:\n      else:\n          totalSupply += (block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100\n          stor12[caller] += (block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100\n  require amount <= stor12[caller]\n  stor12[caller] -= amount\n  stor12[recipient] += amount\n  log Transfer(\n        address from=amount,\n        address to=caller,\n        uint256 value=recipient)\n  return 1\n\ndef viewUnclaimedDepositDividends(): # not payable\n  mem[0] = caller\n  mem[32] = 19\n  idx = stor[sha3(mem[0 len 64])]\n  s = 0\n  while idx <= stor9.length - 1:\n      require idx < stor7.length\n      _10 = sha3(7)\n      mem[32] = sha3(caller, 14)\n      _12 = sha3(idx, sha3(caller, 14))\n      require idx < stor9.length\n      mem[0] = 9\n      require stor7[idx]\n      idx = idx + 1\n      s = (stor9[idx] * stor14[caller][idx] / stor7[idx]) + s\n      continue \n  return (stor9.length * stor[stor9.length + _13] * stor[_12] / stor[stor9.length + _10]) - (stor[sha3(mem[0 len 64])] * stor[stor9.length + _13] * stor[_12] / stor[stor9.length + _10]), \n         stor19[caller],\n         stor9.length - 1\n\ndef getUnitRafflePlayers(uint256 raffleId): # not payable\n  if stor39[raffleId].field_0:\n      mem[160] = address(stor39[raffleId].field_0)\n      if (32 * stor39[raffleId].field_0) + 32 > 64:\n          mem[192] = address(stor39[raffleId].field_256)\n          idx = 192\n          s = 1\n          while (32 * stor39[raffleId].field_0) + 128 > idx:\n              mem[idx + 32] = address(stor39[raffleId][s].field_256)\n              idx = idx + 32\n              s = s + 1\n              continue \n  mem[(32 * stor39[raffleId].field_0) + 160] = 32\n  mem[(32 * stor39[raffleId].field_0) + 192] = stor39[raffleId].field_0\n  mem[(32 * stor39[raffleId].field_0) + 224 len floor32(stor39[raffleId].field_0)] = mem[160 len floor32(stor39[raffleId].field_0)]\n  return memory\n    from (32 * stor39[raffleId].field_0) + 160\n     len (96 * stor39[raffleId].field_0) + 64\n\ndef transferFrom(address sender, address recipient, uint256 amount): # not payable\n  stor16[address(sender)] = block.timestamp\n  if stor16[address(sender)] <= 0:\n  else:\n      if stor16[address(sender)] >= block.timestamp:\n      else:\n          totalSupply += (block.timestamp * gooProduction[address(sender)][stor17[address(sender)]]) - (stor16[address(sender)] * gooProduction[address(sender)][stor17[address(sender)]]) / 100\n          stor12[address(sender)] += (block.timestamp * gooProduction[address(sender)][stor17[address(sender)]]) - (stor16[address(sender)] * gooProduction[address(sender)][stor17[address(sender)]]) / 100\n  require amount <= allowance[address(sender)][caller]\n  require amount <= stor12[address(sender)]\n  stor12[address(sender)] -= amount\n  stor12[recipient] += amount\n  allowance[address(sender)][caller] -= amount\n  log Transfer(\n        address from=amount,\n        address to=sender,\n        uint256 value=recipient)\n  return 1\n\ndef getItemRafflePlayers(uint256 raffleId): # not payable\n  if not stor37[raffleId].field_0:\n      mem[(32 * stor37[raffleId].field_0) + 160] = 32\n      mem[(32 * stor37[raffleId].field_0) + 192] = stor37[raffleId].field_0\n      mem[(32 * stor37[raffleId].field_0) + 224 len floor32(stor37[raffleId].field_0)] = mem[160 len floor32(stor37[raffleId].field_0)]\n      return memory\n        from (32 * stor37[raffleId].field_0) + 160\n         len (96 * stor37[raffleId].field_0) + 64\n  mem[160] = address(stor37[raffleId].field_0)\n  idx = 160\n  s = 0\n  while (32 * stor37[raffleId].field_0) + 128 > idx:\n      mem[idx + 32] = address(stor37[raffleId][s].field_256)\n      idx = idx + 32\n      s = s + 1\n      continue \n  mem[(32 * stor37[raffleId].field_0) + 224 len floor32(stor37[raffleId].field_0)] = mem[160 len floor32(stor37[raffleId].field_0)]\n  return Array(len=stor37[raffleId].field_0, data=mem[160 len floor32(stor37[raffleId].field_0)], mem[(32 * stor37[raffleId].field_0) + floor32(stor37[raffleId].field_0) + 224 len (32 * stor37[raffleId].field_0) - floor32(stor37[raffleId].field_0)]), \n\ndef getRareItemInfo(): # not payable\n  require ext_code.size(stor51)\n  call stor51.currentNumberOfRares() with:\n       gas gas_remaining wei\n  require ext_call.success\n  require ext_code.size(stor51)\n  call stor51.currentNumberOfRares() with:\n       gas gas_remaining wei\n  mem[(32 * ext_call.return_data[0]) + 288] = ext_call.return_data[0]\n  require ext_call.success\n  mem[(32 * ext_call.return_data[0]) + 320] = ext_call.return_data[0]\n  require ext_code.size(stor51)\n  call stor51.rareIdRange() with:\n       gas gas_remaining wei\n  mem[(64 * ext_call.return_data[0]) + 352 len 64] = ext_call.return_data[0 len 64]\n  require ext_call.success\n  s = 0\n  idx = mem[(64 * ext_call.return_data[0]) + 352]\n  while idx <= ext_call.return_data[32]:\n      require s < ext_call.return_data[0]\n      mem[(32 * s) + 288] = stor23[idx]\n      mem[0] = idx\n      mem[32] = 24\n      require s < mem[(32 * ext_call.return_data[0]) + 320]\n      mem[(32 * ext_call.return_data[0]) + (32 * s) + 352] = stor24[idx].field_0\n      s = s + 1\n      idx = idx + 1\n      continue \n  mem[(64 * ext_call.return_data[0]) + 352] = 64\n  mem[(64 * ext_call.return_data[0]) + 416] = ext_call.return_data[0]\n  mem[(64 * ext_call.return_data[0]) + 448 len floor32(ext_call.return_data[0])] = mem[288 len floor32(ext_call.return_data[0])]\n  mem[(64 * ext_call.return_data[0]) + 384] = (32 * ext_call.return_data[0]) + 96\n  mem[(98 * ext_call.return_data[0]) + 448] = mem[(32 * ext_call.return_data[0]) + 320]\n  mem[(98 * ext_call.return_data[0]) + 480 len floor32(mem[(32 * ext_call.return_data[0]) + 320])] = mem[(32 * ext_call.return_data[0]) + 352 len floor32(mem[(32 * ext_call.return_data[0]) + 320])]\n  return memory\n    from (64 * ext_call.return_data[0]) + 352\n     len (32 * mem[(32 * ext_call.return_data[0]) + 320]) + (161 * ext_call.return_data[0]) + 128\n\ndef viewUnclaimedResearchDividends(): # not payable\n  s = 0\n  s = 0\n  idx = stor18[caller]\n  s = 0\n  while idx <= stor8.length - 1:\n      mem[32] = sha3(caller, 15)\n      if gooProduction[caller][idx]:\n          if idx < stor6.length:\n              if idx < stor8.length:\n                  mem[0] = 8\n                  if stor6[idx]:\n                      s = stor15[caller][idx]\n                      s = gooProduction[caller][idx]\n                      idx = idx + 1\n                      s = (stor8[idx] * gooProduction[caller][idx] / stor6[idx]) + s\n                      continue \n      else:\n          if stor15[caller][idx]:\n              if idx < stor6.length:\n                  if idx < stor8.length:\n                      mem[0] = 8\n                      if stor6[idx]:\n                          s = stor15[caller][idx]\n                          s = gooProduction[caller][idx]\n                          idx = idx + 1\n                          s = (stor8[idx] * gooProduction[caller][idx] / stor6[idx]) + s\n                          continue \n          else:\n              if idx < stor6.length:\n                  if idx < stor8.length:\n                      mem[0] = 8\n                      if stor6[idx]:\n                          s = stor15[caller][idx]\n                          s = gooProduction[caller][stor18[caller] - 1]\n                          idx = idx + 1\n                          s = (stor8[idx] * gooProduction[caller][stor18[caller] - 1] / stor6[idx]) + s\n                          continue \n      revert\n  return s, stor18[caller], stor8.length - 1\n\ndef fundGooResearch(uint256 amount): # not payable\n  if stor16[caller] <= 0:\n      if amount <= 0:\n          totalSupply -= amount\n          stor12[caller] -= amount\n      else:\n          require stor12[caller] >= amount\n          totalSupply -= amount\n          stor12[caller] -= amount\n  else:\n      if stor16[caller] >= block.timestamp:\n          if amount <= 0:\n              totalSupply -= amount\n              stor12[caller] -= amount\n          else:\n              require stor12[caller] >= amount\n              totalSupply -= amount\n              stor12[caller] -= amount\n      else:\n          if amount <= (block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100:\n              totalSupply = ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) - amount + totalSupply\n              stor12[caller] = ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) - amount + stor12[caller]\n          else:\n              require stor12[caller] >= amount - ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n              totalSupply = totalSupply - amount + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n              stor12[caller] = stor12[caller] - amount + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n  stor16[caller] = block.timestamp\n  stor14[caller][stor7.length - 1] += amount\n  require stor7.length - 1 < stor7.length\n  stor7[stor7.length] += amount\n\ndef claimGooDepositDividends(address referer, uint256 startSnapshot, uint256 endSnapShot): # not payable\n  require startSnapshot <= endSnapShot\n  require startSnapshot >= stor19[caller]\n  require endSnapShot < stor9.length\n  idx = startSnapshot\n  s = 0\n  while idx <= endSnapShot:\n      require idx < stor7.length\n      _14 = sha3(7)\n      mem[32] = sha3(caller, 14)\n      _16 = sha3(idx, sha3(caller, 14))\n      require idx < stor9.length\n      mem[0] = 9\n      require stor7[idx]\n      idx = idx + 1\n      s = (stor9[idx] * stor14[caller][idx] / stor7[idx]) + s\n      continue \n  stor19[caller] = endSnapShot + 1\n  if not referer:\n      etherBalanceOf[caller] = (stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) + (endSnapShot * stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) - (startSnapshot * stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) + etherBalanceOf[caller]\n  else:\n      if referer == caller:\n          etherBalanceOf[caller] = (stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) + (endSnapShot * stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) - (startSnapshot * stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) + etherBalanceOf[caller]\n      else:\n          etherBalanceOf[address(referer)] += (stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) + (endSnapShot * stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) - (startSnapshot * stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) / 100\n          log ReferalGain(\n                address player=address(referer),\n                address referal=caller,\n                uint256 amount=(stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) + (endSnapShot * stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) - (startSnapshot * stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) / 100)\n          etherBalanceOf[caller] = (stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) + (endSnapShot * stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) - (startSnapshot * stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) - ((stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) + (endSnapShot * stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) - (startSnapshot * stor[endSnapShot + _18 + 1] * stor[_16] / stor[endSnapShot + _14 + 1]) / 100) + etherBalanceOf[caller]\n\ndef sellUnit(uint256 unitId, uint256 amount): # not payable\n  require stor21[caller][unitId] >= amount\n  require amount > 0\n  stor21[caller][unitId] -= amount\n  require ext_code.size(stor51)\n  call stor51.getUnitInfo(uint256 unitId, uint256 existing, uint256 amount) with:\n       gas gas_remaining wei\n      args unitId, stor21[caller][unitId] - amount, amount\n  require ext_call.success\n  require ext_code.size(stor51)\n  call stor51.unitSellable(uint256 unitId) with:\n       gas gas_remaining wei\n      args unitId\n  require ext_call.success\n  require ext_call.return_data[0]\n  stor16[caller] = block.timestamp\n  if stor16[caller] <= 0:\n      totalSupply += 3 * ext_call.return_data[64] / 4\n      stor12[caller] += 3 * ext_call.return_data[64] / 4\n  else:\n      if stor16[caller] >= block.timestamp:\n          totalSupply += 3 * ext_call.return_data[64] / 4\n          stor12[caller] += 3 * ext_call.return_data[64] / 4\n      else:\n          totalSupply = (3 * ext_call.return_data[64] / 4) + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) + totalSupply\n          stor12[caller] = (3 * ext_call.return_data[64] / 4) + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) + stor12[caller]\n  if ext_call.return_data[32] > 0:\n      require ext_code.size(stor51)\n      call stor51.unitGooProduction(uint256 unitId) with:\n           gas gas_remaining wei\n          args unitId\n      require ext_call.success\n      require (10 * ext_call.return_data[0] * amount) + (stor26[caller][unitId] * ext_call.return_data[0] * amount) + (10 * stor25[caller][unitId] * amount) + (stor26[caller][unitId] * stor25[caller][unitId] * amount) <= gooProduction[caller][stor17[caller]]\n      if gooProduction[caller][stor17[caller]] - (10 * ext_call.return_data[0] * amount) - (stor26[caller][unitId] * ext_call.return_data[0] * amount) - (10 * stor25[caller][unitId] * amount) - (stor26[caller][unitId] * stor25[caller][unitId] * amount):\n          gooProduction[caller][stor8.length] = gooProduction[caller][stor17[caller]] - (10 * ext_call.return_data[0] * amount) - (stor26[caller][unitId] * ext_call.return_data[0] * amount) - (10 * stor25[caller][unitId] * amount) - (stor26[caller][unitId] * stor25[caller][unitId] * amount)\n      else:\n          stor15[caller][stor8.length] = 1\n          gooProduction[caller][stor8.length] = 0\n      lastGooProductionUpdate[caller] = stor8.length\n      totalGooProduction = totalGooProduction - (10 * ext_call.return_data[0] * amount) - (stor26[caller][unitId] * ext_call.return_data[0] * amount) - (10 * stor25[caller][unitId] * amount) - (stor26[caller][unitId] * stor25[caller][unitId] * amount)\n  if ext_call.return_data[96] > 0:\n      etherBalanceOf[caller] += 3 * ext_call.return_data[96] / 4\n  log UnitSold(\n        address player=caller,\n        uint256 unitId=unitId,\n        uint256 amount=amount)\n\ndef getGameInfo(): # not payable\n  require ext_code.size(stor51)\n  call stor51.currentNumberOfUnits() with:\n       gas gas_remaining wei\n  require ext_call.success\n  require ext_code.size(stor51)\n  call stor51.currentNumberOfUpgrades() with:\n       gas gas_remaining wei\n  mem[(32 * ext_call.return_data[0]) + 288] = ext_call.return_data[0]\n  require ext_call.success\n  mem[(32 * ext_call.return_data[0]) + 320] = ext_call.return_data[0]\n  require ext_code.size(stor51)\n  call stor51.productionUnitIdRange() with:\n       gas gas_remaining wei\n  mem[(64 * ext_call.return_data[0]) + 352 len 64] = ext_call.return_data[0 len 64]\n  require ext_call.success\n  s = 0\n  idx = mem[(64 * ext_call.return_data[0]) + 352]\n  while idx <= ext_call.return_data[32]:\n      mem[0] = idx\n      mem[32] = sha3(caller, 21)\n      require s < ext_call.return_data[0]\n      mem[(32 * s) + 288] = stor21[caller][idx]\n      s = s + 1\n      idx = idx + 1\n      continue \n  require ext_code.size(stor51)\n  call stor51.battleUnitIdRange() with:\n       gas gas_remaining wei\n  mem[(64 * ext_call.return_data[0]) + 352 len 64] = ext_call.return_data[0 len 64]\n  require ext_call.success\n  t = s\n  idx = mem[(64 * ext_call.return_data[0]) + 352]\n  while idx <= ext_call.return_data[32]:\n      mem[0] = idx\n      mem[32] = sha3(caller, 21)\n      require t < ext_call.return_data[0]\n      mem[(32 * t) + 288] = stor21[caller][idx]\n      t = t + 1\n      idx = idx + 1\n      continue \n  require ext_code.size(stor51)\n  call stor51.upgradeIdRange() with:\n       gas gas_remaining wei\n  mem[(64 * ext_call.return_data[0]) + 352 len 64] = ext_call.return_data[0 len 64]\n  require ext_call.success\n  s = 0\n  idx = mem[(64 * ext_call.return_data[0]) + 352]\n  while idx <= ext_call.return_data[32]:\n      mem[0] = idx\n      mem[32] = sha3(caller, 22)\n      require s < mem[(32 * ext_call.return_data[0]) + 320]\n      mem[(32 * ext_call.return_data[0]) + (32 * s) + 352] = bool(stor22[caller][idx])\n      s = s + 1\n      idx = idx + 1\n      continue \n  require stor7.length - 1 < stor7.length\n  mem[(64 * ext_call.return_data[0]) + 352] = block.timestamp\n  mem[(64 * ext_call.return_data[0]) + 384] = totalEtherGooResearchPool\n  mem[(64 * ext_call.return_data[0]) + 416] = totalGooProduction\n  mem[(64 * ext_call.return_data[0]) + 448] = stor7[stor7.length]\n  mem[(64 * ext_call.return_data[0]) + 480] = stor14[caller][stor7.length - 1]\n  mem[(64 * ext_call.return_data[0]) + 512] = nextSnapshotTime\n  if stor16[caller] <= 0:\n      mem[(64 * ext_call.return_data[0]) + 544] = stor12[caller]\n  else:\n      if stor16[caller] >= block.timestamp:\n          mem[(64 * ext_call.return_data[0]) + 544] = stor12[caller]\n      else:\n          mem[(64 * ext_call.return_data[0]) + 544] = stor12[caller] + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n  mem[(64 * ext_call.return_data[0]) + 576] = etherBalanceOf[caller]\n  mem[(64 * ext_call.return_data[0]) + 608] = gooProduction[caller][stor17[caller]]\n  mem[(64 * ext_call.return_data[0]) + 640] = 352\n  mem[(64 * ext_call.return_data[0]) + 704] = ext_call.return_data[0]\n  mem[(64 * ext_call.return_data[0]) + 736 len floor32(ext_call.return_data[0])] = mem[288 len floor32(ext_call.return_data[0])]\n  mem[(64 * ext_call.return_data[0]) + 672] = (32 * ext_call.return_data[0]) + 384\n  mem[(98 * ext_call.return_data[0]) + 736] = mem[(32 * ext_call.return_data[0]) + 320]\n  mem[(98 * ext_call.return_data[0]) + 768 len floor32(mem[(32 * ext_call.return_data[0]) + 320])] = mem[(32 * ext_call.return_data[0]) + 352 len floor32(mem[(32 * ext_call.return_data[0]) + 320])]\n  return memory\n    from (64 * ext_call.return_data[0]) + 352\n     len (32 * mem[(32 * ext_call.return_data[0]) + 320]) + (161 * ext_call.return_data[0]) + 416\n\ndef claimResearchDividends(address referer, uint256 startSnapshot, uint256 endSnapShot): # not payable\n  require startSnapshot <= endSnapShot\n  require startSnapshot >= stor18[caller]\n  require endSnapShot < stor8.length\n  s = 0\n  s = 0\n  idx = startSnapshot\n  s = 0\n  while idx <= endSnapShot:\n      mem[32] = sha3(caller, 15)\n      if gooProduction[caller][idx]:\n          if idx < stor6.length:\n              if idx < stor8.length:\n                  mem[0] = 8\n                  if stor6[idx]:\n                      s = stor15[caller][idx]\n                      s = gooProduction[caller][idx]\n                      idx = idx + 1\n                      s = (stor8[idx] * gooProduction[caller][idx] / stor6[idx]) + s\n                      continue \n      else:\n          if stor15[caller][idx]:\n              if idx < stor6.length:\n                  if idx < stor8.length:\n                      mem[0] = 8\n                      if stor6[idx]:\n                          s = stor15[caller][idx]\n                          s = gooProduction[caller][idx]\n                          idx = idx + 1\n                          s = (stor8[idx] * gooProduction[caller][idx] / stor6[idx]) + s\n                          continue \n          else:\n              if idx < stor6.length:\n                  if idx < stor8.length:\n                      mem[0] = 8\n                      if stor6[idx]:\n                          s = stor15[caller][idx]\n                          s = gooProduction[caller][stor18[caller] - 1]\n                          idx = idx + 1\n                          s = (stor8[idx] * gooProduction[caller][stor18[caller] - 1] / stor6[idx]) + s\n                          continue \n      revert\n  if gooProduction[caller][endSnapShot]:\n      stor18[caller] = endSnapShot + 1\n      if not referer:\n          etherBalanceOf[caller] += s\n      else:\n          if referer == caller:\n              etherBalanceOf[caller] += s\n          else:\n              etherBalanceOf[address(referer)] += s / 100\n              log ReferalGain(\n                    address player=address(referer),\n                    address referal=caller,\n                    uint256 amount=s / 100)\n              etherBalanceOf[caller] = s - (s / 100) + etherBalanceOf[caller]\n  else:\n      if stor15[caller][endSnapShot]:\n          stor18[caller] = endSnapShot + 1\n          if not referer:\n              etherBalanceOf[caller] += s\n          else:\n              if referer == caller:\n                  etherBalanceOf[caller] += s\n              else:\n                  etherBalanceOf[address(referer)] += s / 100\n                  log ReferalGain(\n                        address player=address(referer),\n                        address referal=caller,\n                        uint256 amount=s / 100)\n                  etherBalanceOf[caller] = s - (s / 100) + etherBalanceOf[caller]\n      else:\n          if gooProduction[caller][stor18[caller] - 1] > 0:\n              gooProduction[caller][endSnapShot] = gooProduction[caller][stor18[caller] - 1]\n          stor18[caller] = endSnapShot + 1\n          if not referer:\n              etherBalanceOf[caller] += s\n          else:\n              if referer == caller:\n                  etherBalanceOf[caller] += s\n              else:\n                  etherBalanceOf[address(referer)] += s / 100\n                  log ReferalGain(\n                        address player=address(referer),\n                        address referal=caller,\n                        uint256 amount=s / 100)\n                  etherBalanceOf[caller] = s - (s / 100) + etherBalanceOf[caller]\n\ndef buyBasicUnit(uint256 unitId, uint256 amount): # not payable\n  require ext_code.size(stor51)\n  call stor51.getUnitInfo(uint256 unitId, uint256 existing, uint256 amount) with:\n       gas gas_remaining wei\n      args unitId, stor21[caller][unitId], amount\n  require ext_call.success\n  require gameStarted\n  require ext_call.return_data[0] > 0\n  require not ext_call.return_data[96]\n  require amount + stor21[caller][unitId] >= stor21[caller][unitId]\n  if amount + stor21[caller][unitId] > 99:\n      require amount + stor21[caller][unitId] <= stor33[caller][unitId]\n  if stor16[caller] <= 0:\n      if ext_call.return_data[64] <= 0:\n          totalSupply -= ext_call.return_data[64]\n          stor12[caller] -= ext_call.return_data[64]\n      else:\n          require stor12[caller] >= ext_call.return_data[64]\n          totalSupply -= ext_call.return_data[64]\n          stor12[caller] -= ext_call.return_data[64]\n  else:\n      if stor16[caller] >= block.timestamp:\n          if ext_call.return_data[64] <= 0:\n              totalSupply -= ext_call.return_data[64]\n              stor12[caller] -= ext_call.return_data[64]\n          else:\n              require stor12[caller] >= ext_call.return_data[64]\n              totalSupply -= ext_call.return_data[64]\n              stor12[caller] -= ext_call.return_data[64]\n      else:\n          if ext_call.return_data[64] <= (block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100:\n              totalSupply = ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) - ext_call.return_data[64] + totalSupply\n              stor12[caller] = ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) - ext_call.return_data[64] + stor12[caller]\n          else:\n              require stor12[caller] >= ext_call.return_data[64] - ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n              totalSupply = totalSupply - ext_call.return_data[64] + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n              stor12[caller] = stor12[caller] - ext_call.return_data[64] + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n  stor16[caller] = block.timestamp\n  if ext_call.return_data[32] > 0:\n      require ext_code.size(stor51)\n      call stor51.unitGooProduction(uint256 unitId) with:\n           gas gas_remaining wei\n          args unitId\n      require ext_call.success\n      gooProduction[caller][stor8.length] = gooProduction[caller][stor17[caller]] + (10 * ext_call.return_data[0] * amount) + (stor26[caller][unitId] * ext_call.return_data[0] * amount) + (10 * stor25[caller][unitId] * amount) + (stor26[caller][unitId] * stor25[caller][unitId] * amount)\n      lastGooProductionUpdate[caller] = stor8.length\n      totalGooProduction = (10 * ext_call.return_data[0] * amount) + (stor26[caller][unitId] * ext_call.return_data[0] * amount) + (10 * stor25[caller][unitId] * amount) + (stor26[caller][unitId] * stor25[caller][unitId] * amount) + totalGooProduction\n  stor21[caller][unitId] += amount\n  log UnitBought(\n        address player=caller,\n        uint256 unitId=unitId,\n        uint256 amount=amount)\n\ndef buyEthUnit(uint256 unitId, uint256 amount) payable: \n  require ext_code.size(stor51)\n  call stor51.getUnitInfo(uint256 unitId, uint256 existing, uint256 amount) with:\n       gas gas_remaining wei\n      args unitId, stor21[caller][unitId], amount\n  require ext_call.success\n  require gameStarted\n  require ext_call.return_data[0] > 0\n  require call.value + etherBalanceOf[caller] >= ext_call.return_data[96]\n  if ext_call.return_data[96] > call.value:\n      etherBalanceOf[caller] = etherBalanceOf[caller] - ext_call.return_data[96] + call.value\n  totalEtherGooResearchPool += ext_call.return_data[96] - (ext_call.return_data[96] / 50) / 4\n  etherBalanceOf[stor2] += ext_call.return_data[96] / 50\n  require amount + stor21[caller][unitId] >= stor21[caller][unitId]\n  if amount + stor21[caller][unitId] > 99:\n      require amount + stor21[caller][unitId] <= stor33[caller][unitId]\n  if stor16[caller] <= 0:\n      if ext_call.return_data[64] <= 0:\n          totalSupply -= ext_call.return_data[64]\n          stor12[caller] -= ext_call.return_data[64]\n      else:\n          require stor12[caller] >= ext_call.return_data[64]\n          totalSupply -= ext_call.return_data[64]\n          stor12[caller] -= ext_call.return_data[64]\n  else:\n      if stor16[caller] >= block.timestamp:\n          if ext_call.return_data[64] <= 0:\n              totalSupply -= ext_call.return_data[64]\n              stor12[caller] -= ext_call.return_data[64]\n          else:\n              require stor12[caller] >= ext_call.return_data[64]\n              totalSupply -= ext_call.return_data[64]\n              stor12[caller] -= ext_call.return_data[64]\n      else:\n          if ext_call.return_data[64] <= (block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100:\n              totalSupply = ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) - ext_call.return_data[64] + totalSupply\n              stor12[caller] = ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) - ext_call.return_data[64] + stor12[caller]\n          else:\n              require stor12[caller] >= ext_call.return_data[64] - ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n              totalSupply = totalSupply - ext_call.return_data[64] + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n              stor12[caller] = stor12[caller] - ext_call.return_data[64] + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n  stor16[caller] = block.timestamp\n  if ext_call.return_data[32] > 0:\n      require ext_code.size(stor51)\n      call stor51.unitGooProduction(uint256 unitId) with:\n           gas gas_remaining wei\n          args unitId\n      require ext_call.success\n      gooProduction[caller][stor8.length] = gooProduction[caller][stor17[caller]] + (10 * ext_call.return_data[0] * amount) + (stor26[caller][unitId] * ext_call.return_data[0] * amount) + (10 * stor25[caller][unitId] * amount) + (stor26[caller][unitId] * stor25[caller][unitId] * amount)\n      lastGooProductionUpdate[caller] = stor8.length\n      totalGooProduction = (10 * ext_call.return_data[0] * amount) + (stor26[caller][unitId] * ext_call.return_data[0] * amount) + (10 * stor25[caller][unitId] * amount) + (stor26[caller][unitId] * stor25[caller][unitId] * amount) + totalGooProduction\n  stor21[caller][unitId] += amount\n  log UnitBought(\n        address player=caller,\n        uint256 unitId=unitId,\n        uint256 amount=amount)\n\ndef buyUnitRaffleTicket(uint256 amount): # not payable\n  require stor45 >= block.timestamp\n  require amount > 0\n  require 1000 * amount / 1000 == amount\n  if stor16[caller] <= 0:\n      require stor12[caller] >= 1000 * amount\n  else:\n      if stor16[caller] >= block.timestamp:\n          require stor12[caller] >= 1000 * amount\n      else:\n          require stor12[caller] + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) >= 1000 * amount\n  if stor16[caller] <= 0:\n      if 1000 * amount <= 0:\n          totalSupply += -1000 * amount\n          stor12[caller] += -1000 * amount\n      else:\n          require stor12[caller] >= 1000 * amount\n          totalSupply += -1000 * amount\n          stor12[caller] += -1000 * amount\n  else:\n      if stor16[caller] >= block.timestamp:\n          if 1000 * amount <= 0:\n              totalSupply += -1000 * amount\n              stor12[caller] += -1000 * amount\n          else:\n              require stor12[caller] >= 1000 * amount\n              totalSupply += -1000 * amount\n              stor12[caller] += -1000 * amount\n      else:\n          if 1000 * amount <= (block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100:\n              totalSupply = ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) - (1000 * amount) + totalSupply\n              stor12[caller] = ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) - (1000 * amount) + stor12[caller]\n          else:\n              require stor12[caller] >= (1000 * amount) - ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n              totalSupply = totalSupply - (1000 * amount) + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n              stor12[caller] = stor12[caller] - (1000 * amount) + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n  stor16[caller] = block.timestamp\n  if stor38[caller].field_512 != stor46:\n      stor38[caller].field_256 = 0\n      stor38[caller].field_512 = stor46\n      stor39[stor46].field_0++\n      if not stor39[stor46].field_0 <= stor39[stor46].field_0 + 1:\n          idx = stor39[stor46].field_0 + 1\n          while stor39[stor46].field_0 > idx:\n              stor39[stor46][idx].field_0 = 0\n              idx = idx + 1\n              continue \n      address(stor39[stor46][stor39[stor46].field_0].field_0) = caller\n  if stor38[caller].field_256 == stor38[caller].field_0:\n      stor38[caller].field_0++\n      if not stor38[caller].field_0 <= stor38[caller].field_0 + 1:\n          idx = 2 * stor38[caller].field_0 + 1\n          while 2 * stor38[caller].field_0 > idx:\n              stor38[caller][idx].field_0 = 0\n              stor38[caller][idx].field_256 = 0\n              idx = idx + 2\n              continue \n  stor38[caller].field_256++\n  require stor38[caller].field_256 < stor38[caller].field_0\n  stor38[caller][stor38[caller].field_256].field_0 = stor48\n  stor38[caller][stor38[caller].field_256].field_256 = amount + stor48 - 1\n  stor48 += amount\n\ndef buyItemRaffleTicket(uint256 amount): # not payable\n  require stor40 >= block.timestamp\n  require amount > 0\n  require 1000 * amount / 1000 == amount\n  if stor16[caller] <= 0:\n      require stor12[caller] >= 1000 * amount\n  else:\n      if stor16[caller] >= block.timestamp:\n          require stor12[caller] >= 1000 * amount\n      else:\n          require stor12[caller] + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) >= 1000 * amount\n  if stor16[caller] <= 0:\n      if 1000 * amount <= 0:\n          totalSupply += -1000 * amount\n          stor12[caller] += -1000 * amount\n      else:\n          require stor12[caller] >= 1000 * amount\n          totalSupply += -1000 * amount\n          stor12[caller] += -1000 * amount\n  else:\n      if stor16[caller] >= block.timestamp:\n          if 1000 * amount <= 0:\n              totalSupply += -1000 * amount\n              stor12[caller] += -1000 * amount\n          else:\n              require stor12[caller] >= 1000 * amount\n              totalSupply += -1000 * amount\n              stor12[caller] += -1000 * amount\n      else:\n          if 1000 * amount <= (block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100:\n              totalSupply = ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) - (1000 * amount) + totalSupply\n              stor12[caller] = ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) - (1000 * amount) + stor12[caller]\n          else:\n              require stor12[caller] >= (1000 * amount) - ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n              totalSupply = totalSupply - (1000 * amount) + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n              stor12[caller] = stor12[caller] - (1000 * amount) + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n  stor16[caller] = block.timestamp\n  if stor36[caller].field_512 != stor41:\n      stor36[caller].field_256 = 0\n      stor36[caller].field_512 = stor41\n      stor37[stor41].field_0++\n      if not stor37[stor41].field_0 <= stor37[stor41].field_0 + 1:\n          idx = stor37[stor41].field_0 + 1\n          while stor37[stor41].field_0 > idx:\n              stor37[stor41][idx].field_0 = 0\n              idx = idx + 1\n              continue \n      address(stor37[stor41][stor37[stor41].field_0].field_0) = caller\n  if stor36[caller].field_256 == stor36[caller].field_0:\n      stor36[caller].field_0++\n      if not stor36[caller].field_0 <= stor36[caller].field_0 + 1:\n          idx = 2 * stor36[caller].field_0 + 1\n          while 2 * stor36[caller].field_0 > idx:\n              stor36[caller][idx].field_0 = 0\n              stor36[caller][idx].field_256 = 0\n              idx = idx + 2\n              continue \n  stor36[caller].field_256++\n  require stor36[caller].field_256 < stor36[caller].field_0\n  stor36[caller][stor36[caller].field_256].field_0 = stor42\n  stor36[caller][stor36[caller].field_256].field_256 = amount + stor42 - 1\n  stor42 += amount\n\ndef getPlayersItemTickets(address player): # not payable\n  if stor41 != stor36[address(player)].field_512:\n      return 64, 96, 0, 0\n  if 256 < (32 * stor36[address(player)].field_256) + 256:\n      mem[(32 * stor36[address(player)].field_256) + 256] = stor36[address(player)].field_256\n      idx = 0\n      while idx < stor36[address(player)].field_256:\n          require idx < stor36[address(player)].field_0\n          require idx < stor36[address(player)].field_256\n          mem[(32 * idx) + 256] = stor36[address(player)][idx].field_0\n          require idx < stor36[address(player)].field_0\n          mem[0] = sha3(address(player), 36)\n          require idx < mem[(32 * stor36[address(player)].field_256) + 256]\n          mem[(32 * stor36[address(player)].field_256) + (32 * idx) + 288] = stor36[address(player)][idx].field_256\n          idx = idx + 1\n          continue \n      mem[(64 * stor36[address(player)].field_256) + 288] = 64\n      mem[(64 * stor36[address(player)].field_256) + 352] = stor36[address(player)].field_256\n      s = 0\n      while stor36[address(player)].field_256 < 32 * stor36[address(player)].field_256:\n          mem[(66 * stor36[address(player)].field_256) + 384] = mem[stor36[address(player)].field_256 + 256]\n          s = stor36[address(player)].field_256 + 32\n          continue \n      mem[(64 * stor36[address(player)].field_256) + 320] = (32 * stor36[address(player)].field_256) + 96\n      mem[(98 * stor36[address(player)].field_256) + 384] = mem[(32 * stor36[address(player)].field_256) + 256]\n      mem[(98 * stor36[address(player)].field_256) + 416 len floor32(mem[(32 * stor36[address(player)].field_256) + 256])] = mem[(32 * stor36[address(player)].field_256) + 288 len floor32(mem[(32 * stor36[address(player)].field_256) + 256])]\n      return memory\n        from (64 * stor36[address(player)].field_256) + 288\n         len (32 * mem[(32 * stor36[address(player)].field_256) + 256]) + (161 * stor36[address(player)].field_256) + 128\n  mem[256] = stor36[address(player)].field_256\n  idx = 0\n  while idx < stor36[address(player)].field_256:\n      require idx < stor36[address(player)].field_0\n      require idx < stor36[address(player)].field_256\n      mem[(32 * idx) + 256] = stor36[address(player)][idx].field_0\n      require idx < stor36[address(player)].field_0\n      mem[0] = sha3(address(player), 36)\n      require idx < mem[256]\n      mem[(32 * idx) + 288] = stor36[address(player)][idx].field_256\n      idx = idx + 1\n      continue \n  mem[(32 * stor36[address(player)].field_256) + 288] = 64\n  mem[(32 * stor36[address(player)].field_256) + 352] = stor36[address(player)].field_256\n  s = 0\n  while stor36[address(player)].field_256 < 32 * stor36[address(player)].field_256:\n      mem[(34 * stor36[address(player)].field_256) + 384] = mem[stor36[address(player)].field_256 + 256]\n      s = stor36[address(player)].field_256 + 32\n      continue \n  mem[(32 * stor36[address(player)].field_256) + 320] = (32 * stor36[address(player)].field_256) + 96\n  mem[(64 * stor36[address(player)].field_256) + 384] = mem[256]\n  mem[(64 * stor36[address(player)].field_256) + 416 len floor32(mem[256])] = mem[288 len floor32(mem[256])]\n  return Array(len=stor36[address(player)].field_256, data=mem[(32 * stor36[address(player)].field_256) + 384 len (32 * stor36[address(player)].field_256) + (32 * mem[256]) + 32]), \n         (32 * stor36[address(player)].field_256) + 96\n\ndef getPlayersUnitTickets(address player): # not payable\n  if stor46 != stor38[address(player)].field_512:\n      return 64, 96, 0, 0\n  if 256 < (32 * stor38[address(player)].field_256) + 256:\n      mem[(32 * stor38[address(player)].field_256) + 256] = stor38[address(player)].field_256\n      idx = 0\n      while idx < stor38[address(player)].field_256:\n          require idx < stor38[address(player)].field_0\n          require idx < stor38[address(player)].field_256\n          mem[(32 * idx) + 256] = stor38[address(player)][idx].field_0\n          require idx < stor38[address(player)].field_0\n          mem[0] = sha3(address(player), 38)\n          require idx < mem[(32 * stor38[address(player)].field_256) + 256]\n          mem[(32 * stor38[address(player)].field_256) + (32 * idx) + 288] = stor38[address(player)][idx].field_256\n          idx = idx + 1\n          continue \n      mem[(64 * stor38[address(player)].field_256) + 288] = 64\n      mem[(64 * stor38[address(player)].field_256) + 352] = stor38[address(player)].field_256\n      s = 0\n      while stor38[address(player)].field_256 < 32 * stor38[address(player)].field_256:\n          mem[(66 * stor38[address(player)].field_256) + 384] = mem[stor38[address(player)].field_256 + 256]\n          s = stor38[address(player)].field_256 + 32\n          continue \n      mem[(64 * stor38[address(player)].field_256) + 320] = (32 * stor38[address(player)].field_256) + 96\n      mem[(98 * stor38[address(player)].field_256) + 384] = mem[(32 * stor38[address(player)].field_256) + 256]\n      mem[(98 * stor38[address(player)].field_256) + 416 len floor32(mem[(32 * stor38[address(player)].field_256) + 256])] = mem[(32 * stor38[address(player)].field_256) + 288 len floor32(mem[(32 * stor38[address(player)].field_256) + 256])]\n      return memory\n        from (64 * stor38[address(player)].field_256) + 288\n         len (32 * mem[(32 * stor38[address(player)].field_256) + 256]) + (161 * stor38[address(player)].field_256) + 128\n  mem[256] = stor38[address(player)].field_256\n  idx = 0\n  while idx < stor38[address(player)].field_256:\n      require idx < stor38[address(player)].field_0\n      require idx < stor38[address(player)].field_256\n      mem[(32 * idx) + 256] = stor38[address(player)][idx].field_0\n      require idx < stor38[address(player)].field_0\n      mem[0] = sha3(address(player), 38)\n      require idx < mem[256]\n      mem[(32 * idx) + 288] = stor38[address(player)][idx].field_256\n      idx = idx + 1\n      continue \n  mem[(32 * stor38[address(player)].field_256) + 288] = 64\n  mem[(32 * stor38[address(player)].field_256) + 352] = stor38[address(player)].field_256\n  s = 0\n  while stor38[address(player)].field_256 < 32 * stor38[address(player)].field_256:\n      mem[(34 * stor38[address(player)].field_256) + 384] = mem[stor38[address(player)].field_256 + 256]\n      s = stor38[address(player)].field_256 + 32\n      continue \n  mem[(32 * stor38[address(player)].field_256) + 320] = (32 * stor38[address(player)].field_256) + 96\n  mem[(64 * stor38[address(player)].field_256) + 384] = mem[256]\n  mem[(64 * stor38[address(player)].field_256) + 416 len floor32(mem[256])] = mem[288 len floor32(mem[256])]\n  return Array(len=stor38[address(player)].field_256, data=mem[(32 * stor38[address(player)].field_256) + 384 len (32 * stor38[address(player)].field_256) + (32 * mem[256]) + 32]), \n         (32 * stor38[address(player)].field_256) + 96\n\ndef updateGooConfig(address newSchemaAddress): # not payable\n  require owner == caller\n  require ext_code.size(stor51)\n  call stor51.productionUnitIdRange() with:\n       gas gas_remaining wei\n  mem[96 len 64] = ext_call.return_data[0 len 64]\n  require ext_call.success\n  idx = mem[96]\n  while idx <= ext_call.return_data[32]:\n      require ext_code.size(newSchemaAddress)\n      call newSchemaAddress.unitEthCost(uint256 cardId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_code.size(stor51)\n      call stor51.unitEthCost(uint256 cardId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_call.return_data[0] == ext_call.return_data[0]\n      require ext_code.size(newSchemaAddress)\n      call newSchemaAddress.unitGooProduction(uint256 unitId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      mem[100] = idx\n      require ext_code.size(stor51)\n      call stor51.unitGooProduction(uint256 unitId) with:\n           gas gas_remaining wei\n          args idx\n      mem[96] = ext_call.return_data[0]\n      require ext_call.success\n      require ext_call.return_data[0] == ext_call.return_data[0]\n      idx = idx + 1\n      continue \n  require ext_code.size(stor51)\n  call stor51.battleUnitIdRange() with:\n       gas gas_remaining wei\n  mem[96 len 64] = ext_call.return_data[0 len 64]\n  require ext_call.success\n  idx = mem[96]\n  while idx <= ext_call.return_data[32]:\n      require ext_code.size(newSchemaAddress)\n      call newSchemaAddress.unitEthCost(uint256 cardId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_code.size(stor51)\n      call stor51.unitEthCost(uint256 cardId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_call.return_data[0] == ext_call.return_data[0]\n      require ext_code.size(newSchemaAddress)\n      call newSchemaAddress.unitAttack(uint256 cardId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_code.size(stor51)\n      call stor51.unitAttack(uint256 cardId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_call.return_data[0] == ext_call.return_data[0]\n      require ext_code.size(newSchemaAddress)\n      call newSchemaAddress.unitDefense(uint256 cardId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_code.size(stor51)\n      call stor51.unitDefense(uint256 cardId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_call.return_data[0] == ext_call.return_data[0]\n      require ext_code.size(newSchemaAddress)\n      call newSchemaAddress.unitStealingCapacity(uint256 cardId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      mem[100] = idx\n      require ext_code.size(stor51)\n      call stor51.unitStealingCapacity(uint256 cardId) with:\n           gas gas_remaining wei\n          args idx\n      mem[96] = ext_call.return_data[0]\n      require ext_call.success\n      require ext_call.return_data[0] == ext_call.return_data[0]\n      idx = idx + 1\n      continue \n  require ext_code.size(stor51)\n  call stor51.upgradeIdRange() with:\n       gas gas_remaining wei\n  mem[96 len 64] = ext_call.return_data[0 len 64]\n  require ext_call.success\n  idx = mem[96]\n  while idx <= ext_call.return_data[32]:\n      require ext_code.size(newSchemaAddress)\n      call newSchemaAddress.upgradeGooCost(uint256 upgradeId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_code.size(stor51)\n      call stor51.upgradeGooCost(uint256 upgradeId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_call.return_data[0] == ext_call.return_data[0]\n      require ext_code.size(newSchemaAddress)\n      call newSchemaAddress.upgradeEthCost(uint256 upgradeId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_code.size(stor51)\n      call stor51.upgradeEthCost(uint256 upgradeId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_call.return_data[0] == ext_call.return_data[0]\n      require ext_code.size(newSchemaAddress)\n      call newSchemaAddress.upgradeClass(uint256 upgradeId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_code.size(stor51)\n      call stor51.upgradeClass(uint256 upgradeId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_call.return_data[0] == ext_call.return_data[0]\n      require ext_code.size(newSchemaAddress)\n      call newSchemaAddress.upgradeUnitId(uint256 upgradeId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_code.size(stor51)\n      call stor51.upgradeUnitId(uint256 upgradeId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_call.return_data[0] == ext_call.return_data[0]\n      require ext_code.size(newSchemaAddress)\n      call newSchemaAddress.upgradeValue(uint256 upgradeId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      mem[100] = idx\n      require ext_code.size(stor51)\n      call stor51.upgradeValue(uint256 upgradeId) with:\n           gas gas_remaining wei\n          args idx\n      mem[96] = ext_call.return_data[0]\n      require ext_call.success\n      require ext_call.return_data[0] == ext_call.return_data[0]\n      idx = idx + 1\n      continue \n  require ext_code.size(stor51)\n  call stor51.rareIdRange() with:\n       gas gas_remaining wei\n  mem[96 len 64] = ext_call.return_data[0 len 64]\n  require ext_call.success\n  s = 0\n  s = 0\n  s = 0\n  s = 0\n  s = 0\n  s = 0\n  idx = mem[96]\n  while idx <= ext_call.return_data[32]:\n      require ext_code.size(stor51)\n      call stor51.getRareInfo(uint256 rareId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_code.size(newSchemaAddress)\n      call newSchemaAddress.getRareInfo(uint256 rareId) with:\n           gas gas_remaining wei\n          args idx\n      mem[96 len 96] = ext_call.return_data[0 len 96]\n      require ext_call.success\n      require ext_call.return_data[0] == ext_call.return_data[0]\n      require ext_call.return_data[32] == ext_call.return_data[32]\n      require ext_call.return_data[64] == ext_call.return_data[64]\n      s = ext_call.return_data[64]\n      s = ext_call.return_data[32]\n      s = ext_call.return_data[0]\n      s = ext_call.return_data[64]\n      s = ext_call.return_data[32]\n      s = ext_call.return_data[0]\n      idx = idx + 1\n      continue \n  stor51 = newSchemaAddress\n\ndef buyUpgrade(uint256 upgradeId) payable: \n  require ext_code.size(stor51)\n  call stor51.getUpgradeInfo(uint256 upgradeId) with:\n       gas gas_remaining wei\n      args upgradeId\n  require ext_call.success\n  require gameStarted\n  require ext_call.return_data[96] > 0\n  require not stor22[caller][upgradeId]\n  if ext_call.return_data[160] > 0:\n      require stor22[caller][ext_call.return_data[160]]\n  if ext_call.return_data[32] > 0:\n      require call.value + etherBalanceOf[caller] >= ext_call.return_data[32]\n      if ext_call.return_data[32] > call.value:\n          etherBalanceOf[caller] = etherBalanceOf[caller] - ext_call.return_data[32] + call.value\n      totalEtherGooResearchPool = totalEtherGooResearchPool + ext_call.return_data[32] - (ext_call.return_data[32] / 50)\n      etherBalanceOf[stor2] += ext_call.return_data[32] / 50\n  if stor16[caller] <= 0:\n      if ext_call.return_data[0] <= 0:\n          totalSupply -= ext_call.return_data[0]\n          stor12[caller] -= ext_call.return_data[0]\n      else:\n          require stor12[caller] >= ext_call.return_data[0]\n          totalSupply -= ext_call.return_data[0]\n          stor12[caller] -= ext_call.return_data[0]\n  else:\n      if stor16[caller] >= block.timestamp:\n          if ext_call.return_data[0] <= 0:\n              totalSupply -= ext_call.return_data[0]\n              stor12[caller] -= ext_call.return_data[0]\n          else:\n              require stor12[caller] >= ext_call.return_data[0]\n              totalSupply -= ext_call.return_data[0]\n              stor12[caller] -= ext_call.return_data[0]\n      else:\n          if ext_call.return_data[0] <= (block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100:\n              totalSupply = ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) - ext_call.return_data[0] + totalSupply\n              stor12[caller] = ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100) - ext_call.return_data[0] + stor12[caller]\n          else:\n              require stor12[caller] >= ext_call.return_data[0] - ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n              totalSupply = totalSupply - ext_call.return_data[0] + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n              stor12[caller] = stor12[caller] - ext_call.return_data[0] + ((block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100)\n  stor16[caller] = block.timestamp\n  if not ext_call.return_data[64]:\n      stor25[caller][ext_call.return_data[96]] += ext_call.return_data[128]\n      gooProduction[caller][stor8.length] = gooProduction[caller][stor17[caller]] + (10 * ext_call.return_data[128] * stor21[caller][ext_call.return_data[96]]) + (stor26[caller][ext_call.return_data[96]] * ext_call.return_data[128] * stor21[caller][ext_call.return_data[96]])\n      lastGooProductionUpdate[caller] = stor8.length\n      totalGooProduction = (10 * ext_call.return_data[128] * stor21[caller][ext_call.return_data[96]]) + (stor26[caller][ext_call.return_data[96]] * ext_call.return_data[128] * stor21[caller][ext_call.return_data[96]]) + totalGooProduction\n  else:\n      if 1 == ext_call.return_data[64]:\n          stor26[caller][ext_call.return_data[96]] += ext_call.return_data[128]\n          require ext_code.size(stor51)\n          call stor51.unitGooProduction(uint256 unitId) with:\n               gas gas_remaining wei\n              args ext_call.return_data[96]\n          require ext_call.success\n          gooProduction[caller][stor8.length] = gooProduction[caller][stor17[caller]] + (stor25[caller][ext_call.return_data[96]] * ext_call.return_data[128] * stor21[caller][ext_call.return_data[96]]) + (ext_call.return_data[0] * ext_call.return_data[128] * stor21[caller][ext_call.return_data[96]])\n          lastGooProductionUpdate[caller] = stor8.length\n          totalGooProduction = (stor25[caller][ext_call.return_data[96]] * ext_call.return_data[128] * stor21[caller][ext_call.return_data[96]]) + (ext_call.return_data[0] * ext_call.return_data[128] * stor21[caller][ext_call.return_data[96]]) + totalGooProduction\n      else:\n          if 2 == ext_call.return_data[64]:\n              stor27[caller][ext_call.return_data[96]] += ext_call.return_data[128]\n          else:\n              if 3 == ext_call.return_data[64]:\n                  stor28[caller][ext_call.return_data[96]] += ext_call.return_data[128]\n              else:\n                  if 4 == ext_call.return_data[64]:\n                      stor29[caller][ext_call.return_data[96]] += ext_call.return_data[128]\n                  else:\n                      if 5 == ext_call.return_data[64]:\n                          stor30[caller][ext_call.return_data[96]] += ext_call.return_data[128]\n                      else:\n                          if 6 == ext_call.return_data[64]:\n                              stor31[caller][ext_call.return_data[96]] += ext_call.return_data[128]\n                          else:\n                              if 7 == ext_call.return_data[64]:\n                                  stor32[caller][ext_call.return_data[96]] += ext_call.return_data[128]\n                              else:\n                                  if 8 == ext_call.return_data[64]:\n                                      stor33[caller][ext_call.return_data[96]] = ext_call.return_data[128]\n  stor22[caller][upgradeId] = 1\n\ndef migrateV1Upgrades(address[] playerToCredit, uint256[] upgradeIds, uint256[] txProof) payable: \n  mem[64] = 96\n  require not call.value\n  require owner == caller\n  require not gameStarted\n  s = 0\n  t = 0\n  u = 0\n  u = 0\n  u = 0\n  idx = 0\n  while idx < txProof.length:\n      require idx < playerToCredit.length\n      require idx < upgradeIds.length\n      mem[mem[64] + 4] = cd[((32 * idx) + upgradeIds + 36)]\n      require ext_code.size(stor51)\n      call stor51.upgradeUnitId(uint256 upgradeId) with:\n           gas gas_remaining wei\n          args cd[((32 * idx) + upgradeIds + 36)]\n      mem[mem[64]] = ext_call.return_data[0]\n      require ext_call.success\n      if ext_call.return_data[0] <= 0:\n          s = s\n          t = t\n          u = ext_call.return_data[0]\n          u = cd[((32 * idx) + upgradeIds + 36)]\n          u = address(cd[((32 * idx) + playerToCredit + 36)])\n          idx = idx + 1\n          continue \n      mem[0] = cd[((32 * idx) + upgradeIds + 36)]\n      mem[32] = sha3(address(cd[((32 * idx) + playerToCredit + 36)]), 22)\n      if stor22[address(cd[((32 * idx) + playerToCredit + 36)])][cd[((32 * idx) + upgradeIds + 36)]]:\n          s = s\n          t = t\n          u = ext_call.return_data[0]\n          u = cd[((32 * idx) + upgradeIds + 36)]\n          u = address(cd[((32 * idx) + playerToCredit + 36)])\n          idx = idx + 1\n          continue \n      require ext_code.size(stor51)\n      call stor51.upgradeClass(uint256 upgradeId) with:\n           gas gas_remaining wei\n          args cd[((32 * idx) + upgradeIds + 36)]\n      require ext_call.success\n      require ext_code.size(stor51)\n      call stor51.upgradeValue(uint256 upgradeId) with:\n           gas gas_remaining wei\n          args cd[((32 * idx) + upgradeIds + 36)]\n      require ext_call.success\n      if not ext_call.return_data[0]:\n          stor25[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]] += ext_call.return_data[0]\n          gooProduction[address(cd[((32 * idx) + playerToCredit + 36)])][stor8.length] = gooProduction[address(cd[((32 * idx) + playerToCredit + 36)])][stor17[address(cd[((32 * idx) + playerToCredit + 36)])]] + (10 * ext_call.return_data[0] * stor21[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]]) + (stor26[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]] * ext_call.return_data[0] * stor21[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]])\n          lastGooProductionUpdate[address(cd[((32 * idx) + playerToCredit + 36)])] = stor8.length\n          totalGooProduction = (10 * ext_call.return_data[0] * stor21[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]]) + (stor26[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]] * ext_call.return_data[0] * stor21[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]]) + totalGooProduction\n      else:\n          if 1 == ext_call.return_data[0]:\n              stor26[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]] += ext_call.return_data[0]\n              require ext_code.size(stor51)\n              call stor51.unitGooProduction(uint256 unitId) with:\n                   gas gas_remaining wei\n                  args ext_call.return_data[0]\n              require ext_call.success\n              gooProduction[address(cd[((32 * idx) + playerToCredit + 36)])][stor8.length] = gooProduction[address(cd[((32 * idx) + playerToCredit + 36)])][stor17[address(cd[((32 * idx) + playerToCredit + 36)])]] + (stor25[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]] * ext_call.return_data[0] * stor21[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]]) + (ext_call.return_data[0] * ext_call.return_data[0] * stor21[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]])\n              lastGooProductionUpdate[address(cd[((32 * idx) + playerToCredit + 36)])] = stor8.length\n              totalGooProduction = (stor25[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]] * ext_call.return_data[0] * stor21[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]]) + (ext_call.return_data[0] * ext_call.return_data[0] * stor21[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]]) + totalGooProduction\n          else:\n              if 2 == ext_call.return_data[0]:\n                  stor27[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]] += ext_call.return_data[0]\n              else:\n                  if 3 == ext_call.return_data[0]:\n                      stor28[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]] += ext_call.return_data[0]\n                  else:\n                      if 4 == ext_call.return_data[0]:\n                          stor29[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]] += ext_call.return_data[0]\n                      else:\n                          if 5 == ext_call.return_data[0]:\n                              stor30[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]] += ext_call.return_data[0]\n                          else:\n                              if 6 == ext_call.return_data[0]:\n                                  stor31[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]] += ext_call.return_data[0]\n                              else:\n                                  if 7 == ext_call.return_data[0]:\n                                      stor32[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]] += ext_call.return_data[0]\n                                  else:\n                                      if 8 == ext_call.return_data[0]:\n                                          stor33[address(cd[((32 * idx) + playerToCredit + 36)])][ext_call.return_data[0]] = ext_call.return_data[0]\n      mem[0] = cd[((32 * idx) + upgradeIds + 36)]\n      mem[32] = sha3(address(cd[((32 * idx) + playerToCredit + 36)]), 22)\n      stor22[address(cd[((32 * idx) + playerToCredit + 36)])][cd[((32 * idx) + upgradeIds + 36)]] = 1\n      require idx < txProof.length\n      mem[mem[64]] = address(cd[((32 * idx) + playerToCredit + 36)])\n      mem[mem[64] + 32] = cd[((32 * idx) + upgradeIds + 36)]\n      mem[mem[64] + 64] = cd[((32 * idx) + txProof + 36)]\n      log UpgradeMigration(\n            address player=address(cd[((32 * idx) + playerToCredit + 36)]),\n            uint256 upgradeId=cd[((32 * idx) + upgradeIds + 36)],\n            uint256 txProof=cd[((32 * idx) + txProof + 36)])\n      s = ext_call.return_data[0]\n      t = ext_call.return_data[0]\n      u = ext_call.return_data[0]\n      u = cd[((32 * idx) + upgradeIds + 36)]\n      u = address(cd[((32 * idx) + playerToCredit + 36)])\n      idx = idx + 1\n      continue \n\ndef awardItemRafflePrize(address checkWinner, uint256 checkIndex): # not payable\n  require stor40 < block.timestamp\n  require not address(stor43.field_0)\n  require not stor23[stor41]\n  if not uint8(stor43.field_160):\n      require owner == caller\n      require stor40 < block.timestamp\n      require not uint8(stor43.field_160)\n      require stor42\n      stor44 = mulmod(block.hash(block.number - 1), stor42 + block.timestamp, stor42)\n      uint8(stor43.field_160) = 1\n  if not checkWinner:\n      s = 0\n      s = 0\n      s = 0\n      idx = 0\n      while idx < stor37[stor41].field_0:\n          require idx < stor37[stor41].field_0\n          require 0 < stor36[address(stor37[stor41][idx].field_0)].field_0\n          if stor44 >= stor36[address(stor37[stor41][idx].field_0)].field_0:\n              require stor36[address(stor37[stor41][idx].field_0)].field_256 - 1 < stor36[address(stor37[stor41][idx].field_0)].field_0\n              if stor44 <= stor36[address(stor37[stor41][idx].field_0)][stor36[address(stor37[stor41][idx].field_0)].field_256 - 1].field_256:\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          mem[0] = stor41\n          mem[32] = 37\n          s = stor36[address(stor37[stor41][idx].field_0)].field_256 - 1\n          s = sha3(address(stor37[stor41][idx].field_0), 36)\n          s = address(stor37[stor41][idx].field_0)\n          idx = idx + 1\n          continue \n  else:\n      if stor36[address(checkWinner)].field_256 <= 0:\n          s = 0\n          s = 0\n          s = 0\n          idx = 0\n          while idx < stor37[stor41].field_0:\n              require idx < stor37[stor41].field_0\n              require 0 < stor36[address(stor37[stor41][idx].field_0)].field_0\n              if stor44 >= stor36[address(stor37[stor41][idx].field_0)].field_0:\n                  require stor36[address(stor37[stor41][idx].field_0)].field_256 - 1 < stor36[address(stor37[stor41][idx].field_0)].field_0\n                  if stor44 <= stor36[address(stor37[stor41][idx].field_0)][stor36[address(stor37[stor41][idx].field_0)].field_256 - 1].field_256:\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              mem[0] = stor41\n              mem[32] = 37\n              s = stor36[address(stor37[stor41][idx].field_0)].field_256 - 1\n              s = sha3(address(stor37[stor41][idx].field_0), 36)\n              s = address(stor37[stor41][idx].field_0)\n              idx = idx + 1\n              continue \n      else:\n          if checkIndex >= stor36[address(checkWinner)].field_256:\n              s = 0\n              s = 0\n              s = 0\n              idx = 0\n              while idx < stor37[stor41].field_0:\n                  require idx < stor37[stor41].field_0\n                  require 0 < stor36[address(stor37[stor41][idx].field_0)].field_0\n                  if stor44 >= stor36[address(stor37[stor41][idx].field_0)].field_0:\n                      require stor36[address(stor37[stor41][idx].field_0)].field_256 - 1 < stor36[address(stor37[stor41][idx].field_0)].field_0\n                      if stor44 <= stor36[address(stor37[stor41][idx].field_0)][stor36[address(stor37[stor41][idx].field_0)].field_256 - 1].field_256:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  mem[0] = stor41\n                  mem[32] = 37\n                  s = stor36[address(stor37[stor41][idx].field_0)].field_256 - 1\n                  s = sha3(address(stor37[stor41][idx].field_0), 36)\n                  s = address(stor37[stor41][idx].field_0)\n                  idx = idx + 1\n                  continue \n          else:\n              if stor36[address(checkWinner)].field_512 != stor41:\n                  s = 0\n                  s = 0\n                  s = 0\n                  idx = 0\n                  while idx < stor37[stor41].field_0:\n                      require idx < stor37[stor41].field_0\n                      require 0 < stor36[address(stor37[stor41][idx].field_0)].field_0\n                      if stor44 >= stor36[address(stor37[stor41][idx].field_0)].field_0:\n                          require stor36[address(stor37[stor41][idx].field_0)].field_256 - 1 < stor36[address(stor37[stor41][idx].field_0)].field_0\n                          if stor44 <= stor36[address(stor37[stor41][idx].field_0)][stor36[address(stor37[stor41][idx].field_0)].field_256 - 1].field_256:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      mem[0] = stor41\n                      mem[32] = 37\n                      s = stor36[address(stor37[stor41][idx].field_0)].field_256 - 1\n                      s = sha3(address(stor37[stor41][idx].field_0), 36)\n                      s = address(stor37[stor41][idx].field_0)\n                      idx = idx + 1\n                      continue \n              else:\n                  require checkIndex < stor36[address(checkWinner)].field_0\n                  if stor44 < stor36[address(checkWinner)][checkIndex].field_0:\n                      s = 0\n                      s = 0\n                      s = 0\n                      idx = 0\n                      while idx < stor37[stor41].field_0:\n                          require idx < stor37[stor41].field_0\n                          require 0 < stor36[address(stor37[stor41][idx].field_0)].field_0\n                          if stor44 >= stor36[address(stor37[stor41][idx].field_0)].field_0:\n                              require stor36[address(stor37[stor41][idx].field_0)].field_256 - 1 < stor36[address(stor37[stor41][idx].field_0)].field_0\n                              if stor44 <= stor36[address(stor37[stor41][idx].field_0)][stor36[address(stor37[stor41][idx].field_0)].field_256 - 1].field_256:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          mem[0] = stor41\n                          mem[32] = 37\n                          s = stor36[address(stor37[stor41][idx].field_0)].field_256 - 1\n                          s = sha3(address(stor37[stor41][idx].field_0), 36)\n                          s = address(stor37[stor41][idx].field_0)\n                          idx = idx + 1\n                          continue \n                  else:\n                      if stor44 > stor36[address(checkWinner)][checkIndex].field_256:\n                          s = 0\n                          s = 0\n                          s = 0\n                          idx = 0\n                          while idx < stor37[stor41].field_0:\n                              require idx < stor37[stor41].field_0\n                              require 0 < stor36[address(stor37[stor41][idx].field_0)].field_0\n                              if stor44 >= stor36[address(stor37[stor41][idx].field_0)].field_0:\n                                  require stor36[address(stor37[stor41][idx].field_0)].field_256 - 1 < stor36[address(stor37[stor41][idx].field_0)].field_0\n                                  if stor44 <= stor36[address(stor37[stor41][idx].field_0)][stor36[address(stor37[stor41][idx].field_0)].field_256 - 1].field_256:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              mem[0] = stor41\n                              mem[32] = 37\n                              s = stor36[address(stor37[stor41][idx].field_0)].field_256 - 1\n                              s = sha3(address(stor37[stor41][idx].field_0), 36)\n                              s = address(stor37[stor41][idx].field_0)\n                              idx = idx + 1\n                              continue \n                      else:\n                          address(stor43.field_0) = checkWinner\n                          stor23[stor41] = checkWinner\n                          require ext_code.size(stor51)\n                          call stor51.rareStartPrice(uint256 rareId) with:\n                               gas gas_remaining wei\n                              args stor41\n                          require ext_call.success\n                          stor24[stor41].field_0 = 21 * ext_call.return_data[0] / 20\n                          stor16[address(checkWinner)] = block.timestamp\n                          if stor16[address(checkWinner)] <= 0:\n                          else:\n                              if stor16[address(checkWinner)] >= block.timestamp:\n                              else:\n                                  totalSupply += (block.timestamp * gooProduction[address(checkWinner)][stor17[address(checkWinner)]]) - (stor16[address(checkWinner)] * gooProduction[address(checkWinner)][stor17[address(checkWinner)]]) / 100\n                                  stor12[address(checkWinner)] += (block.timestamp * gooProduction[address(checkWinner)][stor17[address(checkWinner)]]) - (stor16[address(checkWinner)] * gooProduction[address(checkWinner)][stor17[address(checkWinner)]]) / 100\n                          require ext_code.size(stor51)\n                          call stor51.getRareInfo(uint256 rareId) with:\n                               gas gas_remaining wei\n                              args stor41\n                          require ext_call.success\n                          if not ext_call.return_data[0]:\n                              stor25[address(checkWinner)][ext_call.return_data[32]] += ext_call.return_data[64]\n                              gooProduction[address(checkWinner)][stor8.length] = gooProduction[address(checkWinner)][stor17[address(checkWinner)]] + (10 * ext_call.return_data[64] * stor21[address(checkWinner)][ext_call.return_data[32]]) + (stor26[address(checkWinner)][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[address(checkWinner)][ext_call.return_data[32]])\n                              lastGooProductionUpdate[address(checkWinner)] = stor8.length\n                              totalGooProduction = (10 * ext_call.return_data[64] * stor21[address(checkWinner)][ext_call.return_data[32]]) + (stor26[address(checkWinner)][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[address(checkWinner)][ext_call.return_data[32]]) + totalGooProduction\n                          else:\n                              if 1 == ext_call.return_data[0]:\n                                  stor26[address(checkWinner)][ext_call.return_data[32]] += ext_call.return_data[64]\n                                  require ext_code.size(stor51)\n                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                       gas gas_remaining wei\n                                      args ext_call.return_data[32]\n                                  require ext_call.success\n                                  gooProduction[address(checkWinner)][stor8.length] = gooProduction[address(checkWinner)][stor17[address(checkWinner)]] + (stor25[address(checkWinner)][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[address(checkWinner)][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[address(checkWinner)][ext_call.return_data[32]])\n                                  lastGooProductionUpdate[address(checkWinner)] = stor8.length\n                                  totalGooProduction = (stor25[address(checkWinner)][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[address(checkWinner)][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[address(checkWinner)][ext_call.return_data[32]]) + totalGooProduction\n                              else:\n                                  if 2 == ext_call.return_data[0]:\n                                      stor27[address(checkWinner)][ext_call.return_data[32]] += ext_call.return_data[64]\n                                  else:\n                                      if 3 == ext_call.return_data[0]:\n                                          stor28[address(checkWinner)][ext_call.return_data[32]] += ext_call.return_data[64]\n                                      else:\n                                          if 4 == ext_call.return_data[0]:\n                                              stor29[address(checkWinner)][ext_call.return_data[32]] += ext_call.return_data[64]\n                                          else:\n                                              if 5 == ext_call.return_data[0]:\n                                                  stor30[address(checkWinner)][ext_call.return_data[32]] += ext_call.return_data[64]\n                                              else:\n                                                  if 6 == ext_call.return_data[0]:\n                                                      stor31[address(checkWinner)][ext_call.return_data[32]] += ext_call.return_data[64]\n                                                  else:\n                                                      if 7 == ext_call.return_data[0]:\n                                                          stor32[address(checkWinner)][ext_call.return_data[32]] += ext_call.return_data[64]\n                                                      else:\n                                                          if 8 == ext_call.return_data[0]:\n                                                              stor33[address(checkWinner)][ext_call.return_data[32]] = ext_call.return_data[64]\n\ndef getPlayersBattleStats(address player): # not payable\n  require ext_code.size(stor51)\n  call stor51.battleUnitIdRange() with:\n       gas gas_remaining wei\n  mem[96 len 64] = ext_call.return_data[0 len 64]\n  require ext_call.success\n  s = 0\n  t = 0\n  u = 0\n  idx = mem[96]\n  while idx <= ext_call.return_data[32]:\n      require ext_code.size(stor51)\n      call stor51.unitAttack(uint256 cardId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      require ext_code.size(stor51)\n      call stor51.unitStealingCapacity(uint256 cardId) with:\n           gas gas_remaining wei\n          args idx\n      require ext_call.success\n      mem[0] = idx\n      mem[32] = sha3(address(player), 29)\n      mem[100] = idx\n      require ext_code.size(stor51)\n      call stor51.unitDefense(uint256 cardId) with:\n           gas gas_remaining wei\n          args idx\n      mem[96] = ext_call.return_data[0]\n      require ext_call.success\n      s = s + ((10 * ext_call.return_data[0] * stor21[address(player)][idx]) + (stor32[address(player)][idx] * ext_call.return_data[0] * stor21[address(player)][idx]) + (10 * stor31[address(player)][idx] * stor21[address(player)][idx]) + (stor32[address(player)][idx] * stor31[address(player)][idx] * stor21[address(player)][idx]) / 10)\n      t = t + ((10 * ext_call.return_data[0] * stor21[address(player)][idx]) + (stor30[address(player)][idx] * ext_call.return_data[0] * stor21[address(player)][idx]) + (10 * stor29[address(player)][idx] * stor21[address(player)][idx]) + (stor30[address(player)][idx] * stor29[address(player)][idx] * stor21[address(player)][idx]) / 10)\n      u = u + ((10 * ext_call.return_data[0] * stor21[address(player)][idx]) + (stor28[address(player)][idx] * ext_call.return_data[0] * stor21[address(player)][idx]) + (10 * stor27[address(player)][idx] * stor21[address(player)][idx]) + (stor28[address(player)][idx] * stor27[address(player)][idx] * stor21[address(player)][idx]) / 10)\n      idx = idx + 1\n      continue \n  if stor20[address(player)] <= block.timestamp:\n      return u + (ext_call.return_data[32] * u) - (mem[96] * u) + (u * ext_call.return_data[32]) + (ext_call.return_data[32] * u * ext_call.return_data[32]) - (mem[96] * u * ext_call.return_data[32]) - (u * mem[96]) - (ext_call.return_data[32] * u * mem[96]) + (mem[96] * u * mem[96]) + (u * ext_call.return_data[32]) + (ext_call.return_data[32] * u * ext_call.return_data[32]) - (mem[96] * u * ext_call.return_data[32]) + (u * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * u * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * u * ext_call.return_data[32] * ext_call.return_data[32]) - (u * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * u * mem[96] * ext_call.return_data[32]) + (mem[96] * u * mem[96] * ext_call.return_data[32]) - (u * mem[96]) - (ext_call.return_data[32] * u * mem[96]) + (mem[96] * u * mem[96]) - (u * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * u * ext_call.return_data[32] * mem[96]) + (mem[96] * u * ext_call.return_data[32] * mem[96]) + (u * mem[96] * mem[96]) + (ext_call.return_data[32] * u * mem[96] * mem[96]) - (mem[96] * u * mem[96] * mem[96]), \n             t + (ext_call.return_data[32] * t) - (mem[96] * t) + (t * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32]) - (t * mem[96]) - (ext_call.return_data[32] * t * mem[96]) + (mem[96] * t * mem[96]) + (t * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32]) + (t * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32]) - (t * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32]) + (mem[96] * t * mem[96] * ext_call.return_data[32]) - (t * mem[96]) - (ext_call.return_data[32] * t * mem[96]) + (mem[96] * t * mem[96]) - (t * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96]) + (mem[96] * t * ext_call.return_data[32] * mem[96]) + (t * mem[96] * mem[96]) + (ext_call.return_data[32] * t * mem[96] * mem[96]) - (mem[96] * t * mem[96] * mem[96]),\n             s + (ext_call.return_data[32] * s) - (mem[96] * s) + (s * ext_call.return_data[32]) + (ext_call.return_data[32] * s * ext_call.return_data[32]) - (mem[96] * s * ext_call.return_data[32]) - (s * mem[96]) - (ext_call.return_data[32] * s * mem[96]) + (mem[96] * s * mem[96]) + (s * ext_call.return_data[32]) + (ext_call.return_data[32] * s * ext_call.return_data[32]) - (mem[96] * s * ext_call.return_data[32]) + (s * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * s * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * s * ext_call.return_data[32] * ext_call.return_data[32]) - (s * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * s * mem[96] * ext_call.return_data[32]) + (mem[96] * s * mem[96] * ext_call.return_data[32]) - (s * mem[96]) - (ext_call.return_data[32] * s * mem[96]) + (mem[96] * s * mem[96]) - (s * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * s * ext_call.return_data[32] * mem[96]) + (mem[96] * s * ext_call.return_data[32] * mem[96]) + (s * mem[96] * mem[96]) + (ext_call.return_data[32] * s * mem[96] * mem[96]) - (mem[96] * s * mem[96] * mem[96]),\n             stor20[address(player)]\n  require ext_code.size(stor51)\n  call stor51.getWeakenedDefensePower(uint256 defendingPower) with:\n       gas gas_remaining wei\n      args (t + (ext_call.return_data[32] * t) - (mem[96] * t) + (t * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32]) - (t * mem[96]) - (ext_call.return_data[32] * t * mem[96]) + (mem[96] * t * mem[96]) + (t * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32]) + (t * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32]) - (t * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32]) + (mem[96] * t * mem[96] * ext_call.return_data[32]) - (t * mem[96]) - (ext_call.return_data[32] * t * mem[96]) + (mem[96] * t * mem[96]) - (t * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96]) + (mem[96] * t * ext_call.return_data[32] * mem[96]) + (t * mem[96] * mem[96]) + (ext_call.return_data[32] * t * mem[96] * mem[96]) - (mem[96] * t * mem[96] * mem[96]) + (t * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32]) + (t * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32]) - (t * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32]) + (mem[96] * t * mem[96] * ext_call.return_data[32]) + (t * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32]) + (t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) - (t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) + (mem[96] * t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) - (t * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32]) + (mem[96] * t * mem[96] * ext_call.return_data[32]) - (t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) + (mem[96] * t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) + (t * mem[96] * mem[96] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * mem[96] * mem[96] * ext_call.return_data[32]) - (mem[96] * t * mem[96] * mem[96] * ext_call.return_data[32]) - (t * mem[96]) - (ext_call.return_data[32] * t * mem[96]) + (mem[96] * t * mem[96]) - (t * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96]) + (mem[96] * t * ext_call.return_data[32] * mem[96]) + (t * mem[96] * mem[96]) + (ext_call.return_data[32] * t * mem[96] * mem[96]) - (mem[96] * t * mem[96] * mem[96]) - (t * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96]) + (mem[96] * t * ext_call.return_data[32] * mem[96]) - (t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) + (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) + (t * mem[96] * ext_call.return_data[32] * mem[96]) + (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32] * mem[96]) - (mem[96] * t * mem[96] * ext_call.return_data[32] * mem[96]) + (t * mem[96] * mem[96]) + (ext_call.return_data[32] * t * mem[96] * mem[96]) - (mem[96] * t * mem[96] * mem[96]) + (t * ext_call.return_data[32] * mem[96] * mem[96]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96] * mem[96]) - (mem[96] * t * ext_call.return_data[32] * mem[96] * mem[96]) - (t * mem[96] * mem[96] * mem[96]) - (ext_call.return_data[32] * t * mem[96] * mem[96] * mem[96]) + (mem[96] * t * mem[96] * mem[96] * mem[96]) + (t * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32]) + (t * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32]) - (t * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32]) + (mem[96] * t * mem[96] * ext_call.return_data[32]) + (t * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32]) + (t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) - (t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) + (mem[96] * t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) - (t * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32]) + (mem[96] * t * mem[96] * ext_call.return_data[32]) - (t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) + (mem[96] * t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) + (t * mem[96] * mem[96] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * mem[96] * mem[96] * ext_call.return_data[32]) - (mem[96] * t * mem[96] * mem[96] * ext_call.return_data[32]) + (t * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32]) + (t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) - (t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) + (mem[96] * t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) + (t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) + (t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) - (t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) + (mem[96] * t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32]) - (t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) + (mem[96] * t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) - (t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) + (mem[96] * t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) + (t * mem[96] * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * mem[96] * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * t * mem[96] * mem[96] * ext_call.return_data[32] * ext_call.return_data[32]) - (t * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32]) + (mem[96] * t * mem[96] * ext_call.return_data[32]) - (t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) + (mem[96] * t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) + (t * mem[96] * mem[96] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * mem[96] * mem[96] * ext_call.return_data[32]) - (mem[96] * t * mem[96] * mem[96] * ext_call.return_data[32]) - (t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) + (mem[96] * t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) - (t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) + (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) + (t * mem[96] * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) - (mem[96] * t * mem[96] * ext_call.return_data[32] * mem[96] * ext_call.return_data[32]) + (t * mem[96] * mem[96] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * mem[96] * mem[96] * ext_call.return_data[32]) - (mem[96] * t * mem[96] * mem[96] * ext_call.return_data[32]) + (t * ext_call.return_data[32] * mem[96] * mem[96] * ext_call.return_data[32]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96] * mem[96] * ext_call.return_data[32]) - (mem[96] * t * ext_call.return_data[32] * mem[96] * mem[96] * ext_call.return_data[32]) - (t * mem[96] * mem[96] * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * t * mem[96] * mem[96] * mem[96] * ext_call.return_data[32]) + (mem[96] * t * mem[96] * mem[96] * mem[96] * ext_call.return_data[32]) - (t * mem[96]) - (ext_call.return_data[32] * t * mem[96]) + (mem[96] * t * mem[96]) - (t * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96]) + (mem[96] * t * ext_call.return_data[32] * mem[96]) + (t * mem[96] * mem[96]) + (ext_call.return_data[32] * t * mem[96] * mem[96]) - (mem[96] * t * mem[96] * mem[96]) - (t * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96]) + (mem[96] * t * ext_call.return_data[32] * mem[96]) - (t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) + (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) + (t * mem[96] * ext_call.return_data[32] * mem[96]) + (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32] * mem[96]) - (mem[96] * t * mem[96] * ext_call.return_data[32] * mem[96]) + (t * mem[96] * mem[96]) + (ext_call.return_data[32] * t * mem[96] * mem[96]) - (mem[96] * t * mem[96] * mem[96]) + (t * ext_call.return_data[32] * mem[96] * mem[96]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96] * mem[96]) - (mem[96] * t * ext_call.return_data[32] * mem[96] * mem[96]) - (t * mem[96] * mem[96] * mem[96]) - (ext_call.return_data[32] * t * mem[96] * mem[96] * mem[96]) + (mem[96] * t * mem[96] * mem[96] * mem[96]) - (t * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96]) + (mem[96] * t * ext_call.return_data[32] * mem[96]) - (t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) + (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) + (t * mem[96] * ext_call.return_data[32] * mem[96]) + (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32] * mem[96]) - (mem[96] * t * mem[96] * ext_call.return_data[32] * mem[96]) - (t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) + (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) - (t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) + (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) + (t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) + (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) - (mem[96] * t * mem[96] * ext_call.return_data[32] * ext_call.return_data[32] * mem[96]) + (t * mem[96] * ext_call.return_data[32] * mem[96]) + (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32] * mem[96]) - (mem[96] * t * mem[96] * ext_call.return_data[32] * mem[96]) + (t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32] * mem[96]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32] * mem[96]) - (mem[96] * t * ext_call.return_data[32] * mem[96] * ext_call.return_data[32] * mem[96]) - (t * mem[96] * mem[96] * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * t * mem[96] * mem[96] * ext_call.return_data[32] * mem[96]) + (mem[96] * t * mem[96] * mem[96] * ext_call.return_data[32] * mem[96]) + (t * mem[96] * mem[96]) + (ext_call.return_data[32] * t * mem[96] * mem[96]) - (mem[96] * t * mem[96] * mem[96]) + (t * ext_call.return_data[32] * mem[96] * mem[96]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96] * mem[96]) - (mem[96] * t * ext_call.return_data[32] * mem[96] * mem[96]) - (t * mem[96] * mem[96] * mem[96]) - (ext_call.return_data[32] * t * mem[96] * mem[96] * mem[96]) + (mem[96] * t * mem[96] * mem[96] * mem[96]) + (t * ext_call.return_data[32] * mem[96] * mem[96]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96] * mem[96]) - (mem[96] * t * ext_call.return_data[32] * mem[96] * mem[96]) + (t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96] * mem[96]) + (ext_call.return_data[32] * t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96] * mem[96]) - (mem[96] * t * ext_call.return_data[32] * ext_call.return_data[32] * mem[96] * mem[96]) - (t * mem[96] * ext_call.return_data[32] * mem[96] * mem[96]) - (ext_call.return_data[32] * t * mem[96] * ext_call.return_data[32] * mem[96] * mem[96]) + (mem[96] * t * mem[96] * ext_call.return_data[32] * mem[96] * mem[96]) - (t * mem[96] * mem[96] * mem[96]) - (ext_call.return_data[32] * t * mem[96] * mem[96] * mem[96]) + (mem[96] * t * mem[96] * mem[96] * mem[96]) - (t * ext_call.return_data[32] * mem[96] * mem[96] * mem[96]) - (ext_call.return_data[32] * t * ext_call.return_data[32] * mem[96] * mem[96] * mem[96]) + (mem[96] * t * ext_call.return_data[32] * mem[96] * mem[96] * mem[96]) + (t * mem[96] * mem[96] * mem[96] * mem[96]) + (ext_call.return_data[32] * t * mem[96] * mem[96] * mem[96] * mem[96]) - (mem[96] * t * mem[96] * mem[96] * mem[96] * mem[96]))\n  require ext_call.success\n  return u + (ext_call.return_data[32] * u) - (mem[96] * u) + (u * ext_call.return_data[32]) + (ext_call.return_data[32] * u * ext_call.return_data[32]) - (mem[96] * u * ext_call.return_data[32]) - (u * mem[96]) - (ext_call.return_data[32] * u * mem[96]) + (mem[96] * u * mem[96]) + (u * ext_call.return_data[32]) + (ext_call.return_data[32] * u * ext_call.return_data[32]) - (mem[96] * u * ext_call.return_data[32]) + (u * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * u * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * u * ext_call.return_data[32] * ext_call.return_data[32]) - (u * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * u * mem[96] * ext_call.return_data[32]) + (mem[96] * u * mem[96] * ext_call.return_data[32]) - (u * mem[96]) - (ext_call.return_data[32] * u * mem[96]) + (mem[96] * u * mem[96]) - (u * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * u * ext_call.return_data[32] * mem[96]) + (mem[96] * u * ext_call.return_data[32] * mem[96]) + (u * mem[96] * mem[96]) + (ext_call.return_data[32] * u * mem[96] * mem[96]) - (mem[96] * u * mem[96] * mem[96]), \n         ext_call.return_data[0],\n         s + (ext_call.return_data[32] * s) - (mem[96] * s) + (s * ext_call.return_data[32]) + (ext_call.return_data[32] * s * ext_call.return_data[32]) - (mem[96] * s * ext_call.return_data[32]) - (s * mem[96]) - (ext_call.return_data[32] * s * mem[96]) + (mem[96] * s * mem[96]) + (s * ext_call.return_data[32]) + (ext_call.return_data[32] * s * ext_call.return_data[32]) - (mem[96] * s * ext_call.return_data[32]) + (s * ext_call.return_data[32] * ext_call.return_data[32]) + (ext_call.return_data[32] * s * ext_call.return_data[32] * ext_call.return_data[32]) - (mem[96] * s * ext_call.return_data[32] * ext_call.return_data[32]) - (s * mem[96] * ext_call.return_data[32]) - (ext_call.return_data[32] * s * mem[96] * ext_call.return_data[32]) + (mem[96] * s * mem[96] * ext_call.return_data[32]) - (s * mem[96]) - (ext_call.return_data[32] * s * mem[96]) + (mem[96] * s * mem[96]) - (s * ext_call.return_data[32] * mem[96]) - (ext_call.return_data[32] * s * ext_call.return_data[32] * mem[96]) + (mem[96] * s * ext_call.return_data[32] * mem[96]) + (s * mem[96] * mem[96]) + (ext_call.return_data[32] * s * mem[96] * mem[96]) - (mem[96] * s * mem[96] * mem[96]),\n         stor20[address(player)]\n\ndef awardUnitRafflePrize(address checkWinner, uint256 checkIndex): # not payable\n  require stor45 < block.timestamp\n  require not address(stor49.field_0)\n  if not uint8(stor49.field_160):\n      require owner == caller\n      require stor45 < block.timestamp\n      require not uint8(stor49.field_160)\n      require stor48\n      stor50 = mulmod(block.hash(block.number - 1), stor48 + block.timestamp, stor48)\n      uint8(stor49.field_160) = 1\n  if not checkWinner:\n      s = 0\n      s = 0\n      s = 0\n      idx = 0\n      while idx < stor39[stor46].field_0:\n          require idx < stor39[stor46].field_0\n          require 0 < stor38[address(stor39[stor46][idx].field_0)].field_0\n          if stor50 >= stor38[address(stor39[stor46][idx].field_0)].field_0:\n              require stor38[address(stor39[stor46][idx].field_0)].field_256 - 1 < stor38[address(stor39[stor46][idx].field_0)].field_0\n              if stor50 <= stor38[address(stor39[stor46][idx].field_0)][stor38[address(stor39[stor46][idx].field_0)].field_256 - 1].field_256:\n                  s = 0\n                  s = 0\n                  while s < stor38[address(stor39[stor46][idx].field_0)].field_256:\n                      require s < stor38[address(stor39[stor46][idx].field_0)].field_0\n                      if stor50 < stor38[address(stor39[stor46][idx].field_0)][s].field_0:\n                          mem[0] = stor46\n                          mem[32] = 39\n                          s = (2 * s) + sha3(sha3(address(stor39[stor46][idx].field_0), 38))\n                          s = s + 1\n                          continue \n                      if stor50 > stor38[address(stor39[stor46][idx].field_0)][s].field_256:\n                          mem[0] = stor46\n                          mem[32] = 39\n                          s = (2 * s) + sha3(sha3(address(stor39[stor46][idx].field_0), 38))\n                          s = s + 1\n                          continue \n                      address(stor49.field_0) = address(stor39[stor46][idx].field_0)\n                      stor16[address(stor39[stor46][idx].field_0)] = block.timestamp\n                      if stor16[address(stor39[stor46][idx].field_0)] <= 0:\n                      else:\n                          if stor16[address(stor39[stor46][idx].field_0)] >= block.timestamp:\n                          else:\n                              totalSupply += (block.timestamp * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) - (stor16[address(stor39[stor46][idx].field_0)] * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) / 100\n                              stor12[address(stor39[stor46][idx].field_0)] += (block.timestamp * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) - (stor16[address(stor39[stor46][idx].field_0)] * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) / 100\n                      require ext_code.size(stor51)\n                      call stor51.unitGooProduction(uint256 unitId) with:\n                           gas gas_remaining wei\n                          args stor47\n                      require ext_call.success\n                      gooProduction[address(stor39[stor46][idx].field_0)][stor8.length] = gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]] + (10 * ext_call.return_data[0]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * ext_call.return_data[0]) + (10 * stor25[address(stor39[stor46][idx].field_0)][stor47]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * stor25[address(stor39[stor46][idx].field_0)][stor47])\n                      lastGooProductionUpdate[address(stor39[stor46][idx].field_0)] = stor8.length\n                      totalGooProduction = (10 * ext_call.return_data[0]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * ext_call.return_data[0]) + (10 * stor25[address(stor39[stor46][idx].field_0)][stor47]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * stor25[address(stor39[stor46][idx].field_0)][stor47]) + totalGooProduction\n                      stor21[address(stor39[stor46][idx].field_0)][stor47]++\n                      stop\n          mem[0] = stor46\n          mem[32] = 39\n          s = stor38[address(stor39[stor46][idx].field_0)].field_256 - 1\n          s = sha3(address(stor39[stor46][idx].field_0), 38)\n          s = address(stor39[stor46][idx].field_0)\n          idx = idx + 1\n          continue \n  else:\n      if stor38[address(checkWinner)].field_256 <= 0:\n          s = 0\n          s = 0\n          s = 0\n          idx = 0\n          while idx < stor39[stor46].field_0:\n              require idx < stor39[stor46].field_0\n              require 0 < stor38[address(stor39[stor46][idx].field_0)].field_0\n              if stor50 >= stor38[address(stor39[stor46][idx].field_0)].field_0:\n                  require stor38[address(stor39[stor46][idx].field_0)].field_256 - 1 < stor38[address(stor39[stor46][idx].field_0)].field_0\n                  if stor50 <= stor38[address(stor39[stor46][idx].field_0)][stor38[address(stor39[stor46][idx].field_0)].field_256 - 1].field_256:\n                      s = 0\n                      s = 0\n                      while s < stor38[address(stor39[stor46][idx].field_0)].field_256:\n                          require s < stor38[address(stor39[stor46][idx].field_0)].field_0\n                          if stor50 < stor38[address(stor39[stor46][idx].field_0)][s].field_0:\n                              mem[0] = stor46\n                              mem[32] = 39\n                              s = (2 * s) + sha3(sha3(address(stor39[stor46][idx].field_0), 38))\n                              s = s + 1\n                              continue \n                          if stor50 > stor38[address(stor39[stor46][idx].field_0)][s].field_256:\n                              mem[0] = stor46\n                              mem[32] = 39\n                              s = (2 * s) + sha3(sha3(address(stor39[stor46][idx].field_0), 38))\n                              s = s + 1\n                              continue \n                          address(stor49.field_0) = address(stor39[stor46][idx].field_0)\n                          stor16[address(stor39[stor46][idx].field_0)] = block.timestamp\n                          if stor16[address(stor39[stor46][idx].field_0)] <= 0:\n                          else:\n                              if stor16[address(stor39[stor46][idx].field_0)] >= block.timestamp:\n                              else:\n                                  totalSupply += (block.timestamp * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) - (stor16[address(stor39[stor46][idx].field_0)] * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) / 100\n                                  stor12[address(stor39[stor46][idx].field_0)] += (block.timestamp * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) - (stor16[address(stor39[stor46][idx].field_0)] * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) / 100\n                          require ext_code.size(stor51)\n                          call stor51.unitGooProduction(uint256 unitId) with:\n                               gas gas_remaining wei\n                              args stor47\n                          require ext_call.success\n                          gooProduction[address(stor39[stor46][idx].field_0)][stor8.length] = gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]] + (10 * ext_call.return_data[0]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * ext_call.return_data[0]) + (10 * stor25[address(stor39[stor46][idx].field_0)][stor47]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * stor25[address(stor39[stor46][idx].field_0)][stor47])\n                          lastGooProductionUpdate[address(stor39[stor46][idx].field_0)] = stor8.length\n                          totalGooProduction = (10 * ext_call.return_data[0]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * ext_call.return_data[0]) + (10 * stor25[address(stor39[stor46][idx].field_0)][stor47]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * stor25[address(stor39[stor46][idx].field_0)][stor47]) + totalGooProduction\n                          stor21[address(stor39[stor46][idx].field_0)][stor47]++\n                          stop\n              mem[0] = stor46\n              mem[32] = 39\n              s = stor38[address(stor39[stor46][idx].field_0)].field_256 - 1\n              s = sha3(address(stor39[stor46][idx].field_0), 38)\n              s = address(stor39[stor46][idx].field_0)\n              idx = idx + 1\n              continue \n      else:\n          if checkIndex >= stor38[address(checkWinner)].field_256:\n              s = 0\n              s = 0\n              s = 0\n              idx = 0\n              while idx < stor39[stor46].field_0:\n                  require idx < stor39[stor46].field_0\n                  require 0 < stor38[address(stor39[stor46][idx].field_0)].field_0\n                  if stor50 >= stor38[address(stor39[stor46][idx].field_0)].field_0:\n                      require stor38[address(stor39[stor46][idx].field_0)].field_256 - 1 < stor38[address(stor39[stor46][idx].field_0)].field_0\n                      if stor50 <= stor38[address(stor39[stor46][idx].field_0)][stor38[address(stor39[stor46][idx].field_0)].field_256 - 1].field_256:\n                          s = 0\n                          s = 0\n                          while s < stor38[address(stor39[stor46][idx].field_0)].field_256:\n                              require s < stor38[address(stor39[stor46][idx].field_0)].field_0\n                              if stor50 < stor38[address(stor39[stor46][idx].field_0)][s].field_0:\n                                  mem[0] = stor46\n                                  mem[32] = 39\n                                  s = (2 * s) + sha3(sha3(address(stor39[stor46][idx].field_0), 38))\n                                  s = s + 1\n                                  continue \n                              if stor50 > stor38[address(stor39[stor46][idx].field_0)][s].field_256:\n                                  mem[0] = stor46\n                                  mem[32] = 39\n                                  s = (2 * s) + sha3(sha3(address(stor39[stor46][idx].field_0), 38))\n                                  s = s + 1\n                                  continue \n                              address(stor49.field_0) = address(stor39[stor46][idx].field_0)\n                              stor16[address(stor39[stor46][idx].field_0)] = block.timestamp\n                              if stor16[address(stor39[stor46][idx].field_0)] <= 0:\n                              else:\n                                  if stor16[address(stor39[stor46][idx].field_0)] >= block.timestamp:\n                                  else:\n                                      totalSupply += (block.timestamp * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) - (stor16[address(stor39[stor46][idx].field_0)] * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) / 100\n                                      stor12[address(stor39[stor46][idx].field_0)] += (block.timestamp * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) - (stor16[address(stor39[stor46][idx].field_0)] * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) / 100\n                              require ext_code.size(stor51)\n                              call stor51.unitGooProduction(uint256 unitId) with:\n                                   gas gas_remaining wei\n                                  args stor47\n                              require ext_call.success\n                              gooProduction[address(stor39[stor46][idx].field_0)][stor8.length] = gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]] + (10 * ext_call.return_data[0]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * ext_call.return_data[0]) + (10 * stor25[address(stor39[stor46][idx].field_0)][stor47]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * stor25[address(stor39[stor46][idx].field_0)][stor47])\n                              lastGooProductionUpdate[address(stor39[stor46][idx].field_0)] = stor8.length\n                              totalGooProduction = (10 * ext_call.return_data[0]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * ext_call.return_data[0]) + (10 * stor25[address(stor39[stor46][idx].field_0)][stor47]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * stor25[address(stor39[stor46][idx].field_0)][stor47]) + totalGooProduction\n                              stor21[address(stor39[stor46][idx].field_0)][stor47]++\n                              stop\n                  mem[0] = stor46\n                  mem[32] = 39\n                  s = stor38[address(stor39[stor46][idx].field_0)].field_256 - 1\n                  s = sha3(address(stor39[stor46][idx].field_0), 38)\n                  s = address(stor39[stor46][idx].field_0)\n                  idx = idx + 1\n                  continue \n          else:\n              if stor38[address(checkWinner)].field_512 != stor46:\n                  s = 0\n                  s = 0\n                  s = 0\n                  idx = 0\n                  while idx < stor39[stor46].field_0:\n                      require idx < stor39[stor46].field_0\n                      require 0 < stor38[address(stor39[stor46][idx].field_0)].field_0\n                      if stor50 >= stor38[address(stor39[stor46][idx].field_0)].field_0:\n                          require stor38[address(stor39[stor46][idx].field_0)].field_256 - 1 < stor38[address(stor39[stor46][idx].field_0)].field_0\n                          if stor50 <= stor38[address(stor39[stor46][idx].field_0)][stor38[address(stor39[stor46][idx].field_0)].field_256 - 1].field_256:\n                              s = 0\n                              s = 0\n                              while s < stor38[address(stor39[stor46][idx].field_0)].field_256:\n                                  require s < stor38[address(stor39[stor46][idx].field_0)].field_0\n                                  if stor50 < stor38[address(stor39[stor46][idx].field_0)][s].field_0:\n                                      mem[0] = stor46\n                                      mem[32] = 39\n                                      s = (2 * s) + sha3(sha3(address(stor39[stor46][idx].field_0), 38))\n                                      s = s + 1\n                                      continue \n                                  if stor50 > stor38[address(stor39[stor46][idx].field_0)][s].field_256:\n                                      mem[0] = stor46\n                                      mem[32] = 39\n                                      s = (2 * s) + sha3(sha3(address(stor39[stor46][idx].field_0), 38))\n                                      s = s + 1\n                                      continue \n                                  address(stor49.field_0) = address(stor39[stor46][idx].field_0)\n                                  stor16[address(stor39[stor46][idx].field_0)] = block.timestamp\n                                  if stor16[address(stor39[stor46][idx].field_0)] <= 0:\n                                  else:\n                                      if stor16[address(stor39[stor46][idx].field_0)] >= block.timestamp:\n                                      else:\n                                          totalSupply += (block.timestamp * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) - (stor16[address(stor39[stor46][idx].field_0)] * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) / 100\n                                          stor12[address(stor39[stor46][idx].field_0)] += (block.timestamp * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) - (stor16[address(stor39[stor46][idx].field_0)] * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) / 100\n                                  require ext_code.size(stor51)\n                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                       gas gas_remaining wei\n                                      args stor47\n                                  require ext_call.success\n                                  gooProduction[address(stor39[stor46][idx].field_0)][stor8.length] = gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]] + (10 * ext_call.return_data[0]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * ext_call.return_data[0]) + (10 * stor25[address(stor39[stor46][idx].field_0)][stor47]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * stor25[address(stor39[stor46][idx].field_0)][stor47])\n                                  lastGooProductionUpdate[address(stor39[stor46][idx].field_0)] = stor8.length\n                                  totalGooProduction = (10 * ext_call.return_data[0]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * ext_call.return_data[0]) + (10 * stor25[address(stor39[stor46][idx].field_0)][stor47]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * stor25[address(stor39[stor46][idx].field_0)][stor47]) + totalGooProduction\n                                  stor21[address(stor39[stor46][idx].field_0)][stor47]++\n                                  stop\n                      mem[0] = stor46\n                      mem[32] = 39\n                      s = stor38[address(stor39[stor46][idx].field_0)].field_256 - 1\n                      s = sha3(address(stor39[stor46][idx].field_0), 38)\n                      s = address(stor39[stor46][idx].field_0)\n                      idx = idx + 1\n                      continue \n              else:\n                  require checkIndex < stor38[address(checkWinner)].field_0\n                  if stor50 < stor38[address(checkWinner)][checkIndex].field_0:\n                      s = 0\n                      s = 0\n                      s = 0\n                      idx = 0\n                      while idx < stor39[stor46].field_0:\n                          require idx < stor39[stor46].field_0\n                          require 0 < stor38[address(stor39[stor46][idx].field_0)].field_0\n                          if stor50 >= stor38[address(stor39[stor46][idx].field_0)].field_0:\n                              require stor38[address(stor39[stor46][idx].field_0)].field_256 - 1 < stor38[address(stor39[stor46][idx].field_0)].field_0\n                              if stor50 <= stor38[address(stor39[stor46][idx].field_0)][stor38[address(stor39[stor46][idx].field_0)].field_256 - 1].field_256:\n                                  s = 0\n                                  s = 0\n                                  while s < stor38[address(stor39[stor46][idx].field_0)].field_256:\n                                      require s < stor38[address(stor39[stor46][idx].field_0)].field_0\n                                      if stor50 < stor38[address(stor39[stor46][idx].field_0)][s].field_0:\n                                          mem[0] = stor46\n                                          mem[32] = 39\n                                          s = (2 * s) + sha3(sha3(address(stor39[stor46][idx].field_0), 38))\n                                          s = s + 1\n                                          continue \n                                      if stor50 > stor38[address(stor39[stor46][idx].field_0)][s].field_256:\n                                          mem[0] = stor46\n                                          mem[32] = 39\n                                          s = (2 * s) + sha3(sha3(address(stor39[stor46][idx].field_0), 38))\n                                          s = s + 1\n                                          continue \n                                      address(stor49.field_0) = address(stor39[stor46][idx].field_0)\n                                      stor16[address(stor39[stor46][idx].field_0)] = block.timestamp\n                                      if stor16[address(stor39[stor46][idx].field_0)] <= 0:\n                                      else:\n                                          if stor16[address(stor39[stor46][idx].field_0)] >= block.timestamp:\n                                          else:\n                                              totalSupply += (block.timestamp * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) - (stor16[address(stor39[stor46][idx].field_0)] * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) / 100\n                                              stor12[address(stor39[stor46][idx].field_0)] += (block.timestamp * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) - (stor16[address(stor39[stor46][idx].field_0)] * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) / 100\n                                      require ext_code.size(stor51)\n                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                           gas gas_remaining wei\n                                          args stor47\n                                      require ext_call.success\n                                      gooProduction[address(stor39[stor46][idx].field_0)][stor8.length] = gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]] + (10 * ext_call.return_data[0]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * ext_call.return_data[0]) + (10 * stor25[address(stor39[stor46][idx].field_0)][stor47]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * stor25[address(stor39[stor46][idx].field_0)][stor47])\n                                      lastGooProductionUpdate[address(stor39[stor46][idx].field_0)] = stor8.length\n                                      totalGooProduction = (10 * ext_call.return_data[0]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * ext_call.return_data[0]) + (10 * stor25[address(stor39[stor46][idx].field_0)][stor47]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * stor25[address(stor39[stor46][idx].field_0)][stor47]) + totalGooProduction\n                                      stor21[address(stor39[stor46][idx].field_0)][stor47]++\n                                      stop\n                          mem[0] = stor46\n                          mem[32] = 39\n                          s = stor38[address(stor39[stor46][idx].field_0)].field_256 - 1\n                          s = sha3(address(stor39[stor46][idx].field_0), 38)\n                          s = address(stor39[stor46][idx].field_0)\n                          idx = idx + 1\n                          continue \n                  else:\n                      if stor50 > stor38[address(checkWinner)][checkIndex].field_256:\n                          s = 0\n                          s = 0\n                          s = 0\n                          idx = 0\n                          while idx < stor39[stor46].field_0:\n                              require idx < stor39[stor46].field_0\n                              require 0 < stor38[address(stor39[stor46][idx].field_0)].field_0\n                              if stor50 >= stor38[address(stor39[stor46][idx].field_0)].field_0:\n                                  require stor38[address(stor39[stor46][idx].field_0)].field_256 - 1 < stor38[address(stor39[stor46][idx].field_0)].field_0\n                                  if stor50 <= stor38[address(stor39[stor46][idx].field_0)][stor38[address(stor39[stor46][idx].field_0)].field_256 - 1].field_256:\n                                      s = 0\n                                      s = 0\n                                      while s < stor38[address(stor39[stor46][idx].field_0)].field_256:\n                                          require s < stor38[address(stor39[stor46][idx].field_0)].field_0\n                                          if stor50 < stor38[address(stor39[stor46][idx].field_0)][s].field_0:\n                                              mem[0] = stor46\n                                              mem[32] = 39\n                                              s = (2 * s) + sha3(sha3(address(stor39[stor46][idx].field_0), 38))\n                                              s = s + 1\n                                              continue \n                                          if stor50 > stor38[address(stor39[stor46][idx].field_0)][s].field_256:\n                                              mem[0] = stor46\n                                              mem[32] = 39\n                                              s = (2 * s) + sha3(sha3(address(stor39[stor46][idx].field_0), 38))\n                                              s = s + 1\n                                              continue \n                                          address(stor49.field_0) = address(stor39[stor46][idx].field_0)\n                                          stor16[address(stor39[stor46][idx].field_0)] = block.timestamp\n                                          if stor16[address(stor39[stor46][idx].field_0)] <= 0:\n                                          else:\n                                              if stor16[address(stor39[stor46][idx].field_0)] >= block.timestamp:\n                                              else:\n                                                  totalSupply += (block.timestamp * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) - (stor16[address(stor39[stor46][idx].field_0)] * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) / 100\n                                                  stor12[address(stor39[stor46][idx].field_0)] += (block.timestamp * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) - (stor16[address(stor39[stor46][idx].field_0)] * gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]]) / 100\n                                          require ext_code.size(stor51)\n                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                               gas gas_remaining wei\n                                              args stor47\n                                          require ext_call.success\n                                          gooProduction[address(stor39[stor46][idx].field_0)][stor8.length] = gooProduction[address(stor39[stor46][idx].field_0)][stor17[address(stor39[stor46][idx].field_0)]] + (10 * ext_call.return_data[0]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * ext_call.return_data[0]) + (10 * stor25[address(stor39[stor46][idx].field_0)][stor47]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * stor25[address(stor39[stor46][idx].field_0)][stor47])\n                                          lastGooProductionUpdate[address(stor39[stor46][idx].field_0)] = stor8.length\n                                          totalGooProduction = (10 * ext_call.return_data[0]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * ext_call.return_data[0]) + (10 * stor25[address(stor39[stor46][idx].field_0)][stor47]) + (stor26[address(stor39[stor46][idx].field_0)][stor47] * stor25[address(stor39[stor46][idx].field_0)][stor47]) + totalGooProduction\n                                          stor21[address(stor39[stor46][idx].field_0)][stor47]++\n                                          stop\n                              mem[0] = stor46\n                              mem[32] = 39\n                              s = stor38[address(stor39[stor46][idx].field_0)].field_256 - 1\n                              s = sha3(address(stor39[stor46][idx].field_0), 38)\n                              s = address(stor39[stor46][idx].field_0)\n                              idx = idx + 1\n                              continue \n                      else:\n                          address(stor49.field_0) = checkWinner\n                          stor16[address(checkWinner)] = block.timestamp\n                          if stor16[address(checkWinner)] <= 0:\n                          else:\n                              if stor16[address(checkWinner)] >= block.timestamp:\n                              else:\n                                  totalSupply += (block.timestamp * gooProduction[address(checkWinner)][stor17[address(checkWinner)]]) - (stor16[address(checkWinner)] * gooProduction[address(checkWinner)][stor17[address(checkWinner)]]) / 100\n                                  stor12[address(checkWinner)] += (block.timestamp * gooProduction[address(checkWinner)][stor17[address(checkWinner)]]) - (stor16[address(checkWinner)] * gooProduction[address(checkWinner)][stor17[address(checkWinner)]]) / 100\n                          require ext_code.size(stor51)\n                          call stor51.unitGooProduction(uint256 unitId) with:\n                               gas gas_remaining wei\n                              args stor47\n                          require ext_call.success\n                          gooProduction[address(checkWinner)][stor8.length] = gooProduction[address(checkWinner)][stor17[address(checkWinner)]] + (10 * ext_call.return_data[0]) + (stor26[address(checkWinner)][stor47] * ext_call.return_data[0]) + (10 * stor25[address(checkWinner)][stor47]) + (stor26[address(checkWinner)][stor47] * stor25[address(checkWinner)][stor47])\n                          lastGooProductionUpdate[address(checkWinner)] = stor8.length\n                          totalGooProduction = (10 * ext_call.return_data[0]) + (stor26[address(checkWinner)][stor47] * ext_call.return_data[0]) + (10 * stor25[address(checkWinner)][stor47]) + (stor26[address(checkWinner)][stor47] * stor25[address(checkWinner)][stor47]) + totalGooProduction\n                          stor21[address(checkWinner)][stor47]++\n\ndef buyRareItem(uint256 rareId) payable: \n  require ext_code.size(stor51)\n  call stor51.getRareInfo(uint256 rareId) with:\n       gas gas_remaining wei\n      args rareId\n  require ext_call.success\n  require stor23[rareId]\n  require ext_call.return_data[32] > 0\n  stor16[caller] = block.timestamp\n  if stor16[caller] <= 0:\n      if not ext_call.return_data[0]:\n          stor25[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n          gooProduction[caller][stor8.length] = gooProduction[caller][stor17[caller]] + (10 * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + (stor26[caller][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]])\n          lastGooProductionUpdate[caller] = stor8.length\n          totalGooProduction = (10 * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + (stor26[caller][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + totalGooProduction\n          stor16[stor23[rareId]] = block.timestamp\n          if stor16[stor23[rareId]] <= 0:\n              if not ext_call.return_data[0]:\n                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                  require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                  if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                      gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                  else:\n                      stor15[stor23[rareId]][stor8.length] = 1\n                      gooProduction[stor23[rareId]][stor8.length] = 0\n                  lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                  totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n              else:\n                  if 1 == ext_call.return_data[0]:\n                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                      require ext_code.size(stor51)\n                      call stor51.unitGooProduction(uint256 unitId) with:\n                           gas gas_remaining wei\n                          args ext_call.return_data[32]\n                      require ext_call.success\n                      require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                      if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                          gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                      else:\n                          stor15[stor23[rareId]][stor8.length] = 1\n                          gooProduction[stor23[rareId]][stor8.length] = 0\n                  else:\n                      if 2 == ext_call.return_data[0]:\n                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                          if stor24[rareId].field_0 > call.value:\n                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                          else:\n                              if call.value > stor24[rareId].field_0:\n                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                          stor23[rareId] = caller\n                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                          stor24[rareId].field_254 % 4 = 0\n                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                          stop\n                      if 3 == ext_call.return_data[0]:\n                          stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                          if stor24[rareId].field_0 > call.value:\n                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                          else:\n                              if call.value > stor24[rareId].field_0:\n                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                          stor23[rareId] = caller\n                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                          stor24[rareId].field_254 % 4 = 0\n                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                          stop\n                      if ext_call.return_data[0] != 4:\n                          if ext_call.return_data[0] != 5:\n                              if 6 == ext_call.return_data[0]:\n                                  stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              else:\n                                  if 7 == ext_call.return_data[0]:\n                                      stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              if stor24[rareId].field_0 > call.value:\n                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                          else:\n                              stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              if stor24[rareId].field_0 <= call.value:\n                                  if call.value > stor24[rareId].field_0:\n                                      etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                  else:\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                              else:\n                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                      else:\n                          stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                          if stor24[rareId].field_0 > call.value:\n                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                              stor23[rareId] = caller\n                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                              stor24[rareId].field_254 % 4 = 0\n                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                              stop\n                          if call.value <= stor24[rareId].field_0:\n                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                              stor23[rareId] = caller\n                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                              stor24[rareId].field_254 % 4 = 0\n                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                              stop\n                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                          stor23[rareId] = caller\n                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                          stor24[rareId].field_254 % 4 = 0\n                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n          else:\n              if stor16[stor23[rareId]] < block.timestamp:\n                  totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                  stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                  if not ext_call.return_data[0]:\n                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                  else:\n                      if 1 == ext_call.return_data[0]:\n                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require ext_code.size(stor51)\n                          call stor51.unitGooProduction(uint256 unitId) with:\n                               gas gas_remaining wei\n                              args ext_call.return_data[32]\n                          require ext_call.success\n                      else:\n                          if 2 == ext_call.return_data[0]:\n                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              if stor24[rareId].field_0 > call.value:\n                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                          else:\n                              if 3 == ext_call.return_data[0]:\n                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              else:\n                                  if 4 == ext_call.return_data[0]:\n                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  else:\n                                      if 5 == ext_call.return_data[0]:\n                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          if 6 == ext_call.return_data[0]:\n                                              stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n              else:\n                  if not ext_call.return_data[0]:\n                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                      if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                          gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                      else:\n                          stor15[stor23[rareId]][stor8.length] = 1\n                          gooProduction[stor23[rareId]][stor8.length] = 0\n                      lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                      totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                  else:\n                      if 1 == ext_call.return_data[0]:\n                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require ext_code.size(stor51)\n                          call stor51.unitGooProduction(uint256 unitId) with:\n                               gas gas_remaining wei\n                              args ext_call.return_data[32]\n                          require ext_call.success\n                          require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                      else:\n                          if 2 == ext_call.return_data[0]:\n                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              if stor24[rareId].field_0 > call.value:\n                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                              else:\n                                  if call.value > stor24[rareId].field_0:\n                                      etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                              stor23[rareId] = caller\n                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                              stor24[rareId].field_254 % 4 = 0\n                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                              stop\n                          if ext_call.return_data[0] != 3:\n                              if ext_call.return_data[0] != 4:\n                                  if 5 == ext_call.return_data[0]:\n                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 > call.value:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                  else:\n                                      if 6 == ext_call.return_data[0]:\n                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          if 7 == ext_call.return_data[0]:\n                                              stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              else:\n                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                  if stor24[rareId].field_0 <= call.value:\n                                      if call.value > stor24[rareId].field_0:\n                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                      else:\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  else:\n                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                          else:\n                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              if stor24[rareId].field_0 > call.value:\n                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  stop\n                              if call.value <= stor24[rareId].field_0:\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  stop\n                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                              stor23[rareId] = caller\n                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                              stor24[rareId].field_254 % 4 = 0\n                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n      else:\n          if 1 == ext_call.return_data[0]:\n              stor26[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n              require ext_code.size(stor51)\n              call stor51.unitGooProduction(uint256 unitId) with:\n                   gas gas_remaining wei\n                  args ext_call.return_data[32]\n              require ext_call.success\n              gooProduction[caller][stor8.length] = gooProduction[caller][stor17[caller]] + (stor25[caller][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]])\n              lastGooProductionUpdate[caller] = stor8.length\n              totalGooProduction = (stor25[caller][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + totalGooProduction\n              stor16[stor23[rareId]] = block.timestamp\n              if stor16[stor23[rareId]] > 0:\n                  if stor16[stor23[rareId]] >= block.timestamp:\n                      if not ext_call.return_data[0]:\n                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                      else:\n                          if 1 == ext_call.return_data[0]:\n                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require ext_code.size(stor51)\n                              call stor51.unitGooProduction(uint256 unitId) with:\n                                   gas gas_remaining wei\n                                  args ext_call.return_data[32]\n                              require ext_call.success\n                          else:\n                              if 2 == ext_call.return_data[0]:\n                                  stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                  if stor24[rareId].field_0 > call.value:\n                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                              else:\n                                  if 3 == ext_call.return_data[0]:\n                                      stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                  else:\n                                      if 4 == ext_call.return_data[0]:\n                                          stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          if 5 == ext_call.return_data[0]:\n                                              stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              if 6 == ext_call.return_data[0]:\n                                                  stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                  else:\n                      totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                      stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                      if not ext_call.return_data[0]:\n                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                      else:\n                          if ext_call.return_data[0] != 1:\n                              if 2 == ext_call.return_data[0]:\n                                  stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              else:\n                                  if 3 == ext_call.return_data[0]:\n                                      stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          else:\n                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require ext_code.size(stor51)\n                              call stor51.unitGooProduction(uint256 unitId) with:\n                                   gas gas_remaining wei\n                                  args ext_call.return_data[32]\n                              require ext_call.success\n              else:\n                  if not ext_call.return_data[0]:\n                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                      if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                          gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                      else:\n                          stor15[stor23[rareId]][stor8.length] = 1\n                          gooProduction[stor23[rareId]][stor8.length] = 0\n                  else:\n                      if 1 == ext_call.return_data[0]:\n                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require ext_code.size(stor51)\n                          call stor51.unitGooProduction(uint256 unitId) with:\n                               gas gas_remaining wei\n                              args ext_call.return_data[32]\n                          require ext_call.success\n                      else:\n                          if ext_call.return_data[0] != 2:\n                              if 3 == ext_call.return_data[0]:\n                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                  if stor24[rareId].field_0 > call.value:\n                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                              else:\n                                  if 4 == ext_call.return_data[0]:\n                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                  else:\n                                      if 5 == ext_call.return_data[0]:\n                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          if 6 == ext_call.return_data[0]:\n                                              stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              if 7 == ext_call.return_data[0]:\n                                                  stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          else:\n                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              if stor24[rareId].field_0 <= call.value:\n                                  if call.value > stor24[rareId].field_0:\n                                      etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                  else:\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                              else:\n                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n          else:\n              if ext_call.return_data[0] != 2:\n                  if ext_call.return_data[0] != 3:\n                      if ext_call.return_data[0] != 4:\n                          if ext_call.return_data[0] != 5:\n                              if ext_call.return_data[0] != 6:\n                                  if ext_call.return_data[0] != 7:\n                                      if 8 == ext_call.return_data[0]:\n                                          stor33[caller][ext_call.return_data[32]] = ext_call.return_data[64]\n                                          stor16[stor23[rareId]] = block.timestamp\n                                          if stor16[stor23[rareId]] <= 0:\n                                              if not ext_call.return_data[0]:\n                                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                              else:\n                                                  if 1 == ext_call.return_data[0]:\n                                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require ext_code.size(stor51)\n                                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                                           gas gas_remaining wei\n                                                          args ext_call.return_data[32]\n                                                      require ext_call.success\n                                                  else:\n                                                      if 2 == ext_call.return_data[0]:\n                                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          if stor24[rareId].field_0 > call.value:\n                                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      else:\n                                                          if 3 == ext_call.return_data[0]:\n                                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          else:\n                                                              if 4 == ext_call.return_data[0]:\n                                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              else:\n                                                                  if 5 == ext_call.return_data[0]:\n                                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  else:\n                                                                      if 6 == ext_call.return_data[0]:\n                                                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              if stor16[stor23[rareId]] >= block.timestamp:\n                                                  if not ext_call.return_data[0]:\n                                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                  if 1 == ext_call.return_data[0]:\n                                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require ext_code.size(stor51)\n                                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                                           gas gas_remaining wei\n                                                          args ext_call.return_data[32]\n                                                      require ext_call.success\n                                                  else:\n                                                      if 2 == ext_call.return_data[0]:\n                                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      else:\n                                                          if 3 == ext_call.return_data[0]:\n                                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          else:\n                                                              if 4 == ext_call.return_data[0]:\n                                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              else:\n                                                                  if 5 == ext_call.return_data[0]:\n                                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                                  stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                                  if not ext_call.return_data[0]:\n                                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if ext_call.return_data[0] != 1:\n                                                          if 2 == ext_call.return_data[0]:\n                                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require ext_code.size(stor51)\n                                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                                               gas gas_remaining wei\n                                                              args ext_call.return_data[32]\n                                      else:\n                                          stor16[stor23[rareId]] = block.timestamp\n                                          if stor16[stor23[rareId]] > 0:\n                                              if stor16[stor23[rareId]] >= block.timestamp:\n                                                  if not ext_call.return_data[0]:\n                                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                                  else:\n                                                      if 1 == ext_call.return_data[0]:\n                                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require ext_code.size(stor51)\n                                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                                               gas gas_remaining wei\n                                                              args ext_call.return_data[32]\n                                                          require ext_call.success\n                                                      else:\n                                                          if 2 == ext_call.return_data[0]:\n                                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                              if stor24[rareId].field_0 > call.value:\n                                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                          else:\n                                                              if 3 == ext_call.return_data[0]:\n                                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                              else:\n                                                                  if 4 == ext_call.return_data[0]:\n                                                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  else:\n                                                                      if 5 == ext_call.return_data[0]:\n                                                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                      else:\n                                                                          if 6 == ext_call.return_data[0]:\n                                                                              stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                                  stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                                  if not ext_call.return_data[0]:\n                                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if ext_call.return_data[0] != 1:\n                                                          if 2 == ext_call.return_data[0]:\n                                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          else:\n                                                              if 3 == ext_call.return_data[0]:\n                                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require ext_code.size(stor51)\n                                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                                               gas gas_remaining wei\n                                                              args ext_call.return_data[32]\n                                                          require ext_call.success\n                                          else:\n                                              if not ext_call.return_data[0]:\n                                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                                  if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                                      gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                                  else:\n                                                      stor15[stor23[rareId]][stor8.length] = 1\n                                                      gooProduction[stor23[rareId]][stor8.length] = 0\n                                              else:\n                                                  if 1 == ext_call.return_data[0]:\n                                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require ext_code.size(stor51)\n                                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                                           gas gas_remaining wei\n                                                          args ext_call.return_data[32]\n                                                      require ext_call.success\n                                                  else:\n                                                      if ext_call.return_data[0] != 2:\n                                                          if 3 == ext_call.return_data[0]:\n                                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                              if stor24[rareId].field_0 > call.value:\n                                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                          else:\n                                                              if 4 == ext_call.return_data[0]:\n                                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                              else:\n                                                                  if 5 == ext_call.return_data[0]:\n                                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  else:\n                                                                      if 6 == ext_call.return_data[0]:\n                                                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                      else:\n                                                                          if 7 == ext_call.return_data[0]:\n                                                                              stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          if stor24[rareId].field_0 <= call.value:\n                                                              if call.value > stor24[rareId].field_0:\n                                                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                              else:\n                                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                                  stor23[rareId] = caller\n                                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                                  stor24[rareId].field_254 % 4 = 0\n                                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                          else:\n                                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                              stor23[rareId] = caller\n                                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                              stor24[rareId].field_254 % 4 = 0\n                                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  else:\n                                      stor32[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                                      stor16[stor23[rareId]] = block.timestamp\n                                      if stor16[stor23[rareId]] > 0:\n                                          if stor16[stor23[rareId]] >= block.timestamp:\n                                              if not ext_call.return_data[0]:\n                                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                              else:\n                                                  if 1 == ext_call.return_data[0]:\n                                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require ext_code.size(stor51)\n                                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                                           gas gas_remaining wei\n                                                          args ext_call.return_data[32]\n                                                      require ext_call.success\n                                                  else:\n                                                      if 2 == ext_call.return_data[0]:\n                                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          if stor24[rareId].field_0 > call.value:\n                                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      else:\n                                                          if 3 == ext_call.return_data[0]:\n                                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          else:\n                                                              if 4 == ext_call.return_data[0]:\n                                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              else:\n                                                                  if 5 == ext_call.return_data[0]:\n                                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  else:\n                                                                      if 6 == ext_call.return_data[0]:\n                                                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                              stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                              if not ext_call.return_data[0]:\n                                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if ext_call.return_data[0] != 1:\n                                                      if 2 == ext_call.return_data[0]:\n                                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 3 == ext_call.return_data[0]:\n                                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require ext_code.size(stor51)\n                                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                                           gas gas_remaining wei\n                                                          args ext_call.return_data[32]\n                                                      require ext_call.success\n                                      else:\n                                          if not ext_call.return_data[0]:\n                                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                              if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                                  gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                              else:\n                                                  stor15[stor23[rareId]][stor8.length] = 1\n                                                  gooProduction[stor23[rareId]][stor8.length] = 0\n                                          else:\n                                              if 1 == ext_call.return_data[0]:\n                                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require ext_code.size(stor51)\n                                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                                       gas gas_remaining wei\n                                                      args ext_call.return_data[32]\n                                                  require ext_call.success\n                                              else:\n                                                  if ext_call.return_data[0] != 2:\n                                                      if 3 == ext_call.return_data[0]:\n                                                          stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          if stor24[rareId].field_0 > call.value:\n                                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      else:\n                                                          if 4 == ext_call.return_data[0]:\n                                                              stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          else:\n                                                              if 5 == ext_call.return_data[0]:\n                                                                  stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              else:\n                                                                  if 6 == ext_call.return_data[0]:\n                                                                      stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  else:\n                                                                      if 7 == ext_call.return_data[0]:\n                                                                          stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      if stor24[rareId].field_0 <= call.value:\n                                                          if call.value > stor24[rareId].field_0:\n                                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                          else:\n                                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                              stor23[rareId] = caller\n                                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                              stor24[rareId].field_254 % 4 = 0\n                                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                      else:\n                                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                          stor23[rareId] = caller\n                                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                          stor24[rareId].field_254 % 4 = 0\n                                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                              else:\n                                  stor31[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                                  stor16[stor23[rareId]] = block.timestamp\n                                  if stor16[stor23[rareId]] <= 0:\n                                      if not ext_call.return_data[0]:\n                                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                          if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                              gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                          else:\n                                              stor15[stor23[rareId]][stor8.length] = 1\n                                              gooProduction[stor23[rareId]][stor8.length] = 0\n                                          lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                                          totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                      else:\n                                          if 1 == ext_call.return_data[0]:\n                                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require ext_code.size(stor51)\n                                              call stor51.unitGooProduction(uint256 unitId) with:\n                                                   gas gas_remaining wei\n                                                  args ext_call.return_data[32]\n                                              require ext_call.success\n                                              require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          if ext_call.return_data[0] != 2:\n                                              if ext_call.return_data[0] != 3:\n                                                  if 4 == ext_call.return_data[0]:\n                                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      if stor24[rareId].field_0 > call.value:\n                                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  else:\n                                                      if 5 == ext_call.return_data[0]:\n                                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      else:\n                                                          if 6 == ext_call.return_data[0]:\n                                                              stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          else:\n                                                              if 7 == ext_call.return_data[0]:\n                                                                  stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                  if stor24[rareId].field_0 <= call.value:\n                                                      if call.value > stor24[rareId].field_0:\n                                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                      else:\n                                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                          stor23[rareId] = caller\n                                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                          stor24[rareId].field_254 % 4 = 0\n                                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  else:\n                                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                      stor23[rareId] = caller\n                                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                      stor24[rareId].field_254 % 4 = 0\n                                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          else:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              if call.value <= stor24[rareId].field_0:\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  else:\n                                      if stor16[stor23[rareId]] < block.timestamp:\n                                          totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                          stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                          if not ext_call.return_data[0]:\n                                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              if ext_call.return_data[0] != 1:\n                                                  if 2 == ext_call.return_data[0]:\n                                                      stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 3 == ext_call.return_data[0]:\n                                                          stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 4 == ext_call.return_data[0]:\n                                                              stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require ext_code.size(stor51)\n                                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                                       gas gas_remaining wei\n                                                      args ext_call.return_data[32]\n                                                  require ext_call.success\n                                      else:\n                                          if not ext_call.return_data[0]:\n                                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                              if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                                  gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                              else:\n                                                  stor15[stor23[rareId]][stor8.length] = 1\n                                                  gooProduction[stor23[rareId]][stor8.length] = 0\n                                          else:\n                                              if 1 == ext_call.return_data[0]:\n                                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require ext_code.size(stor51)\n                                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                                       gas gas_remaining wei\n                                                      args ext_call.return_data[32]\n                                                  require ext_call.success\n                                              else:\n                                                  if ext_call.return_data[0] != 2:\n                                                      if 3 == ext_call.return_data[0]:\n                                                          stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          if stor24[rareId].field_0 > call.value:\n                                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      else:\n                                                          if 4 == ext_call.return_data[0]:\n                                                              stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          else:\n                                                              if 5 == ext_call.return_data[0]:\n                                                                  stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              else:\n                                                                  if 6 == ext_call.return_data[0]:\n                                                                      stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  else:\n                                                                      if 7 == ext_call.return_data[0]:\n                                                                          stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      if stor24[rareId].field_0 <= call.value:\n                                                          if call.value > stor24[rareId].field_0:\n                                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                          else:\n                                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                              stor23[rareId] = caller\n                                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                              stor24[rareId].field_254 % 4 = 0\n                                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                      else:\n                                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                          stor23[rareId] = caller\n                                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                          stor24[rareId].field_254 % 4 = 0\n                                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                          else:\n                              stor30[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                              stor16[stor23[rareId]] = block.timestamp\n                              if stor16[stor23[rareId]] <= 0:\n                                  if not ext_call.return_data[0]:\n                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                      if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                          gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                      else:\n                                          stor15[stor23[rareId]][stor8.length] = 1\n                                          gooProduction[stor23[rareId]][stor8.length] = 0\n                                      lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                                      totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                  else:\n                                      if 1 == ext_call.return_data[0]:\n                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require ext_code.size(stor51)\n                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                               gas gas_remaining wei\n                                              args ext_call.return_data[32]\n                                          require ext_call.success\n                                          require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                      else:\n                                          if 2 == ext_call.return_data[0]:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                              else:\n                                                  if call.value > stor24[rareId].field_0:\n                                                      etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              stop\n                                          if ext_call.return_data[0] != 3:\n                                              if ext_call.return_data[0] != 4:\n                                                  if 5 == ext_call.return_data[0]:\n                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      if stor24[rareId].field_0 > call.value:\n                                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  else:\n                                                      if 6 == ext_call.return_data[0]:\n                                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 7 == ext_call.return_data[0]:\n                                                              stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              else:\n                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                  if stor24[rareId].field_0 <= call.value:\n                                                      if call.value > stor24[rareId].field_0:\n                                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                      else:\n                                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                          stor23[rareId] = caller\n                                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                          stor24[rareId].field_254 % 4 = 0\n                                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  else:\n                                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                      stor23[rareId] = caller\n                                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                      stor24[rareId].field_254 % 4 = 0\n                                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          else:\n                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              if call.value <= stor24[rareId].field_0:\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                              else:\n                                  if stor16[stor23[rareId]] < block.timestamp:\n                                      totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                      stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                      if not ext_call.return_data[0]:\n                                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if 1 == ext_call.return_data[0]:\n                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require ext_code.size(stor51)\n                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                               gas gas_remaining wei\n                                              args ext_call.return_data[32]\n                                          require ext_call.success\n                                      else:\n                                          if 2 == ext_call.return_data[0]:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          else:\n                                              if 3 == ext_call.return_data[0]:\n                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if 4 == ext_call.return_data[0]:\n                                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 5 == ext_call.return_data[0]:\n                                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  else:\n                                      if not ext_call.return_data[0]:\n                                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                          if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                              gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                          else:\n                                              stor15[stor23[rareId]][stor8.length] = 1\n                                              gooProduction[stor23[rareId]][stor8.length] = 0\n                                          lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                                          totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                      else:\n                                          if 1 == ext_call.return_data[0]:\n                                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require ext_code.size(stor51)\n                                              call stor51.unitGooProduction(uint256 unitId) with:\n                                                   gas gas_remaining wei\n                                                  args ext_call.return_data[32]\n                                              require ext_call.success\n                                              require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          if ext_call.return_data[0] != 2:\n                                              if ext_call.return_data[0] != 3:\n                                                  if 4 == ext_call.return_data[0]:\n                                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      if stor24[rareId].field_0 > call.value:\n                                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  else:\n                                                      if 5 == ext_call.return_data[0]:\n                                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      else:\n                                                          if 6 == ext_call.return_data[0]:\n                                                              stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          else:\n                                                              if 7 == ext_call.return_data[0]:\n                                                                  stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                  if stor24[rareId].field_0 <= call.value:\n                                                      if call.value > stor24[rareId].field_0:\n                                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                      else:\n                                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                          stor23[rareId] = caller\n                                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                          stor24[rareId].field_254 % 4 = 0\n                                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  else:\n                                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                      stor23[rareId] = caller\n                                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                      stor24[rareId].field_254 % 4 = 0\n                                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          else:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              if call.value <= stor24[rareId].field_0:\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                      else:\n                          stor29[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                          stor16[stor23[rareId]] = block.timestamp\n                          if stor16[stor23[rareId]] <= 0:\n                              if not ext_call.return_data[0]:\n                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                      gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                  else:\n                                      stor15[stor23[rareId]][stor8.length] = 1\n                                      gooProduction[stor23[rareId]][stor8.length] = 0\n                                  lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                                  totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                              else:\n                                  if 1 == ext_call.return_data[0]:\n                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require ext_code.size(stor51)\n                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                           gas gas_remaining wei\n                                          args ext_call.return_data[32]\n                                      require ext_call.success\n                                      require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                      if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                          gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                      else:\n                                          stor15[stor23[rareId]][stor8.length] = 1\n                                          gooProduction[stor23[rareId]][stor8.length] = 0\n                                  else:\n                                      if 2 == ext_call.return_data[0]:\n                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 > call.value:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if call.value > stor24[rareId].field_0:\n                                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          stop\n                                      if 3 == ext_call.return_data[0]:\n                                          stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 > call.value:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if call.value > stor24[rareId].field_0:\n                                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          stop\n                                      if ext_call.return_data[0] != 4:\n                                          if ext_call.return_data[0] != 5:\n                                              if 6 == ext_call.return_data[0]:\n                                                  stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if 7 == ext_call.return_data[0]:\n                                                      stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 <= call.value:\n                                                  if call.value > stor24[rareId].field_0:\n                                                      etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                  else:\n                                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                      stor23[rareId] = caller\n                                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                      stor24[rareId].field_254 % 4 = 0\n                                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              else:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      else:\n                                          stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 > call.value:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              stop\n                                          if call.value <= stor24[rareId].field_0:\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              stop\n                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                          else:\n                              if stor16[stor23[rareId]] < block.timestamp:\n                                  totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                  stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                  if not ext_call.return_data[0]:\n                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  else:\n                                      if 1 == ext_call.return_data[0]:\n                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require ext_code.size(stor51)\n                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                               gas gas_remaining wei\n                                              args ext_call.return_data[32]\n                                          require ext_call.success\n                                      else:\n                                          if 2 == ext_call.return_data[0]:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if 3 == ext_call.return_data[0]:\n                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              else:\n                                                  if 4 == ext_call.return_data[0]:\n                                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 5 == ext_call.return_data[0]:\n                                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 6 == ext_call.return_data[0]:\n                                                              stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              else:\n                                  if not ext_call.return_data[0]:\n                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                      if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                          gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                      else:\n                                          stor15[stor23[rareId]][stor8.length] = 1\n                                          gooProduction[stor23[rareId]][stor8.length] = 0\n                                      lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                                      totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                  else:\n                                      if 1 == ext_call.return_data[0]:\n                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require ext_code.size(stor51)\n                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                               gas gas_remaining wei\n                                              args ext_call.return_data[32]\n                                          require ext_call.success\n                                          require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                      else:\n                                          if 2 == ext_call.return_data[0]:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                              else:\n                                                  if call.value > stor24[rareId].field_0:\n                                                      etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              stop\n                                          if ext_call.return_data[0] != 3:\n                                              if ext_call.return_data[0] != 4:\n                                                  if 5 == ext_call.return_data[0]:\n                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      if stor24[rareId].field_0 > call.value:\n                                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  else:\n                                                      if 6 == ext_call.return_data[0]:\n                                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 7 == ext_call.return_data[0]:\n                                                              stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              else:\n                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                  if stor24[rareId].field_0 <= call.value:\n                                                      if call.value > stor24[rareId].field_0:\n                                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                      else:\n                                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                          stor23[rareId] = caller\n                                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                          stor24[rareId].field_254 % 4 = 0\n                                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  else:\n                                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                      stor23[rareId] = caller\n                                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                      stor24[rareId].field_254 % 4 = 0\n                                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          else:\n                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              if call.value <= stor24[rareId].field_0:\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                  else:\n                      stor28[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                      stor16[stor23[rareId]] = block.timestamp\n                      if stor16[stor23[rareId]] > 0:\n                          if stor16[stor23[rareId]] < block.timestamp:\n                              totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                              stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                              if not ext_call.return_data[0]:\n                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                      gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                  else:\n                                      stor15[stor23[rareId]][stor8.length] = 1\n                                      gooProduction[stor23[rareId]][stor8.length] = 0\n                              else:\n                                  if 1 == ext_call.return_data[0]:\n                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require ext_code.size(stor51)\n                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                           gas gas_remaining wei\n                                          args ext_call.return_data[32]\n                                      require ext_call.success\n                                  else:\n                                      if ext_call.return_data[0] != 2:\n                                          if 3 == ext_call.return_data[0]:\n                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if 4 == ext_call.return_data[0]:\n                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              else:\n                                                  if 5 == ext_call.return_data[0]:\n                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 6 == ext_call.return_data[0]:\n                                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 7 == ext_call.return_data[0]:\n                                                              stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 <= call.value:\n                                              if call.value > stor24[rareId].field_0:\n                                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              else:\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          else:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                          else:\n                              if not ext_call.return_data[0]:\n                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                      gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                  else:\n                                      stor15[stor23[rareId]][stor8.length] = 1\n                                      gooProduction[stor23[rareId]][stor8.length] = 0\n                                  lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                                  totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                              else:\n                                  if 1 == ext_call.return_data[0]:\n                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require ext_code.size(stor51)\n                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                           gas gas_remaining wei\n                                          args ext_call.return_data[32]\n                                      require ext_call.success\n                                      require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                      if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                          gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                      else:\n                                          stor15[stor23[rareId]][stor8.length] = 1\n                                          gooProduction[stor23[rareId]][stor8.length] = 0\n                                  else:\n                                      if 2 == ext_call.return_data[0]:\n                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 > call.value:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if call.value > stor24[rareId].field_0:\n                                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          stop\n                                      if 3 == ext_call.return_data[0]:\n                                          stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 > call.value:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if call.value > stor24[rareId].field_0:\n                                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          stop\n                                      if ext_call.return_data[0] != 4:\n                                          if ext_call.return_data[0] != 5:\n                                              if 6 == ext_call.return_data[0]:\n                                                  stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if 7 == ext_call.return_data[0]:\n                                                      stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 <= call.value:\n                                                  if call.value > stor24[rareId].field_0:\n                                                      etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                  else:\n                                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                      stor23[rareId] = caller\n                                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                      stor24[rareId].field_254 % 4 = 0\n                                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              else:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      else:\n                                          stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 > call.value:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              stop\n                                          if call.value <= stor24[rareId].field_0:\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              stop\n                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                      else:\n                          if not ext_call.return_data[0]:\n                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                              if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                  gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                              else:\n                                  stor15[stor23[rareId]][stor8.length] = 1\n                                  gooProduction[stor23[rareId]][stor8.length] = 0\n                              lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                              totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                          else:\n                              if 1 == ext_call.return_data[0]:\n                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require ext_code.size(stor51)\n                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                       gas gas_remaining wei\n                                      args ext_call.return_data[32]\n                                  require ext_call.success\n                                  require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                      gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                  else:\n                                      stor15[stor23[rareId]][stor8.length] = 1\n                                      gooProduction[stor23[rareId]][stor8.length] = 0\n                                  lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                                  totalGooProduction = totalGooProduction - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                              else:\n                                  if 2 == ext_call.return_data[0]:\n                                      stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 > call.value:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      else:\n                                          if call.value > stor24[rareId].field_0:\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      stop\n                                  if 3 == ext_call.return_data[0]:\n                                      stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 > call.value:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      else:\n                                          if call.value > stor24[rareId].field_0:\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      stop\n                                  if 4 == ext_call.return_data[0]:\n                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 > call.value:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      else:\n                                          if call.value > stor24[rareId].field_0:\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      stop\n                                  if 5 == ext_call.return_data[0]:\n                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 > call.value:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          stop\n                                      if call.value <= stor24[rareId].field_0:\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          stop\n                                      etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  else:\n                                      if 6 == ext_call.return_data[0]:\n                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          if 7 == ext_call.return_data[0]:\n                                              stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 <= call.value:\n                                          if call.value > stor24[rareId].field_0:\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          else:\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      else:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n              else:\n                  stor27[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                  stor16[stor23[rareId]] = block.timestamp\n                  if stor16[stor23[rareId]] <= 0:\n                      if not ext_call.return_data[0]:\n                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                          if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                              gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                          else:\n                              stor15[stor23[rareId]][stor8.length] = 1\n                              gooProduction[stor23[rareId]][stor8.length] = 0\n                          lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                          totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                      else:\n                          if 1 == ext_call.return_data[0]:\n                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require ext_code.size(stor51)\n                              call stor51.unitGooProduction(uint256 unitId) with:\n                                   gas gas_remaining wei\n                                  args ext_call.return_data[32]\n                              require ext_call.success\n                              require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                              if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                  gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                              else:\n                                  stor15[stor23[rareId]][stor8.length] = 1\n                                  gooProduction[stor23[rareId]][stor8.length] = 0\n                              lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                              totalGooProduction = totalGooProduction - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                          else:\n                              if 2 == ext_call.return_data[0]:\n                                  stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                  if stor24[rareId].field_0 > call.value:\n                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                  else:\n                                      if call.value > stor24[rareId].field_0:\n                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  stop\n                              if 3 == ext_call.return_data[0]:\n                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                  if stor24[rareId].field_0 > call.value:\n                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                  else:\n                                      if call.value > stor24[rareId].field_0:\n                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  stop\n                              if 4 == ext_call.return_data[0]:\n                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                  if stor24[rareId].field_0 > call.value:\n                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                  else:\n                                      if call.value > stor24[rareId].field_0:\n                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  stop\n                              if 5 == ext_call.return_data[0]:\n                                  stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                  if stor24[rareId].field_0 > call.value:\n                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                  else:\n                                      if call.value > stor24[rareId].field_0:\n                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  stop\n                              if 6 == ext_call.return_data[0]:\n                                  stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              else:\n                                  if 7 == ext_call.return_data[0]:\n                                      stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              if stor24[rareId].field_0 > call.value:\n                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  stop\n                              if call.value <= stor24[rareId].field_0:\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  stop\n                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                              stor23[rareId] = caller\n                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                              stor24[rareId].field_254 % 4 = 0\n                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                  else:\n                      if stor16[stor23[rareId]] < block.timestamp:\n                          totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                          stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                          if not ext_call.return_data[0]:\n                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                              if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                  gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                              else:\n                                  stor15[stor23[rareId]][stor8.length] = 1\n                                  gooProduction[stor23[rareId]][stor8.length] = 0\n                              lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                              totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                          else:\n                              if 1 == ext_call.return_data[0]:\n                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require ext_code.size(stor51)\n                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                       gas gas_remaining wei\n                                      args ext_call.return_data[32]\n                                  require ext_call.success\n                                  require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if ext_call.return_data[0] != 2:\n                                  if ext_call.return_data[0] != 3:\n                                      if 4 == ext_call.return_data[0]:\n                                          stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 > call.value:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      else:\n                                          if 5 == ext_call.return_data[0]:\n                                              stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          else:\n                                              if 6 == ext_call.return_data[0]:\n                                                  stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if 7 == ext_call.return_data[0]:\n                                                      stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  else:\n                                      stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 <= call.value:\n                                          if call.value > stor24[rareId].field_0:\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          else:\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      else:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                              else:\n                                  stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                  if stor24[rareId].field_0 > call.value:\n                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      stop\n                                  if call.value <= stor24[rareId].field_0:\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      stop\n                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                      else:\n                          if not ext_call.return_data[0]:\n                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                              if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                  gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                              else:\n                                  stor15[stor23[rareId]][stor8.length] = 1\n                                  gooProduction[stor23[rareId]][stor8.length] = 0\n                              lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                              totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                          else:\n                              if 1 == ext_call.return_data[0]:\n                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require ext_code.size(stor51)\n                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                       gas gas_remaining wei\n                                      args ext_call.return_data[32]\n                                  require ext_call.success\n                                  require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                      gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                  else:\n                                      stor15[stor23[rareId]][stor8.length] = 1\n                                      gooProduction[stor23[rareId]][stor8.length] = 0\n                                  lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                                  totalGooProduction = totalGooProduction - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                              else:\n                                  if 2 == ext_call.return_data[0]:\n                                      stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 > call.value:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      else:\n                                          if call.value > stor24[rareId].field_0:\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      stop\n                                  if 3 == ext_call.return_data[0]:\n                                      stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 > call.value:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      else:\n                                          if call.value > stor24[rareId].field_0:\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      stop\n                                  if 4 == ext_call.return_data[0]:\n                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 > call.value:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      else:\n                                          if call.value > stor24[rareId].field_0:\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      stop\n                                  if 5 == ext_call.return_data[0]:\n                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 > call.value:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          stop\n                                      if call.value <= stor24[rareId].field_0:\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          stop\n                                      etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  else:\n                                      if 6 == ext_call.return_data[0]:\n                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          if 7 == ext_call.return_data[0]:\n                                              stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 <= call.value:\n                                          if call.value > stor24[rareId].field_0:\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          else:\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      else:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n  else:\n      if stor16[caller] < block.timestamp:\n          totalSupply += (block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100\n          stor12[caller] += (block.timestamp * gooProduction[caller][stor17[caller]]) - (stor16[caller] * gooProduction[caller][stor17[caller]]) / 100\n          if not ext_call.return_data[0]:\n              stor25[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n              gooProduction[caller][stor8.length] = gooProduction[caller][stor17[caller]] + (10 * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + (stor26[caller][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]])\n              lastGooProductionUpdate[caller] = stor8.length\n              totalGooProduction = (10 * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + (stor26[caller][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + totalGooProduction\n              stor16[stor23[rareId]] = block.timestamp\n              if stor16[stor23[rareId]] <= 0:\n                  if not ext_call.return_data[0]:\n                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                  else:\n                      if 1 == ext_call.return_data[0]:\n                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require ext_code.size(stor51)\n                          call stor51.unitGooProduction(uint256 unitId) with:\n                               gas gas_remaining wei\n                              args ext_call.return_data[32]\n                          require ext_call.success\n                      else:\n                          if 2 == ext_call.return_data[0]:\n                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              if stor24[rareId].field_0 > call.value:\n                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                          else:\n                              if 3 == ext_call.return_data[0]:\n                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              else:\n                                  if 4 == ext_call.return_data[0]:\n                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  else:\n                                      if 5 == ext_call.return_data[0]:\n                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          if 6 == ext_call.return_data[0]:\n                                              stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n              else:\n                  if stor16[stor23[rareId]] >= block.timestamp:\n                      if not ext_call.return_data[0]:\n                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if 1 == ext_call.return_data[0]:\n                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require ext_code.size(stor51)\n                          call stor51.unitGooProduction(uint256 unitId) with:\n                               gas gas_remaining wei\n                              args ext_call.return_data[32]\n                          require ext_call.success\n                      else:\n                          if 2 == ext_call.return_data[0]:\n                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                          else:\n                              if 3 == ext_call.return_data[0]:\n                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              else:\n                                  if 4 == ext_call.return_data[0]:\n                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  else:\n                                      if 5 == ext_call.return_data[0]:\n                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                  else:\n                      totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                      stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                      if not ext_call.return_data[0]:\n                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                      else:\n                          if ext_call.return_data[0] != 1:\n                              if 2 == ext_call.return_data[0]:\n                                  stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          else:\n                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require ext_code.size(stor51)\n                              call stor51.unitGooProduction(uint256 unitId) with:\n                                   gas gas_remaining wei\n                                  args ext_call.return_data[32]\n          else:\n              if 1 == ext_call.return_data[0]:\n                  stor26[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                  require ext_code.size(stor51)\n                  call stor51.unitGooProduction(uint256 unitId) with:\n                       gas gas_remaining wei\n                      args ext_call.return_data[32]\n                  require ext_call.success\n                  gooProduction[caller][stor8.length] = gooProduction[caller][stor17[caller]] + (stor25[caller][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]])\n                  lastGooProductionUpdate[caller] = stor8.length\n                  totalGooProduction = (stor25[caller][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + totalGooProduction\n                  stor16[stor23[rareId]] = block.timestamp\n                  if stor16[stor23[rareId]] <= 0:\n                      if not ext_call.return_data[0]:\n                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                      else:\n                          if ext_call.return_data[0] != 1:\n                              if 2 == ext_call.return_data[0]:\n                                  stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              else:\n                                  if 3 == ext_call.return_data[0]:\n                                      stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          else:\n                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require ext_code.size(stor51)\n                              call stor51.unitGooProduction(uint256 unitId) with:\n                                   gas gas_remaining wei\n                                  args ext_call.return_data[32]\n                              require ext_call.success\n                  else:\n                      if stor16[stor23[rareId]] < block.timestamp:\n                          totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                          stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                      else:\n                          if not ext_call.return_data[0]:\n                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          else:\n                              if ext_call.return_data[0] != 1:\n                                  if 2 == ext_call.return_data[0]:\n                                      stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              else:\n                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require ext_code.size(stor51)\n                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                       gas gas_remaining wei\n                                      args ext_call.return_data[32]\n              else:\n                  if ext_call.return_data[0] != 2:\n                      if ext_call.return_data[0] != 3:\n                          if 4 == ext_call.return_data[0]:\n                              stor29[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                              stor16[stor23[rareId]] = block.timestamp\n                              if stor16[stor23[rareId]] <= 0:\n                                  if not ext_call.return_data[0]:\n                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  else:\n                                      if 1 == ext_call.return_data[0]:\n                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require ext_code.size(stor51)\n                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                               gas gas_remaining wei\n                                              args ext_call.return_data[32]\n                                          require ext_call.success\n                                      else:\n                                          if 2 == ext_call.return_data[0]:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if 3 == ext_call.return_data[0]:\n                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              else:\n                                                  if 4 == ext_call.return_data[0]:\n                                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 5 == ext_call.return_data[0]:\n                                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 6 == ext_call.return_data[0]:\n                                                              stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              else:\n                                  if stor16[stor23[rareId]] >= block.timestamp:\n                                      if not ext_call.return_data[0]:\n                                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if 1 == ext_call.return_data[0]:\n                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require ext_code.size(stor51)\n                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                               gas gas_remaining wei\n                                              args ext_call.return_data[32]\n                                          require ext_call.success\n                                      else:\n                                          if 2 == ext_call.return_data[0]:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          else:\n                                              if 3 == ext_call.return_data[0]:\n                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if 4 == ext_call.return_data[0]:\n                                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 5 == ext_call.return_data[0]:\n                                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  else:\n                                      totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                      stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                      if not ext_call.return_data[0]:\n                                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          if ext_call.return_data[0] != 1:\n                                              if 2 == ext_call.return_data[0]:\n                                                  stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require ext_code.size(stor51)\n                                              call stor51.unitGooProduction(uint256 unitId) with:\n                                                   gas gas_remaining wei\n                                                  args ext_call.return_data[32]\n                          else:\n                              if 5 == ext_call.return_data[0]:\n                                  stor30[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                                  stor16[stor23[rareId]] = block.timestamp\n                                  if stor16[stor23[rareId]] <= 0:\n                                      if not ext_call.return_data[0]:\n                                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if 1 == ext_call.return_data[0]:\n                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require ext_code.size(stor51)\n                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                               gas gas_remaining wei\n                                              args ext_call.return_data[32]\n                                          require ext_call.success\n                                      else:\n                                          if 2 == ext_call.return_data[0]:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          else:\n                                              if 3 == ext_call.return_data[0]:\n                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if 4 == ext_call.return_data[0]:\n                                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 5 == ext_call.return_data[0]:\n                                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  else:\n                                      if stor16[stor23[rareId]] >= block.timestamp:\n                                          if not ext_call.return_data[0]:\n                                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              if ext_call.return_data[0] != 1:\n                                                  if 2 == ext_call.return_data[0]:\n                                                      stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 3 == ext_call.return_data[0]:\n                                                          stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 4 == ext_call.return_data[0]:\n                                                              stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require ext_code.size(stor51)\n                                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                                       gas gas_remaining wei\n                                                      args ext_call.return_data[32]\n                                                  require ext_call.success\n                                      else:\n                                          totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                          stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                          if not ext_call.return_data[0]:\n                                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              if 1 == ext_call.return_data[0]:\n                                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              else:\n                                  if 6 == ext_call.return_data[0]:\n                                      stor31[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                                      stor16[stor23[rareId]] = block.timestamp\n                                      if stor16[stor23[rareId]] <= 0:\n                                          if not ext_call.return_data[0]:\n                                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              if ext_call.return_data[0] != 1:\n                                                  if 2 == ext_call.return_data[0]:\n                                                      stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 3 == ext_call.return_data[0]:\n                                                          stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 4 == ext_call.return_data[0]:\n                                                              stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require ext_code.size(stor51)\n                                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                                       gas gas_remaining wei\n                                                      args ext_call.return_data[32]\n                                                  require ext_call.success\n                                      else:\n                                          if stor16[stor23[rareId]] < block.timestamp:\n                                              totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                              stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                              if not ext_call.return_data[0]:\n                                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              if not ext_call.return_data[0]:\n                                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if ext_call.return_data[0] != 1:\n                                                      if 2 == ext_call.return_data[0]:\n                                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 3 == ext_call.return_data[0]:\n                                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require ext_code.size(stor51)\n                                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                                           gas gas_remaining wei\n                                                          args ext_call.return_data[32]\n                                                      require ext_call.success\n                                  else:\n                                      if ext_call.return_data[0] != 7:\n                                          if ext_call.return_data[0] != 8:\n                                              stor16[stor23[rareId]] = block.timestamp\n                                              if stor16[stor23[rareId]] <= 0:\n                                                  if not ext_call.return_data[0]:\n                                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if ext_call.return_data[0] != 1:\n                                                          if 2 == ext_call.return_data[0]:\n                                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          else:\n                                                              if 3 == ext_call.return_data[0]:\n                                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require ext_code.size(stor51)\n                                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                                               gas gas_remaining wei\n                                                              args ext_call.return_data[32]\n                                                          require ext_call.success\n                                              else:\n                                                  if stor16[stor23[rareId]] < block.timestamp:\n                                                      totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                                      stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                                  else:\n                                                      if not ext_call.return_data[0]:\n                                                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if ext_call.return_data[0] != 1:\n                                                              if 2 == ext_call.return_data[0]:\n                                                                  stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          else:\n                                                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              require ext_code.size(stor51)\n                                                              call stor51.unitGooProduction(uint256 unitId) with:\n                                                                   gas gas_remaining wei\n                                                                  args ext_call.return_data[32]\n                                          else:\n                                              stor33[caller][ext_call.return_data[32]] = ext_call.return_data[64]\n                                              stor16[stor23[rareId]] = block.timestamp\n                                              if stor16[stor23[rareId]] > 0:\n                                                  if stor16[stor23[rareId]] < block.timestamp:\n                                                      totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                                      stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                                  else:\n                                                      if not ext_call.return_data[0]:\n                                                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 1 == ext_call.return_data[0]:\n                                                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if not ext_call.return_data[0]:\n                                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if ext_call.return_data[0] != 1:\n                                                          if 2 == ext_call.return_data[0]:\n                                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require ext_code.size(stor51)\n                                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                                               gas gas_remaining wei\n                                                              args ext_call.return_data[32]\n                                      else:\n                                          stor32[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                                          stor16[stor23[rareId]] = block.timestamp\n                                          if stor16[stor23[rareId]] <= 0:\n                                              if not ext_call.return_data[0]:\n                                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if ext_call.return_data[0] != 1:\n                                                      if 2 == ext_call.return_data[0]:\n                                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 3 == ext_call.return_data[0]:\n                                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require ext_code.size(stor51)\n                                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                                           gas gas_remaining wei\n                                                          args ext_call.return_data[32]\n                                                      require ext_call.success\n                                          else:\n                                              if stor16[stor23[rareId]] < block.timestamp:\n                                                  totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                                  stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                              else:\n                                                  if not ext_call.return_data[0]:\n                                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if ext_call.return_data[0] != 1:\n                                                          if 2 == ext_call.return_data[0]:\n                                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require ext_code.size(stor51)\n                                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                                               gas gas_remaining wei\n                                                              args ext_call.return_data[32]\n                      else:\n                          stor28[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                          stor16[stor23[rareId]] = block.timestamp\n                          if stor16[stor23[rareId]] > 0:\n                              if stor16[stor23[rareId]] >= block.timestamp:\n                                  if not ext_call.return_data[0]:\n                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  else:\n                                      if 1 == ext_call.return_data[0]:\n                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require ext_code.size(stor51)\n                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                               gas gas_remaining wei\n                                              args ext_call.return_data[32]\n                                          require ext_call.success\n                                      else:\n                                          if 2 == ext_call.return_data[0]:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if 3 == ext_call.return_data[0]:\n                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              else:\n                                                  if 4 == ext_call.return_data[0]:\n                                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 5 == ext_call.return_data[0]:\n                                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 6 == ext_call.return_data[0]:\n                                                              stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              else:\n                                  totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                  stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                  if not ext_call.return_data[0]:\n                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  else:\n                                      if ext_call.return_data[0] != 1:\n                                          if 2 == ext_call.return_data[0]:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              if 3 == ext_call.return_data[0]:\n                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require ext_code.size(stor51)\n                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                               gas gas_remaining wei\n                                              args ext_call.return_data[32]\n                                          require ext_call.success\n                          else:\n                              if not ext_call.return_data[0]:\n                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                      gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                  else:\n                                      stor15[stor23[rareId]][stor8.length] = 1\n                                      gooProduction[stor23[rareId]][stor8.length] = 0\n                              else:\n                                  if 1 == ext_call.return_data[0]:\n                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require ext_code.size(stor51)\n                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                           gas gas_remaining wei\n                                          args ext_call.return_data[32]\n                                      require ext_call.success\n                                  else:\n                                      if ext_call.return_data[0] != 2:\n                                          if 3 == ext_call.return_data[0]:\n                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if 4 == ext_call.return_data[0]:\n                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              else:\n                                                  if 5 == ext_call.return_data[0]:\n                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 6 == ext_call.return_data[0]:\n                                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 7 == ext_call.return_data[0]:\n                                                              stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 <= call.value:\n                                              if call.value > stor24[rareId].field_0:\n                                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              else:\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          else:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                  else:\n                      stor27[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                      stor16[stor23[rareId]] = block.timestamp\n                      if stor16[stor23[rareId]] <= 0:\n                          if not ext_call.return_data[0]:\n                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                              if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                  gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                              else:\n                                  stor15[stor23[rareId]][stor8.length] = 1\n                                  gooProduction[stor23[rareId]][stor8.length] = 0\n                              lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                              totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                          else:\n                              if 1 == ext_call.return_data[0]:\n                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require ext_code.size(stor51)\n                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                       gas gas_remaining wei\n                                      args ext_call.return_data[32]\n                                  require ext_call.success\n                                  require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if ext_call.return_data[0] != 2:\n                                  if ext_call.return_data[0] != 3:\n                                      if 4 == ext_call.return_data[0]:\n                                          stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 > call.value:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      else:\n                                          if 5 == ext_call.return_data[0]:\n                                              stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          else:\n                                              if 6 == ext_call.return_data[0]:\n                                                  stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if 7 == ext_call.return_data[0]:\n                                                      stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  else:\n                                      stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 <= call.value:\n                                          if call.value > stor24[rareId].field_0:\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          else:\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      else:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                              else:\n                                  stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                  if stor24[rareId].field_0 > call.value:\n                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      stop\n                                  if call.value <= stor24[rareId].field_0:\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      stop\n                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                      else:\n                          if stor16[stor23[rareId]] < block.timestamp:\n                              totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                              stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                              if not ext_call.return_data[0]:\n                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              else:\n                                  if ext_call.return_data[0] != 1:\n                                      if 2 == ext_call.return_data[0]:\n                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          if 3 == ext_call.return_data[0]:\n                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              if 4 == ext_call.return_data[0]:\n                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  else:\n                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require ext_code.size(stor51)\n                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                           gas gas_remaining wei\n                                          args ext_call.return_data[32]\n                                      require ext_call.success\n                          else:\n                              if not ext_call.return_data[0]:\n                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                      gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                  else:\n                                      stor15[stor23[rareId]][stor8.length] = 1\n                                      gooProduction[stor23[rareId]][stor8.length] = 0\n                              else:\n                                  if 1 == ext_call.return_data[0]:\n                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require ext_code.size(stor51)\n                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                           gas gas_remaining wei\n                                          args ext_call.return_data[32]\n                                      require ext_call.success\n                                  else:\n                                      if ext_call.return_data[0] != 2:\n                                          if 3 == ext_call.return_data[0]:\n                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if 4 == ext_call.return_data[0]:\n                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              else:\n                                                  if 5 == ext_call.return_data[0]:\n                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 6 == ext_call.return_data[0]:\n                                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 7 == ext_call.return_data[0]:\n                                                              stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 <= call.value:\n                                              if call.value > stor24[rareId].field_0:\n                                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              else:\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          else:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n      else:\n          if not ext_call.return_data[0]:\n              stor25[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n              gooProduction[caller][stor8.length] = gooProduction[caller][stor17[caller]] + (10 * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + (stor26[caller][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]])\n              lastGooProductionUpdate[caller] = stor8.length\n              totalGooProduction = (10 * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + (stor26[caller][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + totalGooProduction\n              stor16[stor23[rareId]] = block.timestamp\n              if stor16[stor23[rareId]] <= 0:\n                  if not ext_call.return_data[0]:\n                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                      if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                          gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                      else:\n                          stor15[stor23[rareId]][stor8.length] = 1\n                          gooProduction[stor23[rareId]][stor8.length] = 0\n                      lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                      totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                  else:\n                      if 1 == ext_call.return_data[0]:\n                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require ext_code.size(stor51)\n                          call stor51.unitGooProduction(uint256 unitId) with:\n                               gas gas_remaining wei\n                              args ext_call.return_data[32]\n                          require ext_call.success\n                          require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                      else:\n                          if 2 == ext_call.return_data[0]:\n                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              if stor24[rareId].field_0 > call.value:\n                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                              else:\n                                  if call.value > stor24[rareId].field_0:\n                                      etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                              stor23[rareId] = caller\n                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                              stor24[rareId].field_254 % 4 = 0\n                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                              stop\n                          if ext_call.return_data[0] != 3:\n                              if ext_call.return_data[0] != 4:\n                                  if 5 == ext_call.return_data[0]:\n                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 > call.value:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                  else:\n                                      if 6 == ext_call.return_data[0]:\n                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          if 7 == ext_call.return_data[0]:\n                                              stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              else:\n                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                  if stor24[rareId].field_0 <= call.value:\n                                      if call.value > stor24[rareId].field_0:\n                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                      else:\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  else:\n                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                          else:\n                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              if stor24[rareId].field_0 > call.value:\n                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  stop\n                              if call.value <= stor24[rareId].field_0:\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  stop\n                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                              stor23[rareId] = caller\n                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                              stor24[rareId].field_254 % 4 = 0\n                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n              else:\n                  if stor16[stor23[rareId]] < block.timestamp:\n                      totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                      stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                      if not ext_call.return_data[0]:\n                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if 1 == ext_call.return_data[0]:\n                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require ext_code.size(stor51)\n                          call stor51.unitGooProduction(uint256 unitId) with:\n                               gas gas_remaining wei\n                              args ext_call.return_data[32]\n                          require ext_call.success\n                      else:\n                          if 2 == ext_call.return_data[0]:\n                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                          else:\n                              if 3 == ext_call.return_data[0]:\n                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              else:\n                                  if 4 == ext_call.return_data[0]:\n                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  else:\n                                      if 5 == ext_call.return_data[0]:\n                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                  else:\n                      if not ext_call.return_data[0]:\n                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                          if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                              gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                          else:\n                              stor15[stor23[rareId]][stor8.length] = 1\n                              gooProduction[stor23[rareId]][stor8.length] = 0\n                          lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                          totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                      else:\n                          if 1 == ext_call.return_data[0]:\n                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require ext_code.size(stor51)\n                              call stor51.unitGooProduction(uint256 unitId) with:\n                                   gas gas_remaining wei\n                                  args ext_call.return_data[32]\n                              require ext_call.success\n                              require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if ext_call.return_data[0] != 2:\n                              if ext_call.return_data[0] != 3:\n                                  if 4 == ext_call.return_data[0]:\n                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 > call.value:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                  else:\n                                      if 5 == ext_call.return_data[0]:\n                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      else:\n                                          if 6 == ext_call.return_data[0]:\n                                              stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              if 7 == ext_call.return_data[0]:\n                                                  stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              else:\n                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                  if stor24[rareId].field_0 <= call.value:\n                                      if call.value > stor24[rareId].field_0:\n                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                      else:\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  else:\n                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                          else:\n                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              if stor24[rareId].field_0 > call.value:\n                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  stop\n                              if call.value <= stor24[rareId].field_0:\n                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                  stor23[rareId] = caller\n                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                  stor24[rareId].field_254 % 4 = 0\n                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  stop\n                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                              stor23[rareId] = caller\n                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                              stor24[rareId].field_254 % 4 = 0\n                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n          else:\n              if 1 == ext_call.return_data[0]:\n                  stor26[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                  require ext_code.size(stor51)\n                  call stor51.unitGooProduction(uint256 unitId) with:\n                       gas gas_remaining wei\n                      args ext_call.return_data[32]\n                  require ext_call.success\n                  gooProduction[caller][stor8.length] = gooProduction[caller][stor17[caller]] + (stor25[caller][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]])\n                  lastGooProductionUpdate[caller] = stor8.length\n                  totalGooProduction = (stor25[caller][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[caller][ext_call.return_data[32]]) + totalGooProduction\n                  stor16[stor23[rareId]] = block.timestamp\n                  if stor16[stor23[rareId]] <= 0:\n                      if not ext_call.return_data[0]:\n                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                      else:\n                          if 1 == ext_call.return_data[0]:\n                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require ext_code.size(stor51)\n                              call stor51.unitGooProduction(uint256 unitId) with:\n                                   gas gas_remaining wei\n                                  args ext_call.return_data[32]\n                              require ext_call.success\n                          else:\n                              if 2 == ext_call.return_data[0]:\n                                  stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                  if stor24[rareId].field_0 > call.value:\n                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                              else:\n                                  if 3 == ext_call.return_data[0]:\n                                      stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                  else:\n                                      if 4 == ext_call.return_data[0]:\n                                          stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          if 5 == ext_call.return_data[0]:\n                                              stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              if 6 == ext_call.return_data[0]:\n                                                  stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                  else:\n                      if stor16[stor23[rareId]] >= block.timestamp:\n                          if not ext_call.return_data[0]:\n                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if 1 == ext_call.return_data[0]:\n                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require ext_code.size(stor51)\n                              call stor51.unitGooProduction(uint256 unitId) with:\n                                   gas gas_remaining wei\n                                  args ext_call.return_data[32]\n                              require ext_call.success\n                          else:\n                              if 2 == ext_call.return_data[0]:\n                                  stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                              else:\n                                  if 3 == ext_call.return_data[0]:\n                                      stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  else:\n                                      if 4 == ext_call.return_data[0]:\n                                          stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          if 5 == ext_call.return_data[0]:\n                                              stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                      else:\n                          totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                          stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                          if not ext_call.return_data[0]:\n                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                          else:\n                              if ext_call.return_data[0] != 1:\n                                  if 2 == ext_call.return_data[0]:\n                                      stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              else:\n                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require ext_code.size(stor51)\n                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                       gas gas_remaining wei\n                                      args ext_call.return_data[32]\n              else:\n                  if ext_call.return_data[0] != 2:\n                      if ext_call.return_data[0] != 3:\n                          if ext_call.return_data[0] != 4:\n                              if ext_call.return_data[0] != 5:\n                                  if ext_call.return_data[0] != 6:\n                                      if ext_call.return_data[0] != 7:\n                                          if 8 == ext_call.return_data[0]:\n                                              stor33[caller][ext_call.return_data[32]] = ext_call.return_data[64]\n                                              stor16[stor23[rareId]] = block.timestamp\n                                              if stor16[stor23[rareId]] <= 0:\n                                                  if not ext_call.return_data[0]:\n                                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                  if 1 == ext_call.return_data[0]:\n                                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require ext_code.size(stor51)\n                                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                                           gas gas_remaining wei\n                                                          args ext_call.return_data[32]\n                                                      require ext_call.success\n                                                  else:\n                                                      if 2 == ext_call.return_data[0]:\n                                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      else:\n                                                          if 3 == ext_call.return_data[0]:\n                                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          else:\n                                                              if 4 == ext_call.return_data[0]:\n                                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              else:\n                                                                  if 5 == ext_call.return_data[0]:\n                                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if stor16[stor23[rareId]] >= block.timestamp:\n                                                      if not ext_call.return_data[0]:\n                                                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if ext_call.return_data[0] != 1:\n                                                              if 2 == ext_call.return_data[0]:\n                                                                  stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              else:\n                                                                  if 3 == ext_call.return_data[0]:\n                                                                      stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  else:\n                                                                      if 4 == ext_call.return_data[0]:\n                                                                          stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          else:\n                                                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              require ext_code.size(stor51)\n                                                              call stor51.unitGooProduction(uint256 unitId) with:\n                                                                   gas gas_remaining wei\n                                                                  args ext_call.return_data[32]\n                                                              require ext_call.success\n                                                  else:\n                                                      totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                                      stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                                      if not ext_call.return_data[0]:\n                                                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 1 == ext_call.return_data[0]:\n                                                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              stor16[stor23[rareId]] = block.timestamp\n                                              if stor16[stor23[rareId]] <= 0:\n                                                  if not ext_call.return_data[0]:\n                                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                                  else:\n                                                      if 1 == ext_call.return_data[0]:\n                                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require ext_code.size(stor51)\n                                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                                               gas gas_remaining wei\n                                                              args ext_call.return_data[32]\n                                                          require ext_call.success\n                                                      else:\n                                                          if 2 == ext_call.return_data[0]:\n                                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                              if stor24[rareId].field_0 > call.value:\n                                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                          else:\n                                                              if 3 == ext_call.return_data[0]:\n                                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                              else:\n                                                                  if 4 == ext_call.return_data[0]:\n                                                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  else:\n                                                                      if 5 == ext_call.return_data[0]:\n                                                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                      else:\n                                                                          if 6 == ext_call.return_data[0]:\n                                                                              stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if stor16[stor23[rareId]] >= block.timestamp:\n                                                      if not ext_call.return_data[0]:\n                                                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                      if 1 == ext_call.return_data[0]:\n                                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require ext_code.size(stor51)\n                                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                                               gas gas_remaining wei\n                                                              args ext_call.return_data[32]\n                                                          require ext_call.success\n                                                      else:\n                                                          if 2 == ext_call.return_data[0]:\n                                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          else:\n                                                              if 3 == ext_call.return_data[0]:\n                                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              else:\n                                                                  if 4 == ext_call.return_data[0]:\n                                                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  else:\n                                                                      if 5 == ext_call.return_data[0]:\n                                                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                                      stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                                      if not ext_call.return_data[0]:\n                                                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if ext_call.return_data[0] != 1:\n                                                              if 2 == ext_call.return_data[0]:\n                                                                  stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          else:\n                                                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              require ext_code.size(stor51)\n                                                              call stor51.unitGooProduction(uint256 unitId) with:\n                                                                   gas gas_remaining wei\n                                                                  args ext_call.return_data[32]\n                                      else:\n                                          stor32[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                                          stor16[stor23[rareId]] = block.timestamp\n                                          if stor16[stor23[rareId]] <= 0:\n                                              if not ext_call.return_data[0]:\n                                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                              else:\n                                                  if 1 == ext_call.return_data[0]:\n                                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require ext_code.size(stor51)\n                                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                                           gas gas_remaining wei\n                                                          args ext_call.return_data[32]\n                                                      require ext_call.success\n                                                  else:\n                                                      if 2 == ext_call.return_data[0]:\n                                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          if stor24[rareId].field_0 > call.value:\n                                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      else:\n                                                          if 3 == ext_call.return_data[0]:\n                                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          else:\n                                                              if 4 == ext_call.return_data[0]:\n                                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              else:\n                                                                  if 5 == ext_call.return_data[0]:\n                                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  else:\n                                                                      if 6 == ext_call.return_data[0]:\n                                                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              if stor16[stor23[rareId]] >= block.timestamp:\n                                                  if not ext_call.return_data[0]:\n                                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                                  if 1 == ext_call.return_data[0]:\n                                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require ext_code.size(stor51)\n                                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                                           gas gas_remaining wei\n                                                          args ext_call.return_data[32]\n                                                      require ext_call.success\n                                                  else:\n                                                      if 2 == ext_call.return_data[0]:\n                                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      else:\n                                                          if 3 == ext_call.return_data[0]:\n                                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          else:\n                                                              if 4 == ext_call.return_data[0]:\n                                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              else:\n                                                                  if 5 == ext_call.return_data[0]:\n                                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                                  stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                                  if not ext_call.return_data[0]:\n                                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if ext_call.return_data[0] != 1:\n                                                          if 2 == ext_call.return_data[0]:\n                                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require ext_code.size(stor51)\n                                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                                               gas gas_remaining wei\n                                                              args ext_call.return_data[32]\n                                  else:\n                                      stor31[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                                      stor16[stor23[rareId]] = block.timestamp\n                                      if stor16[stor23[rareId]] > 0:\n                                          if stor16[stor23[rareId]] >= block.timestamp:\n                                              if not ext_call.return_data[0]:\n                                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                              else:\n                                                  if 1 == ext_call.return_data[0]:\n                                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require ext_code.size(stor51)\n                                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                                           gas gas_remaining wei\n                                                          args ext_call.return_data[32]\n                                                      require ext_call.success\n                                                  else:\n                                                      if 2 == ext_call.return_data[0]:\n                                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          if stor24[rareId].field_0 > call.value:\n                                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      else:\n                                                          if 3 == ext_call.return_data[0]:\n                                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          else:\n                                                              if 4 == ext_call.return_data[0]:\n                                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              else:\n                                                                  if 5 == ext_call.return_data[0]:\n                                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  else:\n                                                                      if 6 == ext_call.return_data[0]:\n                                                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                              stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                              if not ext_call.return_data[0]:\n                                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if ext_call.return_data[0] != 1:\n                                                      if 2 == ext_call.return_data[0]:\n                                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 3 == ext_call.return_data[0]:\n                                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require ext_code.size(stor51)\n                                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                                           gas gas_remaining wei\n                                                          args ext_call.return_data[32]\n                                                      require ext_call.success\n                                      else:\n                                          if not ext_call.return_data[0]:\n                                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                              if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                                  gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                              else:\n                                                  stor15[stor23[rareId]][stor8.length] = 1\n                                                  gooProduction[stor23[rareId]][stor8.length] = 0\n                                          else:\n                                              if 1 == ext_call.return_data[0]:\n                                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require ext_code.size(stor51)\n                                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                                       gas gas_remaining wei\n                                                      args ext_call.return_data[32]\n                                                  require ext_call.success\n                                              else:\n                                                  if ext_call.return_data[0] != 2:\n                                                      if 3 == ext_call.return_data[0]:\n                                                          stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          if stor24[rareId].field_0 > call.value:\n                                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      else:\n                                                          if 4 == ext_call.return_data[0]:\n                                                              stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          else:\n                                                              if 5 == ext_call.return_data[0]:\n                                                                  stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              else:\n                                                                  if 6 == ext_call.return_data[0]:\n                                                                      stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  else:\n                                                                      if 7 == ext_call.return_data[0]:\n                                                                          stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      if stor24[rareId].field_0 <= call.value:\n                                                          if call.value > stor24[rareId].field_0:\n                                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                          else:\n                                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                              stor23[rareId] = caller\n                                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                              stor24[rareId].field_254 % 4 = 0\n                                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                      else:\n                                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                          stor23[rareId] = caller\n                                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                          stor24[rareId].field_254 % 4 = 0\n                                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                              else:\n                                  stor30[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                                  stor16[stor23[rareId]] = block.timestamp\n                                  if stor16[stor23[rareId]] <= 0:\n                                      if not ext_call.return_data[0]:\n                                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                          if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                              gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                          else:\n                                              stor15[stor23[rareId]][stor8.length] = 1\n                                              gooProduction[stor23[rareId]][stor8.length] = 0\n                                          lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                                          totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                      else:\n                                          if 1 == ext_call.return_data[0]:\n                                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require ext_code.size(stor51)\n                                              call stor51.unitGooProduction(uint256 unitId) with:\n                                                   gas gas_remaining wei\n                                                  args ext_call.return_data[32]\n                                              require ext_call.success\n                                              require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          if ext_call.return_data[0] != 2:\n                                              if ext_call.return_data[0] != 3:\n                                                  if 4 == ext_call.return_data[0]:\n                                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      if stor24[rareId].field_0 > call.value:\n                                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  else:\n                                                      if 5 == ext_call.return_data[0]:\n                                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      else:\n                                                          if 6 == ext_call.return_data[0]:\n                                                              stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          else:\n                                                              if 7 == ext_call.return_data[0]:\n                                                                  stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                  if stor24[rareId].field_0 <= call.value:\n                                                      if call.value > stor24[rareId].field_0:\n                                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                      else:\n                                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                          stor23[rareId] = caller\n                                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                          stor24[rareId].field_254 % 4 = 0\n                                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  else:\n                                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                      stor23[rareId] = caller\n                                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                      stor24[rareId].field_254 % 4 = 0\n                                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          else:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              if call.value <= stor24[rareId].field_0:\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  else:\n                                      if stor16[stor23[rareId]] < block.timestamp:\n                                          totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                          stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                          if not ext_call.return_data[0]:\n                                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          else:\n                                              if ext_call.return_data[0] != 1:\n                                                  if 2 == ext_call.return_data[0]:\n                                                      stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 3 == ext_call.return_data[0]:\n                                                          stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 4 == ext_call.return_data[0]:\n                                                              stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require ext_code.size(stor51)\n                                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                                       gas gas_remaining wei\n                                                      args ext_call.return_data[32]\n                                                  require ext_call.success\n                                      else:\n                                          if not ext_call.return_data[0]:\n                                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                              if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                                  gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                              else:\n                                                  stor15[stor23[rareId]][stor8.length] = 1\n                                                  gooProduction[stor23[rareId]][stor8.length] = 0\n                                          else:\n                                              if 1 == ext_call.return_data[0]:\n                                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require ext_code.size(stor51)\n                                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                                       gas gas_remaining wei\n                                                      args ext_call.return_data[32]\n                                                  require ext_call.success\n                                              else:\n                                                  if ext_call.return_data[0] != 2:\n                                                      if 3 == ext_call.return_data[0]:\n                                                          stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          if stor24[rareId].field_0 > call.value:\n                                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      else:\n                                                          if 4 == ext_call.return_data[0]:\n                                                              stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                          else:\n                                                              if 5 == ext_call.return_data[0]:\n                                                                  stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                              else:\n                                                                  if 6 == ext_call.return_data[0]:\n                                                                      stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                                  else:\n                                                                      if 7 == ext_call.return_data[0]:\n                                                                          stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      if stor24[rareId].field_0 <= call.value:\n                                                          if call.value > stor24[rareId].field_0:\n                                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                          else:\n                                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                              stor23[rareId] = caller\n                                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                              stor24[rareId].field_254 % 4 = 0\n                                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                      else:\n                                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                          stor23[rareId] = caller\n                                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                          stor24[rareId].field_254 % 4 = 0\n                                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                          else:\n                              stor29[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                              stor16[stor23[rareId]] = block.timestamp\n                              if stor16[stor23[rareId]] <= 0:\n                                  if not ext_call.return_data[0]:\n                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                      if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                          gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                      else:\n                                          stor15[stor23[rareId]][stor8.length] = 1\n                                          gooProduction[stor23[rareId]][stor8.length] = 0\n                                      lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                                      totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                  else:\n                                      if 1 == ext_call.return_data[0]:\n                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require ext_code.size(stor51)\n                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                               gas gas_remaining wei\n                                              args ext_call.return_data[32]\n                                          require ext_call.success\n                                          require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                      else:\n                                          if 2 == ext_call.return_data[0]:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                              else:\n                                                  if call.value > stor24[rareId].field_0:\n                                                      etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              stop\n                                          if ext_call.return_data[0] != 3:\n                                              if ext_call.return_data[0] != 4:\n                                                  if 5 == ext_call.return_data[0]:\n                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      if stor24[rareId].field_0 > call.value:\n                                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  else:\n                                                      if 6 == ext_call.return_data[0]:\n                                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 7 == ext_call.return_data[0]:\n                                                              stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              else:\n                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                  if stor24[rareId].field_0 <= call.value:\n                                                      if call.value > stor24[rareId].field_0:\n                                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                      else:\n                                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                          stor23[rareId] = caller\n                                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                          stor24[rareId].field_254 % 4 = 0\n                                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  else:\n                                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                      stor23[rareId] = caller\n                                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                      stor24[rareId].field_254 % 4 = 0\n                                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          else:\n                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              if call.value <= stor24[rareId].field_0:\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                              else:\n                                  if stor16[stor23[rareId]] < block.timestamp:\n                                      totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                      stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                      if not ext_call.return_data[0]:\n                                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      if 1 == ext_call.return_data[0]:\n                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require ext_code.size(stor51)\n                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                               gas gas_remaining wei\n                                              args ext_call.return_data[32]\n                                          require ext_call.success\n                                      else:\n                                          if 2 == ext_call.return_data[0]:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          else:\n                                              if 3 == ext_call.return_data[0]:\n                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if 4 == ext_call.return_data[0]:\n                                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 5 == ext_call.return_data[0]:\n                                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  else:\n                                      if not ext_call.return_data[0]:\n                                          stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                          if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                              gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                          else:\n                                              stor15[stor23[rareId]][stor8.length] = 1\n                                              gooProduction[stor23[rareId]][stor8.length] = 0\n                                          lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                                          totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                      else:\n                                          if 1 == ext_call.return_data[0]:\n                                              stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require ext_code.size(stor51)\n                                              call stor51.unitGooProduction(uint256 unitId) with:\n                                                   gas gas_remaining wei\n                                                  args ext_call.return_data[32]\n                                              require ext_call.success\n                                              require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          if ext_call.return_data[0] != 2:\n                                              if ext_call.return_data[0] != 3:\n                                                  if 4 == ext_call.return_data[0]:\n                                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      if stor24[rareId].field_0 > call.value:\n                                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  else:\n                                                      if 5 == ext_call.return_data[0]:\n                                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      else:\n                                                          if 6 == ext_call.return_data[0]:\n                                                              stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                          else:\n                                                              if 7 == ext_call.return_data[0]:\n                                                                  stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                  if stor24[rareId].field_0 <= call.value:\n                                                      if call.value > stor24[rareId].field_0:\n                                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                      else:\n                                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                          stor23[rareId] = caller\n                                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                          stor24[rareId].field_254 % 4 = 0\n                                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  else:\n                                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                      stor23[rareId] = caller\n                                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                      stor24[rareId].field_254 % 4 = 0\n                                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          else:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              if call.value <= stor24[rareId].field_0:\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                      else:\n                          stor28[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                          stor16[stor23[rareId]] = block.timestamp\n                          if stor16[stor23[rareId]] <= 0:\n                              if not ext_call.return_data[0]:\n                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                      gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                  else:\n                                      stor15[stor23[rareId]][stor8.length] = 1\n                                      gooProduction[stor23[rareId]][stor8.length] = 0\n                                  lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                                  totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                              else:\n                                  if 1 == ext_call.return_data[0]:\n                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require ext_code.size(stor51)\n                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                           gas gas_remaining wei\n                                          args ext_call.return_data[32]\n                                      require ext_call.success\n                                      require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                      if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                          gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                      else:\n                                          stor15[stor23[rareId]][stor8.length] = 1\n                                          gooProduction[stor23[rareId]][stor8.length] = 0\n                                  else:\n                                      if 2 == ext_call.return_data[0]:\n                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 > call.value:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if call.value > stor24[rareId].field_0:\n                                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          stop\n                                      if 3 == ext_call.return_data[0]:\n                                          stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 > call.value:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if call.value > stor24[rareId].field_0:\n                                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          stop\n                                      if ext_call.return_data[0] != 4:\n                                          if ext_call.return_data[0] != 5:\n                                              if 6 == ext_call.return_data[0]:\n                                                  stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if 7 == ext_call.return_data[0]:\n                                                      stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 <= call.value:\n                                                  if call.value > stor24[rareId].field_0:\n                                                      etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                  else:\n                                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                      stor23[rareId] = caller\n                                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                      stor24[rareId].field_254 % 4 = 0\n                                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              else:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      else:\n                                          stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 > call.value:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              stop\n                                          if call.value <= stor24[rareId].field_0:\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              stop\n                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                          else:\n                              if stor16[stor23[rareId]] < block.timestamp:\n                                  totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                  stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                                  if not ext_call.return_data[0]:\n                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  else:\n                                      if 1 == ext_call.return_data[0]:\n                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require ext_code.size(stor51)\n                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                               gas gas_remaining wei\n                                              args ext_call.return_data[32]\n                                          require ext_call.success\n                                      else:\n                                          if 2 == ext_call.return_data[0]:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if 3 == ext_call.return_data[0]:\n                                                  stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              else:\n                                                  if 4 == ext_call.return_data[0]:\n                                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 5 == ext_call.return_data[0]:\n                                                          stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 6 == ext_call.return_data[0]:\n                                                              stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              else:\n                                  if not ext_call.return_data[0]:\n                                      stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                      if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                          gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                      else:\n                                          stor15[stor23[rareId]][stor8.length] = 1\n                                          gooProduction[stor23[rareId]][stor8.length] = 0\n                                      lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                                      totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                  else:\n                                      if 1 == ext_call.return_data[0]:\n                                          stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require ext_code.size(stor51)\n                                          call stor51.unitGooProduction(uint256 unitId) with:\n                                               gas gas_remaining wei\n                                              args ext_call.return_data[32]\n                                          require ext_call.success\n                                          require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                      else:\n                                          if 2 == ext_call.return_data[0]:\n                                              stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                              else:\n                                                  if call.value > stor24[rareId].field_0:\n                                                      etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              stop\n                                          if ext_call.return_data[0] != 3:\n                                              if ext_call.return_data[0] != 4:\n                                                  if 5 == ext_call.return_data[0]:\n                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                      if stor24[rareId].field_0 > call.value:\n                                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  else:\n                                                      if 6 == ext_call.return_data[0]:\n                                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 7 == ext_call.return_data[0]:\n                                                              stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              else:\n                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                                  if stor24[rareId].field_0 <= call.value:\n                                                      if call.value > stor24[rareId].field_0:\n                                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                      else:\n                                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                          stor23[rareId] = caller\n                                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                          stor24[rareId].field_254 % 4 = 0\n                                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  else:\n                                                      etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                      stor23[rareId] = caller\n                                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                      stor24[rareId].field_254 % 4 = 0\n                                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          else:\n                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              if call.value <= stor24[rareId].field_0:\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                                  stop\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                  else:\n                      stor27[caller][ext_call.return_data[32]] += ext_call.return_data[64]\n                      stor16[stor23[rareId]] = block.timestamp\n                      if stor16[stor23[rareId]] > 0:\n                          if stor16[stor23[rareId]] < block.timestamp:\n                              totalSupply += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                              stor12[stor23[rareId]] += (block.timestamp * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) - (stor16[stor23[rareId]] * gooProduction[stor23[rareId]][stor17[stor23[rareId]]]) / 100\n                              if not ext_call.return_data[0]:\n                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                      gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                  else:\n                                      stor15[stor23[rareId]][stor8.length] = 1\n                                      gooProduction[stor23[rareId]][stor8.length] = 0\n                              else:\n                                  if 1 == ext_call.return_data[0]:\n                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require ext_code.size(stor51)\n                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                           gas gas_remaining wei\n                                          args ext_call.return_data[32]\n                                      require ext_call.success\n                                  else:\n                                      if ext_call.return_data[0] != 2:\n                                          if 3 == ext_call.return_data[0]:\n                                              stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if 4 == ext_call.return_data[0]:\n                                                  stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              else:\n                                                  if 5 == ext_call.return_data[0]:\n                                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                  else:\n                                                      if 6 == ext_call.return_data[0]:\n                                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                                      else:\n                                                          if 7 == ext_call.return_data[0]:\n                                                              stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 <= call.value:\n                                              if call.value > stor24[rareId].field_0:\n                                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                              else:\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          else:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                          else:\n                              if not ext_call.return_data[0]:\n                                  stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                      gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                  else:\n                                      stor15[stor23[rareId]][stor8.length] = 1\n                                      gooProduction[stor23[rareId]][stor8.length] = 0\n                                  lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                                  totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                              else:\n                                  if 1 == ext_call.return_data[0]:\n                                      stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require ext_code.size(stor51)\n                                      call stor51.unitGooProduction(uint256 unitId) with:\n                                           gas gas_remaining wei\n                                          args ext_call.return_data[32]\n                                      require ext_call.success\n                                      require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                      if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                          gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                      else:\n                                          stor15[stor23[rareId]][stor8.length] = 1\n                                          gooProduction[stor23[rareId]][stor8.length] = 0\n                                  else:\n                                      if 2 == ext_call.return_data[0]:\n                                          stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 > call.value:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if call.value > stor24[rareId].field_0:\n                                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          stop\n                                      if 3 == ext_call.return_data[0]:\n                                          stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 > call.value:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              if call.value > stor24[rareId].field_0:\n                                                  etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          stop\n                                      if ext_call.return_data[0] != 4:\n                                          if ext_call.return_data[0] != 5:\n                                              if 6 == ext_call.return_data[0]:\n                                                  stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              else:\n                                                  if 7 == ext_call.return_data[0]:\n                                                      stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 > call.value:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          else:\n                                              stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                              require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                              if stor24[rareId].field_0 <= call.value:\n                                                  if call.value > stor24[rareId].field_0:\n                                                      etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                                  else:\n                                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                      stor23[rareId] = caller\n                                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                      stor24[rareId].field_254 % 4 = 0\n                                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              else:\n                                                  etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                                  totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                                  etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                                  stor23[rareId] = caller\n                                                  Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                                  stor24[rareId].field_254 % 4 = 0\n                                                  etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      else:\n                                          stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                          require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                          if stor24[rareId].field_0 > call.value:\n                                              etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              stop\n                                          if call.value <= stor24[rareId].field_0:\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                              stop\n                                          etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                      else:\n                          if not ext_call.return_data[0]:\n                              stor25[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                              require (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                              if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                  gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                              else:\n                                  stor15[stor23[rareId]][stor8.length] = 1\n                                  gooProduction[stor23[rareId]][stor8.length] = 0\n                              lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                              totalGooProduction = totalGooProduction - (10 * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (stor26[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                          else:\n                              if 1 == ext_call.return_data[0]:\n                                  stor26[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                  require ext_code.size(stor51)\n                                  call stor51.unitGooProduction(uint256 unitId) with:\n                                       gas gas_remaining wei\n                                      args ext_call.return_data[32]\n                                  require ext_call.success\n                                  require (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) + (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) <= gooProduction[stor23[rareId]][stor17[stor23[rareId]]]\n                                  if gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]):\n                                      gooProduction[stor23[rareId]][stor8.length] = gooProduction[stor23[rareId]][stor17[stor23[rareId]]] - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                                  else:\n                                      stor15[stor23[rareId]][stor8.length] = 1\n                                      gooProduction[stor23[rareId]][stor8.length] = 0\n                                  lastGooProductionUpdate[stor23[rareId]] = stor8.length\n                                  totalGooProduction = totalGooProduction - (stor25[stor23[rareId]][ext_call.return_data[32]] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]]) - (ext_call.return_data[0] * ext_call.return_data[64] * stor21[stor23[rareId]][ext_call.return_data[32]])\n                              else:\n                                  if 2 == ext_call.return_data[0]:\n                                      stor27[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 > call.value:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      else:\n                                          if call.value > stor24[rareId].field_0:\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      stop\n                                  if 3 == ext_call.return_data[0]:\n                                      stor28[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 > call.value:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      else:\n                                          if call.value > stor24[rareId].field_0:\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      stop\n                                  if 4 == ext_call.return_data[0]:\n                                      stor29[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 > call.value:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                      else:\n                                          if call.value > stor24[rareId].field_0:\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      stop\n                                  if 5 == ext_call.return_data[0]:\n                                      stor30[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 > call.value:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          stop\n                                      if call.value <= stor24[rareId].field_0:\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                          stop\n                                      etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                      totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                      etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                      stor23[rareId] = caller\n                                      Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                      stor24[rareId].field_254 % 4 = 0\n                                      etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                  else:\n                                      if 6 == ext_call.return_data[0]:\n                                          stor31[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      else:\n                                          if 7 == ext_call.return_data[0]:\n                                              stor32[stor23[rareId]][ext_call.return_data[32]] -= ext_call.return_data[64]\n                                      require call.value + etherBalanceOf[caller] >= stor24[rareId].field_0\n                                      if stor24[rareId].field_0 <= call.value:\n                                          if call.value > stor24[rareId].field_0:\n                                              etherBalanceOf[caller] = call.value - stor24[rareId].field_0 + etherBalanceOf[caller]\n                                          else:\n                                              totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                              etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                              stor23[rareId] = caller\n                                              Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                              stor24[rareId].field_254 % 4 = 0\n                                              etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n                                      else:\n                                          etherBalanceOf[caller] = etherBalanceOf[caller] - stor24[rareId].field_0 + call.value\n                                          totalEtherGooResearchPool += stor24[rareId].field_0 / 20\n                                          etherBalanceOf[stor2] += stor24[rareId].field_0 / 50\n                                          stor23[rareId] = caller\n                                          Mask(254, 0, stor24[rareId].field_0) = 5 * stor24[rareId].field_0 / 4\n                                          stor24[rareId].field_254 % 4 = 0\n                                          etherBalanceOf[stor23[rareId]] = stor24[rareId].field_0 - (stor24[rareId].field_0 / 50) - (stor24[rareId].field_0 / 20) + etherBalanceOf[stor23[rareId]]\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n",
	"language": "Solidity",
	"status": "This model's maximum context length is 32768 tokens. However, your messages resulted in 131905 tokens. Please reduce the length of the messages."
}