{
	"address": "0x65e68b87f1380b92692f7af47cbeff917ee27a16",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is a contract written in Solidity that should accomplish what you've outlined. Please note that the logic is quite complex and some parts of the description are ambiguous, so it's possible that the contract might not behave exactly as desired. It's important to thoroughly test any smart contract before deployment.\n\n```solidity\n// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\ncontract MyContract {\n    address public owner;\n    bool private paused;\n    string public name;\n    string public symbol;\n    uint8 private decimals = 18;\n    uint8 private decimals1 = 3;\n    uint8 private decimals2 = 7;\n    mapping(address => uint256) public balanceOf;\n    uint256 public totalInvestor;\n    uint256 public totalDonation;\n    uint256 public totalSupply;\n    uint256 public totalContractBalance;\n    uint256 public sellingPrice;\n    mapping(address => bool) public checkGameListed;\n\n    constructor() payable {\n        owner = msg.sender;\n        paused = false;\n        name = \"Token\";\n        symbol = \"TOK\";\n        totalInvestor = 0;\n        totalDonation = 0;\n        totalSupply = 0;\n        totalContractBalance = 0;\n        sellingPrice = 0x38d7ea4c68000;\n    }\n\n    function transfer(address _to, uint256 _value) public {\n        require(balanceOf[msg.sender] >= _value, \"Insufficient balance\");\n        balanceOf[msg.sender] -= _value;\n        balanceOf[_to] += _value;\n    }\n\n    function addGame(address _game) public {\n        require(msg.sender == owner, \"Only the owner can add a game\");\n        checkGameListed[_game] = true;\n    }\n\n    function removeGame(address _game) public {\n        require(msg.sender == owner, \"Only the owner can remove a game\");\n        checkGameListed[_game] = false;\n    }\n\n    function payWithToken(uint256 _value, address _from) public payable {\n        require(checkGameListed[msg.sender], \"Game not listed\");\n        require(balanceOf[_from] >= _value, \"Insufficient balance\");\n        balanceOf[_from] -= _value;\n        totalContractBalance += msg.value;\n        totalDonation += msg.value;\n    }\n\n    function sellToken(uint256 _value) public {\n        require(balanceOf[msg.sender] >= _value, \"Insufficient balance\");\n        balanceOf[msg.sender] -= _value;\n        totalContractBalance -= sellingPrice * _value;\n        totalSupply -= _value;\n        msg.sender.transfer(sellingPrice * _value);\n    }\n\n    function appreciateTokenPrice() public payable {\n        require(checkGameListed[msg.sender], \"Game not listed\");\n        totalContractBalance += msg.value;\n        totalDonation += msg.value;\n    }\n\n    function setSellingPrice() public {\n        require(totalSupply > 0, \"Total supply must be greater than 0\");\n        sellingPrice = totalContractBalance / totalSupply;\n    }\n}\n```\nThis contract includes a constructor function that initializes the state variables. It contains functions to transfer tokens, add/remove games from a list, pay with tokens, sell tokens, appreciate the token price, and adjust the selling price. \n\nPlease note that this contract does not include any overflow/underflow checks or safe math operations. It's recommended to add those in a production environment for added security.",
				"role": "assistant"
			}
		}
	],
	"created": 1702482258,
	"id": "chatcmpl-8VLhCfeapRTnu23y3S05SMqyyluQA",
	"input_format": "TemplateDescription",
	"ir": "For the payable constructor function.\n- the state variable paused will be updated to 0.\n- the state variable name will be updated to 0.\n- When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than SHA3(1):\n  - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n    - the state variable decimals2 will be updated to 7.\n    - the state variable decimals will be updated to 7.\n    - the state variable decimals1 will be updated to 3.\n    - the state variable totalinvestor will be updated to 0.\n    - the state variable totaldonation will be updated to 0.\n    - the state variable totalsupply will be updated to 0.\n    - the state variable totalcontractbalance will be updated to 0.\n    - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n    - When the ether just received (i.e., msg.value) is 0:\n      - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n  - the state variable symbol will be updated to 0.\n  - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(2):\n    - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(2)):\n      - the state variable decimals2 will be updated to 7.\n      - the state variable decimals will be updated to 7.\n      - the state variable decimals1 will be updated to 3.\n      - the state variable totalinvestor will be updated to 0.\n      - the state variable totaldonation will be updated to 0.\n      - the state variable totalsupply will be updated to 0.\n      - the state variable totalcontractbalance will be updated to 0.\n      - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n    - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(2)):\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n        - the state variable decimals2 will be updated to 7.\n        - the state variable decimals will be updated to 7.\n        - the state variable decimals1 will be updated to 3.\n        - the state variable totalinvestor will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable totalsupply will be updated to 0.\n        - the state variable totalcontractbalance will be updated to 0.\n        - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(2))):\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n          - the state variable decimals2 will be updated to 7.\n          - the state variable decimals will be updated to 7.\n          - the state variable decimals1 will be updated to 3.\n          - the state variable totalinvestor will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable totalsupply will be updated to 0.\n          - the state variable totalcontractbalance will be updated to 0.\n          - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(2)))):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(2))))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(2))))), and (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(2)))))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n- When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is greater than SHA3(1):\n  - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than (1+SHA3(1)):\n    - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n      - the state variable decimals2 will be updated to 7.\n      - the state variable decimals will be updated to 7.\n      - the state variable decimals1 will be updated to 3.\n      - the state variable totalinvestor will be updated to 0.\n      - the state variable totaldonation will be updated to 0.\n      - the state variable totalsupply will be updated to 0.\n      - the state variable totalcontractbalance will be updated to 0.\n      - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n    - the state variable symbol will be updated to 0.\n    - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(2):\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(2)):\n        - the state variable decimals2 will be updated to 7.\n        - the state variable decimals will be updated to 7.\n        - the state variable decimals1 will be updated to 3.\n        - the state variable totalinvestor will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable totalsupply will be updated to 0.\n        - the state variable totalcontractbalance will be updated to 0.\n        - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(2)):\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n          - the state variable decimals2 will be updated to 7.\n          - the state variable decimals will be updated to 7.\n          - the state variable decimals1 will be updated to 3.\n          - the state variable totalinvestor will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable totalsupply will be updated to 0.\n          - the state variable totalcontractbalance will be updated to 0.\n          - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(2))):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(2))))), and (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(2)))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n  - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is greater than (1+SHA3(1)):\n    - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than (1+(1+SHA3(1))):\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n        - the state variable decimals2 will be updated to 7.\n        - the state variable decimals will be updated to 7.\n        - the state variable decimals1 will be updated to 3.\n        - the state variable totalinvestor will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable totalsupply will be updated to 0.\n        - the state variable totalcontractbalance will be updated to 0.\n        - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n      - the state variable symbol will be updated to 0.\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(2):\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(2)):\n          - the state variable decimals2 will be updated to 7.\n          - the state variable decimals will be updated to 7.\n          - the state variable decimals1 will be updated to 3.\n          - the state variable totalinvestor will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable totalsupply will be updated to 0.\n          - the state variable totalcontractbalance will be updated to 0.\n          - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(2)):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))), and (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(2))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n    - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(1))):\n      - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+SHA3(1)))):\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n          - the state variable decimals2 will be updated to 7.\n          - the state variable decimals will be updated to 7.\n          - the state variable decimals1 will be updated to 3.\n          - the state variable totalinvestor will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable totalsupply will be updated to 0.\n          - the state variable totalcontractbalance will be updated to 0.\n          - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n        - the state variable symbol will be updated to 0.\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(2):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(2)):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(2)), and (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n      - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(1)))):\n        - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(1))))):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - the state variable symbol will be updated to 0.\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(2)), and (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(2):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n        - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(1))))), and (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(1)))))):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - the state variable symbol will be updated to 0.\n\nFor the payable fallback function.\n- When (the ether just received (i.e., msg.value)+totalcontractbalance) is not smaller than totalcontractbalance, and 1 equals to the checkgamelisted of caller:\n  - the state variable totalcontractbalance will be updated to (the ether just received (i.e., msg.value)+totalcontractbalance).\n  - When (the ether just received (i.e., msg.value)+totaldonation) is not smaller than totaldonation:\n    - the state variable totaldonation will be updated to (the ether just received (i.e., msg.value)+totaldonation).\n    - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n      - When totalcontractbalance is 0:\n        - the state variable sellingprice will be updated to 0.\n      - When totalcontractbalance is not 0:\n        - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n\nFor the payable appreciateTokenPrice function.\n- When (the ether just received (i.e., msg.value)+totalcontractbalance) is not smaller than totalcontractbalance, and 1 equals to the checkgamelisted of caller:\n  - the state variable totalcontractbalance will be updated to (the ether just received (i.e., msg.value)+totalcontractbalance).\n  - When (the ether just received (i.e., msg.value)+totaldonation) is not smaller than totaldonation:\n    - the state variable totaldonation will be updated to (the ether just received (i.e., msg.value)+totaldonation).\n    - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n      - When totalcontractbalance is 0:\n        - the state variable sellingprice will be updated to 0.\n      - When totalcontractbalance is not 0:\n        - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n\nFor the removeGame function, it has one argument and its type is address.\n- For owner:\n  - the checkgamelisted of the first argument will be updated to the checkgamelisted of the first argument.\n\nFor the addGame function, it has one argument and its type is address.\n- For owner:\n  - the checkgamelisted of the first argument will be updated to 1.\n\nFor the transfer function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- When the second argument is not greater than the balance of caller, and the second argument is greater than 0:\n  - When 1 equals to paused:\n    - the balance of caller will be updated to (the balance of caller-the second argument).\n    - When the second argument is 0:\n      - the balance of the first argument will be updated to (the second argument+the balance of the first argument).\n      - When 0 is not greater than totalsupply:\n        - the state variable totalsupply will be updated to totalsupply.\n        - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n          - When totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n          - When totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n    - When the second argument is not 0:\n      - the balance of the first argument will be updated to ((the second argument-((1*the second argument)/100))+the balance of the first argument).\n      - When ((1*the second argument)/100) is not greater than totalsupply:\n        - the state variable totalsupply will be updated to (totalsupply-((1*the second argument)/100)).\n        - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than (totalsupply-((1*the second argument)/100)):\n          - When totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n          - When totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n  - For owner, and 1 does not equal to paused:\n    - the balance of caller will be updated to (the balance of caller-the second argument).\n    - When the second argument is 0:\n      - the balance of the first argument will be updated to (the second argument+the balance of the first argument).\n      - When 0 is not greater than totalsupply:\n        - the state variable totalsupply will be updated to totalsupply.\n        - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n          - When totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n          - When totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n    - When the second argument is not 0:\n      - the balance of the first argument will be updated to ((the second argument-((1*the second argument)/100))+the balance of the first argument).\n      - When ((1*the second argument)/100) is not greater than totalsupply:\n        - the state variable totalsupply will be updated to (totalsupply-((1*the second argument)/100)).\n        - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than (totalsupply-((1*the second argument)/100)):\n          - When totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n          - When totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n\nFor the payWithToken function, it has 2 arguments and the type of each argument is as follows: uint256, address.\n- When the balance of the second argument is not 0, and the first argument is greater than 0, and the first argument is not greater than ((sellingprice*the balance of the second argument)/0xde0b6b3a7640000), and 1 equals to the checkgamelisted of caller:\n  - When 0 is not greater than the balance of the second argument, and the first argument is 0, and 0 is not greater than totalsupply:\n    - the state variable totalsupply will be updated to (totalsupply-0).\n    - the balance of the second argument will be updated to (the balance of the second argument-0).\n    - When ((sellingprice*0)/0xde0b6b3a7640000) is not greater than totalcontractbalance, and 0 is not 0:\n      - the state variable totalcontractbalance will be updated to (totalcontractbalance-((sellingprice*0)/0xde0b6b3a7640000)).\n      - it transfers ether valued ((sellingprice*0)/0xde0b6b3a7640000) to caller.\n      - When 0xde0b6b3a7640000 is smaller than totalsupply, and totalsupply is not 0:\n        - When totalcontractbalance is 0:\n          - the state variable sellingprice will be updated to 0.\n        - When totalcontractbalance is not 0:\n          - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n  - When ((0xde0b6b3a7640000*the first argument)/sellingprice) is not greater than totalsupply, and the first argument is not 0, and ((0xde0b6b3a7640000*the first argument)/sellingprice) is not greater than the balance of the second argument:\n    - the state variable totalsupply will be updated to (totalsupply-((0xde0b6b3a7640000*the first argument)/sellingprice)).\n    - the balance of the second argument will be updated to (the balance of the second argument-((0xde0b6b3a7640000*the first argument)/sellingprice)).\n    - When ((0xde0b6b3a7640000*the first argument)/sellingprice) is 0, and 0 is not greater than totalcontractbalance:\n      - the state variable totalcontractbalance will be updated to totalcontractbalance.\n      - it transfers ether valued 0 to caller.\n      - When 0xde0b6b3a7640000 is smaller than totalsupply, and totalsupply is not 0:\n        - When totalcontractbalance is 0:\n          - the state variable sellingprice will be updated to 0.\n        - When totalcontractbalance is not 0:\n          - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n    - When ((0xde0b6b3a7640000*the first argument)/sellingprice) is not 0, and ((sellingprice*((0xde0b6b3a7640000*the first argument)/sellingprice))/0xde0b6b3a7640000) is not greater than totalcontractbalance:\n      - the state variable totalcontractbalance will be updated to (totalcontractbalance-((sellingprice*((0xde0b6b3a7640000*the first argument)/sellingprice))/0xde0b6b3a7640000)).\n      - it transfers ether valued ((sellingprice*((0xde0b6b3a7640000*the first argument)/sellingprice))/0xde0b6b3a7640000) to caller.\n      - When 0xde0b6b3a7640000 is smaller than totalsupply, and totalsupply is not 0:\n        - When totalcontractbalance is 0:\n          - the state variable sellingprice will be updated to 0.\n        - When totalcontractbalance is not 0:\n          - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n\nFor the sellToken function, it has one argument and its type is uint256.\n- When the balance of caller is greater than 0, and the first argument is not greater than totalsupply, and the first argument is not greater than the balance of caller:\n  - When 1 equals to paused:\n    - the state variable totalsupply will be updated to (totalsupply-the first argument).\n    - the balance of caller will be updated to (the balance of caller-the first argument).\n    - When (0+the balance of owner) is not smaller than the balance of owner:\n      - the balance of owner will be updated to (0+the balance of owner).\n      - When (0+totalsupply) is not smaller than totalsupply:\n        - the state variable totalsupply will be updated to (0+totalsupply).\n        - When the first argument is 0, and 0 is not greater than totalcontractbalance:\n          - the state variable totalcontractbalance will be updated to totalcontractbalance.\n          - it transfers ether valued 0 to caller.\n          - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply, and totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n        - When the first argument is not 0:\n          - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not greater than totalcontractbalance, and ((sellingprice*the first argument)/0xde0b6b3a7640000) is 0:\n            - the state variable totalcontractbalance will be updated to (totalcontractbalance-((sellingprice*the first argument)/0xde0b6b3a7640000)).\n            - it transfers ether valued ((sellingprice*the first argument)/0xde0b6b3a7640000) to caller.\n            - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n              - When totalcontractbalance is 0:\n                - the state variable sellingprice will be updated to 0.\n              - When totalcontractbalance is not 0:\n                - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n          - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0:\n            - When ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) is not greater than totalcontractbalance:\n              - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n              - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n              - When ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n                - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n                - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n                - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n                  - When totalcontractbalance is 0:\n                    - the state variable sellingprice will be updated to 0.\n                  - When totalcontractbalance is not 0:\n                    - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n              - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n                - When totalcontractbalance is 0:\n                  - the state variable sellingprice will be updated to 0.\n                - When totalcontractbalance is not 0:\n                  - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n            - When ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n              - the state variable totalsupply will be updated to (0+totalsupply).\n      - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0, and the first argument is not 0, and ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n        - the balance of owner will be updated to (0+the balance of owner).\n    - When (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+the balance of owner) is not smaller than the balance of owner, and the first argument is not 0, and ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is not 0, and ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0:\n      - the balance of owner will be updated to (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+the balance of owner).\n      - When (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+totalsupply) is not smaller than totalsupply:\n        - the state variable totalsupply will be updated to (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+totalsupply).\n        - When ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) is not greater than totalcontractbalance:\n          - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n          - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n          - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply, and totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n  - When 1 does not equal to paused, and for owner:\n    - the state variable totalsupply will be updated to (totalsupply-the first argument).\n    - the balance of caller will be updated to (the balance of caller-the first argument).\n    - When (0+the balance of owner) is not smaller than the balance of owner:\n      - the balance of owner will be updated to (0+the balance of owner).\n      - When (0+totalsupply) is not smaller than totalsupply:\n        - the state variable totalsupply will be updated to (0+totalsupply).\n        - When the first argument is 0, and 0 is not greater than totalcontractbalance:\n          - the state variable totalcontractbalance will be updated to totalcontractbalance.\n          - it transfers ether valued 0 to caller.\n          - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply, and totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n        - When the first argument is not 0:\n          - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not greater than totalcontractbalance, and ((sellingprice*the first argument)/0xde0b6b3a7640000) is 0:\n            - the state variable totalcontractbalance will be updated to (totalcontractbalance-((sellingprice*the first argument)/0xde0b6b3a7640000)).\n            - it transfers ether valued ((sellingprice*the first argument)/0xde0b6b3a7640000) to caller.\n            - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n              - When totalcontractbalance is 0:\n                - the state variable sellingprice will be updated to 0.\n              - When totalcontractbalance is not 0:\n                - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n          - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0:\n            - When ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) is not greater than totalcontractbalance:\n              - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n              - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n              - When ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n                - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n                - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n                - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n                  - When totalcontractbalance is 0:\n                    - the state variable sellingprice will be updated to 0.\n                  - When totalcontractbalance is not 0:\n                    - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n              - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n                - When totalcontractbalance is 0:\n                  - the state variable sellingprice will be updated to 0.\n                - When totalcontractbalance is not 0:\n                  - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n            - When ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n              - the state variable totalsupply will be updated to (0+totalsupply).\n      - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0, and the first argument is not 0, and ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n        - the balance of owner will be updated to (0+the balance of owner).\n    - When (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+the balance of owner) is not smaller than the balance of owner, and the first argument is not 0, and ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is not 0, and ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0:\n      - the balance of owner will be updated to (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+the balance of owner).\n      - When (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+totalsupply) is not smaller than totalsupply:\n        - the state variable totalsupply will be updated to (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+totalsupply).\n        - When ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) is not greater than totalcontractbalance:\n          - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n          - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n          - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply, and totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following contract descriptions. Some state variables and programming specifications are provided to help you develop. ",
			"role": "system"
		},
		{
			"content": "The following is the description of the contract logic: For the payable constructor function.\n- the state variable paused will be updated to 0.\n- the state variable name will be updated to 0.\n- When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than SHA3(1):\n  - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n    - the state variable decimals2 will be updated to 7.\n    - the state variable decimals will be updated to 7.\n    - the state variable decimals1 will be updated to 3.\n    - the state variable totalinvestor will be updated to 0.\n    - the state variable totaldonation will be updated to 0.\n    - the state variable totalsupply will be updated to 0.\n    - the state variable totalcontractbalance will be updated to 0.\n    - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n    - When the ether just received (i.e., msg.value) is 0:\n      - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n  - the state variable symbol will be updated to 0.\n  - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(2):\n    - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(2)):\n      - the state variable decimals2 will be updated to 7.\n      - the state variable decimals will be updated to 7.\n      - the state variable decimals1 will be updated to 3.\n      - the state variable totalinvestor will be updated to 0.\n      - the state variable totaldonation will be updated to 0.\n      - the state variable totalsupply will be updated to 0.\n      - the state variable totalcontractbalance will be updated to 0.\n      - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n    - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(2)):\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n        - the state variable decimals2 will be updated to 7.\n        - the state variable decimals will be updated to 7.\n        - the state variable decimals1 will be updated to 3.\n        - the state variable totalinvestor will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable totalsupply will be updated to 0.\n        - the state variable totalcontractbalance will be updated to 0.\n        - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(2))):\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n          - the state variable decimals2 will be updated to 7.\n          - the state variable decimals will be updated to 7.\n          - the state variable decimals1 will be updated to 3.\n          - the state variable totalinvestor will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable totalsupply will be updated to 0.\n          - the state variable totalcontractbalance will be updated to 0.\n          - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(2)))):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(2))))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(2))))), and (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(2)))))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n- When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is greater than SHA3(1):\n  - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than (1+SHA3(1)):\n    - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n      - the state variable decimals2 will be updated to 7.\n      - the state variable decimals will be updated to 7.\n      - the state variable decimals1 will be updated to 3.\n      - the state variable totalinvestor will be updated to 0.\n      - the state variable totaldonation will be updated to 0.\n      - the state variable totalsupply will be updated to 0.\n      - the state variable totalcontractbalance will be updated to 0.\n      - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n    - the state variable symbol will be updated to 0.\n    - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(2):\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(2)):\n        - the state variable decimals2 will be updated to 7.\n        - the state variable decimals will be updated to 7.\n        - the state variable decimals1 will be updated to 3.\n        - the state variable totalinvestor will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable totalsupply will be updated to 0.\n        - the state variable totalcontractbalance will be updated to 0.\n        - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(2)):\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n          - the state variable decimals2 will be updated to 7.\n          - the state variable decimals will be updated to 7.\n          - the state variable decimals1 will be updated to 3.\n          - the state variable totalinvestor will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable totalsupply will be updated to 0.\n          - the state variable totalcontractbalance will be updated to 0.\n          - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(2))):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(2))))), and (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(2)))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n  - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is greater than (1+SHA3(1)):\n    - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than (1+(1+SHA3(1))):\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n        - the state variable decimals2 will be updated to 7.\n        - the state variable decimals will be updated to 7.\n        - the state variable decimals1 will be updated to 3.\n        - the state variable totalinvestor will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable totalsupply will be updated to 0.\n        - the state variable totalcontractbalance will be updated to 0.\n        - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n      - the state variable symbol will be updated to 0.\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(2):\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(2)):\n          - the state variable decimals2 will be updated to 7.\n          - the state variable decimals will be updated to 7.\n          - the state variable decimals1 will be updated to 3.\n          - the state variable totalinvestor will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable totalsupply will be updated to 0.\n          - the state variable totalcontractbalance will be updated to 0.\n          - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(2)):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))), and (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(2))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n    - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(1))):\n      - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+SHA3(1)))):\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n          - the state variable decimals2 will be updated to 7.\n          - the state variable decimals will be updated to 7.\n          - the state variable decimals1 will be updated to 3.\n          - the state variable totalinvestor will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable totalsupply will be updated to 0.\n          - the state variable totalcontractbalance will be updated to 0.\n          - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n        - the state variable symbol will be updated to 0.\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(2):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(2)):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(2)), and (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n      - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(1)))):\n        - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(1))))):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - the state variable symbol will be updated to 0.\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(2)), and (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(2):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n        - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(1))))), and (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(1)))))):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - the state variable symbol will be updated to 0.\n\nFor the payable fallback function.\n- When (the ether just received (i.e., msg.value)+totalcontractbalance) is not smaller than totalcontractbalance, and 1 equals to the checkgamelisted of caller:\n  - the state variable totalcontractbalance will be updated to (the ether just received (i.e., msg.value)+totalcontractbalance).\n  - When (the ether just received (i.e., msg.value)+totaldonation) is not smaller than totaldonation:\n    - the state variable totaldonation will be updated to (the ether just received (i.e., msg.value)+totaldonation).\n    - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n      - When totalcontractbalance is 0:\n        - the state variable sellingprice will be updated to 0.\n      - When totalcontractbalance is not 0:\n        - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n\nFor the payable appreciateTokenPrice function.\n- When (the ether just received (i.e., msg.value)+totalcontractbalance) is not smaller than totalcontractbalance, and 1 equals to the checkgamelisted of caller:\n  - the state variable totalcontractbalance will be updated to (the ether just received (i.e., msg.value)+totalcontractbalance).\n  - When (the ether just received (i.e., msg.value)+totaldonation) is not smaller than totaldonation:\n    - the state variable totaldonation will be updated to (the ether just received (i.e., msg.value)+totaldonation).\n    - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n      - When totalcontractbalance is 0:\n        - the state variable sellingprice will be updated to 0.\n      - When totalcontractbalance is not 0:\n        - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n\nFor the removeGame function, it has one argument and its type is address.\n- For owner:\n  - the checkgamelisted of the first argument will be updated to the checkgamelisted of the first argument.\n\nFor the addGame function, it has one argument and its type is address.\n- For owner:\n  - the checkgamelisted of the first argument will be updated to 1.\n\nFor the transfer function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- When the second argument is not greater than the balance of caller, and the second argument is greater than 0:\n  - When 1 equals to paused:\n    - the balance of caller will be updated to (the balance of caller-the second argument).\n    - When the second argument is 0:\n      - the balance of the first argument will be updated to (the second argument+the balance of the first argument).\n      - When 0 is not greater than totalsupply:\n        - the state variable totalsupply will be updated to totalsupply.\n        - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n          - When totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n          - When totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n    - When the second argument is not 0:\n      - the balance of the first argument will be updated to ((the second argument-((1*the second argument)/100))+the balance of the first argument).\n      - When ((1*the second argument)/100) is not greater than totalsupply:\n        - the state variable totalsupply will be updated to (totalsupply-((1*the second argument)/100)).\n        - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than (totalsupply-((1*the second argument)/100)):\n          - When totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n          - When totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n  - For owner, and 1 does not equal to paused:\n    - the balance of caller will be updated to (the balance of caller-the second argument).\n    - When the second argument is 0:\n      - the balance of the first argument will be updated to (the second argument+the balance of the first argument).\n      - When 0 is not greater than totalsupply:\n        - the state variable totalsupply will be updated to totalsupply.\n        - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n          - When totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n          - When totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n    - When the second argument is not 0:\n      - the balance of the first argument will be updated to ((the second argument-((1*the second argument)/100))+the balance of the first argument).\n      - When ((1*the second argument)/100) is not greater than totalsupply:\n        - the state variable totalsupply will be updated to (totalsupply-((1*the second argument)/100)).\n        - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than (totalsupply-((1*the second argument)/100)):\n          - When totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n          - When totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n\nFor the payWithToken function, it has 2 arguments and the type of each argument is as follows: uint256, address.\n- When the balance of the second argument is not 0, and the first argument is greater than 0, and the first argument is not greater than ((sellingprice*the balance of the second argument)/0xde0b6b3a7640000), and 1 equals to the checkgamelisted of caller:\n  - When 0 is not greater than the balance of the second argument, and the first argument is 0, and 0 is not greater than totalsupply:\n    - the state variable totalsupply will be updated to (totalsupply-0).\n    - the balance of the second argument will be updated to (the balance of the second argument-0).\n    - When ((sellingprice*0)/0xde0b6b3a7640000) is not greater than totalcontractbalance, and 0 is not 0:\n      - the state variable totalcontractbalance will be updated to (totalcontractbalance-((sellingprice*0)/0xde0b6b3a7640000)).\n      - it transfers ether valued ((sellingprice*0)/0xde0b6b3a7640000) to caller.\n      - When 0xde0b6b3a7640000 is smaller than totalsupply, and totalsupply is not 0:\n        - When totalcontractbalance is 0:\n          - the state variable sellingprice will be updated to 0.\n        - When totalcontractbalance is not 0:\n          - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n  - When ((0xde0b6b3a7640000*the first argument)/sellingprice) is not greater than totalsupply, and the first argument is not 0, and ((0xde0b6b3a7640000*the first argument)/sellingprice) is not greater than the balance of the second argument:\n    - the state variable totalsupply will be updated to (totalsupply-((0xde0b6b3a7640000*the first argument)/sellingprice)).\n    - the balance of the second argument will be updated to (the balance of the second argument-((0xde0b6b3a7640000*the first argument)/sellingprice)).\n    - When ((0xde0b6b3a7640000*the first argument)/sellingprice) is 0, and 0 is not greater than totalcontractbalance:\n      - the state variable totalcontractbalance will be updated to totalcontractbalance.\n      - it transfers ether valued 0 to caller.\n      - When 0xde0b6b3a7640000 is smaller than totalsupply, and totalsupply is not 0:\n        - When totalcontractbalance is 0:\n          - the state variable sellingprice will be updated to 0.\n        - When totalcontractbalance is not 0:\n          - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n    - When ((0xde0b6b3a7640000*the first argument)/sellingprice) is not 0, and ((sellingprice*((0xde0b6b3a7640000*the first argument)/sellingprice))/0xde0b6b3a7640000) is not greater than totalcontractbalance:\n      - the state variable totalcontractbalance will be updated to (totalcontractbalance-((sellingprice*((0xde0b6b3a7640000*the first argument)/sellingprice))/0xde0b6b3a7640000)).\n      - it transfers ether valued ((sellingprice*((0xde0b6b3a7640000*the first argument)/sellingprice))/0xde0b6b3a7640000) to caller.\n      - When 0xde0b6b3a7640000 is smaller than totalsupply, and totalsupply is not 0:\n        - When totalcontractbalance is 0:\n          - the state variable sellingprice will be updated to 0.\n        - When totalcontractbalance is not 0:\n          - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n\nFor the sellToken function, it has one argument and its type is uint256.\n- When the balance of caller is greater than 0, and the first argument is not greater than totalsupply, and the first argument is not greater than the balance of caller:\n  - When 1 equals to paused:\n    - the state variable totalsupply will be updated to (totalsupply-the first argument).\n    - the balance of caller will be updated to (the balance of caller-the first argument).\n    - When (0+the balance of owner) is not smaller than the balance of owner:\n      - the balance of owner will be updated to (0+the balance of owner).\n      - When (0+totalsupply) is not smaller than totalsupply:\n        - the state variable totalsupply will be updated to (0+totalsupply).\n        - When the first argument is 0, and 0 is not greater than totalcontractbalance:\n          - the state variable totalcontractbalance will be updated to totalcontractbalance.\n          - it transfers ether valued 0 to caller.\n          - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply, and totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n        - When the first argument is not 0:\n          - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not greater than totalcontractbalance, and ((sellingprice*the first argument)/0xde0b6b3a7640000) is 0:\n            - the state variable totalcontractbalance will be updated to (totalcontractbalance-((sellingprice*the first argument)/0xde0b6b3a7640000)).\n            - it transfers ether valued ((sellingprice*the first argument)/0xde0b6b3a7640000) to caller.\n            - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n              - When totalcontractbalance is 0:\n                - the state variable sellingprice will be updated to 0.\n              - When totalcontractbalance is not 0:\n                - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n          - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0:\n            - When ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) is not greater than totalcontractbalance:\n              - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n              - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n              - When ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n                - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n                - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n                - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n                  - When totalcontractbalance is 0:\n                    - the state variable sellingprice will be updated to 0.\n                  - When totalcontractbalance is not 0:\n                    - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n              - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n                - When totalcontractbalance is 0:\n                  - the state variable sellingprice will be updated to 0.\n                - When totalcontractbalance is not 0:\n                  - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n            - When ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n              - the state variable totalsupply will be updated to (0+totalsupply).\n      - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0, and the first argument is not 0, and ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n        - the balance of owner will be updated to (0+the balance of owner).\n    - When (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+the balance of owner) is not smaller than the balance of owner, and the first argument is not 0, and ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is not 0, and ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0:\n      - the balance of owner will be updated to (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+the balance of owner).\n      - When (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+totalsupply) is not smaller than totalsupply:\n        - the state variable totalsupply will be updated to (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+totalsupply).\n        - When ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) is not greater than totalcontractbalance:\n          - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n          - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n          - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply, and totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n  - When 1 does not equal to paused, and for owner:\n    - the state variable totalsupply will be updated to (totalsupply-the first argument).\n    - the balance of caller will be updated to (the balance of caller-the first argument).\n    - When (0+the balance of owner) is not smaller than the balance of owner:\n      - the balance of owner will be updated to (0+the balance of owner).\n      - When (0+totalsupply) is not smaller than totalsupply:\n        - the state variable totalsupply will be updated to (0+totalsupply).\n        - When the first argument is 0, and 0 is not greater than totalcontractbalance:\n          - the state variable totalcontractbalance will be updated to totalcontractbalance.\n          - it transfers ether valued 0 to caller.\n          - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply, and totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n        - When the first argument is not 0:\n          - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not greater than totalcontractbalance, and ((sellingprice*the first argument)/0xde0b6b3a7640000) is 0:\n            - the state variable totalcontractbalance will be updated to (totalcontractbalance-((sellingprice*the first argument)/0xde0b6b3a7640000)).\n            - it transfers ether valued ((sellingprice*the first argument)/0xde0b6b3a7640000) to caller.\n            - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n              - When totalcontractbalance is 0:\n                - the state variable sellingprice will be updated to 0.\n              - When totalcontractbalance is not 0:\n                - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n          - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0:\n            - When ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) is not greater than totalcontractbalance:\n              - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n              - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n              - When ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n                - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n                - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n                - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n                  - When totalcontractbalance is 0:\n                    - the state variable sellingprice will be updated to 0.\n                  - When totalcontractbalance is not 0:\n                    - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n              - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n                - When totalcontractbalance is 0:\n                  - the state variable sellingprice will be updated to 0.\n                - When totalcontractbalance is not 0:\n                  - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n            - When ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n              - the state variable totalsupply will be updated to (0+totalsupply).\n      - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0, and the first argument is not 0, and ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n        - the balance of owner will be updated to (0+the balance of owner).\n    - When (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+the balance of owner) is not smaller than the balance of owner, and the first argument is not 0, and ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is not 0, and ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0:\n      - the balance of owner will be updated to (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+the balance of owner).\n      - When (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+totalsupply) is not smaller than totalsupply:\n        - the state variable totalsupply will be updated to (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+totalsupply).\n        - When ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) is not greater than totalcontractbalance:\n          - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n          - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n          - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply, and totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n\n.\n Here are some state variables with their corresponding types: public state variable `owner` is typed address,private state variable `paused` is typed bool,public state variable `name` is typed string,public state variable `symbol` is typed string,private state variable `decimals1` is typed uint8,private state variable `decimals` is typed uint8,private state variable `decimals2` is typed uint8,public state variable `investedeth` is typed mapping,public state variable `balanceof` is typed mapping,public state variable `totalinvestor` is typed uint256,public state variable `totaldonation` is typed uint256,public state variable `totalsupply` is typed uint256,public state variable `totalcontractbalance` is typed uint256,public state variable `sellingprice` is typed uint256,public state variable `checkgamelisted` is typed mapping.\n Here are some programming specifications: - You must declare a variable before you can use it, but the same variable cannot be declared twice\n- You must lock the pragma and use a stable version (e.g., pragma solidity `0.6.12`).\n- For exteranal calls, you must use `.call()` instead of `.transfer()` and `.send()`.\n- The target address who receives ether must be `payable address` type.\n- You must make the function `payable` if `msg.value` is used in the public functions.\n- From security perspectives, you must check whether an overflow or underflow is possible before an arithmetic operation (e.g., safemath operations), and you should determine whether the user's address is empty before transferring ether to the him.\n- You cannot import external resources because you are a separate contract.\n- You must use the following methods in new versions rather than old methods\n  - For some built-in functions, \n    - `abi.encodePacked(...) returns (bytes memory)` performs packed encoding of arguments to bytes.\n    - `keccak256(bytes memory) returns (bytes32)` computes the Keccak-256 hash of the input.\n    - `sha256(bytes memory) returns (bytes32)` computes the SHA-256 hash of the input.\n    - `ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) returns (address)` recovers the address associated with the public key from elliptic curve signature or return zero on error. \n  - For some properties,\n    - `block.number (uint)` returns the current block number.\n    - `block.timestamp (uint)` returns the current block timestamp as seconds since unix epoch.\n    - `blockhash(uint blockNumber) returns (bytes32)` returns the hash of the given block.\n- `0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff` means `-1`, so `+0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff` indeed means `-1`.\n",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following contract descriptions. Some state variables and programming specifications are provided to help you develop. The following is the description of the contract logic: For the payable constructor function.\n- the state variable paused will be updated to 0.\n- the state variable name will be updated to 0.\n- When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than SHA3(1):\n  - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n    - the state variable decimals2 will be updated to 7.\n    - the state variable decimals will be updated to 7.\n    - the state variable decimals1 will be updated to 3.\n    - the state variable totalinvestor will be updated to 0.\n    - the state variable totaldonation will be updated to 0.\n    - the state variable totalsupply will be updated to 0.\n    - the state variable totalcontractbalance will be updated to 0.\n    - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n    - When the ether just received (i.e., msg.value) is 0:\n      - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n  - the state variable symbol will be updated to 0.\n  - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(2):\n    - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(2)):\n      - the state variable decimals2 will be updated to 7.\n      - the state variable decimals will be updated to 7.\n      - the state variable decimals1 will be updated to 3.\n      - the state variable totalinvestor will be updated to 0.\n      - the state variable totaldonation will be updated to 0.\n      - the state variable totalsupply will be updated to 0.\n      - the state variable totalcontractbalance will be updated to 0.\n      - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n    - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(2)):\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n        - the state variable decimals2 will be updated to 7.\n        - the state variable decimals will be updated to 7.\n        - the state variable decimals1 will be updated to 3.\n        - the state variable totalinvestor will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable totalsupply will be updated to 0.\n        - the state variable totalcontractbalance will be updated to 0.\n        - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(2))):\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n          - the state variable decimals2 will be updated to 7.\n          - the state variable decimals will be updated to 7.\n          - the state variable decimals1 will be updated to 3.\n          - the state variable totalinvestor will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable totalsupply will be updated to 0.\n          - the state variable totalcontractbalance will be updated to 0.\n          - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(2)))):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(2))))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(2))))), and (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(2)))))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n- When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is greater than SHA3(1):\n  - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than (1+SHA3(1)):\n    - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n      - the state variable decimals2 will be updated to 7.\n      - the state variable decimals will be updated to 7.\n      - the state variable decimals1 will be updated to 3.\n      - the state variable totalinvestor will be updated to 0.\n      - the state variable totaldonation will be updated to 0.\n      - the state variable totalsupply will be updated to 0.\n      - the state variable totalcontractbalance will be updated to 0.\n      - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n    - the state variable symbol will be updated to 0.\n    - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(2):\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(2)):\n        - the state variable decimals2 will be updated to 7.\n        - the state variable decimals will be updated to 7.\n        - the state variable decimals1 will be updated to 3.\n        - the state variable totalinvestor will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable totalsupply will be updated to 0.\n        - the state variable totalcontractbalance will be updated to 0.\n        - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(2)):\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n          - the state variable decimals2 will be updated to 7.\n          - the state variable decimals will be updated to 7.\n          - the state variable decimals1 will be updated to 3.\n          - the state variable totalinvestor will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable totalsupply will be updated to 0.\n          - the state variable totalcontractbalance will be updated to 0.\n          - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(2))):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(2))))), and (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(2)))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n  - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is greater than (1+SHA3(1)):\n    - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than (1+(1+SHA3(1))):\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n        - the state variable decimals2 will be updated to 7.\n        - the state variable decimals will be updated to 7.\n        - the state variable decimals1 will be updated to 3.\n        - the state variable totalinvestor will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable totalsupply will be updated to 0.\n        - the state variable totalcontractbalance will be updated to 0.\n        - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n      - the state variable symbol will be updated to 0.\n      - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(2):\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(2)):\n          - the state variable decimals2 will be updated to 7.\n          - the state variable decimals will be updated to 7.\n          - the state variable decimals1 will be updated to 3.\n          - the state variable totalinvestor will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable totalsupply will be updated to 0.\n          - the state variable totalcontractbalance will be updated to 0.\n          - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(2)):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))), and (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(2))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n    - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(1))):\n      - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+SHA3(1)))):\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n          - the state variable decimals2 will be updated to 7.\n          - the state variable decimals will be updated to 7.\n          - the state variable decimals1 will be updated to 3.\n          - the state variable totalinvestor will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable totalsupply will be updated to 0.\n          - the state variable totalcontractbalance will be updated to 0.\n          - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n        - the state variable symbol will be updated to 0.\n        - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(2):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(2)):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(2)), and (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n      - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(1)))):\n        - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(1))))):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - the state variable symbol will be updated to 0.\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(2)), and (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(2):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n        - When (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(1))))), and (SHA3(1)+((31+(((256*name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(1)))))):\n          - When (SHA3(2)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(2):\n            - the state variable decimals2 will be updated to 7.\n            - the state variable decimals will be updated to 7.\n            - the state variable decimals1 will be updated to 3.\n            - the state variable totalinvestor will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable totalsupply will be updated to 0.\n            - the state variable totalcontractbalance will be updated to 0.\n            - the state variable sellingprice will be updated to 0x38d7ea4c68000.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0x72bEe2Cf43f658F3EdF5f4E08bAB03b5F777FA0A.\n          - the state variable symbol will be updated to 0.\n\nFor the payable fallback function.\n- When (the ether just received (i.e., msg.value)+totalcontractbalance) is not smaller than totalcontractbalance, and 1 equals to the checkgamelisted of caller:\n  - the state variable totalcontractbalance will be updated to (the ether just received (i.e., msg.value)+totalcontractbalance).\n  - When (the ether just received (i.e., msg.value)+totaldonation) is not smaller than totaldonation:\n    - the state variable totaldonation will be updated to (the ether just received (i.e., msg.value)+totaldonation).\n    - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n      - When totalcontractbalance is 0:\n        - the state variable sellingprice will be updated to 0.\n      - When totalcontractbalance is not 0:\n        - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n\nFor the payable appreciateTokenPrice function.\n- When (the ether just received (i.e., msg.value)+totalcontractbalance) is not smaller than totalcontractbalance, and 1 equals to the checkgamelisted of caller:\n  - the state variable totalcontractbalance will be updated to (the ether just received (i.e., msg.value)+totalcontractbalance).\n  - When (the ether just received (i.e., msg.value)+totaldonation) is not smaller than totaldonation:\n    - the state variable totaldonation will be updated to (the ether just received (i.e., msg.value)+totaldonation).\n    - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n      - When totalcontractbalance is 0:\n        - the state variable sellingprice will be updated to 0.\n      - When totalcontractbalance is not 0:\n        - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n\nFor the removeGame function, it has one argument and its type is address.\n- For owner:\n  - the checkgamelisted of the first argument will be updated to the checkgamelisted of the first argument.\n\nFor the addGame function, it has one argument and its type is address.\n- For owner:\n  - the checkgamelisted of the first argument will be updated to 1.\n\nFor the transfer function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- When the second argument is not greater than the balance of caller, and the second argument is greater than 0:\n  - When 1 equals to paused:\n    - the balance of caller will be updated to (the balance of caller-the second argument).\n    - When the second argument is 0:\n      - the balance of the first argument will be updated to (the second argument+the balance of the first argument).\n      - When 0 is not greater than totalsupply:\n        - the state variable totalsupply will be updated to totalsupply.\n        - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n          - When totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n          - When totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n    - When the second argument is not 0:\n      - the balance of the first argument will be updated to ((the second argument-((1*the second argument)/100))+the balance of the first argument).\n      - When ((1*the second argument)/100) is not greater than totalsupply:\n        - the state variable totalsupply will be updated to (totalsupply-((1*the second argument)/100)).\n        - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than (totalsupply-((1*the second argument)/100)):\n          - When totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n          - When totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n  - For owner, and 1 does not equal to paused:\n    - the balance of caller will be updated to (the balance of caller-the second argument).\n    - When the second argument is 0:\n      - the balance of the first argument will be updated to (the second argument+the balance of the first argument).\n      - When 0 is not greater than totalsupply:\n        - the state variable totalsupply will be updated to totalsupply.\n        - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n          - When totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n          - When totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n    - When the second argument is not 0:\n      - the balance of the first argument will be updated to ((the second argument-((1*the second argument)/100))+the balance of the first argument).\n      - When ((1*the second argument)/100) is not greater than totalsupply:\n        - the state variable totalsupply will be updated to (totalsupply-((1*the second argument)/100)).\n        - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than (totalsupply-((1*the second argument)/100)):\n          - When totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n          - When totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n\nFor the payWithToken function, it has 2 arguments and the type of each argument is as follows: uint256, address.\n- When the balance of the second argument is not 0, and the first argument is greater than 0, and the first argument is not greater than ((sellingprice*the balance of the second argument)/0xde0b6b3a7640000), and 1 equals to the checkgamelisted of caller:\n  - When 0 is not greater than the balance of the second argument, and the first argument is 0, and 0 is not greater than totalsupply:\n    - the state variable totalsupply will be updated to (totalsupply-0).\n    - the balance of the second argument will be updated to (the balance of the second argument-0).\n    - When ((sellingprice*0)/0xde0b6b3a7640000) is not greater than totalcontractbalance, and 0 is not 0:\n      - the state variable totalcontractbalance will be updated to (totalcontractbalance-((sellingprice*0)/0xde0b6b3a7640000)).\n      - it transfers ether valued ((sellingprice*0)/0xde0b6b3a7640000) to caller.\n      - When 0xde0b6b3a7640000 is smaller than totalsupply, and totalsupply is not 0:\n        - When totalcontractbalance is 0:\n          - the state variable sellingprice will be updated to 0.\n        - When totalcontractbalance is not 0:\n          - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n  - When ((0xde0b6b3a7640000*the first argument)/sellingprice) is not greater than totalsupply, and the first argument is not 0, and ((0xde0b6b3a7640000*the first argument)/sellingprice) is not greater than the balance of the second argument:\n    - the state variable totalsupply will be updated to (totalsupply-((0xde0b6b3a7640000*the first argument)/sellingprice)).\n    - the balance of the second argument will be updated to (the balance of the second argument-((0xde0b6b3a7640000*the first argument)/sellingprice)).\n    - When ((0xde0b6b3a7640000*the first argument)/sellingprice) is 0, and 0 is not greater than totalcontractbalance:\n      - the state variable totalcontractbalance will be updated to totalcontractbalance.\n      - it transfers ether valued 0 to caller.\n      - When 0xde0b6b3a7640000 is smaller than totalsupply, and totalsupply is not 0:\n        - When totalcontractbalance is 0:\n          - the state variable sellingprice will be updated to 0.\n        - When totalcontractbalance is not 0:\n          - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n    - When ((0xde0b6b3a7640000*the first argument)/sellingprice) is not 0, and ((sellingprice*((0xde0b6b3a7640000*the first argument)/sellingprice))/0xde0b6b3a7640000) is not greater than totalcontractbalance:\n      - the state variable totalcontractbalance will be updated to (totalcontractbalance-((sellingprice*((0xde0b6b3a7640000*the first argument)/sellingprice))/0xde0b6b3a7640000)).\n      - it transfers ether valued ((sellingprice*((0xde0b6b3a7640000*the first argument)/sellingprice))/0xde0b6b3a7640000) to caller.\n      - When 0xde0b6b3a7640000 is smaller than totalsupply, and totalsupply is not 0:\n        - When totalcontractbalance is 0:\n          - the state variable sellingprice will be updated to 0.\n        - When totalcontractbalance is not 0:\n          - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n\nFor the sellToken function, it has one argument and its type is uint256.\n- When the balance of caller is greater than 0, and the first argument is not greater than totalsupply, and the first argument is not greater than the balance of caller:\n  - When 1 equals to paused:\n    - the state variable totalsupply will be updated to (totalsupply-the first argument).\n    - the balance of caller will be updated to (the balance of caller-the first argument).\n    - When (0+the balance of owner) is not smaller than the balance of owner:\n      - the balance of owner will be updated to (0+the balance of owner).\n      - When (0+totalsupply) is not smaller than totalsupply:\n        - the state variable totalsupply will be updated to (0+totalsupply).\n        - When the first argument is 0, and 0 is not greater than totalcontractbalance:\n          - the state variable totalcontractbalance will be updated to totalcontractbalance.\n          - it transfers ether valued 0 to caller.\n          - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply, and totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n        - When the first argument is not 0:\n          - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not greater than totalcontractbalance, and ((sellingprice*the first argument)/0xde0b6b3a7640000) is 0:\n            - the state variable totalcontractbalance will be updated to (totalcontractbalance-((sellingprice*the first argument)/0xde0b6b3a7640000)).\n            - it transfers ether valued ((sellingprice*the first argument)/0xde0b6b3a7640000) to caller.\n            - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n              - When totalcontractbalance is 0:\n                - the state variable sellingprice will be updated to 0.\n              - When totalcontractbalance is not 0:\n                - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n          - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0:\n            - When ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) is not greater than totalcontractbalance:\n              - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n              - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n              - When ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n                - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n                - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n                - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n                  - When totalcontractbalance is 0:\n                    - the state variable sellingprice will be updated to 0.\n                  - When totalcontractbalance is not 0:\n                    - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n              - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n                - When totalcontractbalance is 0:\n                  - the state variable sellingprice will be updated to 0.\n                - When totalcontractbalance is not 0:\n                  - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n            - When ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n              - the state variable totalsupply will be updated to (0+totalsupply).\n      - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0, and the first argument is not 0, and ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n        - the balance of owner will be updated to (0+the balance of owner).\n    - When (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+the balance of owner) is not smaller than the balance of owner, and the first argument is not 0, and ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is not 0, and ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0:\n      - the balance of owner will be updated to (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+the balance of owner).\n      - When (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+totalsupply) is not smaller than totalsupply:\n        - the state variable totalsupply will be updated to (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+totalsupply).\n        - When ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) is not greater than totalcontractbalance:\n          - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n          - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n          - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply, and totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n  - When 1 does not equal to paused, and for owner:\n    - the state variable totalsupply will be updated to (totalsupply-the first argument).\n    - the balance of caller will be updated to (the balance of caller-the first argument).\n    - When (0+the balance of owner) is not smaller than the balance of owner:\n      - the balance of owner will be updated to (0+the balance of owner).\n      - When (0+totalsupply) is not smaller than totalsupply:\n        - the state variable totalsupply will be updated to (0+totalsupply).\n        - When the first argument is 0, and 0 is not greater than totalcontractbalance:\n          - the state variable totalcontractbalance will be updated to totalcontractbalance.\n          - it transfers ether valued 0 to caller.\n          - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply, and totalcontractbalance is not 0:\n            - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n        - When the first argument is not 0:\n          - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not greater than totalcontractbalance, and ((sellingprice*the first argument)/0xde0b6b3a7640000) is 0:\n            - the state variable totalcontractbalance will be updated to (totalcontractbalance-((sellingprice*the first argument)/0xde0b6b3a7640000)).\n            - it transfers ether valued ((sellingprice*the first argument)/0xde0b6b3a7640000) to caller.\n            - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n              - When totalcontractbalance is 0:\n                - the state variable sellingprice will be updated to 0.\n              - When totalcontractbalance is not 0:\n                - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n          - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0:\n            - When ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) is not greater than totalcontractbalance:\n              - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n              - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n              - When ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n                - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n                - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n                - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n                  - When totalcontractbalance is 0:\n                    - the state variable sellingprice will be updated to 0.\n                  - When totalcontractbalance is not 0:\n                    - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n              - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply:\n                - When totalcontractbalance is 0:\n                  - the state variable sellingprice will be updated to 0.\n                - When totalcontractbalance is not 0:\n                  - the state variable sellingprice will be updated to ((0xde0b6b3a7640000*totalcontractbalance)/totalsupply).\n            - When ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n              - the state variable totalsupply will be updated to (0+totalsupply).\n      - When ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0, and the first argument is not 0, and ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is 0:\n        - the balance of owner will be updated to (0+the balance of owner).\n    - When (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+the balance of owner) is not smaller than the balance of owner, and the first argument is not 0, and ((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100) is not 0, and (((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100) is not 0, and ((sellingprice*the first argument)/0xde0b6b3a7640000) is not 0:\n      - the balance of owner will be updated to (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+the balance of owner).\n      - When (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+totalsupply) is not smaller than totalsupply:\n        - the state variable totalsupply will be updated to (((0xde0b6b3a7640000*(((100-decimals)*((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))/100))/sellingprice)+totalsupply).\n        - When ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) is not greater than totalcontractbalance:\n          - the state variable totalcontractbalance will be updated to (totalcontractbalance-((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))).\n          - it transfers ether valued ((((sellingprice*the first argument)/0xde0b6b3a7640000)-((decimals*((sellingprice*the first argument)/0xde0b6b3a7640000))/100))-((decimals1*((sellingprice*the first argument)/0xde0b6b3a7640000))/100)) to caller.\n          - When totalsupply is not 0, and 0xde0b6b3a7640000 is smaller than totalsupply, and totalcontractbalance is 0:\n            - the state variable sellingprice will be updated to 0.\n\n.\n Here are some state variables with their corresponding types: public state variable `owner` is typed address,private state variable `paused` is typed bool,public state variable `name` is typed string,public state variable `symbol` is typed string,private state variable `decimals1` is typed uint8,private state variable `decimals` is typed uint8,private state variable `decimals2` is typed uint8,public state variable `investedeth` is typed mapping,public state variable `balanceof` is typed mapping,public state variable `totalinvestor` is typed uint256,public state variable `totaldonation` is typed uint256,public state variable `totalsupply` is typed uint256,public state variable `totalcontractbalance` is typed uint256,public state variable `sellingprice` is typed uint256,public state variable `checkgamelisted` is typed mapping.\n Here are some programming specifications: - You must declare a variable before you can use it, but the same variable cannot be declared twice\n- You must lock the pragma and use a stable version (e.g., pragma solidity `0.6.12`).\n- For exteranal calls, you must use `.call()` instead of `.transfer()` and `.send()`.\n- The target address who receives ether must be `payable address` type.\n- You must make the function `payable` if `msg.value` is used in the public functions.\n- From security perspectives, you must check whether an overflow or underflow is possible before an arithmetic operation (e.g., safemath operations), and you should determine whether the user's address is empty before transferring ether to the him.\n- You cannot import external resources because you are a separate contract.\n- You must use the following methods in new versions rather than old methods\n  - For some built-in functions, \n    - `abi.encodePacked(...) returns (bytes memory)` performs packed encoding of arguments to bytes.\n    - `keccak256(bytes memory) returns (bytes32)` computes the Keccak-256 hash of the input.\n    - `sha256(bytes memory) returns (bytes32)` computes the SHA-256 hash of the input.\n    - `ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) returns (address)` recovers the address associated with the public key from elliptic curve signature or return zero on error. \n  - For some properties,\n    - `block.number (uint)` returns the current block number.\n    - `block.timestamp (uint)` returns the current block timestamp as seconds since unix epoch.\n    - `blockhash(uint blockNumber) returns (bytes32)` returns the hash of the given block.\n- `0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff` means `-1`, so `+0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff` indeed means `-1`.\n",
	"status": "1",
	"time_cost": 47.39354968070984,
	"usage": {
		"completion_tokens": 706,
		"prompt_tokens": 13093,
		"total_tokens": 13799
	}
}