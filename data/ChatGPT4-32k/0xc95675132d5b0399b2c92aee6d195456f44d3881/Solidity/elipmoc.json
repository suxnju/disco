{
	"address": "0xc95675132d5b0399b2c92aee6d195456f44d3881",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Given the provided decompiled code, the corresponding Solidity contract code might look like this:\n\n```solidity\npragma solidity ^0.5.0;\n\ncontract MyContract {\n    mapping (address => uint256) private _isOwner;\n    mapping (address => uint256) private _isOperator;\n    bool private _paused;\n    address private _coreContract;\n    address private _onRemove;\n\n    event Unpause();\n    event Pause();\n\n    modifier onlyOwner() {\n        require(_isOwner[msg.sender] == 1, \"Not owner\");\n        _;\n    }\n\n    modifier onlyOnRemove() {\n        require(msg.sender == _onRemove, \"Not onRemove address\");\n        _;\n    }\n\n    function removeOwner(address user) public onlyOwner {\n        _isOwner[user] = 0;\n    }\n\n    function setup(address newCoreContract, address newOnRemove) public onlyOwner {\n        require(newCoreContract != address(0), \"CoreContract address can't be 0\");\n        _coreContract = newCoreContract;\n        _onRemove = newOnRemove;\n    }\n\n    function isOwner(address user) public view returns (bool) {\n        return _isOwner[user] == 1;\n    }\n\n    function withdraw() public onlyOwner {\n        require(address(this).balance > 0, \"No balance to withdraw\");\n        msg.sender.transfer(address(this).balance);\n    }\n\n    function unpause() public onlyOwner {\n        _paused = false;\n        emit Unpause();\n    }\n\n    function paused() public view returns (bool) {\n        return _paused;\n    }\n\n    function isOperator(address user) public view returns (bool) {\n        return _isOperator[user] == 1;\n    }\n\n    function addOwner(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"Owner address can't be 0\");\n        _isOwner[newOwner] = 1;\n    }\n\n    function pause() public onlyOwner {\n        _paused = true;\n        emit Pause();\n    }\n\n    function isPluginInterface() public pure returns (bool) {\n        return true;\n    }\n\n    function runSigned(uint40, uint256, address) public payable onlyOnRemove {\n        // Implementation here\n    }\n\n    function pluginsContract() public view returns (address) {\n        return _onRemove;\n    }\n\n    function addOperator(address operator) public onlyOwner {\n        require(operator != address(0), \"Operator address can't be 0\");\n        _isOperator[operator] = 1;\n    }\n\n    function run(uint40, uint256, address) public payable {\n        revert(\"Not implemented\");\n    }\n\n    function removeOperator(address operator) public onlyOwner {\n        _isOperator[operator] = 0;\n    }\n\n    function coreContract() public view returns (address) {\n        return _coreContract;\n    }\n\n    function onRemove() public onlyOnRemove {\n        // Implementation here\n    }\n\n    function() external payable {\n        revert(\"Not implemented\");\n    }\n}\n```\n\nPlease note that the decompiled code is a rough translation of EVM bytecode and might contain inaccuracies. Also, for the `runSigned` and `onRemove` functions, I left comments to indicate that some implementation should be filled as it's not clear from the decompiled code what the original functionality was.",
				"role": "assistant"
			}
		}
	],
	"created": 1701461509,
	"id": "chatcmpl-8R49VNZNkZEMQTZxYFfkzWbZWO2jz",
	"input_format": "DecompiledCode",
	"ir": "// Decompiled at www.contract-library.com\n// 2021.08.17 01:38 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) _isOwner; // STORAGE[0x0]\nmapping (uint256 => [uint256]) _isOperator; // STORAGE[0x1]\nuint8 _paused; // STORAGE[0x2] bytes 0 to 0\naddress _coreContract; // STORAGE[0x2] bytes 1 to 20\naddress _onRemove; // STORAGE[0x3] bytes 0 to 19\n\n// Events\nUnpause();\nPause();\n\nfunction removeOwner(address varg0) public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    _isOwner[varg0] = ~0xff & _isOwner[varg0];\n}\n\nfunction setup(address varg0, address varg1) public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    require(varg0.code.size);\n    v0, v1 = varg0.isCutieCore().gas(msg.gas);\n    require(v0); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    require(v1);\n    _coreContract = varg0;\n    _onRemove = varg1;\n}\n\nfunction isOwner(address varg0) public nonPayable { \n    return 0xff & _isOwner[varg0];\n}\n\nfunction withdraw() public nonPayable { \n    v0 = 0xff & _isOwner[msg.sender];\n    if (!v0) {\n        v0 = v1 = msg.sender == _coreContract;\n    }\n    require(v0);\n    0x712();\n}\n\nfunction unpause() public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    require(_paused);\n    _paused = 0;\n    emit Unpause();\n}\n\nfunction paused() public nonPayable { \n    return _paused;\n}\n\nfunction isOperator(address varg0) public nonPayable { \n    v0 = v1 = 0xff & _isOperator[varg0];\n    if (!v1) {\n        v0 = 0xff & _isOwner[varg0];\n    }\n    return v0;\n}\n\nfunction addOwner(address varg0) public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    require(varg0);\n    _isOwner[varg0] = 0x1 | ~0xff & _isOwner[varg0];\n}\n\nfunction pause() public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    require(!_paused);\n    _paused = 1;\n    emit Pause();\n}\n\nfunction isPluginInterface() public nonPayable { \n    return 1;\n}\n\nfunction runSigned(uint40 varg0, uint256 varg1, address varg2) public payable { \n    require(msg.sender == _onRemove);\n}\n\nfunction pluginsContract() public nonPayable { \n    return _onRemove;\n}\n\nfunction addOperator(address varg0) public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    require(varg0);\n    _isOperator[varg0] = 0x1 | ~0xff & _isOperator[varg0];\n}\n\nfunction run(uint40 varg0, uint256 varg1, address varg2) public payable { \n    revert();\n}\n\nfunction removeOperator(address varg0) public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    _isOperator[varg0] = ~0xff & _isOperator[varg0];\n}\n\nfunction coreContract() public nonPayable { \n    return _coreContract;\n}\n\nfunction 0x712() private { \n    if (this.balance <= 0) {\n        return ;\n    } else {\n        v0 = _coreContract.call().value(this.balance).gas(2300 * !this.balance);\n        require(v0); // checks call status, propagates error data on error\n        return ;\n    }\n}\n\nfunction fallback() public payable { \n    revert();\n}\n\nfunction onRemove() public nonPayable { \n    require(msg.sender == _onRemove);\n    0x712();\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (function_selector == 0x11952369) {\n            onRemove();\n        } else if (0x173825d9 == function_selector) {\n            removeOwner(address);\n        } else if (0x2d34ba79 == function_selector) {\n            setup(address,address);\n        } else if (0x2f54bf6e == function_selector) {\n            isOwner(address);\n        } else if (0x3ccfd60b == function_selector) {\n            withdraw();\n        } else if (0x3f4ba83a == function_selector) {\n            unpause();\n        } else if (0x5c975abb == function_selector) {\n            paused();\n        } else if (0x6d70f7ae == function_selector) {\n            isOperator(address);\n        } else if (0x7065cb48 == function_selector) {\n            addOwner(address);\n        } else if (0x8456cb59 == function_selector) {\n            pause();\n        } else if (0x94a89233 == function_selector) {\n            isPluginInterface();\n        } else if (0x9652713e == function_selector) {\n            runSigned(uint40,uint256,address);\n        } else if (0x976ef75b == function_selector) {\n            pluginsContract();\n        } else if (0x9870d7fe == function_selector) {\n            addOperator(address);\n        } else if (0xa055d455 == function_selector) {\n            run(uint40,uint256,address);\n        } else if (0xac8a584a == function_selector) {\n            removeOperator(address);\n        } else if (0xe80db5db == function_selector) {\n            coreContract();\n        }\n    }\n    fallback();\n}\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.17 01:38 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) _isOwner; // STORAGE[0x0]\nmapping (uint256 => [uint256]) _isOperator; // STORAGE[0x1]\nuint8 _paused; // STORAGE[0x2] bytes 0 to 0\naddress _coreContract; // STORAGE[0x2] bytes 1 to 20\naddress _onRemove; // STORAGE[0x3] bytes 0 to 19\n\n// Events\nUnpause();\nPause();\n\nfunction removeOwner(address varg0) public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    _isOwner[varg0] = ~0xff & _isOwner[varg0];\n}\n\nfunction setup(address varg0, address varg1) public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    require(varg0.code.size);\n    v0, v1 = varg0.isCutieCore().gas(msg.gas);\n    require(v0); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    require(v1);\n    _coreContract = varg0;\n    _onRemove = varg1;\n}\n\nfunction isOwner(address varg0) public nonPayable { \n    return 0xff & _isOwner[varg0];\n}\n\nfunction withdraw() public nonPayable { \n    v0 = 0xff & _isOwner[msg.sender];\n    if (!v0) {\n        v0 = v1 = msg.sender == _coreContract;\n    }\n    require(v0);\n    0x712();\n}\n\nfunction unpause() public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    require(_paused);\n    _paused = 0;\n    emit Unpause();\n}\n\nfunction paused() public nonPayable { \n    return _paused;\n}\n\nfunction isOperator(address varg0) public nonPayable { \n    v0 = v1 = 0xff & _isOperator[varg0];\n    if (!v1) {\n        v0 = 0xff & _isOwner[varg0];\n    }\n    return v0;\n}\n\nfunction addOwner(address varg0) public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    require(varg0);\n    _isOwner[varg0] = 0x1 | ~0xff & _isOwner[varg0];\n}\n\nfunction pause() public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    require(!_paused);\n    _paused = 1;\n    emit Pause();\n}\n\nfunction isPluginInterface() public nonPayable { \n    return 1;\n}\n\nfunction runSigned(uint40 varg0, uint256 varg1, address varg2) public payable { \n    require(msg.sender == _onRemove);\n}\n\nfunction pluginsContract() public nonPayable { \n    return _onRemove;\n}\n\nfunction addOperator(address varg0) public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    require(varg0);\n    _isOperator[varg0] = 0x1 | ~0xff & _isOperator[varg0];\n}\n\nfunction run(uint40 varg0, uint256 varg1, address varg2) public payable { \n    revert();\n}\n\nfunction removeOperator(address varg0) public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    _isOperator[varg0] = ~0xff & _isOperator[varg0];\n}\n\nfunction coreContract() public nonPayable { \n    return _coreContract;\n}\n\nfunction 0x712() private { \n    if (this.balance <= 0) {\n        return ;\n    } else {\n        v0 = _coreContract.call().value(this.balance).gas(2300 * !this.balance);\n        require(v0); // checks call status, propagates error data on error\n        return ;\n    }\n}\n\nfunction fallback() public payable { \n    revert();\n}\n\nfunction onRemove() public nonPayable { \n    require(msg.sender == _onRemove);\n    0x712();\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (function_selector == 0x11952369) {\n            onRemove();\n        } else if (0x173825d9 == function_selector) {\n            removeOwner(address);\n        } else if (0x2d34ba79 == function_selector) {\n            setup(address,address);\n        } else if (0x2f54bf6e == function_selector) {\n            isOwner(address);\n        } else if (0x3ccfd60b == function_selector) {\n            withdraw();\n        } else if (0x3f4ba83a == function_selector) {\n            unpause();\n        } else if (0x5c975abb == function_selector) {\n            paused();\n        } else if (0x6d70f7ae == function_selector) {\n            isOperator(address);\n        } else if (0x7065cb48 == function_selector) {\n            addOwner(address);\n        } else if (0x8456cb59 == function_selector) {\n            pause();\n        } else if (0x94a89233 == function_selector) {\n            isPluginInterface();\n        } else if (0x9652713e == function_selector) {\n            runSigned(uint40,uint256,address);\n        } else if (0x976ef75b == function_selector) {\n            pluginsContract();\n        } else if (0x9870d7fe == function_selector) {\n            addOperator(address);\n        } else if (0xa055d455 == function_selector) {\n            run(uint40,uint256,address);\n        } else if (0xac8a584a == function_selector) {\n            removeOperator(address);\n        } else if (0xe80db5db == function_selector) {\n            coreContract();\n        }\n    }\n    fallback();\n}\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.17 01:38 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) _isOwner; // STORAGE[0x0]\nmapping (uint256 => [uint256]) _isOperator; // STORAGE[0x1]\nuint8 _paused; // STORAGE[0x2] bytes 0 to 0\naddress _coreContract; // STORAGE[0x2] bytes 1 to 20\naddress _onRemove; // STORAGE[0x3] bytes 0 to 19\n\n// Events\nUnpause();\nPause();\n\nfunction removeOwner(address varg0) public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    _isOwner[varg0] = ~0xff & _isOwner[varg0];\n}\n\nfunction setup(address varg0, address varg1) public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    require(varg0.code.size);\n    v0, v1 = varg0.isCutieCore().gas(msg.gas);\n    require(v0); // checks call status, propagates error data on error\n    require(RETURNDATASIZE() >= 32);\n    require(v1);\n    _coreContract = varg0;\n    _onRemove = varg1;\n}\n\nfunction isOwner(address varg0) public nonPayable { \n    return 0xff & _isOwner[varg0];\n}\n\nfunction withdraw() public nonPayable { \n    v0 = 0xff & _isOwner[msg.sender];\n    if (!v0) {\n        v0 = v1 = msg.sender == _coreContract;\n    }\n    require(v0);\n    0x712();\n}\n\nfunction unpause() public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    require(_paused);\n    _paused = 0;\n    emit Unpause();\n}\n\nfunction paused() public nonPayable { \n    return _paused;\n}\n\nfunction isOperator(address varg0) public nonPayable { \n    v0 = v1 = 0xff & _isOperator[varg0];\n    if (!v1) {\n        v0 = 0xff & _isOwner[varg0];\n    }\n    return v0;\n}\n\nfunction addOwner(address varg0) public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    require(varg0);\n    _isOwner[varg0] = 0x1 | ~0xff & _isOwner[varg0];\n}\n\nfunction pause() public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    require(!_paused);\n    _paused = 1;\n    emit Pause();\n}\n\nfunction isPluginInterface() public nonPayable { \n    return 1;\n}\n\nfunction runSigned(uint40 varg0, uint256 varg1, address varg2) public payable { \n    require(msg.sender == _onRemove);\n}\n\nfunction pluginsContract() public nonPayable { \n    return _onRemove;\n}\n\nfunction addOperator(address varg0) public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    require(varg0);\n    _isOperator[varg0] = 0x1 | ~0xff & _isOperator[varg0];\n}\n\nfunction run(uint40 varg0, uint256 varg1, address varg2) public payable { \n    revert();\n}\n\nfunction removeOperator(address varg0) public nonPayable { \n    require(0xff & _isOwner[msg.sender]);\n    _isOperator[varg0] = ~0xff & _isOperator[varg0];\n}\n\nfunction coreContract() public nonPayable { \n    return _coreContract;\n}\n\nfunction 0x712() private { \n    if (this.balance <= 0) {\n        return ;\n    } else {\n        v0 = _coreContract.call().value(this.balance).gas(2300 * !this.balance);\n        require(v0); // checks call status, propagates error data on error\n        return ;\n    }\n}\n\nfunction fallback() public payable { \n    revert();\n}\n\nfunction onRemove() public nonPayable { \n    require(msg.sender == _onRemove);\n    0x712();\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (function_selector == 0x11952369) {\n            onRemove();\n        } else if (0x173825d9 == function_selector) {\n            removeOwner(address);\n        } else if (0x2d34ba79 == function_selector) {\n            setup(address,address);\n        } else if (0x2f54bf6e == function_selector) {\n            isOwner(address);\n        } else if (0x3ccfd60b == function_selector) {\n            withdraw();\n        } else if (0x3f4ba83a == function_selector) {\n            unpause();\n        } else if (0x5c975abb == function_selector) {\n            paused();\n        } else if (0x6d70f7ae == function_selector) {\n            isOperator(address);\n        } else if (0x7065cb48 == function_selector) {\n            addOwner(address);\n        } else if (0x8456cb59 == function_selector) {\n            pause();\n        } else if (0x94a89233 == function_selector) {\n            isPluginInterface();\n        } else if (0x9652713e == function_selector) {\n            runSigned(uint40,uint256,address);\n        } else if (0x976ef75b == function_selector) {\n            pluginsContract();\n        } else if (0x9870d7fe == function_selector) {\n            addOperator(address);\n        } else if (0xa055d455 == function_selector) {\n            run(uint40,uint256,address);\n        } else if (0xac8a584a == function_selector) {\n            removeOperator(address);\n        } else if (0xe80db5db == function_selector) {\n            coreContract();\n        }\n    }\n    fallback();\n}\n.",
	"status": "1",
	"time_cost": 36.94880414009094,
	"usage": {
		"completion_tokens": 684,
		"prompt_tokens": 1407,
		"total_tokens": 2091
	}
}