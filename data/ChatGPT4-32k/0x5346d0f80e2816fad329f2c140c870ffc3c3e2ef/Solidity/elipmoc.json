{
	"address": "0x5346d0f80e2816fad329f2c140c870ffc3c3e2ef",
	"choices": {
		"finish_reason": "stop",
		"index": 0,
		"logprobs": null,
		"message": {
			"content": "Here is the Solidity version of the provided decompiled code:\n\n```solidity\npragma solidity ^0.5.16;\n\ncontract MyContract {\n    address private _authority;\n    address private _owner;\n    address private _resolver;\n\n    event LogSetOwner(address indexed owner);\n    event LogSetAuthority(address indexed authority);\n\n    function resolver() public view returns (address) {\n        return _resolver;\n    }\n\n    function setOwner(address newOwner) public {\n        require(msg.sender == _owner, \"ds-auth-unauthorized\");\n        _owner = newOwner;\n        emit LogSetOwner(newOwner);\n    }\n\n    function setResolver(address newResolver) public {\n        require(msg.sender == _owner, \"ds-auth-unauthorized\");\n        _resolver = newResolver;\n    }\n\n    function setAuthority(address newAuthority) public {\n        require(msg.sender == _owner, \"ds-auth-unauthorized\");\n        _authority = newAuthority;\n        emit LogSetAuthority(newAuthority);\n    }\n\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    function authority() public view returns (address) {\n        return _authority;\n    }\n}\n```\nPlease note that the '_authority' and '_resolver' contract's methods (like 'canCall' and 'lookup') were not represented in the decompiled code because the actual implementations of those methods would depend on the specific contract's logic. The same applies for the 'delegatecall' method in the fallback function. Also, the '0x43c' function was not included because it seems to be a low-level function that interacts with the EVM directly and is not typically written in Solidity.",
			"function_call": null,
			"role": "assistant",
			"tool_calls": null
		}
	},
	"created": 1711533255,
	"id": "chatcmpl-97KH1YNUY8YKdfh4mP7mkfTFnGtN0",
	"input_format": "DecompiledCode",
	"ir": "// Decompiled by library.dedaub.com\n// 2022.11.16 16:25 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _authority; // STORAGE[0x0] bytes 0 to 19\nuint256 _owner; // STORAGE[0x1] bytes 0 to 19\nuint256 _resolver; // STORAGE[0x2] bytes 0 to 19\n\n// Events\nLogSetOwner(address);\nLogSetAuthority(address);\n\nfunction resolver() public nonPayable { \n    return _resolver;\n}\n\nfunction setOwner(bytes4 function_selector, uint256 varg1) public nonPayable { \n    require(msg.data.length - 4 >= 32);\n    v0 = 0x43c(~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff & function_selector, msg.sender);\n    require(v0, Error('ds-auth-unauthorized'));\n    _owner = address(varg1);\n    emit LogSetOwner(_owner);\n}\n\nfunction setResolver(bytes4 function_selector, uint256 varg1) public nonPayable { \n    require(msg.data.length - 4 >= 32);\n    v0 = 0x43c(~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff & function_selector, msg.sender);\n    require(v0, Error('ds-auth-unauthorized'));\n    _resolver = address(varg1);\n}\n\nfunction setAuthority(bytes4 function_selector, uint256 varg1) public nonPayable { \n    require(msg.data.length - 4 >= 32);\n    v0 = 0x43c(~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff & function_selector, msg.sender);\n    require(v0, Error('ds-auth-unauthorized'));\n    _authority = address(varg1);\n    emit LogSetAuthority(_authority);\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction authority() public nonPayable { \n    return _authority;\n}\n\nfunction 0x43c(uint256 varg0, uint256 varg1) private { \n    if (this != address(varg1)) {\n        if (_owner != address(varg1)) {\n            if (_authority) {\n                v0 = address(varg1);\n                v1 = varg0 & ~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n                require(_authority.code.size);\n                v2, v3 = _authority.canCall(v0, this, v1).gas(msg.gas);\n                require(v2); // checks call status, propagates error data on error\n                require(RETURNDATASIZE() >= 32);\n            } else {\n                v3 = v4 = 0;\n            }\n        } else {\n            v3 = v5 = 1;\n        }\n    } else {\n        v3 = v6 = 1;\n    }\n    return v3;\n}\n\nfunction ( function_selector) public payable { \n    if (function_selector & ~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n        require(_resolver.code.size);\n        v0, v1 = _resolver.lookup(~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff & function_selector).gas(msg.gas);\n        require(v0); // checks call status, propagates error data on error\n        require(RETURNDATASIZE() >= 32);\n        require(v1.code.size);\n        v2, v3 = v1.delegatecall(MEM[(MEM[64]) len msg.data.length], MEM[(MEM[64]) len 0]).gas(msg.gas);\n        require(v2 == 1MEM[64], RETURNDATASIZE());\n        return MEM[(MEM[64]) len (RETURNDATASIZE())];\n    } else {\n        exit;\n    }\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(bytes4 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (0x4f3bcec == function_selector >> 224) {\n            resolver();\n        } else if (0x13af4035 == function_selector >> 224) {\n            setOwner(address);\n        } else if (0x4e543b26 == function_selector >> 224) {\n            setResolver(address);\n        } else if (0x7a9e5e4b == function_selector >> 224) {\n            setAuthority(address);\n        } else if (0x8da5cb5b == function_selector >> 224) {\n            owner();\n        } else if (0xbf7e214f == function_selector >> 224) {\n            authority();\n        }\n    }\n    ();\n}\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: // Decompiled by library.dedaub.com\n// 2022.11.16 16:25 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _authority; // STORAGE[0x0] bytes 0 to 19\nuint256 _owner; // STORAGE[0x1] bytes 0 to 19\nuint256 _resolver; // STORAGE[0x2] bytes 0 to 19\n\n// Events\nLogSetOwner(address);\nLogSetAuthority(address);\n\nfunction resolver() public nonPayable { \n    return _resolver;\n}\n\nfunction setOwner(bytes4 function_selector, uint256 varg1) public nonPayable { \n    require(msg.data.length - 4 >= 32);\n    v0 = 0x43c(~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff & function_selector, msg.sender);\n    require(v0, Error('ds-auth-unauthorized'));\n    _owner = address(varg1);\n    emit LogSetOwner(_owner);\n}\n\nfunction setResolver(bytes4 function_selector, uint256 varg1) public nonPayable { \n    require(msg.data.length - 4 >= 32);\n    v0 = 0x43c(~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff & function_selector, msg.sender);\n    require(v0, Error('ds-auth-unauthorized'));\n    _resolver = address(varg1);\n}\n\nfunction setAuthority(bytes4 function_selector, uint256 varg1) public nonPayable { \n    require(msg.data.length - 4 >= 32);\n    v0 = 0x43c(~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff & function_selector, msg.sender);\n    require(v0, Error('ds-auth-unauthorized'));\n    _authority = address(varg1);\n    emit LogSetAuthority(_authority);\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction authority() public nonPayable { \n    return _authority;\n}\n\nfunction 0x43c(uint256 varg0, uint256 varg1) private { \n    if (this != address(varg1)) {\n        if (_owner != address(varg1)) {\n            if (_authority) {\n                v0 = address(varg1);\n                v1 = varg0 & ~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n                require(_authority.code.size);\n                v2, v3 = _authority.canCall(v0, this, v1).gas(msg.gas);\n                require(v2); // checks call status, propagates error data on error\n                require(RETURNDATASIZE() >= 32);\n            } else {\n                v3 = v4 = 0;\n            }\n        } else {\n            v3 = v5 = 1;\n        }\n    } else {\n        v3 = v6 = 1;\n    }\n    return v3;\n}\n\nfunction ( function_selector) public payable { \n    if (function_selector & ~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n        require(_resolver.code.size);\n        v0, v1 = _resolver.lookup(~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff & function_selector).gas(msg.gas);\n        require(v0); // checks call status, propagates error data on error\n        require(RETURNDATASIZE() >= 32);\n        require(v1.code.size);\n        v2, v3 = v1.delegatecall(MEM[(MEM[64]) len msg.data.length], MEM[(MEM[64]) len 0]).gas(msg.gas);\n        require(v2 == 1MEM[64], RETURNDATASIZE());\n        return MEM[(MEM[64]) len (RETURNDATASIZE())];\n    } else {\n        exit;\n    }\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(bytes4 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (0x4f3bcec == function_selector >> 224) {\n            resolver();\n        } else if (0x13af4035 == function_selector >> 224) {\n            setOwner(address);\n        } else if (0x4e543b26 == function_selector >> 224) {\n            setResolver(address);\n        } else if (0x7a9e5e4b == function_selector >> 224) {\n            setAuthority(address);\n        } else if (0x8da5cb5b == function_selector >> 224) {\n            owner();\n        } else if (0xbf7e214f == function_selector >> 224) {\n            authority();\n        }\n    }\n    ();\n}\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: // Decompiled by library.dedaub.com\n// 2022.11.16 16:25 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _authority; // STORAGE[0x0] bytes 0 to 19\nuint256 _owner; // STORAGE[0x1] bytes 0 to 19\nuint256 _resolver; // STORAGE[0x2] bytes 0 to 19\n\n// Events\nLogSetOwner(address);\nLogSetAuthority(address);\n\nfunction resolver() public nonPayable { \n    return _resolver;\n}\n\nfunction setOwner(bytes4 function_selector, uint256 varg1) public nonPayable { \n    require(msg.data.length - 4 >= 32);\n    v0 = 0x43c(~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff & function_selector, msg.sender);\n    require(v0, Error('ds-auth-unauthorized'));\n    _owner = address(varg1);\n    emit LogSetOwner(_owner);\n}\n\nfunction setResolver(bytes4 function_selector, uint256 varg1) public nonPayable { \n    require(msg.data.length - 4 >= 32);\n    v0 = 0x43c(~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff & function_selector, msg.sender);\n    require(v0, Error('ds-auth-unauthorized'));\n    _resolver = address(varg1);\n}\n\nfunction setAuthority(bytes4 function_selector, uint256 varg1) public nonPayable { \n    require(msg.data.length - 4 >= 32);\n    v0 = 0x43c(~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff & function_selector, msg.sender);\n    require(v0, Error('ds-auth-unauthorized'));\n    _authority = address(varg1);\n    emit LogSetAuthority(_authority);\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction authority() public nonPayable { \n    return _authority;\n}\n\nfunction 0x43c(uint256 varg0, uint256 varg1) private { \n    if (this != address(varg1)) {\n        if (_owner != address(varg1)) {\n            if (_authority) {\n                v0 = address(varg1);\n                v1 = varg0 & ~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n                require(_authority.code.size);\n                v2, v3 = _authority.canCall(v0, this, v1).gas(msg.gas);\n                require(v2); // checks call status, propagates error data on error\n                require(RETURNDATASIZE() >= 32);\n            } else {\n                v3 = v4 = 0;\n            }\n        } else {\n            v3 = v5 = 1;\n        }\n    } else {\n        v3 = v6 = 1;\n    }\n    return v3;\n}\n\nfunction ( function_selector) public payable { \n    if (function_selector & ~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n        require(_resolver.code.size);\n        v0, v1 = _resolver.lookup(~0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff & function_selector).gas(msg.gas);\n        require(v0); // checks call status, propagates error data on error\n        require(RETURNDATASIZE() >= 32);\n        require(v1.code.size);\n        v2, v3 = v1.delegatecall(MEM[(MEM[64]) len msg.data.length], MEM[(MEM[64]) len 0]).gas(msg.gas);\n        require(v2 == 1MEM[64], RETURNDATASIZE());\n        return MEM[(MEM[64]) len (RETURNDATASIZE())];\n    } else {\n        exit;\n    }\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(bytes4 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (0x4f3bcec == function_selector >> 224) {\n            resolver();\n        } else if (0x13af4035 == function_selector >> 224) {\n            setOwner(address);\n        } else if (0x4e543b26 == function_selector >> 224) {\n            setResolver(address);\n        } else if (0x7a9e5e4b == function_selector >> 224) {\n            setAuthority(address);\n        } else if (0x8da5cb5b == function_selector >> 224) {\n            owner();\n        } else if (0xbf7e214f == function_selector >> 224) {\n            authority();\n        }\n    }\n    ();\n}\n.",
	"status": "1",
	"time_cost": 151.33001446723938,
	"usage": {
		"completion_tokens": 339,
		"prompt_tokens": 1045,
		"total_tokens": 1384
	}
}