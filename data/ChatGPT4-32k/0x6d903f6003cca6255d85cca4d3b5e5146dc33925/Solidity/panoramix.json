{
	"address": "0x6d903f6003cca6255d85cca4d3b5e5146dc33925",
	"input_format": "DecompiledCode",
	"ir": "# Palkeoramix decompiler. \n\nconst MAXIMUM_DELAY = (720 * 24 * 3600)\nconst MINIMUM_DELAY = (48 * 24 * 3600)\nconst GRACE_PERIOD = (336 * 24 * 3600)\n\ndef storage:\n  adminAddress is address at storage 0\n  pendingAdminAddress is address at storage 1\n  delay is uint256 at storage 2\n  stor3 is mapping of uint8 at storage 3\n\ndef pendingAdmin(): # not payable\n  return pendingAdminAddress\n\ndef delay(): # not payable\n  return delay\n\ndef queuedTransactions(bytes32 _param1): # not payable\n  require calldata.size - 4 >= 32\n  return bool(stor3[_param1])\n\ndef admin(): # not payable\n  return adminAddress\n\n#\n#  Regular functions\n#\n\ndef _fallback(?) payable: # default function\n  stop\n\ndef acceptAdmin(): # not payable\n  if pendingAdminAddress != caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  56,\n                  0x2e54696d656c6f636b3a3a61636365707441646d696e3a2043616c6c206d75737420636f6d652066726f6d2070656e64696e6741646d696e,\n                  mem[220 len 8]\n  adminAddress = caller\n  pendingAdminAddress = 0\n  log NewAdmin(address newAdmin=caller)\n\ndef setPendingAdmin(address pendingAdmin_): # not payable\n  require calldata.size - 4 >= 32\n  if caller != this.address:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  56,\n                  0x2e54696d656c6f636b3a3a73657450656e64696e6741646d696e3a2043616c6c206d75737420636f6d652066726f6d2054696d656c6f636b,\n                  mem[220 len 8]\n  pendingAdminAddress = pendingAdmin_\n  log NewPendingAdmin(address newPendingAdmin=pendingAdmin_)\n\ndef setDelay(uint256 delay_): # not payable\n  require calldata.size - 4 >= 32\n  if caller != this.address:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  49,\n                  0x2e54696d656c6f636b3a3a73657444656c61793a2043616c6c206d75737420636f6d652066726f6d2054696d656c6f636b,\n                  mem[213 len 15]\n  if delay_ < 48 * 24 * 3600:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  52,\n                  0x2e54696d656c6f636b3a3a73657444656c61793a2044656c6179206d75737420657863656564206d696e696d756d2064656c6179,\n                  mem[216 len 12]\n  if delay_ > 720 * 24 * 3600:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  56,\n                  0x2e54696d656c6f636b3a3a73657444656c61793a2044656c6179206d757374206e6f7420657863656564206d6178696d756d2064656c6179,\n                  mem[220 len 8]\n  delay = delay_\n  log NewDelay(uint256 newDelay=delay_)\n\ndef queueTransaction(address target, uint256 value, string signature, bytes data, uint256 eta): # not payable\n  require calldata.size - 4 >= 160\n  require signature <= unknown10000000()\n  require signature + 36 <= calldata.size\n  require signature.length <= unknown10000000() and signature + signature.length + 36 <= calldata.size\n  mem[128 len signature.length] = signature[all]\n  mem[signature.length + 128] = 0\n  require data <= unknown10000000()\n  require data + 36 <= calldata.size\n  require data.length <= unknown10000000() and data + data.length + 36 <= calldata.size\n  mem[64] = ceil32(signature.length) + ceil32(data.length) + 160\n  mem[ceil32(signature.length) + 128] = data.length\n  mem[ceil32(signature.length) + 160 len data.length] = data[all]\n  mem[ceil32(signature.length) + data.length + 160] = 0\n  if adminAddress != caller:\n      revert with 0, \n                  32,\n                  54,\n                  0x2e54696d656c6f636b3a3a71756575655472616e73616374696f6e3a2043616c6c206d75737420636f6d652066726f6d2061646d696e,\n                  mem[ceil32(signature.length) + ceil32(data.length) + 282 len 10]\n  if delay + block.timestamp < block.timestamp:\n      revert with 0, 'SafeMath: addition overflow'\n  if eta < delay + block.timestamp:\n      revert with 0, \n                  32,\n                  73,\n                  0x2e54696d656c6f636b3a3a71756575655472616e73616374696f6e3a20457374696d6174656420657865637574696f6e20626c6f636b206d75737420736174697366792064656c6179,\n                  mem[ceil32(signature.length) + ceil32(data.length) + 301 len 23]\n  mem[ceil32(signature.length) + ceil32(data.length) + 192] = target\n  mem[ceil32(signature.length) + ceil32(data.length) + 224] = value\n  mem[ceil32(signature.length) + ceil32(data.length) + 320] = eta\n  mem[ceil32(signature.length) + ceil32(data.length) + 256] = 160\n  mem[ceil32(signature.length) + ceil32(data.length) + 352] = signature.length\n  mem[ceil32(signature.length) + ceil32(data.length) + 384 len ceil32(signature.length)] = signature[all], mem[signature.length + 128 len ceil32(signature.length) - signature.length]\n  if not signature.length % 32:\n      mem[ceil32(signature.length) + ceil32(data.length) + 288] = signature.length + 192\n      mem[signature.length + ceil32(signature.length) + ceil32(data.length) + 384] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n      _140 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n      mem[signature.length + ceil32(signature.length) + ceil32(data.length) + 416 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n      if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n          mem[ceil32(signature.length) + ceil32(data.length) + 160] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + 224\n          mem[64] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416\n          _268 = sha3(mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]])\n          stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]] = 1\n          _270 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416] = value\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 512] = eta\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 448] = 128\n          mem[_270 + 128] = signature.length\n          mem[_270 + 160 len ceil32(signature.length)] = signature[all], mem[signature.length + 128 len ceil32(signature.length) - signature.length]\n          if not signature.length % 32:\n              mem[_270 + 64] = signature.length + 160\n              mem[signature.length + _270 + 160] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n              mem[signature.length + _270 + 192 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n              if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n                  log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                       mem[_140 + signature.length + ceil32(signature.length) + ceil32(data.length) + 416 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + _270 + -_140 + -ceil32(signature.length) + -ceil32(data.length) - 224],\n                                       _268,\n                                       target,\n              else:\n                  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _270 + 192] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _270 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 224 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n                  log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                       mem[_140 + signature.length + ceil32(signature.length) + ceil32(data.length) + 416 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + _270 + -_140 + -ceil32(signature.length) + -ceil32(data.length) - 192],\n                                       _268,\n                                       target,\n          else:\n              mem[floor32(signature.length) + _270 + 160] = mem[floor32(signature.length) + _270 + -(signature.length % 32) + 192 len signature.length % 32]\n              mem[_270 + 64] = floor32(signature.length) + 192\n              mem[floor32(signature.length) + _270 + 192] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n              mem[floor32(signature.length) + _270 + 224 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n              if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n                  log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                       mem[_140 + signature.length + ceil32(signature.length) + ceil32(data.length) + 416 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + -(signature.length % 32) + _270 + -_140 + -ceil32(signature.length) + -ceil32(data.length) - 192],\n                                       _268,\n                                       target,\n              else:\n                  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _270 + 224] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _270 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 256 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n                  log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                       mem[_140 + signature.length + ceil32(signature.length) + ceil32(data.length) + 416 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + -(signature.length % 32) + _270 + -_140 + -ceil32(signature.length) + -ceil32(data.length) - 160],\n                                       _268,\n                                       target,\n          return _268\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 416] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 448 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n      mem[ceil32(signature.length) + ceil32(data.length) + 160] = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + 256\n      mem[64] = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448\n      _284 = sha3(mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]])\n      stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]] = 1\n      _286 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448] = value\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 544] = eta\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 480] = 128\n      mem[_286 + 128] = signature.length\n      mem[_286 + 160 len ceil32(signature.length)] = signature[all], mem[signature.length + 128 len ceil32(signature.length) - signature.length]\n      if not signature.length % 32:\n          mem[_286 + 64] = signature.length + 160\n          mem[signature.length + _286 + 160] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n          mem[signature.length + _286 + 192 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n          if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n              log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                   mem[floor32(_140) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + _286 + -floor32(_140) + -ceil32(signature.length) + -ceil32(data.length) - 256],\n                                   _284,\n                                   target,\n          else:\n              mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _286 + 192] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _286 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 224 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n              log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                   mem[floor32(_140) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + _286 + -floor32(_140) + -ceil32(signature.length) + -ceil32(data.length) - 224],\n                                   _284,\n                                   target,\n      else:\n          mem[floor32(signature.length) + _286 + 160] = mem[floor32(signature.length) + _286 + -(signature.length % 32) + 192 len signature.length % 32]\n          mem[_286 + 64] = floor32(signature.length) + 192\n          mem[floor32(signature.length) + _286 + 192] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n          mem[floor32(signature.length) + _286 + 224 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n          if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n              log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                   mem[floor32(_140) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + -(signature.length % 32) + _286 + -floor32(_140) + -ceil32(signature.length) + -ceil32(data.length) - 224],\n                                   _284,\n                                   target,\n          else:\n              mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _286 + 224] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _286 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 256 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n              log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                   mem[floor32(_140) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + -(signature.length % 32) + _286 + -floor32(_140) + -ceil32(signature.length) + -ceil32(data.length) - 192],\n                                   _284,\n                                   target,\n      return _284\n  mem[floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 384] = mem[floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + -(signature.length % 32) + 416 len signature.length % 32]\n  mem[ceil32(signature.length) + ceil32(data.length) + 288] = floor32(signature.length) + 224\n  mem[floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 416] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n  _143 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n  mem[floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n  if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n      mem[ceil32(signature.length) + ceil32(data.length) + 160] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + 256\n      mem[64] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448\n      _276 = sha3(mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]])\n      stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]] = 1\n      _278 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448\n      mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448] = value\n      mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 544] = eta\n      mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480] = 128\n      mem[_278 + 128] = signature.length\n      mem[_278 + 160 len ceil32(signature.length)] = signature[all], mem[signature.length + 128 len ceil32(signature.length) - signature.length]\n      if not signature.length % 32:\n          mem[_278 + 64] = signature.length + 160\n          mem[signature.length + _278 + 160] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n          mem[signature.length + _278 + 192 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n          if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n              log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                   mem[_143 + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + (signature.length % 32) + _278 + -_143 + -ceil32(signature.length) + -ceil32(data.length) - 256],\n                                   _276,\n                                   target,\n          else:\n              mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _278 + 192] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _278 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 224 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n              log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                   mem[_143 + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + (signature.length % 32) + _278 + -_143 + -ceil32(signature.length) + -ceil32(data.length) - 224],\n                                   _276,\n                                   target,\n      else:\n          mem[floor32(signature.length) + _278 + 160] = mem[floor32(signature.length) + _278 + -(signature.length % 32) + 192 len signature.length % 32]\n          mem[_278 + 64] = floor32(signature.length) + 192\n          mem[floor32(signature.length) + _278 + 192] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n          mem[floor32(signature.length) + _278 + 224 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n          if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n              log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                   mem[_143 + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + _278 + -_143 + -ceil32(signature.length) + -ceil32(data.length) - 224],\n                                   _276,\n                                   target,\n          else:\n              mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _278 + 224] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _278 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 256 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n              log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                   mem[_143 + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + _278 + -_143 + -ceil32(signature.length) + -ceil32(data.length) - 192],\n                                   _276,\n                                   target,\n      return _276\n  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 480 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n  mem[ceil32(signature.length) + ceil32(data.length) + 160] = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + 288\n  mem[64] = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480\n  _291 = sha3(mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]])\n  stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]] = 1\n  _293 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480\n  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480] = value\n  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 576] = eta\n  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 512] = 128\n  mem[_293 + 128] = signature.length\n  mem[_293 + 160 len ceil32(signature.length)] = signature[all], mem[signature.length + 128 len ceil32(signature.length) - signature.length]\n  if not signature.length % 32:\n      mem[_293 + 64] = signature.length + 160\n      mem[signature.length + _293 + 160] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n      mem[signature.length + _293 + 192 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n      if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n          log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                               mem[floor32(_143) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + (signature.length % 32) + _293 + -floor32(_143) + -ceil32(signature.length) + -ceil32(data.length) - 288],\n                               _291,\n                               target,\n      else:\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _293 + 192] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _293 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 224 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n          log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                               mem[floor32(_143) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + (signature.length % 32) + _293 + -floor32(_143) + -ceil32(signature.length) + -ceil32(data.length) - 256],\n                               _291,\n                               target,\n  else:\n      mem[floor32(signature.length) + _293 + 160] = mem[floor32(signature.length) + _293 + -(signature.length % 32) + 192 len signature.length % 32]\n      mem[_293 + 64] = floor32(signature.length) + 192\n      mem[floor32(signature.length) + _293 + 192] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n      mem[floor32(signature.length) + _293 + 224 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n      if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n          log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                               mem[floor32(_143) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + _293 + -floor32(_143) + -ceil32(signature.length) + -ceil32(data.length) - 256],\n                               _291,\n                               target,\n      else:\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _293 + 224] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _293 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 256 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n          log QueueTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                               mem[floor32(_143) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + _293 + -floor32(_143) + -ceil32(signature.length) + -ceil32(data.length) - 224],\n                               _291,\n                               target,\n  return _291\n\ndef cancelTransaction(address target, uint256 value, string signature, bytes data, uint256 eta): # not payable\n  require calldata.size - 4 >= 160\n  require signature <= unknown10000000()\n  require signature + 36 <= calldata.size\n  require signature.length <= unknown10000000() and signature + signature.length + 36 <= calldata.size\n  mem[128 len signature.length] = signature[all]\n  mem[signature.length + 128] = 0\n  require data <= unknown10000000()\n  require data + 36 <= calldata.size\n  require data.length <= unknown10000000() and data + data.length + 36 <= calldata.size\n  mem[64] = ceil32(signature.length) + ceil32(data.length) + 160\n  mem[ceil32(signature.length) + 128] = data.length\n  mem[ceil32(signature.length) + 160 len data.length] = data[all]\n  mem[ceil32(signature.length) + data.length + 160] = 0\n  if adminAddress != caller:\n      revert with 0, \n                  32,\n                  55,\n                  0x2e54696d656c6f636b3a3a63616e63656c5472616e73616374696f6e3a2043616c6c206d75737420636f6d652066726f6d2061646d696e,\n                  mem[ceil32(signature.length) + ceil32(data.length) + 283 len 9]\n  mem[ceil32(signature.length) + ceil32(data.length) + 192] = target\n  mem[ceil32(signature.length) + ceil32(data.length) + 224] = value\n  mem[ceil32(signature.length) + ceil32(data.length) + 320] = eta\n  mem[ceil32(signature.length) + ceil32(data.length) + 256] = 160\n  mem[ceil32(signature.length) + ceil32(data.length) + 352] = signature.length\n  mem[ceil32(signature.length) + ceil32(data.length) + 384 len ceil32(signature.length)] = signature[all], mem[signature.length + 128 len ceil32(signature.length) - signature.length]\n  if not signature.length % 32:\n      mem[ceil32(signature.length) + ceil32(data.length) + 288] = signature.length + 192\n      mem[signature.length + ceil32(signature.length) + ceil32(data.length) + 384] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n      _104 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n      mem[signature.length + ceil32(signature.length) + ceil32(data.length) + 416 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n      if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n          mem[ceil32(signature.length) + ceil32(data.length) + 160] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + 224\n          mem[64] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416\n          _200 = sha3(mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]])\n          stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]] = 0\n          _202 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416] = value\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 512] = eta\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 448] = 128\n          mem[_202 + 128] = signature.length\n          mem[_202 + 160 len ceil32(signature.length)] = signature[all], mem[signature.length + 128 len ceil32(signature.length) - signature.length]\n          if not signature.length % 32:\n              mem[_202 + 64] = signature.length + 160\n              mem[signature.length + _202 + 160] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n              mem[signature.length + _202 + 192 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n              if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[_104 + signature.length + ceil32(signature.length) + ceil32(data.length) + 416 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + _202 + -_104 + -ceil32(signature.length) + -ceil32(data.length) - 224],\n                                        _200,\n                                        target,\n              else:\n                  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _202 + 192] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _202 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 224 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[_104 + signature.length + ceil32(signature.length) + ceil32(data.length) + 416 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + _202 + -_104 + -ceil32(signature.length) + -ceil32(data.length) - 192],\n                                        _200,\n                                        target,\n          else:\n              mem[floor32(signature.length) + _202 + 160] = mem[floor32(signature.length) + _202 + -(signature.length % 32) + 192 len signature.length % 32]\n              mem[_202 + 64] = floor32(signature.length) + 192\n              mem[floor32(signature.length) + _202 + 192] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n              mem[floor32(signature.length) + _202 + 224 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n              if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[_104 + signature.length + ceil32(signature.length) + ceil32(data.length) + 416 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + -(signature.length % 32) + _202 + -_104 + -ceil32(signature.length) + -ceil32(data.length) - 192],\n                                        _200,\n                                        target,\n              else:\n                  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _202 + 224] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _202 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 256 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[_104 + signature.length + ceil32(signature.length) + ceil32(data.length) + 416 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + -(signature.length % 32) + _202 + -_104 + -ceil32(signature.length) + -ceil32(data.length) - 160],\n                                        _200,\n                                        target,\n      else:\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 416] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 448 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n          mem[ceil32(signature.length) + ceil32(data.length) + 160] = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + 256\n          mem[64] = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448\n          _216 = sha3(mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]])\n          stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]] = 0\n          _218 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448] = value\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 544] = eta\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 480] = 128\n          mem[_218 + 128] = signature.length\n          mem[_218 + 160 len ceil32(signature.length)] = signature[all], mem[signature.length + 128 len ceil32(signature.length) - signature.length]\n          if not signature.length % 32:\n              mem[_218 + 64] = signature.length + 160\n              mem[signature.length + _218 + 160] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n              mem[signature.length + _218 + 192 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n              if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[floor32(_104) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + _218 + -floor32(_104) + -ceil32(signature.length) + -ceil32(data.length) - 256],\n                                        _216,\n                                        target,\n              else:\n                  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _218 + 192] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _218 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 224 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[floor32(_104) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + _218 + -floor32(_104) + -ceil32(signature.length) + -ceil32(data.length) - 224],\n                                        _216,\n                                        target,\n          else:\n              mem[floor32(signature.length) + _218 + 160] = mem[floor32(signature.length) + _218 + -(signature.length % 32) + 192 len signature.length % 32]\n              mem[_218 + 64] = floor32(signature.length) + 192\n              mem[floor32(signature.length) + _218 + 192] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n              mem[floor32(signature.length) + _218 + 224 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n              if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[floor32(_104) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + -(signature.length % 32) + _218 + -floor32(_104) + -ceil32(signature.length) + -ceil32(data.length) - 224],\n                                        _216,\n                                        target,\n              else:\n                  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _218 + 224] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _218 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 256 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[floor32(_104) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + -(signature.length % 32) + _218 + -floor32(_104) + -ceil32(signature.length) + -ceil32(data.length) - 192],\n                                        _216,\n                                        target,\n  else:\n      mem[floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 384] = mem[floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + -(signature.length % 32) + 416 len signature.length % 32]\n      mem[ceil32(signature.length) + ceil32(data.length) + 288] = floor32(signature.length) + 224\n      mem[floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 416] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n      _107 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n      mem[floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n      if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n          mem[ceil32(signature.length) + ceil32(data.length) + 160] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + 256\n          mem[64] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448\n          _208 = sha3(mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]])\n          stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]] = 0\n          _210 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448] = value\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 544] = eta\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480] = 128\n          mem[_210 + 128] = signature.length\n          mem[_210 + 160 len ceil32(signature.length)] = signature[all], mem[signature.length + 128 len ceil32(signature.length) - signature.length]\n          if not signature.length % 32:\n              mem[_210 + 64] = signature.length + 160\n              mem[signature.length + _210 + 160] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n              mem[signature.length + _210 + 192 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n              if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[_107 + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + (signature.length % 32) + _210 + -_107 + -ceil32(signature.length) + -ceil32(data.length) - 256],\n                                        _208,\n                                        target,\n              else:\n                  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _210 + 192] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _210 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 224 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[_107 + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + (signature.length % 32) + _210 + -_107 + -ceil32(signature.length) + -ceil32(data.length) - 224],\n                                        _208,\n                                        target,\n          else:\n              mem[floor32(signature.length) + _210 + 160] = mem[floor32(signature.length) + _210 + -(signature.length % 32) + 192 len signature.length % 32]\n              mem[_210 + 64] = floor32(signature.length) + 192\n              mem[floor32(signature.length) + _210 + 192] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n              mem[floor32(signature.length) + _210 + 224 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n              if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[_107 + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + _210 + -_107 + -ceil32(signature.length) + -ceil32(data.length) - 224],\n                                        _208,\n                                        target,\n              else:\n                  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _210 + 224] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _210 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 256 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[_107 + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + _210 + -_107 + -ceil32(signature.length) + -ceil32(data.length) - 192],\n                                        _208,\n                                        target,\n      else:\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 480 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n          mem[ceil32(signature.length) + ceil32(data.length) + 160] = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + 288\n          mem[64] = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480\n          _223 = sha3(mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]])\n          stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]] = 0\n          _225 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480] = value\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 576] = eta\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 512] = 128\n          mem[_225 + 128] = signature.length\n          mem[_225 + 160 len ceil32(signature.length)] = signature[all], mem[signature.length + 128 len ceil32(signature.length) - signature.length]\n          if not signature.length % 32:\n              mem[_225 + 64] = signature.length + 160\n              mem[signature.length + _225 + 160] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n              mem[signature.length + _225 + 192 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n              if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[floor32(_107) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + (signature.length % 32) + _225 + -floor32(_107) + -ceil32(signature.length) + -ceil32(data.length) - 288],\n                                        _223,\n                                        target,\n              else:\n                  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _225 + 192] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + _225 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 224 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[floor32(_107) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + (signature.length % 32) + _225 + -floor32(_107) + -ceil32(signature.length) + -ceil32(data.length) - 256],\n                                        _223,\n                                        target,\n          else:\n              mem[floor32(signature.length) + _225 + 160] = mem[floor32(signature.length) + _225 + -(signature.length % 32) + 192 len signature.length % 32]\n              mem[_225 + 64] = floor32(signature.length) + 192\n              mem[floor32(signature.length) + _225 + 192] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n              mem[floor32(signature.length) + _225 + 224 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n              if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[floor32(_107) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + _225 + -floor32(_107) + -ceil32(signature.length) + -ceil32(data.length) - 256],\n                                        _223,\n                                        target,\n              else:\n                  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _225 + 224] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + _225 + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 256 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n                  log CancelTransaction(bytes32 txHash, address target, uint256 value, string signature, bytes data, uint256 eta):\n                                        mem[floor32(_107) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + _225 + -floor32(_107) + -ceil32(signature.length) + -ceil32(data.length) - 224],\n                                        _223,\n                                        target,\n\ndef executeTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) payable: \n  require calldata.size - 4 >= 160\n  require signature <= unknown10000000()\n  require signature + 36 <= calldata.size\n  require signature.length <= unknown10000000() and signature + signature.length + 36 <= calldata.size\n  mem[96] = signature.length\n  mem[128 len signature.length] = signature[all]\n  mem[signature.length + 128] = 0\n  require data <= unknown10000000()\n  require data + 36 <= calldata.size\n  require data.length <= unknown10000000() and data + data.length + 36 <= calldata.size\n  mem[64] = ceil32(signature.length) + ceil32(data.length) + 160\n  mem[ceil32(signature.length) + 128] = data.length\n  mem[ceil32(signature.length) + 160 len data.length] = data[all]\n  mem[ceil32(signature.length) + data.length + 160] = 0\n  if adminAddress != caller:\n      revert with 0, \n                  32,\n                  56,\n                  0xfe54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a2043616c6c206d75737420636f6d652066726f6d2061646d696e,\n                  mem[ceil32(signature.length) + ceil32(data.length) + 284 len 8]\n  mem[ceil32(signature.length) + ceil32(data.length) + 192] = target\n  mem[ceil32(signature.length) + ceil32(data.length) + 224] = value\n  mem[ceil32(signature.length) + ceil32(data.length) + 320] = eta\n  mem[ceil32(signature.length) + ceil32(data.length) + 256] = 160\n  mem[ceil32(signature.length) + ceil32(data.length) + 352] = signature.length\n  mem[ceil32(signature.length) + ceil32(data.length) + 384 len ceil32(signature.length)] = signature[all], mem[signature.length + 128 len ceil32(signature.length) - signature.length]\n  if not signature.length % 32:\n      mem[ceil32(signature.length) + ceil32(data.length) + 288] = signature.length + 192\n      mem[signature.length + ceil32(signature.length) + ceil32(data.length) + 384] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n      _916 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n      mem[signature.length + ceil32(signature.length) + ceil32(data.length) + 416 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n      if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n          mem[ceil32(signature.length) + ceil32(data.length) + 160] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + 224\n          mem[64] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416\n          if not stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]]:\n              _1832 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416\n              mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n              mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 420] = 32\n              mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 452] = 61\n              mem[_1832 + 68 len 61] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e206861736e2774206265656e20717565756564\n              revert with memory\n                from _916 + signature.length + ceil32(signature.length) + ceil32(data.length) + 416\n                 len _1832 + -_916 + -signature.length + -ceil32(signature.length) + -ceil32(data.length) - 284\n          if block.timestamp < eta:\n              _1848 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416\n              mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n              mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 420] = 32\n              mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 452] = 69\n              mem[_1848 + 68 len 69] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e206861736e2774207375727061737365642074696d65206c6f636b\n              revert with memory\n                from _916 + signature.length + ceil32(signature.length) + ceil32(data.length) + 416\n                 len _1848 + -_916 + -signature.length + -ceil32(signature.length) + -ceil32(data.length) - 252\n          if eta + (336 * 24 * 3600) < eta:\n              _1856 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416\n              mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n              mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 420] = 32\n              mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 452] = 27\n              mem[_1856 + 68] = 'SafeMath: addition overflow'\n              revert with memory\n                from _916 + signature.length + ceil32(signature.length) + ceil32(data.length) + 416\n                 len _1856 + -_916 + -signature.length + -ceil32(signature.length) + -ceil32(data.length) - 316\n          if block.timestamp > eta + (336 * 24 * 3600):\n              _1866 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416\n              mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n              mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 420] = 32\n              mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 452] = 51\n              mem[_1866 + 68 len 51] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e206973207374616c65\n              revert with memory\n                from _916 + signature.length + ceil32(signature.length) + ceil32(data.length) + 416\n                 len _1866 + -_916 + -signature.length + -ceil32(signature.length) + -ceil32(data.length) - 284\n          mem[0] = sha3(mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]])\n          mem[32] = 3\n          stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]] = 0\n          if signature.length:\n              _1874 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416\n              mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 448] = Mask(32, 224, sha3(signature[all]))\n              _1875 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n              mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 452 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n              mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + 452] = mem[ceil32(signature.length) + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 192 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32] or Mask(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32, -(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32) + 256, mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + 452])\n              _2722 = mem[64]\n              mem[mem[64]] = (2 * Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + -mem[64] + 420\n              mem[64] = _1875 + _1874 + 36\n              _2753 = mem[_2722]\n              mem[_1875 + _1874 + 36 len floor32(mem[_2722])] = mem[_2722 + 32 len floor32(mem[_2722])]\n              mem[_1875 + _1874 + floor32(mem[_2722]) + -(mem[_2722] % 32) + 68 len mem[_2722] % 32] = mem[_2722 + -(mem[_2722] % 32) + floor32(mem[_2722]) + 64 len mem[_2722] % 32]\n              call target.mem[_1875 + _1874 + 36 len 4] with:\n                 value value wei\n                   gas gas_remaining wei\n                  args mem[_1875 + _1874 + 40 len _2753 - 4]\n              if not return_data.size:\n                  if not ext_call.success:\n                      revert with 0, \n                                  32,\n                                  61,\n                                  0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564,\n                                  mem[_1875 + _1874 + 165 len 3]\n              else:\n                  if not ext_call.success:\n                      revert with 0, \n                                  32,\n                                  61,\n                                  0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564,\n                                  mem[_1875 + _1874 + ceil32(return_data.size) + 166 len 3]\n              ('bool', 'ext_call.success')\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          _1888 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416\n          _1889 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + signature.length + ceil32(signature.length) + ceil32(data.length) + 416 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n          mem[mem[64] + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 192 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32] or Mask(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32, -(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32) + 256, mem[mem[64] + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])])\n          call target.mem[mem[64] len 4] with:\n             value value wei\n               gas gas_remaining wei\n              args mem[mem[64] + 4 len _1889 + _1888 + -mem[64] - 4]\n          if not return_data.size:\n              if ext_call.success:\n                  _2768 = mem[64]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              _2771 = mem[64]\n              mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n              mem[mem[64] + 4] = 32\n              mem[mem[64] + 36] = 61\n              mem[mem[64] + 68 len 61] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564\n              revert with memory\n                from mem[64]\n                 len _2771 + -mem[64] + 132\n          _2754 = mem[64]\n          mem[64] = mem[64] + ceil32(return_data.size) + 1\n          mem[_2754] = return_data.size\n          mem[_2754 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]\n          if ext_call.success:\n              _2773 = mem[64]\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          _2776 = mem[64]\n          mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n          mem[mem[64] + 4] = 32\n          mem[mem[64] + 36] = 61\n          mem[mem[64] + 68 len 61] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564\n          revert with memory\n            from mem[64]\n             len _2776 + -mem[64] + 132\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 416] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 448 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n      mem[ceil32(signature.length) + ceil32(data.length) + 160] = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + 256\n      mem[64] = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448\n      if not stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]]:\n          _1844 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 452] = 32\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 484] = 61\n          mem[_1844 + 68 len 61] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e206861736e2774206265656e20717565756564\n          revert with memory\n            from floor32(_916) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448\n             len _1844 + -floor32(_916) + -signature.length + -ceil32(signature.length) + -ceil32(data.length) - 316\n      if block.timestamp < eta:\n          _1852 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 452] = 32\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 484] = 69\n          mem[_1852 + 68 len 69] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e206861736e2774207375727061737365642074696d65206c6f636b\n          revert with memory\n            from floor32(_916) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448\n             len _1852 + -floor32(_916) + -signature.length + -ceil32(signature.length) + -ceil32(data.length) - 284\n      if eta + (336 * 24 * 3600) < eta:\n          _1860 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 452] = 32\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 484] = 27\n          mem[_1860 + 68] = 'SafeMath: addition overflow'\n          revert with memory\n            from floor32(_916) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448\n             len _1860 + -floor32(_916) + -signature.length + -ceil32(signature.length) + -ceil32(data.length) - 348\n      if block.timestamp > eta + (336 * 24 * 3600):\n          _1878 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 452] = 32\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 484] = 51\n          mem[_1878 + 68 len 51] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e206973207374616c65\n          revert with memory\n            from floor32(_916) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448\n             len _1878 + -floor32(_916) + -signature.length + -ceil32(signature.length) + -ceil32(data.length) - 316\n      mem[0] = sha3(mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]])\n      mem[32] = 3\n      stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]] = 0\n      if signature.length:\n          _1892 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 480] = Mask(32, 224, sha3(signature[all]))\n          _1893 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n          mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 484 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n          mem[(2 * floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])) + signature.length + ceil32(signature.length) + ceil32(data.length) + 484] = mem[ceil32(signature.length) + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 192 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32] or Mask(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32, -(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32) + 256, mem[(2 * floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])) + signature.length + ceil32(signature.length) + ceil32(data.length) + 484])\n          _2730 = mem[64]\n          mem[mem[64]] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + -mem[64] + 452\n          mem[64] = _1893 + _1892 + 36\n          _2756 = mem[_2730]\n          mem[_1893 + _1892 + 36 len floor32(mem[_2730])] = mem[_2730 + 32 len floor32(mem[_2730])]\n          mem[_1893 + _1892 + floor32(mem[_2730]) + -(mem[_2730] % 32) + 68 len mem[_2730] % 32] = mem[_2730 + -(mem[_2730] % 32) + floor32(mem[_2730]) + 64 len mem[_2730] % 32]\n          call target.mem[_1893 + _1892 + 36 len 4] with:\n             value value wei\n               gas gas_remaining wei\n              args mem[_1893 + _1892 + 40 len _2756 - 4]\n          if not return_data.size:\n              if not ext_call.success:\n                  revert with 0, \n                              32,\n                              61,\n                              0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564,\n                              mem[_1893 + _1892 + 165 len 3]\n          else:\n              if not ext_call.success:\n                  revert with 0, \n                              32,\n                              61,\n                              0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564,\n                              mem[_1893 + _1892 + ceil32(return_data.size) + 166 len 3]\n          ('bool', 'ext_call.success')\n          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n      _1904 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448\n      _1905 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + signature.length + ceil32(signature.length) + ceil32(data.length) + 448 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n      mem[mem[64] + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 192 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32] or Mask(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32, -(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32) + 256, mem[mem[64] + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])])\n      call target.mem[mem[64] len 4] with:\n         value value wei\n           gas gas_remaining wei\n          args mem[mem[64] + 4 len _1905 + _1904 + -mem[64] - 4]\n      if not return_data.size:\n          if ext_call.success:\n              _2782 = mem[64]\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          _2785 = mem[64]\n          mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n          mem[mem[64] + 4] = 32\n          mem[mem[64] + 36] = 61\n          mem[mem[64] + 68 len 61] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564\n          revert with memory\n            from mem[64]\n             len _2785 + -mem[64] + 132\n      _2757 = mem[64]\n      mem[64] = mem[64] + ceil32(return_data.size) + 1\n      mem[_2757] = return_data.size\n      mem[_2757 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]\n      if ext_call.success:\n          _2787 = mem[64]\n          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n      _2790 = mem[64]\n      mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n      mem[mem[64] + 4] = 32\n      mem[mem[64] + 36] = 61\n      mem[mem[64] + 68 len 61] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564\n      revert with memory\n        from mem[64]\n         len _2790 + -mem[64] + 132\n  mem[floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 384] = mem[floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + -(signature.length % 32) + 416 len signature.length % 32]\n  mem[ceil32(signature.length) + ceil32(data.length) + 288] = floor32(signature.length) + 224\n  mem[floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 416] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n  _919 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n  mem[floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len ceil32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n  if not Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32:\n      mem[ceil32(signature.length) + ceil32(data.length) + 160] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + 256\n      mem[64] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448\n      if not stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]]:\n          _1838 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 452] = 32\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 484] = 61\n          mem[_1838 + 68 len 61] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e206861736e2774206265656e20717565756564\n          revert with memory\n            from _919 + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448\n             len _1838 + -_919 + -floor32(signature.length) + -ceil32(signature.length) + -ceil32(data.length) - 316\n      if block.timestamp < eta:\n          _1850 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 452] = 32\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 484] = 69\n          mem[_1850 + 68 len 69] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e206861736e2774207375727061737365642074696d65206c6f636b\n          revert with memory\n            from _919 + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448\n             len _1850 + -_919 + -floor32(signature.length) + -ceil32(signature.length) + -ceil32(data.length) - 284\n      if eta + (336 * 24 * 3600) < eta:\n          _1858 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 452] = 32\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 484] = 27\n          mem[_1858 + 68] = 'SafeMath: addition overflow'\n          revert with memory\n            from _919 + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448\n             len _1858 + -_919 + -floor32(signature.length) + -ceil32(signature.length) + -ceil32(data.length) - 348\n      if block.timestamp > eta + (336 * 24 * 3600):\n          _1870 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 452] = 32\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 484] = 51\n          mem[_1870 + 68 len 51] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e206973207374616c65\n          revert with memory\n            from _919 + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448\n             len _1870 + -_919 + -floor32(signature.length) + -ceil32(signature.length) + -ceil32(data.length) - 316\n      mem[0] = sha3(mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]])\n      mem[32] = 3\n      stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]] = 0\n      if signature.length:\n          _1882 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480] = Mask(32, 224, sha3(signature[all]))\n          _1883 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 484 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n          mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + 484] = mem[ceil32(signature.length) + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 192 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32] or Mask(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32, -(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32) + 256, mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + 484])\n          _2738 = mem[64]\n          mem[mem[64]] = (2 * Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + -mem[64] + 452\n          mem[64] = _1883 + _1882 + 36\n          _2759 = mem[_2738]\n          mem[_1883 + _1882 + 36 len floor32(mem[_2738])] = mem[_2738 + 32 len floor32(mem[_2738])]\n          mem[_1883 + _1882 + floor32(mem[_2738]) + -(mem[_2738] % 32) + 68 len mem[_2738] % 32] = mem[_2738 + floor32(mem[_2738]) + -(mem[_2738] % 32) + 64 len mem[_2738] % 32]\n          call target.mem[_1883 + _1882 + 36 len 4] with:\n             value value wei\n               gas gas_remaining wei\n              args mem[_1883 + _1882 + 40 len _2759 - 4]\n          if not return_data.size:\n              if not ext_call.success:\n                  revert with 0, \n                              32,\n                              61,\n                              0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564,\n                              mem[_1883 + _1882 + 165 len 3]\n          else:\n              if not ext_call.success:\n                  revert with 0, \n                              32,\n                              61,\n                              0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564,\n                              mem[_1883 + _1882 + ceil32(return_data.size) + 166 len 3]\n          ('bool', 'ext_call.success')\n          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n      _1894 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448\n      _1895 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n      mem[Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n      mem[mem[64] + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 192 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32] or Mask(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32, -(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32) + 256, mem[mem[64] + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])])\n      call target.mem[mem[64] len 4] with:\n         value value wei\n           gas gas_remaining wei\n          args mem[mem[64] + 4 len _1895 + _1894 + -mem[64] - 4]\n      if not return_data.size:\n          if ext_call.success:\n              _2796 = mem[64]\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          _2799 = mem[64]\n          mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n          mem[mem[64] + 4] = 32\n          mem[mem[64] + 36] = 61\n          mem[mem[64] + 68 len 61] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564\n          revert with memory\n            from mem[64]\n             len _2799 + -mem[64] + 132\n      _2760 = mem[64]\n      mem[64] = mem[64] + ceil32(return_data.size) + 1\n      mem[_2760] = return_data.size\n      mem[_2760 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]\n      if ext_call.success:\n          _2801 = mem[64]\n          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n      _2804 = mem[64]\n      mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n      mem[mem[64] + 4] = 32\n      mem[mem[64] + 36] = 61\n      mem[mem[64] + 68 len 61] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564\n      revert with memory\n        from mem[64]\n         len _2804 + -mem[64] + 132\n  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 448] = mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 480 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32]\n  mem[ceil32(signature.length) + ceil32(data.length) + 160] = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + 288\n  mem[64] = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480\n  if not stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]]:\n      _1846 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 484] = 32\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 516] = 61\n      mem[_1846 + 68 len 61] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e206861736e2774206265656e20717565756564\n      revert with memory\n        from floor32(_919) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480\n         len _1846 + -floor32(_919) + -floor32(signature.length) + -ceil32(signature.length) + -ceil32(data.length) - 348\n  if block.timestamp < eta:\n      _1854 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 484] = 32\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 516] = 69\n      mem[_1854 + 68 len 69] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e206861736e2774207375727061737365642074696d65206c6f636b\n      revert with memory\n        from floor32(_919) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480\n         len _1854 + -floor32(_919) + -floor32(signature.length) + -ceil32(signature.length) + -ceil32(data.length) - 316\n  if eta + (336 * 24 * 3600) < eta:\n      _1862 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 484] = 32\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 516] = 27\n      mem[_1862 + 68] = 'SafeMath: addition overflow'\n      revert with memory\n        from floor32(_919) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480\n         len _1862 + -floor32(_919) + -floor32(signature.length) + -ceil32(signature.length) + -ceil32(data.length) - 380\n  if block.timestamp > eta + (336 * 24 * 3600):\n      _1886 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 484] = 32\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 516] = 51\n      mem[_1886 + 68 len 51] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e206973207374616c65\n      revert with memory\n        from floor32(_919) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480\n         len _1886 + -floor32(_919) + -floor32(signature.length) + -ceil32(signature.length) + -ceil32(data.length) - 348\n  mem[0] = sha3(mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]])\n  mem[32] = 3\n  stor3[mem[ceil32(signature.length) + ceil32(data.length) + 192 len Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[ceil32(signature.length) + data.length + 192 len -data.length + ceil32(data.length)]]] = 0\n  if signature.length:\n      _1898 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 512] = Mask(32, 224, sha3(signature[all]))\n      _1899 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n      mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 516 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n      mem[(2 * floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 516] = mem[ceil32(signature.length) + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 192 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32] or Mask(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32, -(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32) + 256, mem[(2 * floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 516])\n      _2746 = mem[64]\n      mem[mem[64]] = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + -mem[64] + 484\n      mem[64] = _1899 + _1898 + 36\n      _2762 = mem[_2746]\n      mem[_1899 + _1898 + 36 len floor32(mem[_2746])] = mem[_2746 + 32 len floor32(mem[_2746])]\n      mem[_1899 + _1898 + floor32(mem[_2746]) + -(mem[_2746] % 32) + 68 len mem[_2746] % 32] = mem[_2746 + floor32(mem[_2746]) + -(mem[_2746] % 32) + 64 len mem[_2746] % 32]\n      call target.mem[_1899 + _1898 + 36 len 4] with:\n         value value wei\n           gas gas_remaining wei\n          args mem[_1899 + _1898 + 40 len _2762 - 4]\n      if not return_data.size:\n          if not ext_call.success:\n              revert with 0, \n                          32,\n                          61,\n                          0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564,\n                          mem[_1899 + _1898 + 165 len 3]\n      else:\n          if not ext_call.success:\n              revert with 0, \n                          32,\n                          61,\n                          0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564,\n                          mem[_1899 + _1898 + ceil32(return_data.size) + 166 len 3]\n      ('bool', 'ext_call.success')\n      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n  _1910 = floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480\n  _1911 = Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]\n  mem[floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + floor32(signature.length) + ceil32(signature.length) + ceil32(data.length) + 480 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + 160 len floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])]\n  mem[mem[64] + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])] = mem[ceil32(signature.length) + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)]) + -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 192 len Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32] or Mask(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32, -(8 * -(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)] % 32) + 32) + 256, mem[mem[64] + floor32(Mask(8 * -ceil32(signature.length) + signature.length + 32, 0, 0), mem[signature.length + 160 len -signature.length + ceil32(signature.length)])])\n  call target.mem[mem[64] len 4] with:\n     value value wei\n       gas gas_remaining wei\n      args mem[mem[64] + 4 len _1911 + _1910 + -mem[64] - 4]\n  if not return_data.size:\n      if ext_call.success:\n          _2810 = mem[64]\n          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n      _2813 = mem[64]\n      mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n      mem[mem[64] + 4] = 32\n      mem[mem[64] + 36] = 61\n      mem[mem[64] + 68 len 61] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564\n      revert with memory\n        from mem[64]\n         len _2813 + -mem[64] + 132\n  _2763 = mem[64]\n  mem[64] = mem[64] + ceil32(return_data.size) + 1\n  mem[_2763] = return_data.size\n  mem[_2763 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]\n  if ext_call.success:\n      _2815 = mem[64]\n      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n  _2818 = mem[64]\n  mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000\n  mem[mem[64] + 4] = 32\n  mem[mem[64] + 36] = 61\n  mem[mem[64] + 68 len 61] = 0x2e54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e207265766572746564\n  revert with memory\n    from mem[64]\n     len _2818 + -mem[64] + 132\n\n",
	"language": "Solidity",
	"status": "This model's maximum context length is 32768 tokens. However, your messages resulted in 40929 tokens. Please reduce the length of the messages."
}