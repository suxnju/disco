{
	"address": "0x80e38d47b1dda527e45c353f6fadd133c7c21f35",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is the Solidity code based on the decompiled code you provided:\n\n```Solidity\npragma solidity ^0.8.0;\n\ncontract PresaleContract {\n    mapping (address => uint256) private _accountToBoughtNum;\n    uint256 private _totalSupplyForPresale;\n    uint256 private _accountBuyLimit;\n    uint256 private _remainPackage;\n    address private _owner;\n    bool private _paused;\n\n    event Unpause();\n    event Pause();\n    event BuyPresale(address indexed buyer);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    constructor() {\n        _owner = msg.sender;\n        _paused = false;\n    }\n    \n    function pause() public {\n        require(msg.sender == _owner);\n        require(!_paused);\n        _paused = true;\n        emit Pause();\n    }\n\n    function owner() public view returns(address) {\n        return _owner;\n    }\n    \n    function buyPresale() public payable {\n        require(!_paused);\n        require(_accountToBoughtNum[msg.sender] + 1 < _accountBuyLimit);\n        require(_remainPackage > 0);\n        require(msg.value >= 0x470de4df820000 + (10000 - _remainPackage) / 500 * 0x2386f26fc10000);\n        _accountToBoughtNum[msg.sender] = _accountToBoughtNum[msg.sender] + 1;\n        _remainPackage = _remainPackage - 1;\n        emit BuyPresale(msg.sender);\n    }\n\n    function accountToBoughtNum(address account) public view returns(uint256) { \n        return _accountToBoughtNum[account];\n    }\n\n    function totalSupplyForPresale() public view returns(uint256) { \n        return _totalSupplyForPresale;\n    }\n\n    function accountBuyLimit() public view returns(uint256) {\n        return _accountBuyLimit;\n    }\n\n    function withdrawETH() public { \n        require(msg.sender == _owner);\n        payable(_owner).transfer(address(this).balance);\n    }\n\n    function transferOwnership(address newOwner) public { \n        require(msg.sender == _owner);\n        require(newOwner != address(0));\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n\n    function remainPackage() public view returns(uint256) {\n        return _remainPackage;\n    }\n\n    function unpause() public { \n        require(msg.sender == _owner);\n        require(_paused);\n        _paused = false;\n        emit Unpause();\n    }\n\n    function paused() public view returns(bool) { \n        return _paused;\n    }\n\n    fallback() external payable {\n        revert();\n    }\n}\n```\nPlease note that this is a simple conversion of your decompiled code and might not fully functional if not properly configured.",
				"role": "assistant"
			}
		}
	],
	"created": 1701466243,
	"id": "chatcmpl-8R5NrKojEi7bf0qolRvHl2CInneCv",
	"input_format": "DecompiledCode",
	"ir": "// Decompiled at www.contract-library.com\n// 2021.08.23 07:39 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) _accountToBoughtNum; // STORAGE[0x1]\nuint256 _totalSupplyForPresale; // STORAGE[0x2]\nuint256 _accountBuyLimit; // STORAGE[0x3]\nuint256 _remainPackage; // STORAGE[0x4]\naddress _owner; // STORAGE[0x0] bytes 0 to 19\nuint8 _paused; // STORAGE[0x0] bytes 20 to 20\n\n// Events\nUnpause();\nPause();\nBuyPresale(address);\nOwnershipTransferred(address, address);\n\nfunction pause() public nonPayable { \n    require(msg.sender == _owner);\n    require(!_paused);\n    _paused = 1;\n    emit Pause();\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction buyPresale() public payable { \n    require(!_paused);\n    require(_accountToBoughtNum[msg.sender] + 1 < _accountBuyLimit);\n    require(_remainPackage > 0);\n    require(msg.value >= 0x470de4df820000 + (10000 - _remainPackage) / 500 * 0x2386f26fc10000);\n    _accountToBoughtNum[msg.sender] = _accountToBoughtNum[msg.sender] + 1;\n    _remainPackage = _remainPackage - 1;\n    emit BuyPresale(msg.sender);\n}\n\nfunction accountToBoughtNum(address varg0) public nonPayable { \n    return _accountToBoughtNum[varg0];\n}\n\nfunction totalSupplyForPresale() public nonPayable { \n    return _totalSupplyForPresale;\n}\n\nfunction accountBuyLimit() public nonPayable { \n    return _accountBuyLimit;\n}\n\nfunction withdrawETH() public nonPayable { \n    require(msg.sender == _owner);\n    v0 = _owner.call().value((address(this)).balance).gas(!(address(this)).balance * 2300);\n    require(v0);\n}\n\nfunction transferOwnership(address varg0) public nonPayable { \n    require(msg.sender == _owner);\n    require(varg0 != 0);\n    emit OwnershipTransferred(_owner, varg0);\n    _owner = varg0;\n}\n\nfunction fallback() public payable { \n    revert();\n}\n\nfunction remainPackage() public nonPayable { \n    return _remainPackage;\n}\n\nfunction unpause() public nonPayable { \n    require(msg.sender == _owner);\n    require(_paused);\n    _paused = 0;\n    emit Unpause();\n}\n\nfunction paused() public nonPayable { \n    return _paused;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length >= 4) {\n        if (0x12dcb676 == function_selector) {\n            remainPackage();\n        } else if (0x3f4ba83a == function_selector) {\n            unpause();\n        } else if (0x5c975abb == function_selector) {\n            paused();\n        } else if (0x8456cb59 == function_selector) {\n            pause();\n        } else if (0x8da5cb5b == function_selector) {\n            owner();\n        } else if (0x9fcdec61 == function_selector) {\n            buyPresale();\n        } else if (0xbaf16d5a == function_selector) {\n            accountToBoughtNum(address);\n        } else if (0xbcbf5b90 == function_selector) {\n            totalSupplyForPresale();\n        } else if (0xdf9d3580 == function_selector) {\n            accountBuyLimit();\n        } else if (0xe086e5ec == function_selector) {\n            withdrawETH();\n        } else if (0xf2fde38b == function_selector) {\n            transferOwnership(address);\n        }\n    }\n    fallback();\n}\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.23 07:39 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) _accountToBoughtNum; // STORAGE[0x1]\nuint256 _totalSupplyForPresale; // STORAGE[0x2]\nuint256 _accountBuyLimit; // STORAGE[0x3]\nuint256 _remainPackage; // STORAGE[0x4]\naddress _owner; // STORAGE[0x0] bytes 0 to 19\nuint8 _paused; // STORAGE[0x0] bytes 20 to 20\n\n// Events\nUnpause();\nPause();\nBuyPresale(address);\nOwnershipTransferred(address, address);\n\nfunction pause() public nonPayable { \n    require(msg.sender == _owner);\n    require(!_paused);\n    _paused = 1;\n    emit Pause();\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction buyPresale() public payable { \n    require(!_paused);\n    require(_accountToBoughtNum[msg.sender] + 1 < _accountBuyLimit);\n    require(_remainPackage > 0);\n    require(msg.value >= 0x470de4df820000 + (10000 - _remainPackage) / 500 * 0x2386f26fc10000);\n    _accountToBoughtNum[msg.sender] = _accountToBoughtNum[msg.sender] + 1;\n    _remainPackage = _remainPackage - 1;\n    emit BuyPresale(msg.sender);\n}\n\nfunction accountToBoughtNum(address varg0) public nonPayable { \n    return _accountToBoughtNum[varg0];\n}\n\nfunction totalSupplyForPresale() public nonPayable { \n    return _totalSupplyForPresale;\n}\n\nfunction accountBuyLimit() public nonPayable { \n    return _accountBuyLimit;\n}\n\nfunction withdrawETH() public nonPayable { \n    require(msg.sender == _owner);\n    v0 = _owner.call().value((address(this)).balance).gas(!(address(this)).balance * 2300);\n    require(v0);\n}\n\nfunction transferOwnership(address varg0) public nonPayable { \n    require(msg.sender == _owner);\n    require(varg0 != 0);\n    emit OwnershipTransferred(_owner, varg0);\n    _owner = varg0;\n}\n\nfunction fallback() public payable { \n    revert();\n}\n\nfunction remainPackage() public nonPayable { \n    return _remainPackage;\n}\n\nfunction unpause() public nonPayable { \n    require(msg.sender == _owner);\n    require(_paused);\n    _paused = 0;\n    emit Unpause();\n}\n\nfunction paused() public nonPayable { \n    return _paused;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length >= 4) {\n        if (0x12dcb676 == function_selector) {\n            remainPackage();\n        } else if (0x3f4ba83a == function_selector) {\n            unpause();\n        } else if (0x5c975abb == function_selector) {\n            paused();\n        } else if (0x8456cb59 == function_selector) {\n            pause();\n        } else if (0x8da5cb5b == function_selector) {\n            owner();\n        } else if (0x9fcdec61 == function_selector) {\n            buyPresale();\n        } else if (0xbaf16d5a == function_selector) {\n            accountToBoughtNum(address);\n        } else if (0xbcbf5b90 == function_selector) {\n            totalSupplyForPresale();\n        } else if (0xdf9d3580 == function_selector) {\n            accountBuyLimit();\n        } else if (0xe086e5ec == function_selector) {\n            withdrawETH();\n        } else if (0xf2fde38b == function_selector) {\n            transferOwnership(address);\n        }\n    }\n    fallback();\n}\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.23 07:39 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nmapping (uint256 => [uint256]) _accountToBoughtNum; // STORAGE[0x1]\nuint256 _totalSupplyForPresale; // STORAGE[0x2]\nuint256 _accountBuyLimit; // STORAGE[0x3]\nuint256 _remainPackage; // STORAGE[0x4]\naddress _owner; // STORAGE[0x0] bytes 0 to 19\nuint8 _paused; // STORAGE[0x0] bytes 20 to 20\n\n// Events\nUnpause();\nPause();\nBuyPresale(address);\nOwnershipTransferred(address, address);\n\nfunction pause() public nonPayable { \n    require(msg.sender == _owner);\n    require(!_paused);\n    _paused = 1;\n    emit Pause();\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction buyPresale() public payable { \n    require(!_paused);\n    require(_accountToBoughtNum[msg.sender] + 1 < _accountBuyLimit);\n    require(_remainPackage > 0);\n    require(msg.value >= 0x470de4df820000 + (10000 - _remainPackage) / 500 * 0x2386f26fc10000);\n    _accountToBoughtNum[msg.sender] = _accountToBoughtNum[msg.sender] + 1;\n    _remainPackage = _remainPackage - 1;\n    emit BuyPresale(msg.sender);\n}\n\nfunction accountToBoughtNum(address varg0) public nonPayable { \n    return _accountToBoughtNum[varg0];\n}\n\nfunction totalSupplyForPresale() public nonPayable { \n    return _totalSupplyForPresale;\n}\n\nfunction accountBuyLimit() public nonPayable { \n    return _accountBuyLimit;\n}\n\nfunction withdrawETH() public nonPayable { \n    require(msg.sender == _owner);\n    v0 = _owner.call().value((address(this)).balance).gas(!(address(this)).balance * 2300);\n    require(v0);\n}\n\nfunction transferOwnership(address varg0) public nonPayable { \n    require(msg.sender == _owner);\n    require(varg0 != 0);\n    emit OwnershipTransferred(_owner, varg0);\n    _owner = varg0;\n}\n\nfunction fallback() public payable { \n    revert();\n}\n\nfunction remainPackage() public nonPayable { \n    return _remainPackage;\n}\n\nfunction unpause() public nonPayable { \n    require(msg.sender == _owner);\n    require(_paused);\n    _paused = 0;\n    emit Unpause();\n}\n\nfunction paused() public nonPayable { \n    return _paused;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length >= 4) {\n        if (0x12dcb676 == function_selector) {\n            remainPackage();\n        } else if (0x3f4ba83a == function_selector) {\n            unpause();\n        } else if (0x5c975abb == function_selector) {\n            paused();\n        } else if (0x8456cb59 == function_selector) {\n            pause();\n        } else if (0x8da5cb5b == function_selector) {\n            owner();\n        } else if (0x9fcdec61 == function_selector) {\n            buyPresale();\n        } else if (0xbaf16d5a == function_selector) {\n            accountToBoughtNum(address);\n        } else if (0xbcbf5b90 == function_selector) {\n            totalSupplyForPresale();\n        } else if (0xdf9d3580 == function_selector) {\n            accountBuyLimit();\n        } else if (0xe086e5ec == function_selector) {\n            withdrawETH();\n        } else if (0xf2fde38b == function_selector) {\n            transferOwnership(address);\n        }\n    }\n    fallback();\n}\n.",
	"status": "1",
	"time_cost": 25.21018886566162,
	"usage": {
		"completion_tokens": 584,
		"prompt_tokens": 941,
		"total_tokens": 1525
	}
}