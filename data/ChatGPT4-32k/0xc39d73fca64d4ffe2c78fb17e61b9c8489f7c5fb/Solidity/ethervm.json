{
	"address": "0xc39d73fca64d4ffe2c78fb17e61b9c8489f7c5fb",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is your Solidity code based on the decompiled EVM bytecode.\n\n```Solidity\npragma solidity ^0.5.17;\n\ncontract Contract {\n    address storage0;\n    address storage1;\n    bytes32 storage2;\n    address storage3;\n    string storage4;\n    uint256 storage5;\n    uint256 storage6;\n    uint256 storage7;\n\n    function noToken() public view returns (address) {\n        return storage0;\n    }\n\n    function outcome() public view returns (uint256) {\n        return storage5;\n    }\n\n    function resolved() public view returns (bool) {\n        return storage6 & 0xff == 1;\n    }\n\n    function url() public view returns (string memory) {\n        return storage4;\n    }\n\n    function feeAccount() public view returns (address) {\n        return storage3;\n    }\n\n    function factHash() public view returns (bytes32) {\n        return storage2;\n    }\n\n    function ethAddr() public view returns (address) {\n        return storage1;\n    }\n\n    function fee() public view returns (uint256) {\n        return storage7;\n    }\n\n    function yesToken() public view returns (address) {\n        return storage1;\n    }\n\n    function resolve(uint8 arg1, bytes32 arg2, bytes32 arg3, bytes32 arg4) public {\n        require(msg.data[0x04:0x24] == keccak256(storage2, arg4), \"Error\");\n        require((storage6 & 0xff) == 0, \"Already resolved\");\n        storage5 = uint256(arg3);\n        storage6 |= 0x01;\n        emit Log(storage5, msg.sender);\n    }\n\n    function redeem(uint256 arg0) public {\n        require(msg.sender == (storage3 & (2**0xa0 - 1)), \"Unauthorized\");\n        require(msg.value == arg0 * storage7, \"Incorrect amount\");\n        emit Log(arg0, msg.sender);\n    }\n\n    function create() public {\n        require(msg.sender == (storage0 & (2**0xa0 - 1)), \"Unauthorized\");\n        require(msg.value > 0, \"No value provided\");\n        emit Log(msg.value, msg.sender);\n    }\n\n    event Log(uint256 indexed _value, address indexed _from);\n}\n```\nPlease note that the provided EVM bytecode was translated as is, including any potential bugs or security issues it may have. Always perform due diligence when interacting with smart contracts.",
				"role": "assistant"
			}
		}
	],
	"created": 1700472362,
	"id": "chatcmpl-8MupWbOKLEf9T8rX8Ij5Viiz8Jj88",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n    \n        if (msg.data.length) { goto label_000B; }\n    \n    label_0098:\n        var var0 = 0x0338;\n    \n    label_0002:\n        memory[0x40:0x60] = var0;\n    \n        if (!msg.data.length) { goto label_0098; }\n    \n    label_000B:\n        var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n    \n        if (var0 == 0x11a9f10a) {\n            // Dispatch table entry for noToken()\n            var var1 = 0x033a;\n            var var2 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n        \n        label_033A:\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n            var temp1 = memory[0x40:0x60];\n            return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n        } else if (var0 == 0x27793f87) {\n            // Dispatch table entry for outcome()\n            var1 = 0x0357;\n            var2 = storage[0x05];\n        \n        label_0357:\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = var2;\n            var temp3 = memory[0x40:0x60];\n            return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n        } else if (var0 == 0x3f6fa655) {\n            // Dispatch table entry for resolved()\n            var1 = 0x0369;\n            var2 = storage[0x06] & 0xff;\n            var temp4 = memory[0x40:0x60];\n            memory[temp4:temp4 + 0x20] = !!var2;\n            var temp5 = memory[0x40:0x60];\n            return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n        } else if (var0 == 0x5600f04f) {\n            // Dispatch table entry for url()\n            var temp6 = memory[0x40:0x60];\n            var2 = temp6;\n            var var3 = 0x04;\n            var temp7 = storage[var3];\n            var temp8 = (temp7 & !(temp7 & 0x01) * 0x0100 + ~0x00) / 0x02;\n            memory[0x40:0x60] = var2 + (temp8 + 0x1f) / 0x20 * 0x20 + 0x20;\n            memory[var2:var2 + 0x20] = temp8;\n            var1 = 0x037d;\n            var var4 = temp8;\n            var var5 = var2 + 0x20;\n            var var6 = var3;\n            var var7 = var4;\n        \n            if (!var7) {\n                func_0416(var3, var4, var5, var6, var7);\n                var temp9 = memory[0x40:0x60];\n                var3 = temp9;\n                var4 = var3;\n                var temp10 = var4 + 0x20;\n                memory[var4:var4 + 0x20] = temp10 - var4;\n                var temp11 = var2;\n                memory[temp10:temp10 + 0x20] = memory[temp11:temp11 + 0x20];\n                var temp12 = temp10 + 0x20;\n                var temp13 = memory[temp11:temp11 + 0x20];\n                memory[temp12:temp12 + temp13] = address(0x04).call.gas((temp13 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp11 + 0x20:temp11 + 0x20 + temp13]);\n                var5 = temp13 + temp12;\n                var6 = temp13 & 0x1f;\n            \n                if (!var6) {\n                    var temp14 = memory[0x40:0x60];\n                    return memory[temp14:temp14 + var5 - temp14];\n                } else {\n                    var temp15 = var6;\n                    var temp16 = var5 - temp15;\n                    memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                    var temp17 = memory[0x40:0x60];\n                    return memory[temp17:temp17 + (temp16 + 0x20) - temp17];\n                }\n            } else if (0x1f < var7) {\n                var temp18 = var5;\n                var temp19 = temp18 + var7;\n                var5 = temp19;\n                memory[0x00:0x20] = var6;\n                var temp20 = keccak256(memory[0x00:0x20]);\n                memory[temp18:temp18 + 0x20] = storage[temp20];\n                var6 = temp20 + 0x01;\n                var7 = temp18 + 0x20;\n            \n                if (var5 <= var7) { goto label_040D; }\n            \n            label_03F9:\n                var temp21 = var6;\n                var temp22 = var7;\n                memory[temp22:temp22 + 0x20] = storage[temp21];\n                var6 = temp21 + 0x01;\n                var7 = temp22 + 0x20;\n            \n                if (var5 > var7) { goto label_03F9; }\n            \n            label_040D:\n                var temp23 = var5;\n                var temp24 = temp23 + (var7 - temp23 & 0x1f);\n                var7 = temp23;\n                var5 = temp24;\n                func_0416(var3, var4, var5, var6, var7);\n                // Error: Could not resolve method call return address!\n            } else {\n                var temp25 = var5;\n                memory[temp25:temp25 + 0x20] = storage[var6] / 0x0100 * 0x0100;\n                var7 = var7;\n                var5 = temp25 + 0x20;\n                func_0416(var3, var4, var5, var6, var7);\n                // Error: Could not resolve method call return address!\n            }\n        } else if (var0 == 0x65e17c9d) {\n            // Dispatch table entry for feeAccount()\n            var1 = 0x033a;\n            var2 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n            goto label_033A;\n        } else if (var0 == 0x93854494) {\n            // Dispatch table entry for factHash()\n            var1 = 0x0357;\n            var2 = storage[0x02];\n            goto label_0357;\n        } else if (var0 == 0xa6403636) {\n            // Dispatch table entry for resolve(uint8,bytes32,bytes32,bytes32)\n            var1 = 0x0338;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44];\n            var4 = msg.data[0x44:0x64];\n            var5 = msg.data[0x64:0x84];\n            var temp26 = memory[0x40:0x60];\n            memory[temp26:temp26 + 0x20] = storage[0x02];\n            memory[temp26 + 0x20:temp26 + 0x20 + 0x20] = var5;\n            var temp27 = memory[0x40:0x60];\n            memory[temp27:temp27 + 0x20] = keccak256(memory[temp27:temp27 + temp26 - temp27 + 0x40]);\n            memory[temp27 + 0x20:temp27 + 0x20 + 0x20] = var2 & 0xff;\n            memory[temp27 + 0x40:temp27 + 0x40 + 0x20] = var3;\n            memory[temp27 + 0x60:temp27 + 0x60 + 0x20] = var4;\n            var temp28 = memory[0x40:0x60];\n            var6 = 0x00;\n            var7 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n            var var8 = 0x01;\n            var var9 = temp27 + 0x80;\n            var temp29;\n            temp29, memory[temp28:temp28 + 0x20] = address(var8).call.gas(msg.gas - 0x61da).value(var6)(memory[temp28:temp28 + temp27 - temp28 + 0x80]);\n        \n            if (!temp29) { goto label_0002; }\n        \n            resolve(var2, var3, var4, var5, var6, var7, var8, var9);\n            stop();\n        } else if (var0 == 0xbbf646c2) {\n            // Dispatch table entry for ethAddr()\n            var1 = 0x033a;\n            var2 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n            goto label_033A;\n        } else if (var0 == 0xdb006a75) {\n            // Dispatch table entry for redeem(uint256)\n            var1 = 0x0338;\n            var temp30 = msg.data[0x04:0x24];\n            var2 = temp30;\n            var3 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n            var4 = 0x0de0b6b3a7640000;\n            var5 = 0x04a0;\n            var6 = var2;\n            var7 = storage[0x07];\n            var8 = 0x00;\n            var9 = var7 * var6;\n            var var10 = 0x0824;\n            var var11 = var8 == var6;\n        \n            if (var11) {\n                func_0227(var11);\n                var5 = func_0824(var6, var7, var8, var9);\n                func_04A0(var2, var3, var4, var5);\n                stop();\n            } else {\n                func_0221(var6, var7, var9, var11);\n                var5 = func_0824(var6, var7, var8, var9);\n                func_04A0(var2, var3, var4, var5);\n                stop();\n            }\n        } else if (var0 == 0xddca3f43) {\n            // Dispatch table entry for fee()\n            var1 = 0x0357;\n            var2 = storage[0x07];\n            goto label_0357;\n        } else if (var0 == 0xefc81a8c) {\n            // Dispatch table entry for create()\n            var1 = 0x0338;\n            var temp31 = memory[0x40:0x60];\n            memory[temp31:temp31 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n            var temp32 = 0x02 ** 0xa0 - 0x01;\n            memory[temp31 + 0x04:temp31 + 0x04 + 0x20] = temp32 & msg.sender;\n            memory[temp31 + 0x24:temp31 + 0x24 + 0x20] = msg.value;\n            var temp33 = memory[0x40:0x60];\n            var2 = storage[0x00] & temp32;\n            var3 = 0x0ecaea73;\n            var4 = temp31 + 0x44;\n            var temp34;\n            temp34, memory[temp33:temp33 + 0x00] = address(var2).call.gas(msg.gas - 0x61da)(memory[temp33:temp33 + temp31 - temp33 + 0x44]);\n        \n            if (!temp34) { goto label_0002; }\n        \n            create(var2, var3, var4);\n            stop();\n        } else if (var0 == 0xf0d9bb20) {\n            // Dispatch table entry for yesToken()\n            var1 = 0x033a;\n            var2 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n            goto label_033A;\n        } else { goto label_0098; }\n    }\n    \n    function resolve(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6, var arg7) {\n        if (memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20] & 0x02 ** 0xa0 - 0x01 != arg5) { goto label_0002; }\n    \n        if (storage[0x06] & 0xff) { goto label_0002; }\n    \n        arg4 = arg3;\n        arg5 = arg4 == 0x00;\n    \n        if (arg5) {\n            if (!arg5) {\n            label_009C:\n            \n            label_0002:\n                memory[0x40:0x60] = arg4;\n            \n                if (!msg.data.length) {\n                label_0098:\n                    arg4 = 0x0338;\n                    goto label_0002;\n                } else {\n                    arg4 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                \n                    if (arg4 == 0x11a9f10a) {\n                        arg5 = 0x033a;\n                        arg6 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n                    \n                    label_033A:\n                        var temp0 = memory[0x40:0x60];\n                        memory[temp0:temp0 + 0x20] = arg6 & 0x02 ** 0xa0 - 0x01;\n                        var temp1 = memory[0x40:0x60];\n                        return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n                    } else if (arg4 == 0x27793f87) {\n                        arg5 = 0x0357;\n                        arg6 = storage[0x05];\n                    \n                    label_0357:\n                        var temp2 = memory[0x40:0x60];\n                        memory[temp2:temp2 + 0x20] = arg6;\n                        var temp3 = memory[0x40:0x60];\n                        return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n                    } else if (arg4 == 0x3f6fa655) {\n                        arg5 = 0x0369;\n                        arg6 = storage[0x06] & 0xff;\n                        var temp4 = memory[0x40:0x60];\n                        memory[temp4:temp4 + 0x20] = !!arg6;\n                        var temp5 = memory[0x40:0x60];\n                        return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n                    } else if (arg4 == 0x5600f04f) {\n                        var temp6 = memory[0x40:0x60];\n                        arg6 = temp6;\n                        arg7 = 0x04;\n                        var temp7 = storage[arg7];\n                        var temp8 = (temp7 & !(temp7 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                        memory[0x40:0x60] = arg6 + (temp8 + 0x1f) / 0x20 * 0x20 + 0x20;\n                        memory[arg6:arg6 + 0x20] = temp8;\n                        arg5 = 0x037d;\n                        var var0 = temp8;\n                        var var1 = arg6 + 0x20;\n                        var var2 = arg7;\n                        var var3 = var0;\n                    \n                        if (!var3) {\n                            func_0416(arg7, var0, var1, var2, var3);\n                            var temp9 = memory[0x40:0x60];\n                            arg7 = temp9;\n                            var0 = arg7;\n                            var temp10 = var0 + 0x20;\n                            memory[var0:var0 + 0x20] = temp10 - var0;\n                            var temp11 = arg6;\n                            memory[temp10:temp10 + 0x20] = memory[temp11:temp11 + 0x20];\n                            var temp12 = temp10 + 0x20;\n                            var temp13 = memory[temp11:temp11 + 0x20];\n                            memory[temp12:temp12 + temp13] = address(0x04).call.gas((temp13 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp11 + 0x20:temp11 + 0x20 + temp13]);\n                            var1 = temp13 + temp12;\n                            var2 = temp13 & 0x1f;\n                        \n                            if (!var2) {\n                                var temp14 = memory[0x40:0x60];\n                                return memory[temp14:temp14 + var1 - temp14];\n                            } else {\n                                var temp15 = var2;\n                                var temp16 = var1 - temp15;\n                                memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                                var temp17 = memory[0x40:0x60];\n                                return memory[temp17:temp17 + (temp16 + 0x20) - temp17];\n                            }\n                        } else if (0x1f < var3) {\n                            var temp18 = var1;\n                            var temp19 = temp18 + var3;\n                            var1 = temp19;\n                            memory[0x00:0x20] = var2;\n                            var temp20 = keccak256(memory[0x00:0x20]);\n                            memory[temp18:temp18 + 0x20] = storage[temp20];\n                            var2 = temp20 + 0x01;\n                            var3 = temp18 + 0x20;\n                        \n                            if (var1 <= var3) { goto label_040D; }\n                        \n                        label_03F9:\n                            var temp21 = var2;\n                            var temp22 = var3;\n                            memory[temp22:temp22 + 0x20] = storage[temp21];\n                            var2 = temp21 + 0x01;\n                            var3 = temp22 + 0x20;\n                        \n                            if (var1 > var3) { goto label_03F9; }\n                        \n                        label_040D:\n                            var temp23 = var1;\n                            var temp24 = temp23 + (var3 - temp23 & 0x1f);\n                            var3 = temp23;\n                            var1 = temp24;\n                            func_0416(arg7, var0, var1, var2, var3);\n                            // Error: Could not resolve method call return address!\n                        } else {\n                            var temp25 = var1;\n                            memory[temp25:temp25 + 0x20] = storage[var2] / 0x0100 * 0x0100;\n                            var3 = var3;\n                            var1 = temp25 + 0x20;\n                            func_0416(arg7, var0, var1, var2, var3);\n                            // Error: Could not resolve method call return address!\n                        }\n                    } else if (arg4 == 0x65e17c9d) {\n                        arg5 = 0x033a;\n                        arg6 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else if (arg4 == 0x93854494) {\n                        arg5 = 0x0357;\n                        arg6 = storage[0x02];\n                        goto label_0357;\n                    } else if (arg4 == 0xa6403636) {\n                        arg5 = 0x0338;\n                        arg6 = msg.data[0x04:0x24];\n                        arg7 = msg.data[0x24:0x44];\n                        var0 = msg.data[0x44:0x64];\n                        var1 = msg.data[0x64:0x84];\n                        var temp26 = memory[0x40:0x60];\n                        memory[temp26:temp26 + 0x20] = storage[0x02];\n                        memory[temp26 + 0x20:temp26 + 0x20 + 0x20] = var1;\n                        var temp27 = memory[0x40:0x60];\n                        memory[temp27:temp27 + 0x20] = keccak256(memory[temp27:temp27 + temp26 - temp27 + 0x40]);\n                        memory[temp27 + 0x20:temp27 + 0x20 + 0x20] = arg6 & 0xff;\n                        memory[temp27 + 0x40:temp27 + 0x40 + 0x20] = arg7;\n                        memory[temp27 + 0x60:temp27 + 0x60 + 0x20] = var0;\n                        var temp28 = memory[0x40:0x60];\n                        var2 = 0x00;\n                        var3 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                        var var4 = 0x01;\n                        var var5 = temp27 + 0x80;\n                        var temp29;\n                        temp29, memory[temp28:temp28 + 0x20] = address(var4).call.gas(msg.gas - 0x61da).value(var2)(memory[temp28:temp28 + temp27 - temp28 + 0x80]);\n                    \n                        if (!temp29) { goto label_0002; }\n                    \n                        resolve(arg6, arg7, var0, var1, var2, var3, var4, var5);\n                        stop();\n                    } else if (arg4 == 0xbbf646c2) {\n                        arg5 = 0x033a;\n                        arg6 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else if (arg4 == 0xdb006a75) {\n                        arg5 = 0x0338;\n                        var temp30 = msg.data[0x04:0x24];\n                        arg6 = temp30;\n                        arg7 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                        var0 = 0x0de0b6b3a7640000;\n                        var1 = 0x04a0;\n                        var2 = arg6;\n                        var3 = storage[0x07];\n                        var4 = 0x00;\n                        var5 = var3 * var2;\n                        var var6 = 0x0824;\n                        var var7 = var4 == var2;\n                    \n                        if (var7) {\n                            func_0227(var7);\n                            var1 = func_0824(var2, var3, var4, var5);\n                            func_04A0(arg6, arg7, var0, var1);\n                            stop();\n                        } else {\n                            func_0221(var2, var3, var5, var7);\n                            var1 = func_0824(var2, var3, var4, var5);\n                            func_04A0(arg6, arg7, var0, var1);\n                            stop();\n                        }\n                    } else if (arg4 == 0xddca3f43) {\n                        arg5 = 0x0357;\n                        arg6 = storage[0x07];\n                        goto label_0357;\n                    } else if (arg4 == 0xefc81a8c) {\n                        arg5 = 0x0338;\n                        var temp31 = memory[0x40:0x60];\n                        memory[temp31:temp31 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n                        var temp32 = 0x02 ** 0xa0 - 0x01;\n                        memory[temp31 + 0x04:temp31 + 0x04 + 0x20] = temp32 & msg.sender;\n                        memory[temp31 + 0x24:temp31 + 0x24 + 0x20] = msg.value;\n                        var temp33 = memory[0x40:0x60];\n                        arg6 = storage[0x00] & temp32;\n                        arg7 = 0x0ecaea73;\n                        var0 = temp31 + 0x44;\n                        var temp34;\n                        temp34, memory[temp33:temp33 + 0x00] = address(arg6).call.gas(msg.gas - 0x61da)(memory[temp33:temp33 + temp31 - temp33 + 0x44]);\n                    \n                        if (!temp34) { goto label_0002; }\n                    \n                        create(arg6, arg7, var0);\n                        stop();\n                    } else if (arg4 == 0xf0d9bb20) {\n                        arg5 = 0x033a;\n                        arg6 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else { goto label_0098; }\n                }\n            } else {\n            label_0445:\n                var temp35 = arg4;\n                storage[0x05] = temp35;\n                var temp36 = (storage[0x06] & ~0xff) | 0x01;\n                storage[0x06] = temp36;\n                var temp37 = memory[0x40:0x60];\n                memory[temp37:temp37 + 0x20] = !!(temp36 & 0xff);\n                memory[temp37 + 0x20:temp37 + 0x20 + 0x20] = temp35;\n                var temp38 = memory[0x40:0x60];\n                log(memory[temp38:temp38 + temp37 - temp38 + 0x40], [0x25bdc110f1d57950be657c53d166f950a9db609cb04a7fbb52e4909d43b16516]);\n                return;\n            }\n        } else if (arg4 != 0x01) { goto label_009C; }\n        else { goto label_0445; }\n    }\n    \n    function func_0210(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n        var temp0 = arg0;\n        var var1 = arg1 * temp0;\n        var var2 = 0x0824;\n        var var3 = var0 == temp0;\n    \n        if (var3) {\n            func_0227(var3);\n            r0 = func_0824(arg0, arg1, var0, var1);\n            // Error: Could not resolve method call return address!\n        } else {\n            func_0221(arg0, arg1, var1, var3);\n            r0 = func_0824(arg0, arg1, var0, var1);\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function func_0221(var arg0, var arg1, var arg2, var arg3) {\n        arg3 = arg2 / arg0 == arg1;\n    \n        if (arg3) { return; }\n    \n    label_0002:\n        memory[0x40:0x60] = arg3;\n    \n        if (!msg.data.length) {\n        label_0098:\n            arg3 = 0x0338;\n            goto label_0002;\n        } else {\n            arg3 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (arg3 == 0x11a9f10a) {\n                var var0 = 0x033a;\n                var var1 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n            \n            label_033A:\n                var temp0 = memory[0x40:0x60];\n                memory[temp0:temp0 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                var temp1 = memory[0x40:0x60];\n                return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n            } else if (arg3 == 0x27793f87) {\n                var0 = 0x0357;\n                var1 = storage[0x05];\n            \n            label_0357:\n                var temp2 = memory[0x40:0x60];\n                memory[temp2:temp2 + 0x20] = var1;\n                var temp3 = memory[0x40:0x60];\n                return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n            } else if (arg3 == 0x3f6fa655) {\n                var0 = 0x0369;\n                var1 = storage[0x06] & 0xff;\n                var temp4 = memory[0x40:0x60];\n                memory[temp4:temp4 + 0x20] = !!var1;\n                var temp5 = memory[0x40:0x60];\n                return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n            } else if (arg3 == 0x5600f04f) {\n                var temp6 = memory[0x40:0x60];\n                var1 = temp6;\n                var var2 = 0x04;\n                var temp7 = storage[var2];\n                var temp8 = (temp7 & !(temp7 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                memory[0x40:0x60] = var1 + (temp8 + 0x1f) / 0x20 * 0x20 + 0x20;\n                memory[var1:var1 + 0x20] = temp8;\n                var0 = 0x037d;\n                var var3 = temp8;\n                var var4 = var1 + 0x20;\n                var var5 = var2;\n                var var6 = var3;\n            \n                if (!var6) {\n                    func_0416(var2, var3, var4, var5, var6);\n                    var temp9 = memory[0x40:0x60];\n                    var2 = temp9;\n                    var3 = var2;\n                    var temp10 = var3 + 0x20;\n                    memory[var3:var3 + 0x20] = temp10 - var3;\n                    var temp11 = var1;\n                    memory[temp10:temp10 + 0x20] = memory[temp11:temp11 + 0x20];\n                    var temp12 = temp10 + 0x20;\n                    var temp13 = memory[temp11:temp11 + 0x20];\n                    memory[temp12:temp12 + temp13] = address(0x04).call.gas((temp13 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp11 + 0x20:temp11 + 0x20 + temp13]);\n                    var4 = temp13 + temp12;\n                    var5 = temp13 & 0x1f;\n                \n                    if (!var5) {\n                        var temp14 = memory[0x40:0x60];\n                        return memory[temp14:temp14 + var4 - temp14];\n                    } else {\n                        var temp15 = var5;\n                        var temp16 = var4 - temp15;\n                        memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                        var temp17 = memory[0x40:0x60];\n                        return memory[temp17:temp17 + (temp16 + 0x20) - temp17];\n                    }\n                } else if (0x1f < var6) {\n                    var temp18 = var4;\n                    var temp19 = temp18 + var6;\n                    var4 = temp19;\n                    memory[0x00:0x20] = var5;\n                    var temp20 = keccak256(memory[0x00:0x20]);\n                    memory[temp18:temp18 + 0x20] = storage[temp20];\n                    var5 = temp20 + 0x01;\n                    var6 = temp18 + 0x20;\n                \n                    if (var4 <= var6) { goto label_040D; }\n                \n                label_03F9:\n                    var temp21 = var5;\n                    var temp22 = var6;\n                    memory[temp22:temp22 + 0x20] = storage[temp21];\n                    var5 = temp21 + 0x01;\n                    var6 = temp22 + 0x20;\n                \n                    if (var4 > var6) { goto label_03F9; }\n                \n                label_040D:\n                    var temp23 = var4;\n                    var temp24 = temp23 + (var6 - temp23 & 0x1f);\n                    var6 = temp23;\n                    var4 = temp24;\n                    func_0416(var2, var3, var4, var5, var6);\n                    // Error: Could not resolve method call return address!\n                } else {\n                    var temp25 = var4;\n                    memory[temp25:temp25 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n                    var6 = var6;\n                    var4 = temp25 + 0x20;\n                    func_0416(var2, var3, var4, var5, var6);\n                    // Error: Could not resolve method call return address!\n                }\n            } else if (arg3 == 0x65e17c9d) {\n                var0 = 0x033a;\n                var1 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else if (arg3 == 0x93854494) {\n                var0 = 0x0357;\n                var1 = storage[0x02];\n                goto label_0357;\n            } else if (arg3 == 0xa6403636) {\n                var0 = 0x0338;\n                var1 = msg.data[0x04:0x24];\n                var2 = msg.data[0x24:0x44];\n                var3 = msg.data[0x44:0x64];\n                var4 = msg.data[0x64:0x84];\n                var temp26 = memory[0x40:0x60];\n                memory[temp26:temp26 + 0x20] = storage[0x02];\n                memory[temp26 + 0x20:temp26 + 0x20 + 0x20] = var4;\n                var temp27 = memory[0x40:0x60];\n                memory[temp27:temp27 + 0x20] = keccak256(memory[temp27:temp27 + temp26 - temp27 + 0x40]);\n                memory[temp27 + 0x20:temp27 + 0x20 + 0x20] = var1 & 0xff;\n                memory[temp27 + 0x40:temp27 + 0x40 + 0x20] = var2;\n                memory[temp27 + 0x60:temp27 + 0x60 + 0x20] = var3;\n                var temp28 = memory[0x40:0x60];\n                var5 = 0x00;\n                var6 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                var var7 = 0x01;\n                var var8 = temp27 + 0x80;\n                var temp29;\n                temp29, memory[temp28:temp28 + 0x20] = address(var7).call.gas(msg.gas - 0x61da).value(var5)(memory[temp28:temp28 + temp27 - temp28 + 0x80]);\n            \n                if (!temp29) { goto label_0002; }\n            \n                resolve(var1, var2, var3, var4, var5, var6, var7, var8);\n                stop();\n            } else if (arg3 == 0xbbf646c2) {\n                var0 = 0x033a;\n                var1 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else if (arg3 == 0xdb006a75) {\n                var0 = 0x0338;\n                var temp30 = msg.data[0x04:0x24];\n                var1 = temp30;\n                var2 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                var3 = 0x0de0b6b3a7640000;\n                var4 = 0x04a0;\n                var5 = var1;\n                var6 = storage[0x07];\n                var7 = 0x00;\n                var8 = var6 * var5;\n                var var9 = 0x0824;\n                var var10 = var7 == var5;\n            \n                if (var10) {\n                    func_0227(var10);\n                    var4 = func_0824(var5, var6, var7, var8);\n                    func_04A0(var1, var2, var3, var4);\n                    stop();\n                } else {\n                    func_0221(var5, var6, var8, var10);\n                    var4 = func_0824(var5, var6, var7, var8);\n                    func_04A0(var1, var2, var3, var4);\n                    stop();\n                }\n            } else if (arg3 == 0xddca3f43) {\n                var0 = 0x0357;\n                var1 = storage[0x07];\n                goto label_0357;\n            } else if (arg3 == 0xefc81a8c) {\n                var0 = 0x0338;\n                var temp31 = memory[0x40:0x60];\n                memory[temp31:temp31 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n                var temp32 = 0x02 ** 0xa0 - 0x01;\n                memory[temp31 + 0x04:temp31 + 0x04 + 0x20] = temp32 & msg.sender;\n                memory[temp31 + 0x24:temp31 + 0x24 + 0x20] = msg.value;\n                var temp33 = memory[0x40:0x60];\n                var1 = storage[0x00] & temp32;\n                var2 = 0x0ecaea73;\n                var3 = temp31 + 0x44;\n                var temp34;\n                temp34, memory[temp33:temp33 + 0x00] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp33:temp33 + temp31 - temp33 + 0x44]);\n            \n                if (!temp34) { goto label_0002; }\n            \n                create(var1, var2, var3);\n                stop();\n            } else if (arg3 == 0xf0d9bb20) {\n                var0 = 0x033a;\n                var1 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else { goto label_0098; }\n        }\n    }\n    \n    function func_0227(var arg0) {\n        if (arg0) { return; }\n    \n    label_0002:\n        memory[0x40:0x60] = arg0;\n    \n        if (!msg.data.length) {\n        label_0098:\n            arg0 = 0x0338;\n            goto label_0002;\n        } else {\n            arg0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (arg0 == 0x11a9f10a) {\n                var var0 = 0x033a;\n                var var1 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n            \n            label_033A:\n                var temp0 = memory[0x40:0x60];\n                memory[temp0:temp0 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                var temp1 = memory[0x40:0x60];\n                return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n            } else if (arg0 == 0x27793f87) {\n                var0 = 0x0357;\n                var1 = storage[0x05];\n            \n            label_0357:\n                var temp2 = memory[0x40:0x60];\n                memory[temp2:temp2 + 0x20] = var1;\n                var temp3 = memory[0x40:0x60];\n                return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n            } else if (arg0 == 0x3f6fa655) {\n                var0 = 0x0369;\n                var1 = storage[0x06] & 0xff;\n                var temp4 = memory[0x40:0x60];\n                memory[temp4:temp4 + 0x20] = !!var1;\n                var temp5 = memory[0x40:0x60];\n                return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n            } else if (arg0 == 0x5600f04f) {\n                var temp6 = memory[0x40:0x60];\n                var1 = temp6;\n                var var2 = 0x04;\n                var temp7 = storage[var2];\n                var temp8 = (temp7 & !(temp7 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                memory[0x40:0x60] = var1 + (temp8 + 0x1f) / 0x20 * 0x20 + 0x20;\n                memory[var1:var1 + 0x20] = temp8;\n                var0 = 0x037d;\n                var var3 = temp8;\n                var var4 = var1 + 0x20;\n                var var5 = var2;\n                var var6 = var3;\n            \n                if (!var6) {\n                    func_0416(var2, var3, var4, var5, var6);\n                    var temp9 = memory[0x40:0x60];\n                    var2 = temp9;\n                    var3 = var2;\n                    var temp10 = var3 + 0x20;\n                    memory[var3:var3 + 0x20] = temp10 - var3;\n                    var temp11 = var1;\n                    memory[temp10:temp10 + 0x20] = memory[temp11:temp11 + 0x20];\n                    var temp12 = temp10 + 0x20;\n                    var temp13 = memory[temp11:temp11 + 0x20];\n                    memory[temp12:temp12 + temp13] = address(0x04).call.gas((temp13 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp11 + 0x20:temp11 + 0x20 + temp13]);\n                    var4 = temp13 + temp12;\n                    var5 = temp13 & 0x1f;\n                \n                    if (!var5) {\n                        var temp14 = memory[0x40:0x60];\n                        return memory[temp14:temp14 + var4 - temp14];\n                    } else {\n                        var temp15 = var5;\n                        var temp16 = var4 - temp15;\n                        memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                        var temp17 = memory[0x40:0x60];\n                        return memory[temp17:temp17 + (temp16 + 0x20) - temp17];\n                    }\n                } else if (0x1f < var6) {\n                    var temp18 = var4;\n                    var temp19 = temp18 + var6;\n                    var4 = temp19;\n                    memory[0x00:0x20] = var5;\n                    var temp20 = keccak256(memory[0x00:0x20]);\n                    memory[temp18:temp18 + 0x20] = storage[temp20];\n                    var5 = temp20 + 0x01;\n                    var6 = temp18 + 0x20;\n                \n                    if (var4 <= var6) { goto label_040D; }\n                \n                label_03F9:\n                    var temp21 = var5;\n                    var temp22 = var6;\n                    memory[temp22:temp22 + 0x20] = storage[temp21];\n                    var5 = temp21 + 0x01;\n                    var6 = temp22 + 0x20;\n                \n                    if (var4 > var6) { goto label_03F9; }\n                \n                label_040D:\n                    var temp23 = var4;\n                    var temp24 = temp23 + (var6 - temp23 & 0x1f);\n                    var6 = temp23;\n                    var4 = temp24;\n                    func_0416(var2, var3, var4, var5, var6);\n                    // Error: Could not resolve method call return address!\n                } else {\n                    var temp25 = var4;\n                    memory[temp25:temp25 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n                    var6 = var6;\n                    var4 = temp25 + 0x20;\n                    func_0416(var2, var3, var4, var5, var6);\n                    // Error: Could not resolve method call return address!\n                }\n            } else if (arg0 == 0x65e17c9d) {\n                var0 = 0x033a;\n                var1 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else if (arg0 == 0x93854494) {\n                var0 = 0x0357;\n                var1 = storage[0x02];\n                goto label_0357;\n            } else if (arg0 == 0xa6403636) {\n                var0 = 0x0338;\n                var1 = msg.data[0x04:0x24];\n                var2 = msg.data[0x24:0x44];\n                var3 = msg.data[0x44:0x64];\n                var4 = msg.data[0x64:0x84];\n                var temp26 = memory[0x40:0x60];\n                memory[temp26:temp26 + 0x20] = storage[0x02];\n                memory[temp26 + 0x20:temp26 + 0x20 + 0x20] = var4;\n                var temp27 = memory[0x40:0x60];\n                memory[temp27:temp27 + 0x20] = keccak256(memory[temp27:temp27 + temp26 - temp27 + 0x40]);\n                memory[temp27 + 0x20:temp27 + 0x20 + 0x20] = var1 & 0xff;\n                memory[temp27 + 0x40:temp27 + 0x40 + 0x20] = var2;\n                memory[temp27 + 0x60:temp27 + 0x60 + 0x20] = var3;\n                var temp28 = memory[0x40:0x60];\n                var5 = 0x00;\n                var6 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                var var7 = 0x01;\n                var var8 = temp27 + 0x80;\n                var temp29;\n                temp29, memory[temp28:temp28 + 0x20] = address(var7).call.gas(msg.gas - 0x61da).value(var5)(memory[temp28:temp28 + temp27 - temp28 + 0x80]);\n            \n                if (!temp29) { goto label_0002; }\n            \n                resolve(var1, var2, var3, var4, var5, var6, var7, var8);\n                stop();\n            } else if (arg0 == 0xbbf646c2) {\n                var0 = 0x033a;\n                var1 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else if (arg0 == 0xdb006a75) {\n                var0 = 0x0338;\n                var temp30 = msg.data[0x04:0x24];\n                var1 = temp30;\n                var2 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                var3 = 0x0de0b6b3a7640000;\n                var4 = 0x04a0;\n                var5 = var1;\n                var6 = storage[0x07];\n                var7 = 0x00;\n                var8 = var6 * var5;\n                var var9 = 0x0824;\n                var var10 = var7 == var5;\n            \n                if (var10) {\n                    func_0227(var10);\n                    var4 = func_0824(var5, var6, var7, var8);\n                    func_04A0(var1, var2, var3, var4);\n                    stop();\n                } else {\n                    func_0221(var5, var6, var8, var10);\n                    var4 = func_0824(var5, var6, var7, var8);\n                    func_04A0(var1, var2, var3, var4);\n                    stop();\n                }\n            } else if (arg0 == 0xddca3f43) {\n                var0 = 0x0357;\n                var1 = storage[0x07];\n                goto label_0357;\n            } else if (arg0 == 0xefc81a8c) {\n                var0 = 0x0338;\n                var temp31 = memory[0x40:0x60];\n                memory[temp31:temp31 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n                var temp32 = 0x02 ** 0xa0 - 0x01;\n                memory[temp31 + 0x04:temp31 + 0x04 + 0x20] = temp32 & msg.sender;\n                memory[temp31 + 0x24:temp31 + 0x24 + 0x20] = msg.value;\n                var temp33 = memory[0x40:0x60];\n                var1 = storage[0x00] & temp32;\n                var2 = 0x0ecaea73;\n                var3 = temp31 + 0x44;\n                var temp34;\n                temp34, memory[temp33:temp33 + 0x00] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp33:temp33 + temp31 - temp33 + 0x44]);\n            \n                if (!temp34) { goto label_0002; }\n            \n                create(var1, var2, var3);\n                stop();\n            } else if (arg0 == 0xf0d9bb20) {\n                var0 = 0x033a;\n                var1 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else { goto label_0098; }\n        }\n    }\n    \n    function create(var arg0, var arg1, var arg2) {\n        var temp0 = memory[0x40:0x60];\n        memory[temp0:temp0 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n        var temp1 = 0x02 ** 0xa0 - 0x01;\n        memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = temp1 & msg.sender;\n        memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = msg.value;\n        var temp2 = memory[0x40:0x60];\n        arg0 = temp1 & storage[0x01];\n        arg2 = temp0 + 0x44;\n        var temp3;\n        temp3, memory[temp2:temp2 + 0x00] = address(arg0).call.gas(msg.gas - 0x61da)(memory[temp2:temp2 + temp0 - temp2 + 0x44]);\n    \n        if (!temp3) {\n        label_0002:\n            memory[0x40:0x60] = arg2;\n        \n            if (!msg.data.length) {\n            label_0098:\n                arg2 = 0x0338;\n                goto label_0002;\n            } else {\n                arg2 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n            \n                if (arg2 == 0x11a9f10a) {\n                    var var0 = 0x033a;\n                    var var1 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n                \n                label_033A:\n                    var temp4 = memory[0x40:0x60];\n                    memory[temp4:temp4 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                    var temp5 = memory[0x40:0x60];\n                    return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n                } else if (arg2 == 0x27793f87) {\n                    var0 = 0x0357;\n                    var1 = storage[0x05];\n                \n                label_0357:\n                    var temp6 = memory[0x40:0x60];\n                    memory[temp6:temp6 + 0x20] = var1;\n                    var temp7 = memory[0x40:0x60];\n                    return memory[temp7:temp7 + temp6 - temp7 + 0x20];\n                } else if (arg2 == 0x3f6fa655) {\n                    var0 = 0x0369;\n                    var1 = storage[0x06] & 0xff;\n                    var temp8 = memory[0x40:0x60];\n                    memory[temp8:temp8 + 0x20] = !!var1;\n                    var temp9 = memory[0x40:0x60];\n                    return memory[temp9:temp9 + temp8 - temp9 + 0x20];\n                } else if (arg2 == 0x5600f04f) {\n                    var temp10 = memory[0x40:0x60];\n                    var1 = temp10;\n                    var var2 = 0x04;\n                    var temp11 = storage[var2];\n                    var temp12 = (temp11 & !(temp11 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                    memory[0x40:0x60] = var1 + (temp12 + 0x1f) / 0x20 * 0x20 + 0x20;\n                    memory[var1:var1 + 0x20] = temp12;\n                    var0 = 0x037d;\n                    var var3 = temp12;\n                    var var4 = var1 + 0x20;\n                    var var5 = var2;\n                    var var6 = var3;\n                \n                    if (!var6) {\n                        func_0416(var2, var3, var4, var5, var6);\n                        var temp13 = memory[0x40:0x60];\n                        var2 = temp13;\n                        var3 = var2;\n                        var temp14 = var3 + 0x20;\n                        memory[var3:var3 + 0x20] = temp14 - var3;\n                        var temp15 = var1;\n                        memory[temp14:temp14 + 0x20] = memory[temp15:temp15 + 0x20];\n                        var temp16 = temp14 + 0x20;\n                        var temp17 = memory[temp15:temp15 + 0x20];\n                        memory[temp16:temp16 + temp17] = address(0x04).call.gas((temp17 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp15 + 0x20:temp15 + 0x20 + temp17]);\n                        var4 = temp17 + temp16;\n                        var5 = temp17 & 0x1f;\n                    \n                        if (!var5) {\n                            var temp18 = memory[0x40:0x60];\n                            return memory[temp18:temp18 + var4 - temp18];\n                        } else {\n                            var temp19 = var5;\n                            var temp20 = var4 - temp19;\n                            memory[temp20:temp20 + 0x20] = ~(0x0100 ** (0x20 - temp19) - 0x01) & memory[temp20:temp20 + 0x20];\n                            var temp21 = memory[0x40:0x60];\n                            return memory[temp21:temp21 + (temp20 + 0x20) - temp21];\n                        }\n                    } else if (0x1f < var6) {\n                        var temp22 = var4;\n                        var temp23 = temp22 + var6;\n                        var4 = temp23;\n                        memory[0x00:0x20] = var5;\n                        var temp24 = keccak256(memory[0x00:0x20]);\n                        memory[temp22:temp22 + 0x20] = storage[temp24];\n                        var5 = temp24 + 0x01;\n                        var6 = temp22 + 0x20;\n                    \n                        if (var4 <= var6) { goto label_040D; }\n                    \n                    label_03F9:\n                        var temp25 = var5;\n                        var temp26 = var6;\n                        memory[temp26:temp26 + 0x20] = storage[temp25];\n                        var5 = temp25 + 0x01;\n                        var6 = temp26 + 0x20;\n                    \n                        if (var4 > var6) { goto label_03F9; }\n                    \n                    label_040D:\n                        var temp27 = var4;\n                        var temp28 = temp27 + (var6 - temp27 & 0x1f);\n                        var6 = temp27;\n                        var4 = temp28;\n                        func_0416(var2, var3, var4, var5, var6);\n                        // Error: Could not resolve method call return address!\n                    } else {\n                        var temp29 = var4;\n                        memory[temp29:temp29 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n                        var6 = var6;\n                        var4 = temp29 + 0x20;\n                        func_0416(var2, var3, var4, var5, var6);\n                        // Error: Could not resolve method call return address!\n                    }\n                } else if (arg2 == 0x65e17c9d) {\n                    var0 = 0x033a;\n                    var1 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                    goto label_033A;\n                } else if (arg2 == 0x93854494) {\n                    var0 = 0x0357;\n                    var1 = storage[0x02];\n                    goto label_0357;\n                } else if (arg2 == 0xa6403636) {\n                    var0 = 0x0338;\n                    var1 = msg.data[0x04:0x24];\n                    var2 = msg.data[0x24:0x44];\n                    var3 = msg.data[0x44:0x64];\n                    var4 = msg.data[0x64:0x84];\n                    var temp30 = memory[0x40:0x60];\n                    memory[temp30:temp30 + 0x20] = storage[0x02];\n                    memory[temp30 + 0x20:temp30 + 0x20 + 0x20] = var4;\n                    var temp31 = memory[0x40:0x60];\n                    memory[temp31:temp31 + 0x20] = keccak256(memory[temp31:temp31 + temp30 - temp31 + 0x40]);\n                    memory[temp31 + 0x20:temp31 + 0x20 + 0x20] = var1 & 0xff;\n                    memory[temp31 + 0x40:temp31 + 0x40 + 0x20] = var2;\n                    memory[temp31 + 0x60:temp31 + 0x60 + 0x20] = var3;\n                    var temp32 = memory[0x40:0x60];\n                    var5 = 0x00;\n                    var6 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                    var var7 = 0x01;\n                    var var8 = temp31 + 0x80;\n                    var temp33;\n                    temp33, memory[temp32:temp32 + 0x20] = address(var7).call.gas(msg.gas - 0x61da).value(var5)(memory[temp32:temp32 + temp31 - temp32 + 0x80]);\n                \n                    if (!temp33) { goto label_0002; }\n                \n                    resolve(var1, var2, var3, var4, var5, var6, var7, var8);\n                    stop();\n                } else if (arg2 == 0xbbf646c2) {\n                    var0 = 0x033a;\n                    var1 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                    goto label_033A;\n                } else if (arg2 == 0xdb006a75) {\n                    var0 = 0x0338;\n                    var temp34 = msg.data[0x04:0x24];\n                    var1 = temp34;\n                    var2 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                    var3 = 0x0de0b6b3a7640000;\n                    var4 = 0x04a0;\n                    var5 = var1;\n                    var6 = storage[0x07];\n                    var7 = 0x00;\n                    var8 = var6 * var5;\n                    var var9 = 0x0824;\n                    var var10 = var7 == var5;\n                \n                    if (var10) {\n                        func_0227(var10);\n                        var4 = func_0824(var5, var6, var7, var8);\n                        func_04A0(var1, var2, var3, var4);\n                        stop();\n                    } else {\n                        func_0221(var5, var6, var8, var10);\n                        var4 = func_0824(var5, var6, var7, var8);\n                        func_04A0(var1, var2, var3, var4);\n                        stop();\n                    }\n                } else if (arg2 == 0xddca3f43) {\n                    var0 = 0x0357;\n                    var1 = storage[0x07];\n                    goto label_0357;\n                } else if (arg2 == 0xefc81a8c) {\n                    var0 = 0x0338;\n                    var temp35 = memory[0x40:0x60];\n                    memory[temp35:temp35 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n                    var temp36 = 0x02 ** 0xa0 - 0x01;\n                    memory[temp35 + 0x04:temp35 + 0x04 + 0x20] = temp36 & msg.sender;\n                    memory[temp35 + 0x24:temp35 + 0x24 + 0x20] = msg.value;\n                    var temp37 = memory[0x40:0x60];\n                    var1 = storage[0x00] & temp36;\n                    var2 = 0x0ecaea73;\n                    var3 = temp35 + 0x44;\n                    var temp38;\n                    temp38, memory[temp37:temp37 + 0x00] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp37:temp37 + temp35 - temp37 + 0x44]);\n                \n                    if (!temp38) { goto label_0002; }\n                \n                    create(var1, var2, var3);\n                    stop();\n                } else if (arg2 == 0xf0d9bb20) {\n                    var0 = 0x033a;\n                    var1 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n                    goto label_033A;\n                } else { goto label_0098; }\n            }\n        } else {\n            var temp39 = memory[0x40:0x60];\n            memory[temp39:temp39 + 0x20] = msg.value;\n            var temp40 = memory[0x40:0x60];\n            log(memory[temp40:temp40 + temp39 - temp40 + 0x20], [0xcc9018de05b5f497ee7618d8830568d8ac2d45d0671b73d8f71c67e824122ec7, msg.sender]);\n            return;\n        }\n    }\n    \n    function func_0416(var arg0, var arg1, var arg2, var arg3, var arg4) {}\n    \n    function func_04A0(var arg0, var arg1, var arg2, var arg3) {\n        var temp0 = memory[0x40:0x60];\n        var temp1;\n        temp1, memory[temp0:temp0 + 0x00] = address(arg1).call.gas(msg.gas - 0x8502).value(arg3 / arg2)(memory[temp0:temp0 + 0x00]);\n    \n        if (!temp1) { goto label_0002; }\n    \n        if (!(storage[0x06] & 0xff)) {\n            var temp55 = memory[0x40:0x60];\n            memory[temp55:temp55 + 0x20] = 0xa24835d1 * 0x02 ** 0xe0;\n            var temp56 = 0x02 ** 0xa0 - 0x01;\n            memory[temp55 + 0x04:temp55 + 0x04 + 0x20] = temp56 & msg.sender;\n            memory[temp55 + 0x24:temp55 + 0x24 + 0x20] = arg0;\n            var temp57 = memory[0x40:0x60];\n            arg1 = temp56 & storage[0x00];\n            arg2 = 0xa24835d1;\n            arg3 = temp55 + 0x44;\n            var temp58;\n            temp58, memory[temp57:temp57 + 0x00] = address(arg1).call.gas(msg.gas - 0x61da)(memory[temp57:temp57 + temp55 - temp57 + 0x44]);\n        \n            if (!temp58) { goto label_0002; }\n        \n            var temp59 = memory[0x40:0x60];\n            memory[temp59:temp59 + 0x20] = 0xa24835d1 * 0x02 ** 0xe0;\n            var temp60 = 0x02 ** 0xa0 - 0x01;\n            memory[temp59 + 0x04:temp59 + 0x04 + 0x20] = temp60 & msg.sender;\n            memory[temp59 + 0x24:temp59 + 0x24 + 0x20] = arg0;\n            var temp61 = memory[0x40:0x60];\n            arg1 = temp60 & storage[0x01];\n            arg3 = temp59 + 0x44;\n            var temp62;\n            temp62, memory[temp61:temp61 + 0x00] = address(arg1).call.gas(msg.gas - 0x61da)(memory[temp61:temp61 + temp59 - temp61 + 0x44]);\n        \n            if (!temp62) { goto label_0002; }\n        \n            arg1 = msg.sender;\n            arg2 = 0x0de0b6b3a7640000;\n            arg3 = 0x063d;\n            var0 = arg0;\n            var1 = 0x0de0b6b3a7640000 - storage[0x07];\n            arg3 = func_0210(var0, var1);\n            var temp63 = memory[0x40:0x60];\n            var temp64;\n            temp64, memory[temp63:temp63 + 0x00] = address(arg1).call.gas(msg.gas - 0x8502).value(arg3 / arg2)(memory[temp63:temp63 + 0x00]);\n        \n            if (!temp64) { goto label_0002; }\n        \n            var temp65 = memory[0x40:0x60];\n            var temp66 = arg0;\n            memory[temp65:temp65 + 0x20] = temp66;\n            memory[temp65 + 0x20:temp65 + 0x20 + 0x20] = temp66;\n            memory[temp65 + 0x40:temp65 + 0x40 + 0x20] = temp66;\n            var temp67 = memory[0x40:0x60];\n            log(memory[temp67:temp67 + temp65 - temp67 + 0x60], [0xbd5034ffbd47e4e72a94baa2cdb74c6fad73cb3bcdc13036b72ec8306f5a7646, msg.sender]);\n            goto label_07FE;\n        } else if (!(storage[0x06] & 0xff)) {\n        label_07FE:\n            return;\n        } else if (storage[0x05] == 0x00) {\n            var temp46 = memory[0x40:0x60];\n            memory[temp46:temp46 + 0x20] = 0xa24835d1 * 0x02 ** 0xe0;\n            var temp47 = 0x02 ** 0xa0 - 0x01;\n            memory[temp46 + 0x04:temp46 + 0x04 + 0x20] = temp47 & msg.sender;\n            memory[temp46 + 0x24:temp46 + 0x24 + 0x20] = arg0;\n            var temp48 = memory[0x40:0x60];\n            arg1 = temp47 & storage[0x01];\n            arg2 = 0xa24835d1;\n            arg3 = temp46 + 0x44;\n            var temp49;\n            temp49, memory[temp48:temp48 + 0x00] = address(arg1).call.gas(msg.gas - 0x61da)(memory[temp48:temp48 + temp46 - temp48 + 0x44]);\n        \n            if (!temp49) { goto label_0002; }\n        \n            arg1 = msg.sender;\n            arg2 = 0x0de0b6b3a7640000;\n            arg3 = 0x073d;\n            var0 = arg0;\n            var1 = 0x0de0b6b3a7640000 - storage[0x07];\n            arg3 = func_0210(var0, var1);\n            var temp50 = memory[0x40:0x60];\n            var temp51;\n            temp51, memory[temp50:temp50 + 0x00] = address(arg1).call.gas(msg.gas - 0x8502).value(arg3 / arg2)(memory[temp50:temp50 + 0x00]);\n        \n            if (!temp51) { goto label_0002; }\n        \n            var temp52 = memory[0x40:0x60];\n            var temp53 = arg0;\n            memory[temp52:temp52 + 0x20] = temp53;\n            memory[temp52 + 0x20:temp52 + 0x20 + 0x20] = 0x00;\n            memory[temp52 + 0x40:temp52 + 0x40 + 0x20] = temp53;\n            var temp54 = memory[0x40:0x60];\n            log(memory[temp54:temp54 + temp52 - temp54 + 0x60], [0xbd5034ffbd47e4e72a94baa2cdb74c6fad73cb3bcdc13036b72ec8306f5a7646, msg.sender]);\n            goto label_07FE;\n        } else if (storage[0x05] != 0x01) { goto label_07FE; }\n        else {\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = 0xa24835d1 * 0x02 ** 0xe0;\n            var temp3 = 0x02 ** 0xa0 - 0x01;\n            memory[temp2 + 0x04:temp2 + 0x04 + 0x20] = temp3 & msg.sender;\n            memory[temp2 + 0x24:temp2 + 0x24 + 0x20] = arg0;\n            var temp4 = memory[0x40:0x60];\n            arg1 = temp3 & storage[0x00];\n            arg2 = 0xa24835d1;\n            arg3 = temp2 + 0x44;\n            var temp5;\n            temp5, memory[temp4:temp4 + 0x00] = address(arg1).call.gas(msg.gas - 0x61da)(memory[temp4:temp4 + temp2 - temp4 + 0x44]);\n        \n            if (!temp5) {\n            label_0002:\n                memory[0x40:0x60] = arg3;\n            \n                if (!msg.data.length) {\n                label_0098:\n                    arg3 = 0x0338;\n                    goto label_0002;\n                } else {\n                    arg3 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                \n                    if (arg3 == 0x11a9f10a) {\n                        var var0 = 0x033a;\n                        var var1 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n                    \n                    label_033A:\n                        var temp6 = memory[0x40:0x60];\n                        memory[temp6:temp6 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                        var temp7 = memory[0x40:0x60];\n                        return memory[temp7:temp7 + temp6 - temp7 + 0x20];\n                    } else if (arg3 == 0x27793f87) {\n                        var0 = 0x0357;\n                        var1 = storage[0x05];\n                    \n                    label_0357:\n                        var temp8 = memory[0x40:0x60];\n                        memory[temp8:temp8 + 0x20] = var1;\n                        var temp9 = memory[0x40:0x60];\n                        return memory[temp9:temp9 + temp8 - temp9 + 0x20];\n                    } else if (arg3 == 0x3f6fa655) {\n                        var0 = 0x0369;\n                        var1 = storage[0x06] & 0xff;\n                        var temp10 = memory[0x40:0x60];\n                        memory[temp10:temp10 + 0x20] = !!var1;\n                        var temp11 = memory[0x40:0x60];\n                        return memory[temp11:temp11 + temp10 - temp11 + 0x20];\n                    } else if (arg3 == 0x5600f04f) {\n                        var temp12 = memory[0x40:0x60];\n                        var1 = temp12;\n                        var var2 = 0x04;\n                        var temp13 = storage[var2];\n                        var temp14 = (temp13 & !(temp13 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                        memory[0x40:0x60] = var1 + (temp14 + 0x1f) / 0x20 * 0x20 + 0x20;\n                        memory[var1:var1 + 0x20] = temp14;\n                        var0 = 0x037d;\n                        var var3 = temp14;\n                        var var4 = var1 + 0x20;\n                        var var5 = var2;\n                        var var6 = var3;\n                    \n                        if (!var6) {\n                            func_0416(var2, var3, var4, var5, var6);\n                            var temp15 = memory[0x40:0x60];\n                            var2 = temp15;\n                            var3 = var2;\n                            var temp16 = var3 + 0x20;\n                            memory[var3:var3 + 0x20] = temp16 - var3;\n                            var temp17 = var1;\n                            memory[temp16:temp16 + 0x20] = memory[temp17:temp17 + 0x20];\n                            var temp18 = temp16 + 0x20;\n                            var temp19 = memory[temp17:temp17 + 0x20];\n                            memory[temp18:temp18 + temp19] = address(0x04).call.gas((temp19 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp17 + 0x20:temp17 + 0x20 + temp19]);\n                            var4 = temp19 + temp18;\n                            var5 = temp19 & 0x1f;\n                        \n                            if (!var5) {\n                                var temp20 = memory[0x40:0x60];\n                                return memory[temp20:temp20 + var4 - temp20];\n                            } else {\n                                var temp21 = var5;\n                                var temp22 = var4 - temp21;\n                                memory[temp22:temp22 + 0x20] = ~(0x0100 ** (0x20 - temp21) - 0x01) & memory[temp22:temp22 + 0x20];\n                                var temp23 = memory[0x40:0x60];\n                                return memory[temp23:temp23 + (temp22 + 0x20) - temp23];\n                            }\n                        } else if (0x1f < var6) {\n                            var temp24 = var4;\n                            var temp25 = temp24 + var6;\n                            var4 = temp25;\n                            memory[0x00:0x20] = var5;\n                            var temp26 = keccak256(memory[0x00:0x20]);\n                            memory[temp24:temp24 + 0x20] = storage[temp26];\n                            var5 = temp26 + 0x01;\n                            var6 = temp24 + 0x20;\n                        \n                            if (var4 <= var6) { goto label_040D; }\n                        \n                        label_03F9:\n                            var temp27 = var5;\n                            var temp28 = var6;\n                            memory[temp28:temp28 + 0x20] = storage[temp27];\n                            var5 = temp27 + 0x01;\n                            var6 = temp28 + 0x20;\n                        \n                            if (var4 > var6) { goto label_03F9; }\n                        \n                        label_040D:\n                            var temp29 = var4;\n                            var temp30 = temp29 + (var6 - temp29 & 0x1f);\n                            var6 = temp29;\n                            var4 = temp30;\n                            func_0416(var2, var3, var4, var5, var6);\n                            // Error: Could not resolve method call return address!\n                        } else {\n                            var temp31 = var4;\n                            memory[temp31:temp31 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n                            var6 = var6;\n                            var4 = temp31 + 0x20;\n                            func_0416(var2, var3, var4, var5, var6);\n                            // Error: Could not resolve method call return address!\n                        }\n                    } else if (arg3 == 0x65e17c9d) {\n                        var0 = 0x033a;\n                        var1 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else if (arg3 == 0x93854494) {\n                        var0 = 0x0357;\n                        var1 = storage[0x02];\n                        goto label_0357;\n                    } else if (arg3 == 0xa6403636) {\n                        var0 = 0x0338;\n                        var1 = msg.data[0x04:0x24];\n                        var2 = msg.data[0x24:0x44];\n                        var3 = msg.data[0x44:0x64];\n                        var4 = msg.data[0x64:0x84];\n                        var temp32 = memory[0x40:0x60];\n                        memory[temp32:temp32 + 0x20] = storage[0x02];\n                        memory[temp32 + 0x20:temp32 + 0x20 + 0x20] = var4;\n                        var temp33 = memory[0x40:0x60];\n                        memory[temp33:temp33 + 0x20] = keccak256(memory[temp33:temp33 + temp32 - temp33 + 0x40]);\n                        memory[temp33 + 0x20:temp33 + 0x20 + 0x20] = var1 & 0xff;\n                        memory[temp33 + 0x40:temp33 + 0x40 + 0x20] = var2;\n                        memory[temp33 + 0x60:temp33 + 0x60 + 0x20] = var3;\n                        var temp34 = memory[0x40:0x60];\n                        var5 = 0x00;\n                        var6 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                        var var7 = 0x01;\n                        var var8 = temp33 + 0x80;\n                        var temp35;\n                        temp35, memory[temp34:temp34 + 0x20] = address(var7).call.gas(msg.gas - 0x61da).value(var5)(memory[temp34:temp34 + temp33 - temp34 + 0x80]);\n                    \n                        if (!temp35) { goto label_0002; }\n                    \n                        resolve(var1, var2, var3, var4, var5, var6, var7, var8);\n                        stop();\n                    } else if (arg3 == 0xbbf646c2) {\n                        var0 = 0x033a;\n                        var1 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else if (arg3 == 0xdb006a75) {\n                        var0 = 0x0338;\n                        var temp36 = msg.data[0x04:0x24];\n                        var1 = temp36;\n                        var2 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                        var3 = 0x0de0b6b3a7640000;\n                        var4 = 0x04a0;\n                        var5 = var1;\n                        var6 = storage[0x07];\n                        var7 = 0x00;\n                        var8 = var6 * var5;\n                        var var9 = 0x0824;\n                        var var10 = var7 == var5;\n                    \n                        if (var10) {\n                            func_0227(var10);\n                            var4 = func_0824(var5, var6, var7, var8);\n                            func_04A0(var1, var2, var3, var4);\n                            stop();\n                        } else {\n                            func_0221(var5, var6, var8, var10);\n                            var4 = func_0824(var5, var6, var7, var8);\n                            func_04A0(var1, var2, var3, var4);\n                            stop();\n                        }\n                    } else if (arg3 == 0xddca3f43) {\n                        var0 = 0x0357;\n                        var1 = storage[0x07];\n                        goto label_0357;\n                    } else if (arg3 == 0xefc81a8c) {\n                        var0 = 0x0338;\n                        var temp37 = memory[0x40:0x60];\n                        memory[temp37:temp37 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n                        var temp38 = 0x02 ** 0xa0 - 0x01;\n                        memory[temp37 + 0x04:temp37 + 0x04 + 0x20] = temp38 & msg.sender;\n                        memory[temp37 + 0x24:temp37 + 0x24 + 0x20] = msg.value;\n                        var temp39 = memory[0x40:0x60];\n                        var1 = storage[0x00] & temp38;\n                        var2 = 0x0ecaea73;\n                        var3 = temp37 + 0x44;\n                        var temp40;\n                        temp40, memory[temp39:temp39 + 0x00] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp39:temp39 + temp37 - temp39 + 0x44]);\n                    \n                        if (!temp40) { goto label_0002; }\n                    \n                        create(var1, var2, var3);\n                        stop();\n                    } else if (arg3 == 0xf0d9bb20) {\n                        var0 = 0x033a;\n                        var1 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else { goto label_0098; }\n                }\n            } else {\n                arg1 = msg.sender;\n                arg2 = 0x0de0b6b3a7640000;\n                arg3 = 0x0801;\n                var0 = arg0;\n                var1 = 0x0de0b6b3a7640000 - storage[0x07];\n                arg3 = func_0210(var0, var1);\n                var temp41 = memory[0x40:0x60];\n                var temp42;\n                temp42, memory[temp41:temp41 + 0x00] = address(arg1).call.gas(msg.gas - 0x8502).value(arg3 / arg2)(memory[temp41:temp41 + 0x00]);\n            \n                if (!temp42) { goto label_0002; }\n            \n                var temp43 = memory[0x40:0x60];\n                var temp44 = arg0;\n                memory[temp43:temp43 + 0x20] = temp44;\n                memory[temp43 + 0x20:temp43 + 0x20 + 0x20] = temp44;\n                memory[temp43 + 0x40:temp43 + 0x40 + 0x20] = 0x00;\n                var temp45 = memory[0x40:0x60];\n                log(memory[temp45:temp45 + temp43 - temp45 + 0x60], [0xbd5034ffbd47e4e72a94baa2cdb74c6fad73cb3bcdc13036b72ec8306f5a7646, msg.sender]);\n                goto label_07FE;\n            }\n        }\n    }\n    \n    function func_0824(var arg0, var arg1, var arg2, var arg3) returns (var r0) { return arg3; }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n    \n        if (msg.data.length) { goto label_000B; }\n    \n    label_0098:\n        var var0 = 0x0338;\n    \n    label_0002:\n        memory[0x40:0x60] = var0;\n    \n        if (!msg.data.length) { goto label_0098; }\n    \n    label_000B:\n        var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n    \n        if (var0 == 0x11a9f10a) {\n            // Dispatch table entry for noToken()\n            var var1 = 0x033a;\n            var var2 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n        \n        label_033A:\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n            var temp1 = memory[0x40:0x60];\n            return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n        } else if (var0 == 0x27793f87) {\n            // Dispatch table entry for outcome()\n            var1 = 0x0357;\n            var2 = storage[0x05];\n        \n        label_0357:\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = var2;\n            var temp3 = memory[0x40:0x60];\n            return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n        } else if (var0 == 0x3f6fa655) {\n            // Dispatch table entry for resolved()\n            var1 = 0x0369;\n            var2 = storage[0x06] & 0xff;\n            var temp4 = memory[0x40:0x60];\n            memory[temp4:temp4 + 0x20] = !!var2;\n            var temp5 = memory[0x40:0x60];\n            return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n        } else if (var0 == 0x5600f04f) {\n            // Dispatch table entry for url()\n            var temp6 = memory[0x40:0x60];\n            var2 = temp6;\n            var var3 = 0x04;\n            var temp7 = storage[var3];\n            var temp8 = (temp7 & !(temp7 & 0x01) * 0x0100 + ~0x00) / 0x02;\n            memory[0x40:0x60] = var2 + (temp8 + 0x1f) / 0x20 * 0x20 + 0x20;\n            memory[var2:var2 + 0x20] = temp8;\n            var1 = 0x037d;\n            var var4 = temp8;\n            var var5 = var2 + 0x20;\n            var var6 = var3;\n            var var7 = var4;\n        \n            if (!var7) {\n                func_0416(var3, var4, var5, var6, var7);\n                var temp9 = memory[0x40:0x60];\n                var3 = temp9;\n                var4 = var3;\n                var temp10 = var4 + 0x20;\n                memory[var4:var4 + 0x20] = temp10 - var4;\n                var temp11 = var2;\n                memory[temp10:temp10 + 0x20] = memory[temp11:temp11 + 0x20];\n                var temp12 = temp10 + 0x20;\n                var temp13 = memory[temp11:temp11 + 0x20];\n                memory[temp12:temp12 + temp13] = address(0x04).call.gas((temp13 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp11 + 0x20:temp11 + 0x20 + temp13]);\n                var5 = temp13 + temp12;\n                var6 = temp13 & 0x1f;\n            \n                if (!var6) {\n                    var temp14 = memory[0x40:0x60];\n                    return memory[temp14:temp14 + var5 - temp14];\n                } else {\n                    var temp15 = var6;\n                    var temp16 = var5 - temp15;\n                    memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                    var temp17 = memory[0x40:0x60];\n                    return memory[temp17:temp17 + (temp16 + 0x20) - temp17];\n                }\n            } else if (0x1f < var7) {\n                var temp18 = var5;\n                var temp19 = temp18 + var7;\n                var5 = temp19;\n                memory[0x00:0x20] = var6;\n                var temp20 = keccak256(memory[0x00:0x20]);\n                memory[temp18:temp18 + 0x20] = storage[temp20];\n                var6 = temp20 + 0x01;\n                var7 = temp18 + 0x20;\n            \n                if (var5 <= var7) { goto label_040D; }\n            \n            label_03F9:\n                var temp21 = var6;\n                var temp22 = var7;\n                memory[temp22:temp22 + 0x20] = storage[temp21];\n                var6 = temp21 + 0x01;\n                var7 = temp22 + 0x20;\n            \n                if (var5 > var7) { goto label_03F9; }\n            \n            label_040D:\n                var temp23 = var5;\n                var temp24 = temp23 + (var7 - temp23 & 0x1f);\n                var7 = temp23;\n                var5 = temp24;\n                func_0416(var3, var4, var5, var6, var7);\n                // Error: Could not resolve method call return address!\n            } else {\n                var temp25 = var5;\n                memory[temp25:temp25 + 0x20] = storage[var6] / 0x0100 * 0x0100;\n                var7 = var7;\n                var5 = temp25 + 0x20;\n                func_0416(var3, var4, var5, var6, var7);\n                // Error: Could not resolve method call return address!\n            }\n        } else if (var0 == 0x65e17c9d) {\n            // Dispatch table entry for feeAccount()\n            var1 = 0x033a;\n            var2 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n            goto label_033A;\n        } else if (var0 == 0x93854494) {\n            // Dispatch table entry for factHash()\n            var1 = 0x0357;\n            var2 = storage[0x02];\n            goto label_0357;\n        } else if (var0 == 0xa6403636) {\n            // Dispatch table entry for resolve(uint8,bytes32,bytes32,bytes32)\n            var1 = 0x0338;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44];\n            var4 = msg.data[0x44:0x64];\n            var5 = msg.data[0x64:0x84];\n            var temp26 = memory[0x40:0x60];\n            memory[temp26:temp26 + 0x20] = storage[0x02];\n            memory[temp26 + 0x20:temp26 + 0x20 + 0x20] = var5;\n            var temp27 = memory[0x40:0x60];\n            memory[temp27:temp27 + 0x20] = keccak256(memory[temp27:temp27 + temp26 - temp27 + 0x40]);\n            memory[temp27 + 0x20:temp27 + 0x20 + 0x20] = var2 & 0xff;\n            memory[temp27 + 0x40:temp27 + 0x40 + 0x20] = var3;\n            memory[temp27 + 0x60:temp27 + 0x60 + 0x20] = var4;\n            var temp28 = memory[0x40:0x60];\n            var6 = 0x00;\n            var7 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n            var var8 = 0x01;\n            var var9 = temp27 + 0x80;\n            var temp29;\n            temp29, memory[temp28:temp28 + 0x20] = address(var8).call.gas(msg.gas - 0x61da).value(var6)(memory[temp28:temp28 + temp27 - temp28 + 0x80]);\n        \n            if (!temp29) { goto label_0002; }\n        \n            resolve(var2, var3, var4, var5, var6, var7, var8, var9);\n            stop();\n        } else if (var0 == 0xbbf646c2) {\n            // Dispatch table entry for ethAddr()\n            var1 = 0x033a;\n            var2 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n            goto label_033A;\n        } else if (var0 == 0xdb006a75) {\n            // Dispatch table entry for redeem(uint256)\n            var1 = 0x0338;\n            var temp30 = msg.data[0x04:0x24];\n            var2 = temp30;\n            var3 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n            var4 = 0x0de0b6b3a7640000;\n            var5 = 0x04a0;\n            var6 = var2;\n            var7 = storage[0x07];\n            var8 = 0x00;\n            var9 = var7 * var6;\n            var var10 = 0x0824;\n            var var11 = var8 == var6;\n        \n            if (var11) {\n                func_0227(var11);\n                var5 = func_0824(var6, var7, var8, var9);\n                func_04A0(var2, var3, var4, var5);\n                stop();\n            } else {\n                func_0221(var6, var7, var9, var11);\n                var5 = func_0824(var6, var7, var8, var9);\n                func_04A0(var2, var3, var4, var5);\n                stop();\n            }\n        } else if (var0 == 0xddca3f43) {\n            // Dispatch table entry for fee()\n            var1 = 0x0357;\n            var2 = storage[0x07];\n            goto label_0357;\n        } else if (var0 == 0xefc81a8c) {\n            // Dispatch table entry for create()\n            var1 = 0x0338;\n            var temp31 = memory[0x40:0x60];\n            memory[temp31:temp31 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n            var temp32 = 0x02 ** 0xa0 - 0x01;\n            memory[temp31 + 0x04:temp31 + 0x04 + 0x20] = temp32 & msg.sender;\n            memory[temp31 + 0x24:temp31 + 0x24 + 0x20] = msg.value;\n            var temp33 = memory[0x40:0x60];\n            var2 = storage[0x00] & temp32;\n            var3 = 0x0ecaea73;\n            var4 = temp31 + 0x44;\n            var temp34;\n            temp34, memory[temp33:temp33 + 0x00] = address(var2).call.gas(msg.gas - 0x61da)(memory[temp33:temp33 + temp31 - temp33 + 0x44]);\n        \n            if (!temp34) { goto label_0002; }\n        \n            create(var2, var3, var4);\n            stop();\n        } else if (var0 == 0xf0d9bb20) {\n            // Dispatch table entry for yesToken()\n            var1 = 0x033a;\n            var2 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n            goto label_033A;\n        } else { goto label_0098; }\n    }\n    \n    function resolve(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6, var arg7) {\n        if (memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20] & 0x02 ** 0xa0 - 0x01 != arg5) { goto label_0002; }\n    \n        if (storage[0x06] & 0xff) { goto label_0002; }\n    \n        arg4 = arg3;\n        arg5 = arg4 == 0x00;\n    \n        if (arg5) {\n            if (!arg5) {\n            label_009C:\n            \n            label_0002:\n                memory[0x40:0x60] = arg4;\n            \n                if (!msg.data.length) {\n                label_0098:\n                    arg4 = 0x0338;\n                    goto label_0002;\n                } else {\n                    arg4 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                \n                    if (arg4 == 0x11a9f10a) {\n                        arg5 = 0x033a;\n                        arg6 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n                    \n                    label_033A:\n                        var temp0 = memory[0x40:0x60];\n                        memory[temp0:temp0 + 0x20] = arg6 & 0x02 ** 0xa0 - 0x01;\n                        var temp1 = memory[0x40:0x60];\n                        return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n                    } else if (arg4 == 0x27793f87) {\n                        arg5 = 0x0357;\n                        arg6 = storage[0x05];\n                    \n                    label_0357:\n                        var temp2 = memory[0x40:0x60];\n                        memory[temp2:temp2 + 0x20] = arg6;\n                        var temp3 = memory[0x40:0x60];\n                        return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n                    } else if (arg4 == 0x3f6fa655) {\n                        arg5 = 0x0369;\n                        arg6 = storage[0x06] & 0xff;\n                        var temp4 = memory[0x40:0x60];\n                        memory[temp4:temp4 + 0x20] = !!arg6;\n                        var temp5 = memory[0x40:0x60];\n                        return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n                    } else if (arg4 == 0x5600f04f) {\n                        var temp6 = memory[0x40:0x60];\n                        arg6 = temp6;\n                        arg7 = 0x04;\n                        var temp7 = storage[arg7];\n                        var temp8 = (temp7 & !(temp7 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                        memory[0x40:0x60] = arg6 + (temp8 + 0x1f) / 0x20 * 0x20 + 0x20;\n                        memory[arg6:arg6 + 0x20] = temp8;\n                        arg5 = 0x037d;\n                        var var0 = temp8;\n                        var var1 = arg6 + 0x20;\n                        var var2 = arg7;\n                        var var3 = var0;\n                    \n                        if (!var3) {\n                            func_0416(arg7, var0, var1, var2, var3);\n                            var temp9 = memory[0x40:0x60];\n                            arg7 = temp9;\n                            var0 = arg7;\n                            var temp10 = var0 + 0x20;\n                            memory[var0:var0 + 0x20] = temp10 - var0;\n                            var temp11 = arg6;\n                            memory[temp10:temp10 + 0x20] = memory[temp11:temp11 + 0x20];\n                            var temp12 = temp10 + 0x20;\n                            var temp13 = memory[temp11:temp11 + 0x20];\n                            memory[temp12:temp12 + temp13] = address(0x04).call.gas((temp13 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp11 + 0x20:temp11 + 0x20 + temp13]);\n                            var1 = temp13 + temp12;\n                            var2 = temp13 & 0x1f;\n                        \n                            if (!var2) {\n                                var temp14 = memory[0x40:0x60];\n                                return memory[temp14:temp14 + var1 - temp14];\n                            } else {\n                                var temp15 = var2;\n                                var temp16 = var1 - temp15;\n                                memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                                var temp17 = memory[0x40:0x60];\n                                return memory[temp17:temp17 + (temp16 + 0x20) - temp17];\n                            }\n                        } else if (0x1f < var3) {\n                            var temp18 = var1;\n                            var temp19 = temp18 + var3;\n                            var1 = temp19;\n                            memory[0x00:0x20] = var2;\n                            var temp20 = keccak256(memory[0x00:0x20]);\n                            memory[temp18:temp18 + 0x20] = storage[temp20];\n                            var2 = temp20 + 0x01;\n                            var3 = temp18 + 0x20;\n                        \n                            if (var1 <= var3) { goto label_040D; }\n                        \n                        label_03F9:\n                            var temp21 = var2;\n                            var temp22 = var3;\n                            memory[temp22:temp22 + 0x20] = storage[temp21];\n                            var2 = temp21 + 0x01;\n                            var3 = temp22 + 0x20;\n                        \n                            if (var1 > var3) { goto label_03F9; }\n                        \n                        label_040D:\n                            var temp23 = var1;\n                            var temp24 = temp23 + (var3 - temp23 & 0x1f);\n                            var3 = temp23;\n                            var1 = temp24;\n                            func_0416(arg7, var0, var1, var2, var3);\n                            // Error: Could not resolve method call return address!\n                        } else {\n                            var temp25 = var1;\n                            memory[temp25:temp25 + 0x20] = storage[var2] / 0x0100 * 0x0100;\n                            var3 = var3;\n                            var1 = temp25 + 0x20;\n                            func_0416(arg7, var0, var1, var2, var3);\n                            // Error: Could not resolve method call return address!\n                        }\n                    } else if (arg4 == 0x65e17c9d) {\n                        arg5 = 0x033a;\n                        arg6 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else if (arg4 == 0x93854494) {\n                        arg5 = 0x0357;\n                        arg6 = storage[0x02];\n                        goto label_0357;\n                    } else if (arg4 == 0xa6403636) {\n                        arg5 = 0x0338;\n                        arg6 = msg.data[0x04:0x24];\n                        arg7 = msg.data[0x24:0x44];\n                        var0 = msg.data[0x44:0x64];\n                        var1 = msg.data[0x64:0x84];\n                        var temp26 = memory[0x40:0x60];\n                        memory[temp26:temp26 + 0x20] = storage[0x02];\n                        memory[temp26 + 0x20:temp26 + 0x20 + 0x20] = var1;\n                        var temp27 = memory[0x40:0x60];\n                        memory[temp27:temp27 + 0x20] = keccak256(memory[temp27:temp27 + temp26 - temp27 + 0x40]);\n                        memory[temp27 + 0x20:temp27 + 0x20 + 0x20] = arg6 & 0xff;\n                        memory[temp27 + 0x40:temp27 + 0x40 + 0x20] = arg7;\n                        memory[temp27 + 0x60:temp27 + 0x60 + 0x20] = var0;\n                        var temp28 = memory[0x40:0x60];\n                        var2 = 0x00;\n                        var3 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                        var var4 = 0x01;\n                        var var5 = temp27 + 0x80;\n                        var temp29;\n                        temp29, memory[temp28:temp28 + 0x20] = address(var4).call.gas(msg.gas - 0x61da).value(var2)(memory[temp28:temp28 + temp27 - temp28 + 0x80]);\n                    \n                        if (!temp29) { goto label_0002; }\n                    \n                        resolve(arg6, arg7, var0, var1, var2, var3, var4, var5);\n                        stop();\n                    } else if (arg4 == 0xbbf646c2) {\n                        arg5 = 0x033a;\n                        arg6 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else if (arg4 == 0xdb006a75) {\n                        arg5 = 0x0338;\n                        var temp30 = msg.data[0x04:0x24];\n                        arg6 = temp30;\n                        arg7 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                        var0 = 0x0de0b6b3a7640000;\n                        var1 = 0x04a0;\n                        var2 = arg6;\n                        var3 = storage[0x07];\n                        var4 = 0x00;\n                        var5 = var3 * var2;\n                        var var6 = 0x0824;\n                        var var7 = var4 == var2;\n                    \n                        if (var7) {\n                            func_0227(var7);\n                            var1 = func_0824(var2, var3, var4, var5);\n                            func_04A0(arg6, arg7, var0, var1);\n                            stop();\n                        } else {\n                            func_0221(var2, var3, var5, var7);\n                            var1 = func_0824(var2, var3, var4, var5);\n                            func_04A0(arg6, arg7, var0, var1);\n                            stop();\n                        }\n                    } else if (arg4 == 0xddca3f43) {\n                        arg5 = 0x0357;\n                        arg6 = storage[0x07];\n                        goto label_0357;\n                    } else if (arg4 == 0xefc81a8c) {\n                        arg5 = 0x0338;\n                        var temp31 = memory[0x40:0x60];\n                        memory[temp31:temp31 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n                        var temp32 = 0x02 ** 0xa0 - 0x01;\n                        memory[temp31 + 0x04:temp31 + 0x04 + 0x20] = temp32 & msg.sender;\n                        memory[temp31 + 0x24:temp31 + 0x24 + 0x20] = msg.value;\n                        var temp33 = memory[0x40:0x60];\n                        arg6 = storage[0x00] & temp32;\n                        arg7 = 0x0ecaea73;\n                        var0 = temp31 + 0x44;\n                        var temp34;\n                        temp34, memory[temp33:temp33 + 0x00] = address(arg6).call.gas(msg.gas - 0x61da)(memory[temp33:temp33 + temp31 - temp33 + 0x44]);\n                    \n                        if (!temp34) { goto label_0002; }\n                    \n                        create(arg6, arg7, var0);\n                        stop();\n                    } else if (arg4 == 0xf0d9bb20) {\n                        arg5 = 0x033a;\n                        arg6 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else { goto label_0098; }\n                }\n            } else {\n            label_0445:\n                var temp35 = arg4;\n                storage[0x05] = temp35;\n                var temp36 = (storage[0x06] & ~0xff) | 0x01;\n                storage[0x06] = temp36;\n                var temp37 = memory[0x40:0x60];\n                memory[temp37:temp37 + 0x20] = !!(temp36 & 0xff);\n                memory[temp37 + 0x20:temp37 + 0x20 + 0x20] = temp35;\n                var temp38 = memory[0x40:0x60];\n                log(memory[temp38:temp38 + temp37 - temp38 + 0x40], [0x25bdc110f1d57950be657c53d166f950a9db609cb04a7fbb52e4909d43b16516]);\n                return;\n            }\n        } else if (arg4 != 0x01) { goto label_009C; }\n        else { goto label_0445; }\n    }\n    \n    function func_0210(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n        var temp0 = arg0;\n        var var1 = arg1 * temp0;\n        var var2 = 0x0824;\n        var var3 = var0 == temp0;\n    \n        if (var3) {\n            func_0227(var3);\n            r0 = func_0824(arg0, arg1, var0, var1);\n            // Error: Could not resolve method call return address!\n        } else {\n            func_0221(arg0, arg1, var1, var3);\n            r0 = func_0824(arg0, arg1, var0, var1);\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function func_0221(var arg0, var arg1, var arg2, var arg3) {\n        arg3 = arg2 / arg0 == arg1;\n    \n        if (arg3) { return; }\n    \n    label_0002:\n        memory[0x40:0x60] = arg3;\n    \n        if (!msg.data.length) {\n        label_0098:\n            arg3 = 0x0338;\n            goto label_0002;\n        } else {\n            arg3 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (arg3 == 0x11a9f10a) {\n                var var0 = 0x033a;\n                var var1 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n            \n            label_033A:\n                var temp0 = memory[0x40:0x60];\n                memory[temp0:temp0 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                var temp1 = memory[0x40:0x60];\n                return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n            } else if (arg3 == 0x27793f87) {\n                var0 = 0x0357;\n                var1 = storage[0x05];\n            \n            label_0357:\n                var temp2 = memory[0x40:0x60];\n                memory[temp2:temp2 + 0x20] = var1;\n                var temp3 = memory[0x40:0x60];\n                return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n            } else if (arg3 == 0x3f6fa655) {\n                var0 = 0x0369;\n                var1 = storage[0x06] & 0xff;\n                var temp4 = memory[0x40:0x60];\n                memory[temp4:temp4 + 0x20] = !!var1;\n                var temp5 = memory[0x40:0x60];\n                return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n            } else if (arg3 == 0x5600f04f) {\n                var temp6 = memory[0x40:0x60];\n                var1 = temp6;\n                var var2 = 0x04;\n                var temp7 = storage[var2];\n                var temp8 = (temp7 & !(temp7 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                memory[0x40:0x60] = var1 + (temp8 + 0x1f) / 0x20 * 0x20 + 0x20;\n                memory[var1:var1 + 0x20] = temp8;\n                var0 = 0x037d;\n                var var3 = temp8;\n                var var4 = var1 + 0x20;\n                var var5 = var2;\n                var var6 = var3;\n            \n                if (!var6) {\n                    func_0416(var2, var3, var4, var5, var6);\n                    var temp9 = memory[0x40:0x60];\n                    var2 = temp9;\n                    var3 = var2;\n                    var temp10 = var3 + 0x20;\n                    memory[var3:var3 + 0x20] = temp10 - var3;\n                    var temp11 = var1;\n                    memory[temp10:temp10 + 0x20] = memory[temp11:temp11 + 0x20];\n                    var temp12 = temp10 + 0x20;\n                    var temp13 = memory[temp11:temp11 + 0x20];\n                    memory[temp12:temp12 + temp13] = address(0x04).call.gas((temp13 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp11 + 0x20:temp11 + 0x20 + temp13]);\n                    var4 = temp13 + temp12;\n                    var5 = temp13 & 0x1f;\n                \n                    if (!var5) {\n                        var temp14 = memory[0x40:0x60];\n                        return memory[temp14:temp14 + var4 - temp14];\n                    } else {\n                        var temp15 = var5;\n                        var temp16 = var4 - temp15;\n                        memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                        var temp17 = memory[0x40:0x60];\n                        return memory[temp17:temp17 + (temp16 + 0x20) - temp17];\n                    }\n                } else if (0x1f < var6) {\n                    var temp18 = var4;\n                    var temp19 = temp18 + var6;\n                    var4 = temp19;\n                    memory[0x00:0x20] = var5;\n                    var temp20 = keccak256(memory[0x00:0x20]);\n                    memory[temp18:temp18 + 0x20] = storage[temp20];\n                    var5 = temp20 + 0x01;\n                    var6 = temp18 + 0x20;\n                \n                    if (var4 <= var6) { goto label_040D; }\n                \n                label_03F9:\n                    var temp21 = var5;\n                    var temp22 = var6;\n                    memory[temp22:temp22 + 0x20] = storage[temp21];\n                    var5 = temp21 + 0x01;\n                    var6 = temp22 + 0x20;\n                \n                    if (var4 > var6) { goto label_03F9; }\n                \n                label_040D:\n                    var temp23 = var4;\n                    var temp24 = temp23 + (var6 - temp23 & 0x1f);\n                    var6 = temp23;\n                    var4 = temp24;\n                    func_0416(var2, var3, var4, var5, var6);\n                    // Error: Could not resolve method call return address!\n                } else {\n                    var temp25 = var4;\n                    memory[temp25:temp25 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n                    var6 = var6;\n                    var4 = temp25 + 0x20;\n                    func_0416(var2, var3, var4, var5, var6);\n                    // Error: Could not resolve method call return address!\n                }\n            } else if (arg3 == 0x65e17c9d) {\n                var0 = 0x033a;\n                var1 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else if (arg3 == 0x93854494) {\n                var0 = 0x0357;\n                var1 = storage[0x02];\n                goto label_0357;\n            } else if (arg3 == 0xa6403636) {\n                var0 = 0x0338;\n                var1 = msg.data[0x04:0x24];\n                var2 = msg.data[0x24:0x44];\n                var3 = msg.data[0x44:0x64];\n                var4 = msg.data[0x64:0x84];\n                var temp26 = memory[0x40:0x60];\n                memory[temp26:temp26 + 0x20] = storage[0x02];\n                memory[temp26 + 0x20:temp26 + 0x20 + 0x20] = var4;\n                var temp27 = memory[0x40:0x60];\n                memory[temp27:temp27 + 0x20] = keccak256(memory[temp27:temp27 + temp26 - temp27 + 0x40]);\n                memory[temp27 + 0x20:temp27 + 0x20 + 0x20] = var1 & 0xff;\n                memory[temp27 + 0x40:temp27 + 0x40 + 0x20] = var2;\n                memory[temp27 + 0x60:temp27 + 0x60 + 0x20] = var3;\n                var temp28 = memory[0x40:0x60];\n                var5 = 0x00;\n                var6 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                var var7 = 0x01;\n                var var8 = temp27 + 0x80;\n                var temp29;\n                temp29, memory[temp28:temp28 + 0x20] = address(var7).call.gas(msg.gas - 0x61da).value(var5)(memory[temp28:temp28 + temp27 - temp28 + 0x80]);\n            \n                if (!temp29) { goto label_0002; }\n            \n                resolve(var1, var2, var3, var4, var5, var6, var7, var8);\n                stop();\n            } else if (arg3 == 0xbbf646c2) {\n                var0 = 0x033a;\n                var1 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else if (arg3 == 0xdb006a75) {\n                var0 = 0x0338;\n                var temp30 = msg.data[0x04:0x24];\n                var1 = temp30;\n                var2 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                var3 = 0x0de0b6b3a7640000;\n                var4 = 0x04a0;\n                var5 = var1;\n                var6 = storage[0x07];\n                var7 = 0x00;\n                var8 = var6 * var5;\n                var var9 = 0x0824;\n                var var10 = var7 == var5;\n            \n                if (var10) {\n                    func_0227(var10);\n                    var4 = func_0824(var5, var6, var7, var8);\n                    func_04A0(var1, var2, var3, var4);\n                    stop();\n                } else {\n                    func_0221(var5, var6, var8, var10);\n                    var4 = func_0824(var5, var6, var7, var8);\n                    func_04A0(var1, var2, var3, var4);\n                    stop();\n                }\n            } else if (arg3 == 0xddca3f43) {\n                var0 = 0x0357;\n                var1 = storage[0x07];\n                goto label_0357;\n            } else if (arg3 == 0xefc81a8c) {\n                var0 = 0x0338;\n                var temp31 = memory[0x40:0x60];\n                memory[temp31:temp31 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n                var temp32 = 0x02 ** 0xa0 - 0x01;\n                memory[temp31 + 0x04:temp31 + 0x04 + 0x20] = temp32 & msg.sender;\n                memory[temp31 + 0x24:temp31 + 0x24 + 0x20] = msg.value;\n                var temp33 = memory[0x40:0x60];\n                var1 = storage[0x00] & temp32;\n                var2 = 0x0ecaea73;\n                var3 = temp31 + 0x44;\n                var temp34;\n                temp34, memory[temp33:temp33 + 0x00] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp33:temp33 + temp31 - temp33 + 0x44]);\n            \n                if (!temp34) { goto label_0002; }\n            \n                create(var1, var2, var3);\n                stop();\n            } else if (arg3 == 0xf0d9bb20) {\n                var0 = 0x033a;\n                var1 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else { goto label_0098; }\n        }\n    }\n    \n    function func_0227(var arg0) {\n        if (arg0) { return; }\n    \n    label_0002:\n        memory[0x40:0x60] = arg0;\n    \n        if (!msg.data.length) {\n        label_0098:\n            arg0 = 0x0338;\n            goto label_0002;\n        } else {\n            arg0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (arg0 == 0x11a9f10a) {\n                var var0 = 0x033a;\n                var var1 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n            \n            label_033A:\n                var temp0 = memory[0x40:0x60];\n                memory[temp0:temp0 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                var temp1 = memory[0x40:0x60];\n                return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n            } else if (arg0 == 0x27793f87) {\n                var0 = 0x0357;\n                var1 = storage[0x05];\n            \n            label_0357:\n                var temp2 = memory[0x40:0x60];\n                memory[temp2:temp2 + 0x20] = var1;\n                var temp3 = memory[0x40:0x60];\n                return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n            } else if (arg0 == 0x3f6fa655) {\n                var0 = 0x0369;\n                var1 = storage[0x06] & 0xff;\n                var temp4 = memory[0x40:0x60];\n                memory[temp4:temp4 + 0x20] = !!var1;\n                var temp5 = memory[0x40:0x60];\n                return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n            } else if (arg0 == 0x5600f04f) {\n                var temp6 = memory[0x40:0x60];\n                var1 = temp6;\n                var var2 = 0x04;\n                var temp7 = storage[var2];\n                var temp8 = (temp7 & !(temp7 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                memory[0x40:0x60] = var1 + (temp8 + 0x1f) / 0x20 * 0x20 + 0x20;\n                memory[var1:var1 + 0x20] = temp8;\n                var0 = 0x037d;\n                var var3 = temp8;\n                var var4 = var1 + 0x20;\n                var var5 = var2;\n                var var6 = var3;\n            \n                if (!var6) {\n                    func_0416(var2, var3, var4, var5, var6);\n                    var temp9 = memory[0x40:0x60];\n                    var2 = temp9;\n                    var3 = var2;\n                    var temp10 = var3 + 0x20;\n                    memory[var3:var3 + 0x20] = temp10 - var3;\n                    var temp11 = var1;\n                    memory[temp10:temp10 + 0x20] = memory[temp11:temp11 + 0x20];\n                    var temp12 = temp10 + 0x20;\n                    var temp13 = memory[temp11:temp11 + 0x20];\n                    memory[temp12:temp12 + temp13] = address(0x04).call.gas((temp13 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp11 + 0x20:temp11 + 0x20 + temp13]);\n                    var4 = temp13 + temp12;\n                    var5 = temp13 & 0x1f;\n                \n                    if (!var5) {\n                        var temp14 = memory[0x40:0x60];\n                        return memory[temp14:temp14 + var4 - temp14];\n                    } else {\n                        var temp15 = var5;\n                        var temp16 = var4 - temp15;\n                        memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                        var temp17 = memory[0x40:0x60];\n                        return memory[temp17:temp17 + (temp16 + 0x20) - temp17];\n                    }\n                } else if (0x1f < var6) {\n                    var temp18 = var4;\n                    var temp19 = temp18 + var6;\n                    var4 = temp19;\n                    memory[0x00:0x20] = var5;\n                    var temp20 = keccak256(memory[0x00:0x20]);\n                    memory[temp18:temp18 + 0x20] = storage[temp20];\n                    var5 = temp20 + 0x01;\n                    var6 = temp18 + 0x20;\n                \n                    if (var4 <= var6) { goto label_040D; }\n                \n                label_03F9:\n                    var temp21 = var5;\n                    var temp22 = var6;\n                    memory[temp22:temp22 + 0x20] = storage[temp21];\n                    var5 = temp21 + 0x01;\n                    var6 = temp22 + 0x20;\n                \n                    if (var4 > var6) { goto label_03F9; }\n                \n                label_040D:\n                    var temp23 = var4;\n                    var temp24 = temp23 + (var6 - temp23 & 0x1f);\n                    var6 = temp23;\n                    var4 = temp24;\n                    func_0416(var2, var3, var4, var5, var6);\n                    // Error: Could not resolve method call return address!\n                } else {\n                    var temp25 = var4;\n                    memory[temp25:temp25 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n                    var6 = var6;\n                    var4 = temp25 + 0x20;\n                    func_0416(var2, var3, var4, var5, var6);\n                    // Error: Could not resolve method call return address!\n                }\n            } else if (arg0 == 0x65e17c9d) {\n                var0 = 0x033a;\n                var1 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else if (arg0 == 0x93854494) {\n                var0 = 0x0357;\n                var1 = storage[0x02];\n                goto label_0357;\n            } else if (arg0 == 0xa6403636) {\n                var0 = 0x0338;\n                var1 = msg.data[0x04:0x24];\n                var2 = msg.data[0x24:0x44];\n                var3 = msg.data[0x44:0x64];\n                var4 = msg.data[0x64:0x84];\n                var temp26 = memory[0x40:0x60];\n                memory[temp26:temp26 + 0x20] = storage[0x02];\n                memory[temp26 + 0x20:temp26 + 0x20 + 0x20] = var4;\n                var temp27 = memory[0x40:0x60];\n                memory[temp27:temp27 + 0x20] = keccak256(memory[temp27:temp27 + temp26 - temp27 + 0x40]);\n                memory[temp27 + 0x20:temp27 + 0x20 + 0x20] = var1 & 0xff;\n                memory[temp27 + 0x40:temp27 + 0x40 + 0x20] = var2;\n                memory[temp27 + 0x60:temp27 + 0x60 + 0x20] = var3;\n                var temp28 = memory[0x40:0x60];\n                var5 = 0x00;\n                var6 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                var var7 = 0x01;\n                var var8 = temp27 + 0x80;\n                var temp29;\n                temp29, memory[temp28:temp28 + 0x20] = address(var7).call.gas(msg.gas - 0x61da).value(var5)(memory[temp28:temp28 + temp27 - temp28 + 0x80]);\n            \n                if (!temp29) { goto label_0002; }\n            \n                resolve(var1, var2, var3, var4, var5, var6, var7, var8);\n                stop();\n            } else if (arg0 == 0xbbf646c2) {\n                var0 = 0x033a;\n                var1 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else if (arg0 == 0xdb006a75) {\n                var0 = 0x0338;\n                var temp30 = msg.data[0x04:0x24];\n                var1 = temp30;\n                var2 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                var3 = 0x0de0b6b3a7640000;\n                var4 = 0x04a0;\n                var5 = var1;\n                var6 = storage[0x07];\n                var7 = 0x00;\n                var8 = var6 * var5;\n                var var9 = 0x0824;\n                var var10 = var7 == var5;\n            \n                if (var10) {\n                    func_0227(var10);\n                    var4 = func_0824(var5, var6, var7, var8);\n                    func_04A0(var1, var2, var3, var4);\n                    stop();\n                } else {\n                    func_0221(var5, var6, var8, var10);\n                    var4 = func_0824(var5, var6, var7, var8);\n                    func_04A0(var1, var2, var3, var4);\n                    stop();\n                }\n            } else if (arg0 == 0xddca3f43) {\n                var0 = 0x0357;\n                var1 = storage[0x07];\n                goto label_0357;\n            } else if (arg0 == 0xefc81a8c) {\n                var0 = 0x0338;\n                var temp31 = memory[0x40:0x60];\n                memory[temp31:temp31 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n                var temp32 = 0x02 ** 0xa0 - 0x01;\n                memory[temp31 + 0x04:temp31 + 0x04 + 0x20] = temp32 & msg.sender;\n                memory[temp31 + 0x24:temp31 + 0x24 + 0x20] = msg.value;\n                var temp33 = memory[0x40:0x60];\n                var1 = storage[0x00] & temp32;\n                var2 = 0x0ecaea73;\n                var3 = temp31 + 0x44;\n                var temp34;\n                temp34, memory[temp33:temp33 + 0x00] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp33:temp33 + temp31 - temp33 + 0x44]);\n            \n                if (!temp34) { goto label_0002; }\n            \n                create(var1, var2, var3);\n                stop();\n            } else if (arg0 == 0xf0d9bb20) {\n                var0 = 0x033a;\n                var1 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else { goto label_0098; }\n        }\n    }\n    \n    function create(var arg0, var arg1, var arg2) {\n        var temp0 = memory[0x40:0x60];\n        memory[temp0:temp0 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n        var temp1 = 0x02 ** 0xa0 - 0x01;\n        memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = temp1 & msg.sender;\n        memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = msg.value;\n        var temp2 = memory[0x40:0x60];\n        arg0 = temp1 & storage[0x01];\n        arg2 = temp0 + 0x44;\n        var temp3;\n        temp3, memory[temp2:temp2 + 0x00] = address(arg0).call.gas(msg.gas - 0x61da)(memory[temp2:temp2 + temp0 - temp2 + 0x44]);\n    \n        if (!temp3) {\n        label_0002:\n            memory[0x40:0x60] = arg2;\n        \n            if (!msg.data.length) {\n            label_0098:\n                arg2 = 0x0338;\n                goto label_0002;\n            } else {\n                arg2 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n            \n                if (arg2 == 0x11a9f10a) {\n                    var var0 = 0x033a;\n                    var var1 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n                \n                label_033A:\n                    var temp4 = memory[0x40:0x60];\n                    memory[temp4:temp4 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                    var temp5 = memory[0x40:0x60];\n                    return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n                } else if (arg2 == 0x27793f87) {\n                    var0 = 0x0357;\n                    var1 = storage[0x05];\n                \n                label_0357:\n                    var temp6 = memory[0x40:0x60];\n                    memory[temp6:temp6 + 0x20] = var1;\n                    var temp7 = memory[0x40:0x60];\n                    return memory[temp7:temp7 + temp6 - temp7 + 0x20];\n                } else if (arg2 == 0x3f6fa655) {\n                    var0 = 0x0369;\n                    var1 = storage[0x06] & 0xff;\n                    var temp8 = memory[0x40:0x60];\n                    memory[temp8:temp8 + 0x20] = !!var1;\n                    var temp9 = memory[0x40:0x60];\n                    return memory[temp9:temp9 + temp8 - temp9 + 0x20];\n                } else if (arg2 == 0x5600f04f) {\n                    var temp10 = memory[0x40:0x60];\n                    var1 = temp10;\n                    var var2 = 0x04;\n                    var temp11 = storage[var2];\n                    var temp12 = (temp11 & !(temp11 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                    memory[0x40:0x60] = var1 + (temp12 + 0x1f) / 0x20 * 0x20 + 0x20;\n                    memory[var1:var1 + 0x20] = temp12;\n                    var0 = 0x037d;\n                    var var3 = temp12;\n                    var var4 = var1 + 0x20;\n                    var var5 = var2;\n                    var var6 = var3;\n                \n                    if (!var6) {\n                        func_0416(var2, var3, var4, var5, var6);\n                        var temp13 = memory[0x40:0x60];\n                        var2 = temp13;\n                        var3 = var2;\n                        var temp14 = var3 + 0x20;\n                        memory[var3:var3 + 0x20] = temp14 - var3;\n                        var temp15 = var1;\n                        memory[temp14:temp14 + 0x20] = memory[temp15:temp15 + 0x20];\n                        var temp16 = temp14 + 0x20;\n                        var temp17 = memory[temp15:temp15 + 0x20];\n                        memory[temp16:temp16 + temp17] = address(0x04).call.gas((temp17 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp15 + 0x20:temp15 + 0x20 + temp17]);\n                        var4 = temp17 + temp16;\n                        var5 = temp17 & 0x1f;\n                    \n                        if (!var5) {\n                            var temp18 = memory[0x40:0x60];\n                            return memory[temp18:temp18 + var4 - temp18];\n                        } else {\n                            var temp19 = var5;\n                            var temp20 = var4 - temp19;\n                            memory[temp20:temp20 + 0x20] = ~(0x0100 ** (0x20 - temp19) - 0x01) & memory[temp20:temp20 + 0x20];\n                            var temp21 = memory[0x40:0x60];\n                            return memory[temp21:temp21 + (temp20 + 0x20) - temp21];\n                        }\n                    } else if (0x1f < var6) {\n                        var temp22 = var4;\n                        var temp23 = temp22 + var6;\n                        var4 = temp23;\n                        memory[0x00:0x20] = var5;\n                        var temp24 = keccak256(memory[0x00:0x20]);\n                        memory[temp22:temp22 + 0x20] = storage[temp24];\n                        var5 = temp24 + 0x01;\n                        var6 = temp22 + 0x20;\n                    \n                        if (var4 <= var6) { goto label_040D; }\n                    \n                    label_03F9:\n                        var temp25 = var5;\n                        var temp26 = var6;\n                        memory[temp26:temp26 + 0x20] = storage[temp25];\n                        var5 = temp25 + 0x01;\n                        var6 = temp26 + 0x20;\n                    \n                        if (var4 > var6) { goto label_03F9; }\n                    \n                    label_040D:\n                        var temp27 = var4;\n                        var temp28 = temp27 + (var6 - temp27 & 0x1f);\n                        var6 = temp27;\n                        var4 = temp28;\n                        func_0416(var2, var3, var4, var5, var6);\n                        // Error: Could not resolve method call return address!\n                    } else {\n                        var temp29 = var4;\n                        memory[temp29:temp29 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n                        var6 = var6;\n                        var4 = temp29 + 0x20;\n                        func_0416(var2, var3, var4, var5, var6);\n                        // Error: Could not resolve method call return address!\n                    }\n                } else if (arg2 == 0x65e17c9d) {\n                    var0 = 0x033a;\n                    var1 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                    goto label_033A;\n                } else if (arg2 == 0x93854494) {\n                    var0 = 0x0357;\n                    var1 = storage[0x02];\n                    goto label_0357;\n                } else if (arg2 == 0xa6403636) {\n                    var0 = 0x0338;\n                    var1 = msg.data[0x04:0x24];\n                    var2 = msg.data[0x24:0x44];\n                    var3 = msg.data[0x44:0x64];\n                    var4 = msg.data[0x64:0x84];\n                    var temp30 = memory[0x40:0x60];\n                    memory[temp30:temp30 + 0x20] = storage[0x02];\n                    memory[temp30 + 0x20:temp30 + 0x20 + 0x20] = var4;\n                    var temp31 = memory[0x40:0x60];\n                    memory[temp31:temp31 + 0x20] = keccak256(memory[temp31:temp31 + temp30 - temp31 + 0x40]);\n                    memory[temp31 + 0x20:temp31 + 0x20 + 0x20] = var1 & 0xff;\n                    memory[temp31 + 0x40:temp31 + 0x40 + 0x20] = var2;\n                    memory[temp31 + 0x60:temp31 + 0x60 + 0x20] = var3;\n                    var temp32 = memory[0x40:0x60];\n                    var5 = 0x00;\n                    var6 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                    var var7 = 0x01;\n                    var var8 = temp31 + 0x80;\n                    var temp33;\n                    temp33, memory[temp32:temp32 + 0x20] = address(var7).call.gas(msg.gas - 0x61da).value(var5)(memory[temp32:temp32 + temp31 - temp32 + 0x80]);\n                \n                    if (!temp33) { goto label_0002; }\n                \n                    resolve(var1, var2, var3, var4, var5, var6, var7, var8);\n                    stop();\n                } else if (arg2 == 0xbbf646c2) {\n                    var0 = 0x033a;\n                    var1 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                    goto label_033A;\n                } else if (arg2 == 0xdb006a75) {\n                    var0 = 0x0338;\n                    var temp34 = msg.data[0x04:0x24];\n                    var1 = temp34;\n                    var2 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                    var3 = 0x0de0b6b3a7640000;\n                    var4 = 0x04a0;\n                    var5 = var1;\n                    var6 = storage[0x07];\n                    var7 = 0x00;\n                    var8 = var6 * var5;\n                    var var9 = 0x0824;\n                    var var10 = var7 == var5;\n                \n                    if (var10) {\n                        func_0227(var10);\n                        var4 = func_0824(var5, var6, var7, var8);\n                        func_04A0(var1, var2, var3, var4);\n                        stop();\n                    } else {\n                        func_0221(var5, var6, var8, var10);\n                        var4 = func_0824(var5, var6, var7, var8);\n                        func_04A0(var1, var2, var3, var4);\n                        stop();\n                    }\n                } else if (arg2 == 0xddca3f43) {\n                    var0 = 0x0357;\n                    var1 = storage[0x07];\n                    goto label_0357;\n                } else if (arg2 == 0xefc81a8c) {\n                    var0 = 0x0338;\n                    var temp35 = memory[0x40:0x60];\n                    memory[temp35:temp35 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n                    var temp36 = 0x02 ** 0xa0 - 0x01;\n                    memory[temp35 + 0x04:temp35 + 0x04 + 0x20] = temp36 & msg.sender;\n                    memory[temp35 + 0x24:temp35 + 0x24 + 0x20] = msg.value;\n                    var temp37 = memory[0x40:0x60];\n                    var1 = storage[0x00] & temp36;\n                    var2 = 0x0ecaea73;\n                    var3 = temp35 + 0x44;\n                    var temp38;\n                    temp38, memory[temp37:temp37 + 0x00] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp37:temp37 + temp35 - temp37 + 0x44]);\n                \n                    if (!temp38) { goto label_0002; }\n                \n                    create(var1, var2, var3);\n                    stop();\n                } else if (arg2 == 0xf0d9bb20) {\n                    var0 = 0x033a;\n                    var1 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n                    goto label_033A;\n                } else { goto label_0098; }\n            }\n        } else {\n            var temp39 = memory[0x40:0x60];\n            memory[temp39:temp39 + 0x20] = msg.value;\n            var temp40 = memory[0x40:0x60];\n            log(memory[temp40:temp40 + temp39 - temp40 + 0x20], [0xcc9018de05b5f497ee7618d8830568d8ac2d45d0671b73d8f71c67e824122ec7, msg.sender]);\n            return;\n        }\n    }\n    \n    function func_0416(var arg0, var arg1, var arg2, var arg3, var arg4) {}\n    \n    function func_04A0(var arg0, var arg1, var arg2, var arg3) {\n        var temp0 = memory[0x40:0x60];\n        var temp1;\n        temp1, memory[temp0:temp0 + 0x00] = address(arg1).call.gas(msg.gas - 0x8502).value(arg3 / arg2)(memory[temp0:temp0 + 0x00]);\n    \n        if (!temp1) { goto label_0002; }\n    \n        if (!(storage[0x06] & 0xff)) {\n            var temp55 = memory[0x40:0x60];\n            memory[temp55:temp55 + 0x20] = 0xa24835d1 * 0x02 ** 0xe0;\n            var temp56 = 0x02 ** 0xa0 - 0x01;\n            memory[temp55 + 0x04:temp55 + 0x04 + 0x20] = temp56 & msg.sender;\n            memory[temp55 + 0x24:temp55 + 0x24 + 0x20] = arg0;\n            var temp57 = memory[0x40:0x60];\n            arg1 = temp56 & storage[0x00];\n            arg2 = 0xa24835d1;\n            arg3 = temp55 + 0x44;\n            var temp58;\n            temp58, memory[temp57:temp57 + 0x00] = address(arg1).call.gas(msg.gas - 0x61da)(memory[temp57:temp57 + temp55 - temp57 + 0x44]);\n        \n            if (!temp58) { goto label_0002; }\n        \n            var temp59 = memory[0x40:0x60];\n            memory[temp59:temp59 + 0x20] = 0xa24835d1 * 0x02 ** 0xe0;\n            var temp60 = 0x02 ** 0xa0 - 0x01;\n            memory[temp59 + 0x04:temp59 + 0x04 + 0x20] = temp60 & msg.sender;\n            memory[temp59 + 0x24:temp59 + 0x24 + 0x20] = arg0;\n            var temp61 = memory[0x40:0x60];\n            arg1 = temp60 & storage[0x01];\n            arg3 = temp59 + 0x44;\n            var temp62;\n            temp62, memory[temp61:temp61 + 0x00] = address(arg1).call.gas(msg.gas - 0x61da)(memory[temp61:temp61 + temp59 - temp61 + 0x44]);\n        \n            if (!temp62) { goto label_0002; }\n        \n            arg1 = msg.sender;\n            arg2 = 0x0de0b6b3a7640000;\n            arg3 = 0x063d;\n            var0 = arg0;\n            var1 = 0x0de0b6b3a7640000 - storage[0x07];\n            arg3 = func_0210(var0, var1);\n            var temp63 = memory[0x40:0x60];\n            var temp64;\n            temp64, memory[temp63:temp63 + 0x00] = address(arg1).call.gas(msg.gas - 0x8502).value(arg3 / arg2)(memory[temp63:temp63 + 0x00]);\n        \n            if (!temp64) { goto label_0002; }\n        \n            var temp65 = memory[0x40:0x60];\n            var temp66 = arg0;\n            memory[temp65:temp65 + 0x20] = temp66;\n            memory[temp65 + 0x20:temp65 + 0x20 + 0x20] = temp66;\n            memory[temp65 + 0x40:temp65 + 0x40 + 0x20] = temp66;\n            var temp67 = memory[0x40:0x60];\n            log(memory[temp67:temp67 + temp65 - temp67 + 0x60], [0xbd5034ffbd47e4e72a94baa2cdb74c6fad73cb3bcdc13036b72ec8306f5a7646, msg.sender]);\n            goto label_07FE;\n        } else if (!(storage[0x06] & 0xff)) {\n        label_07FE:\n            return;\n        } else if (storage[0x05] == 0x00) {\n            var temp46 = memory[0x40:0x60];\n            memory[temp46:temp46 + 0x20] = 0xa24835d1 * 0x02 ** 0xe0;\n            var temp47 = 0x02 ** 0xa0 - 0x01;\n            memory[temp46 + 0x04:temp46 + 0x04 + 0x20] = temp47 & msg.sender;\n            memory[temp46 + 0x24:temp46 + 0x24 + 0x20] = arg0;\n            var temp48 = memory[0x40:0x60];\n            arg1 = temp47 & storage[0x01];\n            arg2 = 0xa24835d1;\n            arg3 = temp46 + 0x44;\n            var temp49;\n            temp49, memory[temp48:temp48 + 0x00] = address(arg1).call.gas(msg.gas - 0x61da)(memory[temp48:temp48 + temp46 - temp48 + 0x44]);\n        \n            if (!temp49) { goto label_0002; }\n        \n            arg1 = msg.sender;\n            arg2 = 0x0de0b6b3a7640000;\n            arg3 = 0x073d;\n            var0 = arg0;\n            var1 = 0x0de0b6b3a7640000 - storage[0x07];\n            arg3 = func_0210(var0, var1);\n            var temp50 = memory[0x40:0x60];\n            var temp51;\n            temp51, memory[temp50:temp50 + 0x00] = address(arg1).call.gas(msg.gas - 0x8502).value(arg3 / arg2)(memory[temp50:temp50 + 0x00]);\n        \n            if (!temp51) { goto label_0002; }\n        \n            var temp52 = memory[0x40:0x60];\n            var temp53 = arg0;\n            memory[temp52:temp52 + 0x20] = temp53;\n            memory[temp52 + 0x20:temp52 + 0x20 + 0x20] = 0x00;\n            memory[temp52 + 0x40:temp52 + 0x40 + 0x20] = temp53;\n            var temp54 = memory[0x40:0x60];\n            log(memory[temp54:temp54 + temp52 - temp54 + 0x60], [0xbd5034ffbd47e4e72a94baa2cdb74c6fad73cb3bcdc13036b72ec8306f5a7646, msg.sender]);\n            goto label_07FE;\n        } else if (storage[0x05] != 0x01) { goto label_07FE; }\n        else {\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = 0xa24835d1 * 0x02 ** 0xe0;\n            var temp3 = 0x02 ** 0xa0 - 0x01;\n            memory[temp2 + 0x04:temp2 + 0x04 + 0x20] = temp3 & msg.sender;\n            memory[temp2 + 0x24:temp2 + 0x24 + 0x20] = arg0;\n            var temp4 = memory[0x40:0x60];\n            arg1 = temp3 & storage[0x00];\n            arg2 = 0xa24835d1;\n            arg3 = temp2 + 0x44;\n            var temp5;\n            temp5, memory[temp4:temp4 + 0x00] = address(arg1).call.gas(msg.gas - 0x61da)(memory[temp4:temp4 + temp2 - temp4 + 0x44]);\n        \n            if (!temp5) {\n            label_0002:\n                memory[0x40:0x60] = arg3;\n            \n                if (!msg.data.length) {\n                label_0098:\n                    arg3 = 0x0338;\n                    goto label_0002;\n                } else {\n                    arg3 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                \n                    if (arg3 == 0x11a9f10a) {\n                        var var0 = 0x033a;\n                        var var1 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n                    \n                    label_033A:\n                        var temp6 = memory[0x40:0x60];\n                        memory[temp6:temp6 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                        var temp7 = memory[0x40:0x60];\n                        return memory[temp7:temp7 + temp6 - temp7 + 0x20];\n                    } else if (arg3 == 0x27793f87) {\n                        var0 = 0x0357;\n                        var1 = storage[0x05];\n                    \n                    label_0357:\n                        var temp8 = memory[0x40:0x60];\n                        memory[temp8:temp8 + 0x20] = var1;\n                        var temp9 = memory[0x40:0x60];\n                        return memory[temp9:temp9 + temp8 - temp9 + 0x20];\n                    } else if (arg3 == 0x3f6fa655) {\n                        var0 = 0x0369;\n                        var1 = storage[0x06] & 0xff;\n                        var temp10 = memory[0x40:0x60];\n                        memory[temp10:temp10 + 0x20] = !!var1;\n                        var temp11 = memory[0x40:0x60];\n                        return memory[temp11:temp11 + temp10 - temp11 + 0x20];\n                    } else if (arg3 == 0x5600f04f) {\n                        var temp12 = memory[0x40:0x60];\n                        var1 = temp12;\n                        var var2 = 0x04;\n                        var temp13 = storage[var2];\n                        var temp14 = (temp13 & !(temp13 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                        memory[0x40:0x60] = var1 + (temp14 + 0x1f) / 0x20 * 0x20 + 0x20;\n                        memory[var1:var1 + 0x20] = temp14;\n                        var0 = 0x037d;\n                        var var3 = temp14;\n                        var var4 = var1 + 0x20;\n                        var var5 = var2;\n                        var var6 = var3;\n                    \n                        if (!var6) {\n                            func_0416(var2, var3, var4, var5, var6);\n                            var temp15 = memory[0x40:0x60];\n                            var2 = temp15;\n                            var3 = var2;\n                            var temp16 = var3 + 0x20;\n                            memory[var3:var3 + 0x20] = temp16 - var3;\n                            var temp17 = var1;\n                            memory[temp16:temp16 + 0x20] = memory[temp17:temp17 + 0x20];\n                            var temp18 = temp16 + 0x20;\n                            var temp19 = memory[temp17:temp17 + 0x20];\n                            memory[temp18:temp18 + temp19] = address(0x04).call.gas((temp19 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp17 + 0x20:temp17 + 0x20 + temp19]);\n                            var4 = temp19 + temp18;\n                            var5 = temp19 & 0x1f;\n                        \n                            if (!var5) {\n                                var temp20 = memory[0x40:0x60];\n                                return memory[temp20:temp20 + var4 - temp20];\n                            } else {\n                                var temp21 = var5;\n                                var temp22 = var4 - temp21;\n                                memory[temp22:temp22 + 0x20] = ~(0x0100 ** (0x20 - temp21) - 0x01) & memory[temp22:temp22 + 0x20];\n                                var temp23 = memory[0x40:0x60];\n                                return memory[temp23:temp23 + (temp22 + 0x20) - temp23];\n                            }\n                        } else if (0x1f < var6) {\n                            var temp24 = var4;\n                            var temp25 = temp24 + var6;\n                            var4 = temp25;\n                            memory[0x00:0x20] = var5;\n                            var temp26 = keccak256(memory[0x00:0x20]);\n                            memory[temp24:temp24 + 0x20] = storage[temp26];\n                            var5 = temp26 + 0x01;\n                            var6 = temp24 + 0x20;\n                        \n                            if (var4 <= var6) { goto label_040D; }\n                        \n                        label_03F9:\n                            var temp27 = var5;\n                            var temp28 = var6;\n                            memory[temp28:temp28 + 0x20] = storage[temp27];\n                            var5 = temp27 + 0x01;\n                            var6 = temp28 + 0x20;\n                        \n                            if (var4 > var6) { goto label_03F9; }\n                        \n                        label_040D:\n                            var temp29 = var4;\n                            var temp30 = temp29 + (var6 - temp29 & 0x1f);\n                            var6 = temp29;\n                            var4 = temp30;\n                            func_0416(var2, var3, var4, var5, var6);\n                            // Error: Could not resolve method call return address!\n                        } else {\n                            var temp31 = var4;\n                            memory[temp31:temp31 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n                            var6 = var6;\n                            var4 = temp31 + 0x20;\n                            func_0416(var2, var3, var4, var5, var6);\n                            // Error: Could not resolve method call return address!\n                        }\n                    } else if (arg3 == 0x65e17c9d) {\n                        var0 = 0x033a;\n                        var1 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else if (arg3 == 0x93854494) {\n                        var0 = 0x0357;\n                        var1 = storage[0x02];\n                        goto label_0357;\n                    } else if (arg3 == 0xa6403636) {\n                        var0 = 0x0338;\n                        var1 = msg.data[0x04:0x24];\n                        var2 = msg.data[0x24:0x44];\n                        var3 = msg.data[0x44:0x64];\n                        var4 = msg.data[0x64:0x84];\n                        var temp32 = memory[0x40:0x60];\n                        memory[temp32:temp32 + 0x20] = storage[0x02];\n                        memory[temp32 + 0x20:temp32 + 0x20 + 0x20] = var4;\n                        var temp33 = memory[0x40:0x60];\n                        memory[temp33:temp33 + 0x20] = keccak256(memory[temp33:temp33 + temp32 - temp33 + 0x40]);\n                        memory[temp33 + 0x20:temp33 + 0x20 + 0x20] = var1 & 0xff;\n                        memory[temp33 + 0x40:temp33 + 0x40 + 0x20] = var2;\n                        memory[temp33 + 0x60:temp33 + 0x60 + 0x20] = var3;\n                        var temp34 = memory[0x40:0x60];\n                        var5 = 0x00;\n                        var6 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                        var var7 = 0x01;\n                        var var8 = temp33 + 0x80;\n                        var temp35;\n                        temp35, memory[temp34:temp34 + 0x20] = address(var7).call.gas(msg.gas - 0x61da).value(var5)(memory[temp34:temp34 + temp33 - temp34 + 0x80]);\n                    \n                        if (!temp35) { goto label_0002; }\n                    \n                        resolve(var1, var2, var3, var4, var5, var6, var7, var8);\n                        stop();\n                    } else if (arg3 == 0xbbf646c2) {\n                        var0 = 0x033a;\n                        var1 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else if (arg3 == 0xdb006a75) {\n                        var0 = 0x0338;\n                        var temp36 = msg.data[0x04:0x24];\n                        var1 = temp36;\n                        var2 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                        var3 = 0x0de0b6b3a7640000;\n                        var4 = 0x04a0;\n                        var5 = var1;\n                        var6 = storage[0x07];\n                        var7 = 0x00;\n                        var8 = var6 * var5;\n                        var var9 = 0x0824;\n                        var var10 = var7 == var5;\n                    \n                        if (var10) {\n                            func_0227(var10);\n                            var4 = func_0824(var5, var6, var7, var8);\n                            func_04A0(var1, var2, var3, var4);\n                            stop();\n                        } else {\n                            func_0221(var5, var6, var8, var10);\n                            var4 = func_0824(var5, var6, var7, var8);\n                            func_04A0(var1, var2, var3, var4);\n                            stop();\n                        }\n                    } else if (arg3 == 0xddca3f43) {\n                        var0 = 0x0357;\n                        var1 = storage[0x07];\n                        goto label_0357;\n                    } else if (arg3 == 0xefc81a8c) {\n                        var0 = 0x0338;\n                        var temp37 = memory[0x40:0x60];\n                        memory[temp37:temp37 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n                        var temp38 = 0x02 ** 0xa0 - 0x01;\n                        memory[temp37 + 0x04:temp37 + 0x04 + 0x20] = temp38 & msg.sender;\n                        memory[temp37 + 0x24:temp37 + 0x24 + 0x20] = msg.value;\n                        var temp39 = memory[0x40:0x60];\n                        var1 = storage[0x00] & temp38;\n                        var2 = 0x0ecaea73;\n                        var3 = temp37 + 0x44;\n                        var temp40;\n                        temp40, memory[temp39:temp39 + 0x00] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp39:temp39 + temp37 - temp39 + 0x44]);\n                    \n                        if (!temp40) { goto label_0002; }\n                    \n                        create(var1, var2, var3);\n                        stop();\n                    } else if (arg3 == 0xf0d9bb20) {\n                        var0 = 0x033a;\n                        var1 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else { goto label_0098; }\n                }\n            } else {\n                arg1 = msg.sender;\n                arg2 = 0x0de0b6b3a7640000;\n                arg3 = 0x0801;\n                var0 = arg0;\n                var1 = 0x0de0b6b3a7640000 - storage[0x07];\n                arg3 = func_0210(var0, var1);\n                var temp41 = memory[0x40:0x60];\n                var temp42;\n                temp42, memory[temp41:temp41 + 0x00] = address(arg1).call.gas(msg.gas - 0x8502).value(arg3 / arg2)(memory[temp41:temp41 + 0x00]);\n            \n                if (!temp42) { goto label_0002; }\n            \n                var temp43 = memory[0x40:0x60];\n                var temp44 = arg0;\n                memory[temp43:temp43 + 0x20] = temp44;\n                memory[temp43 + 0x20:temp43 + 0x20 + 0x20] = temp44;\n                memory[temp43 + 0x40:temp43 + 0x40 + 0x20] = 0x00;\n                var temp45 = memory[0x40:0x60];\n                log(memory[temp45:temp45 + temp43 - temp45 + 0x60], [0xbd5034ffbd47e4e72a94baa2cdb74c6fad73cb3bcdc13036b72ec8306f5a7646, msg.sender]);\n                goto label_07FE;\n            }\n        }\n    }\n    \n    function func_0824(var arg0, var arg1, var arg2, var arg3) returns (var r0) { return arg3; }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n    \n        if (msg.data.length) { goto label_000B; }\n    \n    label_0098:\n        var var0 = 0x0338;\n    \n    label_0002:\n        memory[0x40:0x60] = var0;\n    \n        if (!msg.data.length) { goto label_0098; }\n    \n    label_000B:\n        var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n    \n        if (var0 == 0x11a9f10a) {\n            // Dispatch table entry for noToken()\n            var var1 = 0x033a;\n            var var2 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n        \n        label_033A:\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n            var temp1 = memory[0x40:0x60];\n            return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n        } else if (var0 == 0x27793f87) {\n            // Dispatch table entry for outcome()\n            var1 = 0x0357;\n            var2 = storage[0x05];\n        \n        label_0357:\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = var2;\n            var temp3 = memory[0x40:0x60];\n            return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n        } else if (var0 == 0x3f6fa655) {\n            // Dispatch table entry for resolved()\n            var1 = 0x0369;\n            var2 = storage[0x06] & 0xff;\n            var temp4 = memory[0x40:0x60];\n            memory[temp4:temp4 + 0x20] = !!var2;\n            var temp5 = memory[0x40:0x60];\n            return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n        } else if (var0 == 0x5600f04f) {\n            // Dispatch table entry for url()\n            var temp6 = memory[0x40:0x60];\n            var2 = temp6;\n            var var3 = 0x04;\n            var temp7 = storage[var3];\n            var temp8 = (temp7 & !(temp7 & 0x01) * 0x0100 + ~0x00) / 0x02;\n            memory[0x40:0x60] = var2 + (temp8 + 0x1f) / 0x20 * 0x20 + 0x20;\n            memory[var2:var2 + 0x20] = temp8;\n            var1 = 0x037d;\n            var var4 = temp8;\n            var var5 = var2 + 0x20;\n            var var6 = var3;\n            var var7 = var4;\n        \n            if (!var7) {\n                func_0416(var3, var4, var5, var6, var7);\n                var temp9 = memory[0x40:0x60];\n                var3 = temp9;\n                var4 = var3;\n                var temp10 = var4 + 0x20;\n                memory[var4:var4 + 0x20] = temp10 - var4;\n                var temp11 = var2;\n                memory[temp10:temp10 + 0x20] = memory[temp11:temp11 + 0x20];\n                var temp12 = temp10 + 0x20;\n                var temp13 = memory[temp11:temp11 + 0x20];\n                memory[temp12:temp12 + temp13] = address(0x04).call.gas((temp13 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp11 + 0x20:temp11 + 0x20 + temp13]);\n                var5 = temp13 + temp12;\n                var6 = temp13 & 0x1f;\n            \n                if (!var6) {\n                    var temp14 = memory[0x40:0x60];\n                    return memory[temp14:temp14 + var5 - temp14];\n                } else {\n                    var temp15 = var6;\n                    var temp16 = var5 - temp15;\n                    memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                    var temp17 = memory[0x40:0x60];\n                    return memory[temp17:temp17 + (temp16 + 0x20) - temp17];\n                }\n            } else if (0x1f < var7) {\n                var temp18 = var5;\n                var temp19 = temp18 + var7;\n                var5 = temp19;\n                memory[0x00:0x20] = var6;\n                var temp20 = keccak256(memory[0x00:0x20]);\n                memory[temp18:temp18 + 0x20] = storage[temp20];\n                var6 = temp20 + 0x01;\n                var7 = temp18 + 0x20;\n            \n                if (var5 <= var7) { goto label_040D; }\n            \n            label_03F9:\n                var temp21 = var6;\n                var temp22 = var7;\n                memory[temp22:temp22 + 0x20] = storage[temp21];\n                var6 = temp21 + 0x01;\n                var7 = temp22 + 0x20;\n            \n                if (var5 > var7) { goto label_03F9; }\n            \n            label_040D:\n                var temp23 = var5;\n                var temp24 = temp23 + (var7 - temp23 & 0x1f);\n                var7 = temp23;\n                var5 = temp24;\n                func_0416(var3, var4, var5, var6, var7);\n                // Error: Could not resolve method call return address!\n            } else {\n                var temp25 = var5;\n                memory[temp25:temp25 + 0x20] = storage[var6] / 0x0100 * 0x0100;\n                var7 = var7;\n                var5 = temp25 + 0x20;\n                func_0416(var3, var4, var5, var6, var7);\n                // Error: Could not resolve method call return address!\n            }\n        } else if (var0 == 0x65e17c9d) {\n            // Dispatch table entry for feeAccount()\n            var1 = 0x033a;\n            var2 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n            goto label_033A;\n        } else if (var0 == 0x93854494) {\n            // Dispatch table entry for factHash()\n            var1 = 0x0357;\n            var2 = storage[0x02];\n            goto label_0357;\n        } else if (var0 == 0xa6403636) {\n            // Dispatch table entry for resolve(uint8,bytes32,bytes32,bytes32)\n            var1 = 0x0338;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44];\n            var4 = msg.data[0x44:0x64];\n            var5 = msg.data[0x64:0x84];\n            var temp26 = memory[0x40:0x60];\n            memory[temp26:temp26 + 0x20] = storage[0x02];\n            memory[temp26 + 0x20:temp26 + 0x20 + 0x20] = var5;\n            var temp27 = memory[0x40:0x60];\n            memory[temp27:temp27 + 0x20] = keccak256(memory[temp27:temp27 + temp26 - temp27 + 0x40]);\n            memory[temp27 + 0x20:temp27 + 0x20 + 0x20] = var2 & 0xff;\n            memory[temp27 + 0x40:temp27 + 0x40 + 0x20] = var3;\n            memory[temp27 + 0x60:temp27 + 0x60 + 0x20] = var4;\n            var temp28 = memory[0x40:0x60];\n            var6 = 0x00;\n            var7 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n            var var8 = 0x01;\n            var var9 = temp27 + 0x80;\n            var temp29;\n            temp29, memory[temp28:temp28 + 0x20] = address(var8).call.gas(msg.gas - 0x61da).value(var6)(memory[temp28:temp28 + temp27 - temp28 + 0x80]);\n        \n            if (!temp29) { goto label_0002; }\n        \n            resolve(var2, var3, var4, var5, var6, var7, var8, var9);\n            stop();\n        } else if (var0 == 0xbbf646c2) {\n            // Dispatch table entry for ethAddr()\n            var1 = 0x033a;\n            var2 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n            goto label_033A;\n        } else if (var0 == 0xdb006a75) {\n            // Dispatch table entry for redeem(uint256)\n            var1 = 0x0338;\n            var temp30 = msg.data[0x04:0x24];\n            var2 = temp30;\n            var3 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n            var4 = 0x0de0b6b3a7640000;\n            var5 = 0x04a0;\n            var6 = var2;\n            var7 = storage[0x07];\n            var8 = 0x00;\n            var9 = var7 * var6;\n            var var10 = 0x0824;\n            var var11 = var8 == var6;\n        \n            if (var11) {\n                func_0227(var11);\n                var5 = func_0824(var6, var7, var8, var9);\n                func_04A0(var2, var3, var4, var5);\n                stop();\n            } else {\n                func_0221(var6, var7, var9, var11);\n                var5 = func_0824(var6, var7, var8, var9);\n                func_04A0(var2, var3, var4, var5);\n                stop();\n            }\n        } else if (var0 == 0xddca3f43) {\n            // Dispatch table entry for fee()\n            var1 = 0x0357;\n            var2 = storage[0x07];\n            goto label_0357;\n        } else if (var0 == 0xefc81a8c) {\n            // Dispatch table entry for create()\n            var1 = 0x0338;\n            var temp31 = memory[0x40:0x60];\n            memory[temp31:temp31 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n            var temp32 = 0x02 ** 0xa0 - 0x01;\n            memory[temp31 + 0x04:temp31 + 0x04 + 0x20] = temp32 & msg.sender;\n            memory[temp31 + 0x24:temp31 + 0x24 + 0x20] = msg.value;\n            var temp33 = memory[0x40:0x60];\n            var2 = storage[0x00] & temp32;\n            var3 = 0x0ecaea73;\n            var4 = temp31 + 0x44;\n            var temp34;\n            temp34, memory[temp33:temp33 + 0x00] = address(var2).call.gas(msg.gas - 0x61da)(memory[temp33:temp33 + temp31 - temp33 + 0x44]);\n        \n            if (!temp34) { goto label_0002; }\n        \n            create(var2, var3, var4);\n            stop();\n        } else if (var0 == 0xf0d9bb20) {\n            // Dispatch table entry for yesToken()\n            var1 = 0x033a;\n            var2 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n            goto label_033A;\n        } else { goto label_0098; }\n    }\n    \n    function resolve(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6, var arg7) {\n        if (memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20] & 0x02 ** 0xa0 - 0x01 != arg5) { goto label_0002; }\n    \n        if (storage[0x06] & 0xff) { goto label_0002; }\n    \n        arg4 = arg3;\n        arg5 = arg4 == 0x00;\n    \n        if (arg5) {\n            if (!arg5) {\n            label_009C:\n            \n            label_0002:\n                memory[0x40:0x60] = arg4;\n            \n                if (!msg.data.length) {\n                label_0098:\n                    arg4 = 0x0338;\n                    goto label_0002;\n                } else {\n                    arg4 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                \n                    if (arg4 == 0x11a9f10a) {\n                        arg5 = 0x033a;\n                        arg6 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n                    \n                    label_033A:\n                        var temp0 = memory[0x40:0x60];\n                        memory[temp0:temp0 + 0x20] = arg6 & 0x02 ** 0xa0 - 0x01;\n                        var temp1 = memory[0x40:0x60];\n                        return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n                    } else if (arg4 == 0x27793f87) {\n                        arg5 = 0x0357;\n                        arg6 = storage[0x05];\n                    \n                    label_0357:\n                        var temp2 = memory[0x40:0x60];\n                        memory[temp2:temp2 + 0x20] = arg6;\n                        var temp3 = memory[0x40:0x60];\n                        return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n                    } else if (arg4 == 0x3f6fa655) {\n                        arg5 = 0x0369;\n                        arg6 = storage[0x06] & 0xff;\n                        var temp4 = memory[0x40:0x60];\n                        memory[temp4:temp4 + 0x20] = !!arg6;\n                        var temp5 = memory[0x40:0x60];\n                        return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n                    } else if (arg4 == 0x5600f04f) {\n                        var temp6 = memory[0x40:0x60];\n                        arg6 = temp6;\n                        arg7 = 0x04;\n                        var temp7 = storage[arg7];\n                        var temp8 = (temp7 & !(temp7 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                        memory[0x40:0x60] = arg6 + (temp8 + 0x1f) / 0x20 * 0x20 + 0x20;\n                        memory[arg6:arg6 + 0x20] = temp8;\n                        arg5 = 0x037d;\n                        var var0 = temp8;\n                        var var1 = arg6 + 0x20;\n                        var var2 = arg7;\n                        var var3 = var0;\n                    \n                        if (!var3) {\n                            func_0416(arg7, var0, var1, var2, var3);\n                            var temp9 = memory[0x40:0x60];\n                            arg7 = temp9;\n                            var0 = arg7;\n                            var temp10 = var0 + 0x20;\n                            memory[var0:var0 + 0x20] = temp10 - var0;\n                            var temp11 = arg6;\n                            memory[temp10:temp10 + 0x20] = memory[temp11:temp11 + 0x20];\n                            var temp12 = temp10 + 0x20;\n                            var temp13 = memory[temp11:temp11 + 0x20];\n                            memory[temp12:temp12 + temp13] = address(0x04).call.gas((temp13 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp11 + 0x20:temp11 + 0x20 + temp13]);\n                            var1 = temp13 + temp12;\n                            var2 = temp13 & 0x1f;\n                        \n                            if (!var2) {\n                                var temp14 = memory[0x40:0x60];\n                                return memory[temp14:temp14 + var1 - temp14];\n                            } else {\n                                var temp15 = var2;\n                                var temp16 = var1 - temp15;\n                                memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                                var temp17 = memory[0x40:0x60];\n                                return memory[temp17:temp17 + (temp16 + 0x20) - temp17];\n                            }\n                        } else if (0x1f < var3) {\n                            var temp18 = var1;\n                            var temp19 = temp18 + var3;\n                            var1 = temp19;\n                            memory[0x00:0x20] = var2;\n                            var temp20 = keccak256(memory[0x00:0x20]);\n                            memory[temp18:temp18 + 0x20] = storage[temp20];\n                            var2 = temp20 + 0x01;\n                            var3 = temp18 + 0x20;\n                        \n                            if (var1 <= var3) { goto label_040D; }\n                        \n                        label_03F9:\n                            var temp21 = var2;\n                            var temp22 = var3;\n                            memory[temp22:temp22 + 0x20] = storage[temp21];\n                            var2 = temp21 + 0x01;\n                            var3 = temp22 + 0x20;\n                        \n                            if (var1 > var3) { goto label_03F9; }\n                        \n                        label_040D:\n                            var temp23 = var1;\n                            var temp24 = temp23 + (var3 - temp23 & 0x1f);\n                            var3 = temp23;\n                            var1 = temp24;\n                            func_0416(arg7, var0, var1, var2, var3);\n                            // Error: Could not resolve method call return address!\n                        } else {\n                            var temp25 = var1;\n                            memory[temp25:temp25 + 0x20] = storage[var2] / 0x0100 * 0x0100;\n                            var3 = var3;\n                            var1 = temp25 + 0x20;\n                            func_0416(arg7, var0, var1, var2, var3);\n                            // Error: Could not resolve method call return address!\n                        }\n                    } else if (arg4 == 0x65e17c9d) {\n                        arg5 = 0x033a;\n                        arg6 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else if (arg4 == 0x93854494) {\n                        arg5 = 0x0357;\n                        arg6 = storage[0x02];\n                        goto label_0357;\n                    } else if (arg4 == 0xa6403636) {\n                        arg5 = 0x0338;\n                        arg6 = msg.data[0x04:0x24];\n                        arg7 = msg.data[0x24:0x44];\n                        var0 = msg.data[0x44:0x64];\n                        var1 = msg.data[0x64:0x84];\n                        var temp26 = memory[0x40:0x60];\n                        memory[temp26:temp26 + 0x20] = storage[0x02];\n                        memory[temp26 + 0x20:temp26 + 0x20 + 0x20] = var1;\n                        var temp27 = memory[0x40:0x60];\n                        memory[temp27:temp27 + 0x20] = keccak256(memory[temp27:temp27 + temp26 - temp27 + 0x40]);\n                        memory[temp27 + 0x20:temp27 + 0x20 + 0x20] = arg6 & 0xff;\n                        memory[temp27 + 0x40:temp27 + 0x40 + 0x20] = arg7;\n                        memory[temp27 + 0x60:temp27 + 0x60 + 0x20] = var0;\n                        var temp28 = memory[0x40:0x60];\n                        var2 = 0x00;\n                        var3 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                        var var4 = 0x01;\n                        var var5 = temp27 + 0x80;\n                        var temp29;\n                        temp29, memory[temp28:temp28 + 0x20] = address(var4).call.gas(msg.gas - 0x61da).value(var2)(memory[temp28:temp28 + temp27 - temp28 + 0x80]);\n                    \n                        if (!temp29) { goto label_0002; }\n                    \n                        resolve(arg6, arg7, var0, var1, var2, var3, var4, var5);\n                        stop();\n                    } else if (arg4 == 0xbbf646c2) {\n                        arg5 = 0x033a;\n                        arg6 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else if (arg4 == 0xdb006a75) {\n                        arg5 = 0x0338;\n                        var temp30 = msg.data[0x04:0x24];\n                        arg6 = temp30;\n                        arg7 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                        var0 = 0x0de0b6b3a7640000;\n                        var1 = 0x04a0;\n                        var2 = arg6;\n                        var3 = storage[0x07];\n                        var4 = 0x00;\n                        var5 = var3 * var2;\n                        var var6 = 0x0824;\n                        var var7 = var4 == var2;\n                    \n                        if (var7) {\n                            func_0227(var7);\n                            var1 = func_0824(var2, var3, var4, var5);\n                            func_04A0(arg6, arg7, var0, var1);\n                            stop();\n                        } else {\n                            func_0221(var2, var3, var5, var7);\n                            var1 = func_0824(var2, var3, var4, var5);\n                            func_04A0(arg6, arg7, var0, var1);\n                            stop();\n                        }\n                    } else if (arg4 == 0xddca3f43) {\n                        arg5 = 0x0357;\n                        arg6 = storage[0x07];\n                        goto label_0357;\n                    } else if (arg4 == 0xefc81a8c) {\n                        arg5 = 0x0338;\n                        var temp31 = memory[0x40:0x60];\n                        memory[temp31:temp31 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n                        var temp32 = 0x02 ** 0xa0 - 0x01;\n                        memory[temp31 + 0x04:temp31 + 0x04 + 0x20] = temp32 & msg.sender;\n                        memory[temp31 + 0x24:temp31 + 0x24 + 0x20] = msg.value;\n                        var temp33 = memory[0x40:0x60];\n                        arg6 = storage[0x00] & temp32;\n                        arg7 = 0x0ecaea73;\n                        var0 = temp31 + 0x44;\n                        var temp34;\n                        temp34, memory[temp33:temp33 + 0x00] = address(arg6).call.gas(msg.gas - 0x61da)(memory[temp33:temp33 + temp31 - temp33 + 0x44]);\n                    \n                        if (!temp34) { goto label_0002; }\n                    \n                        create(arg6, arg7, var0);\n                        stop();\n                    } else if (arg4 == 0xf0d9bb20) {\n                        arg5 = 0x033a;\n                        arg6 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else { goto label_0098; }\n                }\n            } else {\n            label_0445:\n                var temp35 = arg4;\n                storage[0x05] = temp35;\n                var temp36 = (storage[0x06] & ~0xff) | 0x01;\n                storage[0x06] = temp36;\n                var temp37 = memory[0x40:0x60];\n                memory[temp37:temp37 + 0x20] = !!(temp36 & 0xff);\n                memory[temp37 + 0x20:temp37 + 0x20 + 0x20] = temp35;\n                var temp38 = memory[0x40:0x60];\n                log(memory[temp38:temp38 + temp37 - temp38 + 0x40], [0x25bdc110f1d57950be657c53d166f950a9db609cb04a7fbb52e4909d43b16516]);\n                return;\n            }\n        } else if (arg4 != 0x01) { goto label_009C; }\n        else { goto label_0445; }\n    }\n    \n    function func_0210(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n        var temp0 = arg0;\n        var var1 = arg1 * temp0;\n        var var2 = 0x0824;\n        var var3 = var0 == temp0;\n    \n        if (var3) {\n            func_0227(var3);\n            r0 = func_0824(arg0, arg1, var0, var1);\n            // Error: Could not resolve method call return address!\n        } else {\n            func_0221(arg0, arg1, var1, var3);\n            r0 = func_0824(arg0, arg1, var0, var1);\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function func_0221(var arg0, var arg1, var arg2, var arg3) {\n        arg3 = arg2 / arg0 == arg1;\n    \n        if (arg3) { return; }\n    \n    label_0002:\n        memory[0x40:0x60] = arg3;\n    \n        if (!msg.data.length) {\n        label_0098:\n            arg3 = 0x0338;\n            goto label_0002;\n        } else {\n            arg3 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (arg3 == 0x11a9f10a) {\n                var var0 = 0x033a;\n                var var1 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n            \n            label_033A:\n                var temp0 = memory[0x40:0x60];\n                memory[temp0:temp0 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                var temp1 = memory[0x40:0x60];\n                return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n            } else if (arg3 == 0x27793f87) {\n                var0 = 0x0357;\n                var1 = storage[0x05];\n            \n            label_0357:\n                var temp2 = memory[0x40:0x60];\n                memory[temp2:temp2 + 0x20] = var1;\n                var temp3 = memory[0x40:0x60];\n                return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n            } else if (arg3 == 0x3f6fa655) {\n                var0 = 0x0369;\n                var1 = storage[0x06] & 0xff;\n                var temp4 = memory[0x40:0x60];\n                memory[temp4:temp4 + 0x20] = !!var1;\n                var temp5 = memory[0x40:0x60];\n                return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n            } else if (arg3 == 0x5600f04f) {\n                var temp6 = memory[0x40:0x60];\n                var1 = temp6;\n                var var2 = 0x04;\n                var temp7 = storage[var2];\n                var temp8 = (temp7 & !(temp7 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                memory[0x40:0x60] = var1 + (temp8 + 0x1f) / 0x20 * 0x20 + 0x20;\n                memory[var1:var1 + 0x20] = temp8;\n                var0 = 0x037d;\n                var var3 = temp8;\n                var var4 = var1 + 0x20;\n                var var5 = var2;\n                var var6 = var3;\n            \n                if (!var6) {\n                    func_0416(var2, var3, var4, var5, var6);\n                    var temp9 = memory[0x40:0x60];\n                    var2 = temp9;\n                    var3 = var2;\n                    var temp10 = var3 + 0x20;\n                    memory[var3:var3 + 0x20] = temp10 - var3;\n                    var temp11 = var1;\n                    memory[temp10:temp10 + 0x20] = memory[temp11:temp11 + 0x20];\n                    var temp12 = temp10 + 0x20;\n                    var temp13 = memory[temp11:temp11 + 0x20];\n                    memory[temp12:temp12 + temp13] = address(0x04).call.gas((temp13 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp11 + 0x20:temp11 + 0x20 + temp13]);\n                    var4 = temp13 + temp12;\n                    var5 = temp13 & 0x1f;\n                \n                    if (!var5) {\n                        var temp14 = memory[0x40:0x60];\n                        return memory[temp14:temp14 + var4 - temp14];\n                    } else {\n                        var temp15 = var5;\n                        var temp16 = var4 - temp15;\n                        memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                        var temp17 = memory[0x40:0x60];\n                        return memory[temp17:temp17 + (temp16 + 0x20) - temp17];\n                    }\n                } else if (0x1f < var6) {\n                    var temp18 = var4;\n                    var temp19 = temp18 + var6;\n                    var4 = temp19;\n                    memory[0x00:0x20] = var5;\n                    var temp20 = keccak256(memory[0x00:0x20]);\n                    memory[temp18:temp18 + 0x20] = storage[temp20];\n                    var5 = temp20 + 0x01;\n                    var6 = temp18 + 0x20;\n                \n                    if (var4 <= var6) { goto label_040D; }\n                \n                label_03F9:\n                    var temp21 = var5;\n                    var temp22 = var6;\n                    memory[temp22:temp22 + 0x20] = storage[temp21];\n                    var5 = temp21 + 0x01;\n                    var6 = temp22 + 0x20;\n                \n                    if (var4 > var6) { goto label_03F9; }\n                \n                label_040D:\n                    var temp23 = var4;\n                    var temp24 = temp23 + (var6 - temp23 & 0x1f);\n                    var6 = temp23;\n                    var4 = temp24;\n                    func_0416(var2, var3, var4, var5, var6);\n                    // Error: Could not resolve method call return address!\n                } else {\n                    var temp25 = var4;\n                    memory[temp25:temp25 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n                    var6 = var6;\n                    var4 = temp25 + 0x20;\n                    func_0416(var2, var3, var4, var5, var6);\n                    // Error: Could not resolve method call return address!\n                }\n            } else if (arg3 == 0x65e17c9d) {\n                var0 = 0x033a;\n                var1 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else if (arg3 == 0x93854494) {\n                var0 = 0x0357;\n                var1 = storage[0x02];\n                goto label_0357;\n            } else if (arg3 == 0xa6403636) {\n                var0 = 0x0338;\n                var1 = msg.data[0x04:0x24];\n                var2 = msg.data[0x24:0x44];\n                var3 = msg.data[0x44:0x64];\n                var4 = msg.data[0x64:0x84];\n                var temp26 = memory[0x40:0x60];\n                memory[temp26:temp26 + 0x20] = storage[0x02];\n                memory[temp26 + 0x20:temp26 + 0x20 + 0x20] = var4;\n                var temp27 = memory[0x40:0x60];\n                memory[temp27:temp27 + 0x20] = keccak256(memory[temp27:temp27 + temp26 - temp27 + 0x40]);\n                memory[temp27 + 0x20:temp27 + 0x20 + 0x20] = var1 & 0xff;\n                memory[temp27 + 0x40:temp27 + 0x40 + 0x20] = var2;\n                memory[temp27 + 0x60:temp27 + 0x60 + 0x20] = var3;\n                var temp28 = memory[0x40:0x60];\n                var5 = 0x00;\n                var6 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                var var7 = 0x01;\n                var var8 = temp27 + 0x80;\n                var temp29;\n                temp29, memory[temp28:temp28 + 0x20] = address(var7).call.gas(msg.gas - 0x61da).value(var5)(memory[temp28:temp28 + temp27 - temp28 + 0x80]);\n            \n                if (!temp29) { goto label_0002; }\n            \n                resolve(var1, var2, var3, var4, var5, var6, var7, var8);\n                stop();\n            } else if (arg3 == 0xbbf646c2) {\n                var0 = 0x033a;\n                var1 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else if (arg3 == 0xdb006a75) {\n                var0 = 0x0338;\n                var temp30 = msg.data[0x04:0x24];\n                var1 = temp30;\n                var2 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                var3 = 0x0de0b6b3a7640000;\n                var4 = 0x04a0;\n                var5 = var1;\n                var6 = storage[0x07];\n                var7 = 0x00;\n                var8 = var6 * var5;\n                var var9 = 0x0824;\n                var var10 = var7 == var5;\n            \n                if (var10) {\n                    func_0227(var10);\n                    var4 = func_0824(var5, var6, var7, var8);\n                    func_04A0(var1, var2, var3, var4);\n                    stop();\n                } else {\n                    func_0221(var5, var6, var8, var10);\n                    var4 = func_0824(var5, var6, var7, var8);\n                    func_04A0(var1, var2, var3, var4);\n                    stop();\n                }\n            } else if (arg3 == 0xddca3f43) {\n                var0 = 0x0357;\n                var1 = storage[0x07];\n                goto label_0357;\n            } else if (arg3 == 0xefc81a8c) {\n                var0 = 0x0338;\n                var temp31 = memory[0x40:0x60];\n                memory[temp31:temp31 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n                var temp32 = 0x02 ** 0xa0 - 0x01;\n                memory[temp31 + 0x04:temp31 + 0x04 + 0x20] = temp32 & msg.sender;\n                memory[temp31 + 0x24:temp31 + 0x24 + 0x20] = msg.value;\n                var temp33 = memory[0x40:0x60];\n                var1 = storage[0x00] & temp32;\n                var2 = 0x0ecaea73;\n                var3 = temp31 + 0x44;\n                var temp34;\n                temp34, memory[temp33:temp33 + 0x00] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp33:temp33 + temp31 - temp33 + 0x44]);\n            \n                if (!temp34) { goto label_0002; }\n            \n                create(var1, var2, var3);\n                stop();\n            } else if (arg3 == 0xf0d9bb20) {\n                var0 = 0x033a;\n                var1 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else { goto label_0098; }\n        }\n    }\n    \n    function func_0227(var arg0) {\n        if (arg0) { return; }\n    \n    label_0002:\n        memory[0x40:0x60] = arg0;\n    \n        if (!msg.data.length) {\n        label_0098:\n            arg0 = 0x0338;\n            goto label_0002;\n        } else {\n            arg0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (arg0 == 0x11a9f10a) {\n                var var0 = 0x033a;\n                var var1 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n            \n            label_033A:\n                var temp0 = memory[0x40:0x60];\n                memory[temp0:temp0 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                var temp1 = memory[0x40:0x60];\n                return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n            } else if (arg0 == 0x27793f87) {\n                var0 = 0x0357;\n                var1 = storage[0x05];\n            \n            label_0357:\n                var temp2 = memory[0x40:0x60];\n                memory[temp2:temp2 + 0x20] = var1;\n                var temp3 = memory[0x40:0x60];\n                return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n            } else if (arg0 == 0x3f6fa655) {\n                var0 = 0x0369;\n                var1 = storage[0x06] & 0xff;\n                var temp4 = memory[0x40:0x60];\n                memory[temp4:temp4 + 0x20] = !!var1;\n                var temp5 = memory[0x40:0x60];\n                return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n            } else if (arg0 == 0x5600f04f) {\n                var temp6 = memory[0x40:0x60];\n                var1 = temp6;\n                var var2 = 0x04;\n                var temp7 = storage[var2];\n                var temp8 = (temp7 & !(temp7 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                memory[0x40:0x60] = var1 + (temp8 + 0x1f) / 0x20 * 0x20 + 0x20;\n                memory[var1:var1 + 0x20] = temp8;\n                var0 = 0x037d;\n                var var3 = temp8;\n                var var4 = var1 + 0x20;\n                var var5 = var2;\n                var var6 = var3;\n            \n                if (!var6) {\n                    func_0416(var2, var3, var4, var5, var6);\n                    var temp9 = memory[0x40:0x60];\n                    var2 = temp9;\n                    var3 = var2;\n                    var temp10 = var3 + 0x20;\n                    memory[var3:var3 + 0x20] = temp10 - var3;\n                    var temp11 = var1;\n                    memory[temp10:temp10 + 0x20] = memory[temp11:temp11 + 0x20];\n                    var temp12 = temp10 + 0x20;\n                    var temp13 = memory[temp11:temp11 + 0x20];\n                    memory[temp12:temp12 + temp13] = address(0x04).call.gas((temp13 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp11 + 0x20:temp11 + 0x20 + temp13]);\n                    var4 = temp13 + temp12;\n                    var5 = temp13 & 0x1f;\n                \n                    if (!var5) {\n                        var temp14 = memory[0x40:0x60];\n                        return memory[temp14:temp14 + var4 - temp14];\n                    } else {\n                        var temp15 = var5;\n                        var temp16 = var4 - temp15;\n                        memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                        var temp17 = memory[0x40:0x60];\n                        return memory[temp17:temp17 + (temp16 + 0x20) - temp17];\n                    }\n                } else if (0x1f < var6) {\n                    var temp18 = var4;\n                    var temp19 = temp18 + var6;\n                    var4 = temp19;\n                    memory[0x00:0x20] = var5;\n                    var temp20 = keccak256(memory[0x00:0x20]);\n                    memory[temp18:temp18 + 0x20] = storage[temp20];\n                    var5 = temp20 + 0x01;\n                    var6 = temp18 + 0x20;\n                \n                    if (var4 <= var6) { goto label_040D; }\n                \n                label_03F9:\n                    var temp21 = var5;\n                    var temp22 = var6;\n                    memory[temp22:temp22 + 0x20] = storage[temp21];\n                    var5 = temp21 + 0x01;\n                    var6 = temp22 + 0x20;\n                \n                    if (var4 > var6) { goto label_03F9; }\n                \n                label_040D:\n                    var temp23 = var4;\n                    var temp24 = temp23 + (var6 - temp23 & 0x1f);\n                    var6 = temp23;\n                    var4 = temp24;\n                    func_0416(var2, var3, var4, var5, var6);\n                    // Error: Could not resolve method call return address!\n                } else {\n                    var temp25 = var4;\n                    memory[temp25:temp25 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n                    var6 = var6;\n                    var4 = temp25 + 0x20;\n                    func_0416(var2, var3, var4, var5, var6);\n                    // Error: Could not resolve method call return address!\n                }\n            } else if (arg0 == 0x65e17c9d) {\n                var0 = 0x033a;\n                var1 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else if (arg0 == 0x93854494) {\n                var0 = 0x0357;\n                var1 = storage[0x02];\n                goto label_0357;\n            } else if (arg0 == 0xa6403636) {\n                var0 = 0x0338;\n                var1 = msg.data[0x04:0x24];\n                var2 = msg.data[0x24:0x44];\n                var3 = msg.data[0x44:0x64];\n                var4 = msg.data[0x64:0x84];\n                var temp26 = memory[0x40:0x60];\n                memory[temp26:temp26 + 0x20] = storage[0x02];\n                memory[temp26 + 0x20:temp26 + 0x20 + 0x20] = var4;\n                var temp27 = memory[0x40:0x60];\n                memory[temp27:temp27 + 0x20] = keccak256(memory[temp27:temp27 + temp26 - temp27 + 0x40]);\n                memory[temp27 + 0x20:temp27 + 0x20 + 0x20] = var1 & 0xff;\n                memory[temp27 + 0x40:temp27 + 0x40 + 0x20] = var2;\n                memory[temp27 + 0x60:temp27 + 0x60 + 0x20] = var3;\n                var temp28 = memory[0x40:0x60];\n                var5 = 0x00;\n                var6 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                var var7 = 0x01;\n                var var8 = temp27 + 0x80;\n                var temp29;\n                temp29, memory[temp28:temp28 + 0x20] = address(var7).call.gas(msg.gas - 0x61da).value(var5)(memory[temp28:temp28 + temp27 - temp28 + 0x80]);\n            \n                if (!temp29) { goto label_0002; }\n            \n                resolve(var1, var2, var3, var4, var5, var6, var7, var8);\n                stop();\n            } else if (arg0 == 0xbbf646c2) {\n                var0 = 0x033a;\n                var1 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else if (arg0 == 0xdb006a75) {\n                var0 = 0x0338;\n                var temp30 = msg.data[0x04:0x24];\n                var1 = temp30;\n                var2 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                var3 = 0x0de0b6b3a7640000;\n                var4 = 0x04a0;\n                var5 = var1;\n                var6 = storage[0x07];\n                var7 = 0x00;\n                var8 = var6 * var5;\n                var var9 = 0x0824;\n                var var10 = var7 == var5;\n            \n                if (var10) {\n                    func_0227(var10);\n                    var4 = func_0824(var5, var6, var7, var8);\n                    func_04A0(var1, var2, var3, var4);\n                    stop();\n                } else {\n                    func_0221(var5, var6, var8, var10);\n                    var4 = func_0824(var5, var6, var7, var8);\n                    func_04A0(var1, var2, var3, var4);\n                    stop();\n                }\n            } else if (arg0 == 0xddca3f43) {\n                var0 = 0x0357;\n                var1 = storage[0x07];\n                goto label_0357;\n            } else if (arg0 == 0xefc81a8c) {\n                var0 = 0x0338;\n                var temp31 = memory[0x40:0x60];\n                memory[temp31:temp31 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n                var temp32 = 0x02 ** 0xa0 - 0x01;\n                memory[temp31 + 0x04:temp31 + 0x04 + 0x20] = temp32 & msg.sender;\n                memory[temp31 + 0x24:temp31 + 0x24 + 0x20] = msg.value;\n                var temp33 = memory[0x40:0x60];\n                var1 = storage[0x00] & temp32;\n                var2 = 0x0ecaea73;\n                var3 = temp31 + 0x44;\n                var temp34;\n                temp34, memory[temp33:temp33 + 0x00] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp33:temp33 + temp31 - temp33 + 0x44]);\n            \n                if (!temp34) { goto label_0002; }\n            \n                create(var1, var2, var3);\n                stop();\n            } else if (arg0 == 0xf0d9bb20) {\n                var0 = 0x033a;\n                var1 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n                goto label_033A;\n            } else { goto label_0098; }\n        }\n    }\n    \n    function create(var arg0, var arg1, var arg2) {\n        var temp0 = memory[0x40:0x60];\n        memory[temp0:temp0 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n        var temp1 = 0x02 ** 0xa0 - 0x01;\n        memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = temp1 & msg.sender;\n        memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = msg.value;\n        var temp2 = memory[0x40:0x60];\n        arg0 = temp1 & storage[0x01];\n        arg2 = temp0 + 0x44;\n        var temp3;\n        temp3, memory[temp2:temp2 + 0x00] = address(arg0).call.gas(msg.gas - 0x61da)(memory[temp2:temp2 + temp0 - temp2 + 0x44]);\n    \n        if (!temp3) {\n        label_0002:\n            memory[0x40:0x60] = arg2;\n        \n            if (!msg.data.length) {\n            label_0098:\n                arg2 = 0x0338;\n                goto label_0002;\n            } else {\n                arg2 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n            \n                if (arg2 == 0x11a9f10a) {\n                    var var0 = 0x033a;\n                    var var1 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n                \n                label_033A:\n                    var temp4 = memory[0x40:0x60];\n                    memory[temp4:temp4 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                    var temp5 = memory[0x40:0x60];\n                    return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n                } else if (arg2 == 0x27793f87) {\n                    var0 = 0x0357;\n                    var1 = storage[0x05];\n                \n                label_0357:\n                    var temp6 = memory[0x40:0x60];\n                    memory[temp6:temp6 + 0x20] = var1;\n                    var temp7 = memory[0x40:0x60];\n                    return memory[temp7:temp7 + temp6 - temp7 + 0x20];\n                } else if (arg2 == 0x3f6fa655) {\n                    var0 = 0x0369;\n                    var1 = storage[0x06] & 0xff;\n                    var temp8 = memory[0x40:0x60];\n                    memory[temp8:temp8 + 0x20] = !!var1;\n                    var temp9 = memory[0x40:0x60];\n                    return memory[temp9:temp9 + temp8 - temp9 + 0x20];\n                } else if (arg2 == 0x5600f04f) {\n                    var temp10 = memory[0x40:0x60];\n                    var1 = temp10;\n                    var var2 = 0x04;\n                    var temp11 = storage[var2];\n                    var temp12 = (temp11 & !(temp11 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                    memory[0x40:0x60] = var1 + (temp12 + 0x1f) / 0x20 * 0x20 + 0x20;\n                    memory[var1:var1 + 0x20] = temp12;\n                    var0 = 0x037d;\n                    var var3 = temp12;\n                    var var4 = var1 + 0x20;\n                    var var5 = var2;\n                    var var6 = var3;\n                \n                    if (!var6) {\n                        func_0416(var2, var3, var4, var5, var6);\n                        var temp13 = memory[0x40:0x60];\n                        var2 = temp13;\n                        var3 = var2;\n                        var temp14 = var3 + 0x20;\n                        memory[var3:var3 + 0x20] = temp14 - var3;\n                        var temp15 = var1;\n                        memory[temp14:temp14 + 0x20] = memory[temp15:temp15 + 0x20];\n                        var temp16 = temp14 + 0x20;\n                        var temp17 = memory[temp15:temp15 + 0x20];\n                        memory[temp16:temp16 + temp17] = address(0x04).call.gas((temp17 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp15 + 0x20:temp15 + 0x20 + temp17]);\n                        var4 = temp17 + temp16;\n                        var5 = temp17 & 0x1f;\n                    \n                        if (!var5) {\n                            var temp18 = memory[0x40:0x60];\n                            return memory[temp18:temp18 + var4 - temp18];\n                        } else {\n                            var temp19 = var5;\n                            var temp20 = var4 - temp19;\n                            memory[temp20:temp20 + 0x20] = ~(0x0100 ** (0x20 - temp19) - 0x01) & memory[temp20:temp20 + 0x20];\n                            var temp21 = memory[0x40:0x60];\n                            return memory[temp21:temp21 + (temp20 + 0x20) - temp21];\n                        }\n                    } else if (0x1f < var6) {\n                        var temp22 = var4;\n                        var temp23 = temp22 + var6;\n                        var4 = temp23;\n                        memory[0x00:0x20] = var5;\n                        var temp24 = keccak256(memory[0x00:0x20]);\n                        memory[temp22:temp22 + 0x20] = storage[temp24];\n                        var5 = temp24 + 0x01;\n                        var6 = temp22 + 0x20;\n                    \n                        if (var4 <= var6) { goto label_040D; }\n                    \n                    label_03F9:\n                        var temp25 = var5;\n                        var temp26 = var6;\n                        memory[temp26:temp26 + 0x20] = storage[temp25];\n                        var5 = temp25 + 0x01;\n                        var6 = temp26 + 0x20;\n                    \n                        if (var4 > var6) { goto label_03F9; }\n                    \n                    label_040D:\n                        var temp27 = var4;\n                        var temp28 = temp27 + (var6 - temp27 & 0x1f);\n                        var6 = temp27;\n                        var4 = temp28;\n                        func_0416(var2, var3, var4, var5, var6);\n                        // Error: Could not resolve method call return address!\n                    } else {\n                        var temp29 = var4;\n                        memory[temp29:temp29 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n                        var6 = var6;\n                        var4 = temp29 + 0x20;\n                        func_0416(var2, var3, var4, var5, var6);\n                        // Error: Could not resolve method call return address!\n                    }\n                } else if (arg2 == 0x65e17c9d) {\n                    var0 = 0x033a;\n                    var1 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                    goto label_033A;\n                } else if (arg2 == 0x93854494) {\n                    var0 = 0x0357;\n                    var1 = storage[0x02];\n                    goto label_0357;\n                } else if (arg2 == 0xa6403636) {\n                    var0 = 0x0338;\n                    var1 = msg.data[0x04:0x24];\n                    var2 = msg.data[0x24:0x44];\n                    var3 = msg.data[0x44:0x64];\n                    var4 = msg.data[0x64:0x84];\n                    var temp30 = memory[0x40:0x60];\n                    memory[temp30:temp30 + 0x20] = storage[0x02];\n                    memory[temp30 + 0x20:temp30 + 0x20 + 0x20] = var4;\n                    var temp31 = memory[0x40:0x60];\n                    memory[temp31:temp31 + 0x20] = keccak256(memory[temp31:temp31 + temp30 - temp31 + 0x40]);\n                    memory[temp31 + 0x20:temp31 + 0x20 + 0x20] = var1 & 0xff;\n                    memory[temp31 + 0x40:temp31 + 0x40 + 0x20] = var2;\n                    memory[temp31 + 0x60:temp31 + 0x60 + 0x20] = var3;\n                    var temp32 = memory[0x40:0x60];\n                    var5 = 0x00;\n                    var6 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                    var var7 = 0x01;\n                    var var8 = temp31 + 0x80;\n                    var temp33;\n                    temp33, memory[temp32:temp32 + 0x20] = address(var7).call.gas(msg.gas - 0x61da).value(var5)(memory[temp32:temp32 + temp31 - temp32 + 0x80]);\n                \n                    if (!temp33) { goto label_0002; }\n                \n                    resolve(var1, var2, var3, var4, var5, var6, var7, var8);\n                    stop();\n                } else if (arg2 == 0xbbf646c2) {\n                    var0 = 0x033a;\n                    var1 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                    goto label_033A;\n                } else if (arg2 == 0xdb006a75) {\n                    var0 = 0x0338;\n                    var temp34 = msg.data[0x04:0x24];\n                    var1 = temp34;\n                    var2 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                    var3 = 0x0de0b6b3a7640000;\n                    var4 = 0x04a0;\n                    var5 = var1;\n                    var6 = storage[0x07];\n                    var7 = 0x00;\n                    var8 = var6 * var5;\n                    var var9 = 0x0824;\n                    var var10 = var7 == var5;\n                \n                    if (var10) {\n                        func_0227(var10);\n                        var4 = func_0824(var5, var6, var7, var8);\n                        func_04A0(var1, var2, var3, var4);\n                        stop();\n                    } else {\n                        func_0221(var5, var6, var8, var10);\n                        var4 = func_0824(var5, var6, var7, var8);\n                        func_04A0(var1, var2, var3, var4);\n                        stop();\n                    }\n                } else if (arg2 == 0xddca3f43) {\n                    var0 = 0x0357;\n                    var1 = storage[0x07];\n                    goto label_0357;\n                } else if (arg2 == 0xefc81a8c) {\n                    var0 = 0x0338;\n                    var temp35 = memory[0x40:0x60];\n                    memory[temp35:temp35 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n                    var temp36 = 0x02 ** 0xa0 - 0x01;\n                    memory[temp35 + 0x04:temp35 + 0x04 + 0x20] = temp36 & msg.sender;\n                    memory[temp35 + 0x24:temp35 + 0x24 + 0x20] = msg.value;\n                    var temp37 = memory[0x40:0x60];\n                    var1 = storage[0x00] & temp36;\n                    var2 = 0x0ecaea73;\n                    var3 = temp35 + 0x44;\n                    var temp38;\n                    temp38, memory[temp37:temp37 + 0x00] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp37:temp37 + temp35 - temp37 + 0x44]);\n                \n                    if (!temp38) { goto label_0002; }\n                \n                    create(var1, var2, var3);\n                    stop();\n                } else if (arg2 == 0xf0d9bb20) {\n                    var0 = 0x033a;\n                    var1 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n                    goto label_033A;\n                } else { goto label_0098; }\n            }\n        } else {\n            var temp39 = memory[0x40:0x60];\n            memory[temp39:temp39 + 0x20] = msg.value;\n            var temp40 = memory[0x40:0x60];\n            log(memory[temp40:temp40 + temp39 - temp40 + 0x20], [0xcc9018de05b5f497ee7618d8830568d8ac2d45d0671b73d8f71c67e824122ec7, msg.sender]);\n            return;\n        }\n    }\n    \n    function func_0416(var arg0, var arg1, var arg2, var arg3, var arg4) {}\n    \n    function func_04A0(var arg0, var arg1, var arg2, var arg3) {\n        var temp0 = memory[0x40:0x60];\n        var temp1;\n        temp1, memory[temp0:temp0 + 0x00] = address(arg1).call.gas(msg.gas - 0x8502).value(arg3 / arg2)(memory[temp0:temp0 + 0x00]);\n    \n        if (!temp1) { goto label_0002; }\n    \n        if (!(storage[0x06] & 0xff)) {\n            var temp55 = memory[0x40:0x60];\n            memory[temp55:temp55 + 0x20] = 0xa24835d1 * 0x02 ** 0xe0;\n            var temp56 = 0x02 ** 0xa0 - 0x01;\n            memory[temp55 + 0x04:temp55 + 0x04 + 0x20] = temp56 & msg.sender;\n            memory[temp55 + 0x24:temp55 + 0x24 + 0x20] = arg0;\n            var temp57 = memory[0x40:0x60];\n            arg1 = temp56 & storage[0x00];\n            arg2 = 0xa24835d1;\n            arg3 = temp55 + 0x44;\n            var temp58;\n            temp58, memory[temp57:temp57 + 0x00] = address(arg1).call.gas(msg.gas - 0x61da)(memory[temp57:temp57 + temp55 - temp57 + 0x44]);\n        \n            if (!temp58) { goto label_0002; }\n        \n            var temp59 = memory[0x40:0x60];\n            memory[temp59:temp59 + 0x20] = 0xa24835d1 * 0x02 ** 0xe0;\n            var temp60 = 0x02 ** 0xa0 - 0x01;\n            memory[temp59 + 0x04:temp59 + 0x04 + 0x20] = temp60 & msg.sender;\n            memory[temp59 + 0x24:temp59 + 0x24 + 0x20] = arg0;\n            var temp61 = memory[0x40:0x60];\n            arg1 = temp60 & storage[0x01];\n            arg3 = temp59 + 0x44;\n            var temp62;\n            temp62, memory[temp61:temp61 + 0x00] = address(arg1).call.gas(msg.gas - 0x61da)(memory[temp61:temp61 + temp59 - temp61 + 0x44]);\n        \n            if (!temp62) { goto label_0002; }\n        \n            arg1 = msg.sender;\n            arg2 = 0x0de0b6b3a7640000;\n            arg3 = 0x063d;\n            var0 = arg0;\n            var1 = 0x0de0b6b3a7640000 - storage[0x07];\n            arg3 = func_0210(var0, var1);\n            var temp63 = memory[0x40:0x60];\n            var temp64;\n            temp64, memory[temp63:temp63 + 0x00] = address(arg1).call.gas(msg.gas - 0x8502).value(arg3 / arg2)(memory[temp63:temp63 + 0x00]);\n        \n            if (!temp64) { goto label_0002; }\n        \n            var temp65 = memory[0x40:0x60];\n            var temp66 = arg0;\n            memory[temp65:temp65 + 0x20] = temp66;\n            memory[temp65 + 0x20:temp65 + 0x20 + 0x20] = temp66;\n            memory[temp65 + 0x40:temp65 + 0x40 + 0x20] = temp66;\n            var temp67 = memory[0x40:0x60];\n            log(memory[temp67:temp67 + temp65 - temp67 + 0x60], [0xbd5034ffbd47e4e72a94baa2cdb74c6fad73cb3bcdc13036b72ec8306f5a7646, msg.sender]);\n            goto label_07FE;\n        } else if (!(storage[0x06] & 0xff)) {\n        label_07FE:\n            return;\n        } else if (storage[0x05] == 0x00) {\n            var temp46 = memory[0x40:0x60];\n            memory[temp46:temp46 + 0x20] = 0xa24835d1 * 0x02 ** 0xe0;\n            var temp47 = 0x02 ** 0xa0 - 0x01;\n            memory[temp46 + 0x04:temp46 + 0x04 + 0x20] = temp47 & msg.sender;\n            memory[temp46 + 0x24:temp46 + 0x24 + 0x20] = arg0;\n            var temp48 = memory[0x40:0x60];\n            arg1 = temp47 & storage[0x01];\n            arg2 = 0xa24835d1;\n            arg3 = temp46 + 0x44;\n            var temp49;\n            temp49, memory[temp48:temp48 + 0x00] = address(arg1).call.gas(msg.gas - 0x61da)(memory[temp48:temp48 + temp46 - temp48 + 0x44]);\n        \n            if (!temp49) { goto label_0002; }\n        \n            arg1 = msg.sender;\n            arg2 = 0x0de0b6b3a7640000;\n            arg3 = 0x073d;\n            var0 = arg0;\n            var1 = 0x0de0b6b3a7640000 - storage[0x07];\n            arg3 = func_0210(var0, var1);\n            var temp50 = memory[0x40:0x60];\n            var temp51;\n            temp51, memory[temp50:temp50 + 0x00] = address(arg1).call.gas(msg.gas - 0x8502).value(arg3 / arg2)(memory[temp50:temp50 + 0x00]);\n        \n            if (!temp51) { goto label_0002; }\n        \n            var temp52 = memory[0x40:0x60];\n            var temp53 = arg0;\n            memory[temp52:temp52 + 0x20] = temp53;\n            memory[temp52 + 0x20:temp52 + 0x20 + 0x20] = 0x00;\n            memory[temp52 + 0x40:temp52 + 0x40 + 0x20] = temp53;\n            var temp54 = memory[0x40:0x60];\n            log(memory[temp54:temp54 + temp52 - temp54 + 0x60], [0xbd5034ffbd47e4e72a94baa2cdb74c6fad73cb3bcdc13036b72ec8306f5a7646, msg.sender]);\n            goto label_07FE;\n        } else if (storage[0x05] != 0x01) { goto label_07FE; }\n        else {\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = 0xa24835d1 * 0x02 ** 0xe0;\n            var temp3 = 0x02 ** 0xa0 - 0x01;\n            memory[temp2 + 0x04:temp2 + 0x04 + 0x20] = temp3 & msg.sender;\n            memory[temp2 + 0x24:temp2 + 0x24 + 0x20] = arg0;\n            var temp4 = memory[0x40:0x60];\n            arg1 = temp3 & storage[0x00];\n            arg2 = 0xa24835d1;\n            arg3 = temp2 + 0x44;\n            var temp5;\n            temp5, memory[temp4:temp4 + 0x00] = address(arg1).call.gas(msg.gas - 0x61da)(memory[temp4:temp4 + temp2 - temp4 + 0x44]);\n        \n            if (!temp5) {\n            label_0002:\n                memory[0x40:0x60] = arg3;\n            \n                if (!msg.data.length) {\n                label_0098:\n                    arg3 = 0x0338;\n                    goto label_0002;\n                } else {\n                    arg3 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                \n                    if (arg3 == 0x11a9f10a) {\n                        var var0 = 0x033a;\n                        var var1 = storage[0x01] & 0x02 ** 0xa0 - 0x01;\n                    \n                    label_033A:\n                        var temp6 = memory[0x40:0x60];\n                        memory[temp6:temp6 + 0x20] = var1 & 0x02 ** 0xa0 - 0x01;\n                        var temp7 = memory[0x40:0x60];\n                        return memory[temp7:temp7 + temp6 - temp7 + 0x20];\n                    } else if (arg3 == 0x27793f87) {\n                        var0 = 0x0357;\n                        var1 = storage[0x05];\n                    \n                    label_0357:\n                        var temp8 = memory[0x40:0x60];\n                        memory[temp8:temp8 + 0x20] = var1;\n                        var temp9 = memory[0x40:0x60];\n                        return memory[temp9:temp9 + temp8 - temp9 + 0x20];\n                    } else if (arg3 == 0x3f6fa655) {\n                        var0 = 0x0369;\n                        var1 = storage[0x06] & 0xff;\n                        var temp10 = memory[0x40:0x60];\n                        memory[temp10:temp10 + 0x20] = !!var1;\n                        var temp11 = memory[0x40:0x60];\n                        return memory[temp11:temp11 + temp10 - temp11 + 0x20];\n                    } else if (arg3 == 0x5600f04f) {\n                        var temp12 = memory[0x40:0x60];\n                        var1 = temp12;\n                        var var2 = 0x04;\n                        var temp13 = storage[var2];\n                        var temp14 = (temp13 & !(temp13 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                        memory[0x40:0x60] = var1 + (temp14 + 0x1f) / 0x20 * 0x20 + 0x20;\n                        memory[var1:var1 + 0x20] = temp14;\n                        var0 = 0x037d;\n                        var var3 = temp14;\n                        var var4 = var1 + 0x20;\n                        var var5 = var2;\n                        var var6 = var3;\n                    \n                        if (!var6) {\n                            func_0416(var2, var3, var4, var5, var6);\n                            var temp15 = memory[0x40:0x60];\n                            var2 = temp15;\n                            var3 = var2;\n                            var temp16 = var3 + 0x20;\n                            memory[var3:var3 + 0x20] = temp16 - var3;\n                            var temp17 = var1;\n                            memory[temp16:temp16 + 0x20] = memory[temp17:temp17 + 0x20];\n                            var temp18 = temp16 + 0x20;\n                            var temp19 = memory[temp17:temp17 + 0x20];\n                            memory[temp18:temp18 + temp19] = address(0x04).call.gas((temp19 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp17 + 0x20:temp17 + 0x20 + temp19]);\n                            var4 = temp19 + temp18;\n                            var5 = temp19 & 0x1f;\n                        \n                            if (!var5) {\n                                var temp20 = memory[0x40:0x60];\n                                return memory[temp20:temp20 + var4 - temp20];\n                            } else {\n                                var temp21 = var5;\n                                var temp22 = var4 - temp21;\n                                memory[temp22:temp22 + 0x20] = ~(0x0100 ** (0x20 - temp21) - 0x01) & memory[temp22:temp22 + 0x20];\n                                var temp23 = memory[0x40:0x60];\n                                return memory[temp23:temp23 + (temp22 + 0x20) - temp23];\n                            }\n                        } else if (0x1f < var6) {\n                            var temp24 = var4;\n                            var temp25 = temp24 + var6;\n                            var4 = temp25;\n                            memory[0x00:0x20] = var5;\n                            var temp26 = keccak256(memory[0x00:0x20]);\n                            memory[temp24:temp24 + 0x20] = storage[temp26];\n                            var5 = temp26 + 0x01;\n                            var6 = temp24 + 0x20;\n                        \n                            if (var4 <= var6) { goto label_040D; }\n                        \n                        label_03F9:\n                            var temp27 = var5;\n                            var temp28 = var6;\n                            memory[temp28:temp28 + 0x20] = storage[temp27];\n                            var5 = temp27 + 0x01;\n                            var6 = temp28 + 0x20;\n                        \n                            if (var4 > var6) { goto label_03F9; }\n                        \n                        label_040D:\n                            var temp29 = var4;\n                            var temp30 = temp29 + (var6 - temp29 & 0x1f);\n                            var6 = temp29;\n                            var4 = temp30;\n                            func_0416(var2, var3, var4, var5, var6);\n                            // Error: Could not resolve method call return address!\n                        } else {\n                            var temp31 = var4;\n                            memory[temp31:temp31 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n                            var6 = var6;\n                            var4 = temp31 + 0x20;\n                            func_0416(var2, var3, var4, var5, var6);\n                            // Error: Could not resolve method call return address!\n                        }\n                    } else if (arg3 == 0x65e17c9d) {\n                        var0 = 0x033a;\n                        var1 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else if (arg3 == 0x93854494) {\n                        var0 = 0x0357;\n                        var1 = storage[0x02];\n                        goto label_0357;\n                    } else if (arg3 == 0xa6403636) {\n                        var0 = 0x0338;\n                        var1 = msg.data[0x04:0x24];\n                        var2 = msg.data[0x24:0x44];\n                        var3 = msg.data[0x44:0x64];\n                        var4 = msg.data[0x64:0x84];\n                        var temp32 = memory[0x40:0x60];\n                        memory[temp32:temp32 + 0x20] = storage[0x02];\n                        memory[temp32 + 0x20:temp32 + 0x20 + 0x20] = var4;\n                        var temp33 = memory[0x40:0x60];\n                        memory[temp33:temp33 + 0x20] = keccak256(memory[temp33:temp33 + temp32 - temp33 + 0x40]);\n                        memory[temp33 + 0x20:temp33 + 0x20 + 0x20] = var1 & 0xff;\n                        memory[temp33 + 0x40:temp33 + 0x40 + 0x20] = var2;\n                        memory[temp33 + 0x60:temp33 + 0x60 + 0x20] = var3;\n                        var temp34 = memory[0x40:0x60];\n                        var5 = 0x00;\n                        var6 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                        var var7 = 0x01;\n                        var var8 = temp33 + 0x80;\n                        var temp35;\n                        temp35, memory[temp34:temp34 + 0x20] = address(var7).call.gas(msg.gas - 0x61da).value(var5)(memory[temp34:temp34 + temp33 - temp34 + 0x80]);\n                    \n                        if (!temp35) { goto label_0002; }\n                    \n                        resolve(var1, var2, var3, var4, var5, var6, var7, var8);\n                        stop();\n                    } else if (arg3 == 0xbbf646c2) {\n                        var0 = 0x033a;\n                        var1 = storage[0x03] & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else if (arg3 == 0xdb006a75) {\n                        var0 = 0x0338;\n                        var temp36 = msg.data[0x04:0x24];\n                        var1 = temp36;\n                        var2 = storage[0x06] / 0x0100 & 0x02 ** 0xa0 - 0x01;\n                        var3 = 0x0de0b6b3a7640000;\n                        var4 = 0x04a0;\n                        var5 = var1;\n                        var6 = storage[0x07];\n                        var7 = 0x00;\n                        var8 = var6 * var5;\n                        var var9 = 0x0824;\n                        var var10 = var7 == var5;\n                    \n                        if (var10) {\n                            func_0227(var10);\n                            var4 = func_0824(var5, var6, var7, var8);\n                            func_04A0(var1, var2, var3, var4);\n                            stop();\n                        } else {\n                            func_0221(var5, var6, var8, var10);\n                            var4 = func_0824(var5, var6, var7, var8);\n                            func_04A0(var1, var2, var3, var4);\n                            stop();\n                        }\n                    } else if (arg3 == 0xddca3f43) {\n                        var0 = 0x0357;\n                        var1 = storage[0x07];\n                        goto label_0357;\n                    } else if (arg3 == 0xefc81a8c) {\n                        var0 = 0x0338;\n                        var temp37 = memory[0x40:0x60];\n                        memory[temp37:temp37 + 0x20] = 0x0ecaea73 * 0x02 ** 0xe0;\n                        var temp38 = 0x02 ** 0xa0 - 0x01;\n                        memory[temp37 + 0x04:temp37 + 0x04 + 0x20] = temp38 & msg.sender;\n                        memory[temp37 + 0x24:temp37 + 0x24 + 0x20] = msg.value;\n                        var temp39 = memory[0x40:0x60];\n                        var1 = storage[0x00] & temp38;\n                        var2 = 0x0ecaea73;\n                        var3 = temp37 + 0x44;\n                        var temp40;\n                        temp40, memory[temp39:temp39 + 0x00] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp39:temp39 + temp37 - temp39 + 0x44]);\n                    \n                        if (!temp40) { goto label_0002; }\n                    \n                        create(var1, var2, var3);\n                        stop();\n                    } else if (arg3 == 0xf0d9bb20) {\n                        var0 = 0x033a;\n                        var1 = storage[0x00] & 0x02 ** 0xa0 - 0x01;\n                        goto label_033A;\n                    } else { goto label_0098; }\n                }\n            } else {\n                arg1 = msg.sender;\n                arg2 = 0x0de0b6b3a7640000;\n                arg3 = 0x0801;\n                var0 = arg0;\n                var1 = 0x0de0b6b3a7640000 - storage[0x07];\n                arg3 = func_0210(var0, var1);\n                var temp41 = memory[0x40:0x60];\n                var temp42;\n                temp42, memory[temp41:temp41 + 0x00] = address(arg1).call.gas(msg.gas - 0x8502).value(arg3 / arg2)(memory[temp41:temp41 + 0x00]);\n            \n                if (!temp42) { goto label_0002; }\n            \n                var temp43 = memory[0x40:0x60];\n                var temp44 = arg0;\n                memory[temp43:temp43 + 0x20] = temp44;\n                memory[temp43 + 0x20:temp43 + 0x20 + 0x20] = temp44;\n                memory[temp43 + 0x40:temp43 + 0x40 + 0x20] = 0x00;\n                var temp45 = memory[0x40:0x60];\n                log(memory[temp45:temp45 + temp43 - temp45 + 0x60], [0xbd5034ffbd47e4e72a94baa2cdb74c6fad73cb3bcdc13036b72ec8306f5a7646, msg.sender]);\n                goto label_07FE;\n            }\n        }\n    }\n    \n    function func_0824(var arg0, var arg1, var arg2, var arg3) returns (var r0) { return arg3; }\n}\n\n.",
	"status": "1",
	"time_cost": 37.4494149684906,
	"usage": {
		"completion_tokens": 512,
		"prompt_tokens": 20166,
		"total_tokens": 20678
	}
}