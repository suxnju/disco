{
	"address": "0x0b8d56c26d8cf16fe1bddf4967753503d974de06",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Based on the decompiled code, the equivalent Solidity contract could look something like this:\n\n```solidity\npragma solidity ^0.5.0;\n\ncontract Contract {\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n    mapping (bytes32 => uint256) storageData;\n    uint256 public totalSupply = 0x026e;\n    uint256 storage2 = 0x02;\n    uint256 storage3 = 0x03;\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        require(balances[msg.sender] >= _value);\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(allowed[_from][msg.sender] >= _value);\n        require(balances[_from] >= _value);\n        balances[_from] -= _value;\n        balances[_to] += _value;\n        allowed[_from][msg.sender] -= _value;\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n}\n```\n\nPlease note that the above contract is a simplification of the decompiled contract and does not include the full functionality (e.g. buyin, refund and price methods are not included). The decompiled contract also includes some bitwise operations and direct memory/storage manipulation which is not directly possible in high-level Solidity and is therefore not included in the Solidity contract.",
				"role": "assistant"
			}
		}
	],
	"created": 1700473159,
	"id": "chatcmpl-8Mv2NP2YN04crHWLvjwozJYJ1grTM",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n    \n        if (!msg.data.length) {\n        label_0082:\n            var var0 = 0x02fa;\n            var var1 = 0x02fc;\n            var var2 = msg.sender;\n            var var3 = 0x02 ** 0xff;\n            var var4 = msg.value;\n            var var5 = 0x00;\n            var var6 = var5;\n            var var7 = var6;\n            var var8 = var4 > 0x00;\n        \n            if (!var8) {\n            label_00A8:\n            \n                if (!var8) {\n                label_0312:\n                    // Error: Could not resolve jump destination!\n                } else {\n                label_00AE:\n                    var5 = (storage[0x02] * storage[0x03]) / 0x0f4240;\n                \n                    if (var4 > var5) {\n                        var temp0 = var5;\n                        var6 = temp0;\n                        var temp1 = (var6 * 0x0f4240) / storage[0x02];\n                        var7 = temp1;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp2 = keccak256(memory[0x00:0x40]);\n                        storage[temp2] = storage[temp2] + var7;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp3 = keccak256(memory[0x00:0x40]) + 0x01;\n                        memory[0x00:0x20] = storage[0x02];\n                        memory[0x20:0x40] = temp3;\n                        var temp4 = keccak256(memory[0x00:0x40]);\n                        storage[temp4] = storage[temp4] + var7;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp5 = keccak256(memory[0x00:0x40]) + 0x01;\n                        memory[0x00:0x20] = storage[0x02];\n                        memory[0x20:0x40] = temp5;\n                        var temp6 = keccak256(memory[0x00:0x40]) + 0x01;\n                        storage[temp6] = block.timestamp + 0x093a80 | (storage[temp6] & ~0xffffffff);\n                        storage[0x00] = storage[0x00] + var7;\n                        var temp7 = memory[0x40:0x60];\n                        log(memory[temp7:temp7 + memory[0x40:0x60] - temp7], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-3] * 0x0f4240) / storage[0x02]]);\n                        var temp8 = storage[0x03] - var7;\n                        storage[0x03] = temp8;\n                        var4 = var4 - var6;\n                    \n                        if (temp8 != 0x00) {\n                        label_04C5:\n                        \n                        label_0095:\n                            var8 = var4 > 0x00;\n                        \n                            if (!var8) { goto label_00A8; }\n                        \n                            func_00A0(var2, var3, var4, var5, var6, var7, var8);\n                            // Error: Could not resolve method call return address!\n                        } else {\n                        label_0483:\n                            var temp9 = storage[0x02] + 0x038d7ea4c68000;\n                            storage[0x02] = temp9;\n                            storage[0x03] = 0x05f5e100;\n                            log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x23c3dae768238f239632b5c4acb89485b440e0fa72481c4aad9f9b4f9b5a0a5f, storage[0x02] + 0x038d7ea4c68000]);\n                            goto label_0095;\n                        }\n                    } else {\n                        var8 = var4;\n                        var temp10 = var8;\n                        var6 = temp10;\n                        var temp11 = (var6 * 0x0f4240) / storage[0x02];\n                        var7 = temp11;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp12 = keccak256(memory[0x00:0x40]);\n                        storage[temp12] = storage[temp12] + var7;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp13 = keccak256(memory[0x00:0x40]) + 0x01;\n                        memory[0x00:0x20] = storage[0x02];\n                        memory[0x20:0x40] = temp13;\n                        var temp14 = keccak256(memory[0x00:0x40]);\n                        storage[temp14] = storage[temp14] + var7;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp15 = keccak256(memory[0x00:0x40]) + 0x01;\n                        memory[0x00:0x20] = storage[0x02];\n                        memory[0x20:0x40] = temp15;\n                        var temp16 = keccak256(memory[0x00:0x40]) + 0x01;\n                        storage[temp16] = block.timestamp + 0x093a80 | (storage[temp16] & ~0xffffffff);\n                        storage[0x00] = storage[0x00] + var7;\n                        var temp17 = memory[0x40:0x60];\n                        log(memory[temp17:temp17 + memory[0x40:0x60] - temp17], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-1] * 0x0f4240) / storage[0x02]]);\n                        var temp18 = storage[0x03] - var7;\n                        storage[0x03] = temp18;\n                        var4 = var4 - var6;\n                    \n                        if (temp18 != 0x00) { goto label_04C5; }\n                        else { goto label_0483; }\n                    }\n                }\n            } else {\n                func_00A0(var2, var3, var4, var5, var6, var7, var8);\n                func_02FC();\n                stop();\n            }\n        } else {\n        label_000B:\n            var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (var0 == 0x095ea7b3) {\n                // Dispatch table entry for approve(address,uint256)\n                var temp19 = msg.data[0x04:0x24];\n                var temp20 = msg.data[0x24:0x44];\n                var temp21 = memory[0x40:0x60];\n                memory[temp21:temp21 + 0x20] = temp20;\n                var temp22 = memory[0x40:0x60];\n                log(memory[temp22:temp22 + (temp21 + 0x20) - temp22], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, msg.sender, msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01]);\n                var temp23 = 0x02 ** 0xa0 - 0x01;\n                memory[0x00:0x20] = temp23 & msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp24 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = temp19 & temp23;\n                memory[0x20:0x40] = temp24 + 0x02;\n                var temp25 = keccak256(memory[0x00:0x40]);\n                storage[temp25] = temp20 + storage[temp25];\n                var1 = 0x01;\n            \n            label_02FE:\n                var temp26 = memory[0x40:0x60];\n                memory[temp26:temp26 + 0x20] = !!var1;\n                var temp27 = memory[0x40:0x60];\n                return memory[temp27:temp27 + temp26 - temp27 + 0x20];\n            } else if (var0 == 0x18160ddd) {\n                // Dispatch table entry for totalSupply()\n                var1 = 0x026e;\n                var2 = storage[0x00];\n            \n            label_026E:\n                var temp28 = memory[0x40:0x60];\n                memory[temp28:temp28 + 0x20] = var2;\n                var temp29 = memory[0x40:0x60];\n                return memory[temp29:temp29 + temp28 - temp29 + 0x20];\n            } else if (var0 == 0x23b872dd) {\n                // Dispatch table entry for transferFrom(address,address,uint256)\n                var1 = 0x02fe;\n                var2 = msg.data[0x04:0x24];\n                var3 = msg.data[0x24:0x44];\n                var4 = msg.data[0x44:0x64];\n                var5 = 0x00;\n                memory[var5:var5 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x01;\n                var6 = var2;\n                var7 = var4;\n            \n                if (storage[keccak256(memory[var5:var5 + 0x40])] >= var7) {\n                    var temp30 = 0x02 ** 0xa0 - 0x01;\n                    memory[0x00:0x20] = temp30 & var2;\n                    memory[0x20:0x40] = 0x01;\n                    var temp31 = keccak256(memory[0x00:0x40]);\n                    memory[0x00:0x20] = msg.sender & temp30;\n                    memory[0x20:0x40] = temp31 + 0x02;\n                    var8 = var2;\n                    var var9 = msg.sender;\n                    var var10 = var4;\n                \n                    if (storage[keccak256(memory[0x00:0x40])] < var10) { goto label_0568; }\n                \n                    var temp32 = var3;\n                    var temp33 = var2;\n                    var temp34 = var4;\n                    var temp35 = memory[0x40:0x60];\n                    memory[temp35:temp35 + 0x20] = temp34;\n                    var temp36 = memory[0x40:0x60];\n                    log(memory[temp36:temp36 + (temp35 + 0x20) - temp36], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-9] & 0x02 ** 0xa0 - 0x01, stack[-8] & 0x02 ** 0xa0 - 0x01]);\n                    var temp37 = 0x02 ** 0xa0 - 0x01;\n                    memory[0x00:0x20] = temp37 & temp33;\n                    memory[0x20:0x40] = 0x01;\n                    var temp38 = keccak256(memory[0x00:0x40]);\n                    memory[0x00:0x20] = temp37 & msg.sender;\n                    memory[0x20:0x40] = temp38 + 0x02;\n                    var temp39 = keccak256(memory[0x00:0x40]);\n                    storage[temp39] = storage[temp39] - temp34;\n                    memory[0x20:0x40] = 0x01;\n                    storage[temp38] = storage[temp38] - temp34;\n                    memory[0x00:0x20] = temp32 & temp37;\n                    var temp40 = keccak256(memory[0x00:0x40]);\n                    storage[temp40] = temp34 + storage[temp40];\n                    var5 = 0x01;\n                \n                label_0568:\n                    var1 = var5;\n                    // Error: Could not resolve jump destination!\n                } else {\n                    var1 = transferFrom(var2, var3, var4, var5, var6, var7);\n                    goto label_02FE;\n                }\n            } else if (var0 == 0x29cbdc86) {\n                // Dispatch table entry for buyin(address,uint256)\n                var1 = 0x02fa;\n                var2 = msg.data[0x04:0x24];\n                var3 = msg.data[0x24:0x44];\n                var4 = 0x05b1;\n                var5 = var2;\n                var6 = var3;\n                func_008F(var5, var6);\n                func_05B1(var2, var3);\n                stop();\n            } else if (var0 == 0x55234ec0) {\n                // Dispatch table entry for remaining()\n                var1 = 0x026e;\n                var2 = storage[0x03];\n                goto label_026E;\n            } else if (var0 == 0x5af36e3e) {\n                // Dispatch table entry for refund(uint256,uint256)\n                var1 = 0x02fe;\n                var2 = msg.data[0x04:0x24];\n                var3 = msg.data[0x24:0x44];\n                var4 = 0x00;\n                memory[var4:var4 + 0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp41 = keccak256(memory[var4:var4 + 0x40]);\n                memory[var4:var4 + 0x20] = var2;\n                memory[0x20:0x40] = temp41 + 0x01;\n                var5 = var2;\n                var6 = var3;\n                var7 = storage[keccak256(memory[var4:var4 + 0x40])] < var6;\n            \n                if (!var7) {\n                    var1 = func_01ED(var2, var3, var4, var5, var6, var7);\n                    goto label_02FE;\n                } else if (!var7) {\n                    var7 = msg.sender;\n                    memory[0x00:0x20] = var7 & 0x02 ** 0xa0 - 0x01;\n                    memory[0x20:0x40] = 0x01;\n                    var8 = var3;\n                \n                    if (storage[keccak256(memory[0x00:0x40])] >= var8) {\n                        var temp42 = var3;\n                        var temp43 = var2;\n                        log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x73f04af9dcc582a923ec15d3eea990fe34adabfff2879e28d44572e01a54abb6, msg.sender, stack[-7], stack[-6]]);\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp44 = keccak256(memory[0x00:0x40]);\n                        storage[temp44] = storage[temp44] - temp42;\n                        storage[0x00] = temp42 + storage[0x00];\n                        memory[0x00:0x20] = temp43;\n                        memory[0x20:0x40] = temp44 + 0x01;\n                        var temp45 = keccak256(memory[0x00:0x40]);\n                        var temp46 = storage[temp45] - temp42;\n                        storage[temp45] = temp46;\n                    \n                        if (temp46 != 0x00) {\n                            var temp47 = memory[0x40:0x60];\n                            var temp48;\n                            temp48, memory[temp47:temp47 + 0x00] = address(msg.sender).call.gas(0x00).value((var3 * var2) / 0x0f4240)(memory[temp47:temp47 + 0x00]);\n                        \n                            if (temp48) {\n                            label_06EE:\n                                var4 = 0x01;\n                                var1 = allowance(var2, var3, var4);\n                                // Error: Could not resolve method call return address!\n                            } else {\n                            label_06EA:\n                                memory[0x40:0x60] = var8;\n                            \n                                if (!msg.data.length) { goto label_0082; }\n                                else { goto label_000B; }\n                            }\n                        } else {\n                            memory[0x00:0x20] = msg.sender;\n                            memory[0x20:0x40] = 0x01;\n                            var temp49 = keccak256(memory[0x00:0x40]) + 0x01;\n                            var temp50 = var2;\n                            memory[0x00:0x20] = temp50;\n                            memory[0x20:0x40] = temp49;\n                            var temp51 = keccak256(memory[0x00:0x40]);\n                            storage[temp51] = 0x00;\n                            var temp52 = temp51 + 0x01;\n                            storage[temp52] = storage[temp52] & ~0xffffffff;\n                            var temp53 = memory[0x40:0x60];\n                            var temp54;\n                            temp54, memory[temp53:temp53 + 0x00] = address(msg.sender).call.gas(0x00).value((var3 * temp50) / 0x0f4240)(memory[temp53:temp53 + 0x00]);\n                        \n                            if (temp54) { goto label_06EE; }\n                            else { goto label_06EA; }\n                        }\n                    } else {\n                        var1 = allowance(var2, var3, var4);\n                        // Error: Could not resolve method call return address!\n                    }\n                } else {\n                    var1 = allowance(var2, var3, var4);\n                    // Error: Could not resolve method call return address!\n                }\n            } else if (var0 == 0x70a08231) {\n                // Dispatch table entry for balanceOf(address)\n                memory[0x00:0x20] = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x01;\n                var1 = storage[keccak256(memory[0x00:0x40])];\n                goto label_026E;\n            } else if (var0 == 0xa035b1fe) {\n                // Dispatch table entry for price()\n                var1 = 0x026e;\n                var2 = storage[0x02];\n                goto label_026E;\n            } else if (var0 == 0xa9059cbb) {\n                // Dispatch table entry for transfer(address,uint256)\n                var1 = 0x02fe;\n                var2 = msg.data[0x04:0x24];\n                var3 = msg.data[0x24:0x44];\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var4 = 0x00;\n                var5 = msg.sender;\n                var6 = var3;\n            \n                if (storage[keccak256(memory[var4:var4 + 0x40])] >= var6) {\n                    var1 = func_06FB(var2, var3, var4, var5, var6);\n                    goto label_02FE;\n                } else {\n                    var1 = func_02BB(var2, var3, var4, var5, var6);\n                    goto label_02FE;\n                }\n            } else if (var0 == 0xdd62ed3e) {\n                // Dispatch table entry for allowance(address,address)\n                var1 = 0x026e;\n                var2 = msg.data[0x04:0x24];\n                var3 = msg.data[0x24:0x44];\n                var temp55 = 0x02 ** 0xa0 - 0x01;\n                memory[0x00:0x20] = temp55 & var2;\n                memory[0x20:0x40] = 0x01;\n                var temp56 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = var3 & temp55;\n                memory[0x20:0x40] = temp56 + 0x02;\n                var4 = storage[keccak256(memory[0x00:0x40])];\n                var1 = allowance(var2, var3, var4);\n                goto label_026E;\n            } else { goto label_0082; }\n        }\n    }\n    \n    function func_008F(var arg0, var arg1) {\n        var var0 = msg.value;\n        var var1 = 0x00;\n        var var2 = var1;\n        var var3 = var2;\n    \n    label_0095:\n        var var4 = var0 > 0x00;\n    \n        if (var4) {\n            func_00A0(arg0, arg1, var0, var1, var2, var3, var4);\n            // Error: Could not resolve method call return address!\n        } else if (!var4) {\n        label_0312:\n            return;\n        } else {\n        label_00AE:\n            var1 = (storage[0x02] * storage[0x03]) / 0x0f4240;\n        \n            if (var0 > var1) {\n                var temp0 = var1;\n                var2 = temp0;\n                var temp1 = (var2 * 0x0f4240) / storage[0x02];\n                var3 = temp1;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp2 = keccak256(memory[0x00:0x40]);\n                storage[temp2] = storage[temp2] + var3;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp3 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp3;\n                var temp4 = keccak256(memory[0x00:0x40]);\n                storage[temp4] = storage[temp4] + var3;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp5 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp5;\n                var temp6 = keccak256(memory[0x00:0x40]) + 0x01;\n                storage[temp6] = block.timestamp + 0x093a80 | (storage[temp6] & ~0xffffffff);\n                storage[0x00] = storage[0x00] + var3;\n                var temp7 = memory[0x40:0x60];\n                log(memory[temp7:temp7 + memory[0x40:0x60] - temp7], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-3] * 0x0f4240) / storage[0x02]]);\n                var temp8 = storage[0x03] - var3;\n                storage[0x03] = temp8;\n                var0 = var0 - var2;\n            \n                if (temp8 != 0x00) {\n                label_04C5:\n                    goto label_0095;\n                } else {\n                label_0483:\n                    var temp9 = storage[0x02] + 0x038d7ea4c68000;\n                    storage[0x02] = temp9;\n                    storage[0x03] = 0x05f5e100;\n                    log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x23c3dae768238f239632b5c4acb89485b440e0fa72481c4aad9f9b4f9b5a0a5f, storage[0x02] + 0x038d7ea4c68000]);\n                    goto label_0095;\n                }\n            } else {\n                var4 = var0;\n                var temp10 = var4;\n                var2 = temp10;\n                var temp11 = (var2 * 0x0f4240) / storage[0x02];\n                var3 = temp11;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp12 = keccak256(memory[0x00:0x40]);\n                storage[temp12] = storage[temp12] + var3;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp13 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp13;\n                var temp14 = keccak256(memory[0x00:0x40]);\n                storage[temp14] = storage[temp14] + var3;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp15 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp15;\n                var temp16 = keccak256(memory[0x00:0x40]) + 0x01;\n                storage[temp16] = block.timestamp + 0x093a80 | (storage[temp16] & ~0xffffffff);\n                storage[0x00] = storage[0x00] + var3;\n                var temp17 = memory[0x40:0x60];\n                log(memory[temp17:temp17 + memory[0x40:0x60] - temp17], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-1] * 0x0f4240) / storage[0x02]]);\n                var temp18 = storage[0x03] - var3;\n                storage[0x03] = temp18;\n                var0 = var0 - var2;\n            \n                if (temp18 != 0x00) { goto label_04C5; }\n                else { goto label_0483; }\n            }\n        }\n    }\n    \n    function func_00A0(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6) {\n        if (storage[0x02] > arg1) {\n        label_0312:\n            return;\n        } else {\n        label_00AE:\n            arg3 = (storage[0x02] * storage[0x03]) / 0x0f4240;\n        \n            if (arg2 > arg3) {\n                var temp0 = arg3;\n                arg4 = temp0;\n                var temp1 = (arg4 * 0x0f4240) / storage[0x02];\n                arg5 = temp1;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp2 = keccak256(memory[0x00:0x40]);\n                storage[temp2] = storage[temp2] + arg5;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp3 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp3;\n                var temp4 = keccak256(memory[0x00:0x40]);\n                storage[temp4] = storage[temp4] + arg5;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp5 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp5;\n                var temp6 = keccak256(memory[0x00:0x40]) + 0x01;\n                storage[temp6] = block.timestamp + 0x093a80 | (storage[temp6] & ~0xffffffff);\n                storage[0x00] = storage[0x00] + arg5;\n                var temp7 = memory[0x40:0x60];\n                log(memory[temp7:temp7 + memory[0x40:0x60] - temp7], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-3] * 0x0f4240) / storage[0x02]]);\n                var temp8 = storage[0x03] - arg5;\n                storage[0x03] = temp8;\n                arg2 = arg2 - arg4;\n            \n                if (temp8 != 0x00) {\n                label_04C5:\n                \n                label_0095:\n                    arg6 = arg2 > 0x00;\n                \n                    if (arg6) {\n                        func_00A0(arg0, arg1, arg2, arg3, arg4, arg5, arg6);\n                        // Error: Could not resolve method call return address!\n                    } else if (!arg6) { goto label_0312; }\n                    else { goto label_00AE; }\n                } else {\n                label_0483:\n                    var temp9 = storage[0x02] + 0x038d7ea4c68000;\n                    storage[0x02] = temp9;\n                    storage[0x03] = 0x05f5e100;\n                    log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x23c3dae768238f239632b5c4acb89485b440e0fa72481c4aad9f9b4f9b5a0a5f, storage[0x02] + 0x038d7ea4c68000]);\n                    goto label_0095;\n                }\n            } else {\n                arg6 = arg2;\n                var temp10 = arg6;\n                arg4 = temp10;\n                var temp11 = (arg4 * 0x0f4240) / storage[0x02];\n                arg5 = temp11;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp12 = keccak256(memory[0x00:0x40]);\n                storage[temp12] = storage[temp12] + arg5;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp13 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp13;\n                var temp14 = keccak256(memory[0x00:0x40]);\n                storage[temp14] = storage[temp14] + arg5;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp15 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp15;\n                var temp16 = keccak256(memory[0x00:0x40]) + 0x01;\n                storage[temp16] = block.timestamp + 0x093a80 | (storage[temp16] & ~0xffffffff);\n                storage[0x00] = storage[0x00] + arg5;\n                var temp17 = memory[0x40:0x60];\n                log(memory[temp17:temp17 + memory[0x40:0x60] - temp17], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-1] * 0x0f4240) / storage[0x02]]);\n                var temp18 = storage[0x03] - arg5;\n                storage[0x03] = temp18;\n                arg2 = arg2 - arg4;\n            \n                if (temp18 != 0x00) { goto label_04C5; }\n                else { goto label_0483; }\n            }\n        }\n    }\n    \n    function allowance(var arg0, var arg1, var arg2) returns (var r0) { return arg2; }\n    \n    function transferFrom(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5) returns (var r0) { return arg3; }\n    \n    function func_01ED(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5) returns (var r0) {\n        memory[0x00:0x20] = msg.sender;\n        memory[0x20:0x40] = 0x01;\n        var temp0 = keccak256(memory[0x00:0x40]) + 0x01;\n        memory[0x00:0x20] = arg3;\n        memory[0x20:0x40] = temp0;\n    \n        if (block.timestamp < storage[keccak256(memory[0x00:0x40]) + 0x01] & 0xffffffff) { goto label_024C; }\n    \n    label_05B5:\n        arg5 = msg.sender;\n        memory[0x00:0x20] = arg5 & 0x02 ** 0xa0 - 0x01;\n        memory[0x20:0x40] = 0x01;\n        var var0 = arg1;\n    \n        if (storage[keccak256(memory[0x00:0x40])] >= var0) {\n            var temp1 = arg1;\n            var temp2 = arg0;\n            log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x73f04af9dcc582a923ec15d3eea990fe34adabfff2879e28d44572e01a54abb6, msg.sender, stack[-7], stack[-6]]);\n            memory[0x00:0x20] = msg.sender;\n            memory[0x20:0x40] = 0x01;\n            var temp3 = keccak256(memory[0x00:0x40]);\n            storage[temp3] = storage[temp3] - temp1;\n            storage[0x00] = temp1 + storage[0x00];\n            memory[0x00:0x20] = temp2;\n            memory[0x20:0x40] = temp3 + 0x01;\n            var temp4 = keccak256(memory[0x00:0x40]);\n            var temp5 = storage[temp4] - temp1;\n            storage[temp4] = temp5;\n        \n            if (temp5 != 0x00) {\n                var temp6 = memory[0x40:0x60];\n                var temp7;\n                temp7, memory[temp6:temp6 + 0x00] = address(msg.sender).call.gas(0x00).value((arg1 * arg0) / 0x0f4240)(memory[temp6:temp6 + 0x00]);\n            \n                if (temp7) {\n                label_06EE:\n                    arg2 = 0x01;\n                    r0 = allowance(arg0, arg1, arg2);\n                    // Error: Could not resolve method call return address!\n                } else {\n                label_06EA:\n                    memory[0x40:0x60] = var0;\n                \n                    if (!msg.data.length) {\n                    label_0082:\n                        var0 = 0x02fa;\n                        var var1 = 0x02fc;\n                        var var2 = msg.sender;\n                        var var3 = 0x02 ** 0xff;\n                        var var4 = msg.value;\n                        var var5 = 0x00;\n                        var var6 = var5;\n                        var var7 = var6;\n                        var var8 = var4 > 0x00;\n                    \n                        if (!var8) {\n                        label_00A8:\n                        \n                            if (!var8) {\n                            label_0312:\n                                // Error: Could not resolve jump destination!\n                            } else {\n                            label_00AE:\n                                var5 = (storage[0x02] * storage[0x03]) / 0x0f4240;\n                            \n                                if (var4 > var5) {\n                                    var temp8 = var5;\n                                    var6 = temp8;\n                                    var temp9 = (var6 * 0x0f4240) / storage[0x02];\n                                    var7 = temp9;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp10 = keccak256(memory[0x00:0x40]);\n                                    storage[temp10] = storage[temp10] + var7;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp11 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    memory[0x00:0x20] = storage[0x02];\n                                    memory[0x20:0x40] = temp11;\n                                    var temp12 = keccak256(memory[0x00:0x40]);\n                                    storage[temp12] = storage[temp12] + var7;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp13 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    memory[0x00:0x20] = storage[0x02];\n                                    memory[0x20:0x40] = temp13;\n                                    var temp14 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    storage[temp14] = block.timestamp + 0x093a80 | (storage[temp14] & ~0xffffffff);\n                                    storage[0x00] = storage[0x00] + var7;\n                                    var temp15 = memory[0x40:0x60];\n                                    log(memory[temp15:temp15 + memory[0x40:0x60] - temp15], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-3] * 0x0f4240) / storage[0x02]]);\n                                    var temp16 = storage[0x03] - var7;\n                                    storage[0x03] = temp16;\n                                    var4 = var4 - var6;\n                                \n                                    if (temp16 != 0x00) {\n                                    label_04C5:\n                                    \n                                    label_0095:\n                                        var8 = var4 > 0x00;\n                                    \n                                        if (!var8) { goto label_00A8; }\n                                    \n                                        func_00A0(var2, var3, var4, var5, var6, var7, var8);\n                                        // Error: Could not resolve method call return address!\n                                    } else {\n                                    label_0483:\n                                        var temp17 = storage[0x02] + 0x038d7ea4c68000;\n                                        storage[0x02] = temp17;\n                                        storage[0x03] = 0x05f5e100;\n                                        log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x23c3dae768238f239632b5c4acb89485b440e0fa72481c4aad9f9b4f9b5a0a5f, storage[0x02] + 0x038d7ea4c68000]);\n                                        goto label_0095;\n                                    }\n                                } else {\n                                    var8 = var4;\n                                    var temp18 = var8;\n                                    var6 = temp18;\n                                    var temp19 = (var6 * 0x0f4240) / storage[0x02];\n                                    var7 = temp19;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp20 = keccak256(memory[0x00:0x40]);\n                                    storage[temp20] = storage[temp20] + var7;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp21 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    memory[0x00:0x20] = storage[0x02];\n                                    memory[0x20:0x40] = temp21;\n                                    var temp22 = keccak256(memory[0x00:0x40]);\n                                    storage[temp22] = storage[temp22] + var7;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp23 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    memory[0x00:0x20] = storage[0x02];\n                                    memory[0x20:0x40] = temp23;\n                                    var temp24 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    storage[temp24] = block.timestamp + 0x093a80 | (storage[temp24] & ~0xffffffff);\n                                    storage[0x00] = storage[0x00] + var7;\n                                    var temp25 = memory[0x40:0x60];\n                                    log(memory[temp25:temp25 + memory[0x40:0x60] - temp25], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-1] * 0x0f4240) / storage[0x02]]);\n                                    var temp26 = storage[0x03] - var7;\n                                    storage[0x03] = temp26;\n                                    var4 = var4 - var6;\n                                \n                                    if (temp26 != 0x00) { goto label_04C5; }\n                                    else { goto label_0483; }\n                                }\n                            }\n                        } else {\n                            func_00A0(var2, var3, var4, var5, var6, var7, var8);\n                            func_02FC();\n                            stop();\n                        }\n                    } else {\n                        var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                    \n                        if (var0 == 0x095ea7b3) {\n                            var temp27 = msg.data[0x04:0x24];\n                            var temp28 = msg.data[0x24:0x44];\n                            var temp29 = memory[0x40:0x60];\n                            memory[temp29:temp29 + 0x20] = temp28;\n                            var temp30 = memory[0x40:0x60];\n                            log(memory[temp30:temp30 + (temp29 + 0x20) - temp30], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, msg.sender, msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01]);\n                            var temp31 = 0x02 ** 0xa0 - 0x01;\n                            memory[0x00:0x20] = temp31 & msg.sender;\n                            memory[0x20:0x40] = 0x01;\n                            var temp32 = keccak256(memory[0x00:0x40]);\n                            memory[0x00:0x20] = temp27 & temp31;\n                            memory[0x20:0x40] = temp32 + 0x02;\n                            var temp33 = keccak256(memory[0x00:0x40]);\n                            storage[temp33] = temp28 + storage[temp33];\n                            var1 = 0x01;\n                        \n                        label_02FE:\n                            var temp34 = memory[0x40:0x60];\n                            memory[temp34:temp34 + 0x20] = !!var1;\n                            var temp35 = memory[0x40:0x60];\n                            return memory[temp35:temp35 + temp34 - temp35 + 0x20];\n                        } else if (var0 == 0x18160ddd) {\n                            var1 = 0x026e;\n                            var2 = storage[0x00];\n                        \n                        label_026E:\n                            var temp36 = memory[0x40:0x60];\n                            memory[temp36:temp36 + 0x20] = var2;\n                            var temp37 = memory[0x40:0x60];\n                            return memory[temp37:temp37 + temp36 - temp37 + 0x20];\n                        } else if (var0 == 0x23b872dd) {\n                            var1 = 0x02fe;\n                            var2 = msg.data[0x04:0x24];\n                            var3 = msg.data[0x24:0x44];\n                            var4 = msg.data[0x44:0x64];\n                            var5 = 0x00;\n                            memory[var5:var5 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n                            memory[0x20:0x40] = 0x01;\n                            var6 = var2;\n                            var7 = var4;\n                        \n                            if (storage[keccak256(memory[var5:var5 + 0x40])] >= var7) {\n                                var temp38 = 0x02 ** 0xa0 - 0x01;\n                                memory[0x00:0x20] = temp38 & var2;\n                                memory[0x20:0x40] = 0x01;\n                                var temp39 = keccak256(memory[0x00:0x40]);\n                                memory[0x00:0x20] = msg.sender & temp38;\n                                memory[0x20:0x40] = temp39 + 0x02;\n                                var8 = var2;\n                                var var9 = msg.sender;\n                                var var10 = var4;\n                            \n                                if (storage[keccak256(memory[0x00:0x40])] < var10) { goto label_0568; }\n                            \n                                var temp40 = var3;\n                                var temp41 = var2;\n                                var temp42 = var4;\n                                var temp43 = memory[0x40:0x60];\n                                memory[temp43:temp43 + 0x20] = temp42;\n                                var temp44 = memory[0x40:0x60];\n                                log(memory[temp44:temp44 + (temp43 + 0x20) - temp44], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-9] & 0x02 ** 0xa0 - 0x01, stack[-8] & 0x02 ** 0xa0 - 0x01]);\n                                var temp45 = 0x02 ** 0xa0 - 0x01;\n                                memory[0x00:0x20] = temp45 & temp41;\n                                memory[0x20:0x40] = 0x01;\n                                var temp46 = keccak256(memory[0x00:0x40]);\n                                memory[0x00:0x20] = temp45 & msg.sender;\n                                memory[0x20:0x40] = temp46 + 0x02;\n                                var temp47 = keccak256(memory[0x00:0x40]);\n                                storage[temp47] = storage[temp47] - temp42;\n                                memory[0x20:0x40] = 0x01;\n                                storage[temp46] = storage[temp46] - temp42;\n                                memory[0x00:0x20] = temp40 & temp45;\n                                var temp48 = keccak256(memory[0x00:0x40]);\n                                storage[temp48] = temp42 + storage[temp48];\n                                var5 = 0x01;\n                            \n                            label_0568:\n                                var1 = var5;\n                                // Error: Could not resolve jump destination!\n                            } else {\n                                var1 = transferFrom(var2, var3, var4, var5, var6, var7);\n                                goto label_02FE;\n                            }\n                        } else if (var0 == 0x29cbdc86) {\n                            var1 = 0x02fa;\n                            var2 = msg.data[0x04:0x24];\n                            var3 = msg.data[0x24:0x44];\n                            var4 = 0x05b1;\n                            var5 = var2;\n                            var6 = var3;\n                            func_008F(var5, var6);\n                            func_05B1(var2, var3);\n                            stop();\n                        } else if (var0 == 0x55234ec0) {\n                            var1 = 0x026e;\n                            var2 = storage[0x03];\n                            goto label_026E;\n                        } else if (var0 == 0x5af36e3e) {\n                            var1 = 0x02fe;\n                            var2 = msg.data[0x04:0x24];\n                            var3 = msg.data[0x24:0x44];\n                            var4 = 0x00;\n                            memory[var4:var4 + 0x20] = msg.sender;\n                            memory[0x20:0x40] = 0x01;\n                            var temp49 = keccak256(memory[var4:var4 + 0x40]);\n                            memory[var4:var4 + 0x20] = var2;\n                            memory[0x20:0x40] = temp49 + 0x01;\n                            var5 = var2;\n                            var6 = var3;\n                            var7 = storage[keccak256(memory[var4:var4 + 0x40])] < var6;\n                        \n                            if (!var7) {\n                                var1 = func_01ED(var2, var3, var4, var5, var6, var7);\n                                goto label_02FE;\n                            } else if (!var7) { goto label_05B5; }\n                            else {\n                            label_024C:\n                                var1 = allowance(var2, var3, var4);\n                                // Error: Could not resolve method call return address!\n                            }\n                        } else if (var0 == 0x70a08231) {\n                            memory[0x00:0x20] = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n                            memory[0x20:0x40] = 0x01;\n                            var1 = storage[keccak256(memory[0x00:0x40])];\n                            goto label_026E;\n                        } else if (var0 == 0xa035b1fe) {\n                            var1 = 0x026e;\n                            var2 = storage[0x02];\n                            goto label_026E;\n                        } else if (var0 == 0xa9059cbb) {\n                            var1 = 0x02fe;\n                            var2 = msg.data[0x04:0x24];\n                            var3 = msg.data[0x24:0x44];\n                            memory[0x00:0x20] = msg.sender;\n                            memory[0x20:0x40] = 0x01;\n                            var4 = 0x00;\n                            var5 = msg.sender;\n                            var6 = var3;\n                        \n                            if (storage[keccak256(memory[var4:var4 + 0x40])] >= var6) {\n                                var1 = func_06FB(var2, var3, var4, var5, var6);\n                                goto label_02FE;\n                            } else {\n                                var1 = func_02BB(var2, var3, var4, var5, var6);\n                                goto label_02FE;\n                            }\n                        } else if (var0 == 0xdd62ed3e) {\n                            var1 = 0x026e;\n                            var2 = msg.data[0x04:0x24];\n                            var3 = msg.data[0x24:0x44];\n                            var temp50 = 0x02 ** 0xa0 - 0x01;\n                            memory[0x00:0x20] = temp50 & var2;\n                            memory[0x20:0x40] = 0x01;\n                            var temp51 = keccak256(memory[0x00:0x40]);\n                            memory[0x00:0x20] = var3 & temp50;\n                            memory[0x20:0x40] = temp51 + 0x02;\n                            var4 = storage[keccak256(memory[0x00:0x40])];\n                            var1 = allowance(var2, var3, var4);\n                            goto label_026E;\n                        } else { goto label_0082; }\n                    }\n                }\n            } else {\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp52 = keccak256(memory[0x00:0x40]) + 0x01;\n                var temp53 = arg0;\n                memory[0x00:0x20] = temp53;\n                memory[0x20:0x40] = temp52;\n                var temp54 = keccak256(memory[0x00:0x40]);\n                storage[temp54] = 0x00;\n                var temp55 = temp54 + 0x01;\n                storage[temp55] = storage[temp55] & ~0xffffffff;\n                var temp56 = memory[0x40:0x60];\n                var temp57;\n                temp57, memory[temp56:temp56 + 0x00] = address(msg.sender).call.gas(0x00).value((arg1 * temp53) / 0x0f4240)(memory[temp56:temp56 + 0x00]);\n            \n                if (temp57) { goto label_06EE; }\n                else { goto label_06EA; }\n            }\n        } else {\n            r0 = allowance(arg0, arg1, arg2);\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function func_02BB(var arg0, var arg1, var arg2, var arg3, var arg4) returns (var r0) {\n        r0 = allowance(arg0, arg1, arg2);\n        // Error: Could not resolve method call return address!\n    }\n    \n    function func_02FC() {}\n    \n    function func_05B1(var arg0, var arg1) {}\n    \n    function func_06FB(var arg0, var arg1, var arg2, var arg3, var arg4) returns (var r0) {\n        var temp0 = arg0;\n        var temp1 = arg1;\n        var temp2 = memory[0x40:0x60];\n        memory[temp2:temp2 + 0x20] = temp1;\n        var temp3 = memory[0x40:0x60];\n        log(memory[temp3:temp3 + (temp2 + 0x20) - temp3], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, msg.sender, stack[-5] & 0x02 ** 0xa0 - 0x01]);\n        var temp4 = 0x02 ** 0xa0 - 0x01;\n        memory[0x00:0x20] = temp4 & msg.sender;\n        memory[0x20:0x40] = 0x01;\n        var temp5 = keccak256(memory[0x00:0x40]);\n        storage[temp5] = storage[temp5] - temp1;\n        memory[0x00:0x20] = temp0 & temp4;\n        var temp6 = keccak256(memory[0x00:0x40]);\n        storage[temp6] = temp1 + storage[temp6];\n        return arg2;\n    }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n    \n        if (!msg.data.length) {\n        label_0082:\n            var var0 = 0x02fa;\n            var var1 = 0x02fc;\n            var var2 = msg.sender;\n            var var3 = 0x02 ** 0xff;\n            var var4 = msg.value;\n            var var5 = 0x00;\n            var var6 = var5;\n            var var7 = var6;\n            var var8 = var4 > 0x00;\n        \n            if (!var8) {\n            label_00A8:\n            \n                if (!var8) {\n                label_0312:\n                    // Error: Could not resolve jump destination!\n                } else {\n                label_00AE:\n                    var5 = (storage[0x02] * storage[0x03]) / 0x0f4240;\n                \n                    if (var4 > var5) {\n                        var temp0 = var5;\n                        var6 = temp0;\n                        var temp1 = (var6 * 0x0f4240) / storage[0x02];\n                        var7 = temp1;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp2 = keccak256(memory[0x00:0x40]);\n                        storage[temp2] = storage[temp2] + var7;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp3 = keccak256(memory[0x00:0x40]) + 0x01;\n                        memory[0x00:0x20] = storage[0x02];\n                        memory[0x20:0x40] = temp3;\n                        var temp4 = keccak256(memory[0x00:0x40]);\n                        storage[temp4] = storage[temp4] + var7;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp5 = keccak256(memory[0x00:0x40]) + 0x01;\n                        memory[0x00:0x20] = storage[0x02];\n                        memory[0x20:0x40] = temp5;\n                        var temp6 = keccak256(memory[0x00:0x40]) + 0x01;\n                        storage[temp6] = block.timestamp + 0x093a80 | (storage[temp6] & ~0xffffffff);\n                        storage[0x00] = storage[0x00] + var7;\n                        var temp7 = memory[0x40:0x60];\n                        log(memory[temp7:temp7 + memory[0x40:0x60] - temp7], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-3] * 0x0f4240) / storage[0x02]]);\n                        var temp8 = storage[0x03] - var7;\n                        storage[0x03] = temp8;\n                        var4 = var4 - var6;\n                    \n                        if (temp8 != 0x00) {\n                        label_04C5:\n                        \n                        label_0095:\n                            var8 = var4 > 0x00;\n                        \n                            if (!var8) { goto label_00A8; }\n                        \n                            func_00A0(var2, var3, var4, var5, var6, var7, var8);\n                            // Error: Could not resolve method call return address!\n                        } else {\n                        label_0483:\n                            var temp9 = storage[0x02] + 0x038d7ea4c68000;\n                            storage[0x02] = temp9;\n                            storage[0x03] = 0x05f5e100;\n                            log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x23c3dae768238f239632b5c4acb89485b440e0fa72481c4aad9f9b4f9b5a0a5f, storage[0x02] + 0x038d7ea4c68000]);\n                            goto label_0095;\n                        }\n                    } else {\n                        var8 = var4;\n                        var temp10 = var8;\n                        var6 = temp10;\n                        var temp11 = (var6 * 0x0f4240) / storage[0x02];\n                        var7 = temp11;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp12 = keccak256(memory[0x00:0x40]);\n                        storage[temp12] = storage[temp12] + var7;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp13 = keccak256(memory[0x00:0x40]) + 0x01;\n                        memory[0x00:0x20] = storage[0x02];\n                        memory[0x20:0x40] = temp13;\n                        var temp14 = keccak256(memory[0x00:0x40]);\n                        storage[temp14] = storage[temp14] + var7;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp15 = keccak256(memory[0x00:0x40]) + 0x01;\n                        memory[0x00:0x20] = storage[0x02];\n                        memory[0x20:0x40] = temp15;\n                        var temp16 = keccak256(memory[0x00:0x40]) + 0x01;\n                        storage[temp16] = block.timestamp + 0x093a80 | (storage[temp16] & ~0xffffffff);\n                        storage[0x00] = storage[0x00] + var7;\n                        var temp17 = memory[0x40:0x60];\n                        log(memory[temp17:temp17 + memory[0x40:0x60] - temp17], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-1] * 0x0f4240) / storage[0x02]]);\n                        var temp18 = storage[0x03] - var7;\n                        storage[0x03] = temp18;\n                        var4 = var4 - var6;\n                    \n                        if (temp18 != 0x00) { goto label_04C5; }\n                        else { goto label_0483; }\n                    }\n                }\n            } else {\n                func_00A0(var2, var3, var4, var5, var6, var7, var8);\n                func_02FC();\n                stop();\n            }\n        } else {\n        label_000B:\n            var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (var0 == 0x095ea7b3) {\n                // Dispatch table entry for approve(address,uint256)\n                var temp19 = msg.data[0x04:0x24];\n                var temp20 = msg.data[0x24:0x44];\n                var temp21 = memory[0x40:0x60];\n                memory[temp21:temp21 + 0x20] = temp20;\n                var temp22 = memory[0x40:0x60];\n                log(memory[temp22:temp22 + (temp21 + 0x20) - temp22], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, msg.sender, msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01]);\n                var temp23 = 0x02 ** 0xa0 - 0x01;\n                memory[0x00:0x20] = temp23 & msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp24 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = temp19 & temp23;\n                memory[0x20:0x40] = temp24 + 0x02;\n                var temp25 = keccak256(memory[0x00:0x40]);\n                storage[temp25] = temp20 + storage[temp25];\n                var1 = 0x01;\n            \n            label_02FE:\n                var temp26 = memory[0x40:0x60];\n                memory[temp26:temp26 + 0x20] = !!var1;\n                var temp27 = memory[0x40:0x60];\n                return memory[temp27:temp27 + temp26 - temp27 + 0x20];\n            } else if (var0 == 0x18160ddd) {\n                // Dispatch table entry for totalSupply()\n                var1 = 0x026e;\n                var2 = storage[0x00];\n            \n            label_026E:\n                var temp28 = memory[0x40:0x60];\n                memory[temp28:temp28 + 0x20] = var2;\n                var temp29 = memory[0x40:0x60];\n                return memory[temp29:temp29 + temp28 - temp29 + 0x20];\n            } else if (var0 == 0x23b872dd) {\n                // Dispatch table entry for transferFrom(address,address,uint256)\n                var1 = 0x02fe;\n                var2 = msg.data[0x04:0x24];\n                var3 = msg.data[0x24:0x44];\n                var4 = msg.data[0x44:0x64];\n                var5 = 0x00;\n                memory[var5:var5 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x01;\n                var6 = var2;\n                var7 = var4;\n            \n                if (storage[keccak256(memory[var5:var5 + 0x40])] >= var7) {\n                    var temp30 = 0x02 ** 0xa0 - 0x01;\n                    memory[0x00:0x20] = temp30 & var2;\n                    memory[0x20:0x40] = 0x01;\n                    var temp31 = keccak256(memory[0x00:0x40]);\n                    memory[0x00:0x20] = msg.sender & temp30;\n                    memory[0x20:0x40] = temp31 + 0x02;\n                    var8 = var2;\n                    var var9 = msg.sender;\n                    var var10 = var4;\n                \n                    if (storage[keccak256(memory[0x00:0x40])] < var10) { goto label_0568; }\n                \n                    var temp32 = var3;\n                    var temp33 = var2;\n                    var temp34 = var4;\n                    var temp35 = memory[0x40:0x60];\n                    memory[temp35:temp35 + 0x20] = temp34;\n                    var temp36 = memory[0x40:0x60];\n                    log(memory[temp36:temp36 + (temp35 + 0x20) - temp36], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-9] & 0x02 ** 0xa0 - 0x01, stack[-8] & 0x02 ** 0xa0 - 0x01]);\n                    var temp37 = 0x02 ** 0xa0 - 0x01;\n                    memory[0x00:0x20] = temp37 & temp33;\n                    memory[0x20:0x40] = 0x01;\n                    var temp38 = keccak256(memory[0x00:0x40]);\n                    memory[0x00:0x20] = temp37 & msg.sender;\n                    memory[0x20:0x40] = temp38 + 0x02;\n                    var temp39 = keccak256(memory[0x00:0x40]);\n                    storage[temp39] = storage[temp39] - temp34;\n                    memory[0x20:0x40] = 0x01;\n                    storage[temp38] = storage[temp38] - temp34;\n                    memory[0x00:0x20] = temp32 & temp37;\n                    var temp40 = keccak256(memory[0x00:0x40]);\n                    storage[temp40] = temp34 + storage[temp40];\n                    var5 = 0x01;\n                \n                label_0568:\n                    var1 = var5;\n                    // Error: Could not resolve jump destination!\n                } else {\n                    var1 = transferFrom(var2, var3, var4, var5, var6, var7);\n                    goto label_02FE;\n                }\n            } else if (var0 == 0x29cbdc86) {\n                // Dispatch table entry for buyin(address,uint256)\n                var1 = 0x02fa;\n                var2 = msg.data[0x04:0x24];\n                var3 = msg.data[0x24:0x44];\n                var4 = 0x05b1;\n                var5 = var2;\n                var6 = var3;\n                func_008F(var5, var6);\n                func_05B1(var2, var3);\n                stop();\n            } else if (var0 == 0x55234ec0) {\n                // Dispatch table entry for remaining()\n                var1 = 0x026e;\n                var2 = storage[0x03];\n                goto label_026E;\n            } else if (var0 == 0x5af36e3e) {\n                // Dispatch table entry for refund(uint256,uint256)\n                var1 = 0x02fe;\n                var2 = msg.data[0x04:0x24];\n                var3 = msg.data[0x24:0x44];\n                var4 = 0x00;\n                memory[var4:var4 + 0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp41 = keccak256(memory[var4:var4 + 0x40]);\n                memory[var4:var4 + 0x20] = var2;\n                memory[0x20:0x40] = temp41 + 0x01;\n                var5 = var2;\n                var6 = var3;\n                var7 = storage[keccak256(memory[var4:var4 + 0x40])] < var6;\n            \n                if (!var7) {\n                    var1 = func_01ED(var2, var3, var4, var5, var6, var7);\n                    goto label_02FE;\n                } else if (!var7) {\n                    var7 = msg.sender;\n                    memory[0x00:0x20] = var7 & 0x02 ** 0xa0 - 0x01;\n                    memory[0x20:0x40] = 0x01;\n                    var8 = var3;\n                \n                    if (storage[keccak256(memory[0x00:0x40])] >= var8) {\n                        var temp42 = var3;\n                        var temp43 = var2;\n                        log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x73f04af9dcc582a923ec15d3eea990fe34adabfff2879e28d44572e01a54abb6, msg.sender, stack[-7], stack[-6]]);\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp44 = keccak256(memory[0x00:0x40]);\n                        storage[temp44] = storage[temp44] - temp42;\n                        storage[0x00] = temp42 + storage[0x00];\n                        memory[0x00:0x20] = temp43;\n                        memory[0x20:0x40] = temp44 + 0x01;\n                        var temp45 = keccak256(memory[0x00:0x40]);\n                        var temp46 = storage[temp45] - temp42;\n                        storage[temp45] = temp46;\n                    \n                        if (temp46 != 0x00) {\n                            var temp47 = memory[0x40:0x60];\n                            var temp48;\n                            temp48, memory[temp47:temp47 + 0x00] = address(msg.sender).call.gas(0x00).value((var3 * var2) / 0x0f4240)(memory[temp47:temp47 + 0x00]);\n                        \n                            if (temp48) {\n                            label_06EE:\n                                var4 = 0x01;\n                                var1 = allowance(var2, var3, var4);\n                                // Error: Could not resolve method call return address!\n                            } else {\n                            label_06EA:\n                                memory[0x40:0x60] = var8;\n                            \n                                if (!msg.data.length) { goto label_0082; }\n                                else { goto label_000B; }\n                            }\n                        } else {\n                            memory[0x00:0x20] = msg.sender;\n                            memory[0x20:0x40] = 0x01;\n                            var temp49 = keccak256(memory[0x00:0x40]) + 0x01;\n                            var temp50 = var2;\n                            memory[0x00:0x20] = temp50;\n                            memory[0x20:0x40] = temp49;\n                            var temp51 = keccak256(memory[0x00:0x40]);\n                            storage[temp51] = 0x00;\n                            var temp52 = temp51 + 0x01;\n                            storage[temp52] = storage[temp52] & ~0xffffffff;\n                            var temp53 = memory[0x40:0x60];\n                            var temp54;\n                            temp54, memory[temp53:temp53 + 0x00] = address(msg.sender).call.gas(0x00).value((var3 * temp50) / 0x0f4240)(memory[temp53:temp53 + 0x00]);\n                        \n                            if (temp54) { goto label_06EE; }\n                            else { goto label_06EA; }\n                        }\n                    } else {\n                        var1 = allowance(var2, var3, var4);\n                        // Error: Could not resolve method call return address!\n                    }\n                } else {\n                    var1 = allowance(var2, var3, var4);\n                    // Error: Could not resolve method call return address!\n                }\n            } else if (var0 == 0x70a08231) {\n                // Dispatch table entry for balanceOf(address)\n                memory[0x00:0x20] = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x01;\n                var1 = storage[keccak256(memory[0x00:0x40])];\n                goto label_026E;\n            } else if (var0 == 0xa035b1fe) {\n                // Dispatch table entry for price()\n                var1 = 0x026e;\n                var2 = storage[0x02];\n                goto label_026E;\n            } else if (var0 == 0xa9059cbb) {\n                // Dispatch table entry for transfer(address,uint256)\n                var1 = 0x02fe;\n                var2 = msg.data[0x04:0x24];\n                var3 = msg.data[0x24:0x44];\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var4 = 0x00;\n                var5 = msg.sender;\n                var6 = var3;\n            \n                if (storage[keccak256(memory[var4:var4 + 0x40])] >= var6) {\n                    var1 = func_06FB(var2, var3, var4, var5, var6);\n                    goto label_02FE;\n                } else {\n                    var1 = func_02BB(var2, var3, var4, var5, var6);\n                    goto label_02FE;\n                }\n            } else if (var0 == 0xdd62ed3e) {\n                // Dispatch table entry for allowance(address,address)\n                var1 = 0x026e;\n                var2 = msg.data[0x04:0x24];\n                var3 = msg.data[0x24:0x44];\n                var temp55 = 0x02 ** 0xa0 - 0x01;\n                memory[0x00:0x20] = temp55 & var2;\n                memory[0x20:0x40] = 0x01;\n                var temp56 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = var3 & temp55;\n                memory[0x20:0x40] = temp56 + 0x02;\n                var4 = storage[keccak256(memory[0x00:0x40])];\n                var1 = allowance(var2, var3, var4);\n                goto label_026E;\n            } else { goto label_0082; }\n        }\n    }\n    \n    function func_008F(var arg0, var arg1) {\n        var var0 = msg.value;\n        var var1 = 0x00;\n        var var2 = var1;\n        var var3 = var2;\n    \n    label_0095:\n        var var4 = var0 > 0x00;\n    \n        if (var4) {\n            func_00A0(arg0, arg1, var0, var1, var2, var3, var4);\n            // Error: Could not resolve method call return address!\n        } else if (!var4) {\n        label_0312:\n            return;\n        } else {\n        label_00AE:\n            var1 = (storage[0x02] * storage[0x03]) / 0x0f4240;\n        \n            if (var0 > var1) {\n                var temp0 = var1;\n                var2 = temp0;\n                var temp1 = (var2 * 0x0f4240) / storage[0x02];\n                var3 = temp1;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp2 = keccak256(memory[0x00:0x40]);\n                storage[temp2] = storage[temp2] + var3;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp3 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp3;\n                var temp4 = keccak256(memory[0x00:0x40]);\n                storage[temp4] = storage[temp4] + var3;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp5 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp5;\n                var temp6 = keccak256(memory[0x00:0x40]) + 0x01;\n                storage[temp6] = block.timestamp + 0x093a80 | (storage[temp6] & ~0xffffffff);\n                storage[0x00] = storage[0x00] + var3;\n                var temp7 = memory[0x40:0x60];\n                log(memory[temp7:temp7 + memory[0x40:0x60] - temp7], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-3] * 0x0f4240) / storage[0x02]]);\n                var temp8 = storage[0x03] - var3;\n                storage[0x03] = temp8;\n                var0 = var0 - var2;\n            \n                if (temp8 != 0x00) {\n                label_04C5:\n                    goto label_0095;\n                } else {\n                label_0483:\n                    var temp9 = storage[0x02] + 0x038d7ea4c68000;\n                    storage[0x02] = temp9;\n                    storage[0x03] = 0x05f5e100;\n                    log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x23c3dae768238f239632b5c4acb89485b440e0fa72481c4aad9f9b4f9b5a0a5f, storage[0x02] + 0x038d7ea4c68000]);\n                    goto label_0095;\n                }\n            } else {\n                var4 = var0;\n                var temp10 = var4;\n                var2 = temp10;\n                var temp11 = (var2 * 0x0f4240) / storage[0x02];\n                var3 = temp11;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp12 = keccak256(memory[0x00:0x40]);\n                storage[temp12] = storage[temp12] + var3;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp13 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp13;\n                var temp14 = keccak256(memory[0x00:0x40]);\n                storage[temp14] = storage[temp14] + var3;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp15 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp15;\n                var temp16 = keccak256(memory[0x00:0x40]) + 0x01;\n                storage[temp16] = block.timestamp + 0x093a80 | (storage[temp16] & ~0xffffffff);\n                storage[0x00] = storage[0x00] + var3;\n                var temp17 = memory[0x40:0x60];\n                log(memory[temp17:temp17 + memory[0x40:0x60] - temp17], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-1] * 0x0f4240) / storage[0x02]]);\n                var temp18 = storage[0x03] - var3;\n                storage[0x03] = temp18;\n                var0 = var0 - var2;\n            \n                if (temp18 != 0x00) { goto label_04C5; }\n                else { goto label_0483; }\n            }\n        }\n    }\n    \n    function func_00A0(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6) {\n        if (storage[0x02] > arg1) {\n        label_0312:\n            return;\n        } else {\n        label_00AE:\n            arg3 = (storage[0x02] * storage[0x03]) / 0x0f4240;\n        \n            if (arg2 > arg3) {\n                var temp0 = arg3;\n                arg4 = temp0;\n                var temp1 = (arg4 * 0x0f4240) / storage[0x02];\n                arg5 = temp1;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp2 = keccak256(memory[0x00:0x40]);\n                storage[temp2] = storage[temp2] + arg5;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp3 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp3;\n                var temp4 = keccak256(memory[0x00:0x40]);\n                storage[temp4] = storage[temp4] + arg5;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp5 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp5;\n                var temp6 = keccak256(memory[0x00:0x40]) + 0x01;\n                storage[temp6] = block.timestamp + 0x093a80 | (storage[temp6] & ~0xffffffff);\n                storage[0x00] = storage[0x00] + arg5;\n                var temp7 = memory[0x40:0x60];\n                log(memory[temp7:temp7 + memory[0x40:0x60] - temp7], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-3] * 0x0f4240) / storage[0x02]]);\n                var temp8 = storage[0x03] - arg5;\n                storage[0x03] = temp8;\n                arg2 = arg2 - arg4;\n            \n                if (temp8 != 0x00) {\n                label_04C5:\n                \n                label_0095:\n                    arg6 = arg2 > 0x00;\n                \n                    if (arg6) {\n                        func_00A0(arg0, arg1, arg2, arg3, arg4, arg5, arg6);\n                        // Error: Could not resolve method call return address!\n                    } else if (!arg6) { goto label_0312; }\n                    else { goto label_00AE; }\n                } else {\n                label_0483:\n                    var temp9 = storage[0x02] + 0x038d7ea4c68000;\n                    storage[0x02] = temp9;\n                    storage[0x03] = 0x05f5e100;\n                    log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x23c3dae768238f239632b5c4acb89485b440e0fa72481c4aad9f9b4f9b5a0a5f, storage[0x02] + 0x038d7ea4c68000]);\n                    goto label_0095;\n                }\n            } else {\n                arg6 = arg2;\n                var temp10 = arg6;\n                arg4 = temp10;\n                var temp11 = (arg4 * 0x0f4240) / storage[0x02];\n                arg5 = temp11;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp12 = keccak256(memory[0x00:0x40]);\n                storage[temp12] = storage[temp12] + arg5;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp13 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp13;\n                var temp14 = keccak256(memory[0x00:0x40]);\n                storage[temp14] = storage[temp14] + arg5;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp15 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp15;\n                var temp16 = keccak256(memory[0x00:0x40]) + 0x01;\n                storage[temp16] = block.timestamp + 0x093a80 | (storage[temp16] & ~0xffffffff);\n                storage[0x00] = storage[0x00] + arg5;\n                var temp17 = memory[0x40:0x60];\n                log(memory[temp17:temp17 + memory[0x40:0x60] - temp17], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-1] * 0x0f4240) / storage[0x02]]);\n                var temp18 = storage[0x03] - arg5;\n                storage[0x03] = temp18;\n                arg2 = arg2 - arg4;\n            \n                if (temp18 != 0x00) { goto label_04C5; }\n                else { goto label_0483; }\n            }\n        }\n    }\n    \n    function allowance(var arg0, var arg1, var arg2) returns (var r0) { return arg2; }\n    \n    function transferFrom(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5) returns (var r0) { return arg3; }\n    \n    function func_01ED(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5) returns (var r0) {\n        memory[0x00:0x20] = msg.sender;\n        memory[0x20:0x40] = 0x01;\n        var temp0 = keccak256(memory[0x00:0x40]) + 0x01;\n        memory[0x00:0x20] = arg3;\n        memory[0x20:0x40] = temp0;\n    \n        if (block.timestamp < storage[keccak256(memory[0x00:0x40]) + 0x01] & 0xffffffff) { goto label_024C; }\n    \n    label_05B5:\n        arg5 = msg.sender;\n        memory[0x00:0x20] = arg5 & 0x02 ** 0xa0 - 0x01;\n        memory[0x20:0x40] = 0x01;\n        var var0 = arg1;\n    \n        if (storage[keccak256(memory[0x00:0x40])] >= var0) {\n            var temp1 = arg1;\n            var temp2 = arg0;\n            log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x73f04af9dcc582a923ec15d3eea990fe34adabfff2879e28d44572e01a54abb6, msg.sender, stack[-7], stack[-6]]);\n            memory[0x00:0x20] = msg.sender;\n            memory[0x20:0x40] = 0x01;\n            var temp3 = keccak256(memory[0x00:0x40]);\n            storage[temp3] = storage[temp3] - temp1;\n            storage[0x00] = temp1 + storage[0x00];\n            memory[0x00:0x20] = temp2;\n            memory[0x20:0x40] = temp3 + 0x01;\n            var temp4 = keccak256(memory[0x00:0x40]);\n            var temp5 = storage[temp4] - temp1;\n            storage[temp4] = temp5;\n        \n            if (temp5 != 0x00) {\n                var temp6 = memory[0x40:0x60];\n                var temp7;\n                temp7, memory[temp6:temp6 + 0x00] = address(msg.sender).call.gas(0x00).value((arg1 * arg0) / 0x0f4240)(memory[temp6:temp6 + 0x00]);\n            \n                if (temp7) {\n                label_06EE:\n                    arg2 = 0x01;\n                    r0 = allowance(arg0, arg1, arg2);\n                    // Error: Could not resolve method call return address!\n                } else {\n                label_06EA:\n                    memory[0x40:0x60] = var0;\n                \n                    if (!msg.data.length) {\n                    label_0082:\n                        var0 = 0x02fa;\n                        var var1 = 0x02fc;\n                        var var2 = msg.sender;\n                        var var3 = 0x02 ** 0xff;\n                        var var4 = msg.value;\n                        var var5 = 0x00;\n                        var var6 = var5;\n                        var var7 = var6;\n                        var var8 = var4 > 0x00;\n                    \n                        if (!var8) {\n                        label_00A8:\n                        \n                            if (!var8) {\n                            label_0312:\n                                // Error: Could not resolve jump destination!\n                            } else {\n                            label_00AE:\n                                var5 = (storage[0x02] * storage[0x03]) / 0x0f4240;\n                            \n                                if (var4 > var5) {\n                                    var temp8 = var5;\n                                    var6 = temp8;\n                                    var temp9 = (var6 * 0x0f4240) / storage[0x02];\n                                    var7 = temp9;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp10 = keccak256(memory[0x00:0x40]);\n                                    storage[temp10] = storage[temp10] + var7;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp11 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    memory[0x00:0x20] = storage[0x02];\n                                    memory[0x20:0x40] = temp11;\n                                    var temp12 = keccak256(memory[0x00:0x40]);\n                                    storage[temp12] = storage[temp12] + var7;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp13 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    memory[0x00:0x20] = storage[0x02];\n                                    memory[0x20:0x40] = temp13;\n                                    var temp14 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    storage[temp14] = block.timestamp + 0x093a80 | (storage[temp14] & ~0xffffffff);\n                                    storage[0x00] = storage[0x00] + var7;\n                                    var temp15 = memory[0x40:0x60];\n                                    log(memory[temp15:temp15 + memory[0x40:0x60] - temp15], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-3] * 0x0f4240) / storage[0x02]]);\n                                    var temp16 = storage[0x03] - var7;\n                                    storage[0x03] = temp16;\n                                    var4 = var4 - var6;\n                                \n                                    if (temp16 != 0x00) {\n                                    label_04C5:\n                                    \n                                    label_0095:\n                                        var8 = var4 > 0x00;\n                                    \n                                        if (!var8) { goto label_00A8; }\n                                    \n                                        func_00A0(var2, var3, var4, var5, var6, var7, var8);\n                                        // Error: Could not resolve method call return address!\n                                    } else {\n                                    label_0483:\n                                        var temp17 = storage[0x02] + 0x038d7ea4c68000;\n                                        storage[0x02] = temp17;\n                                        storage[0x03] = 0x05f5e100;\n                                        log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x23c3dae768238f239632b5c4acb89485b440e0fa72481c4aad9f9b4f9b5a0a5f, storage[0x02] + 0x038d7ea4c68000]);\n                                        goto label_0095;\n                                    }\n                                } else {\n                                    var8 = var4;\n                                    var temp18 = var8;\n                                    var6 = temp18;\n                                    var temp19 = (var6 * 0x0f4240) / storage[0x02];\n                                    var7 = temp19;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp20 = keccak256(memory[0x00:0x40]);\n                                    storage[temp20] = storage[temp20] + var7;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp21 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    memory[0x00:0x20] = storage[0x02];\n                                    memory[0x20:0x40] = temp21;\n                                    var temp22 = keccak256(memory[0x00:0x40]);\n                                    storage[temp22] = storage[temp22] + var7;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp23 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    memory[0x00:0x20] = storage[0x02];\n                                    memory[0x20:0x40] = temp23;\n                                    var temp24 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    storage[temp24] = block.timestamp + 0x093a80 | (storage[temp24] & ~0xffffffff);\n                                    storage[0x00] = storage[0x00] + var7;\n                                    var temp25 = memory[0x40:0x60];\n                                    log(memory[temp25:temp25 + memory[0x40:0x60] - temp25], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-1] * 0x0f4240) / storage[0x02]]);\n                                    var temp26 = storage[0x03] - var7;\n                                    storage[0x03] = temp26;\n                                    var4 = var4 - var6;\n                                \n                                    if (temp26 != 0x00) { goto label_04C5; }\n                                    else { goto label_0483; }\n                                }\n                            }\n                        } else {\n                            func_00A0(var2, var3, var4, var5, var6, var7, var8);\n                            func_02FC();\n                            stop();\n                        }\n                    } else {\n                        var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                    \n                        if (var0 == 0x095ea7b3) {\n                            var temp27 = msg.data[0x04:0x24];\n                            var temp28 = msg.data[0x24:0x44];\n                            var temp29 = memory[0x40:0x60];\n                            memory[temp29:temp29 + 0x20] = temp28;\n                            var temp30 = memory[0x40:0x60];\n                            log(memory[temp30:temp30 + (temp29 + 0x20) - temp30], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, msg.sender, msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01]);\n                            var temp31 = 0x02 ** 0xa0 - 0x01;\n                            memory[0x00:0x20] = temp31 & msg.sender;\n                            memory[0x20:0x40] = 0x01;\n                            var temp32 = keccak256(memory[0x00:0x40]);\n                            memory[0x00:0x20] = temp27 & temp31;\n                            memory[0x20:0x40] = temp32 + 0x02;\n                            var temp33 = keccak256(memory[0x00:0x40]);\n                            storage[temp33] = temp28 + storage[temp33];\n                            var1 = 0x01;\n                        \n                        label_02FE:\n                            var temp34 = memory[0x40:0x60];\n                            memory[temp34:temp34 + 0x20] = !!var1;\n                            var temp35 = memory[0x40:0x60];\n                            return memory[temp35:temp35 + temp34 - temp35 + 0x20];\n                        } else if (var0 == 0x18160ddd) {\n                            var1 = 0x026e;\n                            var2 = storage[0x00];\n                        \n                        label_026E:\n                            var temp36 = memory[0x40:0x60];\n                            memory[temp36:temp36 + 0x20] = var2;\n                            var temp37 = memory[0x40:0x60];\n                            return memory[temp37:temp37 + temp36 - temp37 + 0x20];\n                        } else if (var0 == 0x23b872dd) {\n                            var1 = 0x02fe;\n                            var2 = msg.data[0x04:0x24];\n                            var3 = msg.data[0x24:0x44];\n                            var4 = msg.data[0x44:0x64];\n                            var5 = 0x00;\n                            memory[var5:var5 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n                            memory[0x20:0x40] = 0x01;\n                            var6 = var2;\n                            var7 = var4;\n                        \n                            if (storage[keccak256(memory[var5:var5 + 0x40])] >= var7) {\n                                var temp38 = 0x02 ** 0xa0 - 0x01;\n                                memory[0x00:0x20] = temp38 & var2;\n                                memory[0x20:0x40] = 0x01;\n                                var temp39 = keccak256(memory[0x00:0x40]);\n                                memory[0x00:0x20] = msg.sender & temp38;\n                                memory[0x20:0x40] = temp39 + 0x02;\n                                var8 = var2;\n                                var var9 = msg.sender;\n                                var var10 = var4;\n                            \n                                if (storage[keccak256(memory[0x00:0x40])] < var10) { goto label_0568; }\n                            \n                                var temp40 = var3;\n                                var temp41 = var2;\n                                var temp42 = var4;\n                                var temp43 = memory[0x40:0x60];\n                                memory[temp43:temp43 + 0x20] = temp42;\n                                var temp44 = memory[0x40:0x60];\n                                log(memory[temp44:temp44 + (temp43 + 0x20) - temp44], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-9] & 0x02 ** 0xa0 - 0x01, stack[-8] & 0x02 ** 0xa0 - 0x01]);\n                                var temp45 = 0x02 ** 0xa0 - 0x01;\n                                memory[0x00:0x20] = temp45 & temp41;\n                                memory[0x20:0x40] = 0x01;\n                                var temp46 = keccak256(memory[0x00:0x40]);\n                                memory[0x00:0x20] = temp45 & msg.sender;\n                                memory[0x20:0x40] = temp46 + 0x02;\n                                var temp47 = keccak256(memory[0x00:0x40]);\n                                storage[temp47] = storage[temp47] - temp42;\n                                memory[0x20:0x40] = 0x01;\n                                storage[temp46] = storage[temp46] - temp42;\n                                memory[0x00:0x20] = temp40 & temp45;\n                                var temp48 = keccak256(memory[0x00:0x40]);\n                                storage[temp48] = temp42 + storage[temp48];\n                                var5 = 0x01;\n                            \n                            label_0568:\n                                var1 = var5;\n                                // Error: Could not resolve jump destination!\n                            } else {\n                                var1 = transferFrom(var2, var3, var4, var5, var6, var7);\n                                goto label_02FE;\n                            }\n                        } else if (var0 == 0x29cbdc86) {\n                            var1 = 0x02fa;\n                            var2 = msg.data[0x04:0x24];\n                            var3 = msg.data[0x24:0x44];\n                            var4 = 0x05b1;\n                            var5 = var2;\n                            var6 = var3;\n                            func_008F(var5, var6);\n                            func_05B1(var2, var3);\n                            stop();\n                        } else if (var0 == 0x55234ec0) {\n                            var1 = 0x026e;\n                            var2 = storage[0x03];\n                            goto label_026E;\n                        } else if (var0 == 0x5af36e3e) {\n                            var1 = 0x02fe;\n                            var2 = msg.data[0x04:0x24];\n                            var3 = msg.data[0x24:0x44];\n                            var4 = 0x00;\n                            memory[var4:var4 + 0x20] = msg.sender;\n                            memory[0x20:0x40] = 0x01;\n                            var temp49 = keccak256(memory[var4:var4 + 0x40]);\n                            memory[var4:var4 + 0x20] = var2;\n                            memory[0x20:0x40] = temp49 + 0x01;\n                            var5 = var2;\n                            var6 = var3;\n                            var7 = storage[keccak256(memory[var4:var4 + 0x40])] < var6;\n                        \n                            if (!var7) {\n                                var1 = func_01ED(var2, var3, var4, var5, var6, var7);\n                                goto label_02FE;\n                            } else if (!var7) { goto label_05B5; }\n                            else {\n                            label_024C:\n                                var1 = allowance(var2, var3, var4);\n                                // Error: Could not resolve method call return address!\n                            }\n                        } else if (var0 == 0x70a08231) {\n                            memory[0x00:0x20] = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n                            memory[0x20:0x40] = 0x01;\n                            var1 = storage[keccak256(memory[0x00:0x40])];\n                            goto label_026E;\n                        } else if (var0 == 0xa035b1fe) {\n                            var1 = 0x026e;\n                            var2 = storage[0x02];\n                            goto label_026E;\n                        } else if (var0 == 0xa9059cbb) {\n                            var1 = 0x02fe;\n                            var2 = msg.data[0x04:0x24];\n                            var3 = msg.data[0x24:0x44];\n                            memory[0x00:0x20] = msg.sender;\n                            memory[0x20:0x40] = 0x01;\n                            var4 = 0x00;\n                            var5 = msg.sender;\n                            var6 = var3;\n                        \n                            if (storage[keccak256(memory[var4:var4 + 0x40])] >= var6) {\n                                var1 = func_06FB(var2, var3, var4, var5, var6);\n                                goto label_02FE;\n                            } else {\n                                var1 = func_02BB(var2, var3, var4, var5, var6);\n                                goto label_02FE;\n                            }\n                        } else if (var0 == 0xdd62ed3e) {\n                            var1 = 0x026e;\n                            var2 = msg.data[0x04:0x24];\n                            var3 = msg.data[0x24:0x44];\n                            var temp50 = 0x02 ** 0xa0 - 0x01;\n                            memory[0x00:0x20] = temp50 & var2;\n                            memory[0x20:0x40] = 0x01;\n                            var temp51 = keccak256(memory[0x00:0x40]);\n                            memory[0x00:0x20] = var3 & temp50;\n                            memory[0x20:0x40] = temp51 + 0x02;\n                            var4 = storage[keccak256(memory[0x00:0x40])];\n                            var1 = allowance(var2, var3, var4);\n                            goto label_026E;\n                        } else { goto label_0082; }\n                    }\n                }\n            } else {\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp52 = keccak256(memory[0x00:0x40]) + 0x01;\n                var temp53 = arg0;\n                memory[0x00:0x20] = temp53;\n                memory[0x20:0x40] = temp52;\n                var temp54 = keccak256(memory[0x00:0x40]);\n                storage[temp54] = 0x00;\n                var temp55 = temp54 + 0x01;\n                storage[temp55] = storage[temp55] & ~0xffffffff;\n                var temp56 = memory[0x40:0x60];\n                var temp57;\n                temp57, memory[temp56:temp56 + 0x00] = address(msg.sender).call.gas(0x00).value((arg1 * temp53) / 0x0f4240)(memory[temp56:temp56 + 0x00]);\n            \n                if (temp57) { goto label_06EE; }\n                else { goto label_06EA; }\n            }\n        } else {\n            r0 = allowance(arg0, arg1, arg2);\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function func_02BB(var arg0, var arg1, var arg2, var arg3, var arg4) returns (var r0) {\n        r0 = allowance(arg0, arg1, arg2);\n        // Error: Could not resolve method call return address!\n    }\n    \n    function func_02FC() {}\n    \n    function func_05B1(var arg0, var arg1) {}\n    \n    function func_06FB(var arg0, var arg1, var arg2, var arg3, var arg4) returns (var r0) {\n        var temp0 = arg0;\n        var temp1 = arg1;\n        var temp2 = memory[0x40:0x60];\n        memory[temp2:temp2 + 0x20] = temp1;\n        var temp3 = memory[0x40:0x60];\n        log(memory[temp3:temp3 + (temp2 + 0x20) - temp3], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, msg.sender, stack[-5] & 0x02 ** 0xa0 - 0x01]);\n        var temp4 = 0x02 ** 0xa0 - 0x01;\n        memory[0x00:0x20] = temp4 & msg.sender;\n        memory[0x20:0x40] = 0x01;\n        var temp5 = keccak256(memory[0x00:0x40]);\n        storage[temp5] = storage[temp5] - temp1;\n        memory[0x00:0x20] = temp0 & temp4;\n        var temp6 = keccak256(memory[0x00:0x40]);\n        storage[temp6] = temp1 + storage[temp6];\n        return arg2;\n    }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n    \n        if (!msg.data.length) {\n        label_0082:\n            var var0 = 0x02fa;\n            var var1 = 0x02fc;\n            var var2 = msg.sender;\n            var var3 = 0x02 ** 0xff;\n            var var4 = msg.value;\n            var var5 = 0x00;\n            var var6 = var5;\n            var var7 = var6;\n            var var8 = var4 > 0x00;\n        \n            if (!var8) {\n            label_00A8:\n            \n                if (!var8) {\n                label_0312:\n                    // Error: Could not resolve jump destination!\n                } else {\n                label_00AE:\n                    var5 = (storage[0x02] * storage[0x03]) / 0x0f4240;\n                \n                    if (var4 > var5) {\n                        var temp0 = var5;\n                        var6 = temp0;\n                        var temp1 = (var6 * 0x0f4240) / storage[0x02];\n                        var7 = temp1;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp2 = keccak256(memory[0x00:0x40]);\n                        storage[temp2] = storage[temp2] + var7;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp3 = keccak256(memory[0x00:0x40]) + 0x01;\n                        memory[0x00:0x20] = storage[0x02];\n                        memory[0x20:0x40] = temp3;\n                        var temp4 = keccak256(memory[0x00:0x40]);\n                        storage[temp4] = storage[temp4] + var7;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp5 = keccak256(memory[0x00:0x40]) + 0x01;\n                        memory[0x00:0x20] = storage[0x02];\n                        memory[0x20:0x40] = temp5;\n                        var temp6 = keccak256(memory[0x00:0x40]) + 0x01;\n                        storage[temp6] = block.timestamp + 0x093a80 | (storage[temp6] & ~0xffffffff);\n                        storage[0x00] = storage[0x00] + var7;\n                        var temp7 = memory[0x40:0x60];\n                        log(memory[temp7:temp7 + memory[0x40:0x60] - temp7], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-3] * 0x0f4240) / storage[0x02]]);\n                        var temp8 = storage[0x03] - var7;\n                        storage[0x03] = temp8;\n                        var4 = var4 - var6;\n                    \n                        if (temp8 != 0x00) {\n                        label_04C5:\n                        \n                        label_0095:\n                            var8 = var4 > 0x00;\n                        \n                            if (!var8) { goto label_00A8; }\n                        \n                            func_00A0(var2, var3, var4, var5, var6, var7, var8);\n                            // Error: Could not resolve method call return address!\n                        } else {\n                        label_0483:\n                            var temp9 = storage[0x02] + 0x038d7ea4c68000;\n                            storage[0x02] = temp9;\n                            storage[0x03] = 0x05f5e100;\n                            log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x23c3dae768238f239632b5c4acb89485b440e0fa72481c4aad9f9b4f9b5a0a5f, storage[0x02] + 0x038d7ea4c68000]);\n                            goto label_0095;\n                        }\n                    } else {\n                        var8 = var4;\n                        var temp10 = var8;\n                        var6 = temp10;\n                        var temp11 = (var6 * 0x0f4240) / storage[0x02];\n                        var7 = temp11;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp12 = keccak256(memory[0x00:0x40]);\n                        storage[temp12] = storage[temp12] + var7;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp13 = keccak256(memory[0x00:0x40]) + 0x01;\n                        memory[0x00:0x20] = storage[0x02];\n                        memory[0x20:0x40] = temp13;\n                        var temp14 = keccak256(memory[0x00:0x40]);\n                        storage[temp14] = storage[temp14] + var7;\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp15 = keccak256(memory[0x00:0x40]) + 0x01;\n                        memory[0x00:0x20] = storage[0x02];\n                        memory[0x20:0x40] = temp15;\n                        var temp16 = keccak256(memory[0x00:0x40]) + 0x01;\n                        storage[temp16] = block.timestamp + 0x093a80 | (storage[temp16] & ~0xffffffff);\n                        storage[0x00] = storage[0x00] + var7;\n                        var temp17 = memory[0x40:0x60];\n                        log(memory[temp17:temp17 + memory[0x40:0x60] - temp17], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-1] * 0x0f4240) / storage[0x02]]);\n                        var temp18 = storage[0x03] - var7;\n                        storage[0x03] = temp18;\n                        var4 = var4 - var6;\n                    \n                        if (temp18 != 0x00) { goto label_04C5; }\n                        else { goto label_0483; }\n                    }\n                }\n            } else {\n                func_00A0(var2, var3, var4, var5, var6, var7, var8);\n                func_02FC();\n                stop();\n            }\n        } else {\n        label_000B:\n            var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (var0 == 0x095ea7b3) {\n                // Dispatch table entry for approve(address,uint256)\n                var temp19 = msg.data[0x04:0x24];\n                var temp20 = msg.data[0x24:0x44];\n                var temp21 = memory[0x40:0x60];\n                memory[temp21:temp21 + 0x20] = temp20;\n                var temp22 = memory[0x40:0x60];\n                log(memory[temp22:temp22 + (temp21 + 0x20) - temp22], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, msg.sender, msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01]);\n                var temp23 = 0x02 ** 0xa0 - 0x01;\n                memory[0x00:0x20] = temp23 & msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp24 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = temp19 & temp23;\n                memory[0x20:0x40] = temp24 + 0x02;\n                var temp25 = keccak256(memory[0x00:0x40]);\n                storage[temp25] = temp20 + storage[temp25];\n                var1 = 0x01;\n            \n            label_02FE:\n                var temp26 = memory[0x40:0x60];\n                memory[temp26:temp26 + 0x20] = !!var1;\n                var temp27 = memory[0x40:0x60];\n                return memory[temp27:temp27 + temp26 - temp27 + 0x20];\n            } else if (var0 == 0x18160ddd) {\n                // Dispatch table entry for totalSupply()\n                var1 = 0x026e;\n                var2 = storage[0x00];\n            \n            label_026E:\n                var temp28 = memory[0x40:0x60];\n                memory[temp28:temp28 + 0x20] = var2;\n                var temp29 = memory[0x40:0x60];\n                return memory[temp29:temp29 + temp28 - temp29 + 0x20];\n            } else if (var0 == 0x23b872dd) {\n                // Dispatch table entry for transferFrom(address,address,uint256)\n                var1 = 0x02fe;\n                var2 = msg.data[0x04:0x24];\n                var3 = msg.data[0x24:0x44];\n                var4 = msg.data[0x44:0x64];\n                var5 = 0x00;\n                memory[var5:var5 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x01;\n                var6 = var2;\n                var7 = var4;\n            \n                if (storage[keccak256(memory[var5:var5 + 0x40])] >= var7) {\n                    var temp30 = 0x02 ** 0xa0 - 0x01;\n                    memory[0x00:0x20] = temp30 & var2;\n                    memory[0x20:0x40] = 0x01;\n                    var temp31 = keccak256(memory[0x00:0x40]);\n                    memory[0x00:0x20] = msg.sender & temp30;\n                    memory[0x20:0x40] = temp31 + 0x02;\n                    var8 = var2;\n                    var var9 = msg.sender;\n                    var var10 = var4;\n                \n                    if (storage[keccak256(memory[0x00:0x40])] < var10) { goto label_0568; }\n                \n                    var temp32 = var3;\n                    var temp33 = var2;\n                    var temp34 = var4;\n                    var temp35 = memory[0x40:0x60];\n                    memory[temp35:temp35 + 0x20] = temp34;\n                    var temp36 = memory[0x40:0x60];\n                    log(memory[temp36:temp36 + (temp35 + 0x20) - temp36], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-9] & 0x02 ** 0xa0 - 0x01, stack[-8] & 0x02 ** 0xa0 - 0x01]);\n                    var temp37 = 0x02 ** 0xa0 - 0x01;\n                    memory[0x00:0x20] = temp37 & temp33;\n                    memory[0x20:0x40] = 0x01;\n                    var temp38 = keccak256(memory[0x00:0x40]);\n                    memory[0x00:0x20] = temp37 & msg.sender;\n                    memory[0x20:0x40] = temp38 + 0x02;\n                    var temp39 = keccak256(memory[0x00:0x40]);\n                    storage[temp39] = storage[temp39] - temp34;\n                    memory[0x20:0x40] = 0x01;\n                    storage[temp38] = storage[temp38] - temp34;\n                    memory[0x00:0x20] = temp32 & temp37;\n                    var temp40 = keccak256(memory[0x00:0x40]);\n                    storage[temp40] = temp34 + storage[temp40];\n                    var5 = 0x01;\n                \n                label_0568:\n                    var1 = var5;\n                    // Error: Could not resolve jump destination!\n                } else {\n                    var1 = transferFrom(var2, var3, var4, var5, var6, var7);\n                    goto label_02FE;\n                }\n            } else if (var0 == 0x29cbdc86) {\n                // Dispatch table entry for buyin(address,uint256)\n                var1 = 0x02fa;\n                var2 = msg.data[0x04:0x24];\n                var3 = msg.data[0x24:0x44];\n                var4 = 0x05b1;\n                var5 = var2;\n                var6 = var3;\n                func_008F(var5, var6);\n                func_05B1(var2, var3);\n                stop();\n            } else if (var0 == 0x55234ec0) {\n                // Dispatch table entry for remaining()\n                var1 = 0x026e;\n                var2 = storage[0x03];\n                goto label_026E;\n            } else if (var0 == 0x5af36e3e) {\n                // Dispatch table entry for refund(uint256,uint256)\n                var1 = 0x02fe;\n                var2 = msg.data[0x04:0x24];\n                var3 = msg.data[0x24:0x44];\n                var4 = 0x00;\n                memory[var4:var4 + 0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp41 = keccak256(memory[var4:var4 + 0x40]);\n                memory[var4:var4 + 0x20] = var2;\n                memory[0x20:0x40] = temp41 + 0x01;\n                var5 = var2;\n                var6 = var3;\n                var7 = storage[keccak256(memory[var4:var4 + 0x40])] < var6;\n            \n                if (!var7) {\n                    var1 = func_01ED(var2, var3, var4, var5, var6, var7);\n                    goto label_02FE;\n                } else if (!var7) {\n                    var7 = msg.sender;\n                    memory[0x00:0x20] = var7 & 0x02 ** 0xa0 - 0x01;\n                    memory[0x20:0x40] = 0x01;\n                    var8 = var3;\n                \n                    if (storage[keccak256(memory[0x00:0x40])] >= var8) {\n                        var temp42 = var3;\n                        var temp43 = var2;\n                        log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x73f04af9dcc582a923ec15d3eea990fe34adabfff2879e28d44572e01a54abb6, msg.sender, stack[-7], stack[-6]]);\n                        memory[0x00:0x20] = msg.sender;\n                        memory[0x20:0x40] = 0x01;\n                        var temp44 = keccak256(memory[0x00:0x40]);\n                        storage[temp44] = storage[temp44] - temp42;\n                        storage[0x00] = temp42 + storage[0x00];\n                        memory[0x00:0x20] = temp43;\n                        memory[0x20:0x40] = temp44 + 0x01;\n                        var temp45 = keccak256(memory[0x00:0x40]);\n                        var temp46 = storage[temp45] - temp42;\n                        storage[temp45] = temp46;\n                    \n                        if (temp46 != 0x00) {\n                            var temp47 = memory[0x40:0x60];\n                            var temp48;\n                            temp48, memory[temp47:temp47 + 0x00] = address(msg.sender).call.gas(0x00).value((var3 * var2) / 0x0f4240)(memory[temp47:temp47 + 0x00]);\n                        \n                            if (temp48) {\n                            label_06EE:\n                                var4 = 0x01;\n                                var1 = allowance(var2, var3, var4);\n                                // Error: Could not resolve method call return address!\n                            } else {\n                            label_06EA:\n                                memory[0x40:0x60] = var8;\n                            \n                                if (!msg.data.length) { goto label_0082; }\n                                else { goto label_000B; }\n                            }\n                        } else {\n                            memory[0x00:0x20] = msg.sender;\n                            memory[0x20:0x40] = 0x01;\n                            var temp49 = keccak256(memory[0x00:0x40]) + 0x01;\n                            var temp50 = var2;\n                            memory[0x00:0x20] = temp50;\n                            memory[0x20:0x40] = temp49;\n                            var temp51 = keccak256(memory[0x00:0x40]);\n                            storage[temp51] = 0x00;\n                            var temp52 = temp51 + 0x01;\n                            storage[temp52] = storage[temp52] & ~0xffffffff;\n                            var temp53 = memory[0x40:0x60];\n                            var temp54;\n                            temp54, memory[temp53:temp53 + 0x00] = address(msg.sender).call.gas(0x00).value((var3 * temp50) / 0x0f4240)(memory[temp53:temp53 + 0x00]);\n                        \n                            if (temp54) { goto label_06EE; }\n                            else { goto label_06EA; }\n                        }\n                    } else {\n                        var1 = allowance(var2, var3, var4);\n                        // Error: Could not resolve method call return address!\n                    }\n                } else {\n                    var1 = allowance(var2, var3, var4);\n                    // Error: Could not resolve method call return address!\n                }\n            } else if (var0 == 0x70a08231) {\n                // Dispatch table entry for balanceOf(address)\n                memory[0x00:0x20] = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x01;\n                var1 = storage[keccak256(memory[0x00:0x40])];\n                goto label_026E;\n            } else if (var0 == 0xa035b1fe) {\n                // Dispatch table entry for price()\n                var1 = 0x026e;\n                var2 = storage[0x02];\n                goto label_026E;\n            } else if (var0 == 0xa9059cbb) {\n                // Dispatch table entry for transfer(address,uint256)\n                var1 = 0x02fe;\n                var2 = msg.data[0x04:0x24];\n                var3 = msg.data[0x24:0x44];\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var4 = 0x00;\n                var5 = msg.sender;\n                var6 = var3;\n            \n                if (storage[keccak256(memory[var4:var4 + 0x40])] >= var6) {\n                    var1 = func_06FB(var2, var3, var4, var5, var6);\n                    goto label_02FE;\n                } else {\n                    var1 = func_02BB(var2, var3, var4, var5, var6);\n                    goto label_02FE;\n                }\n            } else if (var0 == 0xdd62ed3e) {\n                // Dispatch table entry for allowance(address,address)\n                var1 = 0x026e;\n                var2 = msg.data[0x04:0x24];\n                var3 = msg.data[0x24:0x44];\n                var temp55 = 0x02 ** 0xa0 - 0x01;\n                memory[0x00:0x20] = temp55 & var2;\n                memory[0x20:0x40] = 0x01;\n                var temp56 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = var3 & temp55;\n                memory[0x20:0x40] = temp56 + 0x02;\n                var4 = storage[keccak256(memory[0x00:0x40])];\n                var1 = allowance(var2, var3, var4);\n                goto label_026E;\n            } else { goto label_0082; }\n        }\n    }\n    \n    function func_008F(var arg0, var arg1) {\n        var var0 = msg.value;\n        var var1 = 0x00;\n        var var2 = var1;\n        var var3 = var2;\n    \n    label_0095:\n        var var4 = var0 > 0x00;\n    \n        if (var4) {\n            func_00A0(arg0, arg1, var0, var1, var2, var3, var4);\n            // Error: Could not resolve method call return address!\n        } else if (!var4) {\n        label_0312:\n            return;\n        } else {\n        label_00AE:\n            var1 = (storage[0x02] * storage[0x03]) / 0x0f4240;\n        \n            if (var0 > var1) {\n                var temp0 = var1;\n                var2 = temp0;\n                var temp1 = (var2 * 0x0f4240) / storage[0x02];\n                var3 = temp1;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp2 = keccak256(memory[0x00:0x40]);\n                storage[temp2] = storage[temp2] + var3;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp3 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp3;\n                var temp4 = keccak256(memory[0x00:0x40]);\n                storage[temp4] = storage[temp4] + var3;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp5 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp5;\n                var temp6 = keccak256(memory[0x00:0x40]) + 0x01;\n                storage[temp6] = block.timestamp + 0x093a80 | (storage[temp6] & ~0xffffffff);\n                storage[0x00] = storage[0x00] + var3;\n                var temp7 = memory[0x40:0x60];\n                log(memory[temp7:temp7 + memory[0x40:0x60] - temp7], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-3] * 0x0f4240) / storage[0x02]]);\n                var temp8 = storage[0x03] - var3;\n                storage[0x03] = temp8;\n                var0 = var0 - var2;\n            \n                if (temp8 != 0x00) {\n                label_04C5:\n                    goto label_0095;\n                } else {\n                label_0483:\n                    var temp9 = storage[0x02] + 0x038d7ea4c68000;\n                    storage[0x02] = temp9;\n                    storage[0x03] = 0x05f5e100;\n                    log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x23c3dae768238f239632b5c4acb89485b440e0fa72481c4aad9f9b4f9b5a0a5f, storage[0x02] + 0x038d7ea4c68000]);\n                    goto label_0095;\n                }\n            } else {\n                var4 = var0;\n                var temp10 = var4;\n                var2 = temp10;\n                var temp11 = (var2 * 0x0f4240) / storage[0x02];\n                var3 = temp11;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp12 = keccak256(memory[0x00:0x40]);\n                storage[temp12] = storage[temp12] + var3;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp13 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp13;\n                var temp14 = keccak256(memory[0x00:0x40]);\n                storage[temp14] = storage[temp14] + var3;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp15 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp15;\n                var temp16 = keccak256(memory[0x00:0x40]) + 0x01;\n                storage[temp16] = block.timestamp + 0x093a80 | (storage[temp16] & ~0xffffffff);\n                storage[0x00] = storage[0x00] + var3;\n                var temp17 = memory[0x40:0x60];\n                log(memory[temp17:temp17 + memory[0x40:0x60] - temp17], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-1] * 0x0f4240) / storage[0x02]]);\n                var temp18 = storage[0x03] - var3;\n                storage[0x03] = temp18;\n                var0 = var0 - var2;\n            \n                if (temp18 != 0x00) { goto label_04C5; }\n                else { goto label_0483; }\n            }\n        }\n    }\n    \n    function func_00A0(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6) {\n        if (storage[0x02] > arg1) {\n        label_0312:\n            return;\n        } else {\n        label_00AE:\n            arg3 = (storage[0x02] * storage[0x03]) / 0x0f4240;\n        \n            if (arg2 > arg3) {\n                var temp0 = arg3;\n                arg4 = temp0;\n                var temp1 = (arg4 * 0x0f4240) / storage[0x02];\n                arg5 = temp1;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp2 = keccak256(memory[0x00:0x40]);\n                storage[temp2] = storage[temp2] + arg5;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp3 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp3;\n                var temp4 = keccak256(memory[0x00:0x40]);\n                storage[temp4] = storage[temp4] + arg5;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp5 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp5;\n                var temp6 = keccak256(memory[0x00:0x40]) + 0x01;\n                storage[temp6] = block.timestamp + 0x093a80 | (storage[temp6] & ~0xffffffff);\n                storage[0x00] = storage[0x00] + arg5;\n                var temp7 = memory[0x40:0x60];\n                log(memory[temp7:temp7 + memory[0x40:0x60] - temp7], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-3] * 0x0f4240) / storage[0x02]]);\n                var temp8 = storage[0x03] - arg5;\n                storage[0x03] = temp8;\n                arg2 = arg2 - arg4;\n            \n                if (temp8 != 0x00) {\n                label_04C5:\n                \n                label_0095:\n                    arg6 = arg2 > 0x00;\n                \n                    if (arg6) {\n                        func_00A0(arg0, arg1, arg2, arg3, arg4, arg5, arg6);\n                        // Error: Could not resolve method call return address!\n                    } else if (!arg6) { goto label_0312; }\n                    else { goto label_00AE; }\n                } else {\n                label_0483:\n                    var temp9 = storage[0x02] + 0x038d7ea4c68000;\n                    storage[0x02] = temp9;\n                    storage[0x03] = 0x05f5e100;\n                    log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x23c3dae768238f239632b5c4acb89485b440e0fa72481c4aad9f9b4f9b5a0a5f, storage[0x02] + 0x038d7ea4c68000]);\n                    goto label_0095;\n                }\n            } else {\n                arg6 = arg2;\n                var temp10 = arg6;\n                arg4 = temp10;\n                var temp11 = (arg4 * 0x0f4240) / storage[0x02];\n                arg5 = temp11;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp12 = keccak256(memory[0x00:0x40]);\n                storage[temp12] = storage[temp12] + arg5;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp13 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp13;\n                var temp14 = keccak256(memory[0x00:0x40]);\n                storage[temp14] = storage[temp14] + arg5;\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp15 = keccak256(memory[0x00:0x40]) + 0x01;\n                memory[0x00:0x20] = storage[0x02];\n                memory[0x20:0x40] = temp15;\n                var temp16 = keccak256(memory[0x00:0x40]) + 0x01;\n                storage[temp16] = block.timestamp + 0x093a80 | (storage[temp16] & ~0xffffffff);\n                storage[0x00] = storage[0x00] + arg5;\n                var temp17 = memory[0x40:0x60];\n                log(memory[temp17:temp17 + memory[0x40:0x60] - temp17], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-1] * 0x0f4240) / storage[0x02]]);\n                var temp18 = storage[0x03] - arg5;\n                storage[0x03] = temp18;\n                arg2 = arg2 - arg4;\n            \n                if (temp18 != 0x00) { goto label_04C5; }\n                else { goto label_0483; }\n            }\n        }\n    }\n    \n    function allowance(var arg0, var arg1, var arg2) returns (var r0) { return arg2; }\n    \n    function transferFrom(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5) returns (var r0) { return arg3; }\n    \n    function func_01ED(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5) returns (var r0) {\n        memory[0x00:0x20] = msg.sender;\n        memory[0x20:0x40] = 0x01;\n        var temp0 = keccak256(memory[0x00:0x40]) + 0x01;\n        memory[0x00:0x20] = arg3;\n        memory[0x20:0x40] = temp0;\n    \n        if (block.timestamp < storage[keccak256(memory[0x00:0x40]) + 0x01] & 0xffffffff) { goto label_024C; }\n    \n    label_05B5:\n        arg5 = msg.sender;\n        memory[0x00:0x20] = arg5 & 0x02 ** 0xa0 - 0x01;\n        memory[0x20:0x40] = 0x01;\n        var var0 = arg1;\n    \n        if (storage[keccak256(memory[0x00:0x40])] >= var0) {\n            var temp1 = arg1;\n            var temp2 = arg0;\n            log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x73f04af9dcc582a923ec15d3eea990fe34adabfff2879e28d44572e01a54abb6, msg.sender, stack[-7], stack[-6]]);\n            memory[0x00:0x20] = msg.sender;\n            memory[0x20:0x40] = 0x01;\n            var temp3 = keccak256(memory[0x00:0x40]);\n            storage[temp3] = storage[temp3] - temp1;\n            storage[0x00] = temp1 + storage[0x00];\n            memory[0x00:0x20] = temp2;\n            memory[0x20:0x40] = temp3 + 0x01;\n            var temp4 = keccak256(memory[0x00:0x40]);\n            var temp5 = storage[temp4] - temp1;\n            storage[temp4] = temp5;\n        \n            if (temp5 != 0x00) {\n                var temp6 = memory[0x40:0x60];\n                var temp7;\n                temp7, memory[temp6:temp6 + 0x00] = address(msg.sender).call.gas(0x00).value((arg1 * arg0) / 0x0f4240)(memory[temp6:temp6 + 0x00]);\n            \n                if (temp7) {\n                label_06EE:\n                    arg2 = 0x01;\n                    r0 = allowance(arg0, arg1, arg2);\n                    // Error: Could not resolve method call return address!\n                } else {\n                label_06EA:\n                    memory[0x40:0x60] = var0;\n                \n                    if (!msg.data.length) {\n                    label_0082:\n                        var0 = 0x02fa;\n                        var var1 = 0x02fc;\n                        var var2 = msg.sender;\n                        var var3 = 0x02 ** 0xff;\n                        var var4 = msg.value;\n                        var var5 = 0x00;\n                        var var6 = var5;\n                        var var7 = var6;\n                        var var8 = var4 > 0x00;\n                    \n                        if (!var8) {\n                        label_00A8:\n                        \n                            if (!var8) {\n                            label_0312:\n                                // Error: Could not resolve jump destination!\n                            } else {\n                            label_00AE:\n                                var5 = (storage[0x02] * storage[0x03]) / 0x0f4240;\n                            \n                                if (var4 > var5) {\n                                    var temp8 = var5;\n                                    var6 = temp8;\n                                    var temp9 = (var6 * 0x0f4240) / storage[0x02];\n                                    var7 = temp9;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp10 = keccak256(memory[0x00:0x40]);\n                                    storage[temp10] = storage[temp10] + var7;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp11 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    memory[0x00:0x20] = storage[0x02];\n                                    memory[0x20:0x40] = temp11;\n                                    var temp12 = keccak256(memory[0x00:0x40]);\n                                    storage[temp12] = storage[temp12] + var7;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp13 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    memory[0x00:0x20] = storage[0x02];\n                                    memory[0x20:0x40] = temp13;\n                                    var temp14 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    storage[temp14] = block.timestamp + 0x093a80 | (storage[temp14] & ~0xffffffff);\n                                    storage[0x00] = storage[0x00] + var7;\n                                    var temp15 = memory[0x40:0x60];\n                                    log(memory[temp15:temp15 + memory[0x40:0x60] - temp15], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-3] * 0x0f4240) / storage[0x02]]);\n                                    var temp16 = storage[0x03] - var7;\n                                    storage[0x03] = temp16;\n                                    var4 = var4 - var6;\n                                \n                                    if (temp16 != 0x00) {\n                                    label_04C5:\n                                    \n                                    label_0095:\n                                        var8 = var4 > 0x00;\n                                    \n                                        if (!var8) { goto label_00A8; }\n                                    \n                                        func_00A0(var2, var3, var4, var5, var6, var7, var8);\n                                        // Error: Could not resolve method call return address!\n                                    } else {\n                                    label_0483:\n                                        var temp17 = storage[0x02] + 0x038d7ea4c68000;\n                                        storage[0x02] = temp17;\n                                        storage[0x03] = 0x05f5e100;\n                                        log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x23c3dae768238f239632b5c4acb89485b440e0fa72481c4aad9f9b4f9b5a0a5f, storage[0x02] + 0x038d7ea4c68000]);\n                                        goto label_0095;\n                                    }\n                                } else {\n                                    var8 = var4;\n                                    var temp18 = var8;\n                                    var6 = temp18;\n                                    var temp19 = (var6 * 0x0f4240) / storage[0x02];\n                                    var7 = temp19;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp20 = keccak256(memory[0x00:0x40]);\n                                    storage[temp20] = storage[temp20] + var7;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp21 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    memory[0x00:0x20] = storage[0x02];\n                                    memory[0x20:0x40] = temp21;\n                                    var temp22 = keccak256(memory[0x00:0x40]);\n                                    storage[temp22] = storage[temp22] + var7;\n                                    memory[0x00:0x20] = msg.sender;\n                                    memory[0x20:0x40] = 0x01;\n                                    var temp23 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    memory[0x00:0x20] = storage[0x02];\n                                    memory[0x20:0x40] = temp23;\n                                    var temp24 = keccak256(memory[0x00:0x40]) + 0x01;\n                                    storage[temp24] = block.timestamp + 0x093a80 | (storage[temp24] & ~0xffffffff);\n                                    storage[0x00] = storage[0x00] + var7;\n                                    var temp25 = memory[0x40:0x60];\n                                    log(memory[temp25:temp25 + memory[0x40:0x60] - temp25], [0x689dcb02b6a65e0e2f1d23ef47c1ec86604ffbed0bcb65f20150cfc7d5e5a948, msg.sender, storage[0x02], (stack[-1] * 0x0f4240) / storage[0x02]]);\n                                    var temp26 = storage[0x03] - var7;\n                                    storage[0x03] = temp26;\n                                    var4 = var4 - var6;\n                                \n                                    if (temp26 != 0x00) { goto label_04C5; }\n                                    else { goto label_0483; }\n                                }\n                            }\n                        } else {\n                            func_00A0(var2, var3, var4, var5, var6, var7, var8);\n                            func_02FC();\n                            stop();\n                        }\n                    } else {\n                        var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n                    \n                        if (var0 == 0x095ea7b3) {\n                            var temp27 = msg.data[0x04:0x24];\n                            var temp28 = msg.data[0x24:0x44];\n                            var temp29 = memory[0x40:0x60];\n                            memory[temp29:temp29 + 0x20] = temp28;\n                            var temp30 = memory[0x40:0x60];\n                            log(memory[temp30:temp30 + (temp29 + 0x20) - temp30], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, msg.sender, msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01]);\n                            var temp31 = 0x02 ** 0xa0 - 0x01;\n                            memory[0x00:0x20] = temp31 & msg.sender;\n                            memory[0x20:0x40] = 0x01;\n                            var temp32 = keccak256(memory[0x00:0x40]);\n                            memory[0x00:0x20] = temp27 & temp31;\n                            memory[0x20:0x40] = temp32 + 0x02;\n                            var temp33 = keccak256(memory[0x00:0x40]);\n                            storage[temp33] = temp28 + storage[temp33];\n                            var1 = 0x01;\n                        \n                        label_02FE:\n                            var temp34 = memory[0x40:0x60];\n                            memory[temp34:temp34 + 0x20] = !!var1;\n                            var temp35 = memory[0x40:0x60];\n                            return memory[temp35:temp35 + temp34 - temp35 + 0x20];\n                        } else if (var0 == 0x18160ddd) {\n                            var1 = 0x026e;\n                            var2 = storage[0x00];\n                        \n                        label_026E:\n                            var temp36 = memory[0x40:0x60];\n                            memory[temp36:temp36 + 0x20] = var2;\n                            var temp37 = memory[0x40:0x60];\n                            return memory[temp37:temp37 + temp36 - temp37 + 0x20];\n                        } else if (var0 == 0x23b872dd) {\n                            var1 = 0x02fe;\n                            var2 = msg.data[0x04:0x24];\n                            var3 = msg.data[0x24:0x44];\n                            var4 = msg.data[0x44:0x64];\n                            var5 = 0x00;\n                            memory[var5:var5 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n                            memory[0x20:0x40] = 0x01;\n                            var6 = var2;\n                            var7 = var4;\n                        \n                            if (storage[keccak256(memory[var5:var5 + 0x40])] >= var7) {\n                                var temp38 = 0x02 ** 0xa0 - 0x01;\n                                memory[0x00:0x20] = temp38 & var2;\n                                memory[0x20:0x40] = 0x01;\n                                var temp39 = keccak256(memory[0x00:0x40]);\n                                memory[0x00:0x20] = msg.sender & temp38;\n                                memory[0x20:0x40] = temp39 + 0x02;\n                                var8 = var2;\n                                var var9 = msg.sender;\n                                var var10 = var4;\n                            \n                                if (storage[keccak256(memory[0x00:0x40])] < var10) { goto label_0568; }\n                            \n                                var temp40 = var3;\n                                var temp41 = var2;\n                                var temp42 = var4;\n                                var temp43 = memory[0x40:0x60];\n                                memory[temp43:temp43 + 0x20] = temp42;\n                                var temp44 = memory[0x40:0x60];\n                                log(memory[temp44:temp44 + (temp43 + 0x20) - temp44], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-9] & 0x02 ** 0xa0 - 0x01, stack[-8] & 0x02 ** 0xa0 - 0x01]);\n                                var temp45 = 0x02 ** 0xa0 - 0x01;\n                                memory[0x00:0x20] = temp45 & temp41;\n                                memory[0x20:0x40] = 0x01;\n                                var temp46 = keccak256(memory[0x00:0x40]);\n                                memory[0x00:0x20] = temp45 & msg.sender;\n                                memory[0x20:0x40] = temp46 + 0x02;\n                                var temp47 = keccak256(memory[0x00:0x40]);\n                                storage[temp47] = storage[temp47] - temp42;\n                                memory[0x20:0x40] = 0x01;\n                                storage[temp46] = storage[temp46] - temp42;\n                                memory[0x00:0x20] = temp40 & temp45;\n                                var temp48 = keccak256(memory[0x00:0x40]);\n                                storage[temp48] = temp42 + storage[temp48];\n                                var5 = 0x01;\n                            \n                            label_0568:\n                                var1 = var5;\n                                // Error: Could not resolve jump destination!\n                            } else {\n                                var1 = transferFrom(var2, var3, var4, var5, var6, var7);\n                                goto label_02FE;\n                            }\n                        } else if (var0 == 0x29cbdc86) {\n                            var1 = 0x02fa;\n                            var2 = msg.data[0x04:0x24];\n                            var3 = msg.data[0x24:0x44];\n                            var4 = 0x05b1;\n                            var5 = var2;\n                            var6 = var3;\n                            func_008F(var5, var6);\n                            func_05B1(var2, var3);\n                            stop();\n                        } else if (var0 == 0x55234ec0) {\n                            var1 = 0x026e;\n                            var2 = storage[0x03];\n                            goto label_026E;\n                        } else if (var0 == 0x5af36e3e) {\n                            var1 = 0x02fe;\n                            var2 = msg.data[0x04:0x24];\n                            var3 = msg.data[0x24:0x44];\n                            var4 = 0x00;\n                            memory[var4:var4 + 0x20] = msg.sender;\n                            memory[0x20:0x40] = 0x01;\n                            var temp49 = keccak256(memory[var4:var4 + 0x40]);\n                            memory[var4:var4 + 0x20] = var2;\n                            memory[0x20:0x40] = temp49 + 0x01;\n                            var5 = var2;\n                            var6 = var3;\n                            var7 = storage[keccak256(memory[var4:var4 + 0x40])] < var6;\n                        \n                            if (!var7) {\n                                var1 = func_01ED(var2, var3, var4, var5, var6, var7);\n                                goto label_02FE;\n                            } else if (!var7) { goto label_05B5; }\n                            else {\n                            label_024C:\n                                var1 = allowance(var2, var3, var4);\n                                // Error: Could not resolve method call return address!\n                            }\n                        } else if (var0 == 0x70a08231) {\n                            memory[0x00:0x20] = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n                            memory[0x20:0x40] = 0x01;\n                            var1 = storage[keccak256(memory[0x00:0x40])];\n                            goto label_026E;\n                        } else if (var0 == 0xa035b1fe) {\n                            var1 = 0x026e;\n                            var2 = storage[0x02];\n                            goto label_026E;\n                        } else if (var0 == 0xa9059cbb) {\n                            var1 = 0x02fe;\n                            var2 = msg.data[0x04:0x24];\n                            var3 = msg.data[0x24:0x44];\n                            memory[0x00:0x20] = msg.sender;\n                            memory[0x20:0x40] = 0x01;\n                            var4 = 0x00;\n                            var5 = msg.sender;\n                            var6 = var3;\n                        \n                            if (storage[keccak256(memory[var4:var4 + 0x40])] >= var6) {\n                                var1 = func_06FB(var2, var3, var4, var5, var6);\n                                goto label_02FE;\n                            } else {\n                                var1 = func_02BB(var2, var3, var4, var5, var6);\n                                goto label_02FE;\n                            }\n                        } else if (var0 == 0xdd62ed3e) {\n                            var1 = 0x026e;\n                            var2 = msg.data[0x04:0x24];\n                            var3 = msg.data[0x24:0x44];\n                            var temp50 = 0x02 ** 0xa0 - 0x01;\n                            memory[0x00:0x20] = temp50 & var2;\n                            memory[0x20:0x40] = 0x01;\n                            var temp51 = keccak256(memory[0x00:0x40]);\n                            memory[0x00:0x20] = var3 & temp50;\n                            memory[0x20:0x40] = temp51 + 0x02;\n                            var4 = storage[keccak256(memory[0x00:0x40])];\n                            var1 = allowance(var2, var3, var4);\n                            goto label_026E;\n                        } else { goto label_0082; }\n                    }\n                }\n            } else {\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = 0x01;\n                var temp52 = keccak256(memory[0x00:0x40]) + 0x01;\n                var temp53 = arg0;\n                memory[0x00:0x20] = temp53;\n                memory[0x20:0x40] = temp52;\n                var temp54 = keccak256(memory[0x00:0x40]);\n                storage[temp54] = 0x00;\n                var temp55 = temp54 + 0x01;\n                storage[temp55] = storage[temp55] & ~0xffffffff;\n                var temp56 = memory[0x40:0x60];\n                var temp57;\n                temp57, memory[temp56:temp56 + 0x00] = address(msg.sender).call.gas(0x00).value((arg1 * temp53) / 0x0f4240)(memory[temp56:temp56 + 0x00]);\n            \n                if (temp57) { goto label_06EE; }\n                else { goto label_06EA; }\n            }\n        } else {\n            r0 = allowance(arg0, arg1, arg2);\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function func_02BB(var arg0, var arg1, var arg2, var arg3, var arg4) returns (var r0) {\n        r0 = allowance(arg0, arg1, arg2);\n        // Error: Could not resolve method call return address!\n    }\n    \n    function func_02FC() {}\n    \n    function func_05B1(var arg0, var arg1) {}\n    \n    function func_06FB(var arg0, var arg1, var arg2, var arg3, var arg4) returns (var r0) {\n        var temp0 = arg0;\n        var temp1 = arg1;\n        var temp2 = memory[0x40:0x60];\n        memory[temp2:temp2 + 0x20] = temp1;\n        var temp3 = memory[0x40:0x60];\n        log(memory[temp3:temp3 + (temp2 + 0x20) - temp3], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, msg.sender, stack[-5] & 0x02 ** 0xa0 - 0x01]);\n        var temp4 = 0x02 ** 0xa0 - 0x01;\n        memory[0x00:0x20] = temp4 & msg.sender;\n        memory[0x20:0x40] = 0x01;\n        var temp5 = keccak256(memory[0x00:0x40]);\n        storage[temp5] = storage[temp5] - temp1;\n        memory[0x00:0x20] = temp0 & temp4;\n        var temp6 = keccak256(memory[0x00:0x40]);\n        storage[temp6] = temp1 + storage[temp6];\n        return arg2;\n    }\n}\n\n.",
	"status": "1",
	"time_cost": 46.02694845199585,
	"usage": {
		"completion_tokens": 484,
		"prompt_tokens": 13443,
		"total_tokens": 13927
	}
}