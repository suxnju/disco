{
	"address": "0x06d5697043f8e611807b221e74f08a28bb4e6e13",
	"input_format": "TemplateDescription",
	"ir": "For the acceptOwnershipAPI function.\n- For newownerapi:\n  - the state variable ownerapi will be updated to newownerapi. Afterthat, \n    - the state variable newownerapi will be updated to 0.\n\nFor the approve function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- the allowance from caller to the first argument will be updated to the second argument.\n\nFor the SetNewBlockchainEnabled function.\n- For owner, and decimals2 is 0, and finishminting is not 0:\n  - the state variable decimals2 will be updated to 1.\n  - the state variable deadline3 will be updated to current time.\n\nFor the transferAnyERC20Token function, it has one argument and its type is address.\n- For owner:\n  - it calls an external function balanceOf of the first argument with the address of this contract as the argument, and gets the returned value as v0.\n  - When the call or transfer succeeds:\n    - it calls an external function transfer of the first argument with the following argument list: owner, and v0.\n- For users, except for owner, and for ownerapi:\n  - it calls an external function balanceOf of the first argument with the address of this contract as the argument, and gets the returned value as v0.\n  - When the call or transfer succeeds:\n    - it calls an external function transfer of the first argument with the following argument list: owner, and v0.\n\nFor the payable fallback function.\n- When ispaused is 0, and finishminting is 0:\n  - After enddate:\n    - the state variable tradingdate will be updated to (current time+3600).\n    - the state variable finishminting will be updated to 1.\n    - it transfers ether valued the balance of the address of this contract to owner.\n    - it transfers the ether just received (i.e., msg.value) to caller.\n  - When (the ether just received (i.e., msg.value)+the deposits of caller) is not greater than maxamounteth, and the ether just received (i.e., msg.value) is not smaller than minamounteth, and after startdate, and before enddate, and the ether just received (i.e., msg.value) is not greater than maxamounteth, and 1 equals to the addresskycstate of caller:\n    - When the ether just received (i.e., msg.value) is 0:\n      - Before bonusend20:\n        - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*13)/10)+soldsupply) is not greater than maxsellable, and ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is not smaller than 0xc350, and ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*13)/10)+soldsupply) is not smaller than soldsupply:\n          - the state variable soldsupply will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*13)/10)+soldsupply).\n          - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*13)/10)+totalSupply3) is not smaller than totalSupply3:\n            - the state variable totalSupply3 will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*13)/10)+totalSupply3).\n            - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*13)/10)+the balance of caller) is not smaller than the balance of caller:\n              - the balance of caller will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*13)/10)+the balance of caller).\n              - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n        - When ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is smaller than 0xc350:\n          - When ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)+soldsupply) is not greater than maxsellable, and ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)+soldsupply) is not smaller than soldsupply:\n            - the state variable soldsupply will be updated to ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)+soldsupply).\n            - When ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)+totalSupply3) is not smaller than totalSupply3:\n              - the state variable totalSupply3 will be updated to ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)+totalSupply3).\n              - When ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)+the balance of caller) is not smaller than the balance of caller:\n                - the balance of caller will be updated to ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)+the balance of caller).\n                - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n          - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*12)/10)+soldsupply) is not greater than maxsellable, and ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*12)/10)+soldsupply) is not smaller than soldsupply, and ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is not smaller than 10000:\n            - the state variable soldsupply will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*12)/10)+soldsupply).\n            - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*12)/10)+totalSupply3) is not smaller than totalSupply3:\n              - the state variable totalSupply3 will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*12)/10)+totalSupply3).\n              - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*12)/10)+the balance of caller) is not smaller than the balance of caller:\n                - the balance of caller will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*12)/10)+the balance of caller).\n                - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n      - After bonusend20:\n        - Before bonusend10:\n          - When ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is not smaller than 0xc350, and ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*13)/10)+soldsupply) is not greater than maxsellable, and ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*13)/10)+soldsupply) is not smaller than soldsupply:\n            - the state variable soldsupply will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*13)/10)+soldsupply).\n            - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*13)/10)+totalSupply3) is not smaller than totalSupply3:\n              - the state variable totalSupply3 will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*13)/10)+totalSupply3).\n              - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*13)/10)+the balance of caller) is not smaller than the balance of caller:\n                - the balance of caller will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*13)/10)+the balance of caller).\n                - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n          - When ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is smaller than 0xc350:\n            - When ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)+soldsupply) is not greater than maxsellable, and ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)+soldsupply) is not smaller than soldsupply:\n              - the state variable soldsupply will be updated to ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)+soldsupply).\n              - When ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)+totalSupply3) is not smaller than totalSupply3:\n                - the state variable totalSupply3 will be updated to ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)+totalSupply3).\n                - When ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)+the balance of caller) is not smaller than the balance of caller:\n                  - the balance of caller will be updated to ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)+the balance of caller).\n                  - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                    - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                    - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n            - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*12)/10)+soldsupply) is not greater than maxsellable, and ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is not smaller than 10000, and ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*12)/10)+soldsupply) is not smaller than soldsupply:\n              - the state variable soldsupply will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*12)/10)+soldsupply).\n              - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*12)/10)+totalSupply3) is not smaller than totalSupply3:\n                - the state variable totalSupply3 will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*12)/10)+totalSupply3).\n                - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*12)/10)+the balance of caller) is not smaller than the balance of caller:\n                  - the balance of caller will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*12)/10)+the balance of caller).\n                  - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                    - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                    - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n        - After bonusend10:\n          - When ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is not smaller than 0xc350:\n            - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*13)/10)+soldsupply) is not smaller than soldsupply, and (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*13)/10)+soldsupply) is not greater than maxsellable:\n              - the state variable soldsupply will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*13)/10)+soldsupply).\n              - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*13)/10)+totalSupply3) is not smaller than totalSupply3:\n                - the state variable totalSupply3 will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*13)/10)+totalSupply3).\n                - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*13)/10)+the balance of caller) is not smaller than the balance of caller:\n                  - the balance of caller will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*13)/10)+the balance of caller).\n                  - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                    - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                    - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n            - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*13)/10)+soldsupply) is not greater than maxsellable, and before bonusend05, and (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*13)/10)+soldsupply) is not smaller than soldsupply:\n              - the state variable soldsupply will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*13)/10)+soldsupply).\n              - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*13)/10)+totalSupply3) is not smaller than totalSupply3:\n                - the state variable totalSupply3 will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*13)/10)+totalSupply3).\n                - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*13)/10)+the balance of caller) is not smaller than the balance of caller:\n                  - the balance of caller will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*13)/10)+the balance of caller).\n                  - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                    - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                    - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n          - When ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is smaller than 0xc350:\n            - When (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)+soldsupply) is not smaller than soldsupply, and (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)+soldsupply) is not greater than maxsellable:\n              - the state variable soldsupply will be updated to (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)+soldsupply).\n              - When (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)+totalSupply3) is not smaller than totalSupply3:\n                - the state variable totalSupply3 will be updated to (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)+totalSupply3).\n                - When (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)+the balance of caller) is not smaller than the balance of caller:\n                  - the balance of caller will be updated to (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)+the balance of caller).\n                  - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                    - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                    - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n            - Before bonusend05:\n              - When (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)+soldsupply) is not smaller than soldsupply, and (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)+soldsupply) is not greater than maxsellable:\n                - the state variable soldsupply will be updated to (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)+soldsupply).\n                - When (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)+totalSupply3) is not smaller than totalSupply3:\n                  - the state variable totalSupply3 will be updated to (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)+totalSupply3).\n                  - When (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)+the balance of caller) is not smaller than the balance of caller:\n                    - the balance of caller will be updated to (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)+the balance of caller).\n                    - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                      - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                      - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n              - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*12)/10)+soldsupply) is not greater than maxsellable, and (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*12)/10)+soldsupply) is not smaller than soldsupply, and ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is not smaller than 10000:\n                - the state variable soldsupply will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*12)/10)+soldsupply).\n                - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*12)/10)+totalSupply3) is not smaller than totalSupply3:\n                  - the state variable totalSupply3 will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*12)/10)+totalSupply3).\n                  - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*12)/10)+the balance of caller) is not smaller than the balance of caller:\n                    - the balance of caller will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*12)/10)+the balance of caller).\n                    - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                      - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                      - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n            - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*12)/10)+soldsupply) is not smaller than soldsupply, and ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is not smaller than 10000, and (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*12)/10)+soldsupply) is not greater than maxsellable:\n              - the state variable soldsupply will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*12)/10)+soldsupply).\n              - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*12)/10)+totalSupply3) is not smaller than totalSupply3:\n                - the state variable totalSupply3 will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*12)/10)+totalSupply3).\n                - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*12)/10)+the balance of caller) is not smaller than the balance of caller:\n                  - the balance of caller will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*12)/10)+the balance of caller).\n                  - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                    - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                    - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n    - When ((exchangerate*the ether just received (i.e., msg.value))/the ether just received (i.e., msg.value)) equals to exchangerate, and the ether just received (i.e., msg.value) is not 0:\n      - Before bonusend20:\n        - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*13)/10)+soldsupply) is not greater than maxsellable, and ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is not smaller than 0xc350, and ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*13)/10)+soldsupply) is not smaller than soldsupply:\n          - the state variable soldsupply will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*13)/10)+soldsupply).\n          - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*13)/10)+totalSupply3) is not smaller than totalSupply3:\n            - the state variable totalSupply3 will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*13)/10)+totalSupply3).\n            - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*13)/10)+the balance of caller) is not smaller than the balance of caller:\n              - the balance of caller will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*13)/10)+the balance of caller).\n              - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n        - When ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is smaller than 0xc350:\n          - When ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)+soldsupply) is not greater than maxsellable, and ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)+soldsupply) is not smaller than soldsupply:\n            - the state variable soldsupply will be updated to ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)+soldsupply).\n            - When ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)+totalSupply3) is not smaller than totalSupply3:\n              - the state variable totalSupply3 will be updated to ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)+totalSupply3).\n              - When ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)+the balance of caller) is not smaller than the balance of caller:\n                - the balance of caller will be updated to ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)+the balance of caller).\n                - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n          - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*12)/10)+soldsupply) is not greater than maxsellable, and ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*12)/10)+soldsupply) is not smaller than soldsupply, and ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is not smaller than 10000:\n            - the state variable soldsupply will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*12)/10)+soldsupply).\n            - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*12)/10)+totalSupply3) is not smaller than totalSupply3:\n              - the state variable totalSupply3 will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*12)/10)+totalSupply3).\n              - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*12)/10)+the balance of caller) is not smaller than the balance of caller:\n                - the balance of caller will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*12)*12)/10)+the balance of caller).\n                - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n      - After bonusend20:\n        - Before bonusend10:\n          - When ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is not smaller than 0xc350, and ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*13)/10)+soldsupply) is not greater than maxsellable, and ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*13)/10)+soldsupply) is not smaller than soldsupply:\n            - the state variable soldsupply will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*13)/10)+soldsupply).\n            - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*13)/10)+totalSupply3) is not smaller than totalSupply3:\n              - the state variable totalSupply3 will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*13)/10)+totalSupply3).\n              - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*13)/10)+the balance of caller) is not smaller than the balance of caller:\n                - the balance of caller will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*13)/10)+the balance of caller).\n                - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n          - When ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is smaller than 0xc350:\n            - When ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)+soldsupply) is not greater than maxsellable, and ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)+soldsupply) is not smaller than soldsupply:\n              - the state variable soldsupply will be updated to ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)+soldsupply).\n              - When ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)+totalSupply3) is not smaller than totalSupply3:\n                - the state variable totalSupply3 will be updated to ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)+totalSupply3).\n                - When ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)+the balance of caller) is not smaller than the balance of caller:\n                  - the balance of caller will be updated to ((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)+the balance of caller).\n                  - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                    - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                    - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n            - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*12)/10)+soldsupply) is not greater than maxsellable, and ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is not smaller than 10000, and ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*12)/10)+soldsupply) is not smaller than soldsupply:\n              - the state variable soldsupply will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*12)/10)+soldsupply).\n              - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*12)/10)+totalSupply3) is not smaller than totalSupply3:\n                - the state variable totalSupply3 will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*12)/10)+totalSupply3).\n                - When ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*12)/10)+the balance of caller) is not smaller than the balance of caller:\n                  - the balance of caller will be updated to ((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*11)*12)/10)+the balance of caller).\n                  - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                    - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                    - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n        - After bonusend10:\n          - When ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is not smaller than 0xc350:\n            - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*13)/10)+soldsupply) is not smaller than soldsupply, and (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*13)/10)+soldsupply) is not greater than maxsellable:\n              - the state variable soldsupply will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*13)/10)+soldsupply).\n              - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*13)/10)+totalSupply3) is not smaller than totalSupply3:\n                - the state variable totalSupply3 will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*13)/10)+totalSupply3).\n                - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*13)/10)+the balance of caller) is not smaller than the balance of caller:\n                  - the balance of caller will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*13)/10)+the balance of caller).\n                  - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                    - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                    - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n            - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*13)/10)+soldsupply) is not greater than maxsellable, and before bonusend05, and (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*13)/10)+soldsupply) is not smaller than soldsupply:\n              - the state variable soldsupply will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*13)/10)+soldsupply).\n              - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*13)/10)+totalSupply3) is not smaller than totalSupply3:\n                - the state variable totalSupply3 will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*13)/10)+totalSupply3).\n                - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*13)/10)+the balance of caller) is not smaller than the balance of caller:\n                  - the balance of caller will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*13)/10)+the balance of caller).\n                  - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                    - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                    - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n          - When ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is smaller than 0xc350:\n            - When (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)+soldsupply) is not smaller than soldsupply, and (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)+soldsupply) is not greater than maxsellable:\n              - the state variable soldsupply will be updated to (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)+soldsupply).\n              - When (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)+totalSupply3) is not smaller than totalSupply3:\n                - the state variable totalSupply3 will be updated to (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)+totalSupply3).\n                - When (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)+the balance of caller) is not smaller than the balance of caller:\n                  - the balance of caller will be updated to (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)+the balance of caller).\n                  - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                    - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                    - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n            - Before bonusend05:\n              - When (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)+soldsupply) is not smaller than soldsupply, and (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)+soldsupply) is not greater than maxsellable:\n                - the state variable soldsupply will be updated to (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)+soldsupply).\n                - When (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)+totalSupply3) is not smaller than totalSupply3:\n                  - the state variable totalSupply3 will be updated to (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)+totalSupply3).\n                  - When (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)+the balance of caller) is not smaller than the balance of caller:\n                    - the balance of caller will be updated to (((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)+the balance of caller).\n                    - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                      - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                      - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n              - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*12)/10)+soldsupply) is not greater than maxsellable, and (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*12)/10)+soldsupply) is not smaller than soldsupply, and ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is not smaller than 10000:\n                - the state variable soldsupply will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*12)/10)+soldsupply).\n                - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*12)/10)+totalSupply3) is not smaller than totalSupply3:\n                  - the state variable totalSupply3 will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*12)/10)+totalSupply3).\n                  - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*12)/10)+the balance of caller) is not smaller than the balance of caller:\n                    - the balance of caller will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)*105)/10)*12)/10)+the balance of caller).\n                    - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                      - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                      - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n            - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*12)/10)+soldsupply) is not smaller than soldsupply, and ((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000) is not smaller than 10000, and (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*12)/10)+soldsupply) is not greater than maxsellable:\n              - the state variable soldsupply will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*12)/10)+soldsupply).\n              - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*12)/10)+totalSupply3) is not smaller than totalSupply3:\n                - the state variable totalSupply3 will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*12)/10)+totalSupply3).\n                - When (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*12)/10)+the balance of caller) is not smaller than the balance of caller:\n                  - the balance of caller will be updated to (((((((exchangerate*the ether just received (i.e., msg.value))/0xde0b6b3a7640000)/10)*10 EXP decimals)*12)/10)+the balance of caller).\n                  - When (the ether just received (i.e., msg.value)+the deposits of caller) is not smaller than the deposits of caller:\n                    - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n                    - it transfers ((the ether just received (i.e., msg.value)*15)/100) to owner.\n\nFor the unpause function.\n- For owner, and ispaused is not 0:\n  - the state variable ispaused will be updated to 0.\n\nFor the transferAPIOwnership function, it has one argument and its type is address.\n- For owner:\n  - the state variable newownerapi will be updated to the first argument.\n\nFor the acceptOwnership function.\n- For newowner:\n  - the state variable owner will be updated to newowner. Afterthat, \n    - the state variable newowner will be updated to 0.\n\nFor the transferFrom function, it has 3 arguments and the type of each argument is as follows: address, address, uint256.\n- When ispaused is 0:\n  - When the third argument is not greater than the allowance from the first argument to caller:\n    - After tradingdate:\n      - the allowance from the first argument to caller will be updated to (the allowance from the first argument to caller-the third argument).\n      - When the third argument is not greater than the balance of the first argument:\n        - the balance of the first argument will be updated to (the balance of the first argument-the third argument).\n        - When (the third argument+the balance of the second argument) is not smaller than the balance of the second argument:\n          - the balance of the second argument will be updated to (the third argument+the balance of the second argument).\n    - When 1 equals to the addresskycstate of the second argument:\n      - Before tradingdate:\n        - the allowance from the first argument to caller will be updated to (the allowance from the first argument to caller-the third argument).\n        - When the third argument is not greater than the balance of the first argument:\n          - the balance of the first argument will be updated to (the balance of the first argument-the third argument).\n          - When (the third argument+the balance of the second argument) is not smaller than the balance of the second argument:\n            - the balance of the second argument will be updated to (the third argument+the balance of the second argument).\n      - Before tradingdate:\n        - the allowance from the first argument to caller will be updated to (the allowance from the first argument to caller-the third argument).\n        - When the third argument is not greater than the balance of the first argument:\n          - the balance of the first argument will be updated to (the balance of the first argument-the third argument).\n          - When (the third argument+the balance of the second argument) is not smaller than the balance of the second argument:\n            - the balance of the second argument will be updated to (the third argument+the balance of the second argument).\n    - After tradingdate:\n      - the allowance from the first argument to caller will be updated to (the allowance from the first argument to caller-the third argument).\n      - When the third argument is not greater than the balance of the first argument:\n        - the balance of the first argument will be updated to (the balance of the first argument-the third argument).\n        - When (the third argument+the balance of the second argument) is not smaller than the balance of the second argument:\n          - the balance of the second argument will be updated to (the third argument+the balance of the second argument).\n  - When finishminting is 0, and after enddate:\n    - the state variable tradingdate will be updated to (current time+3600).\n    - the state variable finishminting will be updated to 1.\n    - it transfers ether valued the balance of the address of this contract to owner.\n\nFor the pause function.\n- For owner, and ispaused is 0:\n  - the state variable ispaused will be updated to 1.\n\nFor the BurnMyTokensAndSetAmountForNewBlockchain function.\n- When decimals2 is not 0, and (the balance of caller+the burnedbalance of caller) is not smaller than the burnedbalance of caller:\n  - the burnedbalance of caller will be updated to (the balance of caller+the burnedbalance of caller). Afterthat, \n    - the balance of caller will be updated to 0.\n\nFor the finishMinting function.\n- After enddate:\n  - When finishminting is 0:\n    - the state variable tradingdate will be updated to (current time+3600).\n    - the state variable finishminting will be updated to 1.\n    - it transfers ether valued the balance of the address of this contract to owner.\n  - When finishminting is not 0:\n    - When totalSupply3 is not smaller than maxsupply:\n      - the state variable tradingdate will be updated to (current time+3600).\n      - the state variable finishminting will be updated to 1.\n      - it transfers ether valued the balance of the address of this contract to owner.\n    - When totalSupply3 is smaller than maxsupply, and the balance of the address of this contract is greater than 0:\n      - it transfers ether valued the balance of the address of this contract to owner.\n- Before enddate, and totalsupply3 is not smaller than maxsupply:\n  - the state variable tradingdate will be updated to (current time+3600).\n  - the state variable finishminting will be updated to 1.\n  - it transfers ether valued the balance of the address of this contract to owner.\n\nFor the updateExchangeRate function, it has one argument and its type is uint256.\n- For owner:\n  - the state variable exchangerate will be updated to the first argument.\n- For users, except for owner, and for ownerapi:\n  - the state variable exchangerate will be updated to the first argument.\n\nFor the transferVestingMonthlyAmount function, it has one argument and its type is address.\n- For owner, and ispaused is 0, and the first argument is not 0, and (((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract)) is greater than 0:\n  - When (((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract)) is not greater than the allowance from the address of this contract to caller:\n    - After tradingdate:\n      - the allowance from the address of this contract to caller will be updated to (the allowance from the address of this contract to caller-(((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n      - When (((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract)) is not greater than the balance of the address of this contract:\n        - the balance of the address of this contract will be updated to (the balance of the address of this contract-(((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n        - When ((((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))+the balance of the first argument) is not smaller than the balance of the first argument:\n          - the balance of the first argument will be updated to ((((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))+the balance of the first argument).\n    - When 1 equals to the addresskycstate of the first argument:\n      - Before tradingdate:\n        - the allowance from the address of this contract to caller will be updated to (the allowance from the address of this contract to caller-(((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n        - When (((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract)) is not greater than the balance of the address of this contract:\n          - the balance of the address of this contract will be updated to (the balance of the address of this contract-(((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n          - When ((((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))+the balance of the first argument) is not smaller than the balance of the first argument:\n            - the balance of the first argument will be updated to ((((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))+the balance of the first argument).\n      - Before tradingdate:\n        - the allowance from the address of this contract to caller will be updated to (the allowance from the address of this contract to caller-(((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n        - When (((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract)) is not greater than the balance of the address of this contract:\n          - the balance of the address of this contract will be updated to (the balance of the address of this contract-(((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n          - When ((((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))+the balance of the first argument) is not smaller than the balance of the first argument:\n            - the balance of the first argument will be updated to ((((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))+the balance of the first argument).\n    - After tradingdate:\n      - the allowance from the address of this contract to caller will be updated to (the allowance from the address of this contract to caller-(((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n      - When (((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract)) is not greater than the balance of the address of this contract:\n        - the balance of the address of this contract will be updated to (the balance of the address of this contract-(((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n        - When ((((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))+the balance of the first argument) is not smaller than the balance of the first argument:\n          - the balance of the first argument will be updated to ((((((((15*maxsupply)/100)*(100-decimals3))/100)*(((((current time-tradingdate)/3600)/24)/30)+1))/24)-(((((15*maxsupply)/100)*(100-decimals3))/100)-the balance of the address of this contract))+the balance of the first argument).\n  - When finishminting is 0, and after enddate:\n    - the state variable tradingdate will be updated to (current time+3600).\n    - the state variable finishminting will be updated to 1.\n    - it transfers ether valued the balance of the address of this contract to owner.\n\nFor the transfer function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- When ispaused is 0:\n  - When the second argument is not greater than the balance of caller:\n    - After tradingdate:\n      - the balance of caller will be updated to (the balance of caller-the second argument).\n      - When (the second argument+the balance of the first argument) is not smaller than the balance of the first argument:\n        - the balance of the first argument will be updated to (the second argument+the balance of the first argument).\n    - When 1 equals to the addresskycstate of the first argument:\n      - Before tradingdate:\n        - the balance of caller will be updated to (the balance of caller-the second argument).\n        - When (the second argument+the balance of the first argument) is not smaller than the balance of the first argument:\n          - the balance of the first argument will be updated to (the second argument+the balance of the first argument).\n      - Before tradingdate:\n        - the balance of caller will be updated to (the balance of caller-the second argument).\n        - When (the second argument+the balance of the first argument) is not smaller than the balance of the first argument:\n          - the balance of the first argument will be updated to (the second argument+the balance of the first argument).\n    - After tradingdate:\n      - the balance of caller will be updated to (the balance of caller-the second argument).\n      - When (the second argument+the balance of the first argument) is not smaller than the balance of the first argument:\n        - the balance of the first argument will be updated to (the second argument+the balance of the first argument).\n  - When finishminting is 0, and after enddate:\n    - the state variable tradingdate will be updated to (current time+3600).\n    - the state variable finishminting will be updated to 1.\n    - it transfers ether valued the balance of the address of this contract to owner.\n\nFor the approveAndCall function, it has 3 arguments and the type of each argument is as follows: address, uint256, bytes.\n- When ispaused is 0:\n  - the allowance from caller to the first argument will be updated to the second argument.\n  - When 0 is not smaller than the third argument:\n    - it calls an external function receiveApproval of the first argument.\n  - When 0 is smaller than the third argument:\n    - When 32 is not smaller than the third argument:\n      - it calls an external function receiveApproval of the first argument.\n    - When 32 is smaller than the third argument:\n      - When 64 is not smaller than the third argument:\n        - it calls an external function receiveApproval of the first argument.\n      - When 64 is smaller than the third argument:\n        - When 96 is not smaller than the third argument:\n          - it calls an external function receiveApproval of the first argument.\n        - When 96 is smaller than the third argument:\n          - When 128 is not smaller than the third argument:\n            - it calls an external function receiveApproval of the first argument.\n          - When 160 is not smaller than the third argument, and 128 is smaller than the third argument:\n            - it calls an external function receiveApproval of the first argument.\n\nFor the transferAllERC20Token function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- For owner:\n  - it calls an external function transfer of the first argument with the following argument list: owner, and the second argument.\n- For users, except for owner, and for ownerapi:\n  - it calls an external function transfer of the first argument with the following argument list: owner, and the second argument.\n\nFor the transferOwnership function, it has one argument and its type is address.\n- For owner:\n  - the state variable newowner will be updated to the first argument.\n\nFor the BurnTokensAndSetAmountForNewBlockchain function, it has one argument and its type is address.\n- When (the balance of the first argument+the burnedbalance of the first argument) is not smaller than the burnedbalance of the first argument, and decimals2 is not 0:\n  - For owner:\n    - the burnedbalance of the first argument will be updated to (the balance of the first argument+the burnedbalance of the first argument). Afterthat, \n      - the balance of the first argument will be updated to 0.\n  - For users, except for owner, and for ownerapi:\n    - the burnedbalance of the first argument will be updated to (the balance of the first argument+the burnedbalance of the first argument). Afterthat, \n      - the balance of the first argument will be updated to 0.\n\nFor the setAddressKYC function, it has 2 arguments and the type of each argument is as follows: address, bool.\n- For owner:\n  - the addresskycstate of the first argument will be updated to the second argument.\n- For users, except for owner, and for ownerapi:\n  - the addresskycstate of the first argument will be updated to the second argument.\n\nFor the updateEndDate function, it has one argument and its type is uint256.\n- When decimals2 is 0, and finishminting is 0:\n  - For owner:\n    - the state variable enddate will be updated to the first argument.\n  - For users, except for owner, and for ownerapi:\n    - the state variable enddate will be updated to the first argument.\n\nFor the updateTokenNameSymbolAddress function, it has 3 arguments and the type of each argument is as follows: string, string, address.\n- When ispaused is not 0:\n  - For owner:\n    - the state variable name will be updated to the first argument.\n    - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than SHA3(5):\n      - the state variable symbol will be updated to the second argument.\n      - When 31 is smaller than the second argument:\n        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n          - the state variable currentrunningaddress will be updated to the third argument.\n          - When 31 is smaller than the first argument:\n            - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n            - the state variable currentrunningaddress will be updated to the third argument.\n            - When 31 is smaller than the first argument:\n              - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n              - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n      - When 31 is smaller than the first argument:\n        - the state variable symbol will be updated to the second argument.\n    - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than SHA3(5):\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+SHA3(5)):\n        - the state variable symbol will be updated to the second argument.\n        - When 31 is smaller than the second argument:\n          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n            - the state variable currentrunningaddress will be updated to the third argument.\n            - When 31 is smaller than the first argument:\n              - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n              - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n        - When 31 is smaller than the first argument:\n          - the state variable symbol will be updated to the second argument.\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+SHA3(5)):\n        - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+SHA3(5))):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n          - When 31 is smaller than the first argument:\n            - the state variable symbol will be updated to the second argument.\n        - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))):\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+SHA3(5)))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n            - When 31 is smaller than the first argument:\n              - the state variable symbol will be updated to the second argument.\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(5))))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable symbol will be updated to the second argument.\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(5)))))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument, and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable symbol will be updated to the second argument.\n    - When 31 is smaller than the first argument, and the first argument is not 0, and (160+the first argument) is greater than 160:\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+SHA3(5)):\n        - the state variable symbol will be updated to the second argument.\n        - When 31 is smaller than the second argument:\n          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n            - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+SHA3(5))):\n        - When (160+the first argument) is greater than 192:\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+SHA3(5)))):\n        - When (160+the first argument) is greater than 192:\n          - When (160+the first argument) is greater than 224:\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(5))))):\n        - When (160+the first argument) is greater than 192:\n          - When (160+the first argument) is greater than 224:\n            - When (160+the first argument) is greater than 256:\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(5)))))):\n        - When (160+the first argument) is greater than 192:\n          - When (160+the first argument) is greater than 224:\n            - When (160+the first argument) is greater than 256:\n              - When (160+the first argument) is greater than 288:\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n                          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n              - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+(1+SHA3(5)))))):\n        - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+SHA3(5))))))):\n          - When (160+the first argument) is greater than 192:\n            - When (160+the first argument) is greater than 224:\n              - When (160+the first argument) is greater than 256:\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n                          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+SHA3(5)):\n            - the state variable symbol will be updated to the second argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n              - the state variable currentrunningaddress will be updated to the third argument.\n        - When (160+the first argument) is greater than 192, and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+SHA3(5))))))):\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))):\n            - When (160+the first argument) is greater than 224:\n              - When (160+the first argument) is greater than 256:\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n              - the state variable symbol will be updated to the second argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))), and (160+the first argument) is greater than 224:\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+(1+SHA3(5))))))))):\n              - When (160+the first argument) is greater than 256:\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                - the state variable symbol will be updated to the second argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+(1+(1+SHA3(5))))))))), and (160+the first argument) is greater than 256:\n              - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))))):\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))))), and (160+the first argument) is greater than 288, and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+(1+(1+(1+SHA3(5))))))))))):\n                - the state variable symbol will be updated to the second argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n  - For users, except for owner, and for ownerapi:\n    - the state variable name will be updated to the first argument.\n    - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than SHA3(5):\n      - the state variable symbol will be updated to the second argument.\n      - When 31 is smaller than the second argument:\n        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n          - the state variable currentrunningaddress will be updated to the third argument.\n          - When 31 is smaller than the first argument:\n            - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n            - the state variable currentrunningaddress will be updated to the third argument.\n            - When 31 is smaller than the first argument:\n              - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n              - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n      - When 31 is smaller than the first argument:\n        - the state variable symbol will be updated to the second argument.\n    - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than SHA3(5):\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+SHA3(5)):\n        - the state variable symbol will be updated to the second argument.\n        - When 31 is smaller than the second argument:\n          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n            - the state variable currentrunningaddress will be updated to the third argument.\n            - When 31 is smaller than the first argument:\n              - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n              - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n        - When 31 is smaller than the first argument:\n          - the state variable symbol will be updated to the second argument.\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+SHA3(5)):\n        - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+SHA3(5))):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n          - When 31 is smaller than the first argument:\n            - the state variable symbol will be updated to the second argument.\n        - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))):\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+SHA3(5)))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n            - When 31 is smaller than the first argument:\n              - the state variable symbol will be updated to the second argument.\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(5))))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable symbol will be updated to the second argument.\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(5)))))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument, and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable symbol will be updated to the second argument.\n    - When 31 is smaller than the first argument, and the first argument is not 0, and (160+the first argument) is greater than 160:\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+SHA3(5)):\n        - the state variable symbol will be updated to the second argument.\n        - When 31 is smaller than the second argument:\n          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n            - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+SHA3(5))):\n        - When (160+the first argument) is greater than 192:\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+SHA3(5)))):\n        - When (160+the first argument) is greater than 192:\n          - When (160+the first argument) is greater than 224:\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(5))))):\n        - When (160+the first argument) is greater than 192:\n          - When (160+the first argument) is greater than 224:\n            - When (160+the first argument) is greater than 256:\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(5)))))):\n        - When (160+the first argument) is greater than 192:\n          - When (160+the first argument) is greater than 224:\n            - When (160+the first argument) is greater than 256:\n              - When (160+the first argument) is greater than 288:\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n                          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n              - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+(1+SHA3(5)))))):\n        - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+SHA3(5))))))):\n          - When (160+the first argument) is greater than 192:\n            - When (160+the first argument) is greater than 224:\n              - When (160+the first argument) is greater than 256:\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n                          - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+SHA3(5)):\n            - the state variable symbol will be updated to the second argument.\n            - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n              - the state variable currentrunningaddress will be updated to the third argument.\n        - When (160+the first argument) is greater than 192, and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+SHA3(5))))))):\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))):\n            - When (160+the first argument) is greater than 224:\n              - When (160+the first argument) is greater than 256:\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n              - the state variable symbol will be updated to the second argument.\n              - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))), and (160+the first argument) is greater than 224:\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+(1+SHA3(5))))))))):\n              - When (160+the first argument) is greater than 256:\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(4)), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                - the state variable symbol will be updated to the second argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+(1+(1+SHA3(5))))))))), and (160+the first argument) is greater than 256:\n              - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))))):\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))))), and (160+the first argument) is greater than 288, and (SHA3(5)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+(1+(1+(1+SHA3(5))))))))))):\n                - the state variable symbol will be updated to the second argument.\n                - When (SHA3(4)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n\n",
	"language": "Solidity",
	"status": "This model's maximum context length is 32768 tokens. However, your messages resulted in 50900 tokens. Please reduce the length of the messages."
}