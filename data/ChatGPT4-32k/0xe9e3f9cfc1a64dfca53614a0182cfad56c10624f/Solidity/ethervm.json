{
	"address": "0xe9e3f9cfc1a64dfca53614a0182cfad56c10624f",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is a Solidity version of the contract code based on the decompiled code:\n\n```solidity\npragma solidity ^0.5.0;\n\ncontract Contract {\n    mapping(address => uint) public balance;\n    mapping(address => bool) public isExecutiveOfficer;\n    mapping(bytes4 => bool) public supportedInterfaces;\n    mapping(uint => address) public tokenOwners;\n    mapping(address => mapping(address => bool)) public operatorApprovals;\n    mapping(uint => address) public tokenApprovals;\n    uint256 public totalSupply;\n    uint256 public promoCreatedCount;\n    address public executiveOfficerAddress;\n    address public financialOfficerAddress;\n    address public operatingOfficerAddress;\n\n    function setExecutiveOfficer(address _newExecutiveOfficer) public {\n        require(msg.sender == executiveOfficerAddress);\n        executiveOfficerAddress = _newExecutiveOfficer;\n    }\n\n    function setFinancialOfficer(address _newFinancialOfficer) public {\n        require(msg.sender == executiveOfficerAddress);\n        financialOfficerAddress = _newFinancialOfficer;\n    }\n\n    function setOperatingOfficer(address _newOperatingOfficer) public {\n        require(msg.sender == executiveOfficerAddress);\n        operatingOfficerAddress = _newOperatingOfficer;\n    }\n\n    function supportsInterface(bytes4 interfaceID) public view returns (bool) {\n        return supportedInterfaces[interfaceID];\n    }\n\n    function balanceOf(address _owner) public view returns (uint256) {\n        return balance[_owner];\n    }\n\n    function ownerOf(uint256 _tokenId) public view returns (address) {\n        return tokenOwners[_tokenId];\n    }\n\n    function approve(address _approved, uint256 _tokenId) public {\n        require(tokenOwners[_tokenId] == msg.sender);\n        tokenApprovals[_tokenId] = _approved;\n    }\n\n    function getApproved(uint256 _tokenId) public view returns (address) {\n        return tokenApprovals[_tokenId];\n    }\n\n    function setApprovalForAll(address _operator, bool _approved) public {\n        operatorApprovals[msg.sender][_operator] = _approved;\n    }\n\n    function isApprovedForAll(address _owner, address _operator) public view returns (bool) {\n        return operatorApprovals[_owner][_operator];\n    }\n\n    function transferFrom(address _from, address _to, uint256 _tokenId) public {\n        require(tokenOwners[_tokenId] == _from);\n        require(tokenApprovals[_tokenId] == msg.sender || operatorApprovals[_from][msg.sender]);\n        tokenOwners[_tokenId] = _to;\n        balance[_from] -= 1;\n        balance[_to] += 1;\n    }\n\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes memory _data) public {\n        transferFrom(_from, _to, _tokenId);\n        require(checkOnERC721Received(_from, _to, _tokenId, _data));\n    }\n\n    function checkOnERC721Received(address _from, address _to, uint256 _tokenId, bytes memory _data) internal returns(bool) {\n        if (isContract(_to)) {\n            bytes4 result = IERC721Receiver(_to).onERC721Received(msg.sender, _from, _tokenId, _data);\n            return (result == bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\")));\n        }\n        return true;\n    }\n\n    function isContract(address _addr) internal view returns(bool) {\n        uint32 size;\n        assembly {\n            size := extcodesize(_addr)\n        }\n        return (size > 0);\n    }\n}\n\ninterface IERC721Receiver {\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns(bytes4);\n}\n```\n\nPlease note that this is a rough conversion and some functions might not be accurate due to the complex nature of EVM decompilation. I would recommend reviewing the full EVM bytecode to ensure the complete and correct conversion of the contract.",
				"role": "assistant"
			}
		}
	],
	"created": 1700473394,
	"id": "chatcmpl-8Mv6AGUNhOdhkkclhBw0teHAtFzyj",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x80;\n    \n        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }\n    \n        var var0 = msg.data[0x00:0x20] / 0x0100000000000000000000000000000000000000000000000000000000 & 0xffffffff;\n    \n        if (var0 == 0x15be71) {\n            // Dispatch table entry for executiveOfficerAddress()\n            var var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0182;\n            var var2 = executiveOfficerAddress();\n        \n        label_0182:\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n            var temp1 = memory[0x40:0x60];\n            return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n        } else if (var0 == 0x01ffc9a7) {\n            // Dispatch table entry for supportsInterface(bytes4)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01c0;\n            var2 = msg.data[0x04:0x24] & ~(0x02 ** 0xe0 - 0x01);\n            var1 = supportsInterface(var2);\n        \n        label_01C0:\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = !!var1;\n            var temp3 = memory[0x40:0x60];\n            return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n        } else if (var0 == 0x05e45546) {\n            // Dispatch table entry for promoCreatedCount()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01e9;\n            var2 = promoCreatedCount();\n        \n        label_01E9:\n            var temp4 = memory[0x40:0x60];\n            memory[temp4:temp4 + 0x20] = var2;\n            var temp5 = memory[0x40:0x60];\n            return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n        } else if (var0 == 0x06fdde03) {\n            // Dispatch table entry for name()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0210;\n            var1 = name();\n        \n        label_0210:\n            var temp6 = memory[0x40:0x60];\n            memory[temp6:temp6 + 0x20] = 0x20;\n            var temp7 = var1;\n            memory[temp6 + 0x20:temp6 + 0x20 + 0x20] = memory[temp7:temp7 + 0x20];\n            var2 = temp6;\n            var var3 = var2;\n            var var4 = var3 + 0x40;\n            var var6 = memory[temp7:temp7 + 0x20];\n            var var5 = temp7 + 0x20;\n            var var7 = var6;\n            var var8 = var4;\n            var var9 = var5;\n            var var10 = 0x00;\n        \n            if (var10 >= var7) {\n            label_024A:\n                var temp8 = var6;\n                var4 = temp8 + var4;\n                var5 = temp8 & 0x1f;\n            \n                if (!var5) {\n                    var temp9 = memory[0x40:0x60];\n                    return memory[temp9:temp9 + var4 - temp9];\n                } else {\n                    var temp10 = var5;\n                    var temp11 = var4 - temp10;\n                    memory[temp11:temp11 + 0x20] = ~(0x0100 ** (0x20 - temp10) - 0x01) & memory[temp11:temp11 + 0x20];\n                    var temp12 = memory[0x40:0x60];\n                    return memory[temp12:temp12 + (temp11 + 0x20) - temp12];\n                }\n            } else {\n            label_023B:\n                var temp13 = var10;\n                memory[temp13 + var8:temp13 + var8 + 0x20] = memory[temp13 + var9:temp13 + var9 + 0x20];\n                var10 = temp13 + 0x20;\n            \n                if (var10 >= var7) { goto label_024A; }\n                else { goto label_023B; }\n            }\n        } else if (var0 == 0x081812fc) {\n            // Dispatch table entry for getApproved(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0182;\n            var2 = msg.data[0x04:0x24];\n            var1 = getApproved(var2);\n            goto label_0182;\n        } else if (var0 == 0x095ea7b3) {\n            // Dispatch table entry for approve(address,uint256)\n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            var3 = msg.data[0x24:0x44];\n            approve(var2, var3);\n            stop();\n        } else if (var0 == 0x133252a6) {\n            // Dispatch table entry for grantToken(uint256,address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44] & 0x02 ** 0xa0 - 0x01;\n            grantToken(var2, var3);\n            stop();\n        } else if (var0 == 0x18160ddd) {\n            // Dispatch table entry for totalSupply()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01e9;\n            var1 = totalSupply();\n            goto label_01E9;\n        } else if (var0 == 0x23b872dd) {\n            // Dispatch table entry for transferFrom(address,address,uint256)\n            var1 = 0x02b4;\n            var temp14 = 0x02 ** 0xa0 - 0x01;\n            var2 = temp14 & msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44] & temp14;\n            var4 = msg.data[0x44:0x64];\n            transferFrom(var2, var3, var4);\n            stop();\n        } else if (var0 == 0x2aad292e) {\n            // Dispatch table entry for setOperatingOfficer(address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            setOperatingOfficer(var2);\n            stop();\n        } else if (var0 == 0x2f745c59) {\n            // Dispatch table entry for tokenOfOwnerByIndex(address,uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01e9;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            var3 = msg.data[0x24:0x44];\n            var1 = tokenOfOwnerByIndex(var2, var3);\n            goto label_01E9;\n        } else if (var0 == 0x42842e0e) {\n            // Dispatch table entry for safeTransferFrom(address,address,uint256)\n            var1 = 0x02b4;\n            var temp15 = 0x02 ** 0xa0 - 0x01;\n            var2 = temp15 & msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44] & temp15;\n            var4 = msg.data[0x44:0x64];\n            var5 = 0x0afe;\n            var6 = var2;\n            var7 = var3;\n            var8 = var4;\n            var temp16 = memory[0x40:0x60];\n            var9 = temp16;\n            memory[0x40:0x60] = var9 + 0x20;\n            memory[var9:var9 + 0x20] = 0x00;\n            safeTransferFrom(var6, var7, var8, var9);\n            // Error: Could not resolve jump destination!\n        } else if (var0 == 0x4f6ccce7) {\n            // Dispatch table entry for tokenByIndex(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01e9;\n            var2 = msg.data[0x04:0x24];\n            var1 = tokenByIndex(var2);\n            goto label_01E9;\n        } else if (var0 == 0x5fd8c710) {\n            // Dispatch table entry for withdrawBalance()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            withdrawBalance();\n            stop();\n        } else if (var0 == 0x6352211e) {\n            // Dispatch table entry for ownerOf(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0182;\n            var2 = msg.data[0x04:0x24];\n            var1 = ownerOf(var2);\n            goto label_0182;\n        } else if (var0 == 0x6bfa5edc) {\n            // Dispatch table entry for operatingOfficerAddress()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0182;\n            var2 = operatingOfficerAddress();\n            goto label_0182;\n        } else if (var0 == 0x70a08231) {\n            // Dispatch table entry for balanceOf(address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01e9;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            var1 = balanceOf(var2);\n            goto label_01E9;\n        } else if (var0 == 0x76f14c98) {\n            // Dispatch table entry for personalizeSquare(uint256,bytes,string,string)\n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24];\n            var temp17 = msg.data[0x24:0x44];\n            var3 = temp17 + 0x24;\n            var4 = msg.data[temp17 + 0x04:temp17 + 0x04 + 0x20];\n            var temp18 = msg.data[0x44:0x64];\n            var5 = temp18 + 0x24;\n            var6 = msg.data[temp18 + 0x04:temp18 + 0x04 + 0x20];\n            var temp19 = msg.data[0x64:0x84];\n            var7 = temp19 + 0x24;\n            var8 = msg.data[temp19 + 0x04:temp19 + 0x04 + 0x20];\n            memory[0x00:0x20] = var2;\n            memory[0x20:0x40] = 0x06;\n            var9 = var2;\n            var10 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n        \n            if (var10 != msg.sender) { revert(memory[0x00:0x00]); }\n        \n            if (var6 > 0x40) { revert(memory[0x00:0x00]); }\n        \n            if (var8 > 0x60) { revert(memory[0x00:0x00]); }\n        \n            if (var4 != 0x012c) { revert(memory[0x00:0x00]); }\n        \n            var var11 = 0x09;\n            var var12 = var2;\n        \n            if (var12 >= 0x2711) { assert(); }\n        \n            var temp20 = var12 * 0x04 + var11;\n            storage[temp20] = storage[temp20] + 0x01;\n            var11 = var3;\n            var12 = var4;\n            var var13 = 0x09;\n            var var14 = var2;\n        \n            if (var14 >= 0x2711) { assert(); }\n        \n            var temp21 = var11;\n            var temp22 = var12;\n            var11 = 0x0c87;\n            var12 = var14 * 0x04 + var13 + 0x01;\n            var14 = temp22;\n            var13 = temp21;\n            var temp23 = var12;\n            var temp24 = storage[temp23];\n            memory[0x00:0x20] = temp23;\n            var var15 = keccak256(memory[0x00:0x20]);\n            var temp25 = var13;\n            var13 = var15 + ((!(temp24 & 0x01) * 0x0100 - 0x01 & temp24) / 0x02 + 0x1f) / 0x20;\n            var var16 = temp25;\n        \n            if (0x1f < var14) {\n                var temp26 = var14;\n                storage[var12] = temp26 + temp26 + 0x01;\n            \n                if (!temp26) {\n                label_1837:\n                    var temp27 = var13;\n                    var13 = 0x1843;\n                    var14 = temp27;\n                    var13 = func_1867(var14, var15);\n                    var11 = func_1843(var12, var13);\n                    // Error: Could not resolve method call return address!\n                } else {\n                    var temp28 = var14;\n                    var temp29 = var16;\n                    var14 = temp29;\n                    var16 = var14 + temp28;\n                \n                    if (var16 <= var14) { goto label_1837; }\n                \n                label_1825:\n                    var temp30 = var14;\n                    var temp31 = var15;\n                    storage[temp31] = msg.data[temp30:temp30 + 0x20];\n                    var14 = temp30 + 0x20;\n                    var16 = var16;\n                    var15 = temp31 + 0x01;\n                \n                    if (var16 <= var14) { goto label_1837; }\n                    else { goto label_1825; }\n                }\n            } else {\n                var temp32 = var14;\n                storage[var12] = (msg.data[var16:var16 + 0x20] & ~0xff) | temp32 + temp32;\n                goto label_1837;\n            }\n        } else if (var0 == 0x95d89b41) {\n            // Dispatch table entry for symbol()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0210;\n            var1 = symbol();\n            goto label_0210;\n        } else if (var0 == 0xa22cb465) {\n            // Dispatch table entry for setApprovalForAll(address,bool)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            var3 = !!msg.data[0x24:0x44];\n            setApprovalForAll(var2, var3);\n            stop();\n        } else if (var0 == 0xabe088a7) {\n            // Dispatch table entry for financialOfficerAddress()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0182;\n            var2 = financialOfficerAddress();\n            goto label_0182;\n        } else if (var0 == 0xb88d4fde) {\n            // Dispatch table entry for safeTransferFrom(address,address,uint256,bytes)\n            var1 = 0x02b4;\n            var temp33 = 0x02 ** 0xa0 - 0x01;\n            var2 = temp33 & msg.data[0x04:0x24];\n            var3 = temp33 & msg.data[0x24:0x44];\n            var4 = msg.data[0x44:0x64];\n            var temp34 = msg.data[0x64:0x84];\n            var5 = temp34 + 0x24;\n            var6 = msg.data[temp34 + 0x04:temp34 + 0x04 + 0x20];\n            var7 = 0x08e7;\n            var8 = var2;\n            var9 = var3;\n            var10 = var4;\n            var temp35 = var6;\n            var temp36 = memory[0x40:0x60];\n            memory[0x40:0x60] = temp36 + (temp35 + 0x1f) / 0x20 * 0x20 + 0x20;\n            var11 = temp36;\n            memory[var11:var11 + 0x20] = temp35;\n            memory[var11 + 0x20:var11 + 0x20 + temp35] = msg.data[var5:var5 + temp35];\n            safeTransferFrom(var8, var9, var10, var11);\n            // Error: Could not resolve jump destination!\n        } else if (var0 == 0xc87b56dd) {\n            // Dispatch table entry for tokenURI(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0210;\n            var2 = msg.data[0x04:0x24];\n            var1 = tokenURI(var2);\n            goto label_0210;\n        } else if (var0 == 0xd978a0d3) {\n            // Dispatch table entry for setFinancialOfficer(address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            setFinancialOfficer(var2);\n            stop();\n        } else if (var0 == 0xe985e9c5) {\n            // Dispatch table entry for isApprovedForAll(address,address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01c0;\n            var temp37 = 0x02 ** 0xa0 - 0x01;\n            var2 = temp37 & msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44] & temp37;\n            var1 = isApprovedForAll(var2, var3);\n            goto label_01C0;\n        } else if (var0 == 0xec13df6b) {\n            // Dispatch table entry for setExecutiveOfficer(address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            setExecutiveOfficer(var2);\n            stop();\n        } else if (var0 == 0xefef39a1) {\n            // Dispatch table entry for purchase(uint256)\n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24];\n            purchase(var2);\n            stop();\n        } else if (var0 == 0xffa6ab44) {\n            // Dispatch table entry for suSquares(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0538;\n            var2 = msg.data[0x04:0x24];\n            var2, var3, var4, var5 = suSquares(var2);\n            var temp38 = memory[0x40:0x60];\n            var6 = temp38;\n            memory[var6:var6 + 0x20] = var2;\n            var temp39 = var6 + 0x20;\n            var7 = temp39;\n            var8 = var7 + 0x20;\n            var9 = var8 + 0x20;\n            var temp40 = var9 + 0x20;\n            memory[var7:var7 + 0x20] = temp40 - var6;\n            var temp41 = var3;\n            memory[temp40:temp40 + 0x20] = memory[temp41:temp41 + 0x20];\n            var10 = temp40 + 0x20;\n            var12 = memory[temp41:temp41 + 0x20];\n            var11 = temp41 + 0x20;\n            var13 = var12;\n            var14 = var10;\n            var15 = var11;\n            var16 = 0x00;\n        \n            if (var16 >= var13) {\n            label_0583:\n                var temp42 = var12;\n                var10 = temp42 + var10;\n                var11 = temp42 & 0x1f;\n            \n                if (!var11) {\n                    var temp43 = var10;\n                    memory[var8:var8 + 0x20] = temp43 - var6;\n                    var temp44 = var4;\n                    memory[temp43:temp43 + 0x20] = memory[temp44:temp44 + 0x20];\n                    var10 = temp43 + 0x20;\n                    var11 = temp44 + 0x20;\n                    var12 = memory[temp44:temp44 + 0x20];\n                    var13 = var12;\n                    var14 = var10;\n                    var15 = var11;\n                    var16 = 0x00;\n                \n                    if (var16 >= var13) {\n                    label_05E3:\n                        var temp45 = var12;\n                        var10 = temp45 + var10;\n                        var11 = temp45 & 0x1f;\n                    \n                        if (!var11) {\n                            var temp46 = var10;\n                            memory[var9:var9 + 0x20] = temp46 - var6;\n                            var temp47 = var5;\n                            memory[temp46:temp46 + 0x20] = memory[temp47:temp47 + 0x20];\n                            var10 = temp46 + 0x20;\n                            var11 = temp47 + 0x20;\n                            var12 = memory[temp47:temp47 + 0x20];\n                            var13 = var12;\n                            var14 = var10;\n                            var15 = var11;\n                            var16 = 0x00;\n                        \n                            if (var16 >= var13) {\n                            label_0643:\n                                var temp48 = var12;\n                                var10 = temp48 + var10;\n                                var11 = temp48 & 0x1f;\n                            \n                                if (!var11) {\n                                    var temp49 = memory[0x40:0x60];\n                                    return memory[temp49:temp49 + var10 - temp49];\n                                } else {\n                                    var temp50 = var11;\n                                    var temp51 = var10 - temp50;\n                                    memory[temp51:temp51 + 0x20] = ~(0x0100 ** (0x20 - temp50) - 0x01) & memory[temp51:temp51 + 0x20];\n                                    var temp52 = memory[0x40:0x60];\n                                    return memory[temp52:temp52 + (temp51 + 0x20) - temp52];\n                                }\n                            } else {\n                            label_0634:\n                                var temp53 = var16;\n                                memory[temp53 + var14:temp53 + var14 + 0x20] = memory[temp53 + var15:temp53 + var15 + 0x20];\n                                var16 = temp53 + 0x20;\n                            \n                                if (var16 >= var13) { goto label_0643; }\n                                else { goto label_0634; }\n                            }\n                        } else {\n                            var temp54 = var11;\n                            var temp55 = var10 - temp54;\n                            memory[temp55:temp55 + 0x20] = ~(0x0100 ** (0x20 - temp54) - 0x01) & memory[temp55:temp55 + 0x20];\n                            var temp56 = temp55 + 0x20;\n                            memory[var9:var9 + 0x20] = temp56 - var6;\n                            var temp57 = var5;\n                            memory[temp56:temp56 + 0x20] = memory[temp57:temp57 + 0x20];\n                            var10 = temp56 + 0x20;\n                            var12 = memory[temp57:temp57 + 0x20];\n                            var11 = temp57 + 0x20;\n                            var13 = var12;\n                            var14 = var10;\n                            var15 = var11;\n                            var16 = 0x00;\n                        \n                            if (var16 >= var13) { goto label_0643; }\n                            else { goto label_0634; }\n                        }\n                    } else {\n                    label_05D4:\n                        var temp58 = var16;\n                        memory[temp58 + var14:temp58 + var14 + 0x20] = memory[temp58 + var15:temp58 + var15 + 0x20];\n                        var16 = temp58 + 0x20;\n                    \n                        if (var16 >= var13) { goto label_05E3; }\n                        else { goto label_05D4; }\n                    }\n                } else {\n                    var temp59 = var11;\n                    var temp60 = var10 - temp59;\n                    memory[temp60:temp60 + 0x20] = ~(0x0100 ** (0x20 - temp59) - 0x01) & memory[temp60:temp60 + 0x20];\n                    var temp61 = temp60 + 0x20;\n                    memory[var8:var8 + 0x20] = temp61 - var6;\n                    var temp62 = var4;\n                    memory[temp61:temp61 + 0x20] = memory[temp62:temp62 + 0x20];\n                    var10 = temp61 + 0x20;\n                    var12 = memory[temp62:temp62 + 0x20];\n                    var11 = temp62 + 0x20;\n                    var13 = var12;\n                    var14 = var10;\n                    var15 = var11;\n                    var16 = 0x00;\n                \n                    if (var16 >= var13) { goto label_05E3; }\n                    else { goto label_05D4; }\n                }\n            } else {\n            label_0574:\n                var temp63 = var16;\n                memory[temp63 + var14:temp63 + var14 + 0x20] = memory[temp63 + var15:temp63 + var15 + 0x20];\n                var16 = temp63 + 0x20;\n            \n                if (var16 >= var13) { goto label_0583; }\n                else { goto label_0574; }\n            }\n        } else { revert(memory[0x00:0x00]); }\n    }\n    \n    function executiveOfficerAddress() returns (var r0) { return storage[0x00] & 0x02 ** 0xa0 - 0x01; }\n    \n    function supportsInterface(var arg0) returns (var r0) {\n        var var0 = 0x00;\n        memory[var0:var0 + 0x20] = arg0 & ~(0x02 ** 0xe0 - 0x01);\n        memory[0x20:0x40] = 0x03;\n        var var1 = storage[keccak256(memory[var0:var0 + 0x40])] & 0xff;\n    \n        if (!var1) { return var1; }\n    \n        var temp0 = ~(0x02 ** 0xe0 - 0x01);\n        return arg0 & temp0 != temp0;\n    }\n    \n    function promoCreatedCount() returns (var r0) { return storage[0x9c4d]; }\n    \n    function name() returns (var r0) {\n        var temp0 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp0 + 0x40;\n        memory[temp0:temp0 + 0x20] = 0x0a;\n        memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = 0x5375205371756172657300000000000000000000000000000000000000000000;\n        return temp0;\n    }\n    \n    function func_0707(var arg0) returns (var r0) { return arg0; }\n    \n    function getApproved(var arg0) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = arg0;\n        var var2 = var1 >= 0x01;\n    \n        if (!var2) {\n            if (!var2) { revert(memory[0x00:0x00]); }\n        \n        label_072B:\n            memory[0x00:0x20] = arg0;\n            memory[0x20:0x40] = 0x04;\n            return storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n        } else if (var1 <= 0x2710) { goto label_072B; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function approve(var arg0, var arg1) {\n        var var0 = 0x00;\n        memory[var0:var0 + 0x20] = arg1;\n        memory[0x20:0x40] = 0x06;\n        var var1 = arg1;\n        var var2 = storage[keccak256(memory[var0:var0 + 0x40])] & 0x02 ** 0xa0 - 0x01;\n        var var3 = var2 == msg.sender;\n    \n        if (!var3) {\n            memory[0x00:0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n            memory[0x20:0x40] = 0x05;\n            var temp8 = keccak256(memory[0x00:0x40]);\n            memory[0x00:0x20] = msg.sender;\n            memory[0x20:0x40] = temp8;\n        \n            if (storage[keccak256(memory[0x00:0x40])] & 0xff) { goto label_07A2; }\n            else { revert(memory[0x00:0x00]); }\n        } else if (var3) {\n        label_07A2:\n            memory[0x00:0x20] = arg1;\n            memory[0x20:0x40] = 0x06;\n            var0 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n        \n            if (var0) {\n                var temp0 = arg1;\n                memory[0x00:0x20] = temp0;\n                memory[0x20:0x40] = 0x04;\n                var temp1 = keccak256(memory[0x00:0x40]);\n                var temp2 = 0x02 ** 0xa0 - 0x01;\n                var temp3 = temp2 & arg0;\n                storage[temp1] = temp3 | (storage[temp1] & ~0xffffffffffffffffffffffffffffffffffffffff);\n                log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, stack[-3] & 0x02 ** 0xa0 - 0x01, stack[-5] & 0x02 ** 0xa0 - 0x01, stack[-4]]);\n                return;\n            } else {\n                var temp4 = arg1;\n                memory[0x00:0x20] = temp4;\n                memory[0x20:0x40] = 0x04;\n                var temp5 = keccak256(memory[0x00:0x40]);\n                var temp6 = 0x02 ** 0xa0 - 0x01;\n                var temp7 = temp6 & arg0;\n                storage[temp5] = temp7 | (storage[temp5] & ~0xffffffffffffffffffffffffffffffffffffffff);\n                log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, address(this), stack[-5] & 0x02 ** 0xa0 - 0x01, stack[-4]]);\n                return;\n            }\n        } else { revert(memory[0x00:0x00]); }\n    }\n    \n    function grantToken(var arg0, var arg1) {\n        if (msg.sender != storage[0x02] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        var var0 = arg0;\n        var var1 = var0 >= 0x01;\n    \n        if (!var1) {\n            if (!var1) { revert(memory[0x00:0x00]); }\n        \n        label_0868:\n            var1 = arg0;\n            var var2 = 0x00;\n            var var3 = var1 >= 0x01;\n        \n            if (!var3) {\n                if (!var3) { revert(memory[0x00:0x00]); }\n            \n            label_0889:\n                memory[0x00:0x20] = var1;\n                memory[0x20:0x40] = 0x06;\n                var2 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n                var3 = !var2;\n            \n                if (var3) {\n                    if (!var3) { revert(memory[0x00:0x00]); }\n                \n                label_08C2:\n                \n                    if (0x1388 <= storage[0x9c4d]) { revert(memory[0x00:0x00]); }\n                \n                    storage[0x9c4d] = storage[0x9c4d] + 0x01;\n                    var3 = 0x08e7;\n                    var var4 = arg0;\n                    var var5 = arg1;\n                    func_131D(var4, var5);\n                    return;\n                } else if (address(this) == var2 & 0x02 ** 0xa0 - 0x01) { goto label_08C2; }\n                else { revert(memory[0x00:0x00]); }\n            } else if (var1 <= 0x2710) { goto label_0889; }\n            else { revert(memory[0x00:0x00]); }\n        } else if (var0 <= 0x2710) { goto label_0868; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function totalSupply() returns (var r0) { return 0x2710; }\n    \n    function transferFrom(var arg0, var arg1, var arg2) {\n        var var0 = 0x00;\n        var var1 = arg2;\n        var var2 = var1 >= 0x01;\n    \n        if (!var2) {\n            if (!var2) { revert(memory[0x00:0x00]); }\n        \n        label_0915:\n            memory[0x00:0x20] = arg2;\n            memory[0x20:0x40] = 0x06;\n            var2 = arg2;\n            var var3 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            var var4 = var3 == msg.sender;\n        \n            if (!var4) {\n                memory[0x00:0x20] = var2;\n                memory[0x20:0x40] = 0x04;\n                var4 = msg.sender == storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            \n                if (var4) { goto label_0981; }\n                else { goto label_0959; }\n            } else if (var4) {\n            label_0981:\n            \n                if (!var4) { revert(memory[0x00:0x00]); }\n            \n            label_098C:\n                memory[0x00:0x20] = arg2;\n                memory[0x20:0x40] = 0x06;\n                var0 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            \n                if (var0) {\n                    var temp0 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (arg0 & temp0 != temp0 & var0) { revert(memory[0x00:0x00]); }\n                \n                label_09C9:\n                \n                    if (!(arg1 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n                \n                    var4 = 0x09e8;\n                    var var5 = arg2;\n                    var var6 = arg1;\n                    func_131D(var5, var6);\n                    return;\n                } else {\n                    var0 = address(this);\n                    var temp1 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (arg0 & temp1 == temp1 & var0) { goto label_09C9; }\n                    else { revert(memory[0x00:0x00]); }\n                }\n            } else {\n            label_0959:\n                memory[0x00:0x20] = var3 & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x05;\n                var temp2 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = temp2;\n            \n                if (storage[keccak256(memory[0x00:0x40])] & 0xff) { goto label_098C; }\n                else { revert(memory[0x00:0x00]); }\n            }\n        } else if (var1 <= 0x2710) { goto label_0915; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function setOperatingOfficer(var arg0) {\n        if (msg.sender != storage[0x00] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        if (!(arg0 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        storage[0x02] = (arg0 & 0x02 ** 0xa0 - 0x01) | (storage[0x02] & ~0xffffffffffffffffffffffffffffffffffffffff);\n    }\n    \n    function tokenOfOwnerByIndex(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n    \n        if (!(arg0 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0 & 0x02 ** 0xa0 - 0x01;\n        memory[0x20:0x40] = 0x07;\n    \n        if (arg1 >= storage[keccak256(memory[0x00:0x40])]) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0 & 0x02 ** 0xa0 - 0x01;\n        memory[0x20:0x40] = 0x07;\n        var var1 = keccak256(memory[0x00:0x40]);\n        var var2 = arg1;\n    \n        if (var2 >= storage[var1]) { assert(); }\n    \n        memory[0x00:0x20] = var1;\n        var0 = storage[keccak256(memory[0x00:0x20]) + var2];\n    \n        if (arg0 & 0x02 ** 0xa0 - 0x01 != address(this)) {\n        label_06C5:\n            return var0;\n        } else if (var0) { goto label_06C5; }\n        else { return arg1 + 0x01; }\n    }\n    \n    function tokenByIndex(var arg0) returns (var r0) {\n        var var0 = 0x00;\n    \n        if (arg0 < 0x2710) { return arg0 + 0x01; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function withdrawBalance() {\n        if (msg.sender != storage[0x01] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        var temp0 = memory[0x40:0x60];\n        var temp1 = address(this).balance;\n        var temp2;\n        temp2, memory[temp0:temp0 + 0x00] = address(storage[0x01] & 0x02 ** 0xa0 - 0x01).call.gas(!temp1 * 0x08fc).value(temp1)(memory[temp0:temp0 + 0x00]);\n        var var0 = !temp2;\n    \n        if (!var0) { return; }\n    \n        var temp3 = returndata.length;\n        memory[0x00:0x00 + temp3] = returndata[0x00:0x00 + temp3];\n        revert(memory[0x00:0x00 + returndata.length]);\n    }\n    \n    function ownerOf(var arg0) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = arg0;\n        var var2 = var1 >= 0x01;\n    \n        if (!var2) {\n            if (!var2) { revert(memory[0x00:0x00]); }\n        \n        label_0B8F:\n            memory[0x00:0x20] = arg0;\n            memory[0x20:0x40] = 0x06;\n            var0 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n        \n            if (var0) { return var0; }\n            else { return address(this); }\n        } else if (var1 <= 0x2710) { goto label_0B8F; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function operatingOfficerAddress() returns (var r0) { return storage[0x02] & 0x02 ** 0xa0 - 0x01; }\n    \n    function balanceOf(var arg0) returns (var r0) {\n        var var0 = 0x00;\n    \n        if (!(arg0 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0 & 0x02 ** 0xa0 - 0x01;\n        memory[0x20:0x40] = 0x07;\n        return storage[keccak256(memory[0x00:0x40])];\n    }\n    \n    function symbol() returns (var r0) {\n        var temp0 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp0 + 0x40;\n        memory[temp0:temp0 + 0x20] = 0x02;\n        memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = 0x5355000000000000000000000000000000000000000000000000000000000000;\n        return temp0;\n    }\n    \n    function setApprovalForAll(var arg0, var arg1) {\n        var temp0 = msg.sender;\n        memory[0x00:0x20] = temp0;\n        memory[0x20:0x40] = 0x05;\n        var temp1 = keccak256(memory[0x00:0x40]);\n        var temp2 = arg0 & 0x02 ** 0xa0 - 0x01;\n        memory[0x00:0x20] = temp2;\n        memory[0x20:0x40] = temp1;\n        var temp3 = keccak256(memory[0x00:0x40]);\n        var temp4 = !!arg1;\n        storage[temp3] = temp4 | (storage[temp3] & ~0xff);\n        var temp5 = memory[0x40:0x60];\n        memory[temp5:temp5 + 0x20] = temp4;\n        var temp6 = memory[0x40:0x60];\n        log(memory[temp6:temp6 + temp5 - temp6 + 0x20], [0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, msg.sender, stack[-2] & 0x02 ** 0xa0 - 0x01]);\n    }\n    \n    function financialOfficerAddress() returns (var r0) { return storage[0x01] & 0x02 ** 0xa0 - 0x01; }\n    \n    function tokenURI(var arg0) returns (var r0) {\n        var var0 = 0x60;\n        var var1 = var0;\n        var var2 = arg0;\n        var var3 = var2 >= 0x01;\n    \n        if (!var3) {\n            if (!var3) { revert(memory[0x00:0x00]); }\n        \n        label_0E50:\n            var temp0 = memory[0x40:0x60];\n            memory[0x40:0x60] = temp0 + 0x60;\n            memory[temp0:temp0 + 0x20] = 0x2b;\n            memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = 0x68747470733a2f2f74656e74686f7573616e6473752e636f6d2f657263373231;\n            memory[temp0 + 0x40:temp0 + 0x40 + 0x20] = 0x2f30303030302e6a736f6e000000000000000000000000000000000000000000;\n            var0 = temp0;\n            var1 = var0;\n            var temp1 = arg0;\n            memory[var1 + 0x41:var1 + 0x41 + 0x01] = byte((temp1 / 0x2710 % 0x0a + 0x30) * 0x02 ** 0xf8 & 0xff00000000000000000000000000000000000000000000000000000000000000, 0x00);\n            var3 = (temp1 / 0x03e8 % 0x0a + 0x30) * 0x02 ** 0xf8;\n            var var4 = var1;\n            var var5 = 0x22;\n        \n            if (var5 >= memory[var4:var4 + 0x20]) { assert(); }\n        \n            memory[var4 + 0x20 + var5:var4 + 0x20 + var5 + 0x01] = byte(var3 & ~(0x02 ** 0xf8 - 0x01), 0x00);\n            var3 = (arg0 / 0x64 % 0x0a + 0x30) * 0x02 ** 0xf8;\n            var4 = var1;\n            var5 = 0x23;\n        \n            if (var5 >= memory[var4:var4 + 0x20]) { assert(); }\n        \n            memory[var4 + 0x20 + var5:var4 + 0x20 + var5 + 0x01] = byte(var3 & ~(0x02 ** 0xf8 - 0x01), 0x00);\n            var3 = (arg0 / 0x0a % 0x0a + 0x30) * 0x02 ** 0xf8;\n            var4 = var1;\n            var5 = 0x24;\n        \n            if (var5 >= memory[var4:var4 + 0x20]) { assert(); }\n        \n            memory[var4 + 0x20 + var5:var4 + 0x20 + var5 + 0x01] = byte(var3 & ~(0x02 ** 0xf8 - 0x01), 0x00);\n            var3 = (arg0 % 0x0a + 0x30) * 0x02 ** 0xf8;\n            var4 = var1;\n            var5 = 0x25;\n        \n            if (var5 >= memory[var4:var4 + 0x20]) { assert(); }\n        \n            memory[var4 + 0x20 + var5:var4 + 0x20 + var5 + 0x01] = byte(var3 & ~(0x02 ** 0xf8 - 0x01), 0x00);\n            return var0;\n        } else if (var2 <= 0x2710) { goto label_0E50; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function setFinancialOfficer(var arg0) {\n        if (msg.sender != storage[0x00] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        if (!(arg0 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        storage[0x01] = (arg0 & 0x02 ** 0xa0 - 0x01) | (storage[0x01] & ~0xffffffffffffffffffffffffffffffffffffffff);\n    }\n    \n    function isApprovedForAll(var arg0, var arg1) returns (var r0) {\n        var temp0 = 0x02 ** 0xa0 - 0x01;\n        memory[0x00:0x20] = temp0 & arg0;\n        memory[0x20:0x40] = 0x05;\n        var temp1 = keccak256(memory[0x00:0x40]);\n        memory[0x00:0x20] = temp0 & arg1;\n        memory[0x20:0x40] = temp1;\n        return storage[keccak256(memory[0x00:0x40])] & 0xff;\n    }\n    \n    function setExecutiveOfficer(var arg0) {\n        if (msg.sender != storage[0x00] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        if (!(arg0 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        storage[0x00] = (arg0 & 0x02 ** 0xa0 - 0x01) | (storage[0x00] & ~0xffffffffffffffffffffffffffffffffffffffff);\n    }\n    \n    function purchase(var arg0) {\n        var var0 = arg0;\n        var var1 = var0 >= 0x01;\n    \n        if (!var1) {\n            if (!var1) { revert(memory[0x00:0x00]); }\n        \n        label_10D2:\n            var1 = arg0;\n            var var2 = 0x00;\n            var var3 = var1 >= 0x01;\n        \n            if (!var3) {\n                if (!var3) { revert(memory[0x00:0x00]); }\n            \n            label_10F3:\n                memory[0x00:0x20] = var1;\n                memory[0x20:0x40] = 0x06;\n                var2 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n                var3 = !var2;\n            \n                if (var3) {\n                    if (!var3) { revert(memory[0x00:0x00]); }\n                \n                label_112C:\n                \n                    if (msg.value != 0x06f05b59d3b20000) { revert(memory[0x00:0x00]); }\n                \n                    var3 = 0x114a;\n                    var var4 = arg0;\n                    var var5 = msg.sender;\n                    func_131D(var4, var5);\n                    return;\n                } else if (address(this) == var2 & 0x02 ** 0xa0 - 0x01) { goto label_112C; }\n                else { revert(memory[0x00:0x00]); }\n            } else if (var1 <= 0x2710) { goto label_10F3; }\n            else { revert(memory[0x00:0x00]); }\n        } else if (var0 <= 0x2710) { goto label_10D2; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function suSquares(var arg0) returns (var arg0, var r1, var r2, var r3) {\n        r1 = 0x09;\n        r2 = arg0;\n    \n        if (r2 >= 0x2711) { assert(); }\n    \n        var temp0 = r2 * 0x04 + r1;\n        r1 = temp0;\n        var temp1 = storage[r1 + 0x01];\n        var temp2 = memory[0x40:0x60];\n        var temp3 = (temp1 & !(temp1 & 0x01) * 0x0100 + ~0x00) / 0x02;\n        memory[0x40:0x60] = temp2 + (temp3 + 0x1f) / 0x20 * 0x20 + 0x20;\n        memory[temp2:temp2 + 0x20] = temp3;\n        arg0 = storage[r1];\n        r2 = temp2;\n        var var3 = temp3;\n        r3 = r1 + 0x01;\n        var var4 = r2 + 0x20;\n        var var5 = r3;\n        var var6 = var3;\n    \n        if (!var6) {\n        label_11F1:\n            var temp4 = r1;\n            var temp5 = temp4 + 0x02;\n            var temp6 = storage[temp5];\n            var temp7 = memory[0x40:0x60];\n            var temp8 = (temp6 & !(temp6 & 0x01) * 0x0100 + ~0x00) / 0x02;\n            memory[0x40:0x60] = temp7 + (temp8 + 0x1f) / 0x20 * 0x20 + 0x20;\n            memory[temp7:temp7 + 0x20] = temp8;\n            r1 = r2;\n            r2 = temp4;\n            r3 = temp7;\n            var3 = temp5;\n            var4 = temp8;\n            var5 = r3 + 0x20;\n            var6 = var3;\n            var var7 = var4;\n        \n            if (!var7) {\n            label_1283:\n                var temp9 = r2;\n                var temp10 = temp9 + 0x03;\n                var4 = temp10;\n                var temp11 = storage[var4];\n                var temp12 = memory[0x40:0x60];\n                var temp13 = (temp11 & !(temp11 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                memory[0x40:0x60] = temp12 + (temp13 + 0x1f) / 0x20 * 0x20 + 0x20;\n                memory[temp12:temp12 + 0x20] = temp13;\n                r2 = r3;\n                r3 = temp9;\n                var3 = temp12;\n                var5 = temp13;\n                var6 = var3 + 0x20;\n                var7 = var4;\n                var var8 = var5;\n            \n                if (!var8) {\n                label_1313:\n                    r3 = var3;\n                    return arg0, r1, r2, r3;\n                } else if (0x1f < var8) {\n                    var temp14 = var6;\n                    var temp15 = temp14 + var8;\n                    var6 = temp15;\n                    memory[0x00:0x20] = var7;\n                    var temp16 = keccak256(memory[0x00:0x20]);\n                    memory[temp14:temp14 + 0x20] = storage[temp16];\n                    var7 = temp16 + 0x01;\n                    var8 = temp14 + 0x20;\n                \n                    if (var6 <= var8) { goto label_130A; }\n                \n                label_12F6:\n                    var temp17 = var7;\n                    var temp18 = var8;\n                    memory[temp18:temp18 + 0x20] = storage[temp17];\n                    var7 = temp17 + 0x01;\n                    var8 = temp18 + 0x20;\n                \n                    if (var6 > var8) { goto label_12F6; }\n                \n                label_130A:\n                    var temp19 = var6;\n                    var temp20 = temp19 + (var8 - temp19 & 0x1f);\n                    var8 = temp19;\n                    var6 = temp20;\n                    goto label_1313;\n                } else {\n                    var temp21 = var6;\n                    memory[temp21:temp21 + 0x20] = storage[var7] / 0x0100 * 0x0100;\n                    var6 = temp21 + 0x20;\n                    var8 = var8;\n                    goto label_1313;\n                }\n            } else if (0x1f < var7) {\n                var temp22 = var5;\n                var temp23 = temp22 + var7;\n                var5 = temp23;\n                memory[0x00:0x20] = var6;\n                var temp24 = keccak256(memory[0x00:0x20]);\n                memory[temp22:temp22 + 0x20] = storage[temp24];\n                var6 = temp24 + 0x01;\n                var7 = temp22 + 0x20;\n            \n                if (var5 <= var7) { goto label_127A; }\n            \n            label_1266:\n                var temp25 = var6;\n                var temp26 = var7;\n                memory[temp26:temp26 + 0x20] = storage[temp25];\n                var6 = temp25 + 0x01;\n                var7 = temp26 + 0x20;\n            \n                if (var5 > var7) { goto label_1266; }\n            \n            label_127A:\n                var temp27 = var5;\n                var temp28 = temp27 + (var7 - temp27 & 0x1f);\n                var7 = temp27;\n                var5 = temp28;\n                goto label_1283;\n            } else {\n                var temp29 = var5;\n                memory[temp29:temp29 + 0x20] = storage[var6] / 0x0100 * 0x0100;\n                var7 = var7;\n                var5 = temp29 + 0x20;\n                goto label_1283;\n            }\n        } else if (0x1f < var6) {\n            var temp30 = var4;\n            var temp31 = temp30 + var6;\n            var4 = temp31;\n            memory[0x00:0x20] = var5;\n            var temp32 = keccak256(memory[0x00:0x20]);\n            memory[temp30:temp30 + 0x20] = storage[temp32];\n            var5 = temp32 + 0x01;\n            var6 = temp30 + 0x20;\n        \n            if (var4 <= var6) { goto label_11E8; }\n        \n        label_11D4:\n            var temp33 = var5;\n            var temp34 = var6;\n            memory[temp34:temp34 + 0x20] = storage[temp33];\n            var5 = temp33 + 0x01;\n            var6 = temp34 + 0x20;\n        \n            if (var4 > var6) { goto label_11D4; }\n        \n        label_11E8:\n            var temp35 = var4;\n            var temp36 = temp35 + (var6 - temp35 & 0x1f);\n            var6 = temp35;\n            var4 = temp36;\n            goto label_11F1;\n        } else {\n            var temp37 = var4;\n            memory[temp37:temp37 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n            var4 = temp37 + 0x20;\n            var6 = var6;\n            goto label_11F1;\n        }\n    }\n    \n    function func_131D(var arg0, var arg1) {\n        var var0 = 0x00;\n        var var1 = var0;\n        var var2 = var1;\n    \n        if (!(arg1 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0;\n        memory[0x20:0x40] = 0x06;\n        var0 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n    \n        if (var0) {\n            memory[0x00:0x20] = arg0;\n            memory[0x20:0x40] = 0x08;\n            var1 = storage[keccak256(memory[0x00:0x40])];\n        \n            if (var1) {\n            label_137E:\n                var temp0 = var1 - 0x01;\n                var1 = temp0;\n                memory[0x00:0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x07;\n            \n                if (var1 == storage[keccak256(memory[0x00:0x40])] + ~0x00) {\n                label_144C:\n                    memory[0x00:0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                    memory[0x20:0x40] = 0x07;\n                    var var3 = storage[keccak256(memory[0x00:0x40])];\n                    var var4 = 0x1475;\n                    var var5 = keccak256(memory[0x00:0x40]);\n                    var var6 = var3 + ~0x00;\n                    func_1847(var5, var6);\n                    var temp1 = 0x02 ** 0xa0 - 0x01;\n                    var temp2 = arg1 & temp1;\n                    memory[0x00:0x20] = temp2;\n                    memory[0x20:0x40] = 0x07;\n                    var temp3 = keccak256(memory[0x00:0x40]);\n                    var temp4 = storage[temp3];\n                    storage[temp3] = temp4 + 0x01;\n                    memory[0x00:0x20] = temp3;\n                    var temp5 = arg0;\n                    storage[keccak256(memory[0x00:0x20]) + temp4] = temp5;\n                    memory[0x00:0x20] = temp5;\n                    memory[0x20:0x40] = 0x08;\n                    storage[keccak256(memory[0x00:0x40])] = storage[temp3];\n                    memory[0x20:0x40] = 0x06;\n                    var temp6 = keccak256(memory[0x00:0x40]);\n                    var temp7 = ~0xffffffffffffffffffffffffffffffffffffffff;\n                    storage[temp6] = temp2 | (temp7 & storage[temp6]);\n                    memory[0x20:0x40] = 0x04;\n                    var temp8 = keccak256(memory[0x00:0x40]);\n                    storage[temp8] = temp7 & storage[temp8];\n                    log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-4] & 0x02 ** 0xa0 - 0x01, stack[-5] & 0x02 ** 0xa0 - 0x01, stack[-6]]);\n                    return;\n                } else {\n                label_13A9:\n                    memory[0x00:0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                    memory[0x20:0x40] = 0x07;\n                    var3 = keccak256(memory[0x00:0x40]);\n                    var temp9 = storage[var3];\n                    var4 = temp9 + ~0x00;\n                \n                    if (var4 >= temp9) { assert(); }\n                \n                    memory[0x00:0x20] = var3;\n                    var2 = storage[keccak256(memory[0x00:0x20]) + var4];\n                \n                    if (var2 != 0x00) {\n                        memory[0x00:0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                        memory[0x20:0x40] = 0x07;\n                        var3 = var2;\n                        var4 = keccak256(memory[0x00:0x40]);\n                        var5 = var1;\n                    \n                        if (var5 >= storage[var4]) { assert(); }\n                    \n                    label_1428:\n                        memory[0x00:0x20] = var4;\n                        storage[var5 + keccak256(memory[0x00:0x20])] = var3;\n                        memory[0x00:0x20] = var2;\n                        memory[0x20:0x40] = 0x08;\n                        storage[keccak256(memory[0x00:0x40])] = var1 + 0x01;\n                        goto label_144C;\n                    } else {\n                        var temp10 = var0;\n                        memory[0x00:0x20] = temp10 & 0x02 ** 0xa0 - 0x01;\n                        memory[0x20:0x40] = 0x07;\n                        var temp11 = storage[keccak256(memory[0x00:0x40])];\n                        var2 = temp11;\n                        memory[0x00:0x20] = temp10 & 0x02 ** 0xa0 - 0x01;\n                        memory[0x20:0x40] = 0x07;\n                        var3 = var2;\n                        var4 = keccak256(memory[0x00:0x40]);\n                        var5 = var1;\n                    \n                        if (var5 < storage[var4]) { goto label_1428; }\n                        else { assert(); }\n                    }\n                }\n            } else {\n            label_1374:\n                var1 = arg0 - 0x01;\n                memory[0x00:0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x07;\n            \n                if (var1 == storage[keccak256(memory[0x00:0x40])] + ~0x00) { goto label_144C; }\n                else { goto label_13A9; }\n            }\n        } else {\n            var0 = address(this);\n            memory[0x00:0x20] = arg0;\n            memory[0x20:0x40] = 0x08;\n            var1 = storage[keccak256(memory[0x00:0x40])];\n        \n            if (var1) { goto label_137E; }\n            else { goto label_1374; }\n        }\n    }\n    \n    function safeTransferFrom(var arg0, var arg1, var arg2, var arg3) {\n        var var0 = 0x00;\n        var var1 = var0;\n        var var2 = 0x00;\n        var var3 = arg2;\n        var var4 = var3 >= 0x01;\n    \n        if (!var4) {\n            if (!var4) { revert(memory[0x00:0x00]); }\n        \n        label_153B:\n            memory[0x00:0x20] = arg2;\n            memory[0x20:0x40] = 0x06;\n            var4 = arg2;\n            var var5 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            var var6 = var5 == msg.sender;\n        \n            if (!var6) {\n                memory[0x00:0x20] = var4;\n                memory[0x20:0x40] = 0x04;\n                var6 = msg.sender == storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            \n                if (var6) { goto label_15A7; }\n                else { goto label_157F; }\n            } else if (var6) {\n            label_15A7:\n            \n                if (!var6) { revert(memory[0x00:0x00]); }\n            \n            label_15B2:\n                memory[0x00:0x20] = arg2;\n                memory[0x20:0x40] = 0x06;\n                var0 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            \n                if (var0) {\n                    var temp0 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (arg0 & temp0 != temp0 & var0) { revert(memory[0x00:0x00]); }\n                \n                label_15EF:\n                \n                    if (!(arg1 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n                \n                    var6 = 0x160e;\n                    var var7 = arg2;\n                    var var8 = arg1;\n                    func_131D(var7, var8);\n                    var1 = address(arg1).code.length;\n                \n                    if (!var1) { goto label_17BD; }\n                \n                    var6 = arg1 & 0x02 ** 0xa0 - 0x01;\n                    var7 = 0x150b7a02;\n                    var8 = msg.sender;\n                    var var9 = arg0;\n                    var var10 = arg2;\n                    var temp1 = arg3;\n                    var var11 = temp1;\n                    var temp2 = memory[0x40:0x60];\n                    memory[temp2:temp2 + 0x20] = (var7 & 0xffffffff) * 0x0100000000000000000000000000000000000000000000000000000000;\n                    var temp3 = temp2 + 0x04;\n                    var var12 = temp3;\n                    memory[var12:var12 + 0x20] = var8 & 0x02 ** 0xa0 - 0x01 & 0x02 ** 0xa0 - 0x01;\n                    var temp4 = var12 + 0x20;\n                    memory[temp4:temp4 + 0x20] = var9 & 0x02 ** 0xa0 - 0x01 & 0x02 ** 0xa0 - 0x01;\n                    var temp5 = temp4 + 0x20;\n                    memory[temp5:temp5 + 0x20] = var10;\n                    var temp6 = temp5 + 0x20;\n                    var var13 = temp6;\n                    var temp7 = var13 + 0x20;\n                    memory[var13:var13 + 0x20] = temp7 - var12;\n                    memory[temp7:temp7 + 0x20] = memory[var11:var11 + 0x20];\n                    var var14 = temp7 + 0x20;\n                    var var16 = memory[var11:var11 + 0x20];\n                    var var15 = var11 + 0x20;\n                    var var17 = var16;\n                    var var18 = var14;\n                    var var19 = var15;\n                    var var20 = 0x00;\n                \n                    if (var20 >= var17) {\n                    label_16CF:\n                        var temp8 = var16;\n                        var14 = temp8 + var14;\n                        var15 = temp8 & 0x1f;\n                    \n                        if (!var15) {\n                            var8 = var14;\n                            var9 = 0x20;\n                            var10 = memory[0x40:0x60];\n                            var11 = var8 - var10;\n                            var12 = var10;\n                            var13 = 0x00;\n                            var14 = var6;\n                            var15 = !address(var14).code.length;\n                        \n                            if (var15) { revert(memory[0x00:0x00]); }\n                        \n                        label_171E:\n                            var temp9;\n                            temp9, memory[var10:var10 + var9] = address(var14).call.gas(msg.gas).value(var13)(memory[var12:var12 + var11]);\n                            var9 = !temp9;\n                        \n                            if (!var9) {\n                                var6 = memory[0x40:0x60];\n                                var7 = returndata.length;\n                            \n                                if (var7 < 0x20) { revert(memory[0x00:0x00]); }\n                            \n                                var temp10 = memory[var6:var6 + 0x20];\n                                var temp11 = memory[0x40:0x60];\n                                memory[temp11:temp11 + 0x20] = 0x6f6e455243373231526563656976656428616464726573732c61646472657373;\n                                memory[temp11 + 0x20:temp11 + 0x20 + 0x20] = 0x2c75696e743235362c6279746573290000000000000000000000000000000000;\n                                var temp12 = memory[0x40:0x60];\n                                var2 = temp10;\n                                var temp13 = ~(0x02 ** 0xe0 - 0x01);\n                            \n                                if (keccak256(memory[temp12:temp12 + temp11 - temp12 + 0x2f]) & temp13 != var2 & temp13) { revert(memory[0x00:0x00]); }\n                            \n                            label_17BD:\n                                return;\n                            } else {\n                                var temp14 = returndata.length;\n                                memory[0x00:0x00 + temp14] = returndata[0x00:0x00 + temp14];\n                                revert(memory[0x00:0x00 + returndata.length]);\n                            }\n                        } else {\n                            var temp15 = var15;\n                            var temp16 = var14 - temp15;\n                            memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                            var8 = temp16 + 0x20;\n                            var9 = 0x20;\n                            var10 = memory[0x40:0x60];\n                            var11 = var8 - var10;\n                            var12 = var10;\n                            var13 = 0x00;\n                            var14 = var6;\n                            var15 = !address(var14).code.length;\n                        \n                            if (!var15) { goto label_171E; }\n                            else { revert(memory[0x00:0x00]); }\n                        }\n                    } else {\n                    label_16C0:\n                        var temp17 = var20;\n                        memory[temp17 + var18:temp17 + var18 + 0x20] = memory[temp17 + var19:temp17 + var19 + 0x20];\n                        var20 = temp17 + 0x20;\n                    \n                        if (var20 >= var17) { goto label_16CF; }\n                        else { goto label_16C0; }\n                    }\n                } else {\n                    var0 = address(this);\n                    var temp18 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (arg0 & temp18 == temp18 & var0) { goto label_15EF; }\n                    else { revert(memory[0x00:0x00]); }\n                }\n            } else {\n            label_157F:\n                memory[0x00:0x20] = var5 & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x05;\n                var temp19 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = temp19;\n            \n                if (storage[keccak256(memory[0x00:0x40])] & 0xff) { goto label_15B2; }\n                else { revert(memory[0x00:0x00]); }\n            }\n        } else if (var3 <= 0x2710) { goto label_153B; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function func_1843(var arg0, var arg1) returns (var r0) { return arg0; }\n    \n    function func_1847(var arg0, var arg1) {\n        var temp0 = arg0;\n        var temp1 = storage[temp0];\n        var var0 = temp1;\n        var temp2 = arg1;\n        storage[temp0] = temp2;\n    \n        if (var0 <= temp2) {\n        label_0AFE:\n            return;\n        } else {\n            memory[0x00:0x20] = arg0;\n            var temp3 = keccak256(memory[0x00:0x20]);\n            var temp4 = var0;\n            var0 = 0x0afe;\n            var var1 = 0x0707;\n            var var2 = temp3 + temp4;\n            var var3 = arg1 + temp3;\n        \n            if (var2 <= var3) {\n                var1 = func_1843(var2, var3);\n                var0 = func_0707(var1);\n                goto label_0AFE;\n            } else {\n            label_1876:\n                var temp5 = var3;\n                storage[temp5] = 0x00;\n                var3 = temp5 + 0x01;\n                var1 = func_186D(var2, var3);\n                // Error: Could not resolve method call return address!\n            }\n        }\n    }\n    \n    function func_1867(var arg0, var arg1) returns (var r0) {\n        var temp0 = arg0;\n        arg0 = 0x0707;\n        var temp1 = arg1;\n        arg1 = temp0;\n        var var0 = temp1;\n        arg0 = func_186D(arg1, var0);\n        r0 = func_0707(arg0);\n        // Error: Could not resolve method call return address!\n    }\n    \n    function func_186D(var arg0, var arg1) returns (var r0) {\n        if (arg0 <= arg1) {\n            r0 = func_1843(arg0, arg1);\n            // Error: Could not resolve method call return address!\n        } else {\n            var temp0 = arg1;\n            storage[temp0] = 0x00;\n            arg1 = temp0 + 0x01;\n            r0 = func_186D(arg0, arg1);\n            // Error: Could not resolve method call return address!\n        }\n    }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x80;\n    \n        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }\n    \n        var var0 = msg.data[0x00:0x20] / 0x0100000000000000000000000000000000000000000000000000000000 & 0xffffffff;\n    \n        if (var0 == 0x15be71) {\n            // Dispatch table entry for executiveOfficerAddress()\n            var var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0182;\n            var var2 = executiveOfficerAddress();\n        \n        label_0182:\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n            var temp1 = memory[0x40:0x60];\n            return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n        } else if (var0 == 0x01ffc9a7) {\n            // Dispatch table entry for supportsInterface(bytes4)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01c0;\n            var2 = msg.data[0x04:0x24] & ~(0x02 ** 0xe0 - 0x01);\n            var1 = supportsInterface(var2);\n        \n        label_01C0:\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = !!var1;\n            var temp3 = memory[0x40:0x60];\n            return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n        } else if (var0 == 0x05e45546) {\n            // Dispatch table entry for promoCreatedCount()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01e9;\n            var2 = promoCreatedCount();\n        \n        label_01E9:\n            var temp4 = memory[0x40:0x60];\n            memory[temp4:temp4 + 0x20] = var2;\n            var temp5 = memory[0x40:0x60];\n            return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n        } else if (var0 == 0x06fdde03) {\n            // Dispatch table entry for name()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0210;\n            var1 = name();\n        \n        label_0210:\n            var temp6 = memory[0x40:0x60];\n            memory[temp6:temp6 + 0x20] = 0x20;\n            var temp7 = var1;\n            memory[temp6 + 0x20:temp6 + 0x20 + 0x20] = memory[temp7:temp7 + 0x20];\n            var2 = temp6;\n            var var3 = var2;\n            var var4 = var3 + 0x40;\n            var var6 = memory[temp7:temp7 + 0x20];\n            var var5 = temp7 + 0x20;\n            var var7 = var6;\n            var var8 = var4;\n            var var9 = var5;\n            var var10 = 0x00;\n        \n            if (var10 >= var7) {\n            label_024A:\n                var temp8 = var6;\n                var4 = temp8 + var4;\n                var5 = temp8 & 0x1f;\n            \n                if (!var5) {\n                    var temp9 = memory[0x40:0x60];\n                    return memory[temp9:temp9 + var4 - temp9];\n                } else {\n                    var temp10 = var5;\n                    var temp11 = var4 - temp10;\n                    memory[temp11:temp11 + 0x20] = ~(0x0100 ** (0x20 - temp10) - 0x01) & memory[temp11:temp11 + 0x20];\n                    var temp12 = memory[0x40:0x60];\n                    return memory[temp12:temp12 + (temp11 + 0x20) - temp12];\n                }\n            } else {\n            label_023B:\n                var temp13 = var10;\n                memory[temp13 + var8:temp13 + var8 + 0x20] = memory[temp13 + var9:temp13 + var9 + 0x20];\n                var10 = temp13 + 0x20;\n            \n                if (var10 >= var7) { goto label_024A; }\n                else { goto label_023B; }\n            }\n        } else if (var0 == 0x081812fc) {\n            // Dispatch table entry for getApproved(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0182;\n            var2 = msg.data[0x04:0x24];\n            var1 = getApproved(var2);\n            goto label_0182;\n        } else if (var0 == 0x095ea7b3) {\n            // Dispatch table entry for approve(address,uint256)\n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            var3 = msg.data[0x24:0x44];\n            approve(var2, var3);\n            stop();\n        } else if (var0 == 0x133252a6) {\n            // Dispatch table entry for grantToken(uint256,address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44] & 0x02 ** 0xa0 - 0x01;\n            grantToken(var2, var3);\n            stop();\n        } else if (var0 == 0x18160ddd) {\n            // Dispatch table entry for totalSupply()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01e9;\n            var1 = totalSupply();\n            goto label_01E9;\n        } else if (var0 == 0x23b872dd) {\n            // Dispatch table entry for transferFrom(address,address,uint256)\n            var1 = 0x02b4;\n            var temp14 = 0x02 ** 0xa0 - 0x01;\n            var2 = temp14 & msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44] & temp14;\n            var4 = msg.data[0x44:0x64];\n            transferFrom(var2, var3, var4);\n            stop();\n        } else if (var0 == 0x2aad292e) {\n            // Dispatch table entry for setOperatingOfficer(address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            setOperatingOfficer(var2);\n            stop();\n        } else if (var0 == 0x2f745c59) {\n            // Dispatch table entry for tokenOfOwnerByIndex(address,uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01e9;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            var3 = msg.data[0x24:0x44];\n            var1 = tokenOfOwnerByIndex(var2, var3);\n            goto label_01E9;\n        } else if (var0 == 0x42842e0e) {\n            // Dispatch table entry for safeTransferFrom(address,address,uint256)\n            var1 = 0x02b4;\n            var temp15 = 0x02 ** 0xa0 - 0x01;\n            var2 = temp15 & msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44] & temp15;\n            var4 = msg.data[0x44:0x64];\n            var5 = 0x0afe;\n            var6 = var2;\n            var7 = var3;\n            var8 = var4;\n            var temp16 = memory[0x40:0x60];\n            var9 = temp16;\n            memory[0x40:0x60] = var9 + 0x20;\n            memory[var9:var9 + 0x20] = 0x00;\n            safeTransferFrom(var6, var7, var8, var9);\n            // Error: Could not resolve jump destination!\n        } else if (var0 == 0x4f6ccce7) {\n            // Dispatch table entry for tokenByIndex(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01e9;\n            var2 = msg.data[0x04:0x24];\n            var1 = tokenByIndex(var2);\n            goto label_01E9;\n        } else if (var0 == 0x5fd8c710) {\n            // Dispatch table entry for withdrawBalance()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            withdrawBalance();\n            stop();\n        } else if (var0 == 0x6352211e) {\n            // Dispatch table entry for ownerOf(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0182;\n            var2 = msg.data[0x04:0x24];\n            var1 = ownerOf(var2);\n            goto label_0182;\n        } else if (var0 == 0x6bfa5edc) {\n            // Dispatch table entry for operatingOfficerAddress()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0182;\n            var2 = operatingOfficerAddress();\n            goto label_0182;\n        } else if (var0 == 0x70a08231) {\n            // Dispatch table entry for balanceOf(address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01e9;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            var1 = balanceOf(var2);\n            goto label_01E9;\n        } else if (var0 == 0x76f14c98) {\n            // Dispatch table entry for personalizeSquare(uint256,bytes,string,string)\n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24];\n            var temp17 = msg.data[0x24:0x44];\n            var3 = temp17 + 0x24;\n            var4 = msg.data[temp17 + 0x04:temp17 + 0x04 + 0x20];\n            var temp18 = msg.data[0x44:0x64];\n            var5 = temp18 + 0x24;\n            var6 = msg.data[temp18 + 0x04:temp18 + 0x04 + 0x20];\n            var temp19 = msg.data[0x64:0x84];\n            var7 = temp19 + 0x24;\n            var8 = msg.data[temp19 + 0x04:temp19 + 0x04 + 0x20];\n            memory[0x00:0x20] = var2;\n            memory[0x20:0x40] = 0x06;\n            var9 = var2;\n            var10 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n        \n            if (var10 != msg.sender) { revert(memory[0x00:0x00]); }\n        \n            if (var6 > 0x40) { revert(memory[0x00:0x00]); }\n        \n            if (var8 > 0x60) { revert(memory[0x00:0x00]); }\n        \n            if (var4 != 0x012c) { revert(memory[0x00:0x00]); }\n        \n            var var11 = 0x09;\n            var var12 = var2;\n        \n            if (var12 >= 0x2711) { assert(); }\n        \n            var temp20 = var12 * 0x04 + var11;\n            storage[temp20] = storage[temp20] + 0x01;\n            var11 = var3;\n            var12 = var4;\n            var var13 = 0x09;\n            var var14 = var2;\n        \n            if (var14 >= 0x2711) { assert(); }\n        \n            var temp21 = var11;\n            var temp22 = var12;\n            var11 = 0x0c87;\n            var12 = var14 * 0x04 + var13 + 0x01;\n            var14 = temp22;\n            var13 = temp21;\n            var temp23 = var12;\n            var temp24 = storage[temp23];\n            memory[0x00:0x20] = temp23;\n            var var15 = keccak256(memory[0x00:0x20]);\n            var temp25 = var13;\n            var13 = var15 + ((!(temp24 & 0x01) * 0x0100 - 0x01 & temp24) / 0x02 + 0x1f) / 0x20;\n            var var16 = temp25;\n        \n            if (0x1f < var14) {\n                var temp26 = var14;\n                storage[var12] = temp26 + temp26 + 0x01;\n            \n                if (!temp26) {\n                label_1837:\n                    var temp27 = var13;\n                    var13 = 0x1843;\n                    var14 = temp27;\n                    var13 = func_1867(var14, var15);\n                    var11 = func_1843(var12, var13);\n                    // Error: Could not resolve method call return address!\n                } else {\n                    var temp28 = var14;\n                    var temp29 = var16;\n                    var14 = temp29;\n                    var16 = var14 + temp28;\n                \n                    if (var16 <= var14) { goto label_1837; }\n                \n                label_1825:\n                    var temp30 = var14;\n                    var temp31 = var15;\n                    storage[temp31] = msg.data[temp30:temp30 + 0x20];\n                    var14 = temp30 + 0x20;\n                    var16 = var16;\n                    var15 = temp31 + 0x01;\n                \n                    if (var16 <= var14) { goto label_1837; }\n                    else { goto label_1825; }\n                }\n            } else {\n                var temp32 = var14;\n                storage[var12] = (msg.data[var16:var16 + 0x20] & ~0xff) | temp32 + temp32;\n                goto label_1837;\n            }\n        } else if (var0 == 0x95d89b41) {\n            // Dispatch table entry for symbol()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0210;\n            var1 = symbol();\n            goto label_0210;\n        } else if (var0 == 0xa22cb465) {\n            // Dispatch table entry for setApprovalForAll(address,bool)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            var3 = !!msg.data[0x24:0x44];\n            setApprovalForAll(var2, var3);\n            stop();\n        } else if (var0 == 0xabe088a7) {\n            // Dispatch table entry for financialOfficerAddress()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0182;\n            var2 = financialOfficerAddress();\n            goto label_0182;\n        } else if (var0 == 0xb88d4fde) {\n            // Dispatch table entry for safeTransferFrom(address,address,uint256,bytes)\n            var1 = 0x02b4;\n            var temp33 = 0x02 ** 0xa0 - 0x01;\n            var2 = temp33 & msg.data[0x04:0x24];\n            var3 = temp33 & msg.data[0x24:0x44];\n            var4 = msg.data[0x44:0x64];\n            var temp34 = msg.data[0x64:0x84];\n            var5 = temp34 + 0x24;\n            var6 = msg.data[temp34 + 0x04:temp34 + 0x04 + 0x20];\n            var7 = 0x08e7;\n            var8 = var2;\n            var9 = var3;\n            var10 = var4;\n            var temp35 = var6;\n            var temp36 = memory[0x40:0x60];\n            memory[0x40:0x60] = temp36 + (temp35 + 0x1f) / 0x20 * 0x20 + 0x20;\n            var11 = temp36;\n            memory[var11:var11 + 0x20] = temp35;\n            memory[var11 + 0x20:var11 + 0x20 + temp35] = msg.data[var5:var5 + temp35];\n            safeTransferFrom(var8, var9, var10, var11);\n            // Error: Could not resolve jump destination!\n        } else if (var0 == 0xc87b56dd) {\n            // Dispatch table entry for tokenURI(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0210;\n            var2 = msg.data[0x04:0x24];\n            var1 = tokenURI(var2);\n            goto label_0210;\n        } else if (var0 == 0xd978a0d3) {\n            // Dispatch table entry for setFinancialOfficer(address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            setFinancialOfficer(var2);\n            stop();\n        } else if (var0 == 0xe985e9c5) {\n            // Dispatch table entry for isApprovedForAll(address,address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01c0;\n            var temp37 = 0x02 ** 0xa0 - 0x01;\n            var2 = temp37 & msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44] & temp37;\n            var1 = isApprovedForAll(var2, var3);\n            goto label_01C0;\n        } else if (var0 == 0xec13df6b) {\n            // Dispatch table entry for setExecutiveOfficer(address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            setExecutiveOfficer(var2);\n            stop();\n        } else if (var0 == 0xefef39a1) {\n            // Dispatch table entry for purchase(uint256)\n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24];\n            purchase(var2);\n            stop();\n        } else if (var0 == 0xffa6ab44) {\n            // Dispatch table entry for suSquares(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0538;\n            var2 = msg.data[0x04:0x24];\n            var2, var3, var4, var5 = suSquares(var2);\n            var temp38 = memory[0x40:0x60];\n            var6 = temp38;\n            memory[var6:var6 + 0x20] = var2;\n            var temp39 = var6 + 0x20;\n            var7 = temp39;\n            var8 = var7 + 0x20;\n            var9 = var8 + 0x20;\n            var temp40 = var9 + 0x20;\n            memory[var7:var7 + 0x20] = temp40 - var6;\n            var temp41 = var3;\n            memory[temp40:temp40 + 0x20] = memory[temp41:temp41 + 0x20];\n            var10 = temp40 + 0x20;\n            var12 = memory[temp41:temp41 + 0x20];\n            var11 = temp41 + 0x20;\n            var13 = var12;\n            var14 = var10;\n            var15 = var11;\n            var16 = 0x00;\n        \n            if (var16 >= var13) {\n            label_0583:\n                var temp42 = var12;\n                var10 = temp42 + var10;\n                var11 = temp42 & 0x1f;\n            \n                if (!var11) {\n                    var temp43 = var10;\n                    memory[var8:var8 + 0x20] = temp43 - var6;\n                    var temp44 = var4;\n                    memory[temp43:temp43 + 0x20] = memory[temp44:temp44 + 0x20];\n                    var10 = temp43 + 0x20;\n                    var11 = temp44 + 0x20;\n                    var12 = memory[temp44:temp44 + 0x20];\n                    var13 = var12;\n                    var14 = var10;\n                    var15 = var11;\n                    var16 = 0x00;\n                \n                    if (var16 >= var13) {\n                    label_05E3:\n                        var temp45 = var12;\n                        var10 = temp45 + var10;\n                        var11 = temp45 & 0x1f;\n                    \n                        if (!var11) {\n                            var temp46 = var10;\n                            memory[var9:var9 + 0x20] = temp46 - var6;\n                            var temp47 = var5;\n                            memory[temp46:temp46 + 0x20] = memory[temp47:temp47 + 0x20];\n                            var10 = temp46 + 0x20;\n                            var11 = temp47 + 0x20;\n                            var12 = memory[temp47:temp47 + 0x20];\n                            var13 = var12;\n                            var14 = var10;\n                            var15 = var11;\n                            var16 = 0x00;\n                        \n                            if (var16 >= var13) {\n                            label_0643:\n                                var temp48 = var12;\n                                var10 = temp48 + var10;\n                                var11 = temp48 & 0x1f;\n                            \n                                if (!var11) {\n                                    var temp49 = memory[0x40:0x60];\n                                    return memory[temp49:temp49 + var10 - temp49];\n                                } else {\n                                    var temp50 = var11;\n                                    var temp51 = var10 - temp50;\n                                    memory[temp51:temp51 + 0x20] = ~(0x0100 ** (0x20 - temp50) - 0x01) & memory[temp51:temp51 + 0x20];\n                                    var temp52 = memory[0x40:0x60];\n                                    return memory[temp52:temp52 + (temp51 + 0x20) - temp52];\n                                }\n                            } else {\n                            label_0634:\n                                var temp53 = var16;\n                                memory[temp53 + var14:temp53 + var14 + 0x20] = memory[temp53 + var15:temp53 + var15 + 0x20];\n                                var16 = temp53 + 0x20;\n                            \n                                if (var16 >= var13) { goto label_0643; }\n                                else { goto label_0634; }\n                            }\n                        } else {\n                            var temp54 = var11;\n                            var temp55 = var10 - temp54;\n                            memory[temp55:temp55 + 0x20] = ~(0x0100 ** (0x20 - temp54) - 0x01) & memory[temp55:temp55 + 0x20];\n                            var temp56 = temp55 + 0x20;\n                            memory[var9:var9 + 0x20] = temp56 - var6;\n                            var temp57 = var5;\n                            memory[temp56:temp56 + 0x20] = memory[temp57:temp57 + 0x20];\n                            var10 = temp56 + 0x20;\n                            var12 = memory[temp57:temp57 + 0x20];\n                            var11 = temp57 + 0x20;\n                            var13 = var12;\n                            var14 = var10;\n                            var15 = var11;\n                            var16 = 0x00;\n                        \n                            if (var16 >= var13) { goto label_0643; }\n                            else { goto label_0634; }\n                        }\n                    } else {\n                    label_05D4:\n                        var temp58 = var16;\n                        memory[temp58 + var14:temp58 + var14 + 0x20] = memory[temp58 + var15:temp58 + var15 + 0x20];\n                        var16 = temp58 + 0x20;\n                    \n                        if (var16 >= var13) { goto label_05E3; }\n                        else { goto label_05D4; }\n                    }\n                } else {\n                    var temp59 = var11;\n                    var temp60 = var10 - temp59;\n                    memory[temp60:temp60 + 0x20] = ~(0x0100 ** (0x20 - temp59) - 0x01) & memory[temp60:temp60 + 0x20];\n                    var temp61 = temp60 + 0x20;\n                    memory[var8:var8 + 0x20] = temp61 - var6;\n                    var temp62 = var4;\n                    memory[temp61:temp61 + 0x20] = memory[temp62:temp62 + 0x20];\n                    var10 = temp61 + 0x20;\n                    var12 = memory[temp62:temp62 + 0x20];\n                    var11 = temp62 + 0x20;\n                    var13 = var12;\n                    var14 = var10;\n                    var15 = var11;\n                    var16 = 0x00;\n                \n                    if (var16 >= var13) { goto label_05E3; }\n                    else { goto label_05D4; }\n                }\n            } else {\n            label_0574:\n                var temp63 = var16;\n                memory[temp63 + var14:temp63 + var14 + 0x20] = memory[temp63 + var15:temp63 + var15 + 0x20];\n                var16 = temp63 + 0x20;\n            \n                if (var16 >= var13) { goto label_0583; }\n                else { goto label_0574; }\n            }\n        } else { revert(memory[0x00:0x00]); }\n    }\n    \n    function executiveOfficerAddress() returns (var r0) { return storage[0x00] & 0x02 ** 0xa0 - 0x01; }\n    \n    function supportsInterface(var arg0) returns (var r0) {\n        var var0 = 0x00;\n        memory[var0:var0 + 0x20] = arg0 & ~(0x02 ** 0xe0 - 0x01);\n        memory[0x20:0x40] = 0x03;\n        var var1 = storage[keccak256(memory[var0:var0 + 0x40])] & 0xff;\n    \n        if (!var1) { return var1; }\n    \n        var temp0 = ~(0x02 ** 0xe0 - 0x01);\n        return arg0 & temp0 != temp0;\n    }\n    \n    function promoCreatedCount() returns (var r0) { return storage[0x9c4d]; }\n    \n    function name() returns (var r0) {\n        var temp0 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp0 + 0x40;\n        memory[temp0:temp0 + 0x20] = 0x0a;\n        memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = 0x5375205371756172657300000000000000000000000000000000000000000000;\n        return temp0;\n    }\n    \n    function func_0707(var arg0) returns (var r0) { return arg0; }\n    \n    function getApproved(var arg0) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = arg0;\n        var var2 = var1 >= 0x01;\n    \n        if (!var2) {\n            if (!var2) { revert(memory[0x00:0x00]); }\n        \n        label_072B:\n            memory[0x00:0x20] = arg0;\n            memory[0x20:0x40] = 0x04;\n            return storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n        } else if (var1 <= 0x2710) { goto label_072B; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function approve(var arg0, var arg1) {\n        var var0 = 0x00;\n        memory[var0:var0 + 0x20] = arg1;\n        memory[0x20:0x40] = 0x06;\n        var var1 = arg1;\n        var var2 = storage[keccak256(memory[var0:var0 + 0x40])] & 0x02 ** 0xa0 - 0x01;\n        var var3 = var2 == msg.sender;\n    \n        if (!var3) {\n            memory[0x00:0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n            memory[0x20:0x40] = 0x05;\n            var temp8 = keccak256(memory[0x00:0x40]);\n            memory[0x00:0x20] = msg.sender;\n            memory[0x20:0x40] = temp8;\n        \n            if (storage[keccak256(memory[0x00:0x40])] & 0xff) { goto label_07A2; }\n            else { revert(memory[0x00:0x00]); }\n        } else if (var3) {\n        label_07A2:\n            memory[0x00:0x20] = arg1;\n            memory[0x20:0x40] = 0x06;\n            var0 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n        \n            if (var0) {\n                var temp0 = arg1;\n                memory[0x00:0x20] = temp0;\n                memory[0x20:0x40] = 0x04;\n                var temp1 = keccak256(memory[0x00:0x40]);\n                var temp2 = 0x02 ** 0xa0 - 0x01;\n                var temp3 = temp2 & arg0;\n                storage[temp1] = temp3 | (storage[temp1] & ~0xffffffffffffffffffffffffffffffffffffffff);\n                log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, stack[-3] & 0x02 ** 0xa0 - 0x01, stack[-5] & 0x02 ** 0xa0 - 0x01, stack[-4]]);\n                return;\n            } else {\n                var temp4 = arg1;\n                memory[0x00:0x20] = temp4;\n                memory[0x20:0x40] = 0x04;\n                var temp5 = keccak256(memory[0x00:0x40]);\n                var temp6 = 0x02 ** 0xa0 - 0x01;\n                var temp7 = temp6 & arg0;\n                storage[temp5] = temp7 | (storage[temp5] & ~0xffffffffffffffffffffffffffffffffffffffff);\n                log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, address(this), stack[-5] & 0x02 ** 0xa0 - 0x01, stack[-4]]);\n                return;\n            }\n        } else { revert(memory[0x00:0x00]); }\n    }\n    \n    function grantToken(var arg0, var arg1) {\n        if (msg.sender != storage[0x02] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        var var0 = arg0;\n        var var1 = var0 >= 0x01;\n    \n        if (!var1) {\n            if (!var1) { revert(memory[0x00:0x00]); }\n        \n        label_0868:\n            var1 = arg0;\n            var var2 = 0x00;\n            var var3 = var1 >= 0x01;\n        \n            if (!var3) {\n                if (!var3) { revert(memory[0x00:0x00]); }\n            \n            label_0889:\n                memory[0x00:0x20] = var1;\n                memory[0x20:0x40] = 0x06;\n                var2 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n                var3 = !var2;\n            \n                if (var3) {\n                    if (!var3) { revert(memory[0x00:0x00]); }\n                \n                label_08C2:\n                \n                    if (0x1388 <= storage[0x9c4d]) { revert(memory[0x00:0x00]); }\n                \n                    storage[0x9c4d] = storage[0x9c4d] + 0x01;\n                    var3 = 0x08e7;\n                    var var4 = arg0;\n                    var var5 = arg1;\n                    func_131D(var4, var5);\n                    return;\n                } else if (address(this) == var2 & 0x02 ** 0xa0 - 0x01) { goto label_08C2; }\n                else { revert(memory[0x00:0x00]); }\n            } else if (var1 <= 0x2710) { goto label_0889; }\n            else { revert(memory[0x00:0x00]); }\n        } else if (var0 <= 0x2710) { goto label_0868; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function totalSupply() returns (var r0) { return 0x2710; }\n    \n    function transferFrom(var arg0, var arg1, var arg2) {\n        var var0 = 0x00;\n        var var1 = arg2;\n        var var2 = var1 >= 0x01;\n    \n        if (!var2) {\n            if (!var2) { revert(memory[0x00:0x00]); }\n        \n        label_0915:\n            memory[0x00:0x20] = arg2;\n            memory[0x20:0x40] = 0x06;\n            var2 = arg2;\n            var var3 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            var var4 = var3 == msg.sender;\n        \n            if (!var4) {\n                memory[0x00:0x20] = var2;\n                memory[0x20:0x40] = 0x04;\n                var4 = msg.sender == storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            \n                if (var4) { goto label_0981; }\n                else { goto label_0959; }\n            } else if (var4) {\n            label_0981:\n            \n                if (!var4) { revert(memory[0x00:0x00]); }\n            \n            label_098C:\n                memory[0x00:0x20] = arg2;\n                memory[0x20:0x40] = 0x06;\n                var0 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            \n                if (var0) {\n                    var temp0 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (arg0 & temp0 != temp0 & var0) { revert(memory[0x00:0x00]); }\n                \n                label_09C9:\n                \n                    if (!(arg1 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n                \n                    var4 = 0x09e8;\n                    var var5 = arg2;\n                    var var6 = arg1;\n                    func_131D(var5, var6);\n                    return;\n                } else {\n                    var0 = address(this);\n                    var temp1 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (arg0 & temp1 == temp1 & var0) { goto label_09C9; }\n                    else { revert(memory[0x00:0x00]); }\n                }\n            } else {\n            label_0959:\n                memory[0x00:0x20] = var3 & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x05;\n                var temp2 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = temp2;\n            \n                if (storage[keccak256(memory[0x00:0x40])] & 0xff) { goto label_098C; }\n                else { revert(memory[0x00:0x00]); }\n            }\n        } else if (var1 <= 0x2710) { goto label_0915; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function setOperatingOfficer(var arg0) {\n        if (msg.sender != storage[0x00] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        if (!(arg0 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        storage[0x02] = (arg0 & 0x02 ** 0xa0 - 0x01) | (storage[0x02] & ~0xffffffffffffffffffffffffffffffffffffffff);\n    }\n    \n    function tokenOfOwnerByIndex(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n    \n        if (!(arg0 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0 & 0x02 ** 0xa0 - 0x01;\n        memory[0x20:0x40] = 0x07;\n    \n        if (arg1 >= storage[keccak256(memory[0x00:0x40])]) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0 & 0x02 ** 0xa0 - 0x01;\n        memory[0x20:0x40] = 0x07;\n        var var1 = keccak256(memory[0x00:0x40]);\n        var var2 = arg1;\n    \n        if (var2 >= storage[var1]) { assert(); }\n    \n        memory[0x00:0x20] = var1;\n        var0 = storage[keccak256(memory[0x00:0x20]) + var2];\n    \n        if (arg0 & 0x02 ** 0xa0 - 0x01 != address(this)) {\n        label_06C5:\n            return var0;\n        } else if (var0) { goto label_06C5; }\n        else { return arg1 + 0x01; }\n    }\n    \n    function tokenByIndex(var arg0) returns (var r0) {\n        var var0 = 0x00;\n    \n        if (arg0 < 0x2710) { return arg0 + 0x01; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function withdrawBalance() {\n        if (msg.sender != storage[0x01] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        var temp0 = memory[0x40:0x60];\n        var temp1 = address(this).balance;\n        var temp2;\n        temp2, memory[temp0:temp0 + 0x00] = address(storage[0x01] & 0x02 ** 0xa0 - 0x01).call.gas(!temp1 * 0x08fc).value(temp1)(memory[temp0:temp0 + 0x00]);\n        var var0 = !temp2;\n    \n        if (!var0) { return; }\n    \n        var temp3 = returndata.length;\n        memory[0x00:0x00 + temp3] = returndata[0x00:0x00 + temp3];\n        revert(memory[0x00:0x00 + returndata.length]);\n    }\n    \n    function ownerOf(var arg0) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = arg0;\n        var var2 = var1 >= 0x01;\n    \n        if (!var2) {\n            if (!var2) { revert(memory[0x00:0x00]); }\n        \n        label_0B8F:\n            memory[0x00:0x20] = arg0;\n            memory[0x20:0x40] = 0x06;\n            var0 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n        \n            if (var0) { return var0; }\n            else { return address(this); }\n        } else if (var1 <= 0x2710) { goto label_0B8F; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function operatingOfficerAddress() returns (var r0) { return storage[0x02] & 0x02 ** 0xa0 - 0x01; }\n    \n    function balanceOf(var arg0) returns (var r0) {\n        var var0 = 0x00;\n    \n        if (!(arg0 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0 & 0x02 ** 0xa0 - 0x01;\n        memory[0x20:0x40] = 0x07;\n        return storage[keccak256(memory[0x00:0x40])];\n    }\n    \n    function symbol() returns (var r0) {\n        var temp0 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp0 + 0x40;\n        memory[temp0:temp0 + 0x20] = 0x02;\n        memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = 0x5355000000000000000000000000000000000000000000000000000000000000;\n        return temp0;\n    }\n    \n    function setApprovalForAll(var arg0, var arg1) {\n        var temp0 = msg.sender;\n        memory[0x00:0x20] = temp0;\n        memory[0x20:0x40] = 0x05;\n        var temp1 = keccak256(memory[0x00:0x40]);\n        var temp2 = arg0 & 0x02 ** 0xa0 - 0x01;\n        memory[0x00:0x20] = temp2;\n        memory[0x20:0x40] = temp1;\n        var temp3 = keccak256(memory[0x00:0x40]);\n        var temp4 = !!arg1;\n        storage[temp3] = temp4 | (storage[temp3] & ~0xff);\n        var temp5 = memory[0x40:0x60];\n        memory[temp5:temp5 + 0x20] = temp4;\n        var temp6 = memory[0x40:0x60];\n        log(memory[temp6:temp6 + temp5 - temp6 + 0x20], [0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, msg.sender, stack[-2] & 0x02 ** 0xa0 - 0x01]);\n    }\n    \n    function financialOfficerAddress() returns (var r0) { return storage[0x01] & 0x02 ** 0xa0 - 0x01; }\n    \n    function tokenURI(var arg0) returns (var r0) {\n        var var0 = 0x60;\n        var var1 = var0;\n        var var2 = arg0;\n        var var3 = var2 >= 0x01;\n    \n        if (!var3) {\n            if (!var3) { revert(memory[0x00:0x00]); }\n        \n        label_0E50:\n            var temp0 = memory[0x40:0x60];\n            memory[0x40:0x60] = temp0 + 0x60;\n            memory[temp0:temp0 + 0x20] = 0x2b;\n            memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = 0x68747470733a2f2f74656e74686f7573616e6473752e636f6d2f657263373231;\n            memory[temp0 + 0x40:temp0 + 0x40 + 0x20] = 0x2f30303030302e6a736f6e000000000000000000000000000000000000000000;\n            var0 = temp0;\n            var1 = var0;\n            var temp1 = arg0;\n            memory[var1 + 0x41:var1 + 0x41 + 0x01] = byte((temp1 / 0x2710 % 0x0a + 0x30) * 0x02 ** 0xf8 & 0xff00000000000000000000000000000000000000000000000000000000000000, 0x00);\n            var3 = (temp1 / 0x03e8 % 0x0a + 0x30) * 0x02 ** 0xf8;\n            var var4 = var1;\n            var var5 = 0x22;\n        \n            if (var5 >= memory[var4:var4 + 0x20]) { assert(); }\n        \n            memory[var4 + 0x20 + var5:var4 + 0x20 + var5 + 0x01] = byte(var3 & ~(0x02 ** 0xf8 - 0x01), 0x00);\n            var3 = (arg0 / 0x64 % 0x0a + 0x30) * 0x02 ** 0xf8;\n            var4 = var1;\n            var5 = 0x23;\n        \n            if (var5 >= memory[var4:var4 + 0x20]) { assert(); }\n        \n            memory[var4 + 0x20 + var5:var4 + 0x20 + var5 + 0x01] = byte(var3 & ~(0x02 ** 0xf8 - 0x01), 0x00);\n            var3 = (arg0 / 0x0a % 0x0a + 0x30) * 0x02 ** 0xf8;\n            var4 = var1;\n            var5 = 0x24;\n        \n            if (var5 >= memory[var4:var4 + 0x20]) { assert(); }\n        \n            memory[var4 + 0x20 + var5:var4 + 0x20 + var5 + 0x01] = byte(var3 & ~(0x02 ** 0xf8 - 0x01), 0x00);\n            var3 = (arg0 % 0x0a + 0x30) * 0x02 ** 0xf8;\n            var4 = var1;\n            var5 = 0x25;\n        \n            if (var5 >= memory[var4:var4 + 0x20]) { assert(); }\n        \n            memory[var4 + 0x20 + var5:var4 + 0x20 + var5 + 0x01] = byte(var3 & ~(0x02 ** 0xf8 - 0x01), 0x00);\n            return var0;\n        } else if (var2 <= 0x2710) { goto label_0E50; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function setFinancialOfficer(var arg0) {\n        if (msg.sender != storage[0x00] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        if (!(arg0 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        storage[0x01] = (arg0 & 0x02 ** 0xa0 - 0x01) | (storage[0x01] & ~0xffffffffffffffffffffffffffffffffffffffff);\n    }\n    \n    function isApprovedForAll(var arg0, var arg1) returns (var r0) {\n        var temp0 = 0x02 ** 0xa0 - 0x01;\n        memory[0x00:0x20] = temp0 & arg0;\n        memory[0x20:0x40] = 0x05;\n        var temp1 = keccak256(memory[0x00:0x40]);\n        memory[0x00:0x20] = temp0 & arg1;\n        memory[0x20:0x40] = temp1;\n        return storage[keccak256(memory[0x00:0x40])] & 0xff;\n    }\n    \n    function setExecutiveOfficer(var arg0) {\n        if (msg.sender != storage[0x00] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        if (!(arg0 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        storage[0x00] = (arg0 & 0x02 ** 0xa0 - 0x01) | (storage[0x00] & ~0xffffffffffffffffffffffffffffffffffffffff);\n    }\n    \n    function purchase(var arg0) {\n        var var0 = arg0;\n        var var1 = var0 >= 0x01;\n    \n        if (!var1) {\n            if (!var1) { revert(memory[0x00:0x00]); }\n        \n        label_10D2:\n            var1 = arg0;\n            var var2 = 0x00;\n            var var3 = var1 >= 0x01;\n        \n            if (!var3) {\n                if (!var3) { revert(memory[0x00:0x00]); }\n            \n            label_10F3:\n                memory[0x00:0x20] = var1;\n                memory[0x20:0x40] = 0x06;\n                var2 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n                var3 = !var2;\n            \n                if (var3) {\n                    if (!var3) { revert(memory[0x00:0x00]); }\n                \n                label_112C:\n                \n                    if (msg.value != 0x06f05b59d3b20000) { revert(memory[0x00:0x00]); }\n                \n                    var3 = 0x114a;\n                    var var4 = arg0;\n                    var var5 = msg.sender;\n                    func_131D(var4, var5);\n                    return;\n                } else if (address(this) == var2 & 0x02 ** 0xa0 - 0x01) { goto label_112C; }\n                else { revert(memory[0x00:0x00]); }\n            } else if (var1 <= 0x2710) { goto label_10F3; }\n            else { revert(memory[0x00:0x00]); }\n        } else if (var0 <= 0x2710) { goto label_10D2; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function suSquares(var arg0) returns (var arg0, var r1, var r2, var r3) {\n        r1 = 0x09;\n        r2 = arg0;\n    \n        if (r2 >= 0x2711) { assert(); }\n    \n        var temp0 = r2 * 0x04 + r1;\n        r1 = temp0;\n        var temp1 = storage[r1 + 0x01];\n        var temp2 = memory[0x40:0x60];\n        var temp3 = (temp1 & !(temp1 & 0x01) * 0x0100 + ~0x00) / 0x02;\n        memory[0x40:0x60] = temp2 + (temp3 + 0x1f) / 0x20 * 0x20 + 0x20;\n        memory[temp2:temp2 + 0x20] = temp3;\n        arg0 = storage[r1];\n        r2 = temp2;\n        var var3 = temp3;\n        r3 = r1 + 0x01;\n        var var4 = r2 + 0x20;\n        var var5 = r3;\n        var var6 = var3;\n    \n        if (!var6) {\n        label_11F1:\n            var temp4 = r1;\n            var temp5 = temp4 + 0x02;\n            var temp6 = storage[temp5];\n            var temp7 = memory[0x40:0x60];\n            var temp8 = (temp6 & !(temp6 & 0x01) * 0x0100 + ~0x00) / 0x02;\n            memory[0x40:0x60] = temp7 + (temp8 + 0x1f) / 0x20 * 0x20 + 0x20;\n            memory[temp7:temp7 + 0x20] = temp8;\n            r1 = r2;\n            r2 = temp4;\n            r3 = temp7;\n            var3 = temp5;\n            var4 = temp8;\n            var5 = r3 + 0x20;\n            var6 = var3;\n            var var7 = var4;\n        \n            if (!var7) {\n            label_1283:\n                var temp9 = r2;\n                var temp10 = temp9 + 0x03;\n                var4 = temp10;\n                var temp11 = storage[var4];\n                var temp12 = memory[0x40:0x60];\n                var temp13 = (temp11 & !(temp11 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                memory[0x40:0x60] = temp12 + (temp13 + 0x1f) / 0x20 * 0x20 + 0x20;\n                memory[temp12:temp12 + 0x20] = temp13;\n                r2 = r3;\n                r3 = temp9;\n                var3 = temp12;\n                var5 = temp13;\n                var6 = var3 + 0x20;\n                var7 = var4;\n                var var8 = var5;\n            \n                if (!var8) {\n                label_1313:\n                    r3 = var3;\n                    return arg0, r1, r2, r3;\n                } else if (0x1f < var8) {\n                    var temp14 = var6;\n                    var temp15 = temp14 + var8;\n                    var6 = temp15;\n                    memory[0x00:0x20] = var7;\n                    var temp16 = keccak256(memory[0x00:0x20]);\n                    memory[temp14:temp14 + 0x20] = storage[temp16];\n                    var7 = temp16 + 0x01;\n                    var8 = temp14 + 0x20;\n                \n                    if (var6 <= var8) { goto label_130A; }\n                \n                label_12F6:\n                    var temp17 = var7;\n                    var temp18 = var8;\n                    memory[temp18:temp18 + 0x20] = storage[temp17];\n                    var7 = temp17 + 0x01;\n                    var8 = temp18 + 0x20;\n                \n                    if (var6 > var8) { goto label_12F6; }\n                \n                label_130A:\n                    var temp19 = var6;\n                    var temp20 = temp19 + (var8 - temp19 & 0x1f);\n                    var8 = temp19;\n                    var6 = temp20;\n                    goto label_1313;\n                } else {\n                    var temp21 = var6;\n                    memory[temp21:temp21 + 0x20] = storage[var7] / 0x0100 * 0x0100;\n                    var6 = temp21 + 0x20;\n                    var8 = var8;\n                    goto label_1313;\n                }\n            } else if (0x1f < var7) {\n                var temp22 = var5;\n                var temp23 = temp22 + var7;\n                var5 = temp23;\n                memory[0x00:0x20] = var6;\n                var temp24 = keccak256(memory[0x00:0x20]);\n                memory[temp22:temp22 + 0x20] = storage[temp24];\n                var6 = temp24 + 0x01;\n                var7 = temp22 + 0x20;\n            \n                if (var5 <= var7) { goto label_127A; }\n            \n            label_1266:\n                var temp25 = var6;\n                var temp26 = var7;\n                memory[temp26:temp26 + 0x20] = storage[temp25];\n                var6 = temp25 + 0x01;\n                var7 = temp26 + 0x20;\n            \n                if (var5 > var7) { goto label_1266; }\n            \n            label_127A:\n                var temp27 = var5;\n                var temp28 = temp27 + (var7 - temp27 & 0x1f);\n                var7 = temp27;\n                var5 = temp28;\n                goto label_1283;\n            } else {\n                var temp29 = var5;\n                memory[temp29:temp29 + 0x20] = storage[var6] / 0x0100 * 0x0100;\n                var7 = var7;\n                var5 = temp29 + 0x20;\n                goto label_1283;\n            }\n        } else if (0x1f < var6) {\n            var temp30 = var4;\n            var temp31 = temp30 + var6;\n            var4 = temp31;\n            memory[0x00:0x20] = var5;\n            var temp32 = keccak256(memory[0x00:0x20]);\n            memory[temp30:temp30 + 0x20] = storage[temp32];\n            var5 = temp32 + 0x01;\n            var6 = temp30 + 0x20;\n        \n            if (var4 <= var6) { goto label_11E8; }\n        \n        label_11D4:\n            var temp33 = var5;\n            var temp34 = var6;\n            memory[temp34:temp34 + 0x20] = storage[temp33];\n            var5 = temp33 + 0x01;\n            var6 = temp34 + 0x20;\n        \n            if (var4 > var6) { goto label_11D4; }\n        \n        label_11E8:\n            var temp35 = var4;\n            var temp36 = temp35 + (var6 - temp35 & 0x1f);\n            var6 = temp35;\n            var4 = temp36;\n            goto label_11F1;\n        } else {\n            var temp37 = var4;\n            memory[temp37:temp37 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n            var4 = temp37 + 0x20;\n            var6 = var6;\n            goto label_11F1;\n        }\n    }\n    \n    function func_131D(var arg0, var arg1) {\n        var var0 = 0x00;\n        var var1 = var0;\n        var var2 = var1;\n    \n        if (!(arg1 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0;\n        memory[0x20:0x40] = 0x06;\n        var0 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n    \n        if (var0) {\n            memory[0x00:0x20] = arg0;\n            memory[0x20:0x40] = 0x08;\n            var1 = storage[keccak256(memory[0x00:0x40])];\n        \n            if (var1) {\n            label_137E:\n                var temp0 = var1 - 0x01;\n                var1 = temp0;\n                memory[0x00:0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x07;\n            \n                if (var1 == storage[keccak256(memory[0x00:0x40])] + ~0x00) {\n                label_144C:\n                    memory[0x00:0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                    memory[0x20:0x40] = 0x07;\n                    var var3 = storage[keccak256(memory[0x00:0x40])];\n                    var var4 = 0x1475;\n                    var var5 = keccak256(memory[0x00:0x40]);\n                    var var6 = var3 + ~0x00;\n                    func_1847(var5, var6);\n                    var temp1 = 0x02 ** 0xa0 - 0x01;\n                    var temp2 = arg1 & temp1;\n                    memory[0x00:0x20] = temp2;\n                    memory[0x20:0x40] = 0x07;\n                    var temp3 = keccak256(memory[0x00:0x40]);\n                    var temp4 = storage[temp3];\n                    storage[temp3] = temp4 + 0x01;\n                    memory[0x00:0x20] = temp3;\n                    var temp5 = arg0;\n                    storage[keccak256(memory[0x00:0x20]) + temp4] = temp5;\n                    memory[0x00:0x20] = temp5;\n                    memory[0x20:0x40] = 0x08;\n                    storage[keccak256(memory[0x00:0x40])] = storage[temp3];\n                    memory[0x20:0x40] = 0x06;\n                    var temp6 = keccak256(memory[0x00:0x40]);\n                    var temp7 = ~0xffffffffffffffffffffffffffffffffffffffff;\n                    storage[temp6] = temp2 | (temp7 & storage[temp6]);\n                    memory[0x20:0x40] = 0x04;\n                    var temp8 = keccak256(memory[0x00:0x40]);\n                    storage[temp8] = temp7 & storage[temp8];\n                    log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-4] & 0x02 ** 0xa0 - 0x01, stack[-5] & 0x02 ** 0xa0 - 0x01, stack[-6]]);\n                    return;\n                } else {\n                label_13A9:\n                    memory[0x00:0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                    memory[0x20:0x40] = 0x07;\n                    var3 = keccak256(memory[0x00:0x40]);\n                    var temp9 = storage[var3];\n                    var4 = temp9 + ~0x00;\n                \n                    if (var4 >= temp9) { assert(); }\n                \n                    memory[0x00:0x20] = var3;\n                    var2 = storage[keccak256(memory[0x00:0x20]) + var4];\n                \n                    if (var2 != 0x00) {\n                        memory[0x00:0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                        memory[0x20:0x40] = 0x07;\n                        var3 = var2;\n                        var4 = keccak256(memory[0x00:0x40]);\n                        var5 = var1;\n                    \n                        if (var5 >= storage[var4]) { assert(); }\n                    \n                    label_1428:\n                        memory[0x00:0x20] = var4;\n                        storage[var5 + keccak256(memory[0x00:0x20])] = var3;\n                        memory[0x00:0x20] = var2;\n                        memory[0x20:0x40] = 0x08;\n                        storage[keccak256(memory[0x00:0x40])] = var1 + 0x01;\n                        goto label_144C;\n                    } else {\n                        var temp10 = var0;\n                        memory[0x00:0x20] = temp10 & 0x02 ** 0xa0 - 0x01;\n                        memory[0x20:0x40] = 0x07;\n                        var temp11 = storage[keccak256(memory[0x00:0x40])];\n                        var2 = temp11;\n                        memory[0x00:0x20] = temp10 & 0x02 ** 0xa0 - 0x01;\n                        memory[0x20:0x40] = 0x07;\n                        var3 = var2;\n                        var4 = keccak256(memory[0x00:0x40]);\n                        var5 = var1;\n                    \n                        if (var5 < storage[var4]) { goto label_1428; }\n                        else { assert(); }\n                    }\n                }\n            } else {\n            label_1374:\n                var1 = arg0 - 0x01;\n                memory[0x00:0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x07;\n            \n                if (var1 == storage[keccak256(memory[0x00:0x40])] + ~0x00) { goto label_144C; }\n                else { goto label_13A9; }\n            }\n        } else {\n            var0 = address(this);\n            memory[0x00:0x20] = arg0;\n            memory[0x20:0x40] = 0x08;\n            var1 = storage[keccak256(memory[0x00:0x40])];\n        \n            if (var1) { goto label_137E; }\n            else { goto label_1374; }\n        }\n    }\n    \n    function safeTransferFrom(var arg0, var arg1, var arg2, var arg3) {\n        var var0 = 0x00;\n        var var1 = var0;\n        var var2 = 0x00;\n        var var3 = arg2;\n        var var4 = var3 >= 0x01;\n    \n        if (!var4) {\n            if (!var4) { revert(memory[0x00:0x00]); }\n        \n        label_153B:\n            memory[0x00:0x20] = arg2;\n            memory[0x20:0x40] = 0x06;\n            var4 = arg2;\n            var var5 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            var var6 = var5 == msg.sender;\n        \n            if (!var6) {\n                memory[0x00:0x20] = var4;\n                memory[0x20:0x40] = 0x04;\n                var6 = msg.sender == storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            \n                if (var6) { goto label_15A7; }\n                else { goto label_157F; }\n            } else if (var6) {\n            label_15A7:\n            \n                if (!var6) { revert(memory[0x00:0x00]); }\n            \n            label_15B2:\n                memory[0x00:0x20] = arg2;\n                memory[0x20:0x40] = 0x06;\n                var0 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            \n                if (var0) {\n                    var temp0 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (arg0 & temp0 != temp0 & var0) { revert(memory[0x00:0x00]); }\n                \n                label_15EF:\n                \n                    if (!(arg1 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n                \n                    var6 = 0x160e;\n                    var var7 = arg2;\n                    var var8 = arg1;\n                    func_131D(var7, var8);\n                    var1 = address(arg1).code.length;\n                \n                    if (!var1) { goto label_17BD; }\n                \n                    var6 = arg1 & 0x02 ** 0xa0 - 0x01;\n                    var7 = 0x150b7a02;\n                    var8 = msg.sender;\n                    var var9 = arg0;\n                    var var10 = arg2;\n                    var temp1 = arg3;\n                    var var11 = temp1;\n                    var temp2 = memory[0x40:0x60];\n                    memory[temp2:temp2 + 0x20] = (var7 & 0xffffffff) * 0x0100000000000000000000000000000000000000000000000000000000;\n                    var temp3 = temp2 + 0x04;\n                    var var12 = temp3;\n                    memory[var12:var12 + 0x20] = var8 & 0x02 ** 0xa0 - 0x01 & 0x02 ** 0xa0 - 0x01;\n                    var temp4 = var12 + 0x20;\n                    memory[temp4:temp4 + 0x20] = var9 & 0x02 ** 0xa0 - 0x01 & 0x02 ** 0xa0 - 0x01;\n                    var temp5 = temp4 + 0x20;\n                    memory[temp5:temp5 + 0x20] = var10;\n                    var temp6 = temp5 + 0x20;\n                    var var13 = temp6;\n                    var temp7 = var13 + 0x20;\n                    memory[var13:var13 + 0x20] = temp7 - var12;\n                    memory[temp7:temp7 + 0x20] = memory[var11:var11 + 0x20];\n                    var var14 = temp7 + 0x20;\n                    var var16 = memory[var11:var11 + 0x20];\n                    var var15 = var11 + 0x20;\n                    var var17 = var16;\n                    var var18 = var14;\n                    var var19 = var15;\n                    var var20 = 0x00;\n                \n                    if (var20 >= var17) {\n                    label_16CF:\n                        var temp8 = var16;\n                        var14 = temp8 + var14;\n                        var15 = temp8 & 0x1f;\n                    \n                        if (!var15) {\n                            var8 = var14;\n                            var9 = 0x20;\n                            var10 = memory[0x40:0x60];\n                            var11 = var8 - var10;\n                            var12 = var10;\n                            var13 = 0x00;\n                            var14 = var6;\n                            var15 = !address(var14).code.length;\n                        \n                            if (var15) { revert(memory[0x00:0x00]); }\n                        \n                        label_171E:\n                            var temp9;\n                            temp9, memory[var10:var10 + var9] = address(var14).call.gas(msg.gas).value(var13)(memory[var12:var12 + var11]);\n                            var9 = !temp9;\n                        \n                            if (!var9) {\n                                var6 = memory[0x40:0x60];\n                                var7 = returndata.length;\n                            \n                                if (var7 < 0x20) { revert(memory[0x00:0x00]); }\n                            \n                                var temp10 = memory[var6:var6 + 0x20];\n                                var temp11 = memory[0x40:0x60];\n                                memory[temp11:temp11 + 0x20] = 0x6f6e455243373231526563656976656428616464726573732c61646472657373;\n                                memory[temp11 + 0x20:temp11 + 0x20 + 0x20] = 0x2c75696e743235362c6279746573290000000000000000000000000000000000;\n                                var temp12 = memory[0x40:0x60];\n                                var2 = temp10;\n                                var temp13 = ~(0x02 ** 0xe0 - 0x01);\n                            \n                                if (keccak256(memory[temp12:temp12 + temp11 - temp12 + 0x2f]) & temp13 != var2 & temp13) { revert(memory[0x00:0x00]); }\n                            \n                            label_17BD:\n                                return;\n                            } else {\n                                var temp14 = returndata.length;\n                                memory[0x00:0x00 + temp14] = returndata[0x00:0x00 + temp14];\n                                revert(memory[0x00:0x00 + returndata.length]);\n                            }\n                        } else {\n                            var temp15 = var15;\n                            var temp16 = var14 - temp15;\n                            memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                            var8 = temp16 + 0x20;\n                            var9 = 0x20;\n                            var10 = memory[0x40:0x60];\n                            var11 = var8 - var10;\n                            var12 = var10;\n                            var13 = 0x00;\n                            var14 = var6;\n                            var15 = !address(var14).code.length;\n                        \n                            if (!var15) { goto label_171E; }\n                            else { revert(memory[0x00:0x00]); }\n                        }\n                    } else {\n                    label_16C0:\n                        var temp17 = var20;\n                        memory[temp17 + var18:temp17 + var18 + 0x20] = memory[temp17 + var19:temp17 + var19 + 0x20];\n                        var20 = temp17 + 0x20;\n                    \n                        if (var20 >= var17) { goto label_16CF; }\n                        else { goto label_16C0; }\n                    }\n                } else {\n                    var0 = address(this);\n                    var temp18 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (arg0 & temp18 == temp18 & var0) { goto label_15EF; }\n                    else { revert(memory[0x00:0x00]); }\n                }\n            } else {\n            label_157F:\n                memory[0x00:0x20] = var5 & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x05;\n                var temp19 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = temp19;\n            \n                if (storage[keccak256(memory[0x00:0x40])] & 0xff) { goto label_15B2; }\n                else { revert(memory[0x00:0x00]); }\n            }\n        } else if (var3 <= 0x2710) { goto label_153B; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function func_1843(var arg0, var arg1) returns (var r0) { return arg0; }\n    \n    function func_1847(var arg0, var arg1) {\n        var temp0 = arg0;\n        var temp1 = storage[temp0];\n        var var0 = temp1;\n        var temp2 = arg1;\n        storage[temp0] = temp2;\n    \n        if (var0 <= temp2) {\n        label_0AFE:\n            return;\n        } else {\n            memory[0x00:0x20] = arg0;\n            var temp3 = keccak256(memory[0x00:0x20]);\n            var temp4 = var0;\n            var0 = 0x0afe;\n            var var1 = 0x0707;\n            var var2 = temp3 + temp4;\n            var var3 = arg1 + temp3;\n        \n            if (var2 <= var3) {\n                var1 = func_1843(var2, var3);\n                var0 = func_0707(var1);\n                goto label_0AFE;\n            } else {\n            label_1876:\n                var temp5 = var3;\n                storage[temp5] = 0x00;\n                var3 = temp5 + 0x01;\n                var1 = func_186D(var2, var3);\n                // Error: Could not resolve method call return address!\n            }\n        }\n    }\n    \n    function func_1867(var arg0, var arg1) returns (var r0) {\n        var temp0 = arg0;\n        arg0 = 0x0707;\n        var temp1 = arg1;\n        arg1 = temp0;\n        var var0 = temp1;\n        arg0 = func_186D(arg1, var0);\n        r0 = func_0707(arg0);\n        // Error: Could not resolve method call return address!\n    }\n    \n    function func_186D(var arg0, var arg1) returns (var r0) {\n        if (arg0 <= arg1) {\n            r0 = func_1843(arg0, arg1);\n            // Error: Could not resolve method call return address!\n        } else {\n            var temp0 = arg1;\n            storage[temp0] = 0x00;\n            arg1 = temp0 + 0x01;\n            r0 = func_186D(arg0, arg1);\n            // Error: Could not resolve method call return address!\n        }\n    }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x80;\n    \n        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }\n    \n        var var0 = msg.data[0x00:0x20] / 0x0100000000000000000000000000000000000000000000000000000000 & 0xffffffff;\n    \n        if (var0 == 0x15be71) {\n            // Dispatch table entry for executiveOfficerAddress()\n            var var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0182;\n            var var2 = executiveOfficerAddress();\n        \n        label_0182:\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n            var temp1 = memory[0x40:0x60];\n            return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n        } else if (var0 == 0x01ffc9a7) {\n            // Dispatch table entry for supportsInterface(bytes4)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01c0;\n            var2 = msg.data[0x04:0x24] & ~(0x02 ** 0xe0 - 0x01);\n            var1 = supportsInterface(var2);\n        \n        label_01C0:\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = !!var1;\n            var temp3 = memory[0x40:0x60];\n            return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n        } else if (var0 == 0x05e45546) {\n            // Dispatch table entry for promoCreatedCount()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01e9;\n            var2 = promoCreatedCount();\n        \n        label_01E9:\n            var temp4 = memory[0x40:0x60];\n            memory[temp4:temp4 + 0x20] = var2;\n            var temp5 = memory[0x40:0x60];\n            return memory[temp5:temp5 + temp4 - temp5 + 0x20];\n        } else if (var0 == 0x06fdde03) {\n            // Dispatch table entry for name()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0210;\n            var1 = name();\n        \n        label_0210:\n            var temp6 = memory[0x40:0x60];\n            memory[temp6:temp6 + 0x20] = 0x20;\n            var temp7 = var1;\n            memory[temp6 + 0x20:temp6 + 0x20 + 0x20] = memory[temp7:temp7 + 0x20];\n            var2 = temp6;\n            var var3 = var2;\n            var var4 = var3 + 0x40;\n            var var6 = memory[temp7:temp7 + 0x20];\n            var var5 = temp7 + 0x20;\n            var var7 = var6;\n            var var8 = var4;\n            var var9 = var5;\n            var var10 = 0x00;\n        \n            if (var10 >= var7) {\n            label_024A:\n                var temp8 = var6;\n                var4 = temp8 + var4;\n                var5 = temp8 & 0x1f;\n            \n                if (!var5) {\n                    var temp9 = memory[0x40:0x60];\n                    return memory[temp9:temp9 + var4 - temp9];\n                } else {\n                    var temp10 = var5;\n                    var temp11 = var4 - temp10;\n                    memory[temp11:temp11 + 0x20] = ~(0x0100 ** (0x20 - temp10) - 0x01) & memory[temp11:temp11 + 0x20];\n                    var temp12 = memory[0x40:0x60];\n                    return memory[temp12:temp12 + (temp11 + 0x20) - temp12];\n                }\n            } else {\n            label_023B:\n                var temp13 = var10;\n                memory[temp13 + var8:temp13 + var8 + 0x20] = memory[temp13 + var9:temp13 + var9 + 0x20];\n                var10 = temp13 + 0x20;\n            \n                if (var10 >= var7) { goto label_024A; }\n                else { goto label_023B; }\n            }\n        } else if (var0 == 0x081812fc) {\n            // Dispatch table entry for getApproved(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0182;\n            var2 = msg.data[0x04:0x24];\n            var1 = getApproved(var2);\n            goto label_0182;\n        } else if (var0 == 0x095ea7b3) {\n            // Dispatch table entry for approve(address,uint256)\n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            var3 = msg.data[0x24:0x44];\n            approve(var2, var3);\n            stop();\n        } else if (var0 == 0x133252a6) {\n            // Dispatch table entry for grantToken(uint256,address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44] & 0x02 ** 0xa0 - 0x01;\n            grantToken(var2, var3);\n            stop();\n        } else if (var0 == 0x18160ddd) {\n            // Dispatch table entry for totalSupply()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01e9;\n            var1 = totalSupply();\n            goto label_01E9;\n        } else if (var0 == 0x23b872dd) {\n            // Dispatch table entry for transferFrom(address,address,uint256)\n            var1 = 0x02b4;\n            var temp14 = 0x02 ** 0xa0 - 0x01;\n            var2 = temp14 & msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44] & temp14;\n            var4 = msg.data[0x44:0x64];\n            transferFrom(var2, var3, var4);\n            stop();\n        } else if (var0 == 0x2aad292e) {\n            // Dispatch table entry for setOperatingOfficer(address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            setOperatingOfficer(var2);\n            stop();\n        } else if (var0 == 0x2f745c59) {\n            // Dispatch table entry for tokenOfOwnerByIndex(address,uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01e9;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            var3 = msg.data[0x24:0x44];\n            var1 = tokenOfOwnerByIndex(var2, var3);\n            goto label_01E9;\n        } else if (var0 == 0x42842e0e) {\n            // Dispatch table entry for safeTransferFrom(address,address,uint256)\n            var1 = 0x02b4;\n            var temp15 = 0x02 ** 0xa0 - 0x01;\n            var2 = temp15 & msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44] & temp15;\n            var4 = msg.data[0x44:0x64];\n            var5 = 0x0afe;\n            var6 = var2;\n            var7 = var3;\n            var8 = var4;\n            var temp16 = memory[0x40:0x60];\n            var9 = temp16;\n            memory[0x40:0x60] = var9 + 0x20;\n            memory[var9:var9 + 0x20] = 0x00;\n            safeTransferFrom(var6, var7, var8, var9);\n            // Error: Could not resolve jump destination!\n        } else if (var0 == 0x4f6ccce7) {\n            // Dispatch table entry for tokenByIndex(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01e9;\n            var2 = msg.data[0x04:0x24];\n            var1 = tokenByIndex(var2);\n            goto label_01E9;\n        } else if (var0 == 0x5fd8c710) {\n            // Dispatch table entry for withdrawBalance()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            withdrawBalance();\n            stop();\n        } else if (var0 == 0x6352211e) {\n            // Dispatch table entry for ownerOf(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0182;\n            var2 = msg.data[0x04:0x24];\n            var1 = ownerOf(var2);\n            goto label_0182;\n        } else if (var0 == 0x6bfa5edc) {\n            // Dispatch table entry for operatingOfficerAddress()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0182;\n            var2 = operatingOfficerAddress();\n            goto label_0182;\n        } else if (var0 == 0x70a08231) {\n            // Dispatch table entry for balanceOf(address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01e9;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            var1 = balanceOf(var2);\n            goto label_01E9;\n        } else if (var0 == 0x76f14c98) {\n            // Dispatch table entry for personalizeSquare(uint256,bytes,string,string)\n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24];\n            var temp17 = msg.data[0x24:0x44];\n            var3 = temp17 + 0x24;\n            var4 = msg.data[temp17 + 0x04:temp17 + 0x04 + 0x20];\n            var temp18 = msg.data[0x44:0x64];\n            var5 = temp18 + 0x24;\n            var6 = msg.data[temp18 + 0x04:temp18 + 0x04 + 0x20];\n            var temp19 = msg.data[0x64:0x84];\n            var7 = temp19 + 0x24;\n            var8 = msg.data[temp19 + 0x04:temp19 + 0x04 + 0x20];\n            memory[0x00:0x20] = var2;\n            memory[0x20:0x40] = 0x06;\n            var9 = var2;\n            var10 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n        \n            if (var10 != msg.sender) { revert(memory[0x00:0x00]); }\n        \n            if (var6 > 0x40) { revert(memory[0x00:0x00]); }\n        \n            if (var8 > 0x60) { revert(memory[0x00:0x00]); }\n        \n            if (var4 != 0x012c) { revert(memory[0x00:0x00]); }\n        \n            var var11 = 0x09;\n            var var12 = var2;\n        \n            if (var12 >= 0x2711) { assert(); }\n        \n            var temp20 = var12 * 0x04 + var11;\n            storage[temp20] = storage[temp20] + 0x01;\n            var11 = var3;\n            var12 = var4;\n            var var13 = 0x09;\n            var var14 = var2;\n        \n            if (var14 >= 0x2711) { assert(); }\n        \n            var temp21 = var11;\n            var temp22 = var12;\n            var11 = 0x0c87;\n            var12 = var14 * 0x04 + var13 + 0x01;\n            var14 = temp22;\n            var13 = temp21;\n            var temp23 = var12;\n            var temp24 = storage[temp23];\n            memory[0x00:0x20] = temp23;\n            var var15 = keccak256(memory[0x00:0x20]);\n            var temp25 = var13;\n            var13 = var15 + ((!(temp24 & 0x01) * 0x0100 - 0x01 & temp24) / 0x02 + 0x1f) / 0x20;\n            var var16 = temp25;\n        \n            if (0x1f < var14) {\n                var temp26 = var14;\n                storage[var12] = temp26 + temp26 + 0x01;\n            \n                if (!temp26) {\n                label_1837:\n                    var temp27 = var13;\n                    var13 = 0x1843;\n                    var14 = temp27;\n                    var13 = func_1867(var14, var15);\n                    var11 = func_1843(var12, var13);\n                    // Error: Could not resolve method call return address!\n                } else {\n                    var temp28 = var14;\n                    var temp29 = var16;\n                    var14 = temp29;\n                    var16 = var14 + temp28;\n                \n                    if (var16 <= var14) { goto label_1837; }\n                \n                label_1825:\n                    var temp30 = var14;\n                    var temp31 = var15;\n                    storage[temp31] = msg.data[temp30:temp30 + 0x20];\n                    var14 = temp30 + 0x20;\n                    var16 = var16;\n                    var15 = temp31 + 0x01;\n                \n                    if (var16 <= var14) { goto label_1837; }\n                    else { goto label_1825; }\n                }\n            } else {\n                var temp32 = var14;\n                storage[var12] = (msg.data[var16:var16 + 0x20] & ~0xff) | temp32 + temp32;\n                goto label_1837;\n            }\n        } else if (var0 == 0x95d89b41) {\n            // Dispatch table entry for symbol()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0210;\n            var1 = symbol();\n            goto label_0210;\n        } else if (var0 == 0xa22cb465) {\n            // Dispatch table entry for setApprovalForAll(address,bool)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            var3 = !!msg.data[0x24:0x44];\n            setApprovalForAll(var2, var3);\n            stop();\n        } else if (var0 == 0xabe088a7) {\n            // Dispatch table entry for financialOfficerAddress()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0182;\n            var2 = financialOfficerAddress();\n            goto label_0182;\n        } else if (var0 == 0xb88d4fde) {\n            // Dispatch table entry for safeTransferFrom(address,address,uint256,bytes)\n            var1 = 0x02b4;\n            var temp33 = 0x02 ** 0xa0 - 0x01;\n            var2 = temp33 & msg.data[0x04:0x24];\n            var3 = temp33 & msg.data[0x24:0x44];\n            var4 = msg.data[0x44:0x64];\n            var temp34 = msg.data[0x64:0x84];\n            var5 = temp34 + 0x24;\n            var6 = msg.data[temp34 + 0x04:temp34 + 0x04 + 0x20];\n            var7 = 0x08e7;\n            var8 = var2;\n            var9 = var3;\n            var10 = var4;\n            var temp35 = var6;\n            var temp36 = memory[0x40:0x60];\n            memory[0x40:0x60] = temp36 + (temp35 + 0x1f) / 0x20 * 0x20 + 0x20;\n            var11 = temp36;\n            memory[var11:var11 + 0x20] = temp35;\n            memory[var11 + 0x20:var11 + 0x20 + temp35] = msg.data[var5:var5 + temp35];\n            safeTransferFrom(var8, var9, var10, var11);\n            // Error: Could not resolve jump destination!\n        } else if (var0 == 0xc87b56dd) {\n            // Dispatch table entry for tokenURI(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0210;\n            var2 = msg.data[0x04:0x24];\n            var1 = tokenURI(var2);\n            goto label_0210;\n        } else if (var0 == 0xd978a0d3) {\n            // Dispatch table entry for setFinancialOfficer(address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            setFinancialOfficer(var2);\n            stop();\n        } else if (var0 == 0xe985e9c5) {\n            // Dispatch table entry for isApprovedForAll(address,address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x01c0;\n            var temp37 = 0x02 ** 0xa0 - 0x01;\n            var2 = temp37 & msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44] & temp37;\n            var1 = isApprovedForAll(var2, var3);\n            goto label_01C0;\n        } else if (var0 == 0xec13df6b) {\n            // Dispatch table entry for setExecutiveOfficer(address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            setExecutiveOfficer(var2);\n            stop();\n        } else if (var0 == 0xefef39a1) {\n            // Dispatch table entry for purchase(uint256)\n            var1 = 0x02b4;\n            var2 = msg.data[0x04:0x24];\n            purchase(var2);\n            stop();\n        } else if (var0 == 0xffa6ab44) {\n            // Dispatch table entry for suSquares(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0538;\n            var2 = msg.data[0x04:0x24];\n            var2, var3, var4, var5 = suSquares(var2);\n            var temp38 = memory[0x40:0x60];\n            var6 = temp38;\n            memory[var6:var6 + 0x20] = var2;\n            var temp39 = var6 + 0x20;\n            var7 = temp39;\n            var8 = var7 + 0x20;\n            var9 = var8 + 0x20;\n            var temp40 = var9 + 0x20;\n            memory[var7:var7 + 0x20] = temp40 - var6;\n            var temp41 = var3;\n            memory[temp40:temp40 + 0x20] = memory[temp41:temp41 + 0x20];\n            var10 = temp40 + 0x20;\n            var12 = memory[temp41:temp41 + 0x20];\n            var11 = temp41 + 0x20;\n            var13 = var12;\n            var14 = var10;\n            var15 = var11;\n            var16 = 0x00;\n        \n            if (var16 >= var13) {\n            label_0583:\n                var temp42 = var12;\n                var10 = temp42 + var10;\n                var11 = temp42 & 0x1f;\n            \n                if (!var11) {\n                    var temp43 = var10;\n                    memory[var8:var8 + 0x20] = temp43 - var6;\n                    var temp44 = var4;\n                    memory[temp43:temp43 + 0x20] = memory[temp44:temp44 + 0x20];\n                    var10 = temp43 + 0x20;\n                    var11 = temp44 + 0x20;\n                    var12 = memory[temp44:temp44 + 0x20];\n                    var13 = var12;\n                    var14 = var10;\n                    var15 = var11;\n                    var16 = 0x00;\n                \n                    if (var16 >= var13) {\n                    label_05E3:\n                        var temp45 = var12;\n                        var10 = temp45 + var10;\n                        var11 = temp45 & 0x1f;\n                    \n                        if (!var11) {\n                            var temp46 = var10;\n                            memory[var9:var9 + 0x20] = temp46 - var6;\n                            var temp47 = var5;\n                            memory[temp46:temp46 + 0x20] = memory[temp47:temp47 + 0x20];\n                            var10 = temp46 + 0x20;\n                            var11 = temp47 + 0x20;\n                            var12 = memory[temp47:temp47 + 0x20];\n                            var13 = var12;\n                            var14 = var10;\n                            var15 = var11;\n                            var16 = 0x00;\n                        \n                            if (var16 >= var13) {\n                            label_0643:\n                                var temp48 = var12;\n                                var10 = temp48 + var10;\n                                var11 = temp48 & 0x1f;\n                            \n                                if (!var11) {\n                                    var temp49 = memory[0x40:0x60];\n                                    return memory[temp49:temp49 + var10 - temp49];\n                                } else {\n                                    var temp50 = var11;\n                                    var temp51 = var10 - temp50;\n                                    memory[temp51:temp51 + 0x20] = ~(0x0100 ** (0x20 - temp50) - 0x01) & memory[temp51:temp51 + 0x20];\n                                    var temp52 = memory[0x40:0x60];\n                                    return memory[temp52:temp52 + (temp51 + 0x20) - temp52];\n                                }\n                            } else {\n                            label_0634:\n                                var temp53 = var16;\n                                memory[temp53 + var14:temp53 + var14 + 0x20] = memory[temp53 + var15:temp53 + var15 + 0x20];\n                                var16 = temp53 + 0x20;\n                            \n                                if (var16 >= var13) { goto label_0643; }\n                                else { goto label_0634; }\n                            }\n                        } else {\n                            var temp54 = var11;\n                            var temp55 = var10 - temp54;\n                            memory[temp55:temp55 + 0x20] = ~(0x0100 ** (0x20 - temp54) - 0x01) & memory[temp55:temp55 + 0x20];\n                            var temp56 = temp55 + 0x20;\n                            memory[var9:var9 + 0x20] = temp56 - var6;\n                            var temp57 = var5;\n                            memory[temp56:temp56 + 0x20] = memory[temp57:temp57 + 0x20];\n                            var10 = temp56 + 0x20;\n                            var12 = memory[temp57:temp57 + 0x20];\n                            var11 = temp57 + 0x20;\n                            var13 = var12;\n                            var14 = var10;\n                            var15 = var11;\n                            var16 = 0x00;\n                        \n                            if (var16 >= var13) { goto label_0643; }\n                            else { goto label_0634; }\n                        }\n                    } else {\n                    label_05D4:\n                        var temp58 = var16;\n                        memory[temp58 + var14:temp58 + var14 + 0x20] = memory[temp58 + var15:temp58 + var15 + 0x20];\n                        var16 = temp58 + 0x20;\n                    \n                        if (var16 >= var13) { goto label_05E3; }\n                        else { goto label_05D4; }\n                    }\n                } else {\n                    var temp59 = var11;\n                    var temp60 = var10 - temp59;\n                    memory[temp60:temp60 + 0x20] = ~(0x0100 ** (0x20 - temp59) - 0x01) & memory[temp60:temp60 + 0x20];\n                    var temp61 = temp60 + 0x20;\n                    memory[var8:var8 + 0x20] = temp61 - var6;\n                    var temp62 = var4;\n                    memory[temp61:temp61 + 0x20] = memory[temp62:temp62 + 0x20];\n                    var10 = temp61 + 0x20;\n                    var12 = memory[temp62:temp62 + 0x20];\n                    var11 = temp62 + 0x20;\n                    var13 = var12;\n                    var14 = var10;\n                    var15 = var11;\n                    var16 = 0x00;\n                \n                    if (var16 >= var13) { goto label_05E3; }\n                    else { goto label_05D4; }\n                }\n            } else {\n            label_0574:\n                var temp63 = var16;\n                memory[temp63 + var14:temp63 + var14 + 0x20] = memory[temp63 + var15:temp63 + var15 + 0x20];\n                var16 = temp63 + 0x20;\n            \n                if (var16 >= var13) { goto label_0583; }\n                else { goto label_0574; }\n            }\n        } else { revert(memory[0x00:0x00]); }\n    }\n    \n    function executiveOfficerAddress() returns (var r0) { return storage[0x00] & 0x02 ** 0xa0 - 0x01; }\n    \n    function supportsInterface(var arg0) returns (var r0) {\n        var var0 = 0x00;\n        memory[var0:var0 + 0x20] = arg0 & ~(0x02 ** 0xe0 - 0x01);\n        memory[0x20:0x40] = 0x03;\n        var var1 = storage[keccak256(memory[var0:var0 + 0x40])] & 0xff;\n    \n        if (!var1) { return var1; }\n    \n        var temp0 = ~(0x02 ** 0xe0 - 0x01);\n        return arg0 & temp0 != temp0;\n    }\n    \n    function promoCreatedCount() returns (var r0) { return storage[0x9c4d]; }\n    \n    function name() returns (var r0) {\n        var temp0 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp0 + 0x40;\n        memory[temp0:temp0 + 0x20] = 0x0a;\n        memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = 0x5375205371756172657300000000000000000000000000000000000000000000;\n        return temp0;\n    }\n    \n    function func_0707(var arg0) returns (var r0) { return arg0; }\n    \n    function getApproved(var arg0) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = arg0;\n        var var2 = var1 >= 0x01;\n    \n        if (!var2) {\n            if (!var2) { revert(memory[0x00:0x00]); }\n        \n        label_072B:\n            memory[0x00:0x20] = arg0;\n            memory[0x20:0x40] = 0x04;\n            return storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n        } else if (var1 <= 0x2710) { goto label_072B; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function approve(var arg0, var arg1) {\n        var var0 = 0x00;\n        memory[var0:var0 + 0x20] = arg1;\n        memory[0x20:0x40] = 0x06;\n        var var1 = arg1;\n        var var2 = storage[keccak256(memory[var0:var0 + 0x40])] & 0x02 ** 0xa0 - 0x01;\n        var var3 = var2 == msg.sender;\n    \n        if (!var3) {\n            memory[0x00:0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n            memory[0x20:0x40] = 0x05;\n            var temp8 = keccak256(memory[0x00:0x40]);\n            memory[0x00:0x20] = msg.sender;\n            memory[0x20:0x40] = temp8;\n        \n            if (storage[keccak256(memory[0x00:0x40])] & 0xff) { goto label_07A2; }\n            else { revert(memory[0x00:0x00]); }\n        } else if (var3) {\n        label_07A2:\n            memory[0x00:0x20] = arg1;\n            memory[0x20:0x40] = 0x06;\n            var0 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n        \n            if (var0) {\n                var temp0 = arg1;\n                memory[0x00:0x20] = temp0;\n                memory[0x20:0x40] = 0x04;\n                var temp1 = keccak256(memory[0x00:0x40]);\n                var temp2 = 0x02 ** 0xa0 - 0x01;\n                var temp3 = temp2 & arg0;\n                storage[temp1] = temp3 | (storage[temp1] & ~0xffffffffffffffffffffffffffffffffffffffff);\n                log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, stack[-3] & 0x02 ** 0xa0 - 0x01, stack[-5] & 0x02 ** 0xa0 - 0x01, stack[-4]]);\n                return;\n            } else {\n                var temp4 = arg1;\n                memory[0x00:0x20] = temp4;\n                memory[0x20:0x40] = 0x04;\n                var temp5 = keccak256(memory[0x00:0x40]);\n                var temp6 = 0x02 ** 0xa0 - 0x01;\n                var temp7 = temp6 & arg0;\n                storage[temp5] = temp7 | (storage[temp5] & ~0xffffffffffffffffffffffffffffffffffffffff);\n                log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, address(this), stack[-5] & 0x02 ** 0xa0 - 0x01, stack[-4]]);\n                return;\n            }\n        } else { revert(memory[0x00:0x00]); }\n    }\n    \n    function grantToken(var arg0, var arg1) {\n        if (msg.sender != storage[0x02] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        var var0 = arg0;\n        var var1 = var0 >= 0x01;\n    \n        if (!var1) {\n            if (!var1) { revert(memory[0x00:0x00]); }\n        \n        label_0868:\n            var1 = arg0;\n            var var2 = 0x00;\n            var var3 = var1 >= 0x01;\n        \n            if (!var3) {\n                if (!var3) { revert(memory[0x00:0x00]); }\n            \n            label_0889:\n                memory[0x00:0x20] = var1;\n                memory[0x20:0x40] = 0x06;\n                var2 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n                var3 = !var2;\n            \n                if (var3) {\n                    if (!var3) { revert(memory[0x00:0x00]); }\n                \n                label_08C2:\n                \n                    if (0x1388 <= storage[0x9c4d]) { revert(memory[0x00:0x00]); }\n                \n                    storage[0x9c4d] = storage[0x9c4d] + 0x01;\n                    var3 = 0x08e7;\n                    var var4 = arg0;\n                    var var5 = arg1;\n                    func_131D(var4, var5);\n                    return;\n                } else if (address(this) == var2 & 0x02 ** 0xa0 - 0x01) { goto label_08C2; }\n                else { revert(memory[0x00:0x00]); }\n            } else if (var1 <= 0x2710) { goto label_0889; }\n            else { revert(memory[0x00:0x00]); }\n        } else if (var0 <= 0x2710) { goto label_0868; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function totalSupply() returns (var r0) { return 0x2710; }\n    \n    function transferFrom(var arg0, var arg1, var arg2) {\n        var var0 = 0x00;\n        var var1 = arg2;\n        var var2 = var1 >= 0x01;\n    \n        if (!var2) {\n            if (!var2) { revert(memory[0x00:0x00]); }\n        \n        label_0915:\n            memory[0x00:0x20] = arg2;\n            memory[0x20:0x40] = 0x06;\n            var2 = arg2;\n            var var3 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            var var4 = var3 == msg.sender;\n        \n            if (!var4) {\n                memory[0x00:0x20] = var2;\n                memory[0x20:0x40] = 0x04;\n                var4 = msg.sender == storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            \n                if (var4) { goto label_0981; }\n                else { goto label_0959; }\n            } else if (var4) {\n            label_0981:\n            \n                if (!var4) { revert(memory[0x00:0x00]); }\n            \n            label_098C:\n                memory[0x00:0x20] = arg2;\n                memory[0x20:0x40] = 0x06;\n                var0 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            \n                if (var0) {\n                    var temp0 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (arg0 & temp0 != temp0 & var0) { revert(memory[0x00:0x00]); }\n                \n                label_09C9:\n                \n                    if (!(arg1 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n                \n                    var4 = 0x09e8;\n                    var var5 = arg2;\n                    var var6 = arg1;\n                    func_131D(var5, var6);\n                    return;\n                } else {\n                    var0 = address(this);\n                    var temp1 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (arg0 & temp1 == temp1 & var0) { goto label_09C9; }\n                    else { revert(memory[0x00:0x00]); }\n                }\n            } else {\n            label_0959:\n                memory[0x00:0x20] = var3 & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x05;\n                var temp2 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = temp2;\n            \n                if (storage[keccak256(memory[0x00:0x40])] & 0xff) { goto label_098C; }\n                else { revert(memory[0x00:0x00]); }\n            }\n        } else if (var1 <= 0x2710) { goto label_0915; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function setOperatingOfficer(var arg0) {\n        if (msg.sender != storage[0x00] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        if (!(arg0 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        storage[0x02] = (arg0 & 0x02 ** 0xa0 - 0x01) | (storage[0x02] & ~0xffffffffffffffffffffffffffffffffffffffff);\n    }\n    \n    function tokenOfOwnerByIndex(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n    \n        if (!(arg0 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0 & 0x02 ** 0xa0 - 0x01;\n        memory[0x20:0x40] = 0x07;\n    \n        if (arg1 >= storage[keccak256(memory[0x00:0x40])]) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0 & 0x02 ** 0xa0 - 0x01;\n        memory[0x20:0x40] = 0x07;\n        var var1 = keccak256(memory[0x00:0x40]);\n        var var2 = arg1;\n    \n        if (var2 >= storage[var1]) { assert(); }\n    \n        memory[0x00:0x20] = var1;\n        var0 = storage[keccak256(memory[0x00:0x20]) + var2];\n    \n        if (arg0 & 0x02 ** 0xa0 - 0x01 != address(this)) {\n        label_06C5:\n            return var0;\n        } else if (var0) { goto label_06C5; }\n        else { return arg1 + 0x01; }\n    }\n    \n    function tokenByIndex(var arg0) returns (var r0) {\n        var var0 = 0x00;\n    \n        if (arg0 < 0x2710) { return arg0 + 0x01; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function withdrawBalance() {\n        if (msg.sender != storage[0x01] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        var temp0 = memory[0x40:0x60];\n        var temp1 = address(this).balance;\n        var temp2;\n        temp2, memory[temp0:temp0 + 0x00] = address(storage[0x01] & 0x02 ** 0xa0 - 0x01).call.gas(!temp1 * 0x08fc).value(temp1)(memory[temp0:temp0 + 0x00]);\n        var var0 = !temp2;\n    \n        if (!var0) { return; }\n    \n        var temp3 = returndata.length;\n        memory[0x00:0x00 + temp3] = returndata[0x00:0x00 + temp3];\n        revert(memory[0x00:0x00 + returndata.length]);\n    }\n    \n    function ownerOf(var arg0) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = arg0;\n        var var2 = var1 >= 0x01;\n    \n        if (!var2) {\n            if (!var2) { revert(memory[0x00:0x00]); }\n        \n        label_0B8F:\n            memory[0x00:0x20] = arg0;\n            memory[0x20:0x40] = 0x06;\n            var0 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n        \n            if (var0) { return var0; }\n            else { return address(this); }\n        } else if (var1 <= 0x2710) { goto label_0B8F; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function operatingOfficerAddress() returns (var r0) { return storage[0x02] & 0x02 ** 0xa0 - 0x01; }\n    \n    function balanceOf(var arg0) returns (var r0) {\n        var var0 = 0x00;\n    \n        if (!(arg0 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0 & 0x02 ** 0xa0 - 0x01;\n        memory[0x20:0x40] = 0x07;\n        return storage[keccak256(memory[0x00:0x40])];\n    }\n    \n    function symbol() returns (var r0) {\n        var temp0 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp0 + 0x40;\n        memory[temp0:temp0 + 0x20] = 0x02;\n        memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = 0x5355000000000000000000000000000000000000000000000000000000000000;\n        return temp0;\n    }\n    \n    function setApprovalForAll(var arg0, var arg1) {\n        var temp0 = msg.sender;\n        memory[0x00:0x20] = temp0;\n        memory[0x20:0x40] = 0x05;\n        var temp1 = keccak256(memory[0x00:0x40]);\n        var temp2 = arg0 & 0x02 ** 0xa0 - 0x01;\n        memory[0x00:0x20] = temp2;\n        memory[0x20:0x40] = temp1;\n        var temp3 = keccak256(memory[0x00:0x40]);\n        var temp4 = !!arg1;\n        storage[temp3] = temp4 | (storage[temp3] & ~0xff);\n        var temp5 = memory[0x40:0x60];\n        memory[temp5:temp5 + 0x20] = temp4;\n        var temp6 = memory[0x40:0x60];\n        log(memory[temp6:temp6 + temp5 - temp6 + 0x20], [0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, msg.sender, stack[-2] & 0x02 ** 0xa0 - 0x01]);\n    }\n    \n    function financialOfficerAddress() returns (var r0) { return storage[0x01] & 0x02 ** 0xa0 - 0x01; }\n    \n    function tokenURI(var arg0) returns (var r0) {\n        var var0 = 0x60;\n        var var1 = var0;\n        var var2 = arg0;\n        var var3 = var2 >= 0x01;\n    \n        if (!var3) {\n            if (!var3) { revert(memory[0x00:0x00]); }\n        \n        label_0E50:\n            var temp0 = memory[0x40:0x60];\n            memory[0x40:0x60] = temp0 + 0x60;\n            memory[temp0:temp0 + 0x20] = 0x2b;\n            memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = 0x68747470733a2f2f74656e74686f7573616e6473752e636f6d2f657263373231;\n            memory[temp0 + 0x40:temp0 + 0x40 + 0x20] = 0x2f30303030302e6a736f6e000000000000000000000000000000000000000000;\n            var0 = temp0;\n            var1 = var0;\n            var temp1 = arg0;\n            memory[var1 + 0x41:var1 + 0x41 + 0x01] = byte((temp1 / 0x2710 % 0x0a + 0x30) * 0x02 ** 0xf8 & 0xff00000000000000000000000000000000000000000000000000000000000000, 0x00);\n            var3 = (temp1 / 0x03e8 % 0x0a + 0x30) * 0x02 ** 0xf8;\n            var var4 = var1;\n            var var5 = 0x22;\n        \n            if (var5 >= memory[var4:var4 + 0x20]) { assert(); }\n        \n            memory[var4 + 0x20 + var5:var4 + 0x20 + var5 + 0x01] = byte(var3 & ~(0x02 ** 0xf8 - 0x01), 0x00);\n            var3 = (arg0 / 0x64 % 0x0a + 0x30) * 0x02 ** 0xf8;\n            var4 = var1;\n            var5 = 0x23;\n        \n            if (var5 >= memory[var4:var4 + 0x20]) { assert(); }\n        \n            memory[var4 + 0x20 + var5:var4 + 0x20 + var5 + 0x01] = byte(var3 & ~(0x02 ** 0xf8 - 0x01), 0x00);\n            var3 = (arg0 / 0x0a % 0x0a + 0x30) * 0x02 ** 0xf8;\n            var4 = var1;\n            var5 = 0x24;\n        \n            if (var5 >= memory[var4:var4 + 0x20]) { assert(); }\n        \n            memory[var4 + 0x20 + var5:var4 + 0x20 + var5 + 0x01] = byte(var3 & ~(0x02 ** 0xf8 - 0x01), 0x00);\n            var3 = (arg0 % 0x0a + 0x30) * 0x02 ** 0xf8;\n            var4 = var1;\n            var5 = 0x25;\n        \n            if (var5 >= memory[var4:var4 + 0x20]) { assert(); }\n        \n            memory[var4 + 0x20 + var5:var4 + 0x20 + var5 + 0x01] = byte(var3 & ~(0x02 ** 0xf8 - 0x01), 0x00);\n            return var0;\n        } else if (var2 <= 0x2710) { goto label_0E50; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function setFinancialOfficer(var arg0) {\n        if (msg.sender != storage[0x00] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        if (!(arg0 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        storage[0x01] = (arg0 & 0x02 ** 0xa0 - 0x01) | (storage[0x01] & ~0xffffffffffffffffffffffffffffffffffffffff);\n    }\n    \n    function isApprovedForAll(var arg0, var arg1) returns (var r0) {\n        var temp0 = 0x02 ** 0xa0 - 0x01;\n        memory[0x00:0x20] = temp0 & arg0;\n        memory[0x20:0x40] = 0x05;\n        var temp1 = keccak256(memory[0x00:0x40]);\n        memory[0x00:0x20] = temp0 & arg1;\n        memory[0x20:0x40] = temp1;\n        return storage[keccak256(memory[0x00:0x40])] & 0xff;\n    }\n    \n    function setExecutiveOfficer(var arg0) {\n        if (msg.sender != storage[0x00] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        if (!(arg0 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        storage[0x00] = (arg0 & 0x02 ** 0xa0 - 0x01) | (storage[0x00] & ~0xffffffffffffffffffffffffffffffffffffffff);\n    }\n    \n    function purchase(var arg0) {\n        var var0 = arg0;\n        var var1 = var0 >= 0x01;\n    \n        if (!var1) {\n            if (!var1) { revert(memory[0x00:0x00]); }\n        \n        label_10D2:\n            var1 = arg0;\n            var var2 = 0x00;\n            var var3 = var1 >= 0x01;\n        \n            if (!var3) {\n                if (!var3) { revert(memory[0x00:0x00]); }\n            \n            label_10F3:\n                memory[0x00:0x20] = var1;\n                memory[0x20:0x40] = 0x06;\n                var2 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n                var3 = !var2;\n            \n                if (var3) {\n                    if (!var3) { revert(memory[0x00:0x00]); }\n                \n                label_112C:\n                \n                    if (msg.value != 0x06f05b59d3b20000) { revert(memory[0x00:0x00]); }\n                \n                    var3 = 0x114a;\n                    var var4 = arg0;\n                    var var5 = msg.sender;\n                    func_131D(var4, var5);\n                    return;\n                } else if (address(this) == var2 & 0x02 ** 0xa0 - 0x01) { goto label_112C; }\n                else { revert(memory[0x00:0x00]); }\n            } else if (var1 <= 0x2710) { goto label_10F3; }\n            else { revert(memory[0x00:0x00]); }\n        } else if (var0 <= 0x2710) { goto label_10D2; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function suSquares(var arg0) returns (var arg0, var r1, var r2, var r3) {\n        r1 = 0x09;\n        r2 = arg0;\n    \n        if (r2 >= 0x2711) { assert(); }\n    \n        var temp0 = r2 * 0x04 + r1;\n        r1 = temp0;\n        var temp1 = storage[r1 + 0x01];\n        var temp2 = memory[0x40:0x60];\n        var temp3 = (temp1 & !(temp1 & 0x01) * 0x0100 + ~0x00) / 0x02;\n        memory[0x40:0x60] = temp2 + (temp3 + 0x1f) / 0x20 * 0x20 + 0x20;\n        memory[temp2:temp2 + 0x20] = temp3;\n        arg0 = storage[r1];\n        r2 = temp2;\n        var var3 = temp3;\n        r3 = r1 + 0x01;\n        var var4 = r2 + 0x20;\n        var var5 = r3;\n        var var6 = var3;\n    \n        if (!var6) {\n        label_11F1:\n            var temp4 = r1;\n            var temp5 = temp4 + 0x02;\n            var temp6 = storage[temp5];\n            var temp7 = memory[0x40:0x60];\n            var temp8 = (temp6 & !(temp6 & 0x01) * 0x0100 + ~0x00) / 0x02;\n            memory[0x40:0x60] = temp7 + (temp8 + 0x1f) / 0x20 * 0x20 + 0x20;\n            memory[temp7:temp7 + 0x20] = temp8;\n            r1 = r2;\n            r2 = temp4;\n            r3 = temp7;\n            var3 = temp5;\n            var4 = temp8;\n            var5 = r3 + 0x20;\n            var6 = var3;\n            var var7 = var4;\n        \n            if (!var7) {\n            label_1283:\n                var temp9 = r2;\n                var temp10 = temp9 + 0x03;\n                var4 = temp10;\n                var temp11 = storage[var4];\n                var temp12 = memory[0x40:0x60];\n                var temp13 = (temp11 & !(temp11 & 0x01) * 0x0100 + ~0x00) / 0x02;\n                memory[0x40:0x60] = temp12 + (temp13 + 0x1f) / 0x20 * 0x20 + 0x20;\n                memory[temp12:temp12 + 0x20] = temp13;\n                r2 = r3;\n                r3 = temp9;\n                var3 = temp12;\n                var5 = temp13;\n                var6 = var3 + 0x20;\n                var7 = var4;\n                var var8 = var5;\n            \n                if (!var8) {\n                label_1313:\n                    r3 = var3;\n                    return arg0, r1, r2, r3;\n                } else if (0x1f < var8) {\n                    var temp14 = var6;\n                    var temp15 = temp14 + var8;\n                    var6 = temp15;\n                    memory[0x00:0x20] = var7;\n                    var temp16 = keccak256(memory[0x00:0x20]);\n                    memory[temp14:temp14 + 0x20] = storage[temp16];\n                    var7 = temp16 + 0x01;\n                    var8 = temp14 + 0x20;\n                \n                    if (var6 <= var8) { goto label_130A; }\n                \n                label_12F6:\n                    var temp17 = var7;\n                    var temp18 = var8;\n                    memory[temp18:temp18 + 0x20] = storage[temp17];\n                    var7 = temp17 + 0x01;\n                    var8 = temp18 + 0x20;\n                \n                    if (var6 > var8) { goto label_12F6; }\n                \n                label_130A:\n                    var temp19 = var6;\n                    var temp20 = temp19 + (var8 - temp19 & 0x1f);\n                    var8 = temp19;\n                    var6 = temp20;\n                    goto label_1313;\n                } else {\n                    var temp21 = var6;\n                    memory[temp21:temp21 + 0x20] = storage[var7] / 0x0100 * 0x0100;\n                    var6 = temp21 + 0x20;\n                    var8 = var8;\n                    goto label_1313;\n                }\n            } else if (0x1f < var7) {\n                var temp22 = var5;\n                var temp23 = temp22 + var7;\n                var5 = temp23;\n                memory[0x00:0x20] = var6;\n                var temp24 = keccak256(memory[0x00:0x20]);\n                memory[temp22:temp22 + 0x20] = storage[temp24];\n                var6 = temp24 + 0x01;\n                var7 = temp22 + 0x20;\n            \n                if (var5 <= var7) { goto label_127A; }\n            \n            label_1266:\n                var temp25 = var6;\n                var temp26 = var7;\n                memory[temp26:temp26 + 0x20] = storage[temp25];\n                var6 = temp25 + 0x01;\n                var7 = temp26 + 0x20;\n            \n                if (var5 > var7) { goto label_1266; }\n            \n            label_127A:\n                var temp27 = var5;\n                var temp28 = temp27 + (var7 - temp27 & 0x1f);\n                var7 = temp27;\n                var5 = temp28;\n                goto label_1283;\n            } else {\n                var temp29 = var5;\n                memory[temp29:temp29 + 0x20] = storage[var6] / 0x0100 * 0x0100;\n                var7 = var7;\n                var5 = temp29 + 0x20;\n                goto label_1283;\n            }\n        } else if (0x1f < var6) {\n            var temp30 = var4;\n            var temp31 = temp30 + var6;\n            var4 = temp31;\n            memory[0x00:0x20] = var5;\n            var temp32 = keccak256(memory[0x00:0x20]);\n            memory[temp30:temp30 + 0x20] = storage[temp32];\n            var5 = temp32 + 0x01;\n            var6 = temp30 + 0x20;\n        \n            if (var4 <= var6) { goto label_11E8; }\n        \n        label_11D4:\n            var temp33 = var5;\n            var temp34 = var6;\n            memory[temp34:temp34 + 0x20] = storage[temp33];\n            var5 = temp33 + 0x01;\n            var6 = temp34 + 0x20;\n        \n            if (var4 > var6) { goto label_11D4; }\n        \n        label_11E8:\n            var temp35 = var4;\n            var temp36 = temp35 + (var6 - temp35 & 0x1f);\n            var6 = temp35;\n            var4 = temp36;\n            goto label_11F1;\n        } else {\n            var temp37 = var4;\n            memory[temp37:temp37 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n            var4 = temp37 + 0x20;\n            var6 = var6;\n            goto label_11F1;\n        }\n    }\n    \n    function func_131D(var arg0, var arg1) {\n        var var0 = 0x00;\n        var var1 = var0;\n        var var2 = var1;\n    \n        if (!(arg1 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0;\n        memory[0x20:0x40] = 0x06;\n        var0 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n    \n        if (var0) {\n            memory[0x00:0x20] = arg0;\n            memory[0x20:0x40] = 0x08;\n            var1 = storage[keccak256(memory[0x00:0x40])];\n        \n            if (var1) {\n            label_137E:\n                var temp0 = var1 - 0x01;\n                var1 = temp0;\n                memory[0x00:0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x07;\n            \n                if (var1 == storage[keccak256(memory[0x00:0x40])] + ~0x00) {\n                label_144C:\n                    memory[0x00:0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                    memory[0x20:0x40] = 0x07;\n                    var var3 = storage[keccak256(memory[0x00:0x40])];\n                    var var4 = 0x1475;\n                    var var5 = keccak256(memory[0x00:0x40]);\n                    var var6 = var3 + ~0x00;\n                    func_1847(var5, var6);\n                    var temp1 = 0x02 ** 0xa0 - 0x01;\n                    var temp2 = arg1 & temp1;\n                    memory[0x00:0x20] = temp2;\n                    memory[0x20:0x40] = 0x07;\n                    var temp3 = keccak256(memory[0x00:0x40]);\n                    var temp4 = storage[temp3];\n                    storage[temp3] = temp4 + 0x01;\n                    memory[0x00:0x20] = temp3;\n                    var temp5 = arg0;\n                    storage[keccak256(memory[0x00:0x20]) + temp4] = temp5;\n                    memory[0x00:0x20] = temp5;\n                    memory[0x20:0x40] = 0x08;\n                    storage[keccak256(memory[0x00:0x40])] = storage[temp3];\n                    memory[0x20:0x40] = 0x06;\n                    var temp6 = keccak256(memory[0x00:0x40]);\n                    var temp7 = ~0xffffffffffffffffffffffffffffffffffffffff;\n                    storage[temp6] = temp2 | (temp7 & storage[temp6]);\n                    memory[0x20:0x40] = 0x04;\n                    var temp8 = keccak256(memory[0x00:0x40]);\n                    storage[temp8] = temp7 & storage[temp8];\n                    log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-4] & 0x02 ** 0xa0 - 0x01, stack[-5] & 0x02 ** 0xa0 - 0x01, stack[-6]]);\n                    return;\n                } else {\n                label_13A9:\n                    memory[0x00:0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                    memory[0x20:0x40] = 0x07;\n                    var3 = keccak256(memory[0x00:0x40]);\n                    var temp9 = storage[var3];\n                    var4 = temp9 + ~0x00;\n                \n                    if (var4 >= temp9) { assert(); }\n                \n                    memory[0x00:0x20] = var3;\n                    var2 = storage[keccak256(memory[0x00:0x20]) + var4];\n                \n                    if (var2 != 0x00) {\n                        memory[0x00:0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                        memory[0x20:0x40] = 0x07;\n                        var3 = var2;\n                        var4 = keccak256(memory[0x00:0x40]);\n                        var5 = var1;\n                    \n                        if (var5 >= storage[var4]) { assert(); }\n                    \n                    label_1428:\n                        memory[0x00:0x20] = var4;\n                        storage[var5 + keccak256(memory[0x00:0x20])] = var3;\n                        memory[0x00:0x20] = var2;\n                        memory[0x20:0x40] = 0x08;\n                        storage[keccak256(memory[0x00:0x40])] = var1 + 0x01;\n                        goto label_144C;\n                    } else {\n                        var temp10 = var0;\n                        memory[0x00:0x20] = temp10 & 0x02 ** 0xa0 - 0x01;\n                        memory[0x20:0x40] = 0x07;\n                        var temp11 = storage[keccak256(memory[0x00:0x40])];\n                        var2 = temp11;\n                        memory[0x00:0x20] = temp10 & 0x02 ** 0xa0 - 0x01;\n                        memory[0x20:0x40] = 0x07;\n                        var3 = var2;\n                        var4 = keccak256(memory[0x00:0x40]);\n                        var5 = var1;\n                    \n                        if (var5 < storage[var4]) { goto label_1428; }\n                        else { assert(); }\n                    }\n                }\n            } else {\n            label_1374:\n                var1 = arg0 - 0x01;\n                memory[0x00:0x20] = var0 & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x07;\n            \n                if (var1 == storage[keccak256(memory[0x00:0x40])] + ~0x00) { goto label_144C; }\n                else { goto label_13A9; }\n            }\n        } else {\n            var0 = address(this);\n            memory[0x00:0x20] = arg0;\n            memory[0x20:0x40] = 0x08;\n            var1 = storage[keccak256(memory[0x00:0x40])];\n        \n            if (var1) { goto label_137E; }\n            else { goto label_1374; }\n        }\n    }\n    \n    function safeTransferFrom(var arg0, var arg1, var arg2, var arg3) {\n        var var0 = 0x00;\n        var var1 = var0;\n        var var2 = 0x00;\n        var var3 = arg2;\n        var var4 = var3 >= 0x01;\n    \n        if (!var4) {\n            if (!var4) { revert(memory[0x00:0x00]); }\n        \n        label_153B:\n            memory[0x00:0x20] = arg2;\n            memory[0x20:0x40] = 0x06;\n            var4 = arg2;\n            var var5 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            var var6 = var5 == msg.sender;\n        \n            if (!var6) {\n                memory[0x00:0x20] = var4;\n                memory[0x20:0x40] = 0x04;\n                var6 = msg.sender == storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            \n                if (var6) { goto label_15A7; }\n                else { goto label_157F; }\n            } else if (var6) {\n            label_15A7:\n            \n                if (!var6) { revert(memory[0x00:0x00]); }\n            \n            label_15B2:\n                memory[0x00:0x20] = arg2;\n                memory[0x20:0x40] = 0x06;\n                var0 = storage[keccak256(memory[0x00:0x40])] & 0x02 ** 0xa0 - 0x01;\n            \n                if (var0) {\n                    var temp0 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (arg0 & temp0 != temp0 & var0) { revert(memory[0x00:0x00]); }\n                \n                label_15EF:\n                \n                    if (!(arg1 & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n                \n                    var6 = 0x160e;\n                    var var7 = arg2;\n                    var var8 = arg1;\n                    func_131D(var7, var8);\n                    var1 = address(arg1).code.length;\n                \n                    if (!var1) { goto label_17BD; }\n                \n                    var6 = arg1 & 0x02 ** 0xa0 - 0x01;\n                    var7 = 0x150b7a02;\n                    var8 = msg.sender;\n                    var var9 = arg0;\n                    var var10 = arg2;\n                    var temp1 = arg3;\n                    var var11 = temp1;\n                    var temp2 = memory[0x40:0x60];\n                    memory[temp2:temp2 + 0x20] = (var7 & 0xffffffff) * 0x0100000000000000000000000000000000000000000000000000000000;\n                    var temp3 = temp2 + 0x04;\n                    var var12 = temp3;\n                    memory[var12:var12 + 0x20] = var8 & 0x02 ** 0xa0 - 0x01 & 0x02 ** 0xa0 - 0x01;\n                    var temp4 = var12 + 0x20;\n                    memory[temp4:temp4 + 0x20] = var9 & 0x02 ** 0xa0 - 0x01 & 0x02 ** 0xa0 - 0x01;\n                    var temp5 = temp4 + 0x20;\n                    memory[temp5:temp5 + 0x20] = var10;\n                    var temp6 = temp5 + 0x20;\n                    var var13 = temp6;\n                    var temp7 = var13 + 0x20;\n                    memory[var13:var13 + 0x20] = temp7 - var12;\n                    memory[temp7:temp7 + 0x20] = memory[var11:var11 + 0x20];\n                    var var14 = temp7 + 0x20;\n                    var var16 = memory[var11:var11 + 0x20];\n                    var var15 = var11 + 0x20;\n                    var var17 = var16;\n                    var var18 = var14;\n                    var var19 = var15;\n                    var var20 = 0x00;\n                \n                    if (var20 >= var17) {\n                    label_16CF:\n                        var temp8 = var16;\n                        var14 = temp8 + var14;\n                        var15 = temp8 & 0x1f;\n                    \n                        if (!var15) {\n                            var8 = var14;\n                            var9 = 0x20;\n                            var10 = memory[0x40:0x60];\n                            var11 = var8 - var10;\n                            var12 = var10;\n                            var13 = 0x00;\n                            var14 = var6;\n                            var15 = !address(var14).code.length;\n                        \n                            if (var15) { revert(memory[0x00:0x00]); }\n                        \n                        label_171E:\n                            var temp9;\n                            temp9, memory[var10:var10 + var9] = address(var14).call.gas(msg.gas).value(var13)(memory[var12:var12 + var11]);\n                            var9 = !temp9;\n                        \n                            if (!var9) {\n                                var6 = memory[0x40:0x60];\n                                var7 = returndata.length;\n                            \n                                if (var7 < 0x20) { revert(memory[0x00:0x00]); }\n                            \n                                var temp10 = memory[var6:var6 + 0x20];\n                                var temp11 = memory[0x40:0x60];\n                                memory[temp11:temp11 + 0x20] = 0x6f6e455243373231526563656976656428616464726573732c61646472657373;\n                                memory[temp11 + 0x20:temp11 + 0x20 + 0x20] = 0x2c75696e743235362c6279746573290000000000000000000000000000000000;\n                                var temp12 = memory[0x40:0x60];\n                                var2 = temp10;\n                                var temp13 = ~(0x02 ** 0xe0 - 0x01);\n                            \n                                if (keccak256(memory[temp12:temp12 + temp11 - temp12 + 0x2f]) & temp13 != var2 & temp13) { revert(memory[0x00:0x00]); }\n                            \n                            label_17BD:\n                                return;\n                            } else {\n                                var temp14 = returndata.length;\n                                memory[0x00:0x00 + temp14] = returndata[0x00:0x00 + temp14];\n                                revert(memory[0x00:0x00 + returndata.length]);\n                            }\n                        } else {\n                            var temp15 = var15;\n                            var temp16 = var14 - temp15;\n                            memory[temp16:temp16 + 0x20] = ~(0x0100 ** (0x20 - temp15) - 0x01) & memory[temp16:temp16 + 0x20];\n                            var8 = temp16 + 0x20;\n                            var9 = 0x20;\n                            var10 = memory[0x40:0x60];\n                            var11 = var8 - var10;\n                            var12 = var10;\n                            var13 = 0x00;\n                            var14 = var6;\n                            var15 = !address(var14).code.length;\n                        \n                            if (!var15) { goto label_171E; }\n                            else { revert(memory[0x00:0x00]); }\n                        }\n                    } else {\n                    label_16C0:\n                        var temp17 = var20;\n                        memory[temp17 + var18:temp17 + var18 + 0x20] = memory[temp17 + var19:temp17 + var19 + 0x20];\n                        var20 = temp17 + 0x20;\n                    \n                        if (var20 >= var17) { goto label_16CF; }\n                        else { goto label_16C0; }\n                    }\n                } else {\n                    var0 = address(this);\n                    var temp18 = 0x02 ** 0xa0 - 0x01;\n                \n                    if (arg0 & temp18 == temp18 & var0) { goto label_15EF; }\n                    else { revert(memory[0x00:0x00]); }\n                }\n            } else {\n            label_157F:\n                memory[0x00:0x20] = var5 & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x05;\n                var temp19 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = msg.sender;\n                memory[0x20:0x40] = temp19;\n            \n                if (storage[keccak256(memory[0x00:0x40])] & 0xff) { goto label_15B2; }\n                else { revert(memory[0x00:0x00]); }\n            }\n        } else if (var3 <= 0x2710) { goto label_153B; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function func_1843(var arg0, var arg1) returns (var r0) { return arg0; }\n    \n    function func_1847(var arg0, var arg1) {\n        var temp0 = arg0;\n        var temp1 = storage[temp0];\n        var var0 = temp1;\n        var temp2 = arg1;\n        storage[temp0] = temp2;\n    \n        if (var0 <= temp2) {\n        label_0AFE:\n            return;\n        } else {\n            memory[0x00:0x20] = arg0;\n            var temp3 = keccak256(memory[0x00:0x20]);\n            var temp4 = var0;\n            var0 = 0x0afe;\n            var var1 = 0x0707;\n            var var2 = temp3 + temp4;\n            var var3 = arg1 + temp3;\n        \n            if (var2 <= var3) {\n                var1 = func_1843(var2, var3);\n                var0 = func_0707(var1);\n                goto label_0AFE;\n            } else {\n            label_1876:\n                var temp5 = var3;\n                storage[temp5] = 0x00;\n                var3 = temp5 + 0x01;\n                var1 = func_186D(var2, var3);\n                // Error: Could not resolve method call return address!\n            }\n        }\n    }\n    \n    function func_1867(var arg0, var arg1) returns (var r0) {\n        var temp0 = arg0;\n        arg0 = 0x0707;\n        var temp1 = arg1;\n        arg1 = temp0;\n        var var0 = temp1;\n        arg0 = func_186D(arg1, var0);\n        r0 = func_0707(arg0);\n        // Error: Could not resolve method call return address!\n    }\n    \n    function func_186D(var arg0, var arg1) returns (var r0) {\n        if (arg0 <= arg1) {\n            r0 = func_1843(arg0, arg1);\n            // Error: Could not resolve method call return address!\n        } else {\n            var temp0 = arg1;\n            storage[temp0] = 0x00;\n            arg1 = temp0 + 0x01;\n            r0 = func_186D(arg0, arg1);\n            // Error: Could not resolve method call return address!\n        }\n    }\n}\n\n.",
	"status": "1",
	"time_cost": 89.19755387306213,
	"usage": {
		"completion_tokens": 823,
		"prompt_tokens": 18754,
		"total_tokens": 19577
	}
}