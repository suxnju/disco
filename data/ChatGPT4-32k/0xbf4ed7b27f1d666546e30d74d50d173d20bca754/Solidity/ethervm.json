{
	"address": "0xbf4ed7b27f1d666546e30d74d50d173d20bca754",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is the Solidity code refactored from the decompiled EVM bytecode:\n\n```solidity\npragma solidity ^0.4.24;\n\ncontract Contract {\n    address public constant mainDAO = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413;\n    address public trustee;\n    \n    constructor() public {\n        trustee = msg.sender;\n    }\n    \n    modifier onlyTrustee {\n        require(msg.sender == trustee);\n        _;\n    }\n    \n    function trusteeWithdraw() public onlyTrustee {\n        require(address(this).balance > 0);\n        trustee.transfer(address(this).balance);\n    }\n    \n    function withdraw() public {\n        require(address(this).balance > 0);\n        msg.sender.transfer(address(this).balance);\n    }\n    \n    function getMainDAO() public view returns (address) {\n        return mainDAO;\n    }\n    \n    function getTrustee() public view returns (address) {\n        return trustee;\n    }\n}\n```\n\nThis contract has a `trustee` who is initially set to the contract creator. `trusteeWithdraw` allows the `trustee` to withdraw all Ether held in the contract. `withdraw` lets anyone withdraw all Ether held in the contract. `getMainDAO` and `getTrustee` return the address of `mainDAO` and `trustee` respectively.",
				"role": "assistant"
			}
		}
	],
	"created": 1700470490,
	"id": "chatcmpl-8MuLKpDY5DPuoCZgKQVWtJyDE72ck",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n        var var0 = msg.data[0x00:0x20] / 0x0100000000000000000000000000000000000000000000000000000000;\n    \n        if (var0 == 0x2e6e504a) {\n            // Dispatch table entry for trusteeWithdraw()\n            var var1 = 0x0067;\n            trusteeWithdraw();\n            stop();\n        } else if (var0 == 0x3ccfd60b) {\n            // Dispatch table entry for withdraw()\n            var1 = 0x0076;\n            withdraw();\n            stop();\n        } else if (var0 == 0xeedcf50a) {\n            // Dispatch table entry for mainDAO()\n            var1 = 0x0085;\n            var var2 = mainDAO();\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = var2 & 0xffffffffffffffffffffffffffffffffffffffff;\n            var temp1 = memory[0x40:0x60];\n            return memory[temp1:temp1 + (temp0 + 0x20) - temp1];\n        } else if (var0 == 0xfdf97cb2) {\n            // Dispatch table entry for trustee()\n            var1 = 0x00be;\n            var2 = trustee();\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = var2 & 0xffffffffffffffffffffffffffffffffffffffff;\n            var temp3 = memory[0x40:0x60];\n            return memory[temp3:temp3 + (temp2 + 0x20) - temp3];\n        } else { stop(); }\n    }\n    \n    function trusteeWithdraw() {\n        var var0 = storage[0x00] & 0xffffffffffffffffffffffffffffffffffffffff;\n        var var1 = 0x00;\n        var var2 = 0xffffffffffffffffffffffffffffffffffffffff & 0xbb9bc244d798123fde783fcc1c72d3bb8c189413;\n        var var3 = 0x18160ddd;\n        var temp0 = memory[0x40:0x60];\n        memory[temp0:temp0 + 0x20] = var3 * 0x0100000000000000000000000000000000000000000000000000000000;\n        var var4 = temp0 + 0x04;\n        var temp1 = memory[0x40:0x60];\n        var temp2;\n        temp2, memory[temp1:temp1 + 0x20] = address(var2).call.gas(msg.gas - 0x61da)(memory[temp1:temp1 + var4 - temp1]);\n    \n        if (!temp2) {\n        label_0002:\n            memory[0x40:0x60] = var4;\n            var4 = msg.data[0x00:0x20] / 0x0100000000000000000000000000000000000000000000000000000000;\n        \n            if (var4 == 0x2e6e504a) {\n                var var5 = 0x0067;\n                trusteeWithdraw();\n                stop();\n            } else if (var4 == 0x3ccfd60b) {\n                var5 = 0x0076;\n                withdraw();\n                stop();\n            } else if (var4 == 0xeedcf50a) {\n                var5 = 0x0085;\n                var var6 = mainDAO();\n                var temp3 = memory[0x40:0x60];\n                memory[temp3:temp3 + 0x20] = var6 & 0xffffffffffffffffffffffffffffffffffffffff;\n                var temp4 = memory[0x40:0x60];\n                return memory[temp4:temp4 + (temp3 + 0x20) - temp4];\n            } else if (var4 == 0xfdf97cb2) {\n                var5 = 0x00be;\n                var6 = trustee();\n                var temp5 = memory[0x40:0x60];\n                memory[temp5:temp5 + 0x20] = var6 & 0xffffffffffffffffffffffffffffffffffffffff;\n                var temp6 = memory[0x40:0x60];\n                return memory[temp6:temp6 + (temp5 + 0x20) - temp6];\n            } else { stop(); }\n        } else {\n            var2 = memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n            var3 = 0xffffffffffffffffffffffffffffffffffffffff & 0xbb9bc244d798123fde783fcc1c72d3bb8c189413;\n            var4 = 0x70a08231;\n            var temp7 = memory[0x40:0x60];\n            memory[temp7:temp7 + 0x20] = var4 * 0x0100000000000000000000000000000000000000000000000000000000;\n            var temp8 = temp7 + 0x04;\n            memory[temp8:temp8 + 0x20] = address(this);\n            var5 = temp8 + 0x20;\n            var temp9 = memory[0x40:0x60];\n            var temp10;\n            temp10, memory[temp9:temp9 + 0x20] = address(var3).call.gas(msg.gas - 0x61da)(memory[temp9:temp9 + var5 - temp9]);\n        \n            if (!temp10) { goto label_0002; }\n        \n            var temp11 = memory[0x40:0x60];\n            memory[temp11:temp11 + 0x00] = address(var0).call.gas(var1).value((address(this).balance + memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20]) - var2)(memory[temp11:temp11 + memory[0x40:0x60] - temp11]);\n            return;\n        }\n    }\n    \n    function withdraw() {\n        var var0 = 0x00;\n        var var1 = 0xffffffffffffffffffffffffffffffffffffffff & 0xbb9bc244d798123fde783fcc1c72d3bb8c189413;\n        var var2 = 0x70a08231;\n        var temp0 = memory[0x40:0x60];\n        memory[temp0:temp0 + 0x20] = var2 * 0x0100000000000000000000000000000000000000000000000000000000;\n        var temp1 = temp0 + 0x04;\n        memory[temp1:temp1 + 0x20] = msg.sender;\n        var var3 = temp1 + 0x20;\n        var temp2 = memory[0x40:0x60];\n        var temp3;\n        temp3, memory[temp2:temp2 + 0x20] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp2:temp2 + var3 - temp2]);\n    \n        if (!temp3) {\n        label_0002:\n            memory[0x40:0x60] = var3;\n            var3 = msg.data[0x00:0x20] / 0x0100000000000000000000000000000000000000000000000000000000;\n        \n            if (var3 == 0x2e6e504a) {\n                var var4 = 0x0067;\n                trusteeWithdraw();\n                stop();\n            } else if (var3 == 0x3ccfd60b) {\n                var4 = 0x0076;\n                withdraw();\n                stop();\n            } else if (var3 == 0xeedcf50a) {\n                var4 = 0x0085;\n                var var5 = mainDAO();\n                var temp4 = memory[0x40:0x60];\n                memory[temp4:temp4 + 0x20] = var5 & 0xffffffffffffffffffffffffffffffffffffffff;\n                var temp5 = memory[0x40:0x60];\n                return memory[temp5:temp5 + (temp4 + 0x20) - temp5];\n            } else if (var3 == 0xfdf97cb2) {\n                var4 = 0x00be;\n                var5 = trustee();\n                var temp6 = memory[0x40:0x60];\n                memory[temp6:temp6 + 0x20] = var5 & 0xffffffffffffffffffffffffffffffffffffffff;\n                var temp7 = memory[0x40:0x60];\n                return memory[temp7:temp7 + (temp6 + 0x20) - temp7];\n            } else { stop(); }\n        } else {\n            var temp8 = memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n            var0 = temp8;\n            var1 = 0xffffffffffffffffffffffffffffffffffffffff & 0xbb9bc244d798123fde783fcc1c72d3bb8c189413;\n            var2 = 0x23b872dd;\n            var temp9 = memory[0x40:0x60];\n            memory[temp9:temp9 + 0x20] = var2 * 0x0100000000000000000000000000000000000000000000000000000000;\n            var temp10 = temp9 + 0x04;\n            memory[temp10:temp10 + 0x20] = msg.sender;\n            var temp11 = temp10 + 0x20;\n            memory[temp11:temp11 + 0x20] = address(this);\n            var temp12 = temp11 + 0x20;\n            memory[temp12:temp12 + 0x20] = var0;\n            var3 = temp12 + 0x20;\n            var temp13 = memory[0x40:0x60];\n            var temp14;\n            temp14, memory[temp13:temp13 + 0x20] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp13:temp13 + var3 - temp13]);\n        \n            if (!temp14) { goto label_0002; }\n        \n            var1 = !memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n        \n            if (!var1) {\n                var temp15 = memory[0x40:0x60];\n                var temp16;\n                temp16, memory[temp15:temp15 + 0x00] = address(msg.sender).call.gas(0x00).value(var0)(memory[temp15:temp15 + memory[0x40:0x60] - temp15]);\n            \n                if (temp16) { goto label_0420; }\n                else { goto label_041C; }\n            } else if (!var1) {\n            label_0420:\n                return;\n            } else {\n            label_041C:\n                goto label_0002;\n            }\n        }\n    }\n    \n    function mainDAO() returns (var r0) { return 0xbb9bc244d798123fde783fcc1c72d3bb8c189413; }\n    \n    function trustee() returns (var r0) { return storage[0x00] & 0xffffffffffffffffffffffffffffffffffffffff; }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n        var var0 = msg.data[0x00:0x20] / 0x0100000000000000000000000000000000000000000000000000000000;\n    \n        if (var0 == 0x2e6e504a) {\n            // Dispatch table entry for trusteeWithdraw()\n            var var1 = 0x0067;\n            trusteeWithdraw();\n            stop();\n        } else if (var0 == 0x3ccfd60b) {\n            // Dispatch table entry for withdraw()\n            var1 = 0x0076;\n            withdraw();\n            stop();\n        } else if (var0 == 0xeedcf50a) {\n            // Dispatch table entry for mainDAO()\n            var1 = 0x0085;\n            var var2 = mainDAO();\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = var2 & 0xffffffffffffffffffffffffffffffffffffffff;\n            var temp1 = memory[0x40:0x60];\n            return memory[temp1:temp1 + (temp0 + 0x20) - temp1];\n        } else if (var0 == 0xfdf97cb2) {\n            // Dispatch table entry for trustee()\n            var1 = 0x00be;\n            var2 = trustee();\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = var2 & 0xffffffffffffffffffffffffffffffffffffffff;\n            var temp3 = memory[0x40:0x60];\n            return memory[temp3:temp3 + (temp2 + 0x20) - temp3];\n        } else { stop(); }\n    }\n    \n    function trusteeWithdraw() {\n        var var0 = storage[0x00] & 0xffffffffffffffffffffffffffffffffffffffff;\n        var var1 = 0x00;\n        var var2 = 0xffffffffffffffffffffffffffffffffffffffff & 0xbb9bc244d798123fde783fcc1c72d3bb8c189413;\n        var var3 = 0x18160ddd;\n        var temp0 = memory[0x40:0x60];\n        memory[temp0:temp0 + 0x20] = var3 * 0x0100000000000000000000000000000000000000000000000000000000;\n        var var4 = temp0 + 0x04;\n        var temp1 = memory[0x40:0x60];\n        var temp2;\n        temp2, memory[temp1:temp1 + 0x20] = address(var2).call.gas(msg.gas - 0x61da)(memory[temp1:temp1 + var4 - temp1]);\n    \n        if (!temp2) {\n        label_0002:\n            memory[0x40:0x60] = var4;\n            var4 = msg.data[0x00:0x20] / 0x0100000000000000000000000000000000000000000000000000000000;\n        \n            if (var4 == 0x2e6e504a) {\n                var var5 = 0x0067;\n                trusteeWithdraw();\n                stop();\n            } else if (var4 == 0x3ccfd60b) {\n                var5 = 0x0076;\n                withdraw();\n                stop();\n            } else if (var4 == 0xeedcf50a) {\n                var5 = 0x0085;\n                var var6 = mainDAO();\n                var temp3 = memory[0x40:0x60];\n                memory[temp3:temp3 + 0x20] = var6 & 0xffffffffffffffffffffffffffffffffffffffff;\n                var temp4 = memory[0x40:0x60];\n                return memory[temp4:temp4 + (temp3 + 0x20) - temp4];\n            } else if (var4 == 0xfdf97cb2) {\n                var5 = 0x00be;\n                var6 = trustee();\n                var temp5 = memory[0x40:0x60];\n                memory[temp5:temp5 + 0x20] = var6 & 0xffffffffffffffffffffffffffffffffffffffff;\n                var temp6 = memory[0x40:0x60];\n                return memory[temp6:temp6 + (temp5 + 0x20) - temp6];\n            } else { stop(); }\n        } else {\n            var2 = memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n            var3 = 0xffffffffffffffffffffffffffffffffffffffff & 0xbb9bc244d798123fde783fcc1c72d3bb8c189413;\n            var4 = 0x70a08231;\n            var temp7 = memory[0x40:0x60];\n            memory[temp7:temp7 + 0x20] = var4 * 0x0100000000000000000000000000000000000000000000000000000000;\n            var temp8 = temp7 + 0x04;\n            memory[temp8:temp8 + 0x20] = address(this);\n            var5 = temp8 + 0x20;\n            var temp9 = memory[0x40:0x60];\n            var temp10;\n            temp10, memory[temp9:temp9 + 0x20] = address(var3).call.gas(msg.gas - 0x61da)(memory[temp9:temp9 + var5 - temp9]);\n        \n            if (!temp10) { goto label_0002; }\n        \n            var temp11 = memory[0x40:0x60];\n            memory[temp11:temp11 + 0x00] = address(var0).call.gas(var1).value((address(this).balance + memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20]) - var2)(memory[temp11:temp11 + memory[0x40:0x60] - temp11]);\n            return;\n        }\n    }\n    \n    function withdraw() {\n        var var0 = 0x00;\n        var var1 = 0xffffffffffffffffffffffffffffffffffffffff & 0xbb9bc244d798123fde783fcc1c72d3bb8c189413;\n        var var2 = 0x70a08231;\n        var temp0 = memory[0x40:0x60];\n        memory[temp0:temp0 + 0x20] = var2 * 0x0100000000000000000000000000000000000000000000000000000000;\n        var temp1 = temp0 + 0x04;\n        memory[temp1:temp1 + 0x20] = msg.sender;\n        var var3 = temp1 + 0x20;\n        var temp2 = memory[0x40:0x60];\n        var temp3;\n        temp3, memory[temp2:temp2 + 0x20] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp2:temp2 + var3 - temp2]);\n    \n        if (!temp3) {\n        label_0002:\n            memory[0x40:0x60] = var3;\n            var3 = msg.data[0x00:0x20] / 0x0100000000000000000000000000000000000000000000000000000000;\n        \n            if (var3 == 0x2e6e504a) {\n                var var4 = 0x0067;\n                trusteeWithdraw();\n                stop();\n            } else if (var3 == 0x3ccfd60b) {\n                var4 = 0x0076;\n                withdraw();\n                stop();\n            } else if (var3 == 0xeedcf50a) {\n                var4 = 0x0085;\n                var var5 = mainDAO();\n                var temp4 = memory[0x40:0x60];\n                memory[temp4:temp4 + 0x20] = var5 & 0xffffffffffffffffffffffffffffffffffffffff;\n                var temp5 = memory[0x40:0x60];\n                return memory[temp5:temp5 + (temp4 + 0x20) - temp5];\n            } else if (var3 == 0xfdf97cb2) {\n                var4 = 0x00be;\n                var5 = trustee();\n                var temp6 = memory[0x40:0x60];\n                memory[temp6:temp6 + 0x20] = var5 & 0xffffffffffffffffffffffffffffffffffffffff;\n                var temp7 = memory[0x40:0x60];\n                return memory[temp7:temp7 + (temp6 + 0x20) - temp7];\n            } else { stop(); }\n        } else {\n            var temp8 = memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n            var0 = temp8;\n            var1 = 0xffffffffffffffffffffffffffffffffffffffff & 0xbb9bc244d798123fde783fcc1c72d3bb8c189413;\n            var2 = 0x23b872dd;\n            var temp9 = memory[0x40:0x60];\n            memory[temp9:temp9 + 0x20] = var2 * 0x0100000000000000000000000000000000000000000000000000000000;\n            var temp10 = temp9 + 0x04;\n            memory[temp10:temp10 + 0x20] = msg.sender;\n            var temp11 = temp10 + 0x20;\n            memory[temp11:temp11 + 0x20] = address(this);\n            var temp12 = temp11 + 0x20;\n            memory[temp12:temp12 + 0x20] = var0;\n            var3 = temp12 + 0x20;\n            var temp13 = memory[0x40:0x60];\n            var temp14;\n            temp14, memory[temp13:temp13 + 0x20] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp13:temp13 + var3 - temp13]);\n        \n            if (!temp14) { goto label_0002; }\n        \n            var1 = !memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n        \n            if (!var1) {\n                var temp15 = memory[0x40:0x60];\n                var temp16;\n                temp16, memory[temp15:temp15 + 0x00] = address(msg.sender).call.gas(0x00).value(var0)(memory[temp15:temp15 + memory[0x40:0x60] - temp15]);\n            \n                if (temp16) { goto label_0420; }\n                else { goto label_041C; }\n            } else if (!var1) {\n            label_0420:\n                return;\n            } else {\n            label_041C:\n                goto label_0002;\n            }\n        }\n    }\n    \n    function mainDAO() returns (var r0) { return 0xbb9bc244d798123fde783fcc1c72d3bb8c189413; }\n    \n    function trustee() returns (var r0) { return storage[0x00] & 0xffffffffffffffffffffffffffffffffffffffff; }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n        var var0 = msg.data[0x00:0x20] / 0x0100000000000000000000000000000000000000000000000000000000;\n    \n        if (var0 == 0x2e6e504a) {\n            // Dispatch table entry for trusteeWithdraw()\n            var var1 = 0x0067;\n            trusteeWithdraw();\n            stop();\n        } else if (var0 == 0x3ccfd60b) {\n            // Dispatch table entry for withdraw()\n            var1 = 0x0076;\n            withdraw();\n            stop();\n        } else if (var0 == 0xeedcf50a) {\n            // Dispatch table entry for mainDAO()\n            var1 = 0x0085;\n            var var2 = mainDAO();\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = var2 & 0xffffffffffffffffffffffffffffffffffffffff;\n            var temp1 = memory[0x40:0x60];\n            return memory[temp1:temp1 + (temp0 + 0x20) - temp1];\n        } else if (var0 == 0xfdf97cb2) {\n            // Dispatch table entry for trustee()\n            var1 = 0x00be;\n            var2 = trustee();\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = var2 & 0xffffffffffffffffffffffffffffffffffffffff;\n            var temp3 = memory[0x40:0x60];\n            return memory[temp3:temp3 + (temp2 + 0x20) - temp3];\n        } else { stop(); }\n    }\n    \n    function trusteeWithdraw() {\n        var var0 = storage[0x00] & 0xffffffffffffffffffffffffffffffffffffffff;\n        var var1 = 0x00;\n        var var2 = 0xffffffffffffffffffffffffffffffffffffffff & 0xbb9bc244d798123fde783fcc1c72d3bb8c189413;\n        var var3 = 0x18160ddd;\n        var temp0 = memory[0x40:0x60];\n        memory[temp0:temp0 + 0x20] = var3 * 0x0100000000000000000000000000000000000000000000000000000000;\n        var var4 = temp0 + 0x04;\n        var temp1 = memory[0x40:0x60];\n        var temp2;\n        temp2, memory[temp1:temp1 + 0x20] = address(var2).call.gas(msg.gas - 0x61da)(memory[temp1:temp1 + var4 - temp1]);\n    \n        if (!temp2) {\n        label_0002:\n            memory[0x40:0x60] = var4;\n            var4 = msg.data[0x00:0x20] / 0x0100000000000000000000000000000000000000000000000000000000;\n        \n            if (var4 == 0x2e6e504a) {\n                var var5 = 0x0067;\n                trusteeWithdraw();\n                stop();\n            } else if (var4 == 0x3ccfd60b) {\n                var5 = 0x0076;\n                withdraw();\n                stop();\n            } else if (var4 == 0xeedcf50a) {\n                var5 = 0x0085;\n                var var6 = mainDAO();\n                var temp3 = memory[0x40:0x60];\n                memory[temp3:temp3 + 0x20] = var6 & 0xffffffffffffffffffffffffffffffffffffffff;\n                var temp4 = memory[0x40:0x60];\n                return memory[temp4:temp4 + (temp3 + 0x20) - temp4];\n            } else if (var4 == 0xfdf97cb2) {\n                var5 = 0x00be;\n                var6 = trustee();\n                var temp5 = memory[0x40:0x60];\n                memory[temp5:temp5 + 0x20] = var6 & 0xffffffffffffffffffffffffffffffffffffffff;\n                var temp6 = memory[0x40:0x60];\n                return memory[temp6:temp6 + (temp5 + 0x20) - temp6];\n            } else { stop(); }\n        } else {\n            var2 = memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n            var3 = 0xffffffffffffffffffffffffffffffffffffffff & 0xbb9bc244d798123fde783fcc1c72d3bb8c189413;\n            var4 = 0x70a08231;\n            var temp7 = memory[0x40:0x60];\n            memory[temp7:temp7 + 0x20] = var4 * 0x0100000000000000000000000000000000000000000000000000000000;\n            var temp8 = temp7 + 0x04;\n            memory[temp8:temp8 + 0x20] = address(this);\n            var5 = temp8 + 0x20;\n            var temp9 = memory[0x40:0x60];\n            var temp10;\n            temp10, memory[temp9:temp9 + 0x20] = address(var3).call.gas(msg.gas - 0x61da)(memory[temp9:temp9 + var5 - temp9]);\n        \n            if (!temp10) { goto label_0002; }\n        \n            var temp11 = memory[0x40:0x60];\n            memory[temp11:temp11 + 0x00] = address(var0).call.gas(var1).value((address(this).balance + memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20]) - var2)(memory[temp11:temp11 + memory[0x40:0x60] - temp11]);\n            return;\n        }\n    }\n    \n    function withdraw() {\n        var var0 = 0x00;\n        var var1 = 0xffffffffffffffffffffffffffffffffffffffff & 0xbb9bc244d798123fde783fcc1c72d3bb8c189413;\n        var var2 = 0x70a08231;\n        var temp0 = memory[0x40:0x60];\n        memory[temp0:temp0 + 0x20] = var2 * 0x0100000000000000000000000000000000000000000000000000000000;\n        var temp1 = temp0 + 0x04;\n        memory[temp1:temp1 + 0x20] = msg.sender;\n        var var3 = temp1 + 0x20;\n        var temp2 = memory[0x40:0x60];\n        var temp3;\n        temp3, memory[temp2:temp2 + 0x20] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp2:temp2 + var3 - temp2]);\n    \n        if (!temp3) {\n        label_0002:\n            memory[0x40:0x60] = var3;\n            var3 = msg.data[0x00:0x20] / 0x0100000000000000000000000000000000000000000000000000000000;\n        \n            if (var3 == 0x2e6e504a) {\n                var var4 = 0x0067;\n                trusteeWithdraw();\n                stop();\n            } else if (var3 == 0x3ccfd60b) {\n                var4 = 0x0076;\n                withdraw();\n                stop();\n            } else if (var3 == 0xeedcf50a) {\n                var4 = 0x0085;\n                var var5 = mainDAO();\n                var temp4 = memory[0x40:0x60];\n                memory[temp4:temp4 + 0x20] = var5 & 0xffffffffffffffffffffffffffffffffffffffff;\n                var temp5 = memory[0x40:0x60];\n                return memory[temp5:temp5 + (temp4 + 0x20) - temp5];\n            } else if (var3 == 0xfdf97cb2) {\n                var4 = 0x00be;\n                var5 = trustee();\n                var temp6 = memory[0x40:0x60];\n                memory[temp6:temp6 + 0x20] = var5 & 0xffffffffffffffffffffffffffffffffffffffff;\n                var temp7 = memory[0x40:0x60];\n                return memory[temp7:temp7 + (temp6 + 0x20) - temp7];\n            } else { stop(); }\n        } else {\n            var temp8 = memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n            var0 = temp8;\n            var1 = 0xffffffffffffffffffffffffffffffffffffffff & 0xbb9bc244d798123fde783fcc1c72d3bb8c189413;\n            var2 = 0x23b872dd;\n            var temp9 = memory[0x40:0x60];\n            memory[temp9:temp9 + 0x20] = var2 * 0x0100000000000000000000000000000000000000000000000000000000;\n            var temp10 = temp9 + 0x04;\n            memory[temp10:temp10 + 0x20] = msg.sender;\n            var temp11 = temp10 + 0x20;\n            memory[temp11:temp11 + 0x20] = address(this);\n            var temp12 = temp11 + 0x20;\n            memory[temp12:temp12 + 0x20] = var0;\n            var3 = temp12 + 0x20;\n            var temp13 = memory[0x40:0x60];\n            var temp14;\n            temp14, memory[temp13:temp13 + 0x20] = address(var1).call.gas(msg.gas - 0x61da)(memory[temp13:temp13 + var3 - temp13]);\n        \n            if (!temp14) { goto label_0002; }\n        \n            var1 = !memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n        \n            if (!var1) {\n                var temp15 = memory[0x40:0x60];\n                var temp16;\n                temp16, memory[temp15:temp15 + 0x00] = address(msg.sender).call.gas(0x00).value(var0)(memory[temp15:temp15 + memory[0x40:0x60] - temp15]);\n            \n                if (temp16) { goto label_0420; }\n                else { goto label_041C; }\n            } else if (!var1) {\n            label_0420:\n                return;\n            } else {\n            label_041C:\n                goto label_0002;\n            }\n        }\n    }\n    \n    function mainDAO() returns (var r0) { return 0xbb9bc244d798123fde783fcc1c72d3bb8c189413; }\n    \n    function trustee() returns (var r0) { return storage[0x00] & 0xffffffffffffffffffffffffffffffffffffffff; }\n}\n\n.",
	"status": "1",
	"time_cost": 15.13442611694336,
	"usage": {
		"completion_tokens": 281,
		"prompt_tokens": 2599,
		"total_tokens": 2880
	}
}