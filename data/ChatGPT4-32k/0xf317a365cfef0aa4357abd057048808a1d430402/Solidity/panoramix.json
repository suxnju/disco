{
	"address": "0xf317a365cfef0aa4357abd057048808a1d430402",
	"input_format": "DecompiledCode",
	"ir": "# Palkeoramix decompiler. \n\ndef storage:\n  rndNo is uint256 at storage 0\n  totalEth is uint256 at storage 1\n  round_m is mapping of struct at storage 2\n  playerRound_m is mapping of struct at storage 3\n  owner is address at storage 4\n  receiverAddress is address at storage 5\n  ownerWithdraw is uint256 at storage 6\n  isStartGame is uint8 at storage 7\n  storE90B is uint256 at storage 0xe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e2\n  storE90B is uint256 at storage 0xe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e3\n  storE90B is uint256 at storage 0xe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2f9\n\ndef rndNo(): # not payable\n  return rndNo\n\ndef totalEth(): # not payable\n  return totalEth\n\ndef ownerWithdraw(): # not payable\n  return ownerWithdraw\n\ndef round_m(uint256 _param1): # not payable\n  return round_m[_param1].field_0, \n         round_m[_param1].field_256,\n         round_m[_param1].field_512,\n         round_m[_param1].field_768,\n         round_m[_param1].field_1024,\n         round_m[_param1].field_1280,\n         round_m[_param1].field_1536,\n         round_m[_param1].field_5888,\n         round_m[_param1].field_6144,\n         round_m[_param1].field_6400,\n         round_m[_param1].field_6656\n\ndef owner(): # not payable\n  return owner\n\ndef playerRound_m(uint256 _param1, address _param2): # not payable\n  return playerRound_m[_param1][_param2].field_0, \n         playerRound_m[_param1][_param2].field_256,\n         playerRound_m[_param1][_param2].field_512,\n         playerRound_m[_param1][_param2].field_768,\n         playerRound_m[_param1][_param2].field_1024\n\ndef isStartGame(): # not payable\n  return bool(isStartGame)\n\ndef receiver(): # not payable\n  return receiverAddress\n\n#\n#  Regular functions\n#\n\ndef changeReceiver(address newReceiver): # not payable\n  if owner != caller:\n      revert with 0, 'only owner can do it'\n  receiverAddress = newReceiver\n\ndef startGame(): # not payable\n  if owner != caller:\n      revert with 0, 'only owner can do it'\n  if isStartGame:\n      revert with 0, 'The game has already started!'\n  storE90B = block.timestamp\n  storE90B = block.timestamp + (12 * 3600)\n  storE90B = 0\n  isStartGame = 1\n\ndef feeWithdraw(): # not payable\n  if ext_code.size(caller):\n      revert with 0, 'sorry humans only'\n  if bool(isStartGame) != 1:\n      revert with 0, 'The game hasn't started yet.'\n  if not receiverAddress:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'The receiver address has not been initialized.'\n  if not totalEth:\n      if 0 <= ownerWithdraw:\n          revert with 0, 'No need to withdraw'\n      ownerWithdraw = 0\n      if ownerWithdraw > 0:\n          revert with 0, 'SafeMath sub failed'\n      call receiverAddress with:\n         value -ownerWithdraw wei\n           gas 2300 * is_zero(value) wei\n  else:\n      if 5 * totalEth / totalEth != 5:\n          revert with 0, 'SafeMath mul failed'\n      if 5 * totalEth / 100 <= ownerWithdraw:\n          revert with 0, 'No need to withdraw'\n      ownerWithdraw = 5 * totalEth / 100\n      if ownerWithdraw > 5 * totalEth / 100:\n          revert with 0, 'SafeMath sub failed'\n      call receiverAddress with:\n         value (5 * totalEth / 100) - ownerWithdraw wei\n           gas 2300 * is_zero(value) wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n\ndef getBuyPrice(): # not payable\n  if block.timestamp > round_m[stor0].field_768:\n      return 750007031250000\n  if 15000000 * 10^18 <= round_m[stor0].field_256:\n      if 15000000 * 10^18 <= round_m[stor0].field_256:\n          if round_m[stor0].field_1024:\n              if round_m[stor0].field_1536:\n                  if block.timestamp < round_m[stor0].field_1024:\n                      return 5 * 10^16\n      if 15000000 * 10^18 > round_m[stor0].field_256:\n          return 0\n      if block.timestamp <= round_m[stor0].field_1024:\n          return 0\n      if round_m[stor0].field_1024 > block.timestamp:\n          revert with 0, 'SafeMath sub failed'\n      if not block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n          return 5 * 10^16\n      if 5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0].field_1024 / 3 * 3600 != 5 * 10^16:\n          revert with 0, 'SafeMath mul failed'\n      if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n          revert with 0, 'SafeMath add failed'\n      return ((5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16)\n  if round_m[stor0].field_256 + 10 * 10^18 < round_m[stor0].field_256:\n      revert with 0, 'SafeMath add failed'\n  if 10 * 10^18 > round_m[stor0].field_256 + 10 * 10^18:\n      revert with 0, 'SafeMath sub failed'\n  if not round_m[stor0].field_256:\n      if not round_m[stor0].field_256:\n          if not round_m[stor0].field_256 + 10 * 10^18:\n              if not round_m[stor0].field_256 + 10 * 10^18:\n                  return 0\n              if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              if 0 > (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18)\n          if (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 149999843750000 != (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if not round_m[stor0].field_256 + 10 * 10^18:\n              if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if 0 > (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 / 1000000000000000000 * 10^18:\n                  revert with 0, 'SafeMath sub failed'\n              return ((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 / 1000000000000000000 * 10^18)\n          if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if 0 > ((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2) + (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2) + (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18)\n      if round_m[stor0].field_256 * round_m[stor0].field_256 / round_m[stor0].field_256 != round_m[stor0].field_256:\n          revert with 0, 'SafeMath mul failed'\n      if 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 78125000 != round_m[stor0].field_256 * round_m[stor0].field_256:\n          revert with 0, 'SafeMath mul failed'\n      if 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 < 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256:\n          revert with 0, 'SafeMath add failed'\n      if not round_m[stor0].field_256 + 10 * 10^18:\n          if not round_m[stor0].field_256 + 10 * 10^18:\n              if 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 1000000000000000000 * 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              return -(78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 1000000000000000000 * 10^18)\n          if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 1000000000000000000 * 10^18 > (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18) - (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 1000000000000000000 * 10^18))\n      if (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 149999843750000 != (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if not round_m[stor0].field_256 + 10 * 10^18:\n          if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 / 1000000000000000000 * 10^18) - (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 1000000000000000000 * 10^18))\n      if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2) + (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return ((((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2) + (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18) - (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 1000000000000000000 * 10^18))\n  if 10^18 * round_m[stor0].field_256 / round_m[stor0].field_256 != 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if 149999843750000 * 10^18 * round_m[stor0].field_256 / 149999843750000 != 10^18 * round_m[stor0].field_256:\n      revert with 0, 'SafeMath mul failed'\n  if not round_m[stor0].field_256:\n      if 149999843750000 * 10^18 * round_m[stor0].field_256 / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if not round_m[stor0].field_256 + 10 * 10^18:\n          if not round_m[stor0].field_256 + 10 * 10^18:\n              if 149999843750000 * 10^18 * round_m[stor0].field_256 / 2 / 1000000000000000000 * 10^18 > 0:\n                  revert with 0, 'SafeMath sub failed'\n              return -(149999843750000 * 10^18 * round_m[stor0].field_256 / 2 / 1000000000000000000 * 10^18)\n          if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n              revert with 0, 'SafeMath mul failed'\n          if 149999843750000 * 10^18 * round_m[stor0].field_256 / 2 / 1000000000000000000 * 10^18 > (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * round_m[stor0].field_256 / 2 / 1000000000000000000 * 10^18))\n      if (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 149999843750000 != (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if not round_m[stor0].field_256 + 10 * 10^18:\n          if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n              revert with 0, 'SafeMath add failed'\n          if 149999843750000 * 10^18 * round_m[stor0].field_256 / 2 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 / 1000000000000000000 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          return (((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * round_m[stor0].field_256 / 2 / 1000000000000000000 * 10^18))\n      if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if 149999843750000 * 10^18 * round_m[stor0].field_256 / 2 / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2) + (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return ((((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2) + (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * round_m[stor0].field_256 / 2 / 1000000000000000000 * 10^18))\n  if round_m[stor0].field_256 * round_m[stor0].field_256 / round_m[stor0].field_256 != round_m[stor0].field_256:\n      revert with 0, 'SafeMath mul failed'\n  if 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 78125000 != round_m[stor0].field_256 * round_m[stor0].field_256:\n      revert with 0, 'SafeMath mul failed'\n  if (149999843750000 * 10^18 * round_m[stor0].field_256 / 2) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) < 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256:\n      revert with 0, 'SafeMath add failed'\n  if not round_m[stor0].field_256 + 10 * 10^18:\n      if not round_m[stor0].field_256 + 10 * 10^18:\n          if (149999843750000 * 10^18 * round_m[stor0].field_256 / 2) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) / 1000000000000000000 * 10^18 > 0:\n              revert with 0, 'SafeMath sub failed'\n          return -((149999843750000 * 10^18 * round_m[stor0].field_256 / 2) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) / 1000000000000000000 * 10^18)\n      if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n          revert with 0, 'SafeMath mul failed'\n      if (149999843750000 * 10^18 * round_m[stor0].field_256 / 2) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) / 1000000000000000000 * 10^18 > (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return (((1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * round_m[stor0].field_256 / 2) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) / 1000000000000000000 * 10^18))\n  if (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 149999843750000 != (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if not round_m[stor0].field_256 + 10 * 10^18:\n      if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n          revert with 0, 'SafeMath add failed'\n      if (149999843750000 * 10^18 * round_m[stor0].field_256 / 2) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 / 1000000000000000000 * 10^18:\n          revert with 0, 'SafeMath sub failed'\n      return (((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * round_m[stor0].field_256 / 2) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) / 1000000000000000000 * 10^18))\n  if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n      revert with 0, 'SafeMath mul failed'\n  if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n      revert with 0, 'SafeMath add failed'\n  if (149999843750000 * 10^18 * round_m[stor0].field_256 / 2) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2) + (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n      revert with 0, 'SafeMath sub failed'\n  return ((((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2) + (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * round_m[stor0].field_256 / 2) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) / 1000000000000000000 * 10^18))\n\ndef getCurrentRoundInfo(): # not payable\n  if not round_m[stor0].field_0:\n      if round_m[stor0].field_6656 + round_m[stor0].field_6400 < round_m[stor0].field_6400:\n          revert with 0, 'SafeMath add failed'\n  else:\n      if 30 * round_m[stor0].field_0 / round_m[stor0].field_0 != 30:\n          revert with 0, 'SafeMath mul failed'\n      if round_m[stor0].field_6656 + round_m[stor0].field_6400 < round_m[stor0].field_6400:\n          revert with 0, 'SafeMath add failed'\n      if 30 * round_m[stor0].field_0 / 100 < 0:\n          revert with 0, 'SafeMath add failed'\n  if block.timestamp <= round_m[stor0].field_768:\n      if 15000000 * 10^18 <= round_m[stor0].field_256:\n          if 15000000 * 10^18 > round_m[stor0].field_256:\n              if 15000000 * 10^18 <= round_m[stor0].field_256:\n                  if block.timestamp > round_m[stor0].field_1024:\n                      if round_m[stor0].field_1024 > block.timestamp:\n                          revert with 0, 'SafeMath sub failed'\n                      if block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                          if 5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0].field_1024 / 3 * 3600 != 5 * 10^16:\n                              revert with 0, 'SafeMath mul failed'\n                          if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                              revert with 0, 'SafeMath add failed'\n          else:\n              if not round_m[stor0].field_1024:\n                  if 15000000 * 10^18 <= round_m[stor0].field_256:\n                      if block.timestamp > round_m[stor0].field_1024:\n                          if round_m[stor0].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                              if 5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0].field_1024 / 3 * 3600 != 5 * 10^16:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n              else:\n                  if not round_m[stor0].field_1536:\n                      if 15000000 * 10^18 <= round_m[stor0].field_256:\n                          if block.timestamp > round_m[stor0].field_1024:\n                              if round_m[stor0].field_1024 > block.timestamp:\n                                  revert with 0, 'SafeMath sub failed'\n                              if block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                                  if 5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0].field_1024 / 3 * 3600 != 5 * 10^16:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                                      revert with 0, 'SafeMath add failed'\n                  else:\n                      if block.timestamp >= round_m[stor0].field_1024:\n                          if 15000000 * 10^18 <= round_m[stor0].field_256:\n                              if block.timestamp > round_m[stor0].field_1024:\n                                  if round_m[stor0].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n      else:\n          if round_m[stor0].field_256 + 10 * 10^18 < round_m[stor0].field_256:\n              revert with 0, 'SafeMath add failed'\n          if 10 * 10^18 > round_m[stor0].field_256 + 10 * 10^18:\n              revert with 0, 'SafeMath sub failed'\n          if not round_m[stor0].field_256:\n              if not round_m[stor0].field_256:\n                  if not round_m[stor0].field_256 + 10 * 10^18:\n                      if round_m[stor0].field_256 + 10 * 10^18:\n                          if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if 0 > (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                  else:\n                      if (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 149999843750000 != (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      if not round_m[stor0].field_256 + 10 * 10^18:\n                          if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if 0 > (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 / 1000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                      else:\n                          if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if 0 > ((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2) + (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath sub failed'\n              else:\n                  if round_m[stor0].field_256 * round_m[stor0].field_256 / round_m[stor0].field_256 != round_m[stor0].field_256:\n                      revert with 0, 'SafeMath mul failed'\n                  if 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 78125000 != round_m[stor0].field_256 * round_m[stor0].field_256:\n                      revert with 0, 'SafeMath mul failed'\n                  if 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 < 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256:\n                      revert with 0, 'SafeMath add failed'\n                  if not round_m[stor0].field_256 + 10 * 10^18:\n                      if not round_m[stor0].field_256 + 10 * 10^18:\n                          if 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 1000000000000000000 * 10^18 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                      else:\n                          if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 1000000000000000000 * 10^18 > (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                  else:\n                      if (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 149999843750000 != (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      if not round_m[stor0].field_256 + 10 * 10^18:\n                          if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 / 1000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                      else:\n                          if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2) + (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath sub failed'\n          else:\n              if 10^18 * round_m[stor0].field_256 / round_m[stor0].field_256 != 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              if 149999843750000 * 10^18 * round_m[stor0].field_256 / 149999843750000 != 10^18 * round_m[stor0].field_256:\n                  revert with 0, 'SafeMath mul failed'\n              if not round_m[stor0].field_256:\n                  if 149999843750000 * 10^18 * round_m[stor0].field_256 / 2 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  if not round_m[stor0].field_256 + 10 * 10^18:\n                      if not round_m[stor0].field_256 + 10 * 10^18:\n                          if 149999843750000 * 10^18 * round_m[stor0].field_256 / 2 / 1000000000000000000 * 10^18 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                      else:\n                          if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if 149999843750000 * 10^18 * round_m[stor0].field_256 / 2 / 1000000000000000000 * 10^18 > (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                  else:\n                      if (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 149999843750000 != (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      if not round_m[stor0].field_256 + 10 * 10^18:\n                          if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if 149999843750000 * 10^18 * round_m[stor0].field_256 / 2 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 / 1000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                      else:\n                          if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if 149999843750000 * 10^18 * round_m[stor0].field_256 / 2 / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2) + (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath sub failed'\n              else:\n                  if round_m[stor0].field_256 * round_m[stor0].field_256 / round_m[stor0].field_256 != round_m[stor0].field_256:\n                      revert with 0, 'SafeMath mul failed'\n                  if 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256 / 78125000 != round_m[stor0].field_256 * round_m[stor0].field_256:\n                      revert with 0, 'SafeMath mul failed'\n                  if (149999843750000 * 10^18 * round_m[stor0].field_256 / 2) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) < 78125000 * round_m[stor0].field_256 * round_m[stor0].field_256:\n                      revert with 0, 'SafeMath add failed'\n                  if not round_m[stor0].field_256 + 10 * 10^18:\n                      if not round_m[stor0].field_256 + 10 * 10^18:\n                          if (149999843750000 * 10^18 * round_m[stor0].field_256 / 2) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) / 1000000000000000000 * 10^18 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                      else:\n                          if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (149999843750000 * 10^18 * round_m[stor0].field_256 / 2) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) / 1000000000000000000 * 10^18 > (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                  else:\n                      if (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 149999843750000 != (10^18 * round_m[stor0].field_256) + 10000000000000000000 * 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      if not round_m[stor0].field_256 + 10 * 10^18:\n                          if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if (149999843750000 * 10^18 * round_m[stor0].field_256 / 2) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 / 1000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath sub failed'\n                      else:\n                          if (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18 / round_m[stor0].field_256 + 10 * 10^18 != round_m[stor0].field_256 + 10 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 78125000 != (20 * 10^18 * round_m[stor0].field_256) + (round_m[stor0].field_256 * round_m[stor0].field_256) + 100000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          if (149999843750000 * 10^18 * round_m[stor0].field_256 / 2) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * round_m[stor0].field_256) + 0x40257303900c52f73ea59ab87638f75e60000000000 / 2) + (1562500000 * 10^18 * round_m[stor0].field_256) + (78125000 * round_m[stor0].field_256 * round_m[stor0].field_256) + 0x15e531a0a1c872bad2ce16256fe820000000000 / 1000000000000000000 * 10^18:\n                              revert with 0, 'SafeMath sub failed'\n  idx = 1408\n  s = 7\n  while 1760 > idx + 32:\n      mem[idx + 32] = round_m[stor0][s].field_256\n      idx = idx + 32\n      s = s + 1\n      continue \n  idx = 1760\n  s = 18\n  while 1888 > idx + 32:\n      mem[idx + 32] = round_m[stor0][s].field_256\n      idx = idx + 32\n      s = s + 1\n      continue \n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef getPlayerAwardByRndNo(uint256 _rndNo, address _playAddr): # not payable\n  if not round_m[_rndNo].field_0:\n      if round_m[_rndNo].field_6656 > 0:\n          revert with 0, 'SafeMath sub failed'\n      if not -round_m[_rndNo].field_6656:\n          require round_m[_rndNo].field_256\n          if not round_m[_rndNo].field_0:\n              if round_m[_rndNo].field_6400 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 < round_m[_rndNo].field_6400:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_1536 != _playAddr:\n                  if block.timestamp <= round_m[_rndNo].field_768:\n                      return 0, \n                             0 / round_m[_rndNo].field_256,\n                             playerRound_m[_rndNo][address(_playAddr)].field_768,\n                             playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                  if round_m[_rndNo].field_1280 == _playAddr:\n                      if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                              revert with 0, 'SafeMath mul failed'\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                              revert with 0, 'SafeMath add failed'\n              else:\n                  if not round_m[_rndNo].field_1536:\n                      if block.timestamp <= round_m[_rndNo].field_768:\n                          return 0, \n                                 0 / round_m[_rndNo].field_256,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                      if round_m[_rndNo].field_1280 == _playAddr:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if not round_m[_rndNo].field_1024:\n                          if block.timestamp <= round_m[_rndNo].field_768:\n                              return 0, \n                                     0 / round_m[_rndNo].field_256,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                          if round_m[_rndNo].field_1280 == _playAddr:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return 0, \n                                         0 / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 == _playAddr:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 10:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100, \n                                         0 / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 == _playAddr:\n                                  if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100 < (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if ((60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100) + ((10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100) < (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100:\n                                          revert with 0, 'SafeMath add failed'\n          else:\n              if 30 * round_m[_rndNo].field_0 / round_m[_rndNo].field_0 != 30:\n                  revert with 0, 'SafeMath mul failed'\n              if round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) < 30 * round_m[_rndNo].field_0 / 100:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_6656 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_1536 != _playAddr:\n                  if block.timestamp <= round_m[_rndNo].field_768:\n                      return 0, \n                             0 / round_m[_rndNo].field_256,\n                             playerRound_m[_rndNo][address(_playAddr)].field_768,\n                             playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                  if round_m[_rndNo].field_1280 == _playAddr:\n                      if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                              revert with 0, 'SafeMath mul failed'\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                              revert with 0, 'SafeMath add failed'\n              else:\n                  if not round_m[_rndNo].field_1536:\n                      if block.timestamp <= round_m[_rndNo].field_768:\n                          return 0, \n                                 0 / round_m[_rndNo].field_256,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                      if round_m[_rndNo].field_1280 == _playAddr:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if not round_m[_rndNo].field_1024:\n                          if block.timestamp <= round_m[_rndNo].field_768:\n                              return 0, \n                                     0 / round_m[_rndNo].field_256,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                          if round_m[_rndNo].field_1280 == _playAddr:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return 0, \n                                         0 / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 == _playAddr:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 10:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100, \n                                         0 / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 == _playAddr:\n                                  if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                      if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100 < (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if ((60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100) + ((10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100) < (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100:\n                                          revert with 0, 'SafeMath add failed'\n      else:\n          if -1 * playerRound_m[_rndNo][address(_playAddr)].field_256 * round_m[_rndNo].field_6656 / -round_m[_rndNo].field_6656 != playerRound_m[_rndNo][address(_playAddr)].field_256:\n              revert with 0, 'SafeMath mul failed'\n          require round_m[_rndNo].field_256\n          if not round_m[_rndNo].field_0:\n              if round_m[_rndNo].field_6400 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 < round_m[_rndNo].field_6400:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_1536 != _playAddr:\n                  if block.timestamp <= round_m[_rndNo].field_768:\n                      return 0, \n                             -1 * playerRound_m[_rndNo][address(_playAddr)].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256,\n                             playerRound_m[_rndNo][address(_playAddr)].field_768,\n                             playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                  if round_m[_rndNo].field_1280 == _playAddr:\n                      if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                              revert with 0, 'SafeMath mul failed'\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                              revert with 0, 'SafeMath add failed'\n              else:\n                  if not round_m[_rndNo].field_1536:\n                      if block.timestamp <= round_m[_rndNo].field_768:\n                          return 0, \n                                 -1 * playerRound_m[_rndNo][address(_playAddr)].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                      if round_m[_rndNo].field_1280 == _playAddr:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if not round_m[_rndNo].field_1024:\n                          if block.timestamp <= round_m[_rndNo].field_768:\n                              return 0, \n                                     -1 * playerRound_m[_rndNo][address(_playAddr)].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                          if round_m[_rndNo].field_1280 == _playAddr:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return 0, \n                                         -1 * playerRound_m[_rndNo][address(_playAddr)].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 == _playAddr:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 10:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100, \n                                         -1 * playerRound_m[_rndNo][address(_playAddr)].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 == _playAddr:\n                                  if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100 < (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if ((60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100) + ((10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100) < (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100:\n                                          revert with 0, 'SafeMath add failed'\n          else:\n              if 30 * round_m[_rndNo].field_0 / round_m[_rndNo].field_0 != 30:\n                  revert with 0, 'SafeMath mul failed'\n              if round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) < 30 * round_m[_rndNo].field_0 / 100:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_6656 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_1536 != _playAddr:\n                  if block.timestamp <= round_m[_rndNo].field_768:\n                      return 0, \n                             -1 * playerRound_m[_rndNo][address(_playAddr)].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256,\n                             playerRound_m[_rndNo][address(_playAddr)].field_768,\n                             playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                  if round_m[_rndNo].field_1280 == _playAddr:\n                      if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                              revert with 0, 'SafeMath mul failed'\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                              revert with 0, 'SafeMath add failed'\n              else:\n                  if not round_m[_rndNo].field_1536:\n                      if block.timestamp <= round_m[_rndNo].field_768:\n                          return 0, \n                                 -1 * playerRound_m[_rndNo][address(_playAddr)].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                      if round_m[_rndNo].field_1280 == _playAddr:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if not round_m[_rndNo].field_1024:\n                          if block.timestamp <= round_m[_rndNo].field_768:\n                              return 0, \n                                     -1 * playerRound_m[_rndNo][address(_playAddr)].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                          if round_m[_rndNo].field_1280 == _playAddr:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return 0, \n                                         -1 * playerRound_m[_rndNo][address(_playAddr)].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 == _playAddr:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 10:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100, \n                                         -1 * playerRound_m[_rndNo][address(_playAddr)].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 == _playAddr:\n                                  if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                      if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100 < (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if ((60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100) + ((10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100) < (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100:\n                                          revert with 0, 'SafeMath add failed'\n  else:\n      if 51 * round_m[_rndNo].field_0 / round_m[_rndNo].field_0 != 51:\n          revert with 0, 'SafeMath mul failed'\n      if round_m[_rndNo].field_6656 > 51 * round_m[_rndNo].field_0 / 100:\n          revert with 0, 'SafeMath sub failed'\n      if not (51 * round_m[_rndNo].field_0 / 100) - round_m[_rndNo].field_6656:\n          require round_m[_rndNo].field_256\n          if not round_m[_rndNo].field_0:\n              if round_m[_rndNo].field_6400 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 < round_m[_rndNo].field_6400:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_1536 != _playAddr:\n                  if block.timestamp <= round_m[_rndNo].field_768:\n                      return 0, \n                             0 / round_m[_rndNo].field_256,\n                             playerRound_m[_rndNo][address(_playAddr)].field_768,\n                             playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                  if round_m[_rndNo].field_1280 == _playAddr:\n                      if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                              revert with 0, 'SafeMath mul failed'\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                              revert with 0, 'SafeMath add failed'\n              else:\n                  if not round_m[_rndNo].field_1536:\n                      if block.timestamp <= round_m[_rndNo].field_768:\n                          return 0, \n                                 0 / round_m[_rndNo].field_256,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                      if round_m[_rndNo].field_1280 == _playAddr:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if not round_m[_rndNo].field_1024:\n                          if block.timestamp <= round_m[_rndNo].field_768:\n                              return 0, \n                                     0 / round_m[_rndNo].field_256,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                          if round_m[_rndNo].field_1280 == _playAddr:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return 0, \n                                         0 / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 == _playAddr:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 10:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100, \n                                         0 / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 == _playAddr:\n                                  if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100 < (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if ((60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100) + ((10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100) < (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100:\n                                          revert with 0, 'SafeMath add failed'\n          else:\n              if 30 * round_m[_rndNo].field_0 / round_m[_rndNo].field_0 != 30:\n                  revert with 0, 'SafeMath mul failed'\n              if round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) < 30 * round_m[_rndNo].field_0 / 100:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_6656 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_1536 != _playAddr:\n                  if block.timestamp <= round_m[_rndNo].field_768:\n                      return 0, \n                             0 / round_m[_rndNo].field_256,\n                             playerRound_m[_rndNo][address(_playAddr)].field_768,\n                             playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                  if round_m[_rndNo].field_1280 == _playAddr:\n                      if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                              revert with 0, 'SafeMath mul failed'\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                              revert with 0, 'SafeMath add failed'\n              else:\n                  if not round_m[_rndNo].field_1536:\n                      if block.timestamp <= round_m[_rndNo].field_768:\n                          return 0, \n                                 0 / round_m[_rndNo].field_256,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                      if round_m[_rndNo].field_1280 == _playAddr:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if not round_m[_rndNo].field_1024:\n                          if block.timestamp <= round_m[_rndNo].field_768:\n                              return 0, \n                                     0 / round_m[_rndNo].field_256,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                          if round_m[_rndNo].field_1280 == _playAddr:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return 0, \n                                         0 / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 == _playAddr:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 10:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100, \n                                         0 / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 == _playAddr:\n                                  if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                      if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100 < (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if ((60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100) + ((10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100) < (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100:\n                                          revert with 0, 'SafeMath add failed'\n      else:\n          if (51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][address(_playAddr)].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][address(_playAddr)].field_256) / (51 * round_m[_rndNo].field_0 / 100) - round_m[_rndNo].field_6656 != playerRound_m[_rndNo][address(_playAddr)].field_256:\n              revert with 0, 'SafeMath mul failed'\n          require round_m[_rndNo].field_256\n          if not round_m[_rndNo].field_0:\n              if round_m[_rndNo].field_6400 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 < round_m[_rndNo].field_6400:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_1536 != _playAddr:\n                  if block.timestamp <= round_m[_rndNo].field_768:\n                      return 0, \n                             (51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][address(_playAddr)].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][address(_playAddr)].field_256) / round_m[_rndNo].field_256,\n                             playerRound_m[_rndNo][address(_playAddr)].field_768,\n                             playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                  if round_m[_rndNo].field_1280 == _playAddr:\n                      if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                              revert with 0, 'SafeMath mul failed'\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                              revert with 0, 'SafeMath add failed'\n              else:\n                  if not round_m[_rndNo].field_1536:\n                      if block.timestamp <= round_m[_rndNo].field_768:\n                          return 0, \n                                 (51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][address(_playAddr)].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][address(_playAddr)].field_256) / round_m[_rndNo].field_256,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                      if round_m[_rndNo].field_1280 == _playAddr:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if not round_m[_rndNo].field_1024:\n                          if block.timestamp <= round_m[_rndNo].field_768:\n                              return 0, \n                                     (51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][address(_playAddr)].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][address(_playAddr)].field_256) / round_m[_rndNo].field_256,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                          if round_m[_rndNo].field_1280 == _playAddr:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                      else:\n                          if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return 0, \n                                         (51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][address(_playAddr)].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][address(_playAddr)].field_256) / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 == _playAddr:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 10:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100, \n                                         (51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][address(_playAddr)].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][address(_playAddr)].field_256) / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 == _playAddr:\n                                  if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100 < (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if ((60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100) + ((10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100) < (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100:\n                                          revert with 0, 'SafeMath add failed'\n          else:\n              if 30 * round_m[_rndNo].field_0 / round_m[_rndNo].field_0 != 30:\n                  revert with 0, 'SafeMath mul failed'\n              if round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) < 30 * round_m[_rndNo].field_0 / 100:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_6656 < 0:\n                  revert with 0, 'SafeMath add failed'\n              if round_m[_rndNo].field_1536 != _playAddr:\n                  if block.timestamp <= round_m[_rndNo].field_768:\n                      return 0, \n                             (51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][address(_playAddr)].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][address(_playAddr)].field_256) / round_m[_rndNo].field_256,\n                             playerRound_m[_rndNo][address(_playAddr)].field_768,\n                             playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                  if round_m[_rndNo].field_1280 == _playAddr:\n                      if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                              revert with 0, 'SafeMath mul failed'\n                          if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                              revert with 0, 'SafeMath add failed'\n              else:\n                  if not round_m[_rndNo].field_1536:\n                      if block.timestamp <= round_m[_rndNo].field_768:\n                          return 0, \n                                 (51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][address(_playAddr)].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][address(_playAddr)].field_256) / round_m[_rndNo].field_256,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                 playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                      if round_m[_rndNo].field_1280 == _playAddr:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if not round_m[_rndNo].field_1024:\n                          if block.timestamp <= round_m[_rndNo].field_768:\n                              return 0, \n                                     (51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][address(_playAddr)].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][address(_playAddr)].field_256) / round_m[_rndNo].field_256,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                     playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                          if round_m[_rndNo].field_1280 == _playAddr:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if round_m[_rndNo].field_1792 == _playAddr:\n                                      if 1 > round_m[_rndNo].field_5888:\n                                          revert with 0, 'SafeMath sub failed'\n                      else:\n                          if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return 0, \n                                         (51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][address(_playAddr)].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][address(_playAddr)].field_256) / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 == _playAddr:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 10:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if block.timestamp <= round_m[_rndNo].field_768:\n                                  return (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100, \n                                         (51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][address(_playAddr)].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][address(_playAddr)].field_256) / round_m[_rndNo].field_256,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_768,\n                                         playerRound_m[_rndNo][address(_playAddr)].field_512 + playerRound_m[_rndNo][address(_playAddr)].field_1024\n                              if round_m[_rndNo].field_1280 != _playAddr:\n                                  if round_m[_rndNo].field_1792 == _playAddr:\n                                      if 1 > round_m[_rndNo].field_5888:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                      if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100 < (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                          revert with 0, 'SafeMath mul failed'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef awardByRndNo(uint256 _rndNo): # not payable\n  if ext_code.size(caller):\n      revert with 0, 'sorry humans only'\n  if bool(isStartGame) != 1:\n      revert with 0, 'The game hasn't started yet.'\n  if _rndNo > rndNo:\n      revert with 0, 'You're running too fast'\n  if round_m[_rndNo].field_0:\n      if 30 * round_m[_rndNo].field_0 / round_m[_rndNo].field_0 != 30:\n          revert with 0, 'SafeMath mul failed'\n      if round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) < 30 * round_m[_rndNo].field_0 / 100:\n          revert with 0, 'SafeMath add failed'\n      if round_m[_rndNo].field_6656 < 0:\n          revert with 0, 'SafeMath add failed'\n      if round_m[_rndNo].field_0:\n          if 51 * round_m[_rndNo].field_0 / round_m[_rndNo].field_0 != 51:\n              revert with 0, 'SafeMath mul failed'\n          if round_m[_rndNo].field_6656 > 51 * round_m[_rndNo].field_0 / 100:\n              revert with 0, 'SafeMath sub failed'\n          if (51 * round_m[_rndNo].field_0 / 100) - round_m[_rndNo].field_6656:\n              if (51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / (51 * round_m[_rndNo].field_0 / 100) - round_m[_rndNo].field_6656 != playerRound_m[_rndNo][caller].field_256:\n                  revert with 0, 'SafeMath mul failed'\n              require round_m[_rndNo].field_256\n              if playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256) < (51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256:\n                  revert with 0, 'SafeMath add failed'\n              if playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256) <= playerRound_m[_rndNo][caller].field_512:\n                  if caller == round_m[_rndNo].field_1536:\n                      if round_m[_rndNo].field_1536:\n                          if round_m[_rndNo].field_1024:\n                              if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if block.timestamp <= round_m[_rndNo].field_768:\n                                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if caller == round_m[_rndNo].field_1280:\n                              else:\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 10:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if block.timestamp <= round_m[_rndNo].field_768:\n                                      if playerRound_m[_rndNo][caller].field_1024 > (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if caller == round_m[_rndNo].field_1280:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if block.timestamp > round_m[_rndNo].field_768:\n                      if caller == round_m[_rndNo].field_1280:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if playerRound_m[_rndNo][caller].field_1024 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  playerRound_m[_rndNo][caller].field_1024 = 0\n                  if -playerRound_m[_rndNo][caller].field_1024:\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                  log onAward(\n                        address player=-playerRound_m[_rndNo][caller].field_1024,\n                        uint256 rndNo=block.timestamp,\n                        uint256 eth=caller,\n                        uint256 timeStamp=_rndNo)\n                  stop\n              if playerRound_m[_rndNo][caller].field_512 > playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256):\n                  revert with 0, 'SafeMath sub failed'\n              if playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 < 0:\n                  revert with 0, 'SafeMath add failed'\n              playerRound_m[_rndNo][caller].field_512 = playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256)\n              if caller == round_m[_rndNo].field_1536:\n                  if not round_m[_rndNo].field_1536:\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if round_m[_rndNo].field_1280 != caller:\n                              if round_m[_rndNo].field_1792 == caller:\n                          else:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                      else:\n                          if playerRound_m[_rndNo][caller].field_1024 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[_rndNo][caller].field_1024 = 0\n                  else:\n                      if round_m[_rndNo].field_1024:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 10:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if block.timestamp <= round_m[_rndNo].field_768:\n                              if playerRound_m[_rndNo][caller].field_1024 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if caller == round_m[_rndNo].field_1280:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                          revert with 0, 'SafeMath mul failed'\n              else:\n                  if block.timestamp > round_m[_rndNo].field_768:\n                      if round_m[_rndNo].field_1280 != caller:\n                          if round_m[_rndNo].field_1792 == caller:\n                              if 1 > round_m[_rndNo].field_5888:\n                                  revert with 0, 'SafeMath sub failed'\n                      else:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                  else:\n                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      playerRound_m[_rndNo][caller].field_1024 = 0\n                      if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                          log onAward(\n                                address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                uint256 rndNo=block.timestamp,\n                                uint256 eth=caller,\n                                uint256 timeStamp=_rndNo)\n                      else:\n                          call caller with:\n                             value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                               gas 2300 * is_zero(value) wei\n          else:\n              require round_m[_rndNo].field_256\n              if playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) < 0 / round_m[_rndNo].field_256:\n                  revert with 0, 'SafeMath add failed'\n              if playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) <= playerRound_m[_rndNo][caller].field_512:\n                  if round_m[_rndNo].field_1536 != caller:\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if caller == round_m[_rndNo].field_1280:\n                              if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if round_m[_rndNo].field_1792 == caller:\n                              else:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if round_m[_rndNo].field_1536:\n                          if round_m[_rndNo].field_1024:\n                              if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if block.timestamp <= round_m[_rndNo].field_768:\n                                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if caller == round_m[_rndNo].field_1280:\n                                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              else:\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 10:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if block.timestamp <= round_m[_rndNo].field_768:\n                                      if playerRound_m[_rndNo][caller].field_1024 > (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if caller == round_m[_rndNo].field_1280:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if caller == round_m[_rndNo].field_1280:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  ('le', 'timestamp', ('field', 768, ('stor', ('map', ('param', '_rndNo'), ('name', 'round_m', 2)))))\n                  if playerRound_m[_rndNo][caller].field_1024 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  playerRound_m[_rndNo][caller].field_1024 = 0\n                  if -playerRound_m[_rndNo][caller].field_1024:\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                  log onAward(\n                        address player=-playerRound_m[_rndNo][caller].field_1024,\n                        uint256 rndNo=block.timestamp,\n                        uint256 eth=caller,\n                        uint256 timeStamp=_rndNo)\n                  stop\n              if playerRound_m[_rndNo][caller].field_512 > playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256):\n                  revert with 0, 'SafeMath sub failed'\n              if playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 < 0:\n                  revert with 0, 'SafeMath add failed'\n              playerRound_m[_rndNo][caller].field_512 = playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256)\n              if round_m[_rndNo].field_1536 != caller:\n                  if block.timestamp > round_m[_rndNo].field_768:\n                      if round_m[_rndNo].field_1280 != caller:\n                          if round_m[_rndNo].field_1792 == caller:\n                              if 1 > round_m[_rndNo].field_5888:\n                                  revert with 0, 'SafeMath sub failed'\n                      else:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                  else:\n                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      playerRound_m[_rndNo][caller].field_1024 = 0\n                      if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                          log onAward(\n                                address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                uint256 rndNo=block.timestamp,\n                                uint256 eth=caller,\n                                uint256 timeStamp=_rndNo)\n                          stop\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n              else:\n                  if round_m[_rndNo].field_1536:\n                      if round_m[_rndNo].field_1024:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 10:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if block.timestamp > round_m[_rndNo].field_768:\n                              if round_m[_rndNo].field_1280 != caller:\n                                  if round_m[_rndNo].field_1792 == caller:\n                              else:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if playerRound_m[_rndNo][caller].field_1024 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              playerRound_m[_rndNo][caller].field_1024 = 0\n                  else:\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if round_m[_rndNo].field_1280 != caller:\n                              if round_m[_rndNo].field_1792 == caller:\n                                  if 1 > round_m[_rndNo].field_5888:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                      else:\n                          if playerRound_m[_rndNo][caller].field_1024 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[_rndNo][caller].field_1024 = 0\n                          if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                              log onAward(\n                                    address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                    uint256 rndNo=block.timestamp,\n                                    uint256 eth=caller,\n                                    uint256 timeStamp=_rndNo)\n                          else:\n                              call caller with:\n                                 value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                                   gas 2300 * is_zero(value) wei\n      else:\n          if round_m[_rndNo].field_6656 > 0:\n              revert with 0, 'SafeMath sub failed'\n          if -round_m[_rndNo].field_6656:\n              if -1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / -round_m[_rndNo].field_6656 != playerRound_m[_rndNo][caller].field_256:\n                  revert with 0, 'SafeMath mul failed'\n              require round_m[_rndNo].field_256\n              if playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) < -1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256:\n                  revert with 0, 'SafeMath add failed'\n              if playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) <= playerRound_m[_rndNo][caller].field_512:\n                  if round_m[_rndNo].field_1536 != caller:\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if caller == round_m[_rndNo].field_1280:\n                              if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if round_m[_rndNo].field_1792 == caller:\n                              else:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if round_m[_rndNo].field_1536:\n                          if round_m[_rndNo].field_1024:\n                              if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if block.timestamp <= round_m[_rndNo].field_768:\n                                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if caller == round_m[_rndNo].field_1280:\n                                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              else:\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 10:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if block.timestamp <= round_m[_rndNo].field_768:\n                                      if playerRound_m[_rndNo][caller].field_1024 > (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if caller == round_m[_rndNo].field_1280:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if caller == round_m[_rndNo].field_1280:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  ('le', 'timestamp', ('field', 768, ('stor', ('map', ('param', '_rndNo'), ('name', 'round_m', 2)))))\n                  if playerRound_m[_rndNo][caller].field_1024 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  playerRound_m[_rndNo][caller].field_1024 = 0\n                  if -playerRound_m[_rndNo][caller].field_1024:\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                  log onAward(\n                        address player=-playerRound_m[_rndNo][caller].field_1024,\n                        uint256 rndNo=block.timestamp,\n                        uint256 eth=caller,\n                        uint256 timeStamp=_rndNo)\n                  stop\n              if playerRound_m[_rndNo][caller].field_512 > playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256):\n                  revert with 0, 'SafeMath sub failed'\n              if playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 < 0:\n                  revert with 0, 'SafeMath add failed'\n              playerRound_m[_rndNo][caller].field_512 = playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256)\n              if round_m[_rndNo].field_1536 != caller:\n                  if block.timestamp > round_m[_rndNo].field_768:\n                      if round_m[_rndNo].field_1280 != caller:\n                          if round_m[_rndNo].field_1792 == caller:\n                              if 1 > round_m[_rndNo].field_5888:\n                                  revert with 0, 'SafeMath sub failed'\n                      else:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                  else:\n                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      playerRound_m[_rndNo][caller].field_1024 = 0\n                      if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                          log onAward(\n                                address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                uint256 rndNo=block.timestamp,\n                                uint256 eth=caller,\n                                uint256 timeStamp=_rndNo)\n                          stop\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n              else:\n                  if round_m[_rndNo].field_1536:\n                      if round_m[_rndNo].field_1024:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 10:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if block.timestamp > round_m[_rndNo].field_768:\n                              if round_m[_rndNo].field_1280 != caller:\n                                  if round_m[_rndNo].field_1792 == caller:\n                              else:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if playerRound_m[_rndNo][caller].field_1024 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              playerRound_m[_rndNo][caller].field_1024 = 0\n                  else:\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if round_m[_rndNo].field_1280 != caller:\n                              if round_m[_rndNo].field_1792 == caller:\n                                  if 1 > round_m[_rndNo].field_5888:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                      else:\n                          if playerRound_m[_rndNo][caller].field_1024 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[_rndNo][caller].field_1024 = 0\n                          if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                              log onAward(\n                                    address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                    uint256 rndNo=block.timestamp,\n                                    uint256 eth=caller,\n                                    uint256 timeStamp=_rndNo)\n                          else:\n                              call caller with:\n                                 value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                                   gas 2300 * is_zero(value) wei\n          else:\n              require round_m[_rndNo].field_256\n              if playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) < 0 / round_m[_rndNo].field_256:\n                  revert with 0, 'SafeMath add failed'\n              if playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) <= playerRound_m[_rndNo][caller].field_512:\n                  if round_m[_rndNo].field_1536 != caller:\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if caller == round_m[_rndNo].field_1280:\n                              if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if round_m[_rndNo].field_1792 == caller:\n                                      if 1 > round_m[_rndNo].field_5888:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if round_m[_rndNo].field_1792 == caller:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if not round_m[_rndNo].field_1536:\n                          if block.timestamp > round_m[_rndNo].field_768:\n                              if caller == round_m[_rndNo].field_1280:\n                                  if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                      if round_m[_rndNo].field_1792 == caller:\n                                  else:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if round_m[_rndNo].field_1024:\n                              if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if block.timestamp <= round_m[_rndNo].field_768:\n                                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if caller == round_m[_rndNo].field_1280:\n                                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                                  revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 10:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if block.timestamp <= round_m[_rndNo].field_768:\n                                      if playerRound_m[_rndNo][caller].field_1024 > (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if caller == round_m[_rndNo].field_1280:\n                                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if block.timestamp > round_m[_rndNo].field_768:\n                              if caller == round_m[_rndNo].field_1280:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  ('le', 'timestamp', ('field', 768, ('stor', ('map', ('param', '_rndNo'), ('name', 'round_m', 2)))))\n                  if playerRound_m[_rndNo][caller].field_1024 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  playerRound_m[_rndNo][caller].field_1024 = 0\n                  if -playerRound_m[_rndNo][caller].field_1024:\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                  log onAward(\n                        address player=-playerRound_m[_rndNo][caller].field_1024,\n                        uint256 rndNo=block.timestamp,\n                        uint256 eth=caller,\n                        uint256 timeStamp=_rndNo)\n                  stop\n              if playerRound_m[_rndNo][caller].field_512 > playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256):\n                  revert with 0, 'SafeMath sub failed'\n              if playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 < 0:\n                  revert with 0, 'SafeMath add failed'\n              playerRound_m[_rndNo][caller].field_512 = playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256)\n              if round_m[_rndNo].field_1536 != caller:\n                  if block.timestamp > round_m[_rndNo].field_768:\n                      if caller == round_m[_rndNo].field_1280:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      playerRound_m[_rndNo][caller].field_1024 = 0\n                      if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                          log onAward(\n                                address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                uint256 rndNo=block.timestamp,\n                                uint256 eth=caller,\n                                uint256 timeStamp=_rndNo)\n                          stop\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      log onAward(\n                            address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                            uint256 rndNo=block.timestamp,\n                            uint256 eth=caller,\n                            uint256 timeStamp=_rndNo)\n              else:\n                  if not round_m[_rndNo].field_1536:\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if round_m[_rndNo].field_1280 != caller:\n                              if round_m[_rndNo].field_1792 == caller:\n                                  if 1 > round_m[_rndNo].field_5888:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                      else:\n                          if playerRound_m[_rndNo][caller].field_1024 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[_rndNo][caller].field_1024 = 0\n                          if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                              log onAward(\n                                    address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                    uint256 rndNo=block.timestamp,\n                                    uint256 eth=caller,\n                                    uint256 timeStamp=_rndNo)\n                              stop\n                          call caller with:\n                             value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                  else:\n                      if round_m[_rndNo].field_1024:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 10:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) + (10 * 30 * round_m[_rndNo].field_0 / 100) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                      else:\n                          if block.timestamp > round_m[_rndNo].field_768:\n                              if round_m[_rndNo].field_1280 != caller:\n                                  if round_m[_rndNo].field_1792 == caller:\n                                      if 1 > round_m[_rndNo].field_5888:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100):\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) + (60 * 30 * round_m[_rndNo].field_0 / 100) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 + (30 * round_m[_rndNo].field_0 / 100) != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if playerRound_m[_rndNo][caller].field_1024 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              playerRound_m[_rndNo][caller].field_1024 = 0\n                              if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                                  log onAward(\n                                        address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                        uint256 rndNo=block.timestamp,\n                                        uint256 eth=caller,\n                                        uint256 timeStamp=_rndNo)\n                              else:\n                                  call caller with:\n                                     value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                                       gas 2300 * is_zero(value) wei\n  else:\n      if round_m[_rndNo].field_6400 < 0:\n          revert with 0, 'SafeMath add failed'\n      if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 < round_m[_rndNo].field_6400:\n          revert with 0, 'SafeMath add failed'\n      if round_m[_rndNo].field_0:\n          if 51 * round_m[_rndNo].field_0 / round_m[_rndNo].field_0 != 51:\n              revert with 0, 'SafeMath mul failed'\n          if round_m[_rndNo].field_6656 > 51 * round_m[_rndNo].field_0 / 100:\n              revert with 0, 'SafeMath sub failed'\n          if (51 * round_m[_rndNo].field_0 / 100) - round_m[_rndNo].field_6656:\n              if (51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / (51 * round_m[_rndNo].field_0 / 100) - round_m[_rndNo].field_6656 != playerRound_m[_rndNo][caller].field_256:\n                  revert with 0, 'SafeMath mul failed'\n              require round_m[_rndNo].field_256\n              if playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256) < (51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256:\n                  revert with 0, 'SafeMath add failed'\n              if playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256) <= playerRound_m[_rndNo][caller].field_512:\n                  if round_m[_rndNo].field_1536 != caller:\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if caller == round_m[_rndNo].field_1280:\n                              if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if round_m[_rndNo].field_1792 == caller:\n                              else:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if round_m[_rndNo].field_1536:\n                          if round_m[_rndNo].field_1024:\n                              if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if block.timestamp <= round_m[_rndNo].field_768:\n                                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if caller == round_m[_rndNo].field_1280:\n                                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              else:\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 10:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if block.timestamp <= round_m[_rndNo].field_768:\n                                      if playerRound_m[_rndNo][caller].field_1024 > (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if caller == round_m[_rndNo].field_1280:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if caller == round_m[_rndNo].field_1280:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  ('le', 'timestamp', ('field', 768, ('stor', ('map', ('param', '_rndNo'), ('name', 'round_m', 2)))))\n                  if playerRound_m[_rndNo][caller].field_1024 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  playerRound_m[_rndNo][caller].field_1024 = 0\n                  if -playerRound_m[_rndNo][caller].field_1024:\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                  log onAward(\n                        address player=-playerRound_m[_rndNo][caller].field_1024,\n                        uint256 rndNo=block.timestamp,\n                        uint256 eth=caller,\n                        uint256 timeStamp=_rndNo)\n                  stop\n              if playerRound_m[_rndNo][caller].field_512 > playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256):\n                  revert with 0, 'SafeMath sub failed'\n              if playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 < 0:\n                  revert with 0, 'SafeMath add failed'\n              playerRound_m[_rndNo][caller].field_512 = playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256)\n              if round_m[_rndNo].field_1536 != caller:\n                  if block.timestamp > round_m[_rndNo].field_768:\n                      if round_m[_rndNo].field_1280 != caller:\n                          if round_m[_rndNo].field_1792 == caller:\n                              if 1 > round_m[_rndNo].field_5888:\n                                  revert with 0, 'SafeMath sub failed'\n                      else:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                  else:\n                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      playerRound_m[_rndNo][caller].field_1024 = 0\n                      if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                          log onAward(\n                                address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                uint256 rndNo=block.timestamp,\n                                uint256 eth=caller,\n                                uint256 timeStamp=_rndNo)\n                          stop\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n              else:\n                  if round_m[_rndNo].field_1536:\n                      if round_m[_rndNo].field_1024:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 10:\n                                  revert with 0, 'SafeMath mul failed'\n                      else:\n                          if block.timestamp > round_m[_rndNo].field_768:\n                              if round_m[_rndNo].field_1280 != caller:\n                                  if round_m[_rndNo].field_1792 == caller:\n                              else:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if playerRound_m[_rndNo][caller].field_1024 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              playerRound_m[_rndNo][caller].field_1024 = 0\n                  else:\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if round_m[_rndNo].field_1280 != caller:\n                              if round_m[_rndNo].field_1792 == caller:\n                                  if 1 > round_m[_rndNo].field_5888:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                      else:\n                          if playerRound_m[_rndNo][caller].field_1024 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[_rndNo][caller].field_1024 = 0\n                          if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                              log onAward(\n                                    address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                    uint256 rndNo=block.timestamp,\n                                    uint256 eth=caller,\n                                    uint256 timeStamp=_rndNo)\n                          else:\n                              call caller with:\n                                 value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + ((51 * round_m[_rndNo].field_0 / 100 * playerRound_m[_rndNo][caller].field_256) - (round_m[_rndNo].field_6656 * playerRound_m[_rndNo][caller].field_256) / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                                   gas 2300 * is_zero(value) wei\n          else:\n              require round_m[_rndNo].field_256\n              if playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) < 0 / round_m[_rndNo].field_256:\n                  revert with 0, 'SafeMath add failed'\n              if playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) <= playerRound_m[_rndNo][caller].field_512:\n                  if round_m[_rndNo].field_1536 != caller:\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if caller == round_m[_rndNo].field_1280:\n                              if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if round_m[_rndNo].field_1792 == caller:\n                                      if 1 > round_m[_rndNo].field_5888:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if round_m[_rndNo].field_1792 == caller:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if not round_m[_rndNo].field_1536:\n                          if block.timestamp > round_m[_rndNo].field_768:\n                              if caller == round_m[_rndNo].field_1280:\n                                  if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if round_m[_rndNo].field_1792 == caller:\n                                  else:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if round_m[_rndNo].field_1024:\n                              if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if block.timestamp <= round_m[_rndNo].field_768:\n                                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if caller == round_m[_rndNo].field_1280:\n                                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                                  revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 10:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if block.timestamp <= round_m[_rndNo].field_768:\n                                      if playerRound_m[_rndNo][caller].field_1024 > (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if caller == round_m[_rndNo].field_1280:\n                                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if block.timestamp > round_m[_rndNo].field_768:\n                              if caller == round_m[_rndNo].field_1280:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  ('le', 'timestamp', ('field', 768, ('stor', ('map', ('param', '_rndNo'), ('name', 'round_m', 2)))))\n                  if playerRound_m[_rndNo][caller].field_1024 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  playerRound_m[_rndNo][caller].field_1024 = 0\n                  if -playerRound_m[_rndNo][caller].field_1024:\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                  log onAward(\n                        address player=-playerRound_m[_rndNo][caller].field_1024,\n                        uint256 rndNo=block.timestamp,\n                        uint256 eth=caller,\n                        uint256 timeStamp=_rndNo)\n                  stop\n              if playerRound_m[_rndNo][caller].field_512 > playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256):\n                  revert with 0, 'SafeMath sub failed'\n              if playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 < 0:\n                  revert with 0, 'SafeMath add failed'\n              playerRound_m[_rndNo][caller].field_512 = playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256)\n              if round_m[_rndNo].field_1536 != caller:\n                  if block.timestamp > round_m[_rndNo].field_768:\n                      if caller == round_m[_rndNo].field_1280:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      playerRound_m[_rndNo][caller].field_1024 = 0\n                      if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                          log onAward(\n                                address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                uint256 rndNo=block.timestamp,\n                                uint256 eth=caller,\n                                uint256 timeStamp=_rndNo)\n                          stop\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      log onAward(\n                            address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                            uint256 rndNo=block.timestamp,\n                            uint256 eth=caller,\n                            uint256 timeStamp=_rndNo)\n              else:\n                  if not round_m[_rndNo].field_1536:\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if round_m[_rndNo].field_1280 != caller:\n                              if round_m[_rndNo].field_1792 == caller:\n                                  if 1 > round_m[_rndNo].field_5888:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                      else:\n                          if playerRound_m[_rndNo][caller].field_1024 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[_rndNo][caller].field_1024 = 0\n                          if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                              log onAward(\n                                    address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                    uint256 rndNo=block.timestamp,\n                                    uint256 eth=caller,\n                                    uint256 timeStamp=_rndNo)\n                              stop\n                          call caller with:\n                             value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                  else:\n                      if round_m[_rndNo].field_1024:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 10:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                      else:\n                          if block.timestamp > round_m[_rndNo].field_768:\n                              if round_m[_rndNo].field_1280 != caller:\n                                  if round_m[_rndNo].field_1792 == caller:\n                                      if 1 > round_m[_rndNo].field_5888:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if playerRound_m[_rndNo][caller].field_1024 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              playerRound_m[_rndNo][caller].field_1024 = 0\n                              if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                                  log onAward(\n                                        address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                        uint256 rndNo=block.timestamp,\n                                        uint256 eth=caller,\n                                        uint256 timeStamp=_rndNo)\n                              else:\n                                  call caller with:\n                                     value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                                       gas 2300 * is_zero(value) wei\n      else:\n          if round_m[_rndNo].field_6656 > 0:\n              revert with 0, 'SafeMath sub failed'\n          if not -round_m[_rndNo].field_6656:\n              require round_m[_rndNo].field_256\n              if playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) < 0 / round_m[_rndNo].field_256:\n                  revert with 0, 'SafeMath add failed'\n              if playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) <= playerRound_m[_rndNo][caller].field_512:\n                  if round_m[_rndNo].field_1536 != caller:\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if caller == round_m[_rndNo].field_1280:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                              if round_m[_rndNo].field_1792 == caller:\n                                  if 1 > round_m[_rndNo].field_5888:\n                                      revert with 0, 'SafeMath sub failed'\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if not round_m[_rndNo].field_1536:\n                          if block.timestamp > round_m[_rndNo].field_768:\n                              if caller == round_m[_rndNo].field_1280:\n                                  if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if round_m[_rndNo].field_1792 == caller:\n                                          if 1 > round_m[_rndNo].field_5888:\n                                              revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                      if round_m[_rndNo].field_1792 == caller:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if round_m[_rndNo].field_1024:\n                              if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if block.timestamp > round_m[_rndNo].field_768:\n                                      if round_m[_rndNo].field_1280 != caller:\n                                          if round_m[_rndNo].field_1792 == caller:\n                                      else:\n                                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                                  revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                      playerRound_m[_rndNo][caller].field_1024 = 0\n                              else:\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 10:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if block.timestamp <= round_m[_rndNo].field_768:\n                                      if playerRound_m[_rndNo][caller].field_1024 > (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if ((10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100) - playerRound_m[_rndNo][caller].field_1024 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if caller == round_m[_rndNo].field_1280:\n                                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                                  revert with 0, 'SafeMath mul failed'\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if block.timestamp > round_m[_rndNo].field_768:\n                              if caller == round_m[_rndNo].field_1280:\n                                  if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if round_m[_rndNo].field_1792 == caller:\n                                  else:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  ('le', 'timestamp', ('field', 768, ('stor', ('map', ('param', '_rndNo'), ('name', 'round_m', 2)))))\n                  if playerRound_m[_rndNo][caller].field_1024 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  playerRound_m[_rndNo][caller].field_1024 = 0\n                  if -playerRound_m[_rndNo][caller].field_1024:\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                  log onAward(\n                        address player=-playerRound_m[_rndNo][caller].field_1024,\n                        uint256 rndNo=block.timestamp,\n                        uint256 eth=caller,\n                        uint256 timeStamp=_rndNo)\n                  stop\n              if playerRound_m[_rndNo][caller].field_512 > playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256):\n                  revert with 0, 'SafeMath sub failed'\n              if playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 < 0:\n                  revert with 0, 'SafeMath add failed'\n              playerRound_m[_rndNo][caller].field_512 = playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256)\n              if round_m[_rndNo].field_1536 != caller:\n                  if block.timestamp > round_m[_rndNo].field_768:\n                      if caller == round_m[_rndNo].field_1280:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if playerRound_m[_rndNo][caller].field_1024 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  playerRound_m[_rndNo][caller].field_1024 = 0\n                  if -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                  log onAward(\n                        address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                        uint256 rndNo=block.timestamp,\n                        uint256 eth=caller,\n                        uint256 timeStamp=_rndNo)\n                  stop\n              if not round_m[_rndNo].field_1536:\n                  if block.timestamp > round_m[_rndNo].field_768:\n                      if caller == round_m[_rndNo].field_1280:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      playerRound_m[_rndNo][caller].field_1024 = 0\n                      if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                          log onAward(\n                                address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                uint256 rndNo=block.timestamp,\n                                uint256 eth=caller,\n                                uint256 timeStamp=_rndNo)\n                          stop\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      log onAward(\n                            address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                            uint256 rndNo=block.timestamp,\n                            uint256 eth=caller,\n                            uint256 timeStamp=_rndNo)\n              else:\n                  if round_m[_rndNo].field_1024:\n                      if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                          if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 10:\n                              revert with 0, 'SafeMath mul failed'\n                          if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100 < 0:\n                              revert with 0, 'SafeMath add failed'\n                  else:\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if round_m[_rndNo].field_1280 != caller:\n                              if round_m[_rndNo].field_1792 == caller:\n                                  if 1 > round_m[_rndNo].field_5888:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                      else:\n                          if playerRound_m[_rndNo][caller].field_1024 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[_rndNo][caller].field_1024 = 0\n                          if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                              log onAward(\n                                    address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                    uint256 rndNo=block.timestamp,\n                                    uint256 eth=caller,\n                                    uint256 timeStamp=_rndNo)\n                              stop\n                          call caller with:\n                             value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (0 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n          else:\n              if -1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / -round_m[_rndNo].field_6656 != playerRound_m[_rndNo][caller].field_256:\n                  revert with 0, 'SafeMath mul failed'\n              require round_m[_rndNo].field_256\n              if playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) < -1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256:\n                  revert with 0, 'SafeMath add failed'\n              if playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) <= playerRound_m[_rndNo][caller].field_512:\n                  if round_m[_rndNo].field_1536 != caller:\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if caller == round_m[_rndNo].field_1280:\n                              if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if round_m[_rndNo].field_1792 == caller:\n                                      if 1 > round_m[_rndNo].field_5888:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if round_m[_rndNo].field_1792 == caller:\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if not round_m[_rndNo].field_1536:\n                          if block.timestamp > round_m[_rndNo].field_768:\n                              if caller == round_m[_rndNo].field_1280:\n                                  if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if round_m[_rndNo].field_1792 == caller:\n                                  else:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      else:\n                          if round_m[_rndNo].field_1024:\n                              if not round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if block.timestamp <= round_m[_rndNo].field_768:\n                                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                                          revert with 0, 'SafeMath sub failed'\n                                      if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if caller == round_m[_rndNo].field_1280:\n                                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                                  revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 10:\n                                      revert with 0, 'SafeMath mul failed'\n                                  if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100 < 0:\n                                      revert with 0, 'SafeMath add failed'\n                                  if block.timestamp <= round_m[_rndNo].field_768:\n                                      if playerRound_m[_rndNo][caller].field_1024 > (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100:\n                                          revert with 0, 'SafeMath sub failed'\n                                  else:\n                                      if caller == round_m[_rndNo].field_1280:\n                                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if block.timestamp > round_m[_rndNo].field_768:\n                              if caller == round_m[_rndNo].field_1280:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                          revert with 0, 'SafeMath add failed'\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  ('le', 'timestamp', ('field', 768, ('stor', ('map', ('param', '_rndNo'), ('name', 'round_m', 2)))))\n                  if playerRound_m[_rndNo][caller].field_1024 > 0:\n                      revert with 0, 'SafeMath sub failed'\n                  if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  playerRound_m[_rndNo][caller].field_1024 = 0\n                  if -playerRound_m[_rndNo][caller].field_1024:\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                  log onAward(\n                        address player=-playerRound_m[_rndNo][caller].field_1024,\n                        uint256 rndNo=block.timestamp,\n                        uint256 eth=caller,\n                        uint256 timeStamp=_rndNo)\n                  stop\n              if playerRound_m[_rndNo][caller].field_512 > playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256):\n                  revert with 0, 'SafeMath sub failed'\n              if playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 < 0:\n                  revert with 0, 'SafeMath add failed'\n              playerRound_m[_rndNo][caller].field_512 = playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256)\n              if round_m[_rndNo].field_1536 != caller:\n                  if block.timestamp > round_m[_rndNo].field_768:\n                      if caller == round_m[_rndNo].field_1280:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if playerRound_m[_rndNo][caller].field_1024 > 0:\n                          revert with 0, 'SafeMath sub failed'\n                      if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                          revert with 0, 'SafeMath add failed'\n                      playerRound_m[_rndNo][caller].field_1024 = 0\n                      if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                          log onAward(\n                                address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                uint256 rndNo=block.timestamp,\n                                uint256 eth=caller,\n                                uint256 timeStamp=_rndNo)\n                          stop\n                      call caller with:\n                         value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                           gas 2300 * is_zero(value) wei\n                      if not ext_call.success:\n                          revert with ext_call.return_data[0 len return_data.size]\n                      log onAward(\n                            address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                            uint256 rndNo=block.timestamp,\n                            uint256 eth=caller,\n                            uint256 timeStamp=_rndNo)\n              else:\n                  if not round_m[_rndNo].field_1536:\n                      if block.timestamp > round_m[_rndNo].field_768:\n                          if round_m[_rndNo].field_1280 != caller:\n                              if round_m[_rndNo].field_1792 == caller:\n                                  if 1 > round_m[_rndNo].field_5888:\n                                      revert with 0, 'SafeMath sub failed'\n                          else:\n                              if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                  if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                      revert with 0, 'SafeMath mul failed'\n                      else:\n                          if playerRound_m[_rndNo][caller].field_1024 > 0:\n                              revert with 0, 'SafeMath sub failed'\n                          if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[_rndNo][caller].field_1024 = 0\n                          if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                              log onAward(\n                                    address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                    uint256 rndNo=block.timestamp,\n                                    uint256 eth=caller,\n                                    uint256 timeStamp=_rndNo)\n                              stop\n                          call caller with:\n                             value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                  else:\n                      if round_m[_rndNo].field_1024:\n                          if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 10:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (10 * round_m[_rndNo].field_6656) + (10 * round_m[_rndNo].field_6400) / 100 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                      else:\n                          if block.timestamp > round_m[_rndNo].field_768:\n                              if round_m[_rndNo].field_1280 != caller:\n                                  if round_m[_rndNo].field_1792 == caller:\n                                      if 1 > round_m[_rndNo].field_5888:\n                                          revert with 0, 'SafeMath sub failed'\n                              else:\n                                  if round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400:\n                                      if (60 * round_m[_rndNo].field_6656) + (60 * round_m[_rndNo].field_6400) / round_m[_rndNo].field_6656 + round_m[_rndNo].field_6400 != 60:\n                                          revert with 0, 'SafeMath mul failed'\n                          else:\n                              if playerRound_m[_rndNo][caller].field_1024 > 0:\n                                  revert with 0, 'SafeMath sub failed'\n                              if -playerRound_m[_rndNo][caller].field_1024 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              playerRound_m[_rndNo][caller].field_1024 = 0\n                              if not -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512:\n                                  log onAward(\n                                        address player=-playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512,\n                                        uint256 rndNo=block.timestamp,\n                                        uint256 eth=caller,\n                                        uint256 timeStamp=_rndNo)\n                              else:\n                                  call caller with:\n                                     value -playerRound_m[_rndNo][caller].field_1024 + playerRound_m[_rndNo][caller].field_768 + (-1 * playerRound_m[_rndNo][caller].field_256 * round_m[_rndNo].field_6656 / round_m[_rndNo].field_256) - playerRound_m[_rndNo][caller].field_512 wei\n                                       gas 2300 * is_zero(value) wei\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef buyKeyByAddr(address _inveter) payable: \n  if ext_code.size(caller):\n      revert with 0, 'sorry humans only'\n  if call.value < 10^9:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'pocket lint: not a valid currency'\n  if call.value > 100000 * 10^18:\n      revert with 0, 'no vitalik, no'\n  if bool(isStartGame) != 1:\n      revert with 0, 'The game hasn't started yet.'\n  if block.timestamp <= round_m[stor0].field_768:\n      if 15000000 * 10^18 > round_m[stor0].field_256:\n          if round_m[stor0].field_0:\n              if 10^18 * round_m[stor0].field_0 / round_m[stor0].field_0 != 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              if 10^18 * round_m[stor0].field_0:\n                  if 312500000000000000000000000 * 10^18 * round_m[stor0].field_0 / 10^18 * round_m[stor0].field_0 != 312500000 * 10^18:\n                      revert with 0, 'SafeMath mul failed'\n                  if (312500000000000000000000000 * 10^18 * round_m[stor0].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0].field_0:\n                      revert with 0, 'SafeMath add failed'\n      else:\n          if block.timestamp <= round_m[stor0].field_1024:\n              revert with 0, 'The virus is being prepared...'\n          if round_m[stor0].field_1024 > block.timestamp:\n              revert with 0, 'SafeMath sub failed'\n          if not block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n              if call.value < 5 * 10^16:\n                  revert with 0, 'Ether amount is wrong'\n              if call.value <= 5 * 10^16:\n                  round_m[stor0].field_768 = block.timestamp + 900\n                  round_m[stor0].field_1280 = caller\n                  if playerRound_m[stor0][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                      revert with 0, 'SafeMath add failed'\n                  playerRound_m[stor0][caller].field_0 += 5 * 10^16\n                  if round_m[stor0].field_0 + 5 * 10^16 < 5 * 10^16:\n                      revert with 0, 'SafeMath add failed'\n                  round_m[stor0].field_0 += 5 * 10^16\n                  if totalEth + 5 * 10^16 < 5 * 10^16:\n                      revert with 0, 'SafeMath add failed'\n                  totalEth += 5 * 10^16\n                  if round_m[stor0].field_1024 > block.timestamp:\n                      revert with 0, 'SafeMath sub failed'\n                  if not block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                      if round_m[stor0].field_6656 + 5 * 10^13 < 5 * 10^13:\n                          revert with 0, 'SafeMath add failed'\n                      round_m[stor0].field_6656 += 5 * 10^13\n                      log onDevelopmentStage(\n                            address player=5 * 10^16,\n                            uint256 rndNo=block.timestamp,\n                            uint256 eth=caller,\n                            uint256 timeStamp=rndNo,\n                            address inveter=_inveter)\n                      if not _inveter:\n                          require round_m[stor0].field_5888 % 11 < 11\n                          require round_m[stor0].field_5888 < 4\n                          round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                          require round_m[stor0].field_5888 % 11 < 11\n                          round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                          if round_m[stor0].field_5888 + 1 < round_m[stor0].field_5888:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0].field_5888++\n                          stop\n                      if ext_code.size(_inveter):\n                          require round_m[stor0].field_5888 % 11 < 11\n                          require round_m[stor0].field_5888 < 4\n                          round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                          require round_m[stor0].field_5888 % 11 < 11\n                          round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                          if round_m[stor0].field_5888 + 1 < round_m[stor0].field_5888:\n                              revert with 0, 'SafeMath add failed'\n                  else:\n                      if block.timestamp - round_m[stor0].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0].field_1024 / 3 * 3600 != 1:\n                          revert with 0, 'SafeMath mul failed'\n                      if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                          revert with 0, 'SafeMath add failed'\n                      if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 >= 410:\n                          if round_m[stor0].field_6656 + 205 * 10^14 < 205 * 10^14:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0].field_6656 += 205 * 10^14\n                          log onDevelopmentStage(\n                                address player=5 * 10^16,\n                                uint256 rndNo=block.timestamp,\n                                uint256 eth=caller,\n                                uint256 timeStamp=rndNo,\n                                address inveter=_inveter)\n                          if _inveter:\n                              if ext_code.size(_inveter):\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  require round_m[stor0].field_5888 < 4\n                                  round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                          else:\n                              require round_m[stor0].field_5888 % 11 < 11\n                              require round_m[stor0].field_5888 < 4\n                              round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                              require round_m[stor0].field_5888 % 11 < 11\n                              round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                              if round_m[stor0].field_5888 + 1 < round_m[stor0].field_5888:\n                                  revert with 0, 'SafeMath add failed'\n                              round_m[stor0].field_5888++\n                      else:\n                          if not (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1:\n                              if round_m[stor0].field_6656 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              log onDevelopmentStage(\n                                    address player=5 * 10^16,\n                                    uint256 rndNo=block.timestamp,\n                                    uint256 eth=caller,\n                                    uint256 timeStamp=rndNo,\n                                    address inveter=_inveter)\n                              if not _inveter:\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  require round_m[stor0].field_5888 < 4\n                                  round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                                  if round_m[stor0].field_5888 + 1 < round_m[stor0].field_5888:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_m[stor0].field_5888++\n                                  stop\n                              if ext_code.size(_inveter):\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  require round_m[stor0].field_5888 < 4\n                                  round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                                  if round_m[stor0].field_5888 + 1 < round_m[stor0].field_5888:\n                                      revert with 0, 'SafeMath add failed'\n                          else:\n                              if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 != 5 * 10^16:\n                                  revert with 0, 'SafeMath mul failed'\n                              if round_m[stor0].field_6656 + ((5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000) < (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000:\n                                  revert with 0, 'SafeMath add failed'\n                              round_m[stor0].field_6656 += (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000\n                              log onDevelopmentStage(\n                                    address player=5 * 10^16,\n                                    uint256 rndNo=block.timestamp,\n                                    uint256 eth=caller,\n                                    uint256 timeStamp=rndNo,\n                                    address inveter=_inveter)\n                              if not _inveter:\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  require round_m[stor0].field_5888 < 4\n                                  round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                                  if round_m[stor0].field_5888 + 1 < round_m[stor0].field_5888:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_m[stor0].field_5888++\n                              else:\n                                  if ext_code.size(_inveter):\n                                      require round_m[stor0].field_5888 % 11 < 11\n                                      require round_m[stor0].field_5888 < 4\n                                      round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                                      require round_m[stor0].field_5888 % 11 < 11\n                                      round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n              else:\n                  if 5 * 10^16 > call.value:\n                      revert with 0, 'SafeMath sub failed'\n                  call caller with:\n                     value call.value - 5 * 10^16 wei\n                       gas 2300 * is_zero(value) wei\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  round_m[stor0].field_768 = block.timestamp + 900\n                  round_m[stor0].field_1280 = caller\n                  if playerRound_m[stor0][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                      revert with 0, 'SafeMath add failed'\n                  playerRound_m[stor0][caller].field_0 += 5 * 10^16\n                  if round_m[stor0].field_0 + 5 * 10^16 < 5 * 10^16:\n                      revert with 0, 'SafeMath add failed'\n                  round_m[stor0].field_0 += 5 * 10^16\n                  if totalEth + 5 * 10^16 < 5 * 10^16:\n                      revert with 0, 'SafeMath add failed'\n                  totalEth += 5 * 10^16\n                  if round_m[stor0].field_1024 > block.timestamp:\n                      revert with 0, 'SafeMath sub failed'\n                  if not block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                      if round_m[stor0].field_6656 + 5 * 10^13 < 5 * 10^13:\n                          revert with 0, 'SafeMath add failed'\n                      round_m[stor0].field_6656 += 5 * 10^13\n                      log onDevelopmentStage(\n                            address player=5 * 10^16,\n                            uint256 rndNo=block.timestamp,\n                            uint256 eth=caller,\n                            uint256 timeStamp=rndNo,\n                            address inveter=_inveter)\n                      if _inveter:\n                          if ext_code.size(_inveter):\n                      else:\n                          require round_m[stor0].field_5888 % 11 < 11\n                          require round_m[stor0].field_5888 < 4\n                          round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                          require round_m[stor0].field_5888 % 11 < 11\n                          round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                  else:\n                      if block.timestamp - round_m[stor0].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0].field_1024 / 3 * 3600 != 1:\n                          revert with 0, 'SafeMath mul failed'\n                      if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                          revert with 0, 'SafeMath add failed'\n                      if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 >= 410:\n                          if round_m[stor0].field_6656 + 205 * 10^14 < 205 * 10^14:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0].field_6656 += 205 * 10^14\n                          log onDevelopmentStage(\n                                address player=5 * 10^16,\n                                uint256 rndNo=block.timestamp,\n                                uint256 eth=caller,\n                                uint256 timeStamp=rndNo,\n                                address inveter=_inveter)\n                          if not _inveter:\n                              require round_m[stor0].field_5888 % 11 < 11\n                      else:\n                          if not (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1:\n                              if round_m[stor0].field_6656 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              log onDevelopmentStage(\n                                    address player=5 * 10^16,\n                                    uint256 rndNo=block.timestamp,\n                                    uint256 eth=caller,\n                                    uint256 timeStamp=rndNo,\n                                    address inveter=_inveter)\n                              if _inveter:\n                                  if ext_code.size(_inveter):\n                              else:\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  require round_m[stor0].field_5888 < 4\n                                  round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                          else:\n                              if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 != 5 * 10^16:\n                                  revert with 0, 'SafeMath mul failed'\n                              if round_m[stor0].field_6656 + ((5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000) < (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000:\n                                  revert with 0, 'SafeMath add failed'\n                              round_m[stor0].field_6656 += (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000\n                              log onDevelopmentStage(\n                                    address player=5 * 10^16,\n                                    uint256 rndNo=block.timestamp,\n                                    uint256 eth=caller,\n                                    uint256 timeStamp=rndNo,\n                                    address inveter=_inveter)\n                              if not _inveter:\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  require round_m[stor0].field_5888 < 4\n                                  round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n          else:\n              if 5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0].field_1024 / 3 * 3600 != 5 * 10^16:\n                  revert with 0, 'SafeMath mul failed'\n              if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                  revert with 0, 'SafeMath add failed'\n              if call.value < (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                  revert with 0, 'Ether amount is wrong'\n              if call.value > (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                  if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 > call.value:\n                      revert with 0, 'SafeMath sub failed'\n                  call caller with:\n                     value call.value + (-5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) - 5 * 10^16 wei\n                       gas 2300 * is_zero(value) wei\n                  if not ext_call.success:\n                      revert with ext_call.return_data[0 len return_data.size]\n                  round_m[stor0].field_768 = block.timestamp + 900\n                  round_m[stor0].field_1280 = caller\n                  if playerRound_m[stor0][caller].field_0 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  playerRound_m[stor0][caller].field_0 = playerRound_m[stor0][caller].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16\n                  if round_m[stor0].field_0 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  round_m[stor0].field_0 = round_m[stor0].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16\n                  if totalEth < 0:\n                      revert with 0, 'SafeMath add failed'\n                  totalEth = totalEth + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16\n                  if round_m[stor0].field_1024 > block.timestamp:\n                      revert with 0, 'SafeMath sub failed'\n                  if not block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                      if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 != (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_m[stor0].field_6656 + ((5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000) < (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000:\n                          revert with 0, 'SafeMath add failed'\n                      round_m[stor0].field_6656 += (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000\n                      log onDevelopmentStage(\n                            address player=(5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16,\n                            uint256 rndNo=block.timestamp,\n                            uint256 eth=caller,\n                            uint256 timeStamp=rndNo,\n                            address inveter=_inveter)\n                      if not _inveter:\n                          require round_m[stor0].field_5888 % 11 < 11\n                          require round_m[stor0].field_5888 < 4\n                          round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                  else:\n                      if block.timestamp - round_m[stor0].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0].field_1024 / 3 * 3600 != 1:\n                          revert with 0, 'SafeMath mul failed'\n                      if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                          revert with 0, 'SafeMath add failed'\n                      if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 >= 410:\n                          if (205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 410 != (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                              revert with 0, 'SafeMath mul failed'\n                          if round_m[stor0].field_6656 + ((205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 1000) < (205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 1000:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0].field_6656 += (205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 1000\n                          log onDevelopmentStage(\n                                address player=(5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16,\n                                uint256 rndNo=block.timestamp,\n                                uint256 eth=caller,\n                                uint256 timeStamp=rndNo,\n                                address inveter=_inveter)\n                          if not _inveter:\n                      else:\n                          if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1:\n                              if (10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 != (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                                  revert with 0, 'SafeMath mul failed'\n                              if round_m[stor0].field_6656 + ((10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000) < (10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000:\n                                  revert with 0, 'SafeMath add failed'\n                              round_m[stor0].field_6656 += (10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000\n                              log onDevelopmentStage(\n                                    address player=(5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16,\n                                    uint256 rndNo=block.timestamp,\n                                    uint256 eth=caller,\n                                    uint256 timeStamp=rndNo,\n                                    address inveter=_inveter)\n                              if not _inveter:\n                                  require round_m[stor0].field_5888 % 11 < 11\n                          else:\n                              if round_m[stor0].field_6656 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              log onDevelopmentStage(\n                                    address player=(5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16,\n                                    uint256 rndNo=block.timestamp,\n                                    uint256 eth=caller,\n                                    uint256 timeStamp=rndNo,\n                                    address inveter=_inveter)\n                              if not _inveter:\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  require round_m[stor0].field_5888 < 4\n                                  round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n              else:\n                  round_m[stor0].field_768 = block.timestamp + 900\n                  round_m[stor0].field_1280 = caller\n                  if playerRound_m[stor0][caller].field_0 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  playerRound_m[stor0][caller].field_0 = playerRound_m[stor0][caller].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16\n                  if round_m[stor0].field_0 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  round_m[stor0].field_0 = round_m[stor0].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16\n                  if totalEth < 0:\n                      revert with 0, 'SafeMath add failed'\n                  totalEth = totalEth + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16\n                  if round_m[stor0].field_1024 > block.timestamp:\n                      revert with 0, 'SafeMath sub failed'\n                  if not block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                      if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 != (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_m[stor0].field_6656 + ((5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000) < (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000:\n                          revert with 0, 'SafeMath add failed'\n                      round_m[stor0].field_6656 += (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000\n                      log onDevelopmentStage(\n                            address player=(5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16,\n                            uint256 rndNo=block.timestamp,\n                            uint256 eth=caller,\n                            uint256 timeStamp=rndNo,\n                            address inveter=_inveter)\n                      if not _inveter:\n                          require round_m[stor0].field_5888 % 11 < 11\n                          require round_m[stor0].field_5888 < 4\n                          round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                          require round_m[stor0].field_5888 % 11 < 11\n                          round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                          if round_m[stor0].field_5888 + 1 < round_m[stor0].field_5888:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0].field_5888++\n                      else:\n                          if not ext_code.size(_inveter):\n                              if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                                  if (5 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^17 / (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 != 10:\n                                      revert with 0, 'SafeMath mul failed'\n                          else:\n                              require round_m[stor0].field_5888 % 11 < 11\n                              require round_m[stor0].field_5888 < 4\n                              round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                              require round_m[stor0].field_5888 % 11 < 11\n                              round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                  else:\n                      if block.timestamp - round_m[stor0].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0].field_1024 / 3 * 3600 != 1:\n                          revert with 0, 'SafeMath mul failed'\n                      if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                          revert with 0, 'SafeMath add failed'\n                      if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 >= 410:\n                          if (205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 410 != (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                              revert with 0, 'SafeMath mul failed'\n                          if round_m[stor0].field_6656 + ((205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 1000) < (205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 1000:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0].field_6656 += (205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 1000\n                          log onDevelopmentStage(\n                                address player=(5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16,\n                                uint256 rndNo=block.timestamp,\n                                uint256 eth=caller,\n                                uint256 timeStamp=rndNo,\n                                address inveter=_inveter)\n                          if _inveter:\n                              if ext_code.size(_inveter):\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  require round_m[stor0].field_5888 < 4\n                                  round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                          else:\n                              require round_m[stor0].field_5888 % 11 < 11\n                              require round_m[stor0].field_5888 < 4\n                              round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                              require round_m[stor0].field_5888 % 11 < 11\n                              round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                              if round_m[stor0].field_5888 + 1 < round_m[stor0].field_5888:\n                                  revert with 0, 'SafeMath add failed'\n                      else:\n                          if not (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1:\n                              if round_m[stor0].field_6656 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              log onDevelopmentStage(\n                                    address player=(5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16,\n                                    uint256 rndNo=block.timestamp,\n                                    uint256 eth=caller,\n                                    uint256 timeStamp=rndNo,\n                                    address inveter=_inveter)\n                              if not _inveter:\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  require round_m[stor0].field_5888 < 4\n                                  round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                                  if round_m[stor0].field_5888 + 1 < round_m[stor0].field_5888:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_m[stor0].field_5888++\n                              else:\n                                  if not ext_code.size(_inveter):\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          if (5 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^17 / (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 != 10:\n                                              revert with 0, 'SafeMath mul failed'\n                                  else:\n                                      require round_m[stor0].field_5888 % 11 < 11\n                                      require round_m[stor0].field_5888 < 4\n                                      round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                                      require round_m[stor0].field_5888 % 11 < 11\n                                      round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                          else:\n                              if (10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 != (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                                  revert with 0, 'SafeMath mul failed'\n                              if round_m[stor0].field_6656 + ((10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000) < (10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000:\n                                  revert with 0, 'SafeMath add failed'\n                              round_m[stor0].field_6656 += (10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000\n                              log onDevelopmentStage(\n                                    address player=(5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16,\n                                    uint256 rndNo=block.timestamp,\n                                    uint256 eth=caller,\n                                    uint256 timeStamp=rndNo,\n                                    address inveter=_inveter)\n                              if _inveter:\n                                  if not ext_code.size(_inveter):\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                                  else:\n                                      require round_m[stor0].field_5888 % 11 < 11\n                                      require round_m[stor0].field_5888 < 4\n                                      round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                                      require round_m[stor0].field_5888 % 11 < 11\n                                      round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                              else:\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  require round_m[stor0].field_5888 < 4\n                                  round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                                  require round_m[stor0].field_5888 % 11 < 11\n                                  round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                                  if round_m[stor0].field_5888 + 1 < round_m[stor0].field_5888:\n                                      revert with 0, 'SafeMath add failed'\n                                  round_m[stor0].field_5888++\n  else:\n      if block.timestamp <= round_m[stor0].field_768 + (12 * 3600):\n          revert with 0, 'we should wait some time'\n      if round_m[stor0].field_0:\n          if 14 * round_m[stor0].field_0 / round_m[stor0].field_0 != 14:\n              revert with 0, 'SafeMath mul failed'\n          if round_m[stor0].field_6144 > 14 * round_m[stor0].field_0 / 100:\n              revert with 0, 'SafeMath sub failed'\n          if 11 > round_m[stor0].field_5888:\n              if round_m[stor0].field_5888 > 11:\n                  revert with 0, 'SafeMath sub failed'\n              if round_m[stor0].field_0:\n                  if 30 * round_m[stor0].field_0 / round_m[stor0].field_0 != 30:\n                      revert with 0, 'SafeMath mul failed'\n                  if round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) < 30 * round_m[stor0].field_0 / 100:\n                      revert with 0, 'SafeMath add failed'\n                  if not round_m[stor0].field_1536:\n                      if not round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100):\n                          if -round_m[stor0].field_5888 + 11:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                      else:\n                          if 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) != 4:\n                              revert with 0, 'SafeMath mul failed'\n                          if not -round_m[stor0].field_5888 + 11:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if (11 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) / -round_m[stor0].field_5888 + 11 != 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) + (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                  else:\n                      if not round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100):\n                          if -round_m[stor0].field_5888 + 11:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                      else:\n                          if (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) != 3:\n                              revert with 0, 'SafeMath mul failed'\n                          if not -round_m[stor0].field_5888 + 11:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if (11 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) / -round_m[stor0].field_5888 + 11 != (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) + (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n              else:\n                  if round_m[stor0].field_6400 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  if not round_m[stor0].field_1536:\n                      if round_m[stor0].field_6400:\n                          if 4 * round_m[stor0].field_6400 / round_m[stor0].field_6400 != 4:\n                              revert with 0, 'SafeMath mul failed'\n                          if not -round_m[stor0].field_5888 + 11:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if (11 * 4 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 / 100) / -round_m[stor0].field_5888 + 11 != 4 * round_m[stor0].field_6400 / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * 4 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 / 100) < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * 4 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 / 100) + (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                      else:\n                          if -round_m[stor0].field_5888 + 11:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                  else:\n                      if round_m[stor0].field_6400:\n                          if 3 * round_m[stor0].field_6400 / round_m[stor0].field_6400 != 3:\n                              revert with 0, 'SafeMath mul failed'\n                          if not -round_m[stor0].field_5888 + 11:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if (11 * 3 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 3 * round_m[stor0].field_6400 / 100) / -round_m[stor0].field_5888 + 11 != 3 * round_m[stor0].field_6400 / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * 3 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 3 * round_m[stor0].field_6400 / 100) < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * 3 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 3 * round_m[stor0].field_6400 / 100) + (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                      else:\n                          if -round_m[stor0].field_5888 + 11:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n          else:\n              if rndNo + 1 < rndNo:\n                  revert with 0, 'SafeMath add failed'\n              rndNo++\n              round_m[stor0 + 1].field_512 = block.timestamp\n              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n              round_m[stor0 + 1].field_5888 = 0\n              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                  if round_m[stor0 + 1].field_0:\n                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      if 10^18 * round_m[stor0 + 1].field_0:\n                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                              revert with 0, 'SafeMath add failed'\n              else:\n                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                      revert with 0, 'The virus is being prepared...'\n                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                      revert with 0, 'SafeMath sub failed'\n                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                      if call.value < 5 * 10^16:\n                          revert with 0, 'Ether amount is wrong'\n                      if call.value <= 5 * 10^16:\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 += 5 * 10^16\n                          if round_m[stor0 + 1].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 += 5 * 10^16\n                          if totalEth + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth += 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < 410:\n                                  if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1:\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 / (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                      else:\n                          if 5 * 10^16 > call.value:\n                              revert with 0, 'SafeMath sub failed'\n                          call caller with:\n                             value call.value - 5 * 10^16 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 += 5 * 10^16\n                          if round_m[stor0 + 1].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 += 5 * 10^16\n                          if totalEth + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth += 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                          revert with 0, 'SafeMath mul failed'\n                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                          revert with 0, 'SafeMath add failed'\n                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                          revert with 0, 'Ether amount is wrong'\n                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 = playerRound_m[stor0 + 1][caller].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 = round_m[stor0 + 1].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if totalEth < 0:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth = totalEth + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 != (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                  revert with 0, 'SafeMath mul failed'\n                          else:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < 410:\n                                  if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1:\n                      else:\n                          if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 > call.value:\n                              revert with 0, 'SafeMath sub failed'\n                          call caller with:\n                             value call.value + (-5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) - 5 * 10^16 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 = playerRound_m[stor0 + 1][caller].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 = round_m[stor0 + 1].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if totalEth < 0:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth = totalEth + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n      else:\n          if round_m[stor0].field_6144 > 0:\n              revert with 0, 'SafeMath sub failed'\n          if 11 > round_m[stor0].field_5888:\n              if round_m[stor0].field_5888 > 11:\n                  revert with 0, 'SafeMath sub failed'\n              if round_m[stor0].field_0:\n                  if 30 * round_m[stor0].field_0 / round_m[stor0].field_0 != 30:\n                      revert with 0, 'SafeMath mul failed'\n                  if round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) < 30 * round_m[stor0].field_0 / 100:\n                      revert with 0, 'SafeMath add failed'\n                  if not round_m[stor0].field_1536:\n                      if round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100):\n                          if 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) != 4:\n                              revert with 0, 'SafeMath mul failed'\n                          if -round_m[stor0].field_5888 + 11:\n                              if (11 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) / -round_m[stor0].field_5888 + 11 != 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                      else:\n                          if -round_m[stor0].field_5888 + 11:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                  else:\n                      if round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100):\n                          if (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) != 3:\n                              revert with 0, 'SafeMath mul failed'\n                          if -round_m[stor0].field_5888 + 11:\n                              if (11 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) / -round_m[stor0].field_5888 + 11 != (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                          else:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                      else:\n                          if -round_m[stor0].field_5888 + 11:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n              else:\n                  if round_m[stor0].field_6400 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  if not round_m[stor0].field_1536:\n                      if round_m[stor0].field_6400:\n                          if 4 * round_m[stor0].field_6400 / round_m[stor0].field_6400 != 4:\n                              revert with 0, 'SafeMath mul failed'\n                          if -round_m[stor0].field_5888 + 11:\n                              if (11 * 4 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 / 100) / -round_m[stor0].field_5888 + 11 != 4 * round_m[stor0].field_6400 / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * 4 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 / 100) - round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * 4 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                      else:\n                          if -round_m[stor0].field_5888 + 11:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value > 5 * 10^16:\n                                          if 5 * 10^16 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                                              revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                  else:\n                      if round_m[stor0].field_6400:\n                          if 3 * round_m[stor0].field_6400 / round_m[stor0].field_6400 != 3:\n                              revert with 0, 'SafeMath mul failed'\n                          if -round_m[stor0].field_5888 + 11:\n                              if (11 * 3 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 3 * round_m[stor0].field_6400 / 100) / -round_m[stor0].field_5888 + 11 != 3 * round_m[stor0].field_6400 / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * 3 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 3 * round_m[stor0].field_6400 / 100) - round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * 3 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 3 * round_m[stor0].field_6400 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                      else:\n                          if -round_m[stor0].field_5888 + 11:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value > 5 * 10^16:\n                                          if 5 * 10^16 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                                              revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n          else:\n              if rndNo + 1 < rndNo:\n                  revert with 0, 'SafeMath add failed'\n              rndNo++\n              round_m[stor0 + 1].field_512 = block.timestamp\n              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n              round_m[stor0 + 1].field_5888 = 0\n              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                  if round_m[stor0 + 1].field_0:\n                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      if 10^18 * round_m[stor0 + 1].field_0:\n                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                              revert with 0, 'SafeMath add failed'\n              else:\n                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                      revert with 0, 'The virus is being prepared...'\n                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                      revert with 0, 'SafeMath sub failed'\n                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                      if call.value < 5 * 10^16:\n                          revert with 0, 'Ether amount is wrong'\n                      if call.value <= 5 * 10^16:\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 += 5 * 10^16\n                          if round_m[stor0 + 1].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 += 5 * 10^16\n                          if totalEth + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth += 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < 410:\n                                  if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1:\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 / (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                      else:\n                          if 5 * 10^16 > call.value:\n                              revert with 0, 'SafeMath sub failed'\n                          call caller with:\n                             value call.value - 5 * 10^16 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 += 5 * 10^16\n                          if round_m[stor0 + 1].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 += 5 * 10^16\n                          if totalEth + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth += 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                          revert with 0, 'SafeMath mul failed'\n                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                          revert with 0, 'SafeMath add failed'\n                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                          revert with 0, 'Ether amount is wrong'\n                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 = playerRound_m[stor0 + 1][caller].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 = round_m[stor0 + 1].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if totalEth < 0:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth = totalEth + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 != (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                  revert with 0, 'SafeMath mul failed'\n                          else:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < 410:\n                                  if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1:\n                                      if (10^17 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 / (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 != (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                      else:\n                          if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 > call.value:\n                              revert with 0, 'SafeMath sub failed'\n                          call caller with:\n                             value call.value + (-5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) - 5 * 10^16 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 = playerRound_m[stor0 + 1][caller].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 = round_m[stor0 + 1].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if totalEth < 0:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth = totalEth + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef _fallback(?) payable: # default function\n  if ext_code.size(caller):\n      revert with 0, 'sorry humans only'\n  if call.value < 10^9:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'pocket lint: not a valid currency'\n  if call.value > 100000 * 10^18:\n      revert with 0, 'no vitalik, no'\n  if bool(isStartGame) != 1:\n      revert with 0, 'The game hasn't started yet.'\n  if block.timestamp <= round_m[stor0].field_768:\n      if 15000000 * 10^18 > round_m[stor0].field_256:\n          if round_m[stor0].field_0:\n              if 10^18 * round_m[stor0].field_0 / round_m[stor0].field_0 != 10^18:\n                  revert with 0, 'SafeMath mul failed'\n              if 10^18 * round_m[stor0].field_0:\n                  if 312500000000000000000000000 * 10^18 * round_m[stor0].field_0 / 10^18 * round_m[stor0].field_0 != 312500000 * 10^18:\n                      revert with 0, 'SafeMath mul failed'\n                  if (312500000000000000000000000 * 10^18 * round_m[stor0].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0].field_0:\n                      revert with 0, 'SafeMath add failed'\n      else:\n          if block.timestamp <= round_m[stor0].field_1024:\n              revert with 0, 'The virus is being prepared...'\n          if round_m[stor0].field_1024 > block.timestamp:\n              revert with 0, 'SafeMath sub failed'\n          if not block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n              if call.value < 5 * 10^16:\n                  revert with 0, 'Ether amount is wrong'\n              if call.value <= 5 * 10^16:\n                  round_m[stor0].field_768 = block.timestamp + 900\n                  round_m[stor0].field_1280 = caller\n                  if playerRound_m[stor0][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                      revert with 0, 'SafeMath add failed'\n                  playerRound_m[stor0][caller].field_0 += 5 * 10^16\n                  if round_m[stor0].field_0 + 5 * 10^16 < 5 * 10^16:\n                      revert with 0, 'SafeMath add failed'\n                  round_m[stor0].field_0 += 5 * 10^16\n                  if totalEth + 5 * 10^16 < 5 * 10^16:\n                      revert with 0, 'SafeMath add failed'\n                  totalEth += 5 * 10^16\n                  if round_m[stor0].field_1024 > block.timestamp:\n                      revert with 0, 'SafeMath sub failed'\n                  if not block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                      if round_m[stor0].field_6656 + 5 * 10^13 < 5 * 10^13:\n                          revert with 0, 'SafeMath add failed'\n                      round_m[stor0].field_6656 += 5 * 10^13\n                  else:\n                      if block.timestamp - round_m[stor0].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0].field_1024 / 3 * 3600 != 1:\n                          revert with 0, 'SafeMath mul failed'\n                      if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                          revert with 0, 'SafeMath add failed'\n                      if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 >= 410:\n                          if round_m[stor0].field_6656 + 205 * 10^14 < 205 * 10^14:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0].field_6656 += 205 * 10^14\n                      else:\n                          if not (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1:\n                              if round_m[stor0].field_6656 < 0:\n                                  revert with 0, 'SafeMath add failed'\n                          else:\n                              if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 != 5 * 10^16:\n                                  revert with 0, 'SafeMath mul failed'\n                              if round_m[stor0].field_6656 + ((5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000) < (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000:\n                                  revert with 0, 'SafeMath add failed'\n                              round_m[stor0].field_6656 += (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000\n                  log onDevelopmentStage(\n                        address player=5 * 10^16,\n                        uint256 rndNo=block.timestamp,\n                        uint256 eth=caller,\n                        uint256 timeStamp=rndNo,\n                        address inveter=0)\n                  require round_m[stor0].field_5888 % 11 < 11\n                  require round_m[stor0].field_5888 < 4\n                  round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                  require round_m[stor0].field_5888 % 11 < 11\n                  round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                  if round_m[stor0].field_5888 + 1 < round_m[stor0].field_5888:\n                      revert with 0, 'SafeMath add failed'\n                  round_m[stor0].field_5888++\n                  stop\n              if 5 * 10^16 > call.value:\n                  revert with 0, 'SafeMath sub failed'\n              call caller with:\n                 value call.value - 5 * 10^16 wei\n                   gas 2300 * is_zero(value) wei\n              if not ext_call.success:\n                  revert with ext_call.return_data[0 len return_data.size]\n              round_m[stor0].field_768 = block.timestamp + 900\n              round_m[stor0].field_1280 = caller\n              if playerRound_m[stor0][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                  revert with 0, 'SafeMath add failed'\n              playerRound_m[stor0][caller].field_0 += 5 * 10^16\n              if round_m[stor0].field_0 + 5 * 10^16 < 5 * 10^16:\n                  revert with 0, 'SafeMath add failed'\n              round_m[stor0].field_0 += 5 * 10^16\n              if totalEth + 5 * 10^16 < 5 * 10^16:\n                  revert with 0, 'SafeMath add failed'\n              totalEth += 5 * 10^16\n              if round_m[stor0].field_1024 > block.timestamp:\n                  revert with 0, 'SafeMath sub failed'\n              if not block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                  if round_m[stor0].field_6656 + 5 * 10^13 < 5 * 10^13:\n                      revert with 0, 'SafeMath add failed'\n                  round_m[stor0].field_6656 += 5 * 10^13\n                  log onDevelopmentStage(\n                        address player=5 * 10^16,\n                        uint256 rndNo=block.timestamp,\n                        uint256 eth=caller,\n                        uint256 timeStamp=rndNo,\n                        address inveter=0)\n                  require round_m[stor0].field_5888 % 11 < 11\n                  require round_m[stor0].field_5888 < 4\n                  round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                  require round_m[stor0].field_5888 % 11 < 11\n                  round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n              else:\n                  if block.timestamp - round_m[stor0].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0].field_1024 / 3 * 3600 != 1:\n                      revert with 0, 'SafeMath mul failed'\n                  if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                      revert with 0, 'SafeMath add failed'\n                  if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 >= 410:\n                      if round_m[stor0].field_6656 + 205 * 10^14 < 205 * 10^14:\n                          revert with 0, 'SafeMath add failed'\n                      round_m[stor0].field_6656 += 205 * 10^14\n                      log onDevelopmentStage(\n                            address player=5 * 10^16,\n                            uint256 rndNo=block.timestamp,\n                            uint256 eth=caller,\n                            uint256 timeStamp=rndNo,\n                            address inveter=0)\n                      require round_m[stor0].field_5888 % 11 < 11\n                      require round_m[stor0].field_5888 < 4\n                      round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                  else:\n                      if not (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1:\n                          if round_m[stor0].field_6656 < 0:\n                              revert with 0, 'SafeMath add failed'\n                      else:\n                          if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 != 5 * 10^16:\n                              revert with 0, 'SafeMath mul failed'\n                          if round_m[stor0].field_6656 + ((5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000) < (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0].field_6656 += (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000\n                      log onDevelopmentStage(\n                            address player=5 * 10^16,\n                            uint256 rndNo=block.timestamp,\n                            uint256 eth=caller,\n                            uint256 timeStamp=rndNo,\n                            address inveter=0)\n                      require round_m[stor0].field_5888 % 11 < 11\n                      require round_m[stor0].field_5888 < 4\n                      round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                      require round_m[stor0].field_5888 % 11 < 11\n                      round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n          else:\n              if 5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0].field_1024 / 3 * 3600 != 5 * 10^16:\n                  revert with 0, 'SafeMath mul failed'\n              if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                  revert with 0, 'SafeMath add failed'\n              if call.value < (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                  revert with 0, 'Ether amount is wrong'\n              if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                  round_m[stor0].field_768 = block.timestamp + 900\n                  round_m[stor0].field_1280 = caller\n                  if playerRound_m[stor0][caller].field_0 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  playerRound_m[stor0][caller].field_0 = playerRound_m[stor0][caller].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16\n                  if round_m[stor0].field_0 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  round_m[stor0].field_0 = round_m[stor0].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16\n                  if totalEth < 0:\n                      revert with 0, 'SafeMath add failed'\n                  totalEth = totalEth + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16\n                  if round_m[stor0].field_1024 > block.timestamp:\n                      revert with 0, 'SafeMath sub failed'\n                  if not block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                      if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 != (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_m[stor0].field_6656 + ((5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000) < (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000:\n                          revert with 0, 'SafeMath add failed'\n                      round_m[stor0].field_6656 += (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000\n                  else:\n                      if block.timestamp - round_m[stor0].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0].field_1024 / 3 * 3600 != 1:\n                          revert with 0, 'SafeMath mul failed'\n                      if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                          revert with 0, 'SafeMath add failed'\n                      if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 >= 410:\n                          if (205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 410 != (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                              revert with 0, 'SafeMath mul failed'\n                          if round_m[stor0].field_6656 + ((205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 1000) < (205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 1000:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0].field_6656 += (205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 1000\n                          log onDevelopmentStage(\n                                address player=(5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16,\n                                uint256 rndNo=block.timestamp,\n                                uint256 eth=caller,\n                                uint256 timeStamp=rndNo,\n                                address inveter=0)\n                          require round_m[stor0].field_5888 % 11 < 11\n                          require round_m[stor0].field_5888 < 4\n                          round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                          require round_m[stor0].field_5888 % 11 < 11\n                          round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                          if round_m[stor0].field_5888 + 1 < round_m[stor0].field_5888:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0].field_5888++\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if not (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1:\n                          if round_m[stor0].field_6656 < 0:\n                              revert with 0, 'SafeMath add failed'\n                      else:\n                          if (10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 != (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                              revert with 0, 'SafeMath mul failed'\n                          if round_m[stor0].field_6656 + ((10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000) < (10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0].field_6656 += (10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000\n                  log onDevelopmentStage(\n                        address player=(5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16,\n                        uint256 rndNo=block.timestamp,\n                        uint256 eth=caller,\n                        uint256 timeStamp=rndNo,\n                        address inveter=0)\n                  require round_m[stor0].field_5888 % 11 < 11\n                  require round_m[stor0].field_5888 < 4\n                  round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                  require round_m[stor0].field_5888 % 11 < 11\n                  round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                  if round_m[stor0].field_5888 + 1 < round_m[stor0].field_5888:\n                      revert with 0, 'SafeMath add failed'\n                  round_m[stor0].field_5888++\n                  stop\n              if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 > call.value:\n                  revert with 0, 'SafeMath sub failed'\n              call caller with:\n                 value call.value + (-5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) - 5 * 10^16 wei\n                   gas 2300 * is_zero(value) wei\n              if not ext_call.success:\n                  revert with ext_call.return_data[0 len return_data.size]\n              round_m[stor0].field_768 = block.timestamp + 900\n              round_m[stor0].field_1280 = caller\n              if playerRound_m[stor0][caller].field_0 < 0:\n                  revert with 0, 'SafeMath add failed'\n              playerRound_m[stor0][caller].field_0 = playerRound_m[stor0][caller].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16\n              if round_m[stor0].field_0 < 0:\n                  revert with 0, 'SafeMath add failed'\n              round_m[stor0].field_0 = round_m[stor0].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16\n              if totalEth < 0:\n                  revert with 0, 'SafeMath add failed'\n              totalEth = totalEth + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16\n              if round_m[stor0].field_1024 > block.timestamp:\n                  revert with 0, 'SafeMath sub failed'\n              if not block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                  if (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 != (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                      revert with 0, 'SafeMath mul failed'\n                  if round_m[stor0].field_6656 + ((5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000) < (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000:\n                      revert with 0, 'SafeMath add failed'\n                  round_m[stor0].field_6656 += (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000\n                  log onDevelopmentStage(\n                        address player=(5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16,\n                        uint256 rndNo=block.timestamp,\n                        uint256 eth=caller,\n                        uint256 timeStamp=rndNo,\n                        address inveter=0)\n                  require round_m[stor0].field_5888 % 11 < 11\n                  require round_m[stor0].field_5888 < 4\n                  round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                  require round_m[stor0].field_5888 % 11 < 11\n                  round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n              else:\n                  if block.timestamp - round_m[stor0].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0].field_1024 / 3 * 3600 != 1:\n                      revert with 0, 'SafeMath mul failed'\n                  if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0].field_1024 / 3 * 3600:\n                      revert with 0, 'SafeMath add failed'\n                  if (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 >= 410:\n                      if (205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 410 != (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                          revert with 0, 'SafeMath mul failed'\n                      if round_m[stor0].field_6656 + ((205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 1000) < (205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 1000:\n                          revert with 0, 'SafeMath add failed'\n                      round_m[stor0].field_6656 += (205 * 10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 205 * 10^17 / 1000\n                      log onDevelopmentStage(\n                            address player=(5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16,\n                            uint256 rndNo=block.timestamp,\n                            uint256 eth=caller,\n                            uint256 timeStamp=rndNo,\n                            address inveter=0)\n                      require round_m[stor0].field_5888 % 11 < 11\n                  else:\n                      if not (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1:\n                          if round_m[stor0].field_6656 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          log onDevelopmentStage(\n                                address player=(5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16,\n                                uint256 rndNo=block.timestamp,\n                                uint256 eth=caller,\n                                uint256 timeStamp=rndNo,\n                                address inveter=0)\n                          require round_m[stor0].field_5888 % 11 < 11\n                          require round_m[stor0].field_5888 < 4\n                          round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n                          require round_m[stor0].field_5888 % 11 < 11\n                          round_m[stor0][round_m[stor0].field_5888 % 11].field_1792 = caller\n                      else:\n                          if (10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / (block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 1 != (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16:\n                              revert with 0, 'SafeMath mul failed'\n                          if round_m[stor0].field_6656 + ((10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000) < (10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0].field_6656 += (10^17 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16 / 1000\n                          log onDevelopmentStage(\n                                address player=(5 * 10^16 * block.timestamp - round_m[stor0].field_1024 / 3 * 3600) + 5 * 10^16,\n                                uint256 rndNo=block.timestamp,\n                                uint256 eth=caller,\n                                uint256 timeStamp=rndNo,\n                                address inveter=0)\n                          require round_m[stor0].field_5888 % 11 < 11\n                          require round_m[stor0].field_5888 < 4\n                          round_m[stor0][round_m[stor0].field_5888].field_4608 = round_m[stor0][round_m[stor0].field_5888 % 11].field_1792\n  else:\n      if block.timestamp <= round_m[stor0].field_768 + (12 * 3600):\n          revert with 0, 'we should wait some time'\n      if not round_m[stor0].field_0:\n          if round_m[stor0].field_6144 > 0:\n              revert with 0, 'SafeMath sub failed'\n          if 11 > round_m[stor0].field_5888:\n              if round_m[stor0].field_5888 > 11:\n                  revert with 0, 'SafeMath sub failed'\n              if round_m[stor0].field_0:\n                  if 30 * round_m[stor0].field_0 / round_m[stor0].field_0 != 30:\n                      revert with 0, 'SafeMath mul failed'\n                  if round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) < 30 * round_m[stor0].field_0 / 100:\n                      revert with 0, 'SafeMath add failed'\n                  if not round_m[stor0].field_1536:\n                      if round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100):\n                          if 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) != 4:\n                              revert with 0, 'SafeMath mul failed'\n                          if -round_m[stor0].field_5888 + 11:\n                              if (11 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) / -round_m[stor0].field_5888 + 11 != 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                      else:\n                          if -round_m[stor0].field_5888 + 11:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value > 5 * 10^16:\n                                          if 5 * 10^16 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                                              revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                  else:\n                      if round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100):\n                          if (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) != 3:\n                              revert with 0, 'SafeMath mul failed'\n                          if -round_m[stor0].field_5888 + 11:\n                              if (11 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) / -round_m[stor0].field_5888 + 11 != (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                      else:\n                          if -round_m[stor0].field_5888 + 11:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value > 5 * 10^16:\n                                          if 5 * 10^16 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                                              revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n              else:\n                  if round_m[stor0].field_6400 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  if not round_m[stor0].field_1536:\n                      if round_m[stor0].field_6400:\n                          if 4 * round_m[stor0].field_6400 / round_m[stor0].field_6400 != 4:\n                              revert with 0, 'SafeMath mul failed'\n                          if -round_m[stor0].field_5888 + 11:\n                              if (11 * 4 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 / 100) / -round_m[stor0].field_5888 + 11 != 4 * round_m[stor0].field_6400 / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * 4 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 / 100) - round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * 4 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value > 5 * 10^16:\n                                          if 5 * 10^16 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                                              revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                      else:\n                          if not -round_m[stor0].field_5888 + 11:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value > 5 * 10^16:\n                                          if 5 * 10^16 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                          call caller with:\n                                             value call.value - 5 * 10^16 wei\n                                               gas 2300 * is_zero(value) wei\n                                      else:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                                              revert with 0, 'SafeMath add failed'\n                                          playerRound_m[stor0 + 1][caller].field_0 += 5 * 10^16\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value > (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                          if playerRound_m[stor0 + 1][caller].field_0 < 0:\n                                              revert with 0, 'SafeMath add failed'\n                          else:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value > 5 * 10^16:\n                                          if 5 * 10^16 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                                              revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                  else:\n                      if round_m[stor0].field_6400:\n                          if 3 * round_m[stor0].field_6400 / round_m[stor0].field_6400 != 3:\n                              revert with 0, 'SafeMath mul failed'\n                          if -round_m[stor0].field_5888 + 11:\n                              if (11 * 3 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 3 * round_m[stor0].field_6400 / 100) / -round_m[stor0].field_5888 + 11 != 3 * round_m[stor0].field_6400 / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * 3 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 3 * round_m[stor0].field_6400 / 100) - round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * 3 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 3 * round_m[stor0].field_6400 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value > 5 * 10^16:\n                                          if 5 * 10^16 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                                              revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                      else:\n                          if not -round_m[stor0].field_5888 + 11:\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value > 5 * 10^16:\n                                          if 5 * 10^16 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                          call caller with:\n                                             value call.value - 5 * 10^16 wei\n                                               gas 2300 * is_zero(value) wei\n                                      else:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                                              revert with 0, 'SafeMath add failed'\n                                          playerRound_m[stor0 + 1][caller].field_0 += 5 * 10^16\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value > (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                          if playerRound_m[stor0 + 1][caller].field_0 < 0:\n                                              revert with 0, 'SafeMath add failed'\n                          else:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if -round_m[stor0].field_6144 < -round_m[stor0].field_6144:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value > 5 * 10^16:\n                                          if 5 * 10^16 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                                              revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n          else:\n              if rndNo + 1 < rndNo:\n                  revert with 0, 'SafeMath add failed'\n              rndNo++\n              round_m[stor0 + 1].field_512 = block.timestamp\n              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n              round_m[stor0 + 1].field_5888 = 0\n              round_m[stor0 + 1].field_6400 = -round_m[stor0].field_6144\n              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                  if round_m[stor0 + 1].field_0:\n                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      if 10^18 * round_m[stor0 + 1].field_0:\n                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                              revert with 0, 'SafeMath add failed'\n              else:\n                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                      revert with 0, 'The virus is being prepared...'\n                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                      revert with 0, 'SafeMath sub failed'\n                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                      if call.value < 5 * 10^16:\n                          revert with 0, 'Ether amount is wrong'\n                      if call.value <= 5 * 10^16:\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 += 5 * 10^16\n                          if round_m[stor0 + 1].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 += 5 * 10^16\n                          if totalEth + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth += 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < 410:\n                                  if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1:\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 / (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                  else:\n                      else:\n                          if 5 * 10^16 > call.value:\n                              revert with 0, 'SafeMath sub failed'\n                          call caller with:\n                             value call.value - 5 * 10^16 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 += 5 * 10^16\n                          if round_m[stor0 + 1].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 += 5 * 10^16\n                          if totalEth + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth += 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < 410:\n                  else:\n                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                          revert with 0, 'SafeMath mul failed'\n                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                          revert with 0, 'SafeMath add failed'\n                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                          revert with 0, 'Ether amount is wrong'\n                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 = playerRound_m[stor0 + 1][caller].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 = round_m[stor0 + 1].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if totalEth < 0:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth = totalEth + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 != (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                  revert with 0, 'SafeMath mul failed'\n                          else:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 >= 410:\n                                  if (205 * 10^17 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 205 * 10^17 / 410 != (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                      revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1:\n                                      if (10^17 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 / (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 != (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                      else:\n                          if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 > call.value:\n                              revert with 0, 'SafeMath sub failed'\n                          call caller with:\n                             value call.value + (-5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) - 5 * 10^16 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 = playerRound_m[stor0 + 1][caller].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 = round_m[stor0 + 1].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if totalEth < 0:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth = totalEth + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n      else:\n          if 14 * round_m[stor0].field_0 / round_m[stor0].field_0 != 14:\n              revert with 0, 'SafeMath mul failed'\n          if round_m[stor0].field_6144 > 14 * round_m[stor0].field_0 / 100:\n              revert with 0, 'SafeMath sub failed'\n          if 11 > round_m[stor0].field_5888:\n              if round_m[stor0].field_5888 > 11:\n                  revert with 0, 'SafeMath sub failed'\n              if round_m[stor0].field_0:\n                  if 30 * round_m[stor0].field_0 / round_m[stor0].field_0 != 30:\n                      revert with 0, 'SafeMath mul failed'\n                  if round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) < 30 * round_m[stor0].field_0 / 100:\n                      revert with 0, 'SafeMath add failed'\n                  if not round_m[stor0].field_1536:\n                      if round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100):\n                          if 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) != 4:\n                              revert with 0, 'SafeMath mul failed'\n                          if not -round_m[stor0].field_5888 + 11:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if (11 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) / -round_m[stor0].field_5888 + 11 != 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) / 100) + (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                      else:\n                          if -round_m[stor0].field_5888 + 11:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                  else:\n                      if round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100):\n                          if (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / round_m[stor0].field_6400 + (30 * round_m[stor0].field_0 / 100) != 3:\n                              revert with 0, 'SafeMath mul failed'\n                          if not -round_m[stor0].field_5888 + 11:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if (11 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) / -round_m[stor0].field_5888 + 11 != (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) - (round_m[stor0].field_5888 * (3 * round_m[stor0].field_6400) + (3 * 30 * round_m[stor0].field_0 / 100) / 100) + (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                      else:\n                          if -round_m[stor0].field_5888 + 11:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n              else:\n                  if round_m[stor0].field_6400 < 0:\n                      revert with 0, 'SafeMath add failed'\n                  if not round_m[stor0].field_1536:\n                      if round_m[stor0].field_6400:\n                          if 4 * round_m[stor0].field_6400 / round_m[stor0].field_6400 != 4:\n                              revert with 0, 'SafeMath mul failed'\n                          if -round_m[stor0].field_5888 + 11:\n                              if (11 * 4 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 / 100) / -round_m[stor0].field_5888 + 11 != 4 * round_m[stor0].field_6400 / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * 4 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 / 100) < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * 4 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 4 * round_m[stor0].field_6400 / 100) + (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                      else:\n                          if -round_m[stor0].field_5888 + 11:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value > 5 * 10^16:\n                                          if 5 * 10^16 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                                              revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                  else:\n                      if round_m[stor0].field_6400:\n                          if 3 * round_m[stor0].field_6400 / round_m[stor0].field_6400 != 3:\n                              revert with 0, 'SafeMath mul failed'\n                          if -round_m[stor0].field_5888 + 11:\n                              if (11 * 3 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 3 * round_m[stor0].field_6400 / 100) / -round_m[stor0].field_5888 + 11 != 3 * round_m[stor0].field_6400 / 100:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (11 * 3 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 3 * round_m[stor0].field_6400 / 100) < 0:\n                                  revert with 0, 'SafeMath add failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (11 * 3 * round_m[stor0].field_6400 / 100) - (round_m[stor0].field_5888 * 3 * round_m[stor0].field_6400 / 100) + (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                  else:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                      else:\n                          if -round_m[stor0].field_5888 + 11:\n                              if 0 / -round_m[stor0].field_5888 + 11:\n                                  revert with 0, 'SafeMath mul failed'\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                          else:\n                              if rndNo + 1 < rndNo:\n                                  revert with 0, 'SafeMath add failed'\n                              rndNo++\n                              round_m[stor0 + 1].field_512 = block.timestamp\n                              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n                              round_m[stor0 + 1].field_5888 = 0\n                              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n                              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                                  if round_m[stor0 + 1].field_0:\n                                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if 10^18 * round_m[stor0 + 1].field_0:\n                                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                                              revert with 0, 'SafeMath mul failed'\n                                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                                              revert with 0, 'SafeMath add failed'\n                              else:\n                                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                                      revert with 0, 'The virus is being prepared...'\n                                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                                      revert with 0, 'SafeMath sub failed'\n                                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                      if call.value < 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value > 5 * 10^16:\n                                          if 5 * 10^16 > call.value:\n                                              revert with 0, 'SafeMath sub failed'\n                                      else:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n                                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                                              revert with 0, 'SafeMath add failed'\n                                  else:\n                                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                          revert with 0, 'SafeMath add failed'\n                                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'Ether amount is wrong'\n                                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                                          round_m[stor0 + 1].field_1280 = caller\n          else:\n              if rndNo + 1 < rndNo:\n                  revert with 0, 'SafeMath add failed'\n              rndNo++\n              round_m[stor0 + 1].field_512 = block.timestamp\n              round_m[stor0 + 1].field_768 = block.timestamp + (12 * 3600)\n              round_m[stor0 + 1].field_5888 = 0\n              round_m[stor0 + 1].field_6400 = (14 * round_m[stor0].field_0 / 100) - round_m[stor0].field_6144\n              if 15000000 * 10^18 > round_m[stor0 + 1].field_256:\n                  if round_m[stor0 + 1].field_0:\n                      if 10^18 * round_m[stor0 + 1].field_0 / round_m[stor0 + 1].field_0 != 10^18:\n                          revert with 0, 'SafeMath mul failed'\n                      if 10^18 * round_m[stor0 + 1].field_0:\n                          if 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0 / 10^18 * round_m[stor0 + 1].field_0 != 312500000 * 10^18:\n                              revert with 0, 'SafeMath mul failed'\n                          if (312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_m[stor0 + 1].field_0:\n                              revert with 0, 'SafeMath add failed'\n              else:\n                  if block.timestamp <= round_m[stor0 + 1].field_1024:\n                      revert with 0, 'The virus is being prepared...'\n                  if round_m[stor0 + 1].field_1024 > block.timestamp:\n                      revert with 0, 'SafeMath sub failed'\n                  if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                      if call.value < 5 * 10^16:\n                          revert with 0, 'Ether amount is wrong'\n                      if call.value <= 5 * 10^16:\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 += 5 * 10^16\n                          if round_m[stor0 + 1].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 += 5 * 10^16\n                          if totalEth + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth += 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < 410:\n                                  if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1:\n                                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 / (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 != 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                      else:\n                          if 5 * 10^16 > call.value:\n                              revert with 0, 'SafeMath sub failed'\n                          call caller with:\n                             value call.value - 5 * 10^16 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 += 5 * 10^16\n                          if round_m[stor0 + 1].field_0 + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 += 5 * 10^16\n                          if totalEth + 5 * 10^16 < 5 * 10^16:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth += 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n                  else:\n                      if 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 5 * 10^16:\n                          revert with 0, 'SafeMath mul failed'\n                      if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 < 5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                          revert with 0, 'SafeMath add failed'\n                      if call.value < (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                          revert with 0, 'Ether amount is wrong'\n                      if call.value <= (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 = playerRound_m[stor0 + 1][caller].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 = round_m[stor0 + 1].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if totalEth < 0:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth = totalEth + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if not block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 != (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                  revert with 0, 'SafeMath mul failed'\n                          else:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < 410:\n                                  if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1:\n                                      if (10^17 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 / (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 != (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16:\n                                          revert with 0, 'SafeMath mul failed'\n                      else:\n                          if (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16 > call.value:\n                              revert with 0, 'SafeMath sub failed'\n                          call caller with:\n                             value call.value + (-5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) - 5 * 10^16 wei\n                               gas 2300 * is_zero(value) wei\n                          if not ext_call.success:\n                              revert with ext_call.return_data[0 len return_data.size]\n                          round_m[stor0 + 1].field_768 = block.timestamp + 900\n                          round_m[stor0 + 1].field_1280 = caller\n                          if playerRound_m[stor0 + 1][caller].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          playerRound_m[stor0 + 1][caller].field_0 = playerRound_m[stor0 + 1][caller].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_0 < 0:\n                              revert with 0, 'SafeMath add failed'\n                          round_m[stor0 + 1].field_0 = round_m[stor0 + 1].field_0 + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if totalEth < 0:\n                              revert with 0, 'SafeMath add failed'\n                          totalEth = totalEth + (5 * 10^16 * block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 5 * 10^16\n                          if round_m[stor0 + 1].field_1024 > block.timestamp:\n                              revert with 0, 'SafeMath sub failed'\n                          if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                              if block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 / block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600 != 1:\n                                  revert with 0, 'SafeMath mul failed'\n                              if (block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600) + 1 < block.timestamp - round_m[stor0 + 1].field_1024 / 3 * 3600:\n                                  revert with 0, 'SafeMath add failed'\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n",
	"language": "Solidity",
	"status": "This model's maximum context length is 32768 tokens. However, your messages resulted in 155622 tokens. Please reduce the length of the messages."
}