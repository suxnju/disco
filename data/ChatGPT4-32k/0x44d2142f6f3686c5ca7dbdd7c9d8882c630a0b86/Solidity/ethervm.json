{
	"address": "0x44d2142f6f3686c5ca7dbdd7c9d8882c630a0b86",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is the corresponding Solidity contract code for the given EVM Bytecode:\n\n```solidity\npragma solidity ^0.5.0;\n\ncontract Contract {\n    uint256 constant private MAX_UINT256 = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\n    mapping (address => uint256) public balances;\n    mapping (address => mapping (address => uint256)) public allowed;\n\n    string public name;                 \n    uint8 public decimals; \n    string public symbol; \n\n    constructor(\n        uint256 _initialAmount,\n        string memory _tokenName,\n        uint8 _decimalUnits,\n        string memory _tokenSymbol\n    ) public {\n        balances[msg.sender] = _initialAmount;              \n        totalSupply = _initialAmount;                       \n        name = _tokenName;                                  \n        decimals = _decimalUnits;                           \n        symbol = _tokenSymbol;                              \n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        require(balances[msg.sender] >= _value);\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        uint256 allowance = allowed[_from][msg.sender];\n        require(balances[_from] >= _value && allowance >= _value);\n        balances[_to] += _value;\n        balances[_from] -= _value;\n        if (allowance < MAX_UINT256) {\n            allowed[_from][msg.sender] -= _value;\n        }\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n      return allowed[_owner][_spender];\n    }\n}\n```\n\nNote: This translated code might not perfectly match the original contract code (before it was compiled to EVM bytecode), but it should reflect the same logic and functionality as the decompiled code. The contract name, function names and variable names are arbitrarily assigned since they are not recoverable from the bytecode.",
				"role": "assistant"
			}
		}
	],
	"created": 1700475059,
	"id": "chatcmpl-8MvX1cGqVD4bsVuHiuHPe9xCM1eud",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] == 0x66d38203) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!(!storage[0x07] & !storage[0x06] & (memory[0x0140:0x0160] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            storage[0x07] = msg.sender;\n            storage[0x06] = memory[0x0140:0x0160];\n            storage[0x00] = 0x556e697377617020563100000000000000000000000000000000000000000000;\n            storage[0x01] = 0x554e492d56310000000000000000000000000000000000000000000000000000;\n            storage[0x02] = 0x12;\n            stop();\n        } else if (memory[0x00:0x20] == 0x422f1043) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n        \n            if (!((memory[0x0180:0x01a0] > block.timestamp) & (memory[0x0160:0x0180] > 0x00) & (msg.value > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01a0:0x01c0] = storage[0x03];\n        \n            if (memory[0x01a0:0x01c0] <= 0x00) {\n                if (!((storage[0x07] != 0x00) & (storage[0x06] != 0x00) & (msg.value >= 0x3b9aca00))) { revert(memory[0x00:0x00]); }\n            \n                var0 = address(this);\n            \n                if (!address(storage[0x07]).code.length) { revert(memory[0x00:0x00]); }\n            \n                if (address(this) == storage[0x07]) { revert(memory[0x00:0x00]); }\n            \n                memory[0x01c0:0x01e0] = 0x06f2bf62;\n                memory[0x01e0:0x0200] = storage[0x06];\n                var temp30;\n                temp30, memory[0x0240:0x0260] = address(storage[0x07]).staticcall.gas(msg.gas)(memory[0x01dc:0x0200]);\n            \n                if (!temp30) { revert(memory[0x00:0x00]); }\n            \n                if (memory[0x0240:0x0260] != var0) { revert(memory[0x00:0x00]); }\n            \n                memory[0x0260:0x0280] = memory[0x0160:0x0180];\n                memory[0x0280:0x02a0] = address(this).balance;\n                storage[0x03] = memory[0x0280:0x02a0];\n                var temp31 = memory[0x0280:0x02a0];\n                memory[0xe0:0x0100] = msg.sender;\n                memory[0xc0:0xe0] = 0x04;\n                storage[keccak256(memory[0xc0:0x0100])] = temp31;\n            \n                if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n            \n                if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n            \n                memory[0x02a0:0x02c0] = 0x23b872dd;\n                memory[0x02c0:0x02e0] = msg.sender;\n                memory[0x02e0:0x0300] = address(this);\n                memory[0x0300:0x0320] = memory[0x0260:0x0280];\n                var temp32;\n                temp32, memory[0x0360:0x0380] = address(storage[0x06]).call.gas(msg.gas)(memory[0x02bc:0x0320]);\n            \n                if (!temp32) { revert(memory[0x00:0x00]); }\n            \n                if (!memory[0x0360:0x0380]) { revert(memory[0x00:0x00]); }\n            \n                log(memory[0x00:0x00], [0x06239653922ac7bea6aa2b19dc486b9361821d37712eb796adfd38d81de278ca, msg.sender, msg.value, memory[0x0260:0x0280]]);\n                memory[0x0380:0x03a0] = memory[0x0280:0x02a0];\n                log(memory[0x0380:0x03a0], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, 0x00, msg.sender]);\n                memory[0x00:0x20] = memory[0x0280:0x02a0];\n                return memory[0x00:0x20];\n            } else if (memory[0x0140:0x0160] > 0x00) {\n                if (address(this).balance < msg.value) { revert(memory[0x00:0x00]); }\n            \n                memory[0x03a0:0x03c0] = address(this).balance - msg.value;\n            \n                if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n            \n                if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n            \n                memory[0x03e0:0x0400] = 0x70a08231;\n                memory[0x0400:0x0420] = address(this);\n                var temp33;\n                temp33, memory[0x0460:0x0480] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x03fc:0x0420]);\n            \n                if (!temp33) { revert(memory[0x00:0x00]); }\n            \n                memory[0x03c0:0x03e0] = memory[0x0460:0x0480];\n            \n                if (!memory[0x03a0:0x03c0]) { revert(memory[0x00:0x00]); }\n            \n                var0 = memory[0x03a0:0x03c0];\n            \n                if (!msg.value) {\n                    var1 = 0x00;\n                    var0 = var1 / var0;\n                    var1 = 0x01;\n                \n                    if (memory[0x03a0:0x03c0]) { goto label_023F; }\n                    else { revert(memory[0x00:0x00]); }\n                } else if ((msg.value * memory[0x03c0:0x03e0]) / msg.value == memory[0x03c0:0x03e0]) {\n                    var0 = (msg.value * memory[0x03c0:0x03e0]) / var0;\n                    var1 = 0x01;\n                \n                    if (!memory[0x03a0:0x03c0]) { revert(memory[0x00:0x00]); }\n                \n                label_023F:\n                    var2 = memory[0x03a0:0x03c0];\n                \n                    if (!msg.value) {\n                        var3 = 0x00;\n                    \n                        if (var3 / var2 + var1 >= var0) { goto label_027B; }\n                        else { revert(memory[0x00:0x00]); }\n                    } else if ((msg.value * memory[0x03c0:0x03e0]) / msg.value == memory[0x03c0:0x03e0]) {\n                        if ((msg.value * memory[0x03c0:0x03e0]) / var2 + var1 < var0) { revert(memory[0x00:0x00]); }\n                    \n                    label_027B:\n                        var0 = 0x01;\n                    \n                        if (!memory[0x03a0:0x03c0]) { revert(memory[0x00:0x00]); }\n                    \n                        var1 = memory[0x03a0:0x03c0];\n                    \n                        if (!msg.value) {\n                            var2 = 0x00;\n                            memory[0x0480:0x04a0] = var2 / var1 + var0;\n                        \n                            if (memory[0x03a0:0x03c0]) { goto label_02CC; }\n                            else { revert(memory[0x00:0x00]); }\n                        } else if ((msg.value * memory[0x03c0:0x03e0]) / msg.value == memory[0x03c0:0x03e0]) {\n                            memory[0x0480:0x04a0] = (msg.value * memory[0x03c0:0x03e0]) / var1 + var0;\n                        \n                            if (!memory[0x03a0:0x03c0]) { revert(memory[0x00:0x00]); }\n                        \n                        label_02CC:\n                            var0 = memory[0x03a0:0x03c0];\n                        \n                            if (!msg.value) {\n                                var1 = 0x00;\n                                goto label_02FB;\n                            } else if ((msg.value * memory[0x01a0:0x01c0]) / msg.value == memory[0x01a0:0x01c0]) {\n                                var1 = msg.value * memory[0x01a0:0x01c0];\n                            \n                            label_02FB:\n                                memory[0x04a0:0x04c0] = var1 / var0;\n                            \n                                if (!((memory[0x0160:0x0180] >= memory[0x0480:0x04a0]) & (memory[0x04a0:0x04c0] >= memory[0x0140:0x0160]))) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.sender;\n                                memory[0xc0:0xe0] = 0x04;\n                                var temp34 = keccak256(memory[0xc0:0x0100]);\n                                var0 = temp34;\n                            \n                                if (storage[var0] + memory[0x04a0:0x04c0] < storage[var0]) { revert(memory[0x00:0x00]); }\n                            \n                                var temp35 = var0;\n                                storage[temp35] = storage[temp35] + memory[0x04a0:0x04c0];\n                            \n                                if (memory[0x01a0:0x01c0] + memory[0x04a0:0x04c0] < memory[0x01a0:0x01c0]) { revert(memory[0x00:0x00]); }\n                            \n                                storage[0x03] = memory[0x01a0:0x01c0] + memory[0x04a0:0x04c0];\n                            \n                                if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n                            \n                                if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0x04c0:0x04e0] = 0x23b872dd;\n                                memory[0x04e0:0x0500] = msg.sender;\n                                memory[0x0500:0x0520] = address(this);\n                                memory[0x0520:0x0540] = memory[0x0480:0x04a0];\n                                var temp36;\n                                temp36, memory[0x0580:0x05a0] = address(storage[0x06]).call.gas(msg.gas)(memory[0x04dc:0x0540]);\n                            \n                                if (!temp36) { revert(memory[0x00:0x00]); }\n                            \n                                if (!memory[0x0580:0x05a0]) { revert(memory[0x00:0x00]); }\n                            \n                                log(memory[0x00:0x00], [0x06239653922ac7bea6aa2b19dc486b9361821d37712eb796adfd38d81de278ca, msg.sender, msg.value, memory[0x0480:0x04a0]]);\n                                memory[0x05a0:0x05c0] = memory[0x04a0:0x04c0];\n                                log(memory[0x05a0:0x05c0], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, 0x00, msg.sender]);\n                                memory[0x00:0x20] = memory[0x04a0:0x04c0];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else { revert(memory[0x00:0x00]); }\n                    } else { revert(memory[0x00:0x00]); }\n                } else { revert(memory[0x00:0x00]); }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (memory[0x00:0x20] == 0xf88bf15a) {\n            memory[0x0140:0x01c0] = msg.data[0x04:0x84];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x0140:0x0160] > 0x00) & (memory[0x01a0:0x01c0] > block.timestamp) & (memory[0x0160:0x0180] > 0x00) & (memory[0x0180:0x01a0] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01c0:0x01e0] = storage[0x03];\n        \n            if (memory[0x01c0:0x01e0] <= 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = 0x70a08231;\n            memory[0x0220:0x0240] = address(this);\n            var temp26;\n            temp26, memory[0x0280:0x02a0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x021c:0x0240]);\n        \n            if (!temp26) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01e0:0x0200] = memory[0x0280:0x02a0];\n        \n            if (!memory[0x01c0:0x01e0]) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x01c0:0x01e0];\n        \n            if (!memory[0x0140:0x0160]) {\n                var1 = 0x00;\n                memory[0x02a0:0x02c0] = var1 / var0;\n            \n                if (memory[0x01c0:0x01e0]) { goto label_06AB; }\n                else { revert(memory[0x00:0x00]); }\n            } else if ((memory[0x0140:0x0160] * address(this).balance) / memory[0x0140:0x0160] == address(this).balance) {\n                memory[0x02a0:0x02c0] = (memory[0x0140:0x0160] * address(this).balance) / var0;\n            \n                if (!memory[0x01c0:0x01e0]) { revert(memory[0x00:0x00]); }\n            \n            label_06AB:\n                var0 = memory[0x01c0:0x01e0];\n            \n                if (!memory[0x0140:0x0160]) {\n                    var1 = 0x00;\n                    memory[0x02c0:0x02e0] = var1 / var0;\n                \n                    if ((memory[0x02a0:0x02c0] >= memory[0x0160:0x0180]) & (memory[0x02c0:0x02e0] >= memory[0x0180:0x01a0])) { goto label_0709; }\n                    else { revert(memory[0x00:0x00]); }\n                } else if ((memory[0x0140:0x0160] * memory[0x01e0:0x0200]) / memory[0x0140:0x0160] == memory[0x01e0:0x0200]) {\n                    memory[0x02c0:0x02e0] = (memory[0x0140:0x0160] * memory[0x01e0:0x0200]) / var0;\n                \n                    if (!((memory[0x02a0:0x02c0] >= memory[0x0160:0x0180]) & (memory[0x02c0:0x02e0] >= memory[0x0180:0x01a0]))) { revert(memory[0x00:0x00]); }\n                \n                label_0709:\n                    memory[0xe0:0x0100] = msg.sender;\n                    memory[0xc0:0xe0] = 0x04;\n                    var0 = keccak256(memory[0xc0:0x0100]);\n                \n                    if (storage[var0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                \n                    var temp27 = var0;\n                    storage[temp27] = storage[temp27] - memory[0x0140:0x0160];\n                \n                    if (memory[0x01c0:0x01e0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                \n                    storage[0x03] = memory[0x01c0:0x01e0] - memory[0x0140:0x0160];\n                    var temp28;\n                    temp28, memory[0x00:0x00] = address(msg.sender).call.gas(0x00).value(memory[0x02a0:0x02c0])(memory[0x00:0x00]);\n                \n                    if (!temp28) { revert(memory[0x00:0x00]); }\n                \n                    if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n                \n                    if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0x02e0:0x0300] = 0xa9059cbb;\n                    memory[0x0300:0x0320] = msg.sender;\n                    memory[0x0320:0x0340] = memory[0x02c0:0x02e0];\n                    var temp29;\n                    temp29, memory[0x0380:0x03a0] = address(storage[0x06]).call.gas(msg.gas)(memory[0x02fc:0x0340]);\n                \n                    if (!temp29) { revert(memory[0x00:0x00]); }\n                \n                    if (!memory[0x0380:0x03a0]) { revert(memory[0x00:0x00]); }\n                \n                    log(memory[0x00:0x00], [0x0fbf06c058b90cb038a618f8c2acbf6145f8b3570fd1fa56abb8f0f3f05b36e8, msg.sender, memory[0x02a0:0x02c0], memory[0x02c0:0x02e0]]);\n                    memory[0x03a0:0x03c0] = memory[0x0140:0x0160];\n                    log(memory[0x03a0:0x03c0], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, msg.sender, 0x00]);\n                    memory[0x03c0:0x03e0] = 0x40;\n                    memory[0x03e0:0x0400] = memory[0x02a0:0x02c0];\n                    memory[0x0400:0x0420] = memory[0x02c0:0x02e0];\n                    return memory[0x03e0:0x03e0 + memory[0x03c0:0x03e0]];\n                } else { revert(memory[0x00:0x00]); }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (0x00) {\n            memory[0x01a0:0x01c0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n        \n            if (!((memory[0x0160:0x0180] > 0x00) & (memory[0x0180:0x01a0] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!memory[0x0140:0x0160]) {\n                var-4 = 0x00;\n                memory[0x01c0:0x01e0] = var-4;\n            \n                if (memory[0x01c0:0x01e0]) { goto label_08C3; }\n                else { goto label_08BD; }\n            } else if ((memory[0x0140:0x0160] * 0x03e5) / memory[0x0140:0x0160] == 0x03e5) {\n                memory[0x01c0:0x01e0] = memory[0x0140:0x0160] * 0x03e5;\n            \n                if (memory[0x01c0:0x01e0]) {\n                label_08C3:\n                \n                    if ((memory[0x01c0:0x01e0] * memory[0x0180:0x01a0]) / memory[0x01c0:0x01e0] != memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0x01e0:0x0200] = memory[0x01c0:0x01e0] * memory[0x0180:0x01a0];\n                \n                    if (memory[0x0160:0x0180]) {\n                    label_08FE:\n                    \n                        if ((memory[0x0160:0x0180] * 0x03e8) / memory[0x0160:0x0180] != 0x03e8) { revert(memory[0x00:0x00]); }\n                    \n                        var-4 = memory[0x0160:0x0180] * 0x03e8;\n                        var-3 = memory[0x01c0:0x01e0];\n                    \n                        if (memory[0x0160:0x0180]) {\n                        label_0936:\n                        \n                            if ((memory[0x0160:0x0180] * 0x03e8) / memory[0x0160:0x0180] != 0x03e8) { revert(memory[0x00:0x00]); }\n                        \n                            if (memory[0x0160:0x0180] * 0x03e8 + var-3 < var-4) { revert(memory[0x00:0x00]); }\n                        \n                        label_0965:\n                            var-4 = memory[0x01c0:0x01e0];\n                        \n                            if (!memory[0x0160:0x0180]) {\n                                var-3 = 0x00;\n                                memory[0x0200:0x0220] = var-3 + var-4;\n                            \n                                if (memory[0x0200:0x0220]) { goto label_09AF; }\n                                else { revert(memory[0x00:0x00]); }\n                            } else if ((memory[0x0160:0x0180] * 0x03e8) / memory[0x0160:0x0180] == 0x03e8) {\n                                memory[0x0200:0x0220] = memory[0x0160:0x0180] * 0x03e8 + var-4;\n                            \n                                if (!memory[0x0200:0x0220]) { revert(memory[0x00:0x00]); }\n                            \n                            label_09AF:\n                                memory[0x00:0x20] = memory[0x01e0:0x0200] / memory[0x0200:0x0220];\n                                var-4 = memory[0x00:0x20];\n                                // Error: Could not resolve jump destination!\n                            } else { revert(memory[0x00:0x00]); }\n                        } else {\n                        label_0930:\n                            var-2 = 0x00;\n                        \n                            if (var-2 + var-3 >= var-4) { goto label_0965; }\n                            else { revert(memory[0x00:0x00]); }\n                        }\n                    } else {\n                    label_08F8:\n                        var-4 = 0x00;\n                        var-3 = memory[0x01c0:0x01e0];\n                    \n                        if (memory[0x0160:0x0180]) { goto label_0936; }\n                        else { goto label_0930; }\n                    }\n                } else {\n                label_08BD:\n                    var-4 = 0x00;\n                    memory[0x01e0:0x0200] = var-4;\n                \n                    if (memory[0x0160:0x0180]) { goto label_08FE; }\n                    else { goto label_08F8; }\n                }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (0x00) {\n            memory[0x01a0:0x01c0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n        \n            if (!((memory[0x0160:0x0180] > 0x00) & (memory[0x0180:0x01a0] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!memory[0x0160:0x0180]) {\n                var-4 = 0x00;\n                goto label_0A2D;\n            } else if ((memory[0x0160:0x0180] * memory[0x0140:0x0160]) / memory[0x0160:0x0180] == memory[0x0140:0x0160]) {\n                var-4 = memory[0x0160:0x0180] * memory[0x0140:0x0160];\n            \n            label_0A2D:\n            \n                if (var-4) {\n                    var-4 = 0x03e8;\n                \n                    if (!memory[0x0160:0x0180]) {\n                        var-3 = 0x00;\n                        var-2 = 0x03e8;\n                    \n                        if (memory[0x0160:0x0180]) { goto label_0A88; }\n                        else { goto label_0A82; }\n                    } else if ((memory[0x0160:0x0180] * memory[0x0140:0x0160]) / memory[0x0160:0x0180] == memory[0x0140:0x0160]) {\n                        var-3 = memory[0x0160:0x0180] * memory[0x0140:0x0160];\n                        var-2 = 0x03e8;\n                    \n                        if (memory[0x0160:0x0180]) {\n                        label_0A88:\n                        \n                            if ((memory[0x0160:0x0180] * memory[0x0140:0x0160]) / memory[0x0160:0x0180] != memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                        \n                            var-1 = memory[0x0160:0x0180] * memory[0x0140:0x0160];\n                        \n                        label_0AAE:\n                        \n                            if ((var-1 * var-2) / var-3 != var-4) { revert(memory[0x00:0x00]); }\n                        \n                            var-4 = 0x03e8;\n                        \n                            if (!memory[0x0160:0x0180]) {\n                                var-3 = 0x00;\n                                var-4 = var-3 * var-4;\n                                goto label_0AF6;\n                            } else if ((memory[0x0160:0x0180] * memory[0x0140:0x0160]) / memory[0x0160:0x0180] == memory[0x0140:0x0160]) {\n                                var-4 = memory[0x0160:0x0180] * memory[0x0140:0x0160] * var-4;\n                            \n                            label_0AF6:\n                                memory[0x01c0:0x01e0] = var-4;\n                            \n                                if (memory[0x0180:0x01a0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                            \n                                if (memory[0x0180:0x01a0] - memory[0x0140:0x0160]) {\n                                    var-4 = 0x03e5;\n                                \n                                    if (memory[0x0180:0x01a0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                                \n                                    var-3 = memory[0x0180:0x01a0] - memory[0x0140:0x0160];\n                                    var-2 = 0x03e5;\n                                \n                                    if (memory[0x0180:0x01a0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                                \n                                    if ((memory[0x0180:0x01a0] - memory[0x0140:0x0160] * var-2) / var-3 != var-4) { revert(memory[0x00:0x00]); }\n                                \n                                    var-4 = 0x03e5;\n                                \n                                    if (memory[0x0180:0x01a0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                                \n                                    var-4 = memory[0x0180:0x01a0] - memory[0x0140:0x0160] * var-4;\n                                \n                                label_0B8E:\n                                    memory[0x01e0:0x0200] = var-4;\n                                \n                                    if (!memory[0x01e0:0x0200]) { revert(memory[0x00:0x00]); }\n                                \n                                    var-4 = memory[0x01c0:0x01e0] / memory[0x01e0:0x0200];\n                                    var-3 = 0x01;\n                                \n                                    if (!memory[0x01e0:0x0200]) { revert(memory[0x00:0x00]); }\n                                \n                                    if (memory[0x01c0:0x01e0] / memory[0x01e0:0x0200] + var-3 < var-4) { revert(memory[0x00:0x00]); }\n                                \n                                    var-4 = 0x01;\n                                \n                                    if (!memory[0x01e0:0x0200]) { revert(memory[0x00:0x00]); }\n                                \n                                    memory[0x00:0x20] = memory[0x01c0:0x01e0] / memory[0x01e0:0x0200] + var-4;\n                                    var-4 = memory[0x00:0x20];\n                                    // Error: Could not resolve jump destination!\n                                } else {\n                                    var-4 = 0x00;\n                                    goto label_0B8E;\n                                }\n                            } else { revert(memory[0x00:0x00]); }\n                        } else {\n                        label_0A82:\n                            var-1 = 0x00;\n                            goto label_0AAE;\n                        }\n                    } else { revert(memory[0x00:0x00]); }\n                } else {\n                    var-4 = 0x00;\n                    goto label_0AF6;\n                }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (0x00) {\n            memory[0x01e0:0x0200] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n        \n            if (!((memory[0x0180:0x01a0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00) & (memory[0x0160:0x0180] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x70a08231;\n            memory[0x0240:0x0260] = address(this);\n            var temp25;\n            temp25, memory[0x02a0:0x02c0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp25) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var-6 = memory[0x0140:0x0160];\n            var-5 = memory[0x0160:0x0180];\n            var-4 = memory[0x0180:0x01a0];\n            var-3 = memory[0x01a0:0x01c0];\n            var-2 = memory[0x01c0:0x01e0];\n            var-1 = memory[0x01e0:0x0200];\n            var0 = memory[0x0200:0x0220];\n            var1 = memory[0x0220:0x0240];\n            var2 = memory[0x0240:0x0260];\n            var3 = memory[0x0260:0x0280];\n            var4 = memory[0x0280:0x02a0];\n            var5 = memory[0x02a0:0x02c0];\n            var6 = memory[0x02c0:0x02e0];\n            memory[0x02e0:0x0300] = 0x89f2a871;\n            memory[0x0300:0x0320] = memory[0x0140:0x0160];\n        \n            if (address(this).balance < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0320:0x0340] = address(this).balance - memory[0x0140:0x0160];\n            memory[0x0340:0x0360] = memory[0x0200:0x0220];\n            var7 = memory[0x0340:0x0360];\n            var8 = memory[0x0320:0x0340];\n            var9 = memory[0x0300:0x0320];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xf39b5b9b) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            memory[0x0180:0x01a0] = 0x8c717a33;\n            memory[0x01a0:0x01c0] = msg.value;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n            memory[0x01e0:0x0200] = memory[0x0160:0x0180];\n            memory[0x0200:0x0220] = msg.sender;\n            memory[0x0220:0x0240] = msg.sender;\n            var2 = memory[0x0220:0x0240];\n            var3 = memory[0x0200:0x0220];\n            var4 = memory[0x01e0:0x0200];\n            var5 = memory[0x01c0:0x01e0];\n            var6 = memory[0x01a0:0x01c0];\n            var7 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xad65d76d) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n            var0 = msg.data[0x44:0x64];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x0180:0x01a0] != address(this)) & (memory[0x0180:0x01a0] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            memory[0x01a0:0x01c0] = 0x8c717a33;\n            memory[0x01c0:0x01e0] = msg.value;\n            memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n            memory[0x0200:0x0220] = memory[0x0160:0x0180];\n            memory[0x0220:0x0240] = msg.sender;\n            memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n            var3 = memory[0x0240:0x0260];\n            var4 = memory[0x0220:0x0240];\n            var5 = memory[0x0200:0x0220];\n            var6 = memory[0x01e0:0x0200];\n            var7 = memory[0x01c0:0x01e0];\n            var8 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            memory[0x01e0:0x0200] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n        \n            if (!((memory[0x0180:0x01a0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00) & (memory[0x0160:0x0180] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x70a08231;\n            memory[0x0240:0x0260] = address(this);\n            var temp24;\n            temp24, memory[0x02a0:0x02c0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp24) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var-6 = memory[0x0140:0x0160];\n            var-5 = memory[0x0160:0x0180];\n            var-4 = memory[0x0180:0x01a0];\n            var-3 = memory[0x01a0:0x01c0];\n            var-2 = memory[0x01c0:0x01e0];\n            var-1 = memory[0x01e0:0x0200];\n            var0 = memory[0x0200:0x0220];\n            var1 = memory[0x0220:0x0240];\n            var2 = memory[0x0240:0x0260];\n            var3 = memory[0x0260:0x0280];\n            var4 = memory[0x0280:0x02a0];\n            var5 = memory[0x02a0:0x02c0];\n            var6 = memory[0x02c0:0x02e0];\n            memory[0x02e0:0x0300] = 0xfd11c223;\n            memory[0x0300:0x0320] = memory[0x0140:0x0160];\n        \n            if (address(this).balance < memory[0x0160:0x0180]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0320:0x0340] = address(this).balance - memory[0x0160:0x0180];\n            memory[0x0340:0x0360] = memory[0x0200:0x0220];\n            var7 = memory[0x0340:0x0360];\n            var8 = memory[0x0320:0x0340];\n            var9 = memory[0x0300:0x0320];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x6b1d4db7) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            memory[0x0180:0x01a0] = 0x2dff394e;\n            memory[0x01a0:0x01c0] = memory[0x0140:0x0160];\n            memory[0x01c0:0x01e0] = msg.value;\n            memory[0x01e0:0x0200] = memory[0x0160:0x0180];\n            memory[0x0200:0x0220] = msg.sender;\n            memory[0x0220:0x0240] = msg.sender;\n            var2 = memory[0x0220:0x0240];\n            var3 = memory[0x0200:0x0220];\n            var4 = memory[0x01e0:0x0200];\n            var5 = memory[0x01c0:0x01e0];\n            var6 = memory[0x01a0:0x01c0];\n            var7 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x0b573638) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n            var0 = msg.data[0x44:0x64];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x0180:0x01a0] != address(this)) & (memory[0x0180:0x01a0] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            memory[0x01a0:0x01c0] = 0x2dff394e;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n            memory[0x01e0:0x0200] = msg.value;\n            memory[0x0200:0x0220] = memory[0x0160:0x0180];\n            memory[0x0220:0x0240] = msg.sender;\n            memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n            var3 = memory[0x0240:0x0260];\n            var4 = memory[0x0220:0x0240];\n            var5 = memory[0x0200:0x0220];\n            var6 = memory[0x01e0:0x0200];\n            var7 = memory[0x01c0:0x01e0];\n            var8 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            memory[0x01e0:0x0200] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n        \n            if (!((memory[0x0180:0x01a0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00) & (memory[0x0160:0x0180] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x70a08231;\n            memory[0x0240:0x0260] = address(this);\n            var temp23;\n            temp23, memory[0x02a0:0x02c0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp23) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var-6 = memory[0x0140:0x0160];\n            var-5 = memory[0x0160:0x0180];\n            var-4 = memory[0x0180:0x01a0];\n            var-3 = memory[0x01a0:0x01c0];\n            var-2 = memory[0x01c0:0x01e0];\n            var-1 = memory[0x01e0:0x0200];\n            var0 = memory[0x0200:0x0220];\n            var1 = memory[0x0220:0x0240];\n            var2 = memory[0x0240:0x0260];\n            var3 = memory[0x0260:0x0280];\n            var4 = memory[0x0280:0x02a0];\n            var5 = memory[0x02a0:0x02c0];\n            var6 = memory[0x02c0:0x02e0];\n            memory[0x02e0:0x0300] = 0x89f2a871;\n            memory[0x0300:0x0320] = memory[0x0140:0x0160];\n            memory[0x0320:0x0340] = memory[0x0200:0x0220];\n            memory[0x0340:0x0360] = address(this).balance;\n            var7 = memory[0x0340:0x0360];\n            var8 = memory[0x0320:0x0340];\n            var9 = memory[0x0300:0x0320];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x95e3c50b) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            memory[0x01a0:0x01c0] = 0xfa1bb7be;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n            memory[0x01e0:0x0200] = memory[0x0160:0x0180];\n            memory[0x0200:0x0220] = memory[0x0180:0x01a0];\n            memory[0x0220:0x0240] = msg.sender;\n            memory[0x0240:0x0260] = msg.sender;\n            var3 = memory[0x0240:0x0260];\n            var4 = memory[0x0220:0x0240];\n            var5 = memory[0x0200:0x0220];\n            var6 = memory[0x01e0:0x0200];\n            var7 = memory[0x01c0:0x01e0];\n            var8 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x7237e031) {\n            memory[0x0140:0x01c0] = msg.data[0x04:0x84];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x64:0x84];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x01a0:0x01c0] != address(this)) & (memory[0x01a0:0x01c0] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            memory[0x01c0:0x01e0] = 0xfa1bb7be;\n            memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n            memory[0x0200:0x0220] = memory[0x0160:0x0180];\n            memory[0x0220:0x0240] = memory[0x0180:0x01a0];\n            memory[0x0240:0x0260] = msg.sender;\n            memory[0x0260:0x0280] = memory[0x01a0:0x01c0];\n            var4 = memory[0x0260:0x0280];\n            var5 = memory[0x0240:0x0260];\n            var6 = memory[0x0220:0x0240];\n            var7 = memory[0x0200:0x0220];\n            var8 = memory[0x01e0:0x0200];\n            var9 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            memory[0x01e0:0x0200] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n        \n            if (!((memory[0x0180:0x01a0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x70a08231;\n            memory[0x0240:0x0260] = address(this);\n            var temp22;\n            temp22, memory[0x02a0:0x02c0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp22) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var-6 = memory[0x0140:0x0160];\n            var-5 = memory[0x0160:0x0180];\n            var-4 = memory[0x0180:0x01a0];\n            var-3 = memory[0x01a0:0x01c0];\n            var-2 = memory[0x01c0:0x01e0];\n            var-1 = memory[0x01e0:0x0200];\n            var0 = memory[0x0200:0x0220];\n            var1 = memory[0x0220:0x0240];\n            var2 = memory[0x0240:0x0260];\n            var3 = memory[0x0260:0x0280];\n            var4 = memory[0x0280:0x02a0];\n            var5 = memory[0x02a0:0x02c0];\n            var6 = memory[0x02c0:0x02e0];\n            memory[0x02e0:0x0300] = 0xfd11c223;\n            memory[0x0300:0x0320] = memory[0x0140:0x0160];\n            memory[0x0320:0x0340] = memory[0x0200:0x0220];\n            memory[0x0340:0x0360] = address(this).balance;\n            var7 = memory[0x0340:0x0360];\n            var8 = memory[0x0320:0x0340];\n            var9 = memory[0x0300:0x0320];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x013efd8b) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            memory[0x01a0:0x01c0] = 0x984fe8f6;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n            memory[0x01e0:0x0200] = memory[0x0160:0x0180];\n            memory[0x0200:0x0220] = memory[0x0180:0x01a0];\n            memory[0x0220:0x0240] = msg.sender;\n            memory[0x0240:0x0260] = msg.sender;\n            var3 = memory[0x0240:0x0260];\n            var4 = memory[0x0220:0x0240];\n            var5 = memory[0x0200:0x0220];\n            var6 = memory[0x01e0:0x0200];\n            var7 = memory[0x01c0:0x01e0];\n            var8 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xd4e4841d) {\n            memory[0x0140:0x01c0] = msg.data[0x04:0x84];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x64:0x84];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x01a0:0x01c0] != address(this)) & (memory[0x01a0:0x01c0] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            memory[0x01c0:0x01e0] = 0x984fe8f6;\n            memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n            memory[0x0200:0x0220] = memory[0x0160:0x0180];\n            memory[0x0220:0x0240] = memory[0x0180:0x01a0];\n            memory[0x0240:0x0260] = msg.sender;\n            memory[0x0260:0x0280] = memory[0x01a0:0x01c0];\n            var4 = memory[0x0260:0x0280];\n            var5 = memory[0x0240:0x0260];\n            var6 = memory[0x0220:0x0240];\n            var7 = memory[0x0200:0x0220];\n            var8 = memory[0x01e0:0x0200];\n            var9 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            memory[0x0220:0x0240] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n            memory[0x01e0:0x0200] = var-7;\n            memory[0x0200:0x0220] = var-8;\n        \n            if (!((memory[0x01a0:0x01c0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00) & (memory[0x0160:0x0180] > 0x00) & (memory[0x0180:0x01a0] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x0200:0x0220] != address(this)) & (memory[0x0200:0x0220] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0260:0x0280] = 0x70a08231;\n            memory[0x0280:0x02a0] = address(this);\n            var temp21;\n            temp21, memory[0x02e0:0x0300] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x027c:0x02a0]);\n        \n            if (!temp21) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0240:0x0260] = memory[0x02e0:0x0300];\n            var-8 = memory[0x0140:0x0160];\n            var-7 = memory[0x0160:0x0180];\n            var-6 = memory[0x0180:0x01a0];\n            var-5 = memory[0x01a0:0x01c0];\n            var-4 = memory[0x01c0:0x01e0];\n            var-3 = memory[0x01e0:0x0200];\n            var-2 = memory[0x0200:0x0220];\n            var-1 = memory[0x0220:0x0240];\n            var0 = memory[0x0240:0x0260];\n            var1 = memory[0x0260:0x0280];\n            var2 = memory[0x0280:0x02a0];\n            var3 = memory[0x02a0:0x02c0];\n            var4 = memory[0x02c0:0x02e0];\n            var5 = memory[0x02e0:0x0300];\n            var6 = memory[0x0300:0x0320];\n            memory[0x0320:0x0340] = 0x89f2a871;\n            memory[0x0340:0x0360] = memory[0x0140:0x0160];\n            memory[0x0360:0x0380] = memory[0x0240:0x0260];\n            memory[0x0380:0x03a0] = address(this).balance;\n            var7 = memory[0x0380:0x03a0];\n            var8 = memory[0x0360:0x0380];\n            var9 = memory[0x0340:0x0360];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xddf7e1a7) {\n            memory[0x0140:0x01e0] = msg.data[0x04:0xa4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x07]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x07]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = 0x06f2bf62;\n            memory[0x0220:0x0240] = memory[0x01c0:0x01e0];\n            var temp20;\n            temp20, memory[0x0280:0x02a0] = address(storage[0x07]).staticcall.gas(msg.gas)(memory[0x021c:0x0240]);\n        \n            if (!temp20) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01e0:0x0200] = memory[0x0280:0x02a0];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            var8 = memory[0x0240:0x0260];\n            var9 = memory[0x0260:0x0280];\n            var10 = memory[0x0280:0x02a0];\n            memory[0x02a0:0x02c0] = 0x204ea33b;\n            memory[0x02c0:0x02e0] = memory[0x0140:0x0160];\n            memory[0x02e0:0x0300] = memory[0x0160:0x0180];\n            memory[0x0300:0x0320] = memory[0x0180:0x01a0];\n            memory[0x0320:0x0340] = memory[0x01a0:0x01c0];\n            memory[0x0340:0x0360] = msg.sender;\n            memory[0x0360:0x0380] = msg.sender;\n            memory[0x0380:0x03a0] = memory[0x01e0:0x0200];\n            var11 = memory[0x0380:0x03a0];\n            var12 = memory[0x0360:0x0380];\n            var13 = memory[0x0340:0x0360];\n            var14 = memory[0x0320:0x0340];\n            var15 = memory[0x0300:0x0320];\n            var16 = memory[0x02e0:0x0300];\n            var17 = memory[0x02c0:0x02e0];\n            var18 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xf552d91b) {\n            memory[0x0140:0x0200] = msg.data[0x04:0xc4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0xa4:0xc4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x07]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x07]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x06f2bf62;\n            memory[0x0240:0x0260] = memory[0x01e0:0x0200];\n            var temp19;\n            temp19, memory[0x02a0:0x02c0] = address(storage[0x07]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp19) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            var8 = memory[0x0240:0x0260];\n            var9 = memory[0x0260:0x0280];\n            var10 = memory[0x0280:0x02a0];\n            var11 = memory[0x02a0:0x02c0];\n            memory[0x02c0:0x02e0] = 0x204ea33b;\n            memory[0x02e0:0x0300] = memory[0x0140:0x0160];\n            memory[0x0300:0x0320] = memory[0x0160:0x0180];\n            memory[0x0320:0x0340] = memory[0x0180:0x01a0];\n            memory[0x0340:0x0360] = memory[0x01a0:0x01c0];\n            memory[0x0360:0x0380] = msg.sender;\n            memory[0x0380:0x03a0] = memory[0x01c0:0x01e0];\n            memory[0x03a0:0x03c0] = memory[0x0200:0x0220];\n            var12 = memory[0x03a0:0x03c0];\n            var13 = memory[0x0380:0x03a0];\n            var14 = memory[0x0360:0x0380];\n            var15 = memory[0x0340:0x0360];\n            var16 = memory[0x0320:0x0340];\n            var17 = memory[0x0300:0x0320];\n            var18 = memory[0x02e0:0x0300];\n            var19 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            // Error: StackRead before write???\n            var var-7;\n            // Error: StackRead before write???\n            var var-6;\n            // Error: StackRead before write???\n            var var-4;\n            // Error: StackRead before write???\n            var var-1;\n            // Error: StackRead before write???\n            var var-3;\n            // Error: StackRead before write???\n            var var-2;\n            // Error: StackRead before write???\n            var var-5;\n            // Error: StackRead before write???\n            var var-8;\n            memory[0x0220:0x0240] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n            memory[0x01e0:0x0200] = var-7;\n            memory[0x0200:0x0220] = var-8;\n        \n            if (!((memory[0x01a0:0x01c0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00) & (memory[0x0180:0x01a0] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x0200:0x0220] != address(this)) & (memory[0x0200:0x0220] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(memory[0x0200:0x0220]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == memory[0x0200:0x0220]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0260:0x0280] = 0x59e94862;\n            memory[0x0280:0x02a0] = memory[0x0140:0x0160];\n            var temp17;\n            temp17, memory[0x02e0:0x0300] = address(memory[0x0200:0x0220]).staticcall.gas(msg.gas)(memory[0x027c:0x02a0]);\n        \n            if (!temp17) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0240:0x0260] = memory[0x02e0:0x0300];\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0320:0x0340] = 0x70a08231;\n            memory[0x0340:0x0360] = address(this);\n            var temp18;\n            temp18, memory[0x03a0:0x03c0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x033c:0x0360]);\n        \n            if (!temp18) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0300:0x0320] = memory[0x03a0:0x03c0];\n            var-8 = memory[0x0140:0x0160];\n            var-7 = memory[0x0160:0x0180];\n            var-6 = memory[0x0180:0x01a0];\n            var-5 = memory[0x01a0:0x01c0];\n            var-4 = memory[0x01c0:0x01e0];\n            var-3 = memory[0x01e0:0x0200];\n            var-2 = memory[0x0200:0x0220];\n            var-1 = memory[0x0220:0x0240];\n            var0 = memory[0x0240:0x0260];\n            var1 = memory[0x0260:0x0280];\n            var2 = memory[0x0280:0x02a0];\n            var3 = memory[0x02a0:0x02c0];\n            var4 = memory[0x02c0:0x02e0];\n            var5 = memory[0x02e0:0x0300];\n            var6 = memory[0x0300:0x0320];\n            var7 = memory[0x0320:0x0340];\n            var8 = memory[0x0340:0x0360];\n            var9 = memory[0x0360:0x0380];\n            var10 = memory[0x0380:0x03a0];\n            var11 = memory[0x03a0:0x03c0];\n            var12 = memory[0x03c0:0x03e0];\n            memory[0x03e0:0x0400] = 0xfd11c223;\n            memory[0x0400:0x0420] = memory[0x0240:0x0260];\n            memory[0x0420:0x0440] = memory[0x0300:0x0320];\n            memory[0x0440:0x0460] = address(this).balance;\n            var13 = memory[0x0440:0x0460];\n            var14 = memory[0x0420:0x0440];\n            var15 = memory[0x0400:0x0420];\n            var16 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xb040d545) {\n            memory[0x0140:0x01e0] = msg.data[0x04:0xa4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x07]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x07]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = 0x06f2bf62;\n            memory[0x0220:0x0240] = memory[0x01c0:0x01e0];\n            var temp16;\n            temp16, memory[0x0280:0x02a0] = address(storage[0x07]).staticcall.gas(msg.gas)(memory[0x021c:0x0240]);\n        \n            if (!temp16) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01e0:0x0200] = memory[0x0280:0x02a0];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            var8 = memory[0x0240:0x0260];\n            var9 = memory[0x0260:0x0280];\n            var10 = memory[0x0280:0x02a0];\n            memory[0x02a0:0x02c0] = 0x1a7b28f2;\n            memory[0x02c0:0x02e0] = memory[0x0140:0x0160];\n            memory[0x02e0:0x0300] = memory[0x0160:0x0180];\n            memory[0x0300:0x0320] = memory[0x0180:0x01a0];\n            memory[0x0320:0x0340] = memory[0x01a0:0x01c0];\n            memory[0x0340:0x0360] = msg.sender;\n            memory[0x0360:0x0380] = msg.sender;\n            memory[0x0380:0x03a0] = memory[0x01e0:0x0200];\n            var11 = memory[0x0380:0x03a0];\n            var12 = memory[0x0360:0x0380];\n            var13 = memory[0x0340:0x0360];\n            var14 = memory[0x0320:0x0340];\n            var15 = memory[0x0300:0x0320];\n            var16 = memory[0x02e0:0x0300];\n            var17 = memory[0x02c0:0x02e0];\n            var18 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xf3c0efe9) {\n            memory[0x0140:0x0200] = msg.data[0x04:0xc4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0xa4:0xc4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x07]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x07]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x06f2bf62;\n            memory[0x0240:0x0260] = memory[0x01e0:0x0200];\n            var temp15;\n            temp15, memory[0x02a0:0x02c0] = address(storage[0x07]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp15) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            var8 = memory[0x0240:0x0260];\n            var9 = memory[0x0260:0x0280];\n            var10 = memory[0x0280:0x02a0];\n            var11 = memory[0x02a0:0x02c0];\n            memory[0x02c0:0x02e0] = 0x1a7b28f2;\n            memory[0x02e0:0x0300] = memory[0x0140:0x0160];\n            memory[0x0300:0x0320] = memory[0x0160:0x0180];\n            memory[0x0320:0x0340] = memory[0x0180:0x01a0];\n            memory[0x0340:0x0360] = memory[0x01a0:0x01c0];\n            memory[0x0360:0x0380] = msg.sender;\n            memory[0x0380:0x03a0] = memory[0x01c0:0x01e0];\n            memory[0x03a0:0x03c0] = memory[0x0200:0x0220];\n            var12 = memory[0x03a0:0x03c0];\n            var13 = memory[0x0380:0x03a0];\n            var var14 = memory[0x0360:0x0380];\n            var var15 = memory[0x0340:0x0360];\n            var var16 = memory[0x0320:0x0340];\n            var var17 = memory[0x0300:0x0320];\n            var var18 = memory[0x02e0:0x0300];\n            var var19 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xb1cb43bf) {\n            memory[0x0140:0x01e0] = msg.data[0x04:0xa4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            memory[0x01e0:0x0200] = 0x204ea33b;\n            memory[0x0200:0x0220] = memory[0x0140:0x0160];\n            memory[0x0220:0x0240] = memory[0x0160:0x0180];\n            memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n            memory[0x0260:0x0280] = memory[0x01a0:0x01c0];\n            memory[0x0280:0x02a0] = msg.sender;\n            memory[0x02a0:0x02c0] = msg.sender;\n            memory[0x02c0:0x02e0] = memory[0x01c0:0x01e0];\n            var5 = memory[0x02c0:0x02e0];\n            var6 = memory[0x02a0:0x02c0];\n            var7 = memory[0x0280:0x02a0];\n            var8 = memory[0x0260:0x0280];\n            var9 = memory[0x0240:0x0260];\n            var10 = memory[0x0220:0x0240];\n            var11 = memory[0x0200:0x0220];\n            var12 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xec384a3e) {\n            memory[0x0140:0x0200] = msg.data[0x04:0xc4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0xa4:0xc4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x01c0:0x01e0] == address(this)) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            memory[0x0200:0x0220] = 0x204ea33b;\n            memory[0x0220:0x0240] = memory[0x0140:0x0160];\n            memory[0x0240:0x0260] = memory[0x0160:0x0180];\n            memory[0x0260:0x0280] = memory[0x0180:0x01a0];\n            memory[0x0280:0x02a0] = memory[0x01a0:0x01c0];\n            memory[0x02a0:0x02c0] = msg.sender;\n            memory[0x02c0:0x02e0] = memory[0x01c0:0x01e0];\n            memory[0x02e0:0x0300] = memory[0x01e0:0x0200];\n            var6 = memory[0x02e0:0x0300];\n            var7 = memory[0x02c0:0x02e0];\n            var8 = memory[0x02a0:0x02c0];\n            var9 = memory[0x0280:0x02a0];\n            var10 = memory[0x0260:0x0280];\n            var11 = memory[0x0240:0x0260];\n            var12 = memory[0x0220:0x0240];\n            var13 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xea650c7d) {\n            memory[0x0140:0x01e0] = msg.data[0x04:0xa4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            memory[0x01e0:0x0200] = 0x1a7b28f2;\n            memory[0x0200:0x0220] = memory[0x0140:0x0160];\n            memory[0x0220:0x0240] = memory[0x0160:0x0180];\n            memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n            memory[0x0260:0x0280] = memory[0x01a0:0x01c0];\n            memory[0x0280:0x02a0] = msg.sender;\n            memory[0x02a0:0x02c0] = msg.sender;\n            memory[0x02c0:0x02e0] = memory[0x01c0:0x01e0];\n            var5 = memory[0x02c0:0x02e0];\n            var6 = memory[0x02a0:0x02c0];\n            var7 = memory[0x0280:0x02a0];\n            var8 = memory[0x0260:0x0280];\n            var9 = memory[0x0240:0x0260];\n            var10 = memory[0x0220:0x0240];\n            var11 = memory[0x0200:0x0220];\n            var12 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x981a1327) {\n            memory[0x0140:0x0200] = msg.data[0x04:0xc4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0xa4:0xc4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x01c0:0x01e0] == address(this)) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            memory[0x0200:0x0220] = 0x1a7b28f2;\n            memory[0x0220:0x0240] = memory[0x0140:0x0160];\n            memory[0x0240:0x0260] = memory[0x0160:0x0180];\n            memory[0x0260:0x0280] = memory[0x0180:0x01a0];\n            memory[0x0280:0x02a0] = memory[0x01a0:0x01c0];\n            memory[0x02a0:0x02c0] = msg.sender;\n            memory[0x02c0:0x02e0] = memory[0x01c0:0x01e0];\n            memory[0x02e0:0x0300] = memory[0x01e0:0x0200];\n            var6 = memory[0x02e0:0x0300];\n            var7 = memory[0x02c0:0x02e0];\n            var8 = memory[0x02a0:0x02c0];\n            var9 = memory[0x0280:0x02a0];\n            var10 = memory[0x0260:0x0280];\n            var11 = memory[0x0240:0x0260];\n            var var12 = memory[0x0220:0x0240];\n            var var13 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xcd7724c3) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] <= 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0180:0x01a0] = 0x70a08231;\n            memory[0x01a0:0x01c0] = address(this);\n            var temp14;\n            temp14, memory[0x0200:0x0220] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x019c:0x01c0]);\n        \n            if (!temp14) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0160:0x0180] = memory[0x0200:0x0220];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            memory[0x0220:0x0240] = 0x89f2a871;\n            memory[0x0240:0x0260] = memory[0x0140:0x0160];\n            memory[0x0260:0x0280] = address(this).balance;\n            memory[0x0280:0x02a0] = memory[0x0160:0x0180];\n            var7 = memory[0x0280:0x02a0];\n            var8 = memory[0x0260:0x0280];\n            var9 = memory[0x0240:0x0260];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x59e94862) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] <= 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0180:0x01a0] = 0x70a08231;\n            memory[0x01a0:0x01c0] = address(this);\n            var temp13;\n            temp13, memory[0x0200:0x0220] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x019c:0x01c0]);\n        \n            if (!temp13) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0160:0x0180] = memory[0x0200:0x0220];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            memory[0x0240:0x0260] = 0xfd11c223;\n            memory[0x0260:0x0280] = memory[0x0140:0x0160];\n            memory[0x0280:0x02a0] = address(this).balance;\n            memory[0x02a0:0x02c0] = memory[0x0160:0x0180];\n            var8 = memory[0x02a0:0x02c0];\n            var9 = memory[0x0280:0x02a0];\n            var10 = memory[0x0260:0x0280];\n            var11 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x95b68fe7) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] <= 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0180:0x01a0] = 0x70a08231;\n            memory[0x01a0:0x01c0] = address(this);\n            var temp12;\n            temp12, memory[0x0200:0x0220] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x019c:0x01c0]);\n        \n            if (!temp12) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0160:0x0180] = memory[0x0200:0x0220];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            memory[0x0240:0x0260] = 0x89f2a871;\n            memory[0x0260:0x0280] = memory[0x0140:0x0160];\n            memory[0x0280:0x02a0] = memory[0x0160:0x0180];\n            memory[0x02a0:0x02c0] = address(this).balance;\n            var8 = memory[0x02a0:0x02c0];\n            var9 = memory[0x0280:0x02a0];\n            var10 = memory[0x0260:0x0280];\n            var var11 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x2640f62c) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] <= 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0180:0x01a0] = 0x70a08231;\n            memory[0x01a0:0x01c0] = address(this);\n            var temp11;\n            temp11, memory[0x0200:0x0220] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x019c:0x01c0]);\n        \n            if (!temp11) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0160:0x0180] = memory[0x0200:0x0220];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var var6 = memory[0x0200:0x0220];\n            memory[0x0220:0x0240] = 0xfd11c223;\n            memory[0x0240:0x0260] = memory[0x0140:0x0160];\n            memory[0x0260:0x0280] = memory[0x0160:0x0180];\n            memory[0x0280:0x02a0] = address(this).balance;\n            var var7 = memory[0x0280:0x02a0];\n            var var8 = memory[0x0260:0x0280];\n            var var9 = memory[0x0240:0x0260];\n            var var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] != 0x9d76ea58) {\n            if (memory[0x00:0x20] != 0x966dae0e) {\n                if (memory[0x00:0x20] == 0x70a08231) {\n                    memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x04;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0xa9059cbb) {\n                    memory[0x0140:0x0180] = msg.data[0x04:0x44];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = msg.sender;\n                    memory[0xc0:0xe0] = 0x04;\n                    var0 = keccak256(memory[0xc0:0x0100]);\n                \n                    if (storage[var0] < memory[0x0160:0x0180]) { revert(memory[0x00:0x00]); }\n                \n                    var temp8 = var0;\n                    storage[temp8] = storage[temp8] - memory[0x0160:0x0180];\n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x04;\n                    var temp9 = keccak256(memory[0xc0:0x0100]);\n                    var0 = temp9;\n                \n                    if (storage[var0] + memory[0x0160:0x0180] < storage[var0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp10 = var0;\n                    storage[temp10] = storage[temp10] + memory[0x0160:0x0180];\n                    memory[0x0180:0x01a0] = memory[0x0160:0x0180];\n                    log(memory[0x0180:0x01a0], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, msg.sender, memory[0x0140:0x0160]]);\n                    memory[0x00:0x20] = 0x01;\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0x23b872dd) {\n                    memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x24:0x44];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x04;\n                    var0 = keccak256(memory[0xc0:0x0100]);\n                \n                    if (storage[var0] < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp3 = var0;\n                    storage[temp3] = storage[temp3] - memory[0x0180:0x01a0];\n                    memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                    memory[0xc0:0xe0] = 0x04;\n                    var temp4 = keccak256(memory[0xc0:0x0100]);\n                    var0 = temp4;\n                \n                    if (storage[var0] + memory[0x0180:0x01a0] < storage[var0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp5 = var0;\n                    storage[temp5] = storage[temp5] + memory[0x0180:0x01a0];\n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x05;\n                    var temp6 = keccak256(memory[0xc0:0x0100]);\n                    memory[0xe0:0x0100] = msg.sender;\n                    memory[0xc0:0xe0] = temp6;\n                    var0 = keccak256(memory[0xc0:0x0100]);\n                \n                    if (storage[var0] < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp7 = var0;\n                    storage[temp7] = storage[temp7] - memory[0x0180:0x01a0];\n                    memory[0x01a0:0x01c0] = memory[0x0180:0x01a0];\n                    log(memory[0x01a0:0x01c0], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, memory[0x0140:0x0160], memory[0x0160:0x0180]]);\n                    memory[0x00:0x20] = 0x01;\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0x095ea7b3) {\n                    memory[0x0140:0x0180] = msg.data[0x04:0x44];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    var temp1 = memory[0x0160:0x0180];\n                    memory[0xe0:0x0100] = msg.sender;\n                    memory[0xc0:0xe0] = 0x05;\n                    var temp2 = keccak256(memory[0xc0:0x0100]);\n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = temp2;\n                    storage[keccak256(memory[0xc0:0x0100])] = temp1;\n                    memory[0x0180:0x01a0] = memory[0x0160:0x0180];\n                    log(memory[0x0180:0x01a0], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, msg.sender, memory[0x0140:0x0160]]);\n                    memory[0x00:0x20] = 0x01;\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0xdd62ed3e) {\n                    memory[0x0140:0x0180] = msg.data[0x04:0x44];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x24:0x44];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x05;\n                    var temp0 = keccak256(memory[0xc0:0x0100]);\n                    memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                    memory[0xc0:0xe0] = temp0;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] != 0x06fdde03) {\n                    if (memory[0x00:0x20] != 0x95d89b41) {\n                        if (memory[0x00:0x20] != 0x313ce567) {\n                            if (memory[0x00:0x20] != 0x18160ddd) {\n                                memory[0x0140:0x0160] = 0x8c717a33;\n                                memory[0x0160:0x0180] = msg.value;\n                                memory[0x0180:0x01a0] = 0x01;\n                                memory[0x01a0:0x01c0] = block.timestamp;\n                                memory[0x01c0:0x01e0] = msg.sender;\n                                memory[0x01e0:0x0200] = msg.sender;\n                                var var0 = memory[0x01e0:0x0200];\n                                var var1 = memory[0x01c0:0x01e0];\n                                var var2 = memory[0x01a0:0x01c0];\n                                var var3 = memory[0x0180:0x01a0];\n                                var var4 = memory[0x0160:0x0180];\n                                var var5 = 0x06;\n                                // Unhandled termination\n                            } else if (!msg.value) {\n                                memory[0x00:0x20] = storage[0x03];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            memory[0x00:0x20] = storage[0x02];\n                            return memory[0x00:0x20];\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0x00:0x20] = storage[0x01];\n                        return memory[0x00:0x20];\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    memory[0x00:0x20] = storage[0x00];\n                    return memory[0x00:0x20];\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0x00:0x20] = storage[0x07];\n                return memory[0x00:0x20];\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x00:0x20] = storage[0x06];\n            return memory[0x00:0x20];\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] == 0x66d38203) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!(!storage[0x07] & !storage[0x06] & (memory[0x0140:0x0160] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            storage[0x07] = msg.sender;\n            storage[0x06] = memory[0x0140:0x0160];\n            storage[0x00] = 0x556e697377617020563100000000000000000000000000000000000000000000;\n            storage[0x01] = 0x554e492d56310000000000000000000000000000000000000000000000000000;\n            storage[0x02] = 0x12;\n            stop();\n        } else if (memory[0x00:0x20] == 0x422f1043) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n        \n            if (!((memory[0x0180:0x01a0] > block.timestamp) & (memory[0x0160:0x0180] > 0x00) & (msg.value > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01a0:0x01c0] = storage[0x03];\n        \n            if (memory[0x01a0:0x01c0] <= 0x00) {\n                if (!((storage[0x07] != 0x00) & (storage[0x06] != 0x00) & (msg.value >= 0x3b9aca00))) { revert(memory[0x00:0x00]); }\n            \n                var0 = address(this);\n            \n                if (!address(storage[0x07]).code.length) { revert(memory[0x00:0x00]); }\n            \n                if (address(this) == storage[0x07]) { revert(memory[0x00:0x00]); }\n            \n                memory[0x01c0:0x01e0] = 0x06f2bf62;\n                memory[0x01e0:0x0200] = storage[0x06];\n                var temp30;\n                temp30, memory[0x0240:0x0260] = address(storage[0x07]).staticcall.gas(msg.gas)(memory[0x01dc:0x0200]);\n            \n                if (!temp30) { revert(memory[0x00:0x00]); }\n            \n                if (memory[0x0240:0x0260] != var0) { revert(memory[0x00:0x00]); }\n            \n                memory[0x0260:0x0280] = memory[0x0160:0x0180];\n                memory[0x0280:0x02a0] = address(this).balance;\n                storage[0x03] = memory[0x0280:0x02a0];\n                var temp31 = memory[0x0280:0x02a0];\n                memory[0xe0:0x0100] = msg.sender;\n                memory[0xc0:0xe0] = 0x04;\n                storage[keccak256(memory[0xc0:0x0100])] = temp31;\n            \n                if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n            \n                if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n            \n                memory[0x02a0:0x02c0] = 0x23b872dd;\n                memory[0x02c0:0x02e0] = msg.sender;\n                memory[0x02e0:0x0300] = address(this);\n                memory[0x0300:0x0320] = memory[0x0260:0x0280];\n                var temp32;\n                temp32, memory[0x0360:0x0380] = address(storage[0x06]).call.gas(msg.gas)(memory[0x02bc:0x0320]);\n            \n                if (!temp32) { revert(memory[0x00:0x00]); }\n            \n                if (!memory[0x0360:0x0380]) { revert(memory[0x00:0x00]); }\n            \n                log(memory[0x00:0x00], [0x06239653922ac7bea6aa2b19dc486b9361821d37712eb796adfd38d81de278ca, msg.sender, msg.value, memory[0x0260:0x0280]]);\n                memory[0x0380:0x03a0] = memory[0x0280:0x02a0];\n                log(memory[0x0380:0x03a0], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, 0x00, msg.sender]);\n                memory[0x00:0x20] = memory[0x0280:0x02a0];\n                return memory[0x00:0x20];\n            } else if (memory[0x0140:0x0160] > 0x00) {\n                if (address(this).balance < msg.value) { revert(memory[0x00:0x00]); }\n            \n                memory[0x03a0:0x03c0] = address(this).balance - msg.value;\n            \n                if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n            \n                if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n            \n                memory[0x03e0:0x0400] = 0x70a08231;\n                memory[0x0400:0x0420] = address(this);\n                var temp33;\n                temp33, memory[0x0460:0x0480] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x03fc:0x0420]);\n            \n                if (!temp33) { revert(memory[0x00:0x00]); }\n            \n                memory[0x03c0:0x03e0] = memory[0x0460:0x0480];\n            \n                if (!memory[0x03a0:0x03c0]) { revert(memory[0x00:0x00]); }\n            \n                var0 = memory[0x03a0:0x03c0];\n            \n                if (!msg.value) {\n                    var1 = 0x00;\n                    var0 = var1 / var0;\n                    var1 = 0x01;\n                \n                    if (memory[0x03a0:0x03c0]) { goto label_023F; }\n                    else { revert(memory[0x00:0x00]); }\n                } else if ((msg.value * memory[0x03c0:0x03e0]) / msg.value == memory[0x03c0:0x03e0]) {\n                    var0 = (msg.value * memory[0x03c0:0x03e0]) / var0;\n                    var1 = 0x01;\n                \n                    if (!memory[0x03a0:0x03c0]) { revert(memory[0x00:0x00]); }\n                \n                label_023F:\n                    var2 = memory[0x03a0:0x03c0];\n                \n                    if (!msg.value) {\n                        var3 = 0x00;\n                    \n                        if (var3 / var2 + var1 >= var0) { goto label_027B; }\n                        else { revert(memory[0x00:0x00]); }\n                    } else if ((msg.value * memory[0x03c0:0x03e0]) / msg.value == memory[0x03c0:0x03e0]) {\n                        if ((msg.value * memory[0x03c0:0x03e0]) / var2 + var1 < var0) { revert(memory[0x00:0x00]); }\n                    \n                    label_027B:\n                        var0 = 0x01;\n                    \n                        if (!memory[0x03a0:0x03c0]) { revert(memory[0x00:0x00]); }\n                    \n                        var1 = memory[0x03a0:0x03c0];\n                    \n                        if (!msg.value) {\n                            var2 = 0x00;\n                            memory[0x0480:0x04a0] = var2 / var1 + var0;\n                        \n                            if (memory[0x03a0:0x03c0]) { goto label_02CC; }\n                            else { revert(memory[0x00:0x00]); }\n                        } else if ((msg.value * memory[0x03c0:0x03e0]) / msg.value == memory[0x03c0:0x03e0]) {\n                            memory[0x0480:0x04a0] = (msg.value * memory[0x03c0:0x03e0]) / var1 + var0;\n                        \n                            if (!memory[0x03a0:0x03c0]) { revert(memory[0x00:0x00]); }\n                        \n                        label_02CC:\n                            var0 = memory[0x03a0:0x03c0];\n                        \n                            if (!msg.value) {\n                                var1 = 0x00;\n                                goto label_02FB;\n                            } else if ((msg.value * memory[0x01a0:0x01c0]) / msg.value == memory[0x01a0:0x01c0]) {\n                                var1 = msg.value * memory[0x01a0:0x01c0];\n                            \n                            label_02FB:\n                                memory[0x04a0:0x04c0] = var1 / var0;\n                            \n                                if (!((memory[0x0160:0x0180] >= memory[0x0480:0x04a0]) & (memory[0x04a0:0x04c0] >= memory[0x0140:0x0160]))) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.sender;\n                                memory[0xc0:0xe0] = 0x04;\n                                var temp34 = keccak256(memory[0xc0:0x0100]);\n                                var0 = temp34;\n                            \n                                if (storage[var0] + memory[0x04a0:0x04c0] < storage[var0]) { revert(memory[0x00:0x00]); }\n                            \n                                var temp35 = var0;\n                                storage[temp35] = storage[temp35] + memory[0x04a0:0x04c0];\n                            \n                                if (memory[0x01a0:0x01c0] + memory[0x04a0:0x04c0] < memory[0x01a0:0x01c0]) { revert(memory[0x00:0x00]); }\n                            \n                                storage[0x03] = memory[0x01a0:0x01c0] + memory[0x04a0:0x04c0];\n                            \n                                if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n                            \n                                if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0x04c0:0x04e0] = 0x23b872dd;\n                                memory[0x04e0:0x0500] = msg.sender;\n                                memory[0x0500:0x0520] = address(this);\n                                memory[0x0520:0x0540] = memory[0x0480:0x04a0];\n                                var temp36;\n                                temp36, memory[0x0580:0x05a0] = address(storage[0x06]).call.gas(msg.gas)(memory[0x04dc:0x0540]);\n                            \n                                if (!temp36) { revert(memory[0x00:0x00]); }\n                            \n                                if (!memory[0x0580:0x05a0]) { revert(memory[0x00:0x00]); }\n                            \n                                log(memory[0x00:0x00], [0x06239653922ac7bea6aa2b19dc486b9361821d37712eb796adfd38d81de278ca, msg.sender, msg.value, memory[0x0480:0x04a0]]);\n                                memory[0x05a0:0x05c0] = memory[0x04a0:0x04c0];\n                                log(memory[0x05a0:0x05c0], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, 0x00, msg.sender]);\n                                memory[0x00:0x20] = memory[0x04a0:0x04c0];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else { revert(memory[0x00:0x00]); }\n                    } else { revert(memory[0x00:0x00]); }\n                } else { revert(memory[0x00:0x00]); }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (memory[0x00:0x20] == 0xf88bf15a) {\n            memory[0x0140:0x01c0] = msg.data[0x04:0x84];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x0140:0x0160] > 0x00) & (memory[0x01a0:0x01c0] > block.timestamp) & (memory[0x0160:0x0180] > 0x00) & (memory[0x0180:0x01a0] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01c0:0x01e0] = storage[0x03];\n        \n            if (memory[0x01c0:0x01e0] <= 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = 0x70a08231;\n            memory[0x0220:0x0240] = address(this);\n            var temp26;\n            temp26, memory[0x0280:0x02a0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x021c:0x0240]);\n        \n            if (!temp26) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01e0:0x0200] = memory[0x0280:0x02a0];\n        \n            if (!memory[0x01c0:0x01e0]) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x01c0:0x01e0];\n        \n            if (!memory[0x0140:0x0160]) {\n                var1 = 0x00;\n                memory[0x02a0:0x02c0] = var1 / var0;\n            \n                if (memory[0x01c0:0x01e0]) { goto label_06AB; }\n                else { revert(memory[0x00:0x00]); }\n            } else if ((memory[0x0140:0x0160] * address(this).balance) / memory[0x0140:0x0160] == address(this).balance) {\n                memory[0x02a0:0x02c0] = (memory[0x0140:0x0160] * address(this).balance) / var0;\n            \n                if (!memory[0x01c0:0x01e0]) { revert(memory[0x00:0x00]); }\n            \n            label_06AB:\n                var0 = memory[0x01c0:0x01e0];\n            \n                if (!memory[0x0140:0x0160]) {\n                    var1 = 0x00;\n                    memory[0x02c0:0x02e0] = var1 / var0;\n                \n                    if ((memory[0x02a0:0x02c0] >= memory[0x0160:0x0180]) & (memory[0x02c0:0x02e0] >= memory[0x0180:0x01a0])) { goto label_0709; }\n                    else { revert(memory[0x00:0x00]); }\n                } else if ((memory[0x0140:0x0160] * memory[0x01e0:0x0200]) / memory[0x0140:0x0160] == memory[0x01e0:0x0200]) {\n                    memory[0x02c0:0x02e0] = (memory[0x0140:0x0160] * memory[0x01e0:0x0200]) / var0;\n                \n                    if (!((memory[0x02a0:0x02c0] >= memory[0x0160:0x0180]) & (memory[0x02c0:0x02e0] >= memory[0x0180:0x01a0]))) { revert(memory[0x00:0x00]); }\n                \n                label_0709:\n                    memory[0xe0:0x0100] = msg.sender;\n                    memory[0xc0:0xe0] = 0x04;\n                    var0 = keccak256(memory[0xc0:0x0100]);\n                \n                    if (storage[var0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                \n                    var temp27 = var0;\n                    storage[temp27] = storage[temp27] - memory[0x0140:0x0160];\n                \n                    if (memory[0x01c0:0x01e0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                \n                    storage[0x03] = memory[0x01c0:0x01e0] - memory[0x0140:0x0160];\n                    var temp28;\n                    temp28, memory[0x00:0x00] = address(msg.sender).call.gas(0x00).value(memory[0x02a0:0x02c0])(memory[0x00:0x00]);\n                \n                    if (!temp28) { revert(memory[0x00:0x00]); }\n                \n                    if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n                \n                    if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0x02e0:0x0300] = 0xa9059cbb;\n                    memory[0x0300:0x0320] = msg.sender;\n                    memory[0x0320:0x0340] = memory[0x02c0:0x02e0];\n                    var temp29;\n                    temp29, memory[0x0380:0x03a0] = address(storage[0x06]).call.gas(msg.gas)(memory[0x02fc:0x0340]);\n                \n                    if (!temp29) { revert(memory[0x00:0x00]); }\n                \n                    if (!memory[0x0380:0x03a0]) { revert(memory[0x00:0x00]); }\n                \n                    log(memory[0x00:0x00], [0x0fbf06c058b90cb038a618f8c2acbf6145f8b3570fd1fa56abb8f0f3f05b36e8, msg.sender, memory[0x02a0:0x02c0], memory[0x02c0:0x02e0]]);\n                    memory[0x03a0:0x03c0] = memory[0x0140:0x0160];\n                    log(memory[0x03a0:0x03c0], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, msg.sender, 0x00]);\n                    memory[0x03c0:0x03e0] = 0x40;\n                    memory[0x03e0:0x0400] = memory[0x02a0:0x02c0];\n                    memory[0x0400:0x0420] = memory[0x02c0:0x02e0];\n                    return memory[0x03e0:0x03e0 + memory[0x03c0:0x03e0]];\n                } else { revert(memory[0x00:0x00]); }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (0x00) {\n            memory[0x01a0:0x01c0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n        \n            if (!((memory[0x0160:0x0180] > 0x00) & (memory[0x0180:0x01a0] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!memory[0x0140:0x0160]) {\n                var-4 = 0x00;\n                memory[0x01c0:0x01e0] = var-4;\n            \n                if (memory[0x01c0:0x01e0]) { goto label_08C3; }\n                else { goto label_08BD; }\n            } else if ((memory[0x0140:0x0160] * 0x03e5) / memory[0x0140:0x0160] == 0x03e5) {\n                memory[0x01c0:0x01e0] = memory[0x0140:0x0160] * 0x03e5;\n            \n                if (memory[0x01c0:0x01e0]) {\n                label_08C3:\n                \n                    if ((memory[0x01c0:0x01e0] * memory[0x0180:0x01a0]) / memory[0x01c0:0x01e0] != memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0x01e0:0x0200] = memory[0x01c0:0x01e0] * memory[0x0180:0x01a0];\n                \n                    if (memory[0x0160:0x0180]) {\n                    label_08FE:\n                    \n                        if ((memory[0x0160:0x0180] * 0x03e8) / memory[0x0160:0x0180] != 0x03e8) { revert(memory[0x00:0x00]); }\n                    \n                        var-4 = memory[0x0160:0x0180] * 0x03e8;\n                        var-3 = memory[0x01c0:0x01e0];\n                    \n                        if (memory[0x0160:0x0180]) {\n                        label_0936:\n                        \n                            if ((memory[0x0160:0x0180] * 0x03e8) / memory[0x0160:0x0180] != 0x03e8) { revert(memory[0x00:0x00]); }\n                        \n                            if (memory[0x0160:0x0180] * 0x03e8 + var-3 < var-4) { revert(memory[0x00:0x00]); }\n                        \n                        label_0965:\n                            var-4 = memory[0x01c0:0x01e0];\n                        \n                            if (!memory[0x0160:0x0180]) {\n                                var-3 = 0x00;\n                                memory[0x0200:0x0220] = var-3 + var-4;\n                            \n                                if (memory[0x0200:0x0220]) { goto label_09AF; }\n                                else { revert(memory[0x00:0x00]); }\n                            } else if ((memory[0x0160:0x0180] * 0x03e8) / memory[0x0160:0x0180] == 0x03e8) {\n                                memory[0x0200:0x0220] = memory[0x0160:0x0180] * 0x03e8 + var-4;\n                            \n                                if (!memory[0x0200:0x0220]) { revert(memory[0x00:0x00]); }\n                            \n                            label_09AF:\n                                memory[0x00:0x20] = memory[0x01e0:0x0200] / memory[0x0200:0x0220];\n                                var-4 = memory[0x00:0x20];\n                                // Error: Could not resolve jump destination!\n                            } else { revert(memory[0x00:0x00]); }\n                        } else {\n                        label_0930:\n                            var-2 = 0x00;\n                        \n                            if (var-2 + var-3 >= var-4) { goto label_0965; }\n                            else { revert(memory[0x00:0x00]); }\n                        }\n                    } else {\n                    label_08F8:\n                        var-4 = 0x00;\n                        var-3 = memory[0x01c0:0x01e0];\n                    \n                        if (memory[0x0160:0x0180]) { goto label_0936; }\n                        else { goto label_0930; }\n                    }\n                } else {\n                label_08BD:\n                    var-4 = 0x00;\n                    memory[0x01e0:0x0200] = var-4;\n                \n                    if (memory[0x0160:0x0180]) { goto label_08FE; }\n                    else { goto label_08F8; }\n                }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (0x00) {\n            memory[0x01a0:0x01c0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n        \n            if (!((memory[0x0160:0x0180] > 0x00) & (memory[0x0180:0x01a0] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!memory[0x0160:0x0180]) {\n                var-4 = 0x00;\n                goto label_0A2D;\n            } else if ((memory[0x0160:0x0180] * memory[0x0140:0x0160]) / memory[0x0160:0x0180] == memory[0x0140:0x0160]) {\n                var-4 = memory[0x0160:0x0180] * memory[0x0140:0x0160];\n            \n            label_0A2D:\n            \n                if (var-4) {\n                    var-4 = 0x03e8;\n                \n                    if (!memory[0x0160:0x0180]) {\n                        var-3 = 0x00;\n                        var-2 = 0x03e8;\n                    \n                        if (memory[0x0160:0x0180]) { goto label_0A88; }\n                        else { goto label_0A82; }\n                    } else if ((memory[0x0160:0x0180] * memory[0x0140:0x0160]) / memory[0x0160:0x0180] == memory[0x0140:0x0160]) {\n                        var-3 = memory[0x0160:0x0180] * memory[0x0140:0x0160];\n                        var-2 = 0x03e8;\n                    \n                        if (memory[0x0160:0x0180]) {\n                        label_0A88:\n                        \n                            if ((memory[0x0160:0x0180] * memory[0x0140:0x0160]) / memory[0x0160:0x0180] != memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                        \n                            var-1 = memory[0x0160:0x0180] * memory[0x0140:0x0160];\n                        \n                        label_0AAE:\n                        \n                            if ((var-1 * var-2) / var-3 != var-4) { revert(memory[0x00:0x00]); }\n                        \n                            var-4 = 0x03e8;\n                        \n                            if (!memory[0x0160:0x0180]) {\n                                var-3 = 0x00;\n                                var-4 = var-3 * var-4;\n                                goto label_0AF6;\n                            } else if ((memory[0x0160:0x0180] * memory[0x0140:0x0160]) / memory[0x0160:0x0180] == memory[0x0140:0x0160]) {\n                                var-4 = memory[0x0160:0x0180] * memory[0x0140:0x0160] * var-4;\n                            \n                            label_0AF6:\n                                memory[0x01c0:0x01e0] = var-4;\n                            \n                                if (memory[0x0180:0x01a0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                            \n                                if (memory[0x0180:0x01a0] - memory[0x0140:0x0160]) {\n                                    var-4 = 0x03e5;\n                                \n                                    if (memory[0x0180:0x01a0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                                \n                                    var-3 = memory[0x0180:0x01a0] - memory[0x0140:0x0160];\n                                    var-2 = 0x03e5;\n                                \n                                    if (memory[0x0180:0x01a0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                                \n                                    if ((memory[0x0180:0x01a0] - memory[0x0140:0x0160] * var-2) / var-3 != var-4) { revert(memory[0x00:0x00]); }\n                                \n                                    var-4 = 0x03e5;\n                                \n                                    if (memory[0x0180:0x01a0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                                \n                                    var-4 = memory[0x0180:0x01a0] - memory[0x0140:0x0160] * var-4;\n                                \n                                label_0B8E:\n                                    memory[0x01e0:0x0200] = var-4;\n                                \n                                    if (!memory[0x01e0:0x0200]) { revert(memory[0x00:0x00]); }\n                                \n                                    var-4 = memory[0x01c0:0x01e0] / memory[0x01e0:0x0200];\n                                    var-3 = 0x01;\n                                \n                                    if (!memory[0x01e0:0x0200]) { revert(memory[0x00:0x00]); }\n                                \n                                    if (memory[0x01c0:0x01e0] / memory[0x01e0:0x0200] + var-3 < var-4) { revert(memory[0x00:0x00]); }\n                                \n                                    var-4 = 0x01;\n                                \n                                    if (!memory[0x01e0:0x0200]) { revert(memory[0x00:0x00]); }\n                                \n                                    memory[0x00:0x20] = memory[0x01c0:0x01e0] / memory[0x01e0:0x0200] + var-4;\n                                    var-4 = memory[0x00:0x20];\n                                    // Error: Could not resolve jump destination!\n                                } else {\n                                    var-4 = 0x00;\n                                    goto label_0B8E;\n                                }\n                            } else { revert(memory[0x00:0x00]); }\n                        } else {\n                        label_0A82:\n                            var-1 = 0x00;\n                            goto label_0AAE;\n                        }\n                    } else { revert(memory[0x00:0x00]); }\n                } else {\n                    var-4 = 0x00;\n                    goto label_0AF6;\n                }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (0x00) {\n            memory[0x01e0:0x0200] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n        \n            if (!((memory[0x0180:0x01a0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00) & (memory[0x0160:0x0180] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x70a08231;\n            memory[0x0240:0x0260] = address(this);\n            var temp25;\n            temp25, memory[0x02a0:0x02c0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp25) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var-6 = memory[0x0140:0x0160];\n            var-5 = memory[0x0160:0x0180];\n            var-4 = memory[0x0180:0x01a0];\n            var-3 = memory[0x01a0:0x01c0];\n            var-2 = memory[0x01c0:0x01e0];\n            var-1 = memory[0x01e0:0x0200];\n            var0 = memory[0x0200:0x0220];\n            var1 = memory[0x0220:0x0240];\n            var2 = memory[0x0240:0x0260];\n            var3 = memory[0x0260:0x0280];\n            var4 = memory[0x0280:0x02a0];\n            var5 = memory[0x02a0:0x02c0];\n            var6 = memory[0x02c0:0x02e0];\n            memory[0x02e0:0x0300] = 0x89f2a871;\n            memory[0x0300:0x0320] = memory[0x0140:0x0160];\n        \n            if (address(this).balance < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0320:0x0340] = address(this).balance - memory[0x0140:0x0160];\n            memory[0x0340:0x0360] = memory[0x0200:0x0220];\n            var7 = memory[0x0340:0x0360];\n            var8 = memory[0x0320:0x0340];\n            var9 = memory[0x0300:0x0320];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xf39b5b9b) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            memory[0x0180:0x01a0] = 0x8c717a33;\n            memory[0x01a0:0x01c0] = msg.value;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n            memory[0x01e0:0x0200] = memory[0x0160:0x0180];\n            memory[0x0200:0x0220] = msg.sender;\n            memory[0x0220:0x0240] = msg.sender;\n            var2 = memory[0x0220:0x0240];\n            var3 = memory[0x0200:0x0220];\n            var4 = memory[0x01e0:0x0200];\n            var5 = memory[0x01c0:0x01e0];\n            var6 = memory[0x01a0:0x01c0];\n            var7 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xad65d76d) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n            var0 = msg.data[0x44:0x64];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x0180:0x01a0] != address(this)) & (memory[0x0180:0x01a0] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            memory[0x01a0:0x01c0] = 0x8c717a33;\n            memory[0x01c0:0x01e0] = msg.value;\n            memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n            memory[0x0200:0x0220] = memory[0x0160:0x0180];\n            memory[0x0220:0x0240] = msg.sender;\n            memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n            var3 = memory[0x0240:0x0260];\n            var4 = memory[0x0220:0x0240];\n            var5 = memory[0x0200:0x0220];\n            var6 = memory[0x01e0:0x0200];\n            var7 = memory[0x01c0:0x01e0];\n            var8 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            memory[0x01e0:0x0200] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n        \n            if (!((memory[0x0180:0x01a0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00) & (memory[0x0160:0x0180] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x70a08231;\n            memory[0x0240:0x0260] = address(this);\n            var temp24;\n            temp24, memory[0x02a0:0x02c0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp24) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var-6 = memory[0x0140:0x0160];\n            var-5 = memory[0x0160:0x0180];\n            var-4 = memory[0x0180:0x01a0];\n            var-3 = memory[0x01a0:0x01c0];\n            var-2 = memory[0x01c0:0x01e0];\n            var-1 = memory[0x01e0:0x0200];\n            var0 = memory[0x0200:0x0220];\n            var1 = memory[0x0220:0x0240];\n            var2 = memory[0x0240:0x0260];\n            var3 = memory[0x0260:0x0280];\n            var4 = memory[0x0280:0x02a0];\n            var5 = memory[0x02a0:0x02c0];\n            var6 = memory[0x02c0:0x02e0];\n            memory[0x02e0:0x0300] = 0xfd11c223;\n            memory[0x0300:0x0320] = memory[0x0140:0x0160];\n        \n            if (address(this).balance < memory[0x0160:0x0180]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0320:0x0340] = address(this).balance - memory[0x0160:0x0180];\n            memory[0x0340:0x0360] = memory[0x0200:0x0220];\n            var7 = memory[0x0340:0x0360];\n            var8 = memory[0x0320:0x0340];\n            var9 = memory[0x0300:0x0320];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x6b1d4db7) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            memory[0x0180:0x01a0] = 0x2dff394e;\n            memory[0x01a0:0x01c0] = memory[0x0140:0x0160];\n            memory[0x01c0:0x01e0] = msg.value;\n            memory[0x01e0:0x0200] = memory[0x0160:0x0180];\n            memory[0x0200:0x0220] = msg.sender;\n            memory[0x0220:0x0240] = msg.sender;\n            var2 = memory[0x0220:0x0240];\n            var3 = memory[0x0200:0x0220];\n            var4 = memory[0x01e0:0x0200];\n            var5 = memory[0x01c0:0x01e0];\n            var6 = memory[0x01a0:0x01c0];\n            var7 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x0b573638) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n            var0 = msg.data[0x44:0x64];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x0180:0x01a0] != address(this)) & (memory[0x0180:0x01a0] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            memory[0x01a0:0x01c0] = 0x2dff394e;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n            memory[0x01e0:0x0200] = msg.value;\n            memory[0x0200:0x0220] = memory[0x0160:0x0180];\n            memory[0x0220:0x0240] = msg.sender;\n            memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n            var3 = memory[0x0240:0x0260];\n            var4 = memory[0x0220:0x0240];\n            var5 = memory[0x0200:0x0220];\n            var6 = memory[0x01e0:0x0200];\n            var7 = memory[0x01c0:0x01e0];\n            var8 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            memory[0x01e0:0x0200] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n        \n            if (!((memory[0x0180:0x01a0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00) & (memory[0x0160:0x0180] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x70a08231;\n            memory[0x0240:0x0260] = address(this);\n            var temp23;\n            temp23, memory[0x02a0:0x02c0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp23) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var-6 = memory[0x0140:0x0160];\n            var-5 = memory[0x0160:0x0180];\n            var-4 = memory[0x0180:0x01a0];\n            var-3 = memory[0x01a0:0x01c0];\n            var-2 = memory[0x01c0:0x01e0];\n            var-1 = memory[0x01e0:0x0200];\n            var0 = memory[0x0200:0x0220];\n            var1 = memory[0x0220:0x0240];\n            var2 = memory[0x0240:0x0260];\n            var3 = memory[0x0260:0x0280];\n            var4 = memory[0x0280:0x02a0];\n            var5 = memory[0x02a0:0x02c0];\n            var6 = memory[0x02c0:0x02e0];\n            memory[0x02e0:0x0300] = 0x89f2a871;\n            memory[0x0300:0x0320] = memory[0x0140:0x0160];\n            memory[0x0320:0x0340] = memory[0x0200:0x0220];\n            memory[0x0340:0x0360] = address(this).balance;\n            var7 = memory[0x0340:0x0360];\n            var8 = memory[0x0320:0x0340];\n            var9 = memory[0x0300:0x0320];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x95e3c50b) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            memory[0x01a0:0x01c0] = 0xfa1bb7be;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n            memory[0x01e0:0x0200] = memory[0x0160:0x0180];\n            memory[0x0200:0x0220] = memory[0x0180:0x01a0];\n            memory[0x0220:0x0240] = msg.sender;\n            memory[0x0240:0x0260] = msg.sender;\n            var3 = memory[0x0240:0x0260];\n            var4 = memory[0x0220:0x0240];\n            var5 = memory[0x0200:0x0220];\n            var6 = memory[0x01e0:0x0200];\n            var7 = memory[0x01c0:0x01e0];\n            var8 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x7237e031) {\n            memory[0x0140:0x01c0] = msg.data[0x04:0x84];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x64:0x84];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x01a0:0x01c0] != address(this)) & (memory[0x01a0:0x01c0] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            memory[0x01c0:0x01e0] = 0xfa1bb7be;\n            memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n            memory[0x0200:0x0220] = memory[0x0160:0x0180];\n            memory[0x0220:0x0240] = memory[0x0180:0x01a0];\n            memory[0x0240:0x0260] = msg.sender;\n            memory[0x0260:0x0280] = memory[0x01a0:0x01c0];\n            var4 = memory[0x0260:0x0280];\n            var5 = memory[0x0240:0x0260];\n            var6 = memory[0x0220:0x0240];\n            var7 = memory[0x0200:0x0220];\n            var8 = memory[0x01e0:0x0200];\n            var9 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            memory[0x01e0:0x0200] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n        \n            if (!((memory[0x0180:0x01a0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x70a08231;\n            memory[0x0240:0x0260] = address(this);\n            var temp22;\n            temp22, memory[0x02a0:0x02c0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp22) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var-6 = memory[0x0140:0x0160];\n            var-5 = memory[0x0160:0x0180];\n            var-4 = memory[0x0180:0x01a0];\n            var-3 = memory[0x01a0:0x01c0];\n            var-2 = memory[0x01c0:0x01e0];\n            var-1 = memory[0x01e0:0x0200];\n            var0 = memory[0x0200:0x0220];\n            var1 = memory[0x0220:0x0240];\n            var2 = memory[0x0240:0x0260];\n            var3 = memory[0x0260:0x0280];\n            var4 = memory[0x0280:0x02a0];\n            var5 = memory[0x02a0:0x02c0];\n            var6 = memory[0x02c0:0x02e0];\n            memory[0x02e0:0x0300] = 0xfd11c223;\n            memory[0x0300:0x0320] = memory[0x0140:0x0160];\n            memory[0x0320:0x0340] = memory[0x0200:0x0220];\n            memory[0x0340:0x0360] = address(this).balance;\n            var7 = memory[0x0340:0x0360];\n            var8 = memory[0x0320:0x0340];\n            var9 = memory[0x0300:0x0320];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x013efd8b) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            memory[0x01a0:0x01c0] = 0x984fe8f6;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n            memory[0x01e0:0x0200] = memory[0x0160:0x0180];\n            memory[0x0200:0x0220] = memory[0x0180:0x01a0];\n            memory[0x0220:0x0240] = msg.sender;\n            memory[0x0240:0x0260] = msg.sender;\n            var3 = memory[0x0240:0x0260];\n            var4 = memory[0x0220:0x0240];\n            var5 = memory[0x0200:0x0220];\n            var6 = memory[0x01e0:0x0200];\n            var7 = memory[0x01c0:0x01e0];\n            var8 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xd4e4841d) {\n            memory[0x0140:0x01c0] = msg.data[0x04:0x84];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x64:0x84];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x01a0:0x01c0] != address(this)) & (memory[0x01a0:0x01c0] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            memory[0x01c0:0x01e0] = 0x984fe8f6;\n            memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n            memory[0x0200:0x0220] = memory[0x0160:0x0180];\n            memory[0x0220:0x0240] = memory[0x0180:0x01a0];\n            memory[0x0240:0x0260] = msg.sender;\n            memory[0x0260:0x0280] = memory[0x01a0:0x01c0];\n            var4 = memory[0x0260:0x0280];\n            var5 = memory[0x0240:0x0260];\n            var6 = memory[0x0220:0x0240];\n            var7 = memory[0x0200:0x0220];\n            var8 = memory[0x01e0:0x0200];\n            var9 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            memory[0x0220:0x0240] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n            memory[0x01e0:0x0200] = var-7;\n            memory[0x0200:0x0220] = var-8;\n        \n            if (!((memory[0x01a0:0x01c0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00) & (memory[0x0160:0x0180] > 0x00) & (memory[0x0180:0x01a0] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x0200:0x0220] != address(this)) & (memory[0x0200:0x0220] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0260:0x0280] = 0x70a08231;\n            memory[0x0280:0x02a0] = address(this);\n            var temp21;\n            temp21, memory[0x02e0:0x0300] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x027c:0x02a0]);\n        \n            if (!temp21) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0240:0x0260] = memory[0x02e0:0x0300];\n            var-8 = memory[0x0140:0x0160];\n            var-7 = memory[0x0160:0x0180];\n            var-6 = memory[0x0180:0x01a0];\n            var-5 = memory[0x01a0:0x01c0];\n            var-4 = memory[0x01c0:0x01e0];\n            var-3 = memory[0x01e0:0x0200];\n            var-2 = memory[0x0200:0x0220];\n            var-1 = memory[0x0220:0x0240];\n            var0 = memory[0x0240:0x0260];\n            var1 = memory[0x0260:0x0280];\n            var2 = memory[0x0280:0x02a0];\n            var3 = memory[0x02a0:0x02c0];\n            var4 = memory[0x02c0:0x02e0];\n            var5 = memory[0x02e0:0x0300];\n            var6 = memory[0x0300:0x0320];\n            memory[0x0320:0x0340] = 0x89f2a871;\n            memory[0x0340:0x0360] = memory[0x0140:0x0160];\n            memory[0x0360:0x0380] = memory[0x0240:0x0260];\n            memory[0x0380:0x03a0] = address(this).balance;\n            var7 = memory[0x0380:0x03a0];\n            var8 = memory[0x0360:0x0380];\n            var9 = memory[0x0340:0x0360];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xddf7e1a7) {\n            memory[0x0140:0x01e0] = msg.data[0x04:0xa4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x07]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x07]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = 0x06f2bf62;\n            memory[0x0220:0x0240] = memory[0x01c0:0x01e0];\n            var temp20;\n            temp20, memory[0x0280:0x02a0] = address(storage[0x07]).staticcall.gas(msg.gas)(memory[0x021c:0x0240]);\n        \n            if (!temp20) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01e0:0x0200] = memory[0x0280:0x02a0];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            var8 = memory[0x0240:0x0260];\n            var9 = memory[0x0260:0x0280];\n            var10 = memory[0x0280:0x02a0];\n            memory[0x02a0:0x02c0] = 0x204ea33b;\n            memory[0x02c0:0x02e0] = memory[0x0140:0x0160];\n            memory[0x02e0:0x0300] = memory[0x0160:0x0180];\n            memory[0x0300:0x0320] = memory[0x0180:0x01a0];\n            memory[0x0320:0x0340] = memory[0x01a0:0x01c0];\n            memory[0x0340:0x0360] = msg.sender;\n            memory[0x0360:0x0380] = msg.sender;\n            memory[0x0380:0x03a0] = memory[0x01e0:0x0200];\n            var11 = memory[0x0380:0x03a0];\n            var12 = memory[0x0360:0x0380];\n            var13 = memory[0x0340:0x0360];\n            var14 = memory[0x0320:0x0340];\n            var15 = memory[0x0300:0x0320];\n            var16 = memory[0x02e0:0x0300];\n            var17 = memory[0x02c0:0x02e0];\n            var18 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xf552d91b) {\n            memory[0x0140:0x0200] = msg.data[0x04:0xc4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0xa4:0xc4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x07]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x07]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x06f2bf62;\n            memory[0x0240:0x0260] = memory[0x01e0:0x0200];\n            var temp19;\n            temp19, memory[0x02a0:0x02c0] = address(storage[0x07]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp19) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            var8 = memory[0x0240:0x0260];\n            var9 = memory[0x0260:0x0280];\n            var10 = memory[0x0280:0x02a0];\n            var11 = memory[0x02a0:0x02c0];\n            memory[0x02c0:0x02e0] = 0x204ea33b;\n            memory[0x02e0:0x0300] = memory[0x0140:0x0160];\n            memory[0x0300:0x0320] = memory[0x0160:0x0180];\n            memory[0x0320:0x0340] = memory[0x0180:0x01a0];\n            memory[0x0340:0x0360] = memory[0x01a0:0x01c0];\n            memory[0x0360:0x0380] = msg.sender;\n            memory[0x0380:0x03a0] = memory[0x01c0:0x01e0];\n            memory[0x03a0:0x03c0] = memory[0x0200:0x0220];\n            var12 = memory[0x03a0:0x03c0];\n            var13 = memory[0x0380:0x03a0];\n            var14 = memory[0x0360:0x0380];\n            var15 = memory[0x0340:0x0360];\n            var16 = memory[0x0320:0x0340];\n            var17 = memory[0x0300:0x0320];\n            var18 = memory[0x02e0:0x0300];\n            var19 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            // Error: StackRead before write???\n            var var-7;\n            // Error: StackRead before write???\n            var var-6;\n            // Error: StackRead before write???\n            var var-4;\n            // Error: StackRead before write???\n            var var-1;\n            // Error: StackRead before write???\n            var var-3;\n            // Error: StackRead before write???\n            var var-2;\n            // Error: StackRead before write???\n            var var-5;\n            // Error: StackRead before write???\n            var var-8;\n            memory[0x0220:0x0240] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n            memory[0x01e0:0x0200] = var-7;\n            memory[0x0200:0x0220] = var-8;\n        \n            if (!((memory[0x01a0:0x01c0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00) & (memory[0x0180:0x01a0] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x0200:0x0220] != address(this)) & (memory[0x0200:0x0220] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(memory[0x0200:0x0220]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == memory[0x0200:0x0220]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0260:0x0280] = 0x59e94862;\n            memory[0x0280:0x02a0] = memory[0x0140:0x0160];\n            var temp17;\n            temp17, memory[0x02e0:0x0300] = address(memory[0x0200:0x0220]).staticcall.gas(msg.gas)(memory[0x027c:0x02a0]);\n        \n            if (!temp17) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0240:0x0260] = memory[0x02e0:0x0300];\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0320:0x0340] = 0x70a08231;\n            memory[0x0340:0x0360] = address(this);\n            var temp18;\n            temp18, memory[0x03a0:0x03c0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x033c:0x0360]);\n        \n            if (!temp18) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0300:0x0320] = memory[0x03a0:0x03c0];\n            var-8 = memory[0x0140:0x0160];\n            var-7 = memory[0x0160:0x0180];\n            var-6 = memory[0x0180:0x01a0];\n            var-5 = memory[0x01a0:0x01c0];\n            var-4 = memory[0x01c0:0x01e0];\n            var-3 = memory[0x01e0:0x0200];\n            var-2 = memory[0x0200:0x0220];\n            var-1 = memory[0x0220:0x0240];\n            var0 = memory[0x0240:0x0260];\n            var1 = memory[0x0260:0x0280];\n            var2 = memory[0x0280:0x02a0];\n            var3 = memory[0x02a0:0x02c0];\n            var4 = memory[0x02c0:0x02e0];\n            var5 = memory[0x02e0:0x0300];\n            var6 = memory[0x0300:0x0320];\n            var7 = memory[0x0320:0x0340];\n            var8 = memory[0x0340:0x0360];\n            var9 = memory[0x0360:0x0380];\n            var10 = memory[0x0380:0x03a0];\n            var11 = memory[0x03a0:0x03c0];\n            var12 = memory[0x03c0:0x03e0];\n            memory[0x03e0:0x0400] = 0xfd11c223;\n            memory[0x0400:0x0420] = memory[0x0240:0x0260];\n            memory[0x0420:0x0440] = memory[0x0300:0x0320];\n            memory[0x0440:0x0460] = address(this).balance;\n            var13 = memory[0x0440:0x0460];\n            var14 = memory[0x0420:0x0440];\n            var15 = memory[0x0400:0x0420];\n            var16 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xb040d545) {\n            memory[0x0140:0x01e0] = msg.data[0x04:0xa4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x07]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x07]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = 0x06f2bf62;\n            memory[0x0220:0x0240] = memory[0x01c0:0x01e0];\n            var temp16;\n            temp16, memory[0x0280:0x02a0] = address(storage[0x07]).staticcall.gas(msg.gas)(memory[0x021c:0x0240]);\n        \n            if (!temp16) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01e0:0x0200] = memory[0x0280:0x02a0];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            var8 = memory[0x0240:0x0260];\n            var9 = memory[0x0260:0x0280];\n            var10 = memory[0x0280:0x02a0];\n            memory[0x02a0:0x02c0] = 0x1a7b28f2;\n            memory[0x02c0:0x02e0] = memory[0x0140:0x0160];\n            memory[0x02e0:0x0300] = memory[0x0160:0x0180];\n            memory[0x0300:0x0320] = memory[0x0180:0x01a0];\n            memory[0x0320:0x0340] = memory[0x01a0:0x01c0];\n            memory[0x0340:0x0360] = msg.sender;\n            memory[0x0360:0x0380] = msg.sender;\n            memory[0x0380:0x03a0] = memory[0x01e0:0x0200];\n            var11 = memory[0x0380:0x03a0];\n            var12 = memory[0x0360:0x0380];\n            var13 = memory[0x0340:0x0360];\n            var14 = memory[0x0320:0x0340];\n            var15 = memory[0x0300:0x0320];\n            var16 = memory[0x02e0:0x0300];\n            var17 = memory[0x02c0:0x02e0];\n            var18 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xf3c0efe9) {\n            memory[0x0140:0x0200] = msg.data[0x04:0xc4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0xa4:0xc4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x07]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x07]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x06f2bf62;\n            memory[0x0240:0x0260] = memory[0x01e0:0x0200];\n            var temp15;\n            temp15, memory[0x02a0:0x02c0] = address(storage[0x07]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp15) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            var8 = memory[0x0240:0x0260];\n            var9 = memory[0x0260:0x0280];\n            var10 = memory[0x0280:0x02a0];\n            var11 = memory[0x02a0:0x02c0];\n            memory[0x02c0:0x02e0] = 0x1a7b28f2;\n            memory[0x02e0:0x0300] = memory[0x0140:0x0160];\n            memory[0x0300:0x0320] = memory[0x0160:0x0180];\n            memory[0x0320:0x0340] = memory[0x0180:0x01a0];\n            memory[0x0340:0x0360] = memory[0x01a0:0x01c0];\n            memory[0x0360:0x0380] = msg.sender;\n            memory[0x0380:0x03a0] = memory[0x01c0:0x01e0];\n            memory[0x03a0:0x03c0] = memory[0x0200:0x0220];\n            var12 = memory[0x03a0:0x03c0];\n            var13 = memory[0x0380:0x03a0];\n            var var14 = memory[0x0360:0x0380];\n            var var15 = memory[0x0340:0x0360];\n            var var16 = memory[0x0320:0x0340];\n            var var17 = memory[0x0300:0x0320];\n            var var18 = memory[0x02e0:0x0300];\n            var var19 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xb1cb43bf) {\n            memory[0x0140:0x01e0] = msg.data[0x04:0xa4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            memory[0x01e0:0x0200] = 0x204ea33b;\n            memory[0x0200:0x0220] = memory[0x0140:0x0160];\n            memory[0x0220:0x0240] = memory[0x0160:0x0180];\n            memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n            memory[0x0260:0x0280] = memory[0x01a0:0x01c0];\n            memory[0x0280:0x02a0] = msg.sender;\n            memory[0x02a0:0x02c0] = msg.sender;\n            memory[0x02c0:0x02e0] = memory[0x01c0:0x01e0];\n            var5 = memory[0x02c0:0x02e0];\n            var6 = memory[0x02a0:0x02c0];\n            var7 = memory[0x0280:0x02a0];\n            var8 = memory[0x0260:0x0280];\n            var9 = memory[0x0240:0x0260];\n            var10 = memory[0x0220:0x0240];\n            var11 = memory[0x0200:0x0220];\n            var12 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xec384a3e) {\n            memory[0x0140:0x0200] = msg.data[0x04:0xc4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0xa4:0xc4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x01c0:0x01e0] == address(this)) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            memory[0x0200:0x0220] = 0x204ea33b;\n            memory[0x0220:0x0240] = memory[0x0140:0x0160];\n            memory[0x0240:0x0260] = memory[0x0160:0x0180];\n            memory[0x0260:0x0280] = memory[0x0180:0x01a0];\n            memory[0x0280:0x02a0] = memory[0x01a0:0x01c0];\n            memory[0x02a0:0x02c0] = msg.sender;\n            memory[0x02c0:0x02e0] = memory[0x01c0:0x01e0];\n            memory[0x02e0:0x0300] = memory[0x01e0:0x0200];\n            var6 = memory[0x02e0:0x0300];\n            var7 = memory[0x02c0:0x02e0];\n            var8 = memory[0x02a0:0x02c0];\n            var9 = memory[0x0280:0x02a0];\n            var10 = memory[0x0260:0x0280];\n            var11 = memory[0x0240:0x0260];\n            var12 = memory[0x0220:0x0240];\n            var13 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xea650c7d) {\n            memory[0x0140:0x01e0] = msg.data[0x04:0xa4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            memory[0x01e0:0x0200] = 0x1a7b28f2;\n            memory[0x0200:0x0220] = memory[0x0140:0x0160];\n            memory[0x0220:0x0240] = memory[0x0160:0x0180];\n            memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n            memory[0x0260:0x0280] = memory[0x01a0:0x01c0];\n            memory[0x0280:0x02a0] = msg.sender;\n            memory[0x02a0:0x02c0] = msg.sender;\n            memory[0x02c0:0x02e0] = memory[0x01c0:0x01e0];\n            var5 = memory[0x02c0:0x02e0];\n            var6 = memory[0x02a0:0x02c0];\n            var7 = memory[0x0280:0x02a0];\n            var8 = memory[0x0260:0x0280];\n            var9 = memory[0x0240:0x0260];\n            var10 = memory[0x0220:0x0240];\n            var11 = memory[0x0200:0x0220];\n            var12 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x981a1327) {\n            memory[0x0140:0x0200] = msg.data[0x04:0xc4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0xa4:0xc4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x01c0:0x01e0] == address(this)) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            memory[0x0200:0x0220] = 0x1a7b28f2;\n            memory[0x0220:0x0240] = memory[0x0140:0x0160];\n            memory[0x0240:0x0260] = memory[0x0160:0x0180];\n            memory[0x0260:0x0280] = memory[0x0180:0x01a0];\n            memory[0x0280:0x02a0] = memory[0x01a0:0x01c0];\n            memory[0x02a0:0x02c0] = msg.sender;\n            memory[0x02c0:0x02e0] = memory[0x01c0:0x01e0];\n            memory[0x02e0:0x0300] = memory[0x01e0:0x0200];\n            var6 = memory[0x02e0:0x0300];\n            var7 = memory[0x02c0:0x02e0];\n            var8 = memory[0x02a0:0x02c0];\n            var9 = memory[0x0280:0x02a0];\n            var10 = memory[0x0260:0x0280];\n            var11 = memory[0x0240:0x0260];\n            var var12 = memory[0x0220:0x0240];\n            var var13 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xcd7724c3) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] <= 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0180:0x01a0] = 0x70a08231;\n            memory[0x01a0:0x01c0] = address(this);\n            var temp14;\n            temp14, memory[0x0200:0x0220] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x019c:0x01c0]);\n        \n            if (!temp14) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0160:0x0180] = memory[0x0200:0x0220];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            memory[0x0220:0x0240] = 0x89f2a871;\n            memory[0x0240:0x0260] = memory[0x0140:0x0160];\n            memory[0x0260:0x0280] = address(this).balance;\n            memory[0x0280:0x02a0] = memory[0x0160:0x0180];\n            var7 = memory[0x0280:0x02a0];\n            var8 = memory[0x0260:0x0280];\n            var9 = memory[0x0240:0x0260];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x59e94862) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] <= 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0180:0x01a0] = 0x70a08231;\n            memory[0x01a0:0x01c0] = address(this);\n            var temp13;\n            temp13, memory[0x0200:0x0220] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x019c:0x01c0]);\n        \n            if (!temp13) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0160:0x0180] = memory[0x0200:0x0220];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            memory[0x0240:0x0260] = 0xfd11c223;\n            memory[0x0260:0x0280] = memory[0x0140:0x0160];\n            memory[0x0280:0x02a0] = address(this).balance;\n            memory[0x02a0:0x02c0] = memory[0x0160:0x0180];\n            var8 = memory[0x02a0:0x02c0];\n            var9 = memory[0x0280:0x02a0];\n            var10 = memory[0x0260:0x0280];\n            var11 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x95b68fe7) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] <= 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0180:0x01a0] = 0x70a08231;\n            memory[0x01a0:0x01c0] = address(this);\n            var temp12;\n            temp12, memory[0x0200:0x0220] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x019c:0x01c0]);\n        \n            if (!temp12) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0160:0x0180] = memory[0x0200:0x0220];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            memory[0x0240:0x0260] = 0x89f2a871;\n            memory[0x0260:0x0280] = memory[0x0140:0x0160];\n            memory[0x0280:0x02a0] = memory[0x0160:0x0180];\n            memory[0x02a0:0x02c0] = address(this).balance;\n            var8 = memory[0x02a0:0x02c0];\n            var9 = memory[0x0280:0x02a0];\n            var10 = memory[0x0260:0x0280];\n            var var11 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x2640f62c) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] <= 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0180:0x01a0] = 0x70a08231;\n            memory[0x01a0:0x01c0] = address(this);\n            var temp11;\n            temp11, memory[0x0200:0x0220] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x019c:0x01c0]);\n        \n            if (!temp11) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0160:0x0180] = memory[0x0200:0x0220];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var var6 = memory[0x0200:0x0220];\n            memory[0x0220:0x0240] = 0xfd11c223;\n            memory[0x0240:0x0260] = memory[0x0140:0x0160];\n            memory[0x0260:0x0280] = memory[0x0160:0x0180];\n            memory[0x0280:0x02a0] = address(this).balance;\n            var var7 = memory[0x0280:0x02a0];\n            var var8 = memory[0x0260:0x0280];\n            var var9 = memory[0x0240:0x0260];\n            var var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] != 0x9d76ea58) {\n            if (memory[0x00:0x20] != 0x966dae0e) {\n                if (memory[0x00:0x20] == 0x70a08231) {\n                    memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x04;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0xa9059cbb) {\n                    memory[0x0140:0x0180] = msg.data[0x04:0x44];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = msg.sender;\n                    memory[0xc0:0xe0] = 0x04;\n                    var0 = keccak256(memory[0xc0:0x0100]);\n                \n                    if (storage[var0] < memory[0x0160:0x0180]) { revert(memory[0x00:0x00]); }\n                \n                    var temp8 = var0;\n                    storage[temp8] = storage[temp8] - memory[0x0160:0x0180];\n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x04;\n                    var temp9 = keccak256(memory[0xc0:0x0100]);\n                    var0 = temp9;\n                \n                    if (storage[var0] + memory[0x0160:0x0180] < storage[var0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp10 = var0;\n                    storage[temp10] = storage[temp10] + memory[0x0160:0x0180];\n                    memory[0x0180:0x01a0] = memory[0x0160:0x0180];\n                    log(memory[0x0180:0x01a0], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, msg.sender, memory[0x0140:0x0160]]);\n                    memory[0x00:0x20] = 0x01;\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0x23b872dd) {\n                    memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x24:0x44];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x04;\n                    var0 = keccak256(memory[0xc0:0x0100]);\n                \n                    if (storage[var0] < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp3 = var0;\n                    storage[temp3] = storage[temp3] - memory[0x0180:0x01a0];\n                    memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                    memory[0xc0:0xe0] = 0x04;\n                    var temp4 = keccak256(memory[0xc0:0x0100]);\n                    var0 = temp4;\n                \n                    if (storage[var0] + memory[0x0180:0x01a0] < storage[var0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp5 = var0;\n                    storage[temp5] = storage[temp5] + memory[0x0180:0x01a0];\n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x05;\n                    var temp6 = keccak256(memory[0xc0:0x0100]);\n                    memory[0xe0:0x0100] = msg.sender;\n                    memory[0xc0:0xe0] = temp6;\n                    var0 = keccak256(memory[0xc0:0x0100]);\n                \n                    if (storage[var0] < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp7 = var0;\n                    storage[temp7] = storage[temp7] - memory[0x0180:0x01a0];\n                    memory[0x01a0:0x01c0] = memory[0x0180:0x01a0];\n                    log(memory[0x01a0:0x01c0], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, memory[0x0140:0x0160], memory[0x0160:0x0180]]);\n                    memory[0x00:0x20] = 0x01;\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0x095ea7b3) {\n                    memory[0x0140:0x0180] = msg.data[0x04:0x44];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    var temp1 = memory[0x0160:0x0180];\n                    memory[0xe0:0x0100] = msg.sender;\n                    memory[0xc0:0xe0] = 0x05;\n                    var temp2 = keccak256(memory[0xc0:0x0100]);\n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = temp2;\n                    storage[keccak256(memory[0xc0:0x0100])] = temp1;\n                    memory[0x0180:0x01a0] = memory[0x0160:0x0180];\n                    log(memory[0x0180:0x01a0], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, msg.sender, memory[0x0140:0x0160]]);\n                    memory[0x00:0x20] = 0x01;\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0xdd62ed3e) {\n                    memory[0x0140:0x0180] = msg.data[0x04:0x44];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x24:0x44];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x05;\n                    var temp0 = keccak256(memory[0xc0:0x0100]);\n                    memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                    memory[0xc0:0xe0] = temp0;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] != 0x06fdde03) {\n                    if (memory[0x00:0x20] != 0x95d89b41) {\n                        if (memory[0x00:0x20] != 0x313ce567) {\n                            if (memory[0x00:0x20] != 0x18160ddd) {\n                                memory[0x0140:0x0160] = 0x8c717a33;\n                                memory[0x0160:0x0180] = msg.value;\n                                memory[0x0180:0x01a0] = 0x01;\n                                memory[0x01a0:0x01c0] = block.timestamp;\n                                memory[0x01c0:0x01e0] = msg.sender;\n                                memory[0x01e0:0x0200] = msg.sender;\n                                var var0 = memory[0x01e0:0x0200];\n                                var var1 = memory[0x01c0:0x01e0];\n                                var var2 = memory[0x01a0:0x01c0];\n                                var var3 = memory[0x0180:0x01a0];\n                                var var4 = memory[0x0160:0x0180];\n                                var var5 = 0x06;\n                                // Unhandled termination\n                            } else if (!msg.value) {\n                                memory[0x00:0x20] = storage[0x03];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            memory[0x00:0x20] = storage[0x02];\n                            return memory[0x00:0x20];\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0x00:0x20] = storage[0x01];\n                        return memory[0x00:0x20];\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    memory[0x00:0x20] = storage[0x00];\n                    return memory[0x00:0x20];\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0x00:0x20] = storage[0x07];\n                return memory[0x00:0x20];\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x00:0x20] = storage[0x06];\n            return memory[0x00:0x20];\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] == 0x66d38203) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!(!storage[0x07] & !storage[0x06] & (memory[0x0140:0x0160] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            storage[0x07] = msg.sender;\n            storage[0x06] = memory[0x0140:0x0160];\n            storage[0x00] = 0x556e697377617020563100000000000000000000000000000000000000000000;\n            storage[0x01] = 0x554e492d56310000000000000000000000000000000000000000000000000000;\n            storage[0x02] = 0x12;\n            stop();\n        } else if (memory[0x00:0x20] == 0x422f1043) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n        \n            if (!((memory[0x0180:0x01a0] > block.timestamp) & (memory[0x0160:0x0180] > 0x00) & (msg.value > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01a0:0x01c0] = storage[0x03];\n        \n            if (memory[0x01a0:0x01c0] <= 0x00) {\n                if (!((storage[0x07] != 0x00) & (storage[0x06] != 0x00) & (msg.value >= 0x3b9aca00))) { revert(memory[0x00:0x00]); }\n            \n                var0 = address(this);\n            \n                if (!address(storage[0x07]).code.length) { revert(memory[0x00:0x00]); }\n            \n                if (address(this) == storage[0x07]) { revert(memory[0x00:0x00]); }\n            \n                memory[0x01c0:0x01e0] = 0x06f2bf62;\n                memory[0x01e0:0x0200] = storage[0x06];\n                var temp30;\n                temp30, memory[0x0240:0x0260] = address(storage[0x07]).staticcall.gas(msg.gas)(memory[0x01dc:0x0200]);\n            \n                if (!temp30) { revert(memory[0x00:0x00]); }\n            \n                if (memory[0x0240:0x0260] != var0) { revert(memory[0x00:0x00]); }\n            \n                memory[0x0260:0x0280] = memory[0x0160:0x0180];\n                memory[0x0280:0x02a0] = address(this).balance;\n                storage[0x03] = memory[0x0280:0x02a0];\n                var temp31 = memory[0x0280:0x02a0];\n                memory[0xe0:0x0100] = msg.sender;\n                memory[0xc0:0xe0] = 0x04;\n                storage[keccak256(memory[0xc0:0x0100])] = temp31;\n            \n                if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n            \n                if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n            \n                memory[0x02a0:0x02c0] = 0x23b872dd;\n                memory[0x02c0:0x02e0] = msg.sender;\n                memory[0x02e0:0x0300] = address(this);\n                memory[0x0300:0x0320] = memory[0x0260:0x0280];\n                var temp32;\n                temp32, memory[0x0360:0x0380] = address(storage[0x06]).call.gas(msg.gas)(memory[0x02bc:0x0320]);\n            \n                if (!temp32) { revert(memory[0x00:0x00]); }\n            \n                if (!memory[0x0360:0x0380]) { revert(memory[0x00:0x00]); }\n            \n                log(memory[0x00:0x00], [0x06239653922ac7bea6aa2b19dc486b9361821d37712eb796adfd38d81de278ca, msg.sender, msg.value, memory[0x0260:0x0280]]);\n                memory[0x0380:0x03a0] = memory[0x0280:0x02a0];\n                log(memory[0x0380:0x03a0], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, 0x00, msg.sender]);\n                memory[0x00:0x20] = memory[0x0280:0x02a0];\n                return memory[0x00:0x20];\n            } else if (memory[0x0140:0x0160] > 0x00) {\n                if (address(this).balance < msg.value) { revert(memory[0x00:0x00]); }\n            \n                memory[0x03a0:0x03c0] = address(this).balance - msg.value;\n            \n                if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n            \n                if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n            \n                memory[0x03e0:0x0400] = 0x70a08231;\n                memory[0x0400:0x0420] = address(this);\n                var temp33;\n                temp33, memory[0x0460:0x0480] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x03fc:0x0420]);\n            \n                if (!temp33) { revert(memory[0x00:0x00]); }\n            \n                memory[0x03c0:0x03e0] = memory[0x0460:0x0480];\n            \n                if (!memory[0x03a0:0x03c0]) { revert(memory[0x00:0x00]); }\n            \n                var0 = memory[0x03a0:0x03c0];\n            \n                if (!msg.value) {\n                    var1 = 0x00;\n                    var0 = var1 / var0;\n                    var1 = 0x01;\n                \n                    if (memory[0x03a0:0x03c0]) { goto label_023F; }\n                    else { revert(memory[0x00:0x00]); }\n                } else if ((msg.value * memory[0x03c0:0x03e0]) / msg.value == memory[0x03c0:0x03e0]) {\n                    var0 = (msg.value * memory[0x03c0:0x03e0]) / var0;\n                    var1 = 0x01;\n                \n                    if (!memory[0x03a0:0x03c0]) { revert(memory[0x00:0x00]); }\n                \n                label_023F:\n                    var2 = memory[0x03a0:0x03c0];\n                \n                    if (!msg.value) {\n                        var3 = 0x00;\n                    \n                        if (var3 / var2 + var1 >= var0) { goto label_027B; }\n                        else { revert(memory[0x00:0x00]); }\n                    } else if ((msg.value * memory[0x03c0:0x03e0]) / msg.value == memory[0x03c0:0x03e0]) {\n                        if ((msg.value * memory[0x03c0:0x03e0]) / var2 + var1 < var0) { revert(memory[0x00:0x00]); }\n                    \n                    label_027B:\n                        var0 = 0x01;\n                    \n                        if (!memory[0x03a0:0x03c0]) { revert(memory[0x00:0x00]); }\n                    \n                        var1 = memory[0x03a0:0x03c0];\n                    \n                        if (!msg.value) {\n                            var2 = 0x00;\n                            memory[0x0480:0x04a0] = var2 / var1 + var0;\n                        \n                            if (memory[0x03a0:0x03c0]) { goto label_02CC; }\n                            else { revert(memory[0x00:0x00]); }\n                        } else if ((msg.value * memory[0x03c0:0x03e0]) / msg.value == memory[0x03c0:0x03e0]) {\n                            memory[0x0480:0x04a0] = (msg.value * memory[0x03c0:0x03e0]) / var1 + var0;\n                        \n                            if (!memory[0x03a0:0x03c0]) { revert(memory[0x00:0x00]); }\n                        \n                        label_02CC:\n                            var0 = memory[0x03a0:0x03c0];\n                        \n                            if (!msg.value) {\n                                var1 = 0x00;\n                                goto label_02FB;\n                            } else if ((msg.value * memory[0x01a0:0x01c0]) / msg.value == memory[0x01a0:0x01c0]) {\n                                var1 = msg.value * memory[0x01a0:0x01c0];\n                            \n                            label_02FB:\n                                memory[0x04a0:0x04c0] = var1 / var0;\n                            \n                                if (!((memory[0x0160:0x0180] >= memory[0x0480:0x04a0]) & (memory[0x04a0:0x04c0] >= memory[0x0140:0x0160]))) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.sender;\n                                memory[0xc0:0xe0] = 0x04;\n                                var temp34 = keccak256(memory[0xc0:0x0100]);\n                                var0 = temp34;\n                            \n                                if (storage[var0] + memory[0x04a0:0x04c0] < storage[var0]) { revert(memory[0x00:0x00]); }\n                            \n                                var temp35 = var0;\n                                storage[temp35] = storage[temp35] + memory[0x04a0:0x04c0];\n                            \n                                if (memory[0x01a0:0x01c0] + memory[0x04a0:0x04c0] < memory[0x01a0:0x01c0]) { revert(memory[0x00:0x00]); }\n                            \n                                storage[0x03] = memory[0x01a0:0x01c0] + memory[0x04a0:0x04c0];\n                            \n                                if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n                            \n                                if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0x04c0:0x04e0] = 0x23b872dd;\n                                memory[0x04e0:0x0500] = msg.sender;\n                                memory[0x0500:0x0520] = address(this);\n                                memory[0x0520:0x0540] = memory[0x0480:0x04a0];\n                                var temp36;\n                                temp36, memory[0x0580:0x05a0] = address(storage[0x06]).call.gas(msg.gas)(memory[0x04dc:0x0540]);\n                            \n                                if (!temp36) { revert(memory[0x00:0x00]); }\n                            \n                                if (!memory[0x0580:0x05a0]) { revert(memory[0x00:0x00]); }\n                            \n                                log(memory[0x00:0x00], [0x06239653922ac7bea6aa2b19dc486b9361821d37712eb796adfd38d81de278ca, msg.sender, msg.value, memory[0x0480:0x04a0]]);\n                                memory[0x05a0:0x05c0] = memory[0x04a0:0x04c0];\n                                log(memory[0x05a0:0x05c0], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, 0x00, msg.sender]);\n                                memory[0x00:0x20] = memory[0x04a0:0x04c0];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else { revert(memory[0x00:0x00]); }\n                    } else { revert(memory[0x00:0x00]); }\n                } else { revert(memory[0x00:0x00]); }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (memory[0x00:0x20] == 0xf88bf15a) {\n            memory[0x0140:0x01c0] = msg.data[0x04:0x84];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x0140:0x0160] > 0x00) & (memory[0x01a0:0x01c0] > block.timestamp) & (memory[0x0160:0x0180] > 0x00) & (memory[0x0180:0x01a0] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01c0:0x01e0] = storage[0x03];\n        \n            if (memory[0x01c0:0x01e0] <= 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = 0x70a08231;\n            memory[0x0220:0x0240] = address(this);\n            var temp26;\n            temp26, memory[0x0280:0x02a0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x021c:0x0240]);\n        \n            if (!temp26) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01e0:0x0200] = memory[0x0280:0x02a0];\n        \n            if (!memory[0x01c0:0x01e0]) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x01c0:0x01e0];\n        \n            if (!memory[0x0140:0x0160]) {\n                var1 = 0x00;\n                memory[0x02a0:0x02c0] = var1 / var0;\n            \n                if (memory[0x01c0:0x01e0]) { goto label_06AB; }\n                else { revert(memory[0x00:0x00]); }\n            } else if ((memory[0x0140:0x0160] * address(this).balance) / memory[0x0140:0x0160] == address(this).balance) {\n                memory[0x02a0:0x02c0] = (memory[0x0140:0x0160] * address(this).balance) / var0;\n            \n                if (!memory[0x01c0:0x01e0]) { revert(memory[0x00:0x00]); }\n            \n            label_06AB:\n                var0 = memory[0x01c0:0x01e0];\n            \n                if (!memory[0x0140:0x0160]) {\n                    var1 = 0x00;\n                    memory[0x02c0:0x02e0] = var1 / var0;\n                \n                    if ((memory[0x02a0:0x02c0] >= memory[0x0160:0x0180]) & (memory[0x02c0:0x02e0] >= memory[0x0180:0x01a0])) { goto label_0709; }\n                    else { revert(memory[0x00:0x00]); }\n                } else if ((memory[0x0140:0x0160] * memory[0x01e0:0x0200]) / memory[0x0140:0x0160] == memory[0x01e0:0x0200]) {\n                    memory[0x02c0:0x02e0] = (memory[0x0140:0x0160] * memory[0x01e0:0x0200]) / var0;\n                \n                    if (!((memory[0x02a0:0x02c0] >= memory[0x0160:0x0180]) & (memory[0x02c0:0x02e0] >= memory[0x0180:0x01a0]))) { revert(memory[0x00:0x00]); }\n                \n                label_0709:\n                    memory[0xe0:0x0100] = msg.sender;\n                    memory[0xc0:0xe0] = 0x04;\n                    var0 = keccak256(memory[0xc0:0x0100]);\n                \n                    if (storage[var0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                \n                    var temp27 = var0;\n                    storage[temp27] = storage[temp27] - memory[0x0140:0x0160];\n                \n                    if (memory[0x01c0:0x01e0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                \n                    storage[0x03] = memory[0x01c0:0x01e0] - memory[0x0140:0x0160];\n                    var temp28;\n                    temp28, memory[0x00:0x00] = address(msg.sender).call.gas(0x00).value(memory[0x02a0:0x02c0])(memory[0x00:0x00]);\n                \n                    if (!temp28) { revert(memory[0x00:0x00]); }\n                \n                    if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n                \n                    if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0x02e0:0x0300] = 0xa9059cbb;\n                    memory[0x0300:0x0320] = msg.sender;\n                    memory[0x0320:0x0340] = memory[0x02c0:0x02e0];\n                    var temp29;\n                    temp29, memory[0x0380:0x03a0] = address(storage[0x06]).call.gas(msg.gas)(memory[0x02fc:0x0340]);\n                \n                    if (!temp29) { revert(memory[0x00:0x00]); }\n                \n                    if (!memory[0x0380:0x03a0]) { revert(memory[0x00:0x00]); }\n                \n                    log(memory[0x00:0x00], [0x0fbf06c058b90cb038a618f8c2acbf6145f8b3570fd1fa56abb8f0f3f05b36e8, msg.sender, memory[0x02a0:0x02c0], memory[0x02c0:0x02e0]]);\n                    memory[0x03a0:0x03c0] = memory[0x0140:0x0160];\n                    log(memory[0x03a0:0x03c0], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, msg.sender, 0x00]);\n                    memory[0x03c0:0x03e0] = 0x40;\n                    memory[0x03e0:0x0400] = memory[0x02a0:0x02c0];\n                    memory[0x0400:0x0420] = memory[0x02c0:0x02e0];\n                    return memory[0x03e0:0x03e0 + memory[0x03c0:0x03e0]];\n                } else { revert(memory[0x00:0x00]); }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (0x00) {\n            memory[0x01a0:0x01c0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n        \n            if (!((memory[0x0160:0x0180] > 0x00) & (memory[0x0180:0x01a0] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!memory[0x0140:0x0160]) {\n                var-4 = 0x00;\n                memory[0x01c0:0x01e0] = var-4;\n            \n                if (memory[0x01c0:0x01e0]) { goto label_08C3; }\n                else { goto label_08BD; }\n            } else if ((memory[0x0140:0x0160] * 0x03e5) / memory[0x0140:0x0160] == 0x03e5) {\n                memory[0x01c0:0x01e0] = memory[0x0140:0x0160] * 0x03e5;\n            \n                if (memory[0x01c0:0x01e0]) {\n                label_08C3:\n                \n                    if ((memory[0x01c0:0x01e0] * memory[0x0180:0x01a0]) / memory[0x01c0:0x01e0] != memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0x01e0:0x0200] = memory[0x01c0:0x01e0] * memory[0x0180:0x01a0];\n                \n                    if (memory[0x0160:0x0180]) {\n                    label_08FE:\n                    \n                        if ((memory[0x0160:0x0180] * 0x03e8) / memory[0x0160:0x0180] != 0x03e8) { revert(memory[0x00:0x00]); }\n                    \n                        var-4 = memory[0x0160:0x0180] * 0x03e8;\n                        var-3 = memory[0x01c0:0x01e0];\n                    \n                        if (memory[0x0160:0x0180]) {\n                        label_0936:\n                        \n                            if ((memory[0x0160:0x0180] * 0x03e8) / memory[0x0160:0x0180] != 0x03e8) { revert(memory[0x00:0x00]); }\n                        \n                            if (memory[0x0160:0x0180] * 0x03e8 + var-3 < var-4) { revert(memory[0x00:0x00]); }\n                        \n                        label_0965:\n                            var-4 = memory[0x01c0:0x01e0];\n                        \n                            if (!memory[0x0160:0x0180]) {\n                                var-3 = 0x00;\n                                memory[0x0200:0x0220] = var-3 + var-4;\n                            \n                                if (memory[0x0200:0x0220]) { goto label_09AF; }\n                                else { revert(memory[0x00:0x00]); }\n                            } else if ((memory[0x0160:0x0180] * 0x03e8) / memory[0x0160:0x0180] == 0x03e8) {\n                                memory[0x0200:0x0220] = memory[0x0160:0x0180] * 0x03e8 + var-4;\n                            \n                                if (!memory[0x0200:0x0220]) { revert(memory[0x00:0x00]); }\n                            \n                            label_09AF:\n                                memory[0x00:0x20] = memory[0x01e0:0x0200] / memory[0x0200:0x0220];\n                                var-4 = memory[0x00:0x20];\n                                // Error: Could not resolve jump destination!\n                            } else { revert(memory[0x00:0x00]); }\n                        } else {\n                        label_0930:\n                            var-2 = 0x00;\n                        \n                            if (var-2 + var-3 >= var-4) { goto label_0965; }\n                            else { revert(memory[0x00:0x00]); }\n                        }\n                    } else {\n                    label_08F8:\n                        var-4 = 0x00;\n                        var-3 = memory[0x01c0:0x01e0];\n                    \n                        if (memory[0x0160:0x0180]) { goto label_0936; }\n                        else { goto label_0930; }\n                    }\n                } else {\n                label_08BD:\n                    var-4 = 0x00;\n                    memory[0x01e0:0x0200] = var-4;\n                \n                    if (memory[0x0160:0x0180]) { goto label_08FE; }\n                    else { goto label_08F8; }\n                }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (0x00) {\n            memory[0x01a0:0x01c0] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n        \n            if (!((memory[0x0160:0x0180] > 0x00) & (memory[0x0180:0x01a0] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!memory[0x0160:0x0180]) {\n                var-4 = 0x00;\n                goto label_0A2D;\n            } else if ((memory[0x0160:0x0180] * memory[0x0140:0x0160]) / memory[0x0160:0x0180] == memory[0x0140:0x0160]) {\n                var-4 = memory[0x0160:0x0180] * memory[0x0140:0x0160];\n            \n            label_0A2D:\n            \n                if (var-4) {\n                    var-4 = 0x03e8;\n                \n                    if (!memory[0x0160:0x0180]) {\n                        var-3 = 0x00;\n                        var-2 = 0x03e8;\n                    \n                        if (memory[0x0160:0x0180]) { goto label_0A88; }\n                        else { goto label_0A82; }\n                    } else if ((memory[0x0160:0x0180] * memory[0x0140:0x0160]) / memory[0x0160:0x0180] == memory[0x0140:0x0160]) {\n                        var-3 = memory[0x0160:0x0180] * memory[0x0140:0x0160];\n                        var-2 = 0x03e8;\n                    \n                        if (memory[0x0160:0x0180]) {\n                        label_0A88:\n                        \n                            if ((memory[0x0160:0x0180] * memory[0x0140:0x0160]) / memory[0x0160:0x0180] != memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                        \n                            var-1 = memory[0x0160:0x0180] * memory[0x0140:0x0160];\n                        \n                        label_0AAE:\n                        \n                            if ((var-1 * var-2) / var-3 != var-4) { revert(memory[0x00:0x00]); }\n                        \n                            var-4 = 0x03e8;\n                        \n                            if (!memory[0x0160:0x0180]) {\n                                var-3 = 0x00;\n                                var-4 = var-3 * var-4;\n                                goto label_0AF6;\n                            } else if ((memory[0x0160:0x0180] * memory[0x0140:0x0160]) / memory[0x0160:0x0180] == memory[0x0140:0x0160]) {\n                                var-4 = memory[0x0160:0x0180] * memory[0x0140:0x0160] * var-4;\n                            \n                            label_0AF6:\n                                memory[0x01c0:0x01e0] = var-4;\n                            \n                                if (memory[0x0180:0x01a0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                            \n                                if (memory[0x0180:0x01a0] - memory[0x0140:0x0160]) {\n                                    var-4 = 0x03e5;\n                                \n                                    if (memory[0x0180:0x01a0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                                \n                                    var-3 = memory[0x0180:0x01a0] - memory[0x0140:0x0160];\n                                    var-2 = 0x03e5;\n                                \n                                    if (memory[0x0180:0x01a0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                                \n                                    if ((memory[0x0180:0x01a0] - memory[0x0140:0x0160] * var-2) / var-3 != var-4) { revert(memory[0x00:0x00]); }\n                                \n                                    var-4 = 0x03e5;\n                                \n                                    if (memory[0x0180:0x01a0] < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n                                \n                                    var-4 = memory[0x0180:0x01a0] - memory[0x0140:0x0160] * var-4;\n                                \n                                label_0B8E:\n                                    memory[0x01e0:0x0200] = var-4;\n                                \n                                    if (!memory[0x01e0:0x0200]) { revert(memory[0x00:0x00]); }\n                                \n                                    var-4 = memory[0x01c0:0x01e0] / memory[0x01e0:0x0200];\n                                    var-3 = 0x01;\n                                \n                                    if (!memory[0x01e0:0x0200]) { revert(memory[0x00:0x00]); }\n                                \n                                    if (memory[0x01c0:0x01e0] / memory[0x01e0:0x0200] + var-3 < var-4) { revert(memory[0x00:0x00]); }\n                                \n                                    var-4 = 0x01;\n                                \n                                    if (!memory[0x01e0:0x0200]) { revert(memory[0x00:0x00]); }\n                                \n                                    memory[0x00:0x20] = memory[0x01c0:0x01e0] / memory[0x01e0:0x0200] + var-4;\n                                    var-4 = memory[0x00:0x20];\n                                    // Error: Could not resolve jump destination!\n                                } else {\n                                    var-4 = 0x00;\n                                    goto label_0B8E;\n                                }\n                            } else { revert(memory[0x00:0x00]); }\n                        } else {\n                        label_0A82:\n                            var-1 = 0x00;\n                            goto label_0AAE;\n                        }\n                    } else { revert(memory[0x00:0x00]); }\n                } else {\n                    var-4 = 0x00;\n                    goto label_0AF6;\n                }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (0x00) {\n            memory[0x01e0:0x0200] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n        \n            if (!((memory[0x0180:0x01a0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00) & (memory[0x0160:0x0180] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x70a08231;\n            memory[0x0240:0x0260] = address(this);\n            var temp25;\n            temp25, memory[0x02a0:0x02c0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp25) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var-6 = memory[0x0140:0x0160];\n            var-5 = memory[0x0160:0x0180];\n            var-4 = memory[0x0180:0x01a0];\n            var-3 = memory[0x01a0:0x01c0];\n            var-2 = memory[0x01c0:0x01e0];\n            var-1 = memory[0x01e0:0x0200];\n            var0 = memory[0x0200:0x0220];\n            var1 = memory[0x0220:0x0240];\n            var2 = memory[0x0240:0x0260];\n            var3 = memory[0x0260:0x0280];\n            var4 = memory[0x0280:0x02a0];\n            var5 = memory[0x02a0:0x02c0];\n            var6 = memory[0x02c0:0x02e0];\n            memory[0x02e0:0x0300] = 0x89f2a871;\n            memory[0x0300:0x0320] = memory[0x0140:0x0160];\n        \n            if (address(this).balance < memory[0x0140:0x0160]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0320:0x0340] = address(this).balance - memory[0x0140:0x0160];\n            memory[0x0340:0x0360] = memory[0x0200:0x0220];\n            var7 = memory[0x0340:0x0360];\n            var8 = memory[0x0320:0x0340];\n            var9 = memory[0x0300:0x0320];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xf39b5b9b) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            memory[0x0180:0x01a0] = 0x8c717a33;\n            memory[0x01a0:0x01c0] = msg.value;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n            memory[0x01e0:0x0200] = memory[0x0160:0x0180];\n            memory[0x0200:0x0220] = msg.sender;\n            memory[0x0220:0x0240] = msg.sender;\n            var2 = memory[0x0220:0x0240];\n            var3 = memory[0x0200:0x0220];\n            var4 = memory[0x01e0:0x0200];\n            var5 = memory[0x01c0:0x01e0];\n            var6 = memory[0x01a0:0x01c0];\n            var7 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xad65d76d) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n            var0 = msg.data[0x44:0x64];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x0180:0x01a0] != address(this)) & (memory[0x0180:0x01a0] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            memory[0x01a0:0x01c0] = 0x8c717a33;\n            memory[0x01c0:0x01e0] = msg.value;\n            memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n            memory[0x0200:0x0220] = memory[0x0160:0x0180];\n            memory[0x0220:0x0240] = msg.sender;\n            memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n            var3 = memory[0x0240:0x0260];\n            var4 = memory[0x0220:0x0240];\n            var5 = memory[0x0200:0x0220];\n            var6 = memory[0x01e0:0x0200];\n            var7 = memory[0x01c0:0x01e0];\n            var8 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            memory[0x01e0:0x0200] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n        \n            if (!((memory[0x0180:0x01a0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00) & (memory[0x0160:0x0180] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x70a08231;\n            memory[0x0240:0x0260] = address(this);\n            var temp24;\n            temp24, memory[0x02a0:0x02c0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp24) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var-6 = memory[0x0140:0x0160];\n            var-5 = memory[0x0160:0x0180];\n            var-4 = memory[0x0180:0x01a0];\n            var-3 = memory[0x01a0:0x01c0];\n            var-2 = memory[0x01c0:0x01e0];\n            var-1 = memory[0x01e0:0x0200];\n            var0 = memory[0x0200:0x0220];\n            var1 = memory[0x0220:0x0240];\n            var2 = memory[0x0240:0x0260];\n            var3 = memory[0x0260:0x0280];\n            var4 = memory[0x0280:0x02a0];\n            var5 = memory[0x02a0:0x02c0];\n            var6 = memory[0x02c0:0x02e0];\n            memory[0x02e0:0x0300] = 0xfd11c223;\n            memory[0x0300:0x0320] = memory[0x0140:0x0160];\n        \n            if (address(this).balance < memory[0x0160:0x0180]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0320:0x0340] = address(this).balance - memory[0x0160:0x0180];\n            memory[0x0340:0x0360] = memory[0x0200:0x0220];\n            var7 = memory[0x0340:0x0360];\n            var8 = memory[0x0320:0x0340];\n            var9 = memory[0x0300:0x0320];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x6b1d4db7) {\n            memory[0x0140:0x0180] = msg.data[0x04:0x44];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            memory[0x0180:0x01a0] = 0x2dff394e;\n            memory[0x01a0:0x01c0] = memory[0x0140:0x0160];\n            memory[0x01c0:0x01e0] = msg.value;\n            memory[0x01e0:0x0200] = memory[0x0160:0x0180];\n            memory[0x0200:0x0220] = msg.sender;\n            memory[0x0220:0x0240] = msg.sender;\n            var2 = memory[0x0220:0x0240];\n            var3 = memory[0x0200:0x0220];\n            var4 = memory[0x01e0:0x0200];\n            var5 = memory[0x01c0:0x01e0];\n            var6 = memory[0x01a0:0x01c0];\n            var7 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x0b573638) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n            var0 = msg.data[0x44:0x64];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x0180:0x01a0] != address(this)) & (memory[0x0180:0x01a0] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            memory[0x01a0:0x01c0] = 0x2dff394e;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n            memory[0x01e0:0x0200] = msg.value;\n            memory[0x0200:0x0220] = memory[0x0160:0x0180];\n            memory[0x0220:0x0240] = msg.sender;\n            memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n            var3 = memory[0x0240:0x0260];\n            var4 = memory[0x0220:0x0240];\n            var5 = memory[0x0200:0x0220];\n            var6 = memory[0x01e0:0x0200];\n            var7 = memory[0x01c0:0x01e0];\n            var8 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            memory[0x01e0:0x0200] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n        \n            if (!((memory[0x0180:0x01a0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00) & (memory[0x0160:0x0180] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x70a08231;\n            memory[0x0240:0x0260] = address(this);\n            var temp23;\n            temp23, memory[0x02a0:0x02c0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp23) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var-6 = memory[0x0140:0x0160];\n            var-5 = memory[0x0160:0x0180];\n            var-4 = memory[0x0180:0x01a0];\n            var-3 = memory[0x01a0:0x01c0];\n            var-2 = memory[0x01c0:0x01e0];\n            var-1 = memory[0x01e0:0x0200];\n            var0 = memory[0x0200:0x0220];\n            var1 = memory[0x0220:0x0240];\n            var2 = memory[0x0240:0x0260];\n            var3 = memory[0x0260:0x0280];\n            var4 = memory[0x0280:0x02a0];\n            var5 = memory[0x02a0:0x02c0];\n            var6 = memory[0x02c0:0x02e0];\n            memory[0x02e0:0x0300] = 0x89f2a871;\n            memory[0x0300:0x0320] = memory[0x0140:0x0160];\n            memory[0x0320:0x0340] = memory[0x0200:0x0220];\n            memory[0x0340:0x0360] = address(this).balance;\n            var7 = memory[0x0340:0x0360];\n            var8 = memory[0x0320:0x0340];\n            var9 = memory[0x0300:0x0320];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x95e3c50b) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            memory[0x01a0:0x01c0] = 0xfa1bb7be;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n            memory[0x01e0:0x0200] = memory[0x0160:0x0180];\n            memory[0x0200:0x0220] = memory[0x0180:0x01a0];\n            memory[0x0220:0x0240] = msg.sender;\n            memory[0x0240:0x0260] = msg.sender;\n            var3 = memory[0x0240:0x0260];\n            var4 = memory[0x0220:0x0240];\n            var5 = memory[0x0200:0x0220];\n            var6 = memory[0x01e0:0x0200];\n            var7 = memory[0x01c0:0x01e0];\n            var8 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x7237e031) {\n            memory[0x0140:0x01c0] = msg.data[0x04:0x84];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x64:0x84];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x01a0:0x01c0] != address(this)) & (memory[0x01a0:0x01c0] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            memory[0x01c0:0x01e0] = 0xfa1bb7be;\n            memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n            memory[0x0200:0x0220] = memory[0x0160:0x0180];\n            memory[0x0220:0x0240] = memory[0x0180:0x01a0];\n            memory[0x0240:0x0260] = msg.sender;\n            memory[0x0260:0x0280] = memory[0x01a0:0x01c0];\n            var4 = memory[0x0260:0x0280];\n            var5 = memory[0x0240:0x0260];\n            var6 = memory[0x0220:0x0240];\n            var7 = memory[0x0200:0x0220];\n            var8 = memory[0x01e0:0x0200];\n            var9 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            memory[0x01e0:0x0200] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n        \n            if (!((memory[0x0180:0x01a0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x70a08231;\n            memory[0x0240:0x0260] = address(this);\n            var temp22;\n            temp22, memory[0x02a0:0x02c0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp22) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var-6 = memory[0x0140:0x0160];\n            var-5 = memory[0x0160:0x0180];\n            var-4 = memory[0x0180:0x01a0];\n            var-3 = memory[0x01a0:0x01c0];\n            var-2 = memory[0x01c0:0x01e0];\n            var-1 = memory[0x01e0:0x0200];\n            var0 = memory[0x0200:0x0220];\n            var1 = memory[0x0220:0x0240];\n            var2 = memory[0x0240:0x0260];\n            var3 = memory[0x0260:0x0280];\n            var4 = memory[0x0280:0x02a0];\n            var5 = memory[0x02a0:0x02c0];\n            var6 = memory[0x02c0:0x02e0];\n            memory[0x02e0:0x0300] = 0xfd11c223;\n            memory[0x0300:0x0320] = memory[0x0140:0x0160];\n            memory[0x0320:0x0340] = memory[0x0200:0x0220];\n            memory[0x0340:0x0360] = address(this).balance;\n            var7 = memory[0x0340:0x0360];\n            var8 = memory[0x0320:0x0340];\n            var9 = memory[0x0300:0x0320];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x013efd8b) {\n            memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            memory[0x01a0:0x01c0] = 0x984fe8f6;\n            memory[0x01c0:0x01e0] = memory[0x0140:0x0160];\n            memory[0x01e0:0x0200] = memory[0x0160:0x0180];\n            memory[0x0200:0x0220] = memory[0x0180:0x01a0];\n            memory[0x0220:0x0240] = msg.sender;\n            memory[0x0240:0x0260] = msg.sender;\n            var3 = memory[0x0240:0x0260];\n            var4 = memory[0x0220:0x0240];\n            var5 = memory[0x0200:0x0220];\n            var6 = memory[0x01e0:0x0200];\n            var7 = memory[0x01c0:0x01e0];\n            var8 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xd4e4841d) {\n            memory[0x0140:0x01c0] = msg.data[0x04:0x84];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x64:0x84];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x01a0:0x01c0] != address(this)) & (memory[0x01a0:0x01c0] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            memory[0x01c0:0x01e0] = 0x984fe8f6;\n            memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n            memory[0x0200:0x0220] = memory[0x0160:0x0180];\n            memory[0x0220:0x0240] = memory[0x0180:0x01a0];\n            memory[0x0240:0x0260] = msg.sender;\n            memory[0x0260:0x0280] = memory[0x01a0:0x01c0];\n            var4 = memory[0x0260:0x0280];\n            var5 = memory[0x0240:0x0260];\n            var6 = memory[0x0220:0x0240];\n            var7 = memory[0x0200:0x0220];\n            var8 = memory[0x01e0:0x0200];\n            var9 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            memory[0x0220:0x0240] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n            memory[0x01e0:0x0200] = var-7;\n            memory[0x0200:0x0220] = var-8;\n        \n            if (!((memory[0x01a0:0x01c0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00) & (memory[0x0160:0x0180] > 0x00) & (memory[0x0180:0x01a0] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x0200:0x0220] != address(this)) & (memory[0x0200:0x0220] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0260:0x0280] = 0x70a08231;\n            memory[0x0280:0x02a0] = address(this);\n            var temp21;\n            temp21, memory[0x02e0:0x0300] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x027c:0x02a0]);\n        \n            if (!temp21) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0240:0x0260] = memory[0x02e0:0x0300];\n            var-8 = memory[0x0140:0x0160];\n            var-7 = memory[0x0160:0x0180];\n            var-6 = memory[0x0180:0x01a0];\n            var-5 = memory[0x01a0:0x01c0];\n            var-4 = memory[0x01c0:0x01e0];\n            var-3 = memory[0x01e0:0x0200];\n            var-2 = memory[0x0200:0x0220];\n            var-1 = memory[0x0220:0x0240];\n            var0 = memory[0x0240:0x0260];\n            var1 = memory[0x0260:0x0280];\n            var2 = memory[0x0280:0x02a0];\n            var3 = memory[0x02a0:0x02c0];\n            var4 = memory[0x02c0:0x02e0];\n            var5 = memory[0x02e0:0x0300];\n            var6 = memory[0x0300:0x0320];\n            memory[0x0320:0x0340] = 0x89f2a871;\n            memory[0x0340:0x0360] = memory[0x0140:0x0160];\n            memory[0x0360:0x0380] = memory[0x0240:0x0260];\n            memory[0x0380:0x03a0] = address(this).balance;\n            var7 = memory[0x0380:0x03a0];\n            var8 = memory[0x0360:0x0380];\n            var9 = memory[0x0340:0x0360];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xddf7e1a7) {\n            memory[0x0140:0x01e0] = msg.data[0x04:0xa4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x07]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x07]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = 0x06f2bf62;\n            memory[0x0220:0x0240] = memory[0x01c0:0x01e0];\n            var temp20;\n            temp20, memory[0x0280:0x02a0] = address(storage[0x07]).staticcall.gas(msg.gas)(memory[0x021c:0x0240]);\n        \n            if (!temp20) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01e0:0x0200] = memory[0x0280:0x02a0];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            var8 = memory[0x0240:0x0260];\n            var9 = memory[0x0260:0x0280];\n            var10 = memory[0x0280:0x02a0];\n            memory[0x02a0:0x02c0] = 0x204ea33b;\n            memory[0x02c0:0x02e0] = memory[0x0140:0x0160];\n            memory[0x02e0:0x0300] = memory[0x0160:0x0180];\n            memory[0x0300:0x0320] = memory[0x0180:0x01a0];\n            memory[0x0320:0x0340] = memory[0x01a0:0x01c0];\n            memory[0x0340:0x0360] = msg.sender;\n            memory[0x0360:0x0380] = msg.sender;\n            memory[0x0380:0x03a0] = memory[0x01e0:0x0200];\n            var11 = memory[0x0380:0x03a0];\n            var12 = memory[0x0360:0x0380];\n            var13 = memory[0x0340:0x0360];\n            var14 = memory[0x0320:0x0340];\n            var15 = memory[0x0300:0x0320];\n            var16 = memory[0x02e0:0x0300];\n            var17 = memory[0x02c0:0x02e0];\n            var18 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xf552d91b) {\n            memory[0x0140:0x0200] = msg.data[0x04:0xc4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0xa4:0xc4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x07]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x07]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x06f2bf62;\n            memory[0x0240:0x0260] = memory[0x01e0:0x0200];\n            var temp19;\n            temp19, memory[0x02a0:0x02c0] = address(storage[0x07]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp19) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            var8 = memory[0x0240:0x0260];\n            var9 = memory[0x0260:0x0280];\n            var10 = memory[0x0280:0x02a0];\n            var11 = memory[0x02a0:0x02c0];\n            memory[0x02c0:0x02e0] = 0x204ea33b;\n            memory[0x02e0:0x0300] = memory[0x0140:0x0160];\n            memory[0x0300:0x0320] = memory[0x0160:0x0180];\n            memory[0x0320:0x0340] = memory[0x0180:0x01a0];\n            memory[0x0340:0x0360] = memory[0x01a0:0x01c0];\n            memory[0x0360:0x0380] = msg.sender;\n            memory[0x0380:0x03a0] = memory[0x01c0:0x01e0];\n            memory[0x03a0:0x03c0] = memory[0x0200:0x0220];\n            var12 = memory[0x03a0:0x03c0];\n            var13 = memory[0x0380:0x03a0];\n            var14 = memory[0x0360:0x0380];\n            var15 = memory[0x0340:0x0360];\n            var16 = memory[0x0320:0x0340];\n            var17 = memory[0x0300:0x0320];\n            var18 = memory[0x02e0:0x0300];\n            var19 = 0x06;\n            // Unhandled termination\n        } else if (0x00) {\n            // Error: StackRead before write???\n            var var-7;\n            // Error: StackRead before write???\n            var var-6;\n            // Error: StackRead before write???\n            var var-4;\n            // Error: StackRead before write???\n            var var-1;\n            // Error: StackRead before write???\n            var var-3;\n            // Error: StackRead before write???\n            var var-2;\n            // Error: StackRead before write???\n            var var-5;\n            // Error: StackRead before write???\n            var var-8;\n            memory[0x0220:0x0240] = var-1;\n            memory[0x0140:0x0160] = var-2;\n            memory[0x0160:0x0180] = var-3;\n            memory[0x0180:0x01a0] = var-4;\n            memory[0x01a0:0x01c0] = var-5;\n            memory[0x01c0:0x01e0] = var-6;\n            memory[0x01e0:0x0200] = var-7;\n            memory[0x0200:0x0220] = var-8;\n        \n            if (!((memory[0x01a0:0x01c0] >= block.timestamp) & (memory[0x0140:0x0160] > 0x00) & (memory[0x0180:0x01a0] > 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!((memory[0x0200:0x0220] != address(this)) & (memory[0x0200:0x0220] != 0x00))) { revert(memory[0x00:0x00]); }\n        \n            if (!address(memory[0x0200:0x0220]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == memory[0x0200:0x0220]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0260:0x0280] = 0x59e94862;\n            memory[0x0280:0x02a0] = memory[0x0140:0x0160];\n            var temp17;\n            temp17, memory[0x02e0:0x0300] = address(memory[0x0200:0x0220]).staticcall.gas(msg.gas)(memory[0x027c:0x02a0]);\n        \n            if (!temp17) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0240:0x0260] = memory[0x02e0:0x0300];\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0320:0x0340] = 0x70a08231;\n            memory[0x0340:0x0360] = address(this);\n            var temp18;\n            temp18, memory[0x03a0:0x03c0] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x033c:0x0360]);\n        \n            if (!temp18) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0300:0x0320] = memory[0x03a0:0x03c0];\n            var-8 = memory[0x0140:0x0160];\n            var-7 = memory[0x0160:0x0180];\n            var-6 = memory[0x0180:0x01a0];\n            var-5 = memory[0x01a0:0x01c0];\n            var-4 = memory[0x01c0:0x01e0];\n            var-3 = memory[0x01e0:0x0200];\n            var-2 = memory[0x0200:0x0220];\n            var-1 = memory[0x0220:0x0240];\n            var0 = memory[0x0240:0x0260];\n            var1 = memory[0x0260:0x0280];\n            var2 = memory[0x0280:0x02a0];\n            var3 = memory[0x02a0:0x02c0];\n            var4 = memory[0x02c0:0x02e0];\n            var5 = memory[0x02e0:0x0300];\n            var6 = memory[0x0300:0x0320];\n            var7 = memory[0x0320:0x0340];\n            var8 = memory[0x0340:0x0360];\n            var9 = memory[0x0360:0x0380];\n            var10 = memory[0x0380:0x03a0];\n            var11 = memory[0x03a0:0x03c0];\n            var12 = memory[0x03c0:0x03e0];\n            memory[0x03e0:0x0400] = 0xfd11c223;\n            memory[0x0400:0x0420] = memory[0x0240:0x0260];\n            memory[0x0420:0x0440] = memory[0x0300:0x0320];\n            memory[0x0440:0x0460] = address(this).balance;\n            var13 = memory[0x0440:0x0460];\n            var14 = memory[0x0420:0x0440];\n            var15 = memory[0x0400:0x0420];\n            var16 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xb040d545) {\n            memory[0x0140:0x01e0] = msg.data[0x04:0xa4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x07]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x07]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = 0x06f2bf62;\n            memory[0x0220:0x0240] = memory[0x01c0:0x01e0];\n            var temp16;\n            temp16, memory[0x0280:0x02a0] = address(storage[0x07]).staticcall.gas(msg.gas)(memory[0x021c:0x0240]);\n        \n            if (!temp16) { revert(memory[0x00:0x00]); }\n        \n            memory[0x01e0:0x0200] = memory[0x0280:0x02a0];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            var8 = memory[0x0240:0x0260];\n            var9 = memory[0x0260:0x0280];\n            var10 = memory[0x0280:0x02a0];\n            memory[0x02a0:0x02c0] = 0x1a7b28f2;\n            memory[0x02c0:0x02e0] = memory[0x0140:0x0160];\n            memory[0x02e0:0x0300] = memory[0x0160:0x0180];\n            memory[0x0300:0x0320] = memory[0x0180:0x01a0];\n            memory[0x0320:0x0340] = memory[0x01a0:0x01c0];\n            memory[0x0340:0x0360] = msg.sender;\n            memory[0x0360:0x0380] = msg.sender;\n            memory[0x0380:0x03a0] = memory[0x01e0:0x0200];\n            var11 = memory[0x0380:0x03a0];\n            var12 = memory[0x0360:0x0380];\n            var13 = memory[0x0340:0x0360];\n            var14 = memory[0x0320:0x0340];\n            var15 = memory[0x0300:0x0320];\n            var16 = memory[0x02e0:0x0300];\n            var17 = memory[0x02c0:0x02e0];\n            var18 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xf3c0efe9) {\n            memory[0x0140:0x0200] = msg.data[0x04:0xc4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0xa4:0xc4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x07]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x07]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0220:0x0240] = 0x06f2bf62;\n            memory[0x0240:0x0260] = memory[0x01e0:0x0200];\n            var temp15;\n            temp15, memory[0x02a0:0x02c0] = address(storage[0x07]).staticcall.gas(msg.gas)(memory[0x023c:0x0260]);\n        \n            if (!temp15) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0200:0x0220] = memory[0x02a0:0x02c0];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            var8 = memory[0x0240:0x0260];\n            var9 = memory[0x0260:0x0280];\n            var10 = memory[0x0280:0x02a0];\n            var11 = memory[0x02a0:0x02c0];\n            memory[0x02c0:0x02e0] = 0x1a7b28f2;\n            memory[0x02e0:0x0300] = memory[0x0140:0x0160];\n            memory[0x0300:0x0320] = memory[0x0160:0x0180];\n            memory[0x0320:0x0340] = memory[0x0180:0x01a0];\n            memory[0x0340:0x0360] = memory[0x01a0:0x01c0];\n            memory[0x0360:0x0380] = msg.sender;\n            memory[0x0380:0x03a0] = memory[0x01c0:0x01e0];\n            memory[0x03a0:0x03c0] = memory[0x0200:0x0220];\n            var12 = memory[0x03a0:0x03c0];\n            var13 = memory[0x0380:0x03a0];\n            var var14 = memory[0x0360:0x0380];\n            var var15 = memory[0x0340:0x0360];\n            var var16 = memory[0x0320:0x0340];\n            var var17 = memory[0x0300:0x0320];\n            var var18 = memory[0x02e0:0x0300];\n            var var19 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xb1cb43bf) {\n            memory[0x0140:0x01e0] = msg.data[0x04:0xa4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            memory[0x01e0:0x0200] = 0x204ea33b;\n            memory[0x0200:0x0220] = memory[0x0140:0x0160];\n            memory[0x0220:0x0240] = memory[0x0160:0x0180];\n            memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n            memory[0x0260:0x0280] = memory[0x01a0:0x01c0];\n            memory[0x0280:0x02a0] = msg.sender;\n            memory[0x02a0:0x02c0] = msg.sender;\n            memory[0x02c0:0x02e0] = memory[0x01c0:0x01e0];\n            var5 = memory[0x02c0:0x02e0];\n            var6 = memory[0x02a0:0x02c0];\n            var7 = memory[0x0280:0x02a0];\n            var8 = memory[0x0260:0x0280];\n            var9 = memory[0x0240:0x0260];\n            var10 = memory[0x0220:0x0240];\n            var11 = memory[0x0200:0x0220];\n            var12 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xec384a3e) {\n            memory[0x0140:0x0200] = msg.data[0x04:0xc4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0xa4:0xc4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x01c0:0x01e0] == address(this)) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            memory[0x0200:0x0220] = 0x204ea33b;\n            memory[0x0220:0x0240] = memory[0x0140:0x0160];\n            memory[0x0240:0x0260] = memory[0x0160:0x0180];\n            memory[0x0260:0x0280] = memory[0x0180:0x01a0];\n            memory[0x0280:0x02a0] = memory[0x01a0:0x01c0];\n            memory[0x02a0:0x02c0] = msg.sender;\n            memory[0x02c0:0x02e0] = memory[0x01c0:0x01e0];\n            memory[0x02e0:0x0300] = memory[0x01e0:0x0200];\n            var6 = memory[0x02e0:0x0300];\n            var7 = memory[0x02c0:0x02e0];\n            var8 = memory[0x02a0:0x02c0];\n            var9 = memory[0x0280:0x02a0];\n            var10 = memory[0x0260:0x0280];\n            var11 = memory[0x0240:0x0260];\n            var12 = memory[0x0220:0x0240];\n            var13 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xea650c7d) {\n            memory[0x0140:0x01e0] = msg.data[0x04:0xa4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            memory[0x01e0:0x0200] = 0x1a7b28f2;\n            memory[0x0200:0x0220] = memory[0x0140:0x0160];\n            memory[0x0220:0x0240] = memory[0x0160:0x0180];\n            memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n            memory[0x0260:0x0280] = memory[0x01a0:0x01c0];\n            memory[0x0280:0x02a0] = msg.sender;\n            memory[0x02a0:0x02c0] = msg.sender;\n            memory[0x02c0:0x02e0] = memory[0x01c0:0x01e0];\n            var5 = memory[0x02c0:0x02e0];\n            var6 = memory[0x02a0:0x02c0];\n            var7 = memory[0x0280:0x02a0];\n            var8 = memory[0x0260:0x0280];\n            var9 = memory[0x0240:0x0260];\n            var10 = memory[0x0220:0x0240];\n            var11 = memory[0x0200:0x0220];\n            var12 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x981a1327) {\n            memory[0x0140:0x0200] = msg.data[0x04:0xc4];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x84:0xa4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0xa4:0xc4];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x01c0:0x01e0] == address(this)) { revert(memory[0x00:0x00]); }\n        \n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            memory[0x0200:0x0220] = 0x1a7b28f2;\n            memory[0x0220:0x0240] = memory[0x0140:0x0160];\n            memory[0x0240:0x0260] = memory[0x0160:0x0180];\n            memory[0x0260:0x0280] = memory[0x0180:0x01a0];\n            memory[0x0280:0x02a0] = memory[0x01a0:0x01c0];\n            memory[0x02a0:0x02c0] = msg.sender;\n            memory[0x02c0:0x02e0] = memory[0x01c0:0x01e0];\n            memory[0x02e0:0x0300] = memory[0x01e0:0x0200];\n            var6 = memory[0x02e0:0x0300];\n            var7 = memory[0x02c0:0x02e0];\n            var8 = memory[0x02a0:0x02c0];\n            var9 = memory[0x0280:0x02a0];\n            var10 = memory[0x0260:0x0280];\n            var11 = memory[0x0240:0x0260];\n            var var12 = memory[0x0220:0x0240];\n            var var13 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0xcd7724c3) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] <= 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0180:0x01a0] = 0x70a08231;\n            memory[0x01a0:0x01c0] = address(this);\n            var temp14;\n            temp14, memory[0x0200:0x0220] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x019c:0x01c0]);\n        \n            if (!temp14) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0160:0x0180] = memory[0x0200:0x0220];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            memory[0x0220:0x0240] = 0x89f2a871;\n            memory[0x0240:0x0260] = memory[0x0140:0x0160];\n            memory[0x0260:0x0280] = address(this).balance;\n            memory[0x0280:0x02a0] = memory[0x0160:0x0180];\n            var7 = memory[0x0280:0x02a0];\n            var8 = memory[0x0260:0x0280];\n            var9 = memory[0x0240:0x0260];\n            var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x59e94862) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] <= 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0180:0x01a0] = 0x70a08231;\n            memory[0x01a0:0x01c0] = address(this);\n            var temp13;\n            temp13, memory[0x0200:0x0220] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x019c:0x01c0]);\n        \n            if (!temp13) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0160:0x0180] = memory[0x0200:0x0220];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            memory[0x0240:0x0260] = 0xfd11c223;\n            memory[0x0260:0x0280] = memory[0x0140:0x0160];\n            memory[0x0280:0x02a0] = address(this).balance;\n            memory[0x02a0:0x02c0] = memory[0x0160:0x0180];\n            var8 = memory[0x02a0:0x02c0];\n            var9 = memory[0x0280:0x02a0];\n            var10 = memory[0x0260:0x0280];\n            var11 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x95b68fe7) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] <= 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0180:0x01a0] = 0x70a08231;\n            memory[0x01a0:0x01c0] = address(this);\n            var temp12;\n            temp12, memory[0x0200:0x0220] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x019c:0x01c0]);\n        \n            if (!temp12) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0160:0x0180] = memory[0x0200:0x0220];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var6 = memory[0x0200:0x0220];\n            var7 = memory[0x0220:0x0240];\n            memory[0x0240:0x0260] = 0x89f2a871;\n            memory[0x0260:0x0280] = memory[0x0140:0x0160];\n            memory[0x0280:0x02a0] = memory[0x0160:0x0180];\n            memory[0x02a0:0x02c0] = address(this).balance;\n            var8 = memory[0x02a0:0x02c0];\n            var9 = memory[0x0280:0x02a0];\n            var10 = memory[0x0260:0x0280];\n            var var11 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] == 0x2640f62c) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (memory[0x0140:0x0160] <= 0x00) { revert(memory[0x00:0x00]); }\n        \n            if (!address(storage[0x06]).code.length) { revert(memory[0x00:0x00]); }\n        \n            if (address(this) == storage[0x06]) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0180:0x01a0] = 0x70a08231;\n            memory[0x01a0:0x01c0] = address(this);\n            var temp11;\n            temp11, memory[0x0200:0x0220] = address(storage[0x06]).staticcall.gas(msg.gas)(memory[0x019c:0x01c0]);\n        \n            if (!temp11) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0160:0x0180] = memory[0x0200:0x0220];\n            var0 = memory[0x0140:0x0160];\n            var1 = memory[0x0160:0x0180];\n            var2 = memory[0x0180:0x01a0];\n            var3 = memory[0x01a0:0x01c0];\n            var4 = memory[0x01c0:0x01e0];\n            var5 = memory[0x01e0:0x0200];\n            var var6 = memory[0x0200:0x0220];\n            memory[0x0220:0x0240] = 0xfd11c223;\n            memory[0x0240:0x0260] = memory[0x0140:0x0160];\n            memory[0x0260:0x0280] = memory[0x0160:0x0180];\n            memory[0x0280:0x02a0] = address(this).balance;\n            var var7 = memory[0x0280:0x02a0];\n            var var8 = memory[0x0260:0x0280];\n            var var9 = memory[0x0240:0x0260];\n            var var10 = 0x06;\n            // Unhandled termination\n        } else if (memory[0x00:0x20] != 0x9d76ea58) {\n            if (memory[0x00:0x20] != 0x966dae0e) {\n                if (memory[0x00:0x20] == 0x70a08231) {\n                    memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x04;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0xa9059cbb) {\n                    memory[0x0140:0x0180] = msg.data[0x04:0x44];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = msg.sender;\n                    memory[0xc0:0xe0] = 0x04;\n                    var0 = keccak256(memory[0xc0:0x0100]);\n                \n                    if (storage[var0] < memory[0x0160:0x0180]) { revert(memory[0x00:0x00]); }\n                \n                    var temp8 = var0;\n                    storage[temp8] = storage[temp8] - memory[0x0160:0x0180];\n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x04;\n                    var temp9 = keccak256(memory[0xc0:0x0100]);\n                    var0 = temp9;\n                \n                    if (storage[var0] + memory[0x0160:0x0180] < storage[var0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp10 = var0;\n                    storage[temp10] = storage[temp10] + memory[0x0160:0x0180];\n                    memory[0x0180:0x01a0] = memory[0x0160:0x0180];\n                    log(memory[0x0180:0x01a0], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, msg.sender, memory[0x0140:0x0160]]);\n                    memory[0x00:0x20] = 0x01;\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0x23b872dd) {\n                    memory[0x0140:0x01a0] = msg.data[0x04:0x64];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x24:0x44];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x04;\n                    var0 = keccak256(memory[0xc0:0x0100]);\n                \n                    if (storage[var0] < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp3 = var0;\n                    storage[temp3] = storage[temp3] - memory[0x0180:0x01a0];\n                    memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                    memory[0xc0:0xe0] = 0x04;\n                    var temp4 = keccak256(memory[0xc0:0x0100]);\n                    var0 = temp4;\n                \n                    if (storage[var0] + memory[0x0180:0x01a0] < storage[var0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp5 = var0;\n                    storage[temp5] = storage[temp5] + memory[0x0180:0x01a0];\n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x05;\n                    var temp6 = keccak256(memory[0xc0:0x0100]);\n                    memory[0xe0:0x0100] = msg.sender;\n                    memory[0xc0:0xe0] = temp6;\n                    var0 = keccak256(memory[0xc0:0x0100]);\n                \n                    if (storage[var0] < memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                \n                    var temp7 = var0;\n                    storage[temp7] = storage[temp7] - memory[0x0180:0x01a0];\n                    memory[0x01a0:0x01c0] = memory[0x0180:0x01a0];\n                    log(memory[0x01a0:0x01c0], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, memory[0x0140:0x0160], memory[0x0160:0x0180]]);\n                    memory[0x00:0x20] = 0x01;\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0x095ea7b3) {\n                    memory[0x0140:0x0180] = msg.data[0x04:0x44];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    var temp1 = memory[0x0160:0x0180];\n                    memory[0xe0:0x0100] = msg.sender;\n                    memory[0xc0:0xe0] = 0x05;\n                    var temp2 = keccak256(memory[0xc0:0x0100]);\n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = temp2;\n                    storage[keccak256(memory[0xc0:0x0100])] = temp1;\n                    memory[0x0180:0x01a0] = memory[0x0160:0x0180];\n                    log(memory[0x0180:0x01a0], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, msg.sender, memory[0x0140:0x0160]]);\n                    memory[0x00:0x20] = 0x01;\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] == 0xdd62ed3e) {\n                    memory[0x0140:0x0180] = msg.data[0x04:0x44];\n                \n                    if (msg.value) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    var0 = msg.data[0x24:0x44];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                    memory[0xc0:0xe0] = 0x05;\n                    var temp0 = keccak256(memory[0xc0:0x0100]);\n                    memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                    memory[0xc0:0xe0] = temp0;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else if (memory[0x00:0x20] != 0x06fdde03) {\n                    if (memory[0x00:0x20] != 0x95d89b41) {\n                        if (memory[0x00:0x20] != 0x313ce567) {\n                            if (memory[0x00:0x20] != 0x18160ddd) {\n                                memory[0x0140:0x0160] = 0x8c717a33;\n                                memory[0x0160:0x0180] = msg.value;\n                                memory[0x0180:0x01a0] = 0x01;\n                                memory[0x01a0:0x01c0] = block.timestamp;\n                                memory[0x01c0:0x01e0] = msg.sender;\n                                memory[0x01e0:0x0200] = msg.sender;\n                                var var0 = memory[0x01e0:0x0200];\n                                var var1 = memory[0x01c0:0x01e0];\n                                var var2 = memory[0x01a0:0x01c0];\n                                var var3 = memory[0x0180:0x01a0];\n                                var var4 = memory[0x0160:0x0180];\n                                var var5 = 0x06;\n                                // Unhandled termination\n                            } else if (!msg.value) {\n                                memory[0x00:0x20] = storage[0x03];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            memory[0x00:0x20] = storage[0x02];\n                            return memory[0x00:0x20];\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0x00:0x20] = storage[0x01];\n                        return memory[0x00:0x20];\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    memory[0x00:0x20] = storage[0x00];\n                    return memory[0x00:0x20];\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0x00:0x20] = storage[0x07];\n                return memory[0x00:0x20];\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x00:0x20] = storage[0x06];\n            return memory[0x00:0x20];\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
	"status": "1",
	"time_cost": 46.941309213638306,
	"usage": {
		"completion_tokens": 526,
		"prompt_tokens": 27772,
		"total_tokens": 28298
	}
}