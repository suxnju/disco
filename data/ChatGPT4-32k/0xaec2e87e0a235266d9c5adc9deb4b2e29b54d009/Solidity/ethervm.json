{
	"address": "0xaec2e87e0a235266d9c5adc9deb4b2e29b54d009",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "The following is the Solidity smart contract code corresponding to the provided decompiled code:\n\n```solidity\npragma solidity ^0.8.0;\n\ncontract Contract {\n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n    uint256 public totalSupply;\n    string public name = \"SingularDTV\";\n    string public symbol = \"SNGLS\";\n    uint8 public decimals = 0;\n    address public owner;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        require(balanceOf[msg.sender] >= _value);\n        balanceOf[msg.sender] -= _value;\n        balanceOf[_to] += _value;\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(balanceOf[_from] >= _value);\n        require(allowance[_from][msg.sender] >= _value);\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        allowance[_from][msg.sender] -= _value;\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function issueTokens(address _to, uint256 _value) public {\n        require(msg.sender == owner);\n        balanceOf[_to] += _value;\n        totalSupply += _value;\n        emit Transfer(address(0), _to, _value);\n    }\n}\n```\n\nThis contract implements a basic ERC20 token with additional function to issue tokens. Notice that the function names and variable names are guesses based on common convention and the provided pseudo code. The actual names can't be determined from EVM bytecode.",
				"role": "assistant"
			}
		}
	],
	"created": 1700471894,
	"id": "chatcmpl-8Muhy0iDRG3my4TIsfJooQJ6vizBC",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n    \n        if (!msg.data.length) { stop(); }\n    \n    label_000B:\n        var var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n    \n        if (var0 == 0x06fdde03) {\n            // Dispatch table entry for name()\n            var var1 = 0x0249;\n            var temp0 = memory[0x40:0x60];\n            var var2 = temp0;\n            memory[0x40:0x60] = var2 + 0x40;\n            memory[var2:var2 + 0x20] = 0x0b;\n            memory[var2 + 0x20:var2 + 0x20 + 0x20] = 0x53696e67756c6172445456000000000000000000000000000000000000000000;\n        \n        label_0249:\n            var temp1 = memory[0x40:0x60];\n            var var3 = temp1;\n            var var4 = var3;\n            var temp2 = var4 + 0x20;\n            memory[var4:var4 + 0x20] = temp2 - var4;\n            var temp3 = var2;\n            memory[temp2:temp2 + 0x20] = memory[temp3:temp3 + 0x20];\n            var temp4 = temp2 + 0x20;\n            var temp5 = memory[temp3:temp3 + 0x20];\n            memory[temp4:temp4 + temp5] = address(0x04).call.gas((temp5 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp3 + 0x20:temp3 + 0x20 + temp5]);\n            var var5 = temp5 + temp4;\n            var var6 = temp5 & 0x1f;\n        \n            if (!var6) {\n                var temp6 = memory[0x40:0x60];\n                return memory[temp6:temp6 + var5 - temp6];\n            } else {\n                var temp7 = var6;\n                var temp8 = var5 - temp7;\n                memory[temp8:temp8 + 0x20] = ~(0x0100 ** (0x20 - temp7) - 0x01) & memory[temp8:temp8 + 0x20];\n                var temp9 = memory[0x40:0x60];\n                return memory[temp9:temp9 + (temp8 + 0x20) - temp9];\n            }\n        } else if (var0 == 0x095ea7b3) {\n            // Dispatch table entry for approve(address,uint256)\n            var temp10 = msg.data[0x24:0x44];\n            var temp11 = 0x02 ** 0xa0 - 0x01;\n            var temp12 = temp11 & msg.sender;\n            memory[0x00:0x20] = temp12;\n            memory[0x20:0x40] = 0x01;\n            var temp13 = keccak256(memory[0x00:0x40]);\n            var temp14 = msg.data[0x04:0x24] & temp11;\n            memory[0x00:0x20] = temp14;\n            memory[0x20:0x40] = temp13;\n            storage[keccak256(memory[0x00:0x40])] = temp10;\n            var temp15 = memory[0x40:0x60];\n            memory[temp15:temp15 + 0x20] = temp10;\n            var temp16 = memory[0x40:0x60];\n            log(memory[temp16:temp16 + temp15 - temp16 + 0x20], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, msg.sender, msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01]);\n            var1 = 0x01;\n        \n        label_02B7:\n            var temp17 = memory[0x40:0x60];\n            memory[temp17:temp17 + 0x20] = !!var1;\n            var temp18 = memory[0x40:0x60];\n            return memory[temp18:temp18 + temp17 - temp18 + 0x20];\n        } else if (var0 == 0x18160ddd) {\n            // Dispatch table entry for totalSupply()\n            var1 = 0x01b0;\n            var2 = storage[0x02];\n        \n        label_01B0:\n            var temp19 = memory[0x40:0x60];\n            memory[temp19:temp19 + 0x20] = var2;\n            var temp20 = memory[0x40:0x60];\n            return memory[temp20:temp20 + temp19 - temp20 + 0x20];\n        } else if (var0 == 0x23b872dd) {\n            // Dispatch table entry for transferFrom(address,address,uint256)\n            var1 = 0x02b7;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44];\n            var4 = msg.data[0x44:0x64];\n            var5 = 0x00;\n        \n            if (msg.value > 0x00) { goto label_0002; }\n        \n            var6 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n            var var7 = 0x720c4798;\n            var temp21 = memory[0x40:0x60];\n            memory[temp21:temp21 + 0x20] = var7 * 0x02 ** 0xe0;\n            var var8 = temp21 + 0x04;\n            var temp22 = memory[0x40:0x60];\n            var temp23;\n            temp23, memory[temp22:temp22 + 0x20] = address(var6).call.gas(msg.gas - 0x61da)(memory[temp22:temp22 + var8 - temp22]);\n        \n            if (!temp23) {\n            label_0002:\n                memory[0x40:0x60] = var8;\n            \n                if (!msg.data.length) { stop(); }\n                else { goto label_000B; }\n            } else {\n                var temp24 = 0x02 ** 0xa0 - 0x01;\n                var6 = temp24 & msg.sender == temp24 & memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n            \n                if (!var6) {\n                label_03AC:\n                \n                    if (var6) { goto label_0002; }\n                \n                    var6 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n                    var7 = 0x5d0be9de;\n                    var temp25 = memory[0x40:0x60];\n                    memory[temp25:temp25 + 0x20] = var7 * 0x02 ** 0xe0;\n                    var temp26 = temp25 + 0x04;\n                    memory[temp26:temp26 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n                    var8 = temp26 + 0x20;\n                    var temp27 = memory[0x40:0x60];\n                    var temp28;\n                    temp28, memory[temp27:temp27 + 0x20] = address(var6).call.gas(msg.gas - 0x61da)(memory[temp27:temp27 + var8 - temp27]);\n                \n                    if (!temp28) { goto label_0002; }\n                \n                    var temp29 = memory[0x40:0x60];\n                    memory[temp29:temp29 + 0x20] = 0x2e85f4ef * 0x02 ** 0xe1;\n                    memory[temp29 + 0x04:temp29 + 0x04 + 0x20] = var3 & 0x02 ** 0xa0 - 0x01;\n                    var temp30 = memory[0x40:0x60];\n                    var8 = temp29 + 0x24;\n                    var temp31;\n                    temp31, memory[temp30:temp30 + 0x20] = address(var6).call.gas(msg.gas - 0x61da)(memory[temp30:temp30 + temp29 - temp30 + 0x24]);\n                \n                    if (!temp31) { goto label_0002; }\n                \n                    var6 = 0x02e1;\n                    var7 = var2;\n                    var8 = var3;\n                    var var9 = var4;\n                    var var10 = 0x00;\n                    memory[var10:var10 + 0x20] = var7 & 0x02 ** 0xa0 - 0x01;\n                    memory[0x20:0x40] = var10;\n                    var var11 = storage[keccak256(memory[var10:var10 + 0x40])] < var9;\n                \n                    if (storage[keccak256(memory[var10:var10 + 0x40])] < var9) {\n                        var6 = transferFrom(var7, var8, var9, var10, var11);\n                        var5 = var6;\n                        goto label_02E4;\n                    } else if (!var11) {\n                        if (!var11) {\n                        label_0792:\n                            var10 = 0x00;\n                        \n                        label_02E4:\n                            var6 = var10;\n                            // Error: Could not resolve jump destination!\n                        } else {\n                        label_04B8:\n                            var temp32 = 0x02 ** 0xa0 - 0x01;\n                            var temp33 = temp32 & var8;\n                            memory[0x00:0x20] = temp33;\n                            memory[0x20:0x40] = 0x00;\n                            var temp34 = keccak256(memory[0x00:0x40]);\n                            var temp35 = var9;\n                            storage[temp34] = temp35 + storage[temp34];\n                            var temp36 = temp32 & var7;\n                            memory[0x00:0x20] = temp36;\n                            var temp37 = keccak256(memory[0x00:0x40]);\n                            storage[temp37] = storage[temp37] - temp35;\n                            memory[0x20:0x40] = 0x01;\n                            var temp38 = keccak256(memory[0x00:0x40]);\n                            memory[0x00:0x20] = temp32 & msg.sender;\n                            memory[0x20:0x40] = temp38;\n                            var temp39 = keccak256(memory[0x00:0x40]);\n                            storage[temp39] = storage[temp39] - temp35;\n                            var temp40 = memory[0x40:0x60];\n                            memory[temp40:temp40 + 0x20] = temp35;\n                            var temp41 = memory[0x40:0x60];\n                            log(memory[temp41:temp41 + temp40 - temp41 + 0x20], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-4] & 0x02 ** 0xa0 - 0x01, stack[-3] & 0x02 ** 0xa0 - 0x01]);\n                            var10 = 0x01;\n                            goto label_02E4;\n                        }\n                    } else if (var9 <= 0x00) { goto label_0792; }\n                    else { goto label_04B8; }\n                } else {\n                    var6 = 0x02 ** 0xa0 - 0x01 & 0xbdf5c4f1c1a9d7335a6a68d9aa011d5f40cf5520;\n                    var7 = 0x49cc954b;\n                    var temp42 = memory[0x40:0x60];\n                    memory[temp42:temp42 + 0x20] = var7 * 0x02 ** 0xe0;\n                    var8 = temp42 + 0x04;\n                    var temp43 = memory[0x40:0x60];\n                    var temp44;\n                    temp44, memory[temp43:temp43 + 0x20] = address(var6).call.gas(msg.gas - 0x61da)(memory[temp43:temp43 + var8 - temp43]);\n                \n                    if (!temp44) { goto label_0002; }\n                \n                    var6 = !memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n                    goto label_03AC;\n                }\n            }\n        } else if (var0 == 0x313ce567) {\n            // Dispatch table entry for decimals()\n            var1 = 0x02cb;\n            var2 = 0x00;\n            var temp45 = memory[0x40:0x60];\n            memory[temp45:temp45 + 0x20] = var2 & 0xff;\n            var temp46 = memory[0x40:0x60];\n            return memory[temp46:temp46 + temp45 - temp46 + 0x20];\n        } else if (var0 == 0x475a9fa9) {\n            // Dispatch table entry for issueTokens(address,uint256)\n            var1 = 0x02b7;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44];\n            var4 = 0x00;\n        \n            if (msg.sender != 0xbdf5c4f1c1a9d7335a6a68d9aa011d5f40cf5520) { goto label_0002; }\n        \n            var1 = issueTokens(var2, var3, var4);\n            goto label_02B7;\n        } else if (var0 == 0x70a08231) {\n            // Dispatch table entry for balanceOf(address)\n            memory[0x00:0x20] = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            memory[0x20:0x40] = 0x00;\n            var1 = storage[keccak256(memory[0x00:0x40])];\n            goto label_01B0;\n        } else if (var0 == 0x95d89b41) {\n            // Dispatch table entry for symbol()\n            var1 = 0x0249;\n            var temp47 = memory[0x40:0x60];\n            var2 = temp47;\n            memory[0x40:0x60] = var2 + 0x40;\n            memory[var2:var2 + 0x20] = 0x05;\n            memory[var2 + 0x20:var2 + 0x20 + 0x20] = 0x534e474c53000000000000000000000000000000000000000000000000000000;\n            goto label_0249;\n        } else if (var0 == 0xa9059cbb) {\n            // Dispatch table entry for transfer(address,uint256)\n            var1 = 0x02b7;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44];\n            var4 = 0x00;\n        \n            if (msg.value > 0x00) { goto label_0002; }\n        \n            var1 = transfer(var2, var3, var4);\n            goto label_02B7;\n        } else if (var0 == 0xdd62ed3e) {\n            // Dispatch table entry for allowance(address,address)\n            var1 = 0x01b0;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44];\n            var temp48 = 0x02 ** 0xa0 - 0x01;\n            memory[0x00:0x20] = temp48 & var2;\n            memory[0x20:0x40] = 0x01;\n            var temp49 = keccak256(memory[0x00:0x40]);\n            memory[0x00:0x20] = var3 & temp48;\n            memory[0x20:0x40] = temp49;\n            var4 = storage[keccak256(memory[0x00:0x40])];\n            var1 = allowance(var2, var3, var4);\n            goto label_01B0;\n        } else { stop(); }\n    }\n    \n    function allowance(var arg0, var arg1, var arg2) returns (var r0) { return arg2; }\n    \n    function transferFrom(var arg0, var arg1, var arg2, var arg3, var arg4) returns (var r0) {\n        memory[0x20:0x40] = 0x01;\n        var temp0 = arg3;\n        var temp1 = keccak256(memory[temp0:temp0 + 0x40]);\n        memory[temp0:temp0 + 0x20] = msg.sender;\n        memory[0x20:0x40] = temp1;\n        arg4 = storage[keccak256(memory[temp0:temp0 + 0x40])] >= arg2;\n    \n        if (!arg4) {\n            if (!arg4) {\n            label_0792:\n                arg3 = 0x00;\n            \n            label_02E4:\n                return arg3;\n            } else {\n            label_04B8:\n                var temp2 = 0x02 ** 0xa0 - 0x01;\n                var temp3 = arg1 & temp2;\n                memory[0x00:0x20] = temp3;\n                memory[0x20:0x40] = 0x00;\n                var temp4 = keccak256(memory[0x00:0x40]);\n                var temp5 = arg2;\n                storage[temp4] = temp5 + storage[temp4];\n                var temp6 = arg0 & temp2;\n                memory[0x00:0x20] = temp6;\n                var temp7 = keccak256(memory[0x00:0x40]);\n                storage[temp7] = storage[temp7] - temp5;\n                memory[0x20:0x40] = 0x01;\n                var temp8 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = temp2 & msg.sender;\n                memory[0x20:0x40] = temp8;\n                var temp9 = keccak256(memory[0x00:0x40]);\n                storage[temp9] = storage[temp9] - temp5;\n                var temp10 = memory[0x40:0x60];\n                memory[temp10:temp10 + 0x20] = temp5;\n                var temp11 = memory[0x40:0x60];\n                log(memory[temp11:temp11 + temp10 - temp11 + 0x20], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-4] & 0x02 ** 0xa0 - 0x01, stack[-3] & 0x02 ** 0xa0 - 0x01]);\n                arg3 = 0x01;\n                goto label_02E4;\n            }\n        } else if (arg2 <= 0x00) { goto label_0792; }\n        else { goto label_04B8; }\n    }\n    \n    function issueTokens(var arg0, var arg1, var arg2) returns (var r0) {\n        if (arg1 != 0x00) {\n            memory[0x00:0x20] = arg0 & 0x02 ** 0xa0 - 0x01;\n            memory[0x20:0x40] = 0x00;\n            var temp0 = keccak256(memory[0x00:0x40]);\n            var temp1 = arg1;\n            storage[temp0] = temp1 + storage[temp0];\n            storage[0x02] = temp1 + storage[0x02];\n            arg2 = 0x01;\n            r0 = allowance(arg0, arg1, arg2);\n            // Error: Could not resolve method call return address!\n        } else {\n            arg2 = 0x00;\n            r0 = allowance(arg0, arg1, arg2);\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function transfer(var arg0, var arg1, var arg2) returns (var r0) {\n        var var0 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n        var var1 = 0x720c4798;\n        var temp0 = memory[0x40:0x60];\n        memory[temp0:temp0 + 0x20] = var1 * 0x02 ** 0xe0;\n        var var2 = temp0 + 0x04;\n        var temp1 = memory[0x40:0x60];\n        var temp2;\n        temp2, memory[temp1:temp1 + 0x20] = address(var0).call.gas(msg.gas - 0x61da)(memory[temp1:temp1 + var2 - temp1]);\n    \n        if (!temp2) {\n        label_0002:\n            memory[0x40:0x60] = var2;\n        \n            if (!msg.data.length) { stop(); }\n        \n            var2 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (var2 == 0x06fdde03) {\n                var var3 = 0x0249;\n                var temp3 = memory[0x40:0x60];\n                var var4 = temp3;\n                memory[0x40:0x60] = var4 + 0x40;\n                memory[var4:var4 + 0x20] = 0x0b;\n                memory[var4 + 0x20:var4 + 0x20 + 0x20] = 0x53696e67756c6172445456000000000000000000000000000000000000000000;\n            \n            label_0249:\n                var temp4 = memory[0x40:0x60];\n                var var5 = temp4;\n                var var6 = var5;\n                var temp5 = var6 + 0x20;\n                memory[var6:var6 + 0x20] = temp5 - var6;\n                var temp6 = var4;\n                memory[temp5:temp5 + 0x20] = memory[temp6:temp6 + 0x20];\n                var temp7 = temp5 + 0x20;\n                var temp8 = memory[temp6:temp6 + 0x20];\n                memory[temp7:temp7 + temp8] = address(0x04).call.gas((temp8 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp6 + 0x20:temp6 + 0x20 + temp8]);\n                var var7 = temp8 + temp7;\n                var var8 = temp8 & 0x1f;\n            \n                if (!var8) {\n                    var temp9 = memory[0x40:0x60];\n                    return memory[temp9:temp9 + var7 - temp9];\n                } else {\n                    var temp10 = var8;\n                    var temp11 = var7 - temp10;\n                    memory[temp11:temp11 + 0x20] = ~(0x0100 ** (0x20 - temp10) - 0x01) & memory[temp11:temp11 + 0x20];\n                    var temp12 = memory[0x40:0x60];\n                    return memory[temp12:temp12 + (temp11 + 0x20) - temp12];\n                }\n            } else if (var2 == 0x095ea7b3) {\n                var temp13 = msg.data[0x24:0x44];\n                var temp14 = msg.sender;\n                var temp15 = 0x02 ** 0xa0 - 0x01;\n                memory[0x00:0x20] = temp14 & temp15;\n                memory[0x20:0x40] = 0x01;\n                var temp16 = keccak256(memory[0x00:0x40]);\n                var temp17 = msg.data[0x04:0x24] & temp15;\n                memory[0x00:0x20] = temp17;\n                memory[0x20:0x40] = temp16;\n                storage[keccak256(memory[0x00:0x40])] = temp13;\n                var temp18 = memory[0x40:0x60];\n                memory[temp18:temp18 + 0x20] = temp13;\n                var temp19 = memory[0x40:0x60];\n                log(memory[temp19:temp19 + temp18 - temp19 + 0x20], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, msg.sender, msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01]);\n                var3 = 0x01;\n            \n            label_02B7:\n                var temp20 = memory[0x40:0x60];\n                memory[temp20:temp20 + 0x20] = !!var3;\n                var temp21 = memory[0x40:0x60];\n                return memory[temp21:temp21 + temp20 - temp21 + 0x20];\n            } else if (var2 == 0x18160ddd) {\n                var3 = 0x01b0;\n                var4 = storage[0x02];\n            \n            label_01B0:\n                var temp22 = memory[0x40:0x60];\n                memory[temp22:temp22 + 0x20] = var4;\n                var temp23 = memory[0x40:0x60];\n                return memory[temp23:temp23 + temp22 - temp23 + 0x20];\n            } else if (var2 == 0x23b872dd) {\n                var3 = 0x02b7;\n                var4 = msg.data[0x04:0x24];\n                var5 = msg.data[0x24:0x44];\n                var6 = msg.data[0x44:0x64];\n                var7 = 0x00;\n            \n                if (msg.value > 0x00) { goto label_0002; }\n            \n                var8 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n                var var9 = 0x720c4798;\n                var temp24 = memory[0x40:0x60];\n                memory[temp24:temp24 + 0x20] = var9 * 0x02 ** 0xe0;\n                var var10 = temp24 + 0x04;\n                var temp25 = memory[0x40:0x60];\n                var temp26;\n                temp26, memory[temp25:temp25 + 0x20] = address(var8).call.gas(msg.gas - 0x61da)(memory[temp25:temp25 + var10 - temp25]);\n            \n                if (!temp26) { goto label_0002; }\n            \n                var temp27 = 0x02 ** 0xa0 - 0x01;\n                var8 = temp27 & msg.sender == temp27 & memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n            \n                if (!var8) {\n                label_03AC:\n                \n                    if (var8) { goto label_0002; }\n                \n                    var8 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n                    var9 = 0x5d0be9de;\n                    var temp28 = memory[0x40:0x60];\n                    memory[temp28:temp28 + 0x20] = var9 * 0x02 ** 0xe0;\n                    var temp29 = temp28 + 0x04;\n                    memory[temp29:temp29 + 0x20] = var4 & 0x02 ** 0xa0 - 0x01;\n                    var10 = temp29 + 0x20;\n                    var temp30 = memory[0x40:0x60];\n                    var temp31;\n                    temp31, memory[temp30:temp30 + 0x20] = address(var8).call.gas(msg.gas - 0x61da)(memory[temp30:temp30 + var10 - temp30]);\n                \n                    if (!temp31) { goto label_0002; }\n                \n                    var temp32 = memory[0x40:0x60];\n                    memory[temp32:temp32 + 0x20] = 0x2e85f4ef * 0x02 ** 0xe1;\n                    memory[temp32 + 0x04:temp32 + 0x04 + 0x20] = var5 & 0x02 ** 0xa0 - 0x01;\n                    var temp33 = memory[0x40:0x60];\n                    var10 = temp32 + 0x24;\n                    var temp34;\n                    temp34, memory[temp33:temp33 + 0x20] = address(var8).call.gas(msg.gas - 0x61da)(memory[temp33:temp33 + temp32 - temp33 + 0x24]);\n                \n                    if (!temp34) { goto label_0002; }\n                \n                    var8 = 0x02e1;\n                    var9 = var4;\n                    var10 = var5;\n                    var var11 = var6;\n                    var var12 = 0x00;\n                    memory[var12:var12 + 0x20] = var9 & 0x02 ** 0xa0 - 0x01;\n                    memory[0x20:0x40] = var12;\n                    var var13 = storage[keccak256(memory[var12:var12 + 0x40])] < var11;\n                \n                    if (storage[keccak256(memory[var12:var12 + 0x40])] < var11) {\n                        var8 = transferFrom(var9, var10, var11, var12, var13);\n                        var7 = var8;\n                        goto label_02E4;\n                    } else if (!var13) {\n                        if (!var13) {\n                        label_0792:\n                            var12 = 0x00;\n                        \n                        label_02E4:\n                            var8 = var12;\n                            // Error: Could not resolve jump destination!\n                        } else {\n                        label_04B8:\n                            var temp35 = 0x02 ** 0xa0 - 0x01;\n                            var temp36 = var10 & temp35;\n                            memory[0x00:0x20] = temp36;\n                            memory[0x20:0x40] = 0x00;\n                            var temp37 = keccak256(memory[0x00:0x40]);\n                            var temp38 = var11;\n                            storage[temp37] = temp38 + storage[temp37];\n                            var temp39 = var9 & temp35;\n                            memory[0x00:0x20] = temp39;\n                            var temp40 = keccak256(memory[0x00:0x40]);\n                            storage[temp40] = storage[temp40] - temp38;\n                            memory[0x20:0x40] = 0x01;\n                            var temp41 = keccak256(memory[0x00:0x40]);\n                            memory[0x00:0x20] = temp35 & msg.sender;\n                            memory[0x20:0x40] = temp41;\n                            var temp42 = keccak256(memory[0x00:0x40]);\n                            storage[temp42] = storage[temp42] - temp38;\n                            var temp43 = memory[0x40:0x60];\n                            memory[temp43:temp43 + 0x20] = temp38;\n                            var temp44 = memory[0x40:0x60];\n                            log(memory[temp44:temp44 + temp43 - temp44 + 0x20], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-4] & 0x02 ** 0xa0 - 0x01, stack[-3] & 0x02 ** 0xa0 - 0x01]);\n                            var12 = 0x01;\n                            goto label_02E4;\n                        }\n                    } else if (var11 <= 0x00) { goto label_0792; }\n                    else { goto label_04B8; }\n                } else {\n                    var8 = 0x02 ** 0xa0 - 0x01 & 0xbdf5c4f1c1a9d7335a6a68d9aa011d5f40cf5520;\n                    var9 = 0x49cc954b;\n                    var temp45 = memory[0x40:0x60];\n                    memory[temp45:temp45 + 0x20] = var9 * 0x02 ** 0xe0;\n                    var10 = temp45 + 0x04;\n                    var temp46 = memory[0x40:0x60];\n                    var temp47;\n                    temp47, memory[temp46:temp46 + 0x20] = address(var8).call.gas(msg.gas - 0x61da)(memory[temp46:temp46 + var10 - temp46]);\n                \n                    if (!temp47) { goto label_0002; }\n                \n                    var8 = !memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n                    goto label_03AC;\n                }\n            } else if (var2 == 0x313ce567) {\n                var3 = 0x02cb;\n                var4 = 0x00;\n                var temp48 = memory[0x40:0x60];\n                memory[temp48:temp48 + 0x20] = var4 & 0xff;\n                var temp49 = memory[0x40:0x60];\n                return memory[temp49:temp49 + temp48 - temp49 + 0x20];\n            } else if (var2 == 0x475a9fa9) {\n                var3 = 0x02b7;\n                var4 = msg.data[0x04:0x24];\n                var5 = msg.data[0x24:0x44];\n                var6 = 0x00;\n            \n                if (msg.sender != 0xbdf5c4f1c1a9d7335a6a68d9aa011d5f40cf5520) { goto label_0002; }\n            \n                var3 = issueTokens(var4, var5, var6);\n                goto label_02B7;\n            } else if (var2 == 0x70a08231) {\n                memory[0x00:0x20] = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x00;\n                var3 = storage[keccak256(memory[0x00:0x40])];\n                goto label_01B0;\n            } else if (var2 == 0x95d89b41) {\n                var3 = 0x0249;\n                var temp50 = memory[0x40:0x60];\n                var4 = temp50;\n                memory[0x40:0x60] = var4 + 0x40;\n                memory[var4:var4 + 0x20] = 0x05;\n                memory[var4 + 0x20:var4 + 0x20 + 0x20] = 0x534e474c53000000000000000000000000000000000000000000000000000000;\n                goto label_0249;\n            } else if (var2 == 0xa9059cbb) {\n                var3 = 0x02b7;\n                var4 = msg.data[0x04:0x24];\n                var5 = msg.data[0x24:0x44];\n                var6 = 0x00;\n            \n                if (msg.value > 0x00) { goto label_0002; }\n            \n                var3 = transfer(var4, var5, var6);\n                goto label_02B7;\n            } else if (var2 == 0xdd62ed3e) {\n                var3 = 0x01b0;\n                var4 = msg.data[0x04:0x24];\n                var5 = msg.data[0x24:0x44];\n                var temp51 = 0x02 ** 0xa0 - 0x01;\n                memory[0x00:0x20] = temp51 & var4;\n                memory[0x20:0x40] = 0x01;\n                var temp52 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = var5 & temp51;\n                memory[0x20:0x40] = temp52;\n                var6 = storage[keccak256(memory[0x00:0x40])];\n                var3 = allowance(var4, var5, var6);\n                goto label_01B0;\n            } else { stop(); }\n        } else {\n            var temp53 = 0x02 ** 0xa0 - 0x01;\n            var0 = memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20] & temp53 == temp53 & msg.sender;\n        \n            if (!var0) {\n            label_063D:\n            \n                if (var0) { goto label_0002; }\n            \n                var0 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n                var1 = 0x5d0be9de;\n                var temp54 = memory[0x40:0x60];\n                memory[temp54:temp54 + 0x20] = var1 * 0x02 ** 0xe0;\n                var temp55 = temp54 + 0x04;\n                memory[temp55:temp55 + 0x20] = msg.sender;\n                var2 = temp55 + 0x20;\n                var temp56 = memory[0x40:0x60];\n                var temp57;\n                temp57, memory[temp56:temp56 + 0x20] = address(var0).call.gas(msg.gas - 0x61da)(memory[temp56:temp56 + var2 - temp56]);\n            \n                if (!temp57) { goto label_0002; }\n            \n                var temp58 = memory[0x40:0x60];\n                memory[temp58:temp58 + 0x20] = 0x2e85f4ef * 0x02 ** 0xe1;\n                memory[temp58 + 0x04:temp58 + 0x04 + 0x20] = arg0 & 0x02 ** 0xa0 - 0x01;\n                var temp59 = memory[0x40:0x60];\n                var2 = temp58 + 0x24;\n                var temp60;\n                temp60, memory[temp59:temp59 + 0x20] = address(var0).call.gas(msg.gas - 0x61da)(memory[temp59:temp59 + temp58 - temp59 + 0x24]);\n            \n                if (!temp60) { goto label_0002; }\n            \n                var0 = 0x078b;\n                var1 = arg0;\n                var2 = arg1;\n                var3 = 0x00;\n                memory[var3:var3 + 0x20] = msg.sender;\n                memory[0x20:0x40] = var3;\n                var4 = storage[keccak256(memory[var3:var3 + 0x40])] < var2;\n            \n                if (storage[keccak256(memory[var3:var3 + 0x40])] < var2) {\n                    var0 = func_0713(var1, var2, var3, var4);\n                    arg2 = var0;\n                    r0 = allowance(arg0, arg1, arg2);\n                    // Error: Could not resolve method call return address!\n                } else if (!var4) {\n                    var3 = 0x00;\n                    var0 = allowance(var1, var2, var3);\n                    // Error: Could not resolve method call return address!\n                } else {\n                    var temp61 = msg.sender;\n                    var temp62 = 0x02 ** 0xa0 - 0x01;\n                    memory[0x00:0x20] = temp61 & temp62;\n                    memory[0x20:0x40] = 0x00;\n                    var temp63 = keccak256(memory[0x00:0x40]);\n                    var temp64 = var2;\n                    storage[temp63] = storage[temp63] - temp64;\n                    var temp65 = var1 & temp62;\n                    memory[0x00:0x20] = temp65;\n                    var temp66 = keccak256(memory[0x00:0x40]);\n                    storage[temp66] = temp64 + storage[temp66];\n                    var temp67 = memory[0x40:0x60];\n                    memory[temp67:temp67 + 0x20] = temp64;\n                    var temp68 = memory[0x40:0x60];\n                    log(memory[temp68:temp68 + temp67 - temp68 + 0x20], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, msg.sender, stack[-3] & 0x02 ** 0xa0 - 0x01]);\n                    var3 = 0x01;\n                    var0 = allowance(var1, var2, var3);\n                    // Error: Could not resolve method call return address!\n                }\n            } else {\n                var0 = 0x02 ** 0xa0 - 0x01 & 0xbdf5c4f1c1a9d7335a6a68d9aa011d5f40cf5520;\n                var1 = 0x49cc954b;\n                var temp69 = memory[0x40:0x60];\n                memory[temp69:temp69 + 0x20] = var1 * 0x02 ** 0xe0;\n                var2 = temp69 + 0x04;\n                var temp70 = memory[0x40:0x60];\n                var temp71;\n                temp71, memory[temp70:temp70 + 0x20] = address(var0).call.gas(msg.gas - 0x61da)(memory[temp70:temp70 + var2 - temp70]);\n            \n                if (!temp71) { goto label_0002; }\n            \n                var0 = !memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n                goto label_063D;\n            }\n        }\n    }\n    \n    function func_0713(var arg0, var arg1, var arg2, var arg3) returns (var r0) {\n        if (arg1 <= 0x00) {\n            arg2 = 0x00;\n            r0 = allowance(arg0, arg1, arg2);\n            // Error: Could not resolve method call return address!\n        } else {\n            var temp0 = 0x02 ** 0xa0 - 0x01;\n            var temp1 = temp0 & msg.sender;\n            memory[0x00:0x20] = temp1;\n            memory[0x20:0x40] = 0x00;\n            var temp2 = keccak256(memory[0x00:0x40]);\n            var temp3 = arg1;\n            storage[temp2] = storage[temp2] - temp3;\n            var temp4 = arg0 & temp0;\n            memory[0x00:0x20] = temp4;\n            var temp5 = keccak256(memory[0x00:0x40]);\n            storage[temp5] = temp3 + storage[temp5];\n            var temp6 = memory[0x40:0x60];\n            memory[temp6:temp6 + 0x20] = temp3;\n            var temp7 = memory[0x40:0x60];\n            log(memory[temp7:temp7 + temp6 - temp7 + 0x20], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, msg.sender, stack[-3] & 0x02 ** 0xa0 - 0x01]);\n            arg2 = 0x01;\n            r0 = allowance(arg0, arg1, arg2);\n            // Error: Could not resolve method call return address!\n        }\n    }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n    \n        if (!msg.data.length) { stop(); }\n    \n    label_000B:\n        var var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n    \n        if (var0 == 0x06fdde03) {\n            // Dispatch table entry for name()\n            var var1 = 0x0249;\n            var temp0 = memory[0x40:0x60];\n            var var2 = temp0;\n            memory[0x40:0x60] = var2 + 0x40;\n            memory[var2:var2 + 0x20] = 0x0b;\n            memory[var2 + 0x20:var2 + 0x20 + 0x20] = 0x53696e67756c6172445456000000000000000000000000000000000000000000;\n        \n        label_0249:\n            var temp1 = memory[0x40:0x60];\n            var var3 = temp1;\n            var var4 = var3;\n            var temp2 = var4 + 0x20;\n            memory[var4:var4 + 0x20] = temp2 - var4;\n            var temp3 = var2;\n            memory[temp2:temp2 + 0x20] = memory[temp3:temp3 + 0x20];\n            var temp4 = temp2 + 0x20;\n            var temp5 = memory[temp3:temp3 + 0x20];\n            memory[temp4:temp4 + temp5] = address(0x04).call.gas((temp5 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp3 + 0x20:temp3 + 0x20 + temp5]);\n            var var5 = temp5 + temp4;\n            var var6 = temp5 & 0x1f;\n        \n            if (!var6) {\n                var temp6 = memory[0x40:0x60];\n                return memory[temp6:temp6 + var5 - temp6];\n            } else {\n                var temp7 = var6;\n                var temp8 = var5 - temp7;\n                memory[temp8:temp8 + 0x20] = ~(0x0100 ** (0x20 - temp7) - 0x01) & memory[temp8:temp8 + 0x20];\n                var temp9 = memory[0x40:0x60];\n                return memory[temp9:temp9 + (temp8 + 0x20) - temp9];\n            }\n        } else if (var0 == 0x095ea7b3) {\n            // Dispatch table entry for approve(address,uint256)\n            var temp10 = msg.data[0x24:0x44];\n            var temp11 = 0x02 ** 0xa0 - 0x01;\n            var temp12 = temp11 & msg.sender;\n            memory[0x00:0x20] = temp12;\n            memory[0x20:0x40] = 0x01;\n            var temp13 = keccak256(memory[0x00:0x40]);\n            var temp14 = msg.data[0x04:0x24] & temp11;\n            memory[0x00:0x20] = temp14;\n            memory[0x20:0x40] = temp13;\n            storage[keccak256(memory[0x00:0x40])] = temp10;\n            var temp15 = memory[0x40:0x60];\n            memory[temp15:temp15 + 0x20] = temp10;\n            var temp16 = memory[0x40:0x60];\n            log(memory[temp16:temp16 + temp15 - temp16 + 0x20], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, msg.sender, msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01]);\n            var1 = 0x01;\n        \n        label_02B7:\n            var temp17 = memory[0x40:0x60];\n            memory[temp17:temp17 + 0x20] = !!var1;\n            var temp18 = memory[0x40:0x60];\n            return memory[temp18:temp18 + temp17 - temp18 + 0x20];\n        } else if (var0 == 0x18160ddd) {\n            // Dispatch table entry for totalSupply()\n            var1 = 0x01b0;\n            var2 = storage[0x02];\n        \n        label_01B0:\n            var temp19 = memory[0x40:0x60];\n            memory[temp19:temp19 + 0x20] = var2;\n            var temp20 = memory[0x40:0x60];\n            return memory[temp20:temp20 + temp19 - temp20 + 0x20];\n        } else if (var0 == 0x23b872dd) {\n            // Dispatch table entry for transferFrom(address,address,uint256)\n            var1 = 0x02b7;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44];\n            var4 = msg.data[0x44:0x64];\n            var5 = 0x00;\n        \n            if (msg.value > 0x00) { goto label_0002; }\n        \n            var6 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n            var var7 = 0x720c4798;\n            var temp21 = memory[0x40:0x60];\n            memory[temp21:temp21 + 0x20] = var7 * 0x02 ** 0xe0;\n            var var8 = temp21 + 0x04;\n            var temp22 = memory[0x40:0x60];\n            var temp23;\n            temp23, memory[temp22:temp22 + 0x20] = address(var6).call.gas(msg.gas - 0x61da)(memory[temp22:temp22 + var8 - temp22]);\n        \n            if (!temp23) {\n            label_0002:\n                memory[0x40:0x60] = var8;\n            \n                if (!msg.data.length) { stop(); }\n                else { goto label_000B; }\n            } else {\n                var temp24 = 0x02 ** 0xa0 - 0x01;\n                var6 = temp24 & msg.sender == temp24 & memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n            \n                if (!var6) {\n                label_03AC:\n                \n                    if (var6) { goto label_0002; }\n                \n                    var6 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n                    var7 = 0x5d0be9de;\n                    var temp25 = memory[0x40:0x60];\n                    memory[temp25:temp25 + 0x20] = var7 * 0x02 ** 0xe0;\n                    var temp26 = temp25 + 0x04;\n                    memory[temp26:temp26 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n                    var8 = temp26 + 0x20;\n                    var temp27 = memory[0x40:0x60];\n                    var temp28;\n                    temp28, memory[temp27:temp27 + 0x20] = address(var6).call.gas(msg.gas - 0x61da)(memory[temp27:temp27 + var8 - temp27]);\n                \n                    if (!temp28) { goto label_0002; }\n                \n                    var temp29 = memory[0x40:0x60];\n                    memory[temp29:temp29 + 0x20] = 0x2e85f4ef * 0x02 ** 0xe1;\n                    memory[temp29 + 0x04:temp29 + 0x04 + 0x20] = var3 & 0x02 ** 0xa0 - 0x01;\n                    var temp30 = memory[0x40:0x60];\n                    var8 = temp29 + 0x24;\n                    var temp31;\n                    temp31, memory[temp30:temp30 + 0x20] = address(var6).call.gas(msg.gas - 0x61da)(memory[temp30:temp30 + temp29 - temp30 + 0x24]);\n                \n                    if (!temp31) { goto label_0002; }\n                \n                    var6 = 0x02e1;\n                    var7 = var2;\n                    var8 = var3;\n                    var var9 = var4;\n                    var var10 = 0x00;\n                    memory[var10:var10 + 0x20] = var7 & 0x02 ** 0xa0 - 0x01;\n                    memory[0x20:0x40] = var10;\n                    var var11 = storage[keccak256(memory[var10:var10 + 0x40])] < var9;\n                \n                    if (storage[keccak256(memory[var10:var10 + 0x40])] < var9) {\n                        var6 = transferFrom(var7, var8, var9, var10, var11);\n                        var5 = var6;\n                        goto label_02E4;\n                    } else if (!var11) {\n                        if (!var11) {\n                        label_0792:\n                            var10 = 0x00;\n                        \n                        label_02E4:\n                            var6 = var10;\n                            // Error: Could not resolve jump destination!\n                        } else {\n                        label_04B8:\n                            var temp32 = 0x02 ** 0xa0 - 0x01;\n                            var temp33 = temp32 & var8;\n                            memory[0x00:0x20] = temp33;\n                            memory[0x20:0x40] = 0x00;\n                            var temp34 = keccak256(memory[0x00:0x40]);\n                            var temp35 = var9;\n                            storage[temp34] = temp35 + storage[temp34];\n                            var temp36 = temp32 & var7;\n                            memory[0x00:0x20] = temp36;\n                            var temp37 = keccak256(memory[0x00:0x40]);\n                            storage[temp37] = storage[temp37] - temp35;\n                            memory[0x20:0x40] = 0x01;\n                            var temp38 = keccak256(memory[0x00:0x40]);\n                            memory[0x00:0x20] = temp32 & msg.sender;\n                            memory[0x20:0x40] = temp38;\n                            var temp39 = keccak256(memory[0x00:0x40]);\n                            storage[temp39] = storage[temp39] - temp35;\n                            var temp40 = memory[0x40:0x60];\n                            memory[temp40:temp40 + 0x20] = temp35;\n                            var temp41 = memory[0x40:0x60];\n                            log(memory[temp41:temp41 + temp40 - temp41 + 0x20], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-4] & 0x02 ** 0xa0 - 0x01, stack[-3] & 0x02 ** 0xa0 - 0x01]);\n                            var10 = 0x01;\n                            goto label_02E4;\n                        }\n                    } else if (var9 <= 0x00) { goto label_0792; }\n                    else { goto label_04B8; }\n                } else {\n                    var6 = 0x02 ** 0xa0 - 0x01 & 0xbdf5c4f1c1a9d7335a6a68d9aa011d5f40cf5520;\n                    var7 = 0x49cc954b;\n                    var temp42 = memory[0x40:0x60];\n                    memory[temp42:temp42 + 0x20] = var7 * 0x02 ** 0xe0;\n                    var8 = temp42 + 0x04;\n                    var temp43 = memory[0x40:0x60];\n                    var temp44;\n                    temp44, memory[temp43:temp43 + 0x20] = address(var6).call.gas(msg.gas - 0x61da)(memory[temp43:temp43 + var8 - temp43]);\n                \n                    if (!temp44) { goto label_0002; }\n                \n                    var6 = !memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n                    goto label_03AC;\n                }\n            }\n        } else if (var0 == 0x313ce567) {\n            // Dispatch table entry for decimals()\n            var1 = 0x02cb;\n            var2 = 0x00;\n            var temp45 = memory[0x40:0x60];\n            memory[temp45:temp45 + 0x20] = var2 & 0xff;\n            var temp46 = memory[0x40:0x60];\n            return memory[temp46:temp46 + temp45 - temp46 + 0x20];\n        } else if (var0 == 0x475a9fa9) {\n            // Dispatch table entry for issueTokens(address,uint256)\n            var1 = 0x02b7;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44];\n            var4 = 0x00;\n        \n            if (msg.sender != 0xbdf5c4f1c1a9d7335a6a68d9aa011d5f40cf5520) { goto label_0002; }\n        \n            var1 = issueTokens(var2, var3, var4);\n            goto label_02B7;\n        } else if (var0 == 0x70a08231) {\n            // Dispatch table entry for balanceOf(address)\n            memory[0x00:0x20] = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            memory[0x20:0x40] = 0x00;\n            var1 = storage[keccak256(memory[0x00:0x40])];\n            goto label_01B0;\n        } else if (var0 == 0x95d89b41) {\n            // Dispatch table entry for symbol()\n            var1 = 0x0249;\n            var temp47 = memory[0x40:0x60];\n            var2 = temp47;\n            memory[0x40:0x60] = var2 + 0x40;\n            memory[var2:var2 + 0x20] = 0x05;\n            memory[var2 + 0x20:var2 + 0x20 + 0x20] = 0x534e474c53000000000000000000000000000000000000000000000000000000;\n            goto label_0249;\n        } else if (var0 == 0xa9059cbb) {\n            // Dispatch table entry for transfer(address,uint256)\n            var1 = 0x02b7;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44];\n            var4 = 0x00;\n        \n            if (msg.value > 0x00) { goto label_0002; }\n        \n            var1 = transfer(var2, var3, var4);\n            goto label_02B7;\n        } else if (var0 == 0xdd62ed3e) {\n            // Dispatch table entry for allowance(address,address)\n            var1 = 0x01b0;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44];\n            var temp48 = 0x02 ** 0xa0 - 0x01;\n            memory[0x00:0x20] = temp48 & var2;\n            memory[0x20:0x40] = 0x01;\n            var temp49 = keccak256(memory[0x00:0x40]);\n            memory[0x00:0x20] = var3 & temp48;\n            memory[0x20:0x40] = temp49;\n            var4 = storage[keccak256(memory[0x00:0x40])];\n            var1 = allowance(var2, var3, var4);\n            goto label_01B0;\n        } else { stop(); }\n    }\n    \n    function allowance(var arg0, var arg1, var arg2) returns (var r0) { return arg2; }\n    \n    function transferFrom(var arg0, var arg1, var arg2, var arg3, var arg4) returns (var r0) {\n        memory[0x20:0x40] = 0x01;\n        var temp0 = arg3;\n        var temp1 = keccak256(memory[temp0:temp0 + 0x40]);\n        memory[temp0:temp0 + 0x20] = msg.sender;\n        memory[0x20:0x40] = temp1;\n        arg4 = storage[keccak256(memory[temp0:temp0 + 0x40])] >= arg2;\n    \n        if (!arg4) {\n            if (!arg4) {\n            label_0792:\n                arg3 = 0x00;\n            \n            label_02E4:\n                return arg3;\n            } else {\n            label_04B8:\n                var temp2 = 0x02 ** 0xa0 - 0x01;\n                var temp3 = arg1 & temp2;\n                memory[0x00:0x20] = temp3;\n                memory[0x20:0x40] = 0x00;\n                var temp4 = keccak256(memory[0x00:0x40]);\n                var temp5 = arg2;\n                storage[temp4] = temp5 + storage[temp4];\n                var temp6 = arg0 & temp2;\n                memory[0x00:0x20] = temp6;\n                var temp7 = keccak256(memory[0x00:0x40]);\n                storage[temp7] = storage[temp7] - temp5;\n                memory[0x20:0x40] = 0x01;\n                var temp8 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = temp2 & msg.sender;\n                memory[0x20:0x40] = temp8;\n                var temp9 = keccak256(memory[0x00:0x40]);\n                storage[temp9] = storage[temp9] - temp5;\n                var temp10 = memory[0x40:0x60];\n                memory[temp10:temp10 + 0x20] = temp5;\n                var temp11 = memory[0x40:0x60];\n                log(memory[temp11:temp11 + temp10 - temp11 + 0x20], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-4] & 0x02 ** 0xa0 - 0x01, stack[-3] & 0x02 ** 0xa0 - 0x01]);\n                arg3 = 0x01;\n                goto label_02E4;\n            }\n        } else if (arg2 <= 0x00) { goto label_0792; }\n        else { goto label_04B8; }\n    }\n    \n    function issueTokens(var arg0, var arg1, var arg2) returns (var r0) {\n        if (arg1 != 0x00) {\n            memory[0x00:0x20] = arg0 & 0x02 ** 0xa0 - 0x01;\n            memory[0x20:0x40] = 0x00;\n            var temp0 = keccak256(memory[0x00:0x40]);\n            var temp1 = arg1;\n            storage[temp0] = temp1 + storage[temp0];\n            storage[0x02] = temp1 + storage[0x02];\n            arg2 = 0x01;\n            r0 = allowance(arg0, arg1, arg2);\n            // Error: Could not resolve method call return address!\n        } else {\n            arg2 = 0x00;\n            r0 = allowance(arg0, arg1, arg2);\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function transfer(var arg0, var arg1, var arg2) returns (var r0) {\n        var var0 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n        var var1 = 0x720c4798;\n        var temp0 = memory[0x40:0x60];\n        memory[temp0:temp0 + 0x20] = var1 * 0x02 ** 0xe0;\n        var var2 = temp0 + 0x04;\n        var temp1 = memory[0x40:0x60];\n        var temp2;\n        temp2, memory[temp1:temp1 + 0x20] = address(var0).call.gas(msg.gas - 0x61da)(memory[temp1:temp1 + var2 - temp1]);\n    \n        if (!temp2) {\n        label_0002:\n            memory[0x40:0x60] = var2;\n        \n            if (!msg.data.length) { stop(); }\n        \n            var2 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (var2 == 0x06fdde03) {\n                var var3 = 0x0249;\n                var temp3 = memory[0x40:0x60];\n                var var4 = temp3;\n                memory[0x40:0x60] = var4 + 0x40;\n                memory[var4:var4 + 0x20] = 0x0b;\n                memory[var4 + 0x20:var4 + 0x20 + 0x20] = 0x53696e67756c6172445456000000000000000000000000000000000000000000;\n            \n            label_0249:\n                var temp4 = memory[0x40:0x60];\n                var var5 = temp4;\n                var var6 = var5;\n                var temp5 = var6 + 0x20;\n                memory[var6:var6 + 0x20] = temp5 - var6;\n                var temp6 = var4;\n                memory[temp5:temp5 + 0x20] = memory[temp6:temp6 + 0x20];\n                var temp7 = temp5 + 0x20;\n                var temp8 = memory[temp6:temp6 + 0x20];\n                memory[temp7:temp7 + temp8] = address(0x04).call.gas((temp8 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp6 + 0x20:temp6 + 0x20 + temp8]);\n                var var7 = temp8 + temp7;\n                var var8 = temp8 & 0x1f;\n            \n                if (!var8) {\n                    var temp9 = memory[0x40:0x60];\n                    return memory[temp9:temp9 + var7 - temp9];\n                } else {\n                    var temp10 = var8;\n                    var temp11 = var7 - temp10;\n                    memory[temp11:temp11 + 0x20] = ~(0x0100 ** (0x20 - temp10) - 0x01) & memory[temp11:temp11 + 0x20];\n                    var temp12 = memory[0x40:0x60];\n                    return memory[temp12:temp12 + (temp11 + 0x20) - temp12];\n                }\n            } else if (var2 == 0x095ea7b3) {\n                var temp13 = msg.data[0x24:0x44];\n                var temp14 = msg.sender;\n                var temp15 = 0x02 ** 0xa0 - 0x01;\n                memory[0x00:0x20] = temp14 & temp15;\n                memory[0x20:0x40] = 0x01;\n                var temp16 = keccak256(memory[0x00:0x40]);\n                var temp17 = msg.data[0x04:0x24] & temp15;\n                memory[0x00:0x20] = temp17;\n                memory[0x20:0x40] = temp16;\n                storage[keccak256(memory[0x00:0x40])] = temp13;\n                var temp18 = memory[0x40:0x60];\n                memory[temp18:temp18 + 0x20] = temp13;\n                var temp19 = memory[0x40:0x60];\n                log(memory[temp19:temp19 + temp18 - temp19 + 0x20], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, msg.sender, msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01]);\n                var3 = 0x01;\n            \n            label_02B7:\n                var temp20 = memory[0x40:0x60];\n                memory[temp20:temp20 + 0x20] = !!var3;\n                var temp21 = memory[0x40:0x60];\n                return memory[temp21:temp21 + temp20 - temp21 + 0x20];\n            } else if (var2 == 0x18160ddd) {\n                var3 = 0x01b0;\n                var4 = storage[0x02];\n            \n            label_01B0:\n                var temp22 = memory[0x40:0x60];\n                memory[temp22:temp22 + 0x20] = var4;\n                var temp23 = memory[0x40:0x60];\n                return memory[temp23:temp23 + temp22 - temp23 + 0x20];\n            } else if (var2 == 0x23b872dd) {\n                var3 = 0x02b7;\n                var4 = msg.data[0x04:0x24];\n                var5 = msg.data[0x24:0x44];\n                var6 = msg.data[0x44:0x64];\n                var7 = 0x00;\n            \n                if (msg.value > 0x00) { goto label_0002; }\n            \n                var8 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n                var var9 = 0x720c4798;\n                var temp24 = memory[0x40:0x60];\n                memory[temp24:temp24 + 0x20] = var9 * 0x02 ** 0xe0;\n                var var10 = temp24 + 0x04;\n                var temp25 = memory[0x40:0x60];\n                var temp26;\n                temp26, memory[temp25:temp25 + 0x20] = address(var8).call.gas(msg.gas - 0x61da)(memory[temp25:temp25 + var10 - temp25]);\n            \n                if (!temp26) { goto label_0002; }\n            \n                var temp27 = 0x02 ** 0xa0 - 0x01;\n                var8 = temp27 & msg.sender == temp27 & memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n            \n                if (!var8) {\n                label_03AC:\n                \n                    if (var8) { goto label_0002; }\n                \n                    var8 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n                    var9 = 0x5d0be9de;\n                    var temp28 = memory[0x40:0x60];\n                    memory[temp28:temp28 + 0x20] = var9 * 0x02 ** 0xe0;\n                    var temp29 = temp28 + 0x04;\n                    memory[temp29:temp29 + 0x20] = var4 & 0x02 ** 0xa0 - 0x01;\n                    var10 = temp29 + 0x20;\n                    var temp30 = memory[0x40:0x60];\n                    var temp31;\n                    temp31, memory[temp30:temp30 + 0x20] = address(var8).call.gas(msg.gas - 0x61da)(memory[temp30:temp30 + var10 - temp30]);\n                \n                    if (!temp31) { goto label_0002; }\n                \n                    var temp32 = memory[0x40:0x60];\n                    memory[temp32:temp32 + 0x20] = 0x2e85f4ef * 0x02 ** 0xe1;\n                    memory[temp32 + 0x04:temp32 + 0x04 + 0x20] = var5 & 0x02 ** 0xa0 - 0x01;\n                    var temp33 = memory[0x40:0x60];\n                    var10 = temp32 + 0x24;\n                    var temp34;\n                    temp34, memory[temp33:temp33 + 0x20] = address(var8).call.gas(msg.gas - 0x61da)(memory[temp33:temp33 + temp32 - temp33 + 0x24]);\n                \n                    if (!temp34) { goto label_0002; }\n                \n                    var8 = 0x02e1;\n                    var9 = var4;\n                    var10 = var5;\n                    var var11 = var6;\n                    var var12 = 0x00;\n                    memory[var12:var12 + 0x20] = var9 & 0x02 ** 0xa0 - 0x01;\n                    memory[0x20:0x40] = var12;\n                    var var13 = storage[keccak256(memory[var12:var12 + 0x40])] < var11;\n                \n                    if (storage[keccak256(memory[var12:var12 + 0x40])] < var11) {\n                        var8 = transferFrom(var9, var10, var11, var12, var13);\n                        var7 = var8;\n                        goto label_02E4;\n                    } else if (!var13) {\n                        if (!var13) {\n                        label_0792:\n                            var12 = 0x00;\n                        \n                        label_02E4:\n                            var8 = var12;\n                            // Error: Could not resolve jump destination!\n                        } else {\n                        label_04B8:\n                            var temp35 = 0x02 ** 0xa0 - 0x01;\n                            var temp36 = var10 & temp35;\n                            memory[0x00:0x20] = temp36;\n                            memory[0x20:0x40] = 0x00;\n                            var temp37 = keccak256(memory[0x00:0x40]);\n                            var temp38 = var11;\n                            storage[temp37] = temp38 + storage[temp37];\n                            var temp39 = var9 & temp35;\n                            memory[0x00:0x20] = temp39;\n                            var temp40 = keccak256(memory[0x00:0x40]);\n                            storage[temp40] = storage[temp40] - temp38;\n                            memory[0x20:0x40] = 0x01;\n                            var temp41 = keccak256(memory[0x00:0x40]);\n                            memory[0x00:0x20] = temp35 & msg.sender;\n                            memory[0x20:0x40] = temp41;\n                            var temp42 = keccak256(memory[0x00:0x40]);\n                            storage[temp42] = storage[temp42] - temp38;\n                            var temp43 = memory[0x40:0x60];\n                            memory[temp43:temp43 + 0x20] = temp38;\n                            var temp44 = memory[0x40:0x60];\n                            log(memory[temp44:temp44 + temp43 - temp44 + 0x20], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-4] & 0x02 ** 0xa0 - 0x01, stack[-3] & 0x02 ** 0xa0 - 0x01]);\n                            var12 = 0x01;\n                            goto label_02E4;\n                        }\n                    } else if (var11 <= 0x00) { goto label_0792; }\n                    else { goto label_04B8; }\n                } else {\n                    var8 = 0x02 ** 0xa0 - 0x01 & 0xbdf5c4f1c1a9d7335a6a68d9aa011d5f40cf5520;\n                    var9 = 0x49cc954b;\n                    var temp45 = memory[0x40:0x60];\n                    memory[temp45:temp45 + 0x20] = var9 * 0x02 ** 0xe0;\n                    var10 = temp45 + 0x04;\n                    var temp46 = memory[0x40:0x60];\n                    var temp47;\n                    temp47, memory[temp46:temp46 + 0x20] = address(var8).call.gas(msg.gas - 0x61da)(memory[temp46:temp46 + var10 - temp46]);\n                \n                    if (!temp47) { goto label_0002; }\n                \n                    var8 = !memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n                    goto label_03AC;\n                }\n            } else if (var2 == 0x313ce567) {\n                var3 = 0x02cb;\n                var4 = 0x00;\n                var temp48 = memory[0x40:0x60];\n                memory[temp48:temp48 + 0x20] = var4 & 0xff;\n                var temp49 = memory[0x40:0x60];\n                return memory[temp49:temp49 + temp48 - temp49 + 0x20];\n            } else if (var2 == 0x475a9fa9) {\n                var3 = 0x02b7;\n                var4 = msg.data[0x04:0x24];\n                var5 = msg.data[0x24:0x44];\n                var6 = 0x00;\n            \n                if (msg.sender != 0xbdf5c4f1c1a9d7335a6a68d9aa011d5f40cf5520) { goto label_0002; }\n            \n                var3 = issueTokens(var4, var5, var6);\n                goto label_02B7;\n            } else if (var2 == 0x70a08231) {\n                memory[0x00:0x20] = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x00;\n                var3 = storage[keccak256(memory[0x00:0x40])];\n                goto label_01B0;\n            } else if (var2 == 0x95d89b41) {\n                var3 = 0x0249;\n                var temp50 = memory[0x40:0x60];\n                var4 = temp50;\n                memory[0x40:0x60] = var4 + 0x40;\n                memory[var4:var4 + 0x20] = 0x05;\n                memory[var4 + 0x20:var4 + 0x20 + 0x20] = 0x534e474c53000000000000000000000000000000000000000000000000000000;\n                goto label_0249;\n            } else if (var2 == 0xa9059cbb) {\n                var3 = 0x02b7;\n                var4 = msg.data[0x04:0x24];\n                var5 = msg.data[0x24:0x44];\n                var6 = 0x00;\n            \n                if (msg.value > 0x00) { goto label_0002; }\n            \n                var3 = transfer(var4, var5, var6);\n                goto label_02B7;\n            } else if (var2 == 0xdd62ed3e) {\n                var3 = 0x01b0;\n                var4 = msg.data[0x04:0x24];\n                var5 = msg.data[0x24:0x44];\n                var temp51 = 0x02 ** 0xa0 - 0x01;\n                memory[0x00:0x20] = temp51 & var4;\n                memory[0x20:0x40] = 0x01;\n                var temp52 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = var5 & temp51;\n                memory[0x20:0x40] = temp52;\n                var6 = storage[keccak256(memory[0x00:0x40])];\n                var3 = allowance(var4, var5, var6);\n                goto label_01B0;\n            } else { stop(); }\n        } else {\n            var temp53 = 0x02 ** 0xa0 - 0x01;\n            var0 = memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20] & temp53 == temp53 & msg.sender;\n        \n            if (!var0) {\n            label_063D:\n            \n                if (var0) { goto label_0002; }\n            \n                var0 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n                var1 = 0x5d0be9de;\n                var temp54 = memory[0x40:0x60];\n                memory[temp54:temp54 + 0x20] = var1 * 0x02 ** 0xe0;\n                var temp55 = temp54 + 0x04;\n                memory[temp55:temp55 + 0x20] = msg.sender;\n                var2 = temp55 + 0x20;\n                var temp56 = memory[0x40:0x60];\n                var temp57;\n                temp57, memory[temp56:temp56 + 0x20] = address(var0).call.gas(msg.gas - 0x61da)(memory[temp56:temp56 + var2 - temp56]);\n            \n                if (!temp57) { goto label_0002; }\n            \n                var temp58 = memory[0x40:0x60];\n                memory[temp58:temp58 + 0x20] = 0x2e85f4ef * 0x02 ** 0xe1;\n                memory[temp58 + 0x04:temp58 + 0x04 + 0x20] = arg0 & 0x02 ** 0xa0 - 0x01;\n                var temp59 = memory[0x40:0x60];\n                var2 = temp58 + 0x24;\n                var temp60;\n                temp60, memory[temp59:temp59 + 0x20] = address(var0).call.gas(msg.gas - 0x61da)(memory[temp59:temp59 + temp58 - temp59 + 0x24]);\n            \n                if (!temp60) { goto label_0002; }\n            \n                var0 = 0x078b;\n                var1 = arg0;\n                var2 = arg1;\n                var3 = 0x00;\n                memory[var3:var3 + 0x20] = msg.sender;\n                memory[0x20:0x40] = var3;\n                var4 = storage[keccak256(memory[var3:var3 + 0x40])] < var2;\n            \n                if (storage[keccak256(memory[var3:var3 + 0x40])] < var2) {\n                    var0 = func_0713(var1, var2, var3, var4);\n                    arg2 = var0;\n                    r0 = allowance(arg0, arg1, arg2);\n                    // Error: Could not resolve method call return address!\n                } else if (!var4) {\n                    var3 = 0x00;\n                    var0 = allowance(var1, var2, var3);\n                    // Error: Could not resolve method call return address!\n                } else {\n                    var temp61 = msg.sender;\n                    var temp62 = 0x02 ** 0xa0 - 0x01;\n                    memory[0x00:0x20] = temp61 & temp62;\n                    memory[0x20:0x40] = 0x00;\n                    var temp63 = keccak256(memory[0x00:0x40]);\n                    var temp64 = var2;\n                    storage[temp63] = storage[temp63] - temp64;\n                    var temp65 = var1 & temp62;\n                    memory[0x00:0x20] = temp65;\n                    var temp66 = keccak256(memory[0x00:0x40]);\n                    storage[temp66] = temp64 + storage[temp66];\n                    var temp67 = memory[0x40:0x60];\n                    memory[temp67:temp67 + 0x20] = temp64;\n                    var temp68 = memory[0x40:0x60];\n                    log(memory[temp68:temp68 + temp67 - temp68 + 0x20], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, msg.sender, stack[-3] & 0x02 ** 0xa0 - 0x01]);\n                    var3 = 0x01;\n                    var0 = allowance(var1, var2, var3);\n                    // Error: Could not resolve method call return address!\n                }\n            } else {\n                var0 = 0x02 ** 0xa0 - 0x01 & 0xbdf5c4f1c1a9d7335a6a68d9aa011d5f40cf5520;\n                var1 = 0x49cc954b;\n                var temp69 = memory[0x40:0x60];\n                memory[temp69:temp69 + 0x20] = var1 * 0x02 ** 0xe0;\n                var2 = temp69 + 0x04;\n                var temp70 = memory[0x40:0x60];\n                var temp71;\n                temp71, memory[temp70:temp70 + 0x20] = address(var0).call.gas(msg.gas - 0x61da)(memory[temp70:temp70 + var2 - temp70]);\n            \n                if (!temp71) { goto label_0002; }\n            \n                var0 = !memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n                goto label_063D;\n            }\n        }\n    }\n    \n    function func_0713(var arg0, var arg1, var arg2, var arg3) returns (var r0) {\n        if (arg1 <= 0x00) {\n            arg2 = 0x00;\n            r0 = allowance(arg0, arg1, arg2);\n            // Error: Could not resolve method call return address!\n        } else {\n            var temp0 = 0x02 ** 0xa0 - 0x01;\n            var temp1 = temp0 & msg.sender;\n            memory[0x00:0x20] = temp1;\n            memory[0x20:0x40] = 0x00;\n            var temp2 = keccak256(memory[0x00:0x40]);\n            var temp3 = arg1;\n            storage[temp2] = storage[temp2] - temp3;\n            var temp4 = arg0 & temp0;\n            memory[0x00:0x20] = temp4;\n            var temp5 = keccak256(memory[0x00:0x40]);\n            storage[temp5] = temp3 + storage[temp5];\n            var temp6 = memory[0x40:0x60];\n            memory[temp6:temp6 + 0x20] = temp3;\n            var temp7 = memory[0x40:0x60];\n            log(memory[temp7:temp7 + temp6 - temp7 + 0x20], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, msg.sender, stack[-3] & 0x02 ** 0xa0 - 0x01]);\n            arg2 = 0x01;\n            r0 = allowance(arg0, arg1, arg2);\n            // Error: Could not resolve method call return address!\n        }\n    }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x60;\n    \n        if (!msg.data.length) { stop(); }\n    \n    label_000B:\n        var var0 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n    \n        if (var0 == 0x06fdde03) {\n            // Dispatch table entry for name()\n            var var1 = 0x0249;\n            var temp0 = memory[0x40:0x60];\n            var var2 = temp0;\n            memory[0x40:0x60] = var2 + 0x40;\n            memory[var2:var2 + 0x20] = 0x0b;\n            memory[var2 + 0x20:var2 + 0x20 + 0x20] = 0x53696e67756c6172445456000000000000000000000000000000000000000000;\n        \n        label_0249:\n            var temp1 = memory[0x40:0x60];\n            var var3 = temp1;\n            var var4 = var3;\n            var temp2 = var4 + 0x20;\n            memory[var4:var4 + 0x20] = temp2 - var4;\n            var temp3 = var2;\n            memory[temp2:temp2 + 0x20] = memory[temp3:temp3 + 0x20];\n            var temp4 = temp2 + 0x20;\n            var temp5 = memory[temp3:temp3 + 0x20];\n            memory[temp4:temp4 + temp5] = address(0x04).call.gas((temp5 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp3 + 0x20:temp3 + 0x20 + temp5]);\n            var var5 = temp5 + temp4;\n            var var6 = temp5 & 0x1f;\n        \n            if (!var6) {\n                var temp6 = memory[0x40:0x60];\n                return memory[temp6:temp6 + var5 - temp6];\n            } else {\n                var temp7 = var6;\n                var temp8 = var5 - temp7;\n                memory[temp8:temp8 + 0x20] = ~(0x0100 ** (0x20 - temp7) - 0x01) & memory[temp8:temp8 + 0x20];\n                var temp9 = memory[0x40:0x60];\n                return memory[temp9:temp9 + (temp8 + 0x20) - temp9];\n            }\n        } else if (var0 == 0x095ea7b3) {\n            // Dispatch table entry for approve(address,uint256)\n            var temp10 = msg.data[0x24:0x44];\n            var temp11 = 0x02 ** 0xa0 - 0x01;\n            var temp12 = temp11 & msg.sender;\n            memory[0x00:0x20] = temp12;\n            memory[0x20:0x40] = 0x01;\n            var temp13 = keccak256(memory[0x00:0x40]);\n            var temp14 = msg.data[0x04:0x24] & temp11;\n            memory[0x00:0x20] = temp14;\n            memory[0x20:0x40] = temp13;\n            storage[keccak256(memory[0x00:0x40])] = temp10;\n            var temp15 = memory[0x40:0x60];\n            memory[temp15:temp15 + 0x20] = temp10;\n            var temp16 = memory[0x40:0x60];\n            log(memory[temp16:temp16 + temp15 - temp16 + 0x20], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, msg.sender, msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01]);\n            var1 = 0x01;\n        \n        label_02B7:\n            var temp17 = memory[0x40:0x60];\n            memory[temp17:temp17 + 0x20] = !!var1;\n            var temp18 = memory[0x40:0x60];\n            return memory[temp18:temp18 + temp17 - temp18 + 0x20];\n        } else if (var0 == 0x18160ddd) {\n            // Dispatch table entry for totalSupply()\n            var1 = 0x01b0;\n            var2 = storage[0x02];\n        \n        label_01B0:\n            var temp19 = memory[0x40:0x60];\n            memory[temp19:temp19 + 0x20] = var2;\n            var temp20 = memory[0x40:0x60];\n            return memory[temp20:temp20 + temp19 - temp20 + 0x20];\n        } else if (var0 == 0x23b872dd) {\n            // Dispatch table entry for transferFrom(address,address,uint256)\n            var1 = 0x02b7;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44];\n            var4 = msg.data[0x44:0x64];\n            var5 = 0x00;\n        \n            if (msg.value > 0x00) { goto label_0002; }\n        \n            var6 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n            var var7 = 0x720c4798;\n            var temp21 = memory[0x40:0x60];\n            memory[temp21:temp21 + 0x20] = var7 * 0x02 ** 0xe0;\n            var var8 = temp21 + 0x04;\n            var temp22 = memory[0x40:0x60];\n            var temp23;\n            temp23, memory[temp22:temp22 + 0x20] = address(var6).call.gas(msg.gas - 0x61da)(memory[temp22:temp22 + var8 - temp22]);\n        \n            if (!temp23) {\n            label_0002:\n                memory[0x40:0x60] = var8;\n            \n                if (!msg.data.length) { stop(); }\n                else { goto label_000B; }\n            } else {\n                var temp24 = 0x02 ** 0xa0 - 0x01;\n                var6 = temp24 & msg.sender == temp24 & memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n            \n                if (!var6) {\n                label_03AC:\n                \n                    if (var6) { goto label_0002; }\n                \n                    var6 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n                    var7 = 0x5d0be9de;\n                    var temp25 = memory[0x40:0x60];\n                    memory[temp25:temp25 + 0x20] = var7 * 0x02 ** 0xe0;\n                    var temp26 = temp25 + 0x04;\n                    memory[temp26:temp26 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n                    var8 = temp26 + 0x20;\n                    var temp27 = memory[0x40:0x60];\n                    var temp28;\n                    temp28, memory[temp27:temp27 + 0x20] = address(var6).call.gas(msg.gas - 0x61da)(memory[temp27:temp27 + var8 - temp27]);\n                \n                    if (!temp28) { goto label_0002; }\n                \n                    var temp29 = memory[0x40:0x60];\n                    memory[temp29:temp29 + 0x20] = 0x2e85f4ef * 0x02 ** 0xe1;\n                    memory[temp29 + 0x04:temp29 + 0x04 + 0x20] = var3 & 0x02 ** 0xa0 - 0x01;\n                    var temp30 = memory[0x40:0x60];\n                    var8 = temp29 + 0x24;\n                    var temp31;\n                    temp31, memory[temp30:temp30 + 0x20] = address(var6).call.gas(msg.gas - 0x61da)(memory[temp30:temp30 + temp29 - temp30 + 0x24]);\n                \n                    if (!temp31) { goto label_0002; }\n                \n                    var6 = 0x02e1;\n                    var7 = var2;\n                    var8 = var3;\n                    var var9 = var4;\n                    var var10 = 0x00;\n                    memory[var10:var10 + 0x20] = var7 & 0x02 ** 0xa0 - 0x01;\n                    memory[0x20:0x40] = var10;\n                    var var11 = storage[keccak256(memory[var10:var10 + 0x40])] < var9;\n                \n                    if (storage[keccak256(memory[var10:var10 + 0x40])] < var9) {\n                        var6 = transferFrom(var7, var8, var9, var10, var11);\n                        var5 = var6;\n                        goto label_02E4;\n                    } else if (!var11) {\n                        if (!var11) {\n                        label_0792:\n                            var10 = 0x00;\n                        \n                        label_02E4:\n                            var6 = var10;\n                            // Error: Could not resolve jump destination!\n                        } else {\n                        label_04B8:\n                            var temp32 = 0x02 ** 0xa0 - 0x01;\n                            var temp33 = temp32 & var8;\n                            memory[0x00:0x20] = temp33;\n                            memory[0x20:0x40] = 0x00;\n                            var temp34 = keccak256(memory[0x00:0x40]);\n                            var temp35 = var9;\n                            storage[temp34] = temp35 + storage[temp34];\n                            var temp36 = temp32 & var7;\n                            memory[0x00:0x20] = temp36;\n                            var temp37 = keccak256(memory[0x00:0x40]);\n                            storage[temp37] = storage[temp37] - temp35;\n                            memory[0x20:0x40] = 0x01;\n                            var temp38 = keccak256(memory[0x00:0x40]);\n                            memory[0x00:0x20] = temp32 & msg.sender;\n                            memory[0x20:0x40] = temp38;\n                            var temp39 = keccak256(memory[0x00:0x40]);\n                            storage[temp39] = storage[temp39] - temp35;\n                            var temp40 = memory[0x40:0x60];\n                            memory[temp40:temp40 + 0x20] = temp35;\n                            var temp41 = memory[0x40:0x60];\n                            log(memory[temp41:temp41 + temp40 - temp41 + 0x20], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-4] & 0x02 ** 0xa0 - 0x01, stack[-3] & 0x02 ** 0xa0 - 0x01]);\n                            var10 = 0x01;\n                            goto label_02E4;\n                        }\n                    } else if (var9 <= 0x00) { goto label_0792; }\n                    else { goto label_04B8; }\n                } else {\n                    var6 = 0x02 ** 0xa0 - 0x01 & 0xbdf5c4f1c1a9d7335a6a68d9aa011d5f40cf5520;\n                    var7 = 0x49cc954b;\n                    var temp42 = memory[0x40:0x60];\n                    memory[temp42:temp42 + 0x20] = var7 * 0x02 ** 0xe0;\n                    var8 = temp42 + 0x04;\n                    var temp43 = memory[0x40:0x60];\n                    var temp44;\n                    temp44, memory[temp43:temp43 + 0x20] = address(var6).call.gas(msg.gas - 0x61da)(memory[temp43:temp43 + var8 - temp43]);\n                \n                    if (!temp44) { goto label_0002; }\n                \n                    var6 = !memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n                    goto label_03AC;\n                }\n            }\n        } else if (var0 == 0x313ce567) {\n            // Dispatch table entry for decimals()\n            var1 = 0x02cb;\n            var2 = 0x00;\n            var temp45 = memory[0x40:0x60];\n            memory[temp45:temp45 + 0x20] = var2 & 0xff;\n            var temp46 = memory[0x40:0x60];\n            return memory[temp46:temp46 + temp45 - temp46 + 0x20];\n        } else if (var0 == 0x475a9fa9) {\n            // Dispatch table entry for issueTokens(address,uint256)\n            var1 = 0x02b7;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44];\n            var4 = 0x00;\n        \n            if (msg.sender != 0xbdf5c4f1c1a9d7335a6a68d9aa011d5f40cf5520) { goto label_0002; }\n        \n            var1 = issueTokens(var2, var3, var4);\n            goto label_02B7;\n        } else if (var0 == 0x70a08231) {\n            // Dispatch table entry for balanceOf(address)\n            memory[0x00:0x20] = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            memory[0x20:0x40] = 0x00;\n            var1 = storage[keccak256(memory[0x00:0x40])];\n            goto label_01B0;\n        } else if (var0 == 0x95d89b41) {\n            // Dispatch table entry for symbol()\n            var1 = 0x0249;\n            var temp47 = memory[0x40:0x60];\n            var2 = temp47;\n            memory[0x40:0x60] = var2 + 0x40;\n            memory[var2:var2 + 0x20] = 0x05;\n            memory[var2 + 0x20:var2 + 0x20 + 0x20] = 0x534e474c53000000000000000000000000000000000000000000000000000000;\n            goto label_0249;\n        } else if (var0 == 0xa9059cbb) {\n            // Dispatch table entry for transfer(address,uint256)\n            var1 = 0x02b7;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44];\n            var4 = 0x00;\n        \n            if (msg.value > 0x00) { goto label_0002; }\n        \n            var1 = transfer(var2, var3, var4);\n            goto label_02B7;\n        } else if (var0 == 0xdd62ed3e) {\n            // Dispatch table entry for allowance(address,address)\n            var1 = 0x01b0;\n            var2 = msg.data[0x04:0x24];\n            var3 = msg.data[0x24:0x44];\n            var temp48 = 0x02 ** 0xa0 - 0x01;\n            memory[0x00:0x20] = temp48 & var2;\n            memory[0x20:0x40] = 0x01;\n            var temp49 = keccak256(memory[0x00:0x40]);\n            memory[0x00:0x20] = var3 & temp48;\n            memory[0x20:0x40] = temp49;\n            var4 = storage[keccak256(memory[0x00:0x40])];\n            var1 = allowance(var2, var3, var4);\n            goto label_01B0;\n        } else { stop(); }\n    }\n    \n    function allowance(var arg0, var arg1, var arg2) returns (var r0) { return arg2; }\n    \n    function transferFrom(var arg0, var arg1, var arg2, var arg3, var arg4) returns (var r0) {\n        memory[0x20:0x40] = 0x01;\n        var temp0 = arg3;\n        var temp1 = keccak256(memory[temp0:temp0 + 0x40]);\n        memory[temp0:temp0 + 0x20] = msg.sender;\n        memory[0x20:0x40] = temp1;\n        arg4 = storage[keccak256(memory[temp0:temp0 + 0x40])] >= arg2;\n    \n        if (!arg4) {\n            if (!arg4) {\n            label_0792:\n                arg3 = 0x00;\n            \n            label_02E4:\n                return arg3;\n            } else {\n            label_04B8:\n                var temp2 = 0x02 ** 0xa0 - 0x01;\n                var temp3 = arg1 & temp2;\n                memory[0x00:0x20] = temp3;\n                memory[0x20:0x40] = 0x00;\n                var temp4 = keccak256(memory[0x00:0x40]);\n                var temp5 = arg2;\n                storage[temp4] = temp5 + storage[temp4];\n                var temp6 = arg0 & temp2;\n                memory[0x00:0x20] = temp6;\n                var temp7 = keccak256(memory[0x00:0x40]);\n                storage[temp7] = storage[temp7] - temp5;\n                memory[0x20:0x40] = 0x01;\n                var temp8 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = temp2 & msg.sender;\n                memory[0x20:0x40] = temp8;\n                var temp9 = keccak256(memory[0x00:0x40]);\n                storage[temp9] = storage[temp9] - temp5;\n                var temp10 = memory[0x40:0x60];\n                memory[temp10:temp10 + 0x20] = temp5;\n                var temp11 = memory[0x40:0x60];\n                log(memory[temp11:temp11 + temp10 - temp11 + 0x20], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-4] & 0x02 ** 0xa0 - 0x01, stack[-3] & 0x02 ** 0xa0 - 0x01]);\n                arg3 = 0x01;\n                goto label_02E4;\n            }\n        } else if (arg2 <= 0x00) { goto label_0792; }\n        else { goto label_04B8; }\n    }\n    \n    function issueTokens(var arg0, var arg1, var arg2) returns (var r0) {\n        if (arg1 != 0x00) {\n            memory[0x00:0x20] = arg0 & 0x02 ** 0xa0 - 0x01;\n            memory[0x20:0x40] = 0x00;\n            var temp0 = keccak256(memory[0x00:0x40]);\n            var temp1 = arg1;\n            storage[temp0] = temp1 + storage[temp0];\n            storage[0x02] = temp1 + storage[0x02];\n            arg2 = 0x01;\n            r0 = allowance(arg0, arg1, arg2);\n            // Error: Could not resolve method call return address!\n        } else {\n            arg2 = 0x00;\n            r0 = allowance(arg0, arg1, arg2);\n            // Error: Could not resolve method call return address!\n        }\n    }\n    \n    function transfer(var arg0, var arg1, var arg2) returns (var r0) {\n        var var0 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n        var var1 = 0x720c4798;\n        var temp0 = memory[0x40:0x60];\n        memory[temp0:temp0 + 0x20] = var1 * 0x02 ** 0xe0;\n        var var2 = temp0 + 0x04;\n        var temp1 = memory[0x40:0x60];\n        var temp2;\n        temp2, memory[temp1:temp1 + 0x20] = address(var0).call.gas(msg.gas - 0x61da)(memory[temp1:temp1 + var2 - temp1]);\n    \n        if (!temp2) {\n        label_0002:\n            memory[0x40:0x60] = var2;\n        \n            if (!msg.data.length) { stop(); }\n        \n            var2 = msg.data[0x00:0x20] / 0x02 ** 0xe0;\n        \n            if (var2 == 0x06fdde03) {\n                var var3 = 0x0249;\n                var temp3 = memory[0x40:0x60];\n                var var4 = temp3;\n                memory[0x40:0x60] = var4 + 0x40;\n                memory[var4:var4 + 0x20] = 0x0b;\n                memory[var4 + 0x20:var4 + 0x20 + 0x20] = 0x53696e67756c6172445456000000000000000000000000000000000000000000;\n            \n            label_0249:\n                var temp4 = memory[0x40:0x60];\n                var var5 = temp4;\n                var var6 = var5;\n                var temp5 = var6 + 0x20;\n                memory[var6:var6 + 0x20] = temp5 - var6;\n                var temp6 = var4;\n                memory[temp5:temp5 + 0x20] = memory[temp6:temp6 + 0x20];\n                var temp7 = temp5 + 0x20;\n                var temp8 = memory[temp6:temp6 + 0x20];\n                memory[temp7:temp7 + temp8] = address(0x04).call.gas((temp8 + 0x1f) / 0x20 * 0x0f + 0x03)(memory[temp6 + 0x20:temp6 + 0x20 + temp8]);\n                var var7 = temp8 + temp7;\n                var var8 = temp8 & 0x1f;\n            \n                if (!var8) {\n                    var temp9 = memory[0x40:0x60];\n                    return memory[temp9:temp9 + var7 - temp9];\n                } else {\n                    var temp10 = var8;\n                    var temp11 = var7 - temp10;\n                    memory[temp11:temp11 + 0x20] = ~(0x0100 ** (0x20 - temp10) - 0x01) & memory[temp11:temp11 + 0x20];\n                    var temp12 = memory[0x40:0x60];\n                    return memory[temp12:temp12 + (temp11 + 0x20) - temp12];\n                }\n            } else if (var2 == 0x095ea7b3) {\n                var temp13 = msg.data[0x24:0x44];\n                var temp14 = msg.sender;\n                var temp15 = 0x02 ** 0xa0 - 0x01;\n                memory[0x00:0x20] = temp14 & temp15;\n                memory[0x20:0x40] = 0x01;\n                var temp16 = keccak256(memory[0x00:0x40]);\n                var temp17 = msg.data[0x04:0x24] & temp15;\n                memory[0x00:0x20] = temp17;\n                memory[0x20:0x40] = temp16;\n                storage[keccak256(memory[0x00:0x40])] = temp13;\n                var temp18 = memory[0x40:0x60];\n                memory[temp18:temp18 + 0x20] = temp13;\n                var temp19 = memory[0x40:0x60];\n                log(memory[temp19:temp19 + temp18 - temp19 + 0x20], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, msg.sender, msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01]);\n                var3 = 0x01;\n            \n            label_02B7:\n                var temp20 = memory[0x40:0x60];\n                memory[temp20:temp20 + 0x20] = !!var3;\n                var temp21 = memory[0x40:0x60];\n                return memory[temp21:temp21 + temp20 - temp21 + 0x20];\n            } else if (var2 == 0x18160ddd) {\n                var3 = 0x01b0;\n                var4 = storage[0x02];\n            \n            label_01B0:\n                var temp22 = memory[0x40:0x60];\n                memory[temp22:temp22 + 0x20] = var4;\n                var temp23 = memory[0x40:0x60];\n                return memory[temp23:temp23 + temp22 - temp23 + 0x20];\n            } else if (var2 == 0x23b872dd) {\n                var3 = 0x02b7;\n                var4 = msg.data[0x04:0x24];\n                var5 = msg.data[0x24:0x44];\n                var6 = msg.data[0x44:0x64];\n                var7 = 0x00;\n            \n                if (msg.value > 0x00) { goto label_0002; }\n            \n                var8 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n                var var9 = 0x720c4798;\n                var temp24 = memory[0x40:0x60];\n                memory[temp24:temp24 + 0x20] = var9 * 0x02 ** 0xe0;\n                var var10 = temp24 + 0x04;\n                var temp25 = memory[0x40:0x60];\n                var temp26;\n                temp26, memory[temp25:temp25 + 0x20] = address(var8).call.gas(msg.gas - 0x61da)(memory[temp25:temp25 + var10 - temp25]);\n            \n                if (!temp26) { goto label_0002; }\n            \n                var temp27 = 0x02 ** 0xa0 - 0x01;\n                var8 = temp27 & msg.sender == temp27 & memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n            \n                if (!var8) {\n                label_03AC:\n                \n                    if (var8) { goto label_0002; }\n                \n                    var8 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n                    var9 = 0x5d0be9de;\n                    var temp28 = memory[0x40:0x60];\n                    memory[temp28:temp28 + 0x20] = var9 * 0x02 ** 0xe0;\n                    var temp29 = temp28 + 0x04;\n                    memory[temp29:temp29 + 0x20] = var4 & 0x02 ** 0xa0 - 0x01;\n                    var10 = temp29 + 0x20;\n                    var temp30 = memory[0x40:0x60];\n                    var temp31;\n                    temp31, memory[temp30:temp30 + 0x20] = address(var8).call.gas(msg.gas - 0x61da)(memory[temp30:temp30 + var10 - temp30]);\n                \n                    if (!temp31) { goto label_0002; }\n                \n                    var temp32 = memory[0x40:0x60];\n                    memory[temp32:temp32 + 0x20] = 0x2e85f4ef * 0x02 ** 0xe1;\n                    memory[temp32 + 0x04:temp32 + 0x04 + 0x20] = var5 & 0x02 ** 0xa0 - 0x01;\n                    var temp33 = memory[0x40:0x60];\n                    var10 = temp32 + 0x24;\n                    var temp34;\n                    temp34, memory[temp33:temp33 + 0x20] = address(var8).call.gas(msg.gas - 0x61da)(memory[temp33:temp33 + temp32 - temp33 + 0x24]);\n                \n                    if (!temp34) { goto label_0002; }\n                \n                    var8 = 0x02e1;\n                    var9 = var4;\n                    var10 = var5;\n                    var var11 = var6;\n                    var var12 = 0x00;\n                    memory[var12:var12 + 0x20] = var9 & 0x02 ** 0xa0 - 0x01;\n                    memory[0x20:0x40] = var12;\n                    var var13 = storage[keccak256(memory[var12:var12 + 0x40])] < var11;\n                \n                    if (storage[keccak256(memory[var12:var12 + 0x40])] < var11) {\n                        var8 = transferFrom(var9, var10, var11, var12, var13);\n                        var7 = var8;\n                        goto label_02E4;\n                    } else if (!var13) {\n                        if (!var13) {\n                        label_0792:\n                            var12 = 0x00;\n                        \n                        label_02E4:\n                            var8 = var12;\n                            // Error: Could not resolve jump destination!\n                        } else {\n                        label_04B8:\n                            var temp35 = 0x02 ** 0xa0 - 0x01;\n                            var temp36 = var10 & temp35;\n                            memory[0x00:0x20] = temp36;\n                            memory[0x20:0x40] = 0x00;\n                            var temp37 = keccak256(memory[0x00:0x40]);\n                            var temp38 = var11;\n                            storage[temp37] = temp38 + storage[temp37];\n                            var temp39 = var9 & temp35;\n                            memory[0x00:0x20] = temp39;\n                            var temp40 = keccak256(memory[0x00:0x40]);\n                            storage[temp40] = storage[temp40] - temp38;\n                            memory[0x20:0x40] = 0x01;\n                            var temp41 = keccak256(memory[0x00:0x40]);\n                            memory[0x00:0x20] = temp35 & msg.sender;\n                            memory[0x20:0x40] = temp41;\n                            var temp42 = keccak256(memory[0x00:0x40]);\n                            storage[temp42] = storage[temp42] - temp38;\n                            var temp43 = memory[0x40:0x60];\n                            memory[temp43:temp43 + 0x20] = temp38;\n                            var temp44 = memory[0x40:0x60];\n                            log(memory[temp44:temp44 + temp43 - temp44 + 0x20], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, stack[-4] & 0x02 ** 0xa0 - 0x01, stack[-3] & 0x02 ** 0xa0 - 0x01]);\n                            var12 = 0x01;\n                            goto label_02E4;\n                        }\n                    } else if (var11 <= 0x00) { goto label_0792; }\n                    else { goto label_04B8; }\n                } else {\n                    var8 = 0x02 ** 0xa0 - 0x01 & 0xbdf5c4f1c1a9d7335a6a68d9aa011d5f40cf5520;\n                    var9 = 0x49cc954b;\n                    var temp45 = memory[0x40:0x60];\n                    memory[temp45:temp45 + 0x20] = var9 * 0x02 ** 0xe0;\n                    var10 = temp45 + 0x04;\n                    var temp46 = memory[0x40:0x60];\n                    var temp47;\n                    temp47, memory[temp46:temp46 + 0x20] = address(var8).call.gas(msg.gas - 0x61da)(memory[temp46:temp46 + var10 - temp46]);\n                \n                    if (!temp47) { goto label_0002; }\n                \n                    var8 = !memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n                    goto label_03AC;\n                }\n            } else if (var2 == 0x313ce567) {\n                var3 = 0x02cb;\n                var4 = 0x00;\n                var temp48 = memory[0x40:0x60];\n                memory[temp48:temp48 + 0x20] = var4 & 0xff;\n                var temp49 = memory[0x40:0x60];\n                return memory[temp49:temp49 + temp48 - temp49 + 0x20];\n            } else if (var2 == 0x475a9fa9) {\n                var3 = 0x02b7;\n                var4 = msg.data[0x04:0x24];\n                var5 = msg.data[0x24:0x44];\n                var6 = 0x00;\n            \n                if (msg.sender != 0xbdf5c4f1c1a9d7335a6a68d9aa011d5f40cf5520) { goto label_0002; }\n            \n                var3 = issueTokens(var4, var5, var6);\n                goto label_02B7;\n            } else if (var2 == 0x70a08231) {\n                memory[0x00:0x20] = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n                memory[0x20:0x40] = 0x00;\n                var3 = storage[keccak256(memory[0x00:0x40])];\n                goto label_01B0;\n            } else if (var2 == 0x95d89b41) {\n                var3 = 0x0249;\n                var temp50 = memory[0x40:0x60];\n                var4 = temp50;\n                memory[0x40:0x60] = var4 + 0x40;\n                memory[var4:var4 + 0x20] = 0x05;\n                memory[var4 + 0x20:var4 + 0x20 + 0x20] = 0x534e474c53000000000000000000000000000000000000000000000000000000;\n                goto label_0249;\n            } else if (var2 == 0xa9059cbb) {\n                var3 = 0x02b7;\n                var4 = msg.data[0x04:0x24];\n                var5 = msg.data[0x24:0x44];\n                var6 = 0x00;\n            \n                if (msg.value > 0x00) { goto label_0002; }\n            \n                var3 = transfer(var4, var5, var6);\n                goto label_02B7;\n            } else if (var2 == 0xdd62ed3e) {\n                var3 = 0x01b0;\n                var4 = msg.data[0x04:0x24];\n                var5 = msg.data[0x24:0x44];\n                var temp51 = 0x02 ** 0xa0 - 0x01;\n                memory[0x00:0x20] = temp51 & var4;\n                memory[0x20:0x40] = 0x01;\n                var temp52 = keccak256(memory[0x00:0x40]);\n                memory[0x00:0x20] = var5 & temp51;\n                memory[0x20:0x40] = temp52;\n                var6 = storage[keccak256(memory[0x00:0x40])];\n                var3 = allowance(var4, var5, var6);\n                goto label_01B0;\n            } else { stop(); }\n        } else {\n            var temp53 = 0x02 ** 0xa0 - 0x01;\n            var0 = memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20] & temp53 == temp53 & msg.sender;\n        \n            if (!var0) {\n            label_063D:\n            \n                if (var0) { goto label_0002; }\n            \n                var0 = 0x02 ** 0xa0 - 0x01 & 0xe736091fc36f1ad476f5e4e03e4425940822d3ba;\n                var1 = 0x5d0be9de;\n                var temp54 = memory[0x40:0x60];\n                memory[temp54:temp54 + 0x20] = var1 * 0x02 ** 0xe0;\n                var temp55 = temp54 + 0x04;\n                memory[temp55:temp55 + 0x20] = msg.sender;\n                var2 = temp55 + 0x20;\n                var temp56 = memory[0x40:0x60];\n                var temp57;\n                temp57, memory[temp56:temp56 + 0x20] = address(var0).call.gas(msg.gas - 0x61da)(memory[temp56:temp56 + var2 - temp56]);\n            \n                if (!temp57) { goto label_0002; }\n            \n                var temp58 = memory[0x40:0x60];\n                memory[temp58:temp58 + 0x20] = 0x2e85f4ef * 0x02 ** 0xe1;\n                memory[temp58 + 0x04:temp58 + 0x04 + 0x20] = arg0 & 0x02 ** 0xa0 - 0x01;\n                var temp59 = memory[0x40:0x60];\n                var2 = temp58 + 0x24;\n                var temp60;\n                temp60, memory[temp59:temp59 + 0x20] = address(var0).call.gas(msg.gas - 0x61da)(memory[temp59:temp59 + temp58 - temp59 + 0x24]);\n            \n                if (!temp60) { goto label_0002; }\n            \n                var0 = 0x078b;\n                var1 = arg0;\n                var2 = arg1;\n                var3 = 0x00;\n                memory[var3:var3 + 0x20] = msg.sender;\n                memory[0x20:0x40] = var3;\n                var4 = storage[keccak256(memory[var3:var3 + 0x40])] < var2;\n            \n                if (storage[keccak256(memory[var3:var3 + 0x40])] < var2) {\n                    var0 = func_0713(var1, var2, var3, var4);\n                    arg2 = var0;\n                    r0 = allowance(arg0, arg1, arg2);\n                    // Error: Could not resolve method call return address!\n                } else if (!var4) {\n                    var3 = 0x00;\n                    var0 = allowance(var1, var2, var3);\n                    // Error: Could not resolve method call return address!\n                } else {\n                    var temp61 = msg.sender;\n                    var temp62 = 0x02 ** 0xa0 - 0x01;\n                    memory[0x00:0x20] = temp61 & temp62;\n                    memory[0x20:0x40] = 0x00;\n                    var temp63 = keccak256(memory[0x00:0x40]);\n                    var temp64 = var2;\n                    storage[temp63] = storage[temp63] - temp64;\n                    var temp65 = var1 & temp62;\n                    memory[0x00:0x20] = temp65;\n                    var temp66 = keccak256(memory[0x00:0x40]);\n                    storage[temp66] = temp64 + storage[temp66];\n                    var temp67 = memory[0x40:0x60];\n                    memory[temp67:temp67 + 0x20] = temp64;\n                    var temp68 = memory[0x40:0x60];\n                    log(memory[temp68:temp68 + temp67 - temp68 + 0x20], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, msg.sender, stack[-3] & 0x02 ** 0xa0 - 0x01]);\n                    var3 = 0x01;\n                    var0 = allowance(var1, var2, var3);\n                    // Error: Could not resolve method call return address!\n                }\n            } else {\n                var0 = 0x02 ** 0xa0 - 0x01 & 0xbdf5c4f1c1a9d7335a6a68d9aa011d5f40cf5520;\n                var1 = 0x49cc954b;\n                var temp69 = memory[0x40:0x60];\n                memory[temp69:temp69 + 0x20] = var1 * 0x02 ** 0xe0;\n                var2 = temp69 + 0x04;\n                var temp70 = memory[0x40:0x60];\n                var temp71;\n                temp71, memory[temp70:temp70 + 0x20] = address(var0).call.gas(msg.gas - 0x61da)(memory[temp70:temp70 + var2 - temp70]);\n            \n                if (!temp71) { goto label_0002; }\n            \n                var0 = !memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x20];\n                goto label_063D;\n            }\n        }\n    }\n    \n    function func_0713(var arg0, var arg1, var arg2, var arg3) returns (var r0) {\n        if (arg1 <= 0x00) {\n            arg2 = 0x00;\n            r0 = allowance(arg0, arg1, arg2);\n            // Error: Could not resolve method call return address!\n        } else {\n            var temp0 = 0x02 ** 0xa0 - 0x01;\n            var temp1 = temp0 & msg.sender;\n            memory[0x00:0x20] = temp1;\n            memory[0x20:0x40] = 0x00;\n            var temp2 = keccak256(memory[0x00:0x40]);\n            var temp3 = arg1;\n            storage[temp2] = storage[temp2] - temp3;\n            var temp4 = arg0 & temp0;\n            memory[0x00:0x20] = temp4;\n            var temp5 = keccak256(memory[0x00:0x40]);\n            storage[temp5] = temp3 + storage[temp5];\n            var temp6 = memory[0x40:0x60];\n            memory[temp6:temp6 + 0x20] = temp3;\n            var temp7 = memory[0x40:0x60];\n            log(memory[temp7:temp7 + temp6 - temp7 + 0x20], [0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, msg.sender, stack[-3] & 0x02 ** 0xa0 - 0x01]);\n            arg2 = 0x01;\n            r0 = allowance(arg0, arg1, arg2);\n            // Error: Could not resolve method call return address!\n        }\n    }\n}\n\n.",
	"status": "1",
	"time_cost": 30.30686640739441,
	"usage": {
		"completion_tokens": 463,
		"prompt_tokens": 10420,
		"total_tokens": 10883
	}
}