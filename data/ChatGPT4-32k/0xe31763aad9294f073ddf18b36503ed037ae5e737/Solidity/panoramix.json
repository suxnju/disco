{
	"address": "0xe31763aad9294f073ddf18b36503ed037ae5e737",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is a possible Solidity version of the contract. Due to the complexity of the decompiled code, some assumptions were made and some aspects may not be fully replicated.\n\n```solidity\n// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\ncontract MyContract {\n    mapping (address => uint8) stor0;\n    mapping (address => uint8) stor1;\n    mapping (address => uint8) stor2;\n    mapping (address => uint256) unknown0f42c61d;\n    uint256 stor6;\n    struct Stor3 {\n        bool   stor3_bool;\n        uint8  stor3_uint8_1;\n        uint8  stor3_uint8_2;\n        uint128 stor3_uint128;\n        address newContractAddress;\n    }\n    Stor3 stor3;\n    struct Stor4 {\n        uint8  stor4_uint8_1;\n        uint8  stor4_uint8_2;\n        address addr;\n    }\n    Stor4 stor4;\n\n    modifier onlyStor0 {\n        require(stor0[msg.sender] != 0, \"account is the zero address\");\n        _;\n    }\n\n    function paused() public view returns (bool) {\n        return stor3.stor3_bool;\n    }\n\n    function newContractAddress() public view returns (address) {\n        return stor3.newContractAddress;\n    }\n\n    function upgraded() public view returns (bool) {\n        return stor3.stor3_uint8_2 != 0;\n    }\n\n    function unknown9618652c() public view onlyStor0 returns (uint256) {\n        require(stor2[msg.sender] != 0);\n        require(stor6 <= address(this).balance, \"SafeMath: subtraction overflow\");\n        return (address(this).balance - stor6);\n    }\n\n    function pause() public onlyStor0 {\n        require(stor3.stor3_bool == false);\n        stor3.stor3_bool = true;\n        // emit event\n    }\n\n    function deposit() public payable {\n        require(stor3.stor3_bool == false);\n        require(msg.value > 0, \"Must send some ether\");\n        require(unknown0f42c61d[msg.sender] + msg.value >= unknown0f42c61d[msg.sender], \"SafeMath: addition overflow\");\n        unknown0f42c61d[msg.sender] += msg.value;\n        require(stor6 + msg.value >= stor6, \"SafeMath: addition overflow\");\n        stor6 += msg.value;\n        // emit event\n    }\n\n    function unpause() public onlyStor0 {\n        require(stor3.stor3_bool == true);\n        require(stor3.stor3_uint8_2 == 0);\n        stor3.stor3_bool = false;\n        // emit event\n    }\n\n    // Rest of the functions similar to these\n\n}\n```\nPlease note that this contract is a rough approximation of the original contract and might not behave exactly as the original one. It's recommended to thoroughly test this contract in a test environment before deploying it to a live network.",
				"role": "assistant"
			}
		}
	],
	"created": 1700472880,
	"id": "chatcmpl-8MuxspPVTIDkdmLZS4peOSQWryRkD",
	"input_format": "DecompiledCode",
	"ir": "# Palkeoramix decompiler. \n\ndef storage:\n  stor0 is mapping of uint8 at storage 0\n  stor1 is mapping of uint8 at storage 1\n  stor2 is mapping of uint8 at storage 2\n  stor3 is bool at storage 3 offset 256\n  stor3 is uint8 at storage 3\n  stor3 is uint8 at storage 3 offset 8\n  stor3 is uint128 at storage 3 offset 176\n  newContractAddress is addr at storage 3 offset 16\n  stor4 is uint8 at storage 4\n  stor4 is uint8 at storage 4 offset 160\n  stor4 is uint8 at storage 4 offset 168\n  stor4 is addr at storage 4\n  unknown0f42c61d is mapping of uint256 at storage 5\n  stor6 is uint256 at storage 6\n\ndef unknown0f42c61d(): # not payable\n  return unknown0f42c61d[caller]\n\ndef paused(): # not payable\n  return bool(uint8(stor3.field_0))\n\ndef newContractAddress(): # not payable\n  return newContractAddress\n\ndef upgraded(): # not payable\n  return bool(uint8(stor3.field_8))\n\n#\n#  Regular functions\n#\n\ndef _fallback() payable: # default function\n  revert\n\ndef unknown9618652c(): # not payable\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor2[caller]\n  if stor6 > eth.balance(this.address):\n      revert with 0, 'SafeMath: subtraction overflow'\n  return (eth.balance(this.address) - stor6)\n\ndef pause(): # not payable\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require not uint8(stor3.field_0)\n  uint8(stor3.field_0) = 1\n  log 0xab35696f \n\ndef deposit() payable: \n  require not uint8(stor3.field_0)\n  require call.value > 0\n  if call.value + unknown0f42c61d[caller] < unknown0f42c61d[caller]:\n      revert with 0, 'SafeMath: addition overflow'\n  unknown0f42c61d[caller] += call.value\n  if call.value + stor6 < stor6:\n      revert with 0, 'SafeMath: addition overflow'\n  stor6 += call.value\n  log 0xe5c9ed74: unknown0f42c61d[caller], caller\n\ndef unpause(): # not payable\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  uint8(stor3.field_0) = 0\n  log 0xe5e3b3fb \n\ndef unknown0b4005e3(): # not payable\n  require unknown0f42c61d[caller]\n  require eth.balance(this.address) >= unknown0f42c61d[caller]\n  unknown0f42c61d[caller] = 0\n  if unknown0f42c61d[caller] > stor6:\n      revert with 0, 'SafeMath: subtraction overflow'\n  stor6 -= unknown0f42c61d[caller]\n  call caller with:\n     value unknown0f42c61d[caller] wei\n       gas 2300 * is_zero(value) wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  log 0xe5c9ed74: 0, caller\n  return unknown0f42c61d[caller]\n\ndef unknown1d946cc4(uint8 _param1): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  require _param1 <= 5\n  uint8(stor4.field_168) = _param1\n  require uint8(stor4.field_168) <= 5\n  log 0x9e37d684: uint8(stor4.field_168)\n\ndef unknown8b2b303c(): # not payable\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor2[caller]\n  if stor6 > eth.balance(this.address):\n      revert with 0, 'SafeMath: subtraction overflow'\n  require eth.balance(this.address) - stor6 > 0\n  call caller with:\n     value eth.balance(this.address) - stor6 wei\n       gas 2300 * is_zero(value) wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  log 0xdaa02d44: (eth.balance(this.address) - stor6), caller\n  return (eth.balance(this.address) - stor6)\n\ndef upgradeContract(address _v2Address): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  require _v2Address\n  uint8(stor3.field_8) = 1\n  newContractAddress = _v2Address\n  Mask(80, 0, stor3.field_176) = 0\n  stor3.field_256 % 1 = 0\n  log ContractUpgrade(address newContract=_v2Address)\n\ndef unknown5fdc4ec6(addr _param1): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  require ext_code.size(_param1)\n  static call _param1.0x950699fe with:\n          gas gas_remaining wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  require ext_call.return_data[0]\n  addr(stor4.field_0) = _param1\n  log 0x703bc787: _param1\n\ndef addOwner(address _owner): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  if not _owner:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  if stor2[addr(_owner)]:\n      revert with 0, 'Roles: account already has role'\n  stor2[addr(_owner)] = 1\n  if not _owner:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor2[addr(_owner)]\n\ndef addMinter(address _minter): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  if not _minter:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  if stor1[addr(_minter)]:\n      revert with 0, 'Roles: account already has role'\n  stor1[addr(_minter)] = 1\n  if not _minter:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor1[addr(_minter)]\n\ndef unknown9a3b58c9(addr _param1): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  if not _param1:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  if stor0[addr(_param1)]:\n      revert with 0, 'Roles: account already has role'\n  stor0[addr(_param1)] = 1\n  if not _param1:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[addr(_param1)]\n\ndef unknown5352a839(uint8 _param1): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  require _param1 <= 4\n  uint8(stor4.field_160) = _param1\n  require uint8(stor4.field_160) <= 4\n  log 0xf6f89c57: uint8(stor4.field_160)\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  uint8(stor4.field_168) = 1\n  require uint8(stor4.field_168) <= 5\n  log 0x9e37d684: uint8(stor4.field_168)\n\ndef unknown356282bf(addr _param1, uint256 _param2, uint256 _param3, uint8 _param4, uint8 _param5): # not payable\n  require calldata.size - 4 >= 160\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor1[caller]\n  require not uint8(stor3.field_0)\n  require _param1\n  require _param2 <= unknown0f42c61d[addr(_param1)]\n  require _param4 <= 2\n  require _param4 > 0\n  if _param2 > unknown0f42c61d[addr(_param1)]:\n      revert with 0, 'SafeMath: subtraction overflow'\n  unknown0f42c61d[addr(_param1)] -= _param2\n  if _param2 > stor6:\n      revert with 0, 'SafeMath: subtraction overflow'\n  stor6 -= _param2\n  require uint8(stor4.field_160) <= 4\n  require uint8(stor4.field_168) <= 5\n  require _param4 <= 2\n  require ext_code.size(addr(stor4.field_0))\n  call addr(stor4.field_0).0xc8c4a80a with:\n       gas gas_remaining wei\n      args addr(_param1), _param3, uint8(stor4.field_0), uint8(stor4.field_0), _param4 << 248, _param5\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  log 0xe5c9ed74: unknown0f42c61d[addr(_param1)], _param1\n  return ext_call.return_data[0], ext_call.return_data[32]\n\ndef unknown3bdafc43(addr _param1): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor2[caller]\n  require _param1 != caller\n  if not _param1:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  if not _param1:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  if not stor0[addr(_param1)]:\n      if not _param1:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      34,\n                      0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                      mem[198 len 30]\n      if not stor1[addr(_param1)]:\n          require stor2[addr(_param1)]\n          if not _param1:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          34,\n                          0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                          mem[198 len 30]\n          if not stor2[addr(_param1)]:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          33,\n                          0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                          mem[197 len 31]\n          stor2[addr(_param1)] = 0\n      else:\n          if not stor1[addr(_param1)]:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          33,\n                          0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                          mem[197 len 31]\n          stor1[addr(_param1)] = 0\n          if not _param1:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          34,\n                          0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                          mem[198 len 30]\n          if stor2[addr(_param1)]:\n              if not _param1:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              34,\n                              0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                              mem[198 len 30]\n              if not stor2[addr(_param1)]:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              33,\n                              0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                              mem[197 len 31]\n              stor2[addr(_param1)] = 0\n  else:\n      if not stor0[addr(_param1)]:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      33,\n                      0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                      mem[197 len 31]\n      stor0[addr(_param1)] = 0\n      if not _param1:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      34,\n                      0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                      mem[198 len 30]\n      if not _param1:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      34,\n                      0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                      mem[198 len 30]\n      if stor1[addr(_param1)]:\n          if not stor1[addr(_param1)]:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          33,\n                          0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                          mem[197 len 31]\n          stor1[addr(_param1)] = 0\n      if stor2[addr(_param1)]:\n          if not _param1:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          34,\n                          0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                          mem[198 len 30]\n          if not stor2[addr(_param1)]:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          33,\n                          0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                          mem[197 len 31]\n          stor2[addr(_param1)] = 0\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: # Palkeoramix decompiler. \n\ndef storage:\n  stor0 is mapping of uint8 at storage 0\n  stor1 is mapping of uint8 at storage 1\n  stor2 is mapping of uint8 at storage 2\n  stor3 is bool at storage 3 offset 256\n  stor3 is uint8 at storage 3\n  stor3 is uint8 at storage 3 offset 8\n  stor3 is uint128 at storage 3 offset 176\n  newContractAddress is addr at storage 3 offset 16\n  stor4 is uint8 at storage 4\n  stor4 is uint8 at storage 4 offset 160\n  stor4 is uint8 at storage 4 offset 168\n  stor4 is addr at storage 4\n  unknown0f42c61d is mapping of uint256 at storage 5\n  stor6 is uint256 at storage 6\n\ndef unknown0f42c61d(): # not payable\n  return unknown0f42c61d[caller]\n\ndef paused(): # not payable\n  return bool(uint8(stor3.field_0))\n\ndef newContractAddress(): # not payable\n  return newContractAddress\n\ndef upgraded(): # not payable\n  return bool(uint8(stor3.field_8))\n\n#\n#  Regular functions\n#\n\ndef _fallback() payable: # default function\n  revert\n\ndef unknown9618652c(): # not payable\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor2[caller]\n  if stor6 > eth.balance(this.address):\n      revert with 0, 'SafeMath: subtraction overflow'\n  return (eth.balance(this.address) - stor6)\n\ndef pause(): # not payable\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require not uint8(stor3.field_0)\n  uint8(stor3.field_0) = 1\n  log 0xab35696f \n\ndef deposit() payable: \n  require not uint8(stor3.field_0)\n  require call.value > 0\n  if call.value + unknown0f42c61d[caller] < unknown0f42c61d[caller]:\n      revert with 0, 'SafeMath: addition overflow'\n  unknown0f42c61d[caller] += call.value\n  if call.value + stor6 < stor6:\n      revert with 0, 'SafeMath: addition overflow'\n  stor6 += call.value\n  log 0xe5c9ed74: unknown0f42c61d[caller], caller\n\ndef unpause(): # not payable\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  uint8(stor3.field_0) = 0\n  log 0xe5e3b3fb \n\ndef unknown0b4005e3(): # not payable\n  require unknown0f42c61d[caller]\n  require eth.balance(this.address) >= unknown0f42c61d[caller]\n  unknown0f42c61d[caller] = 0\n  if unknown0f42c61d[caller] > stor6:\n      revert with 0, 'SafeMath: subtraction overflow'\n  stor6 -= unknown0f42c61d[caller]\n  call caller with:\n     value unknown0f42c61d[caller] wei\n       gas 2300 * is_zero(value) wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  log 0xe5c9ed74: 0, caller\n  return unknown0f42c61d[caller]\n\ndef unknown1d946cc4(uint8 _param1): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  require _param1 <= 5\n  uint8(stor4.field_168) = _param1\n  require uint8(stor4.field_168) <= 5\n  log 0x9e37d684: uint8(stor4.field_168)\n\ndef unknown8b2b303c(): # not payable\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor2[caller]\n  if stor6 > eth.balance(this.address):\n      revert with 0, 'SafeMath: subtraction overflow'\n  require eth.balance(this.address) - stor6 > 0\n  call caller with:\n     value eth.balance(this.address) - stor6 wei\n       gas 2300 * is_zero(value) wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  log 0xdaa02d44: (eth.balance(this.address) - stor6), caller\n  return (eth.balance(this.address) - stor6)\n\ndef upgradeContract(address _v2Address): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  require _v2Address\n  uint8(stor3.field_8) = 1\n  newContractAddress = _v2Address\n  Mask(80, 0, stor3.field_176) = 0\n  stor3.field_256 % 1 = 0\n  log ContractUpgrade(address newContract=_v2Address)\n\ndef unknown5fdc4ec6(addr _param1): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  require ext_code.size(_param1)\n  static call _param1.0x950699fe with:\n          gas gas_remaining wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  require ext_call.return_data[0]\n  addr(stor4.field_0) = _param1\n  log 0x703bc787: _param1\n\ndef addOwner(address _owner): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  if not _owner:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  if stor2[addr(_owner)]:\n      revert with 0, 'Roles: account already has role'\n  stor2[addr(_owner)] = 1\n  if not _owner:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor2[addr(_owner)]\n\ndef addMinter(address _minter): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  if not _minter:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  if stor1[addr(_minter)]:\n      revert with 0, 'Roles: account already has role'\n  stor1[addr(_minter)] = 1\n  if not _minter:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor1[addr(_minter)]\n\ndef unknown9a3b58c9(addr _param1): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  if not _param1:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  if stor0[addr(_param1)]:\n      revert with 0, 'Roles: account already has role'\n  stor0[addr(_param1)] = 1\n  if not _param1:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[addr(_param1)]\n\ndef unknown5352a839(uint8 _param1): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  require _param1 <= 4\n  uint8(stor4.field_160) = _param1\n  require uint8(stor4.field_160) <= 4\n  log 0xf6f89c57: uint8(stor4.field_160)\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  uint8(stor4.field_168) = 1\n  require uint8(stor4.field_168) <= 5\n  log 0x9e37d684: uint8(stor4.field_168)\n\ndef unknown356282bf(addr _param1, uint256 _param2, uint256 _param3, uint8 _param4, uint8 _param5): # not payable\n  require calldata.size - 4 >= 160\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor1[caller]\n  require not uint8(stor3.field_0)\n  require _param1\n  require _param2 <= unknown0f42c61d[addr(_param1)]\n  require _param4 <= 2\n  require _param4 > 0\n  if _param2 > unknown0f42c61d[addr(_param1)]:\n      revert with 0, 'SafeMath: subtraction overflow'\n  unknown0f42c61d[addr(_param1)] -= _param2\n  if _param2 > stor6:\n      revert with 0, 'SafeMath: subtraction overflow'\n  stor6 -= _param2\n  require uint8(stor4.field_160) <= 4\n  require uint8(stor4.field_168) <= 5\n  require _param4 <= 2\n  require ext_code.size(addr(stor4.field_0))\n  call addr(stor4.field_0).0xc8c4a80a with:\n       gas gas_remaining wei\n      args addr(_param1), _param3, uint8(stor4.field_0), uint8(stor4.field_0), _param4 << 248, _param5\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  log 0xe5c9ed74: unknown0f42c61d[addr(_param1)], _param1\n  return ext_call.return_data[0], ext_call.return_data[32]\n\ndef unknown3bdafc43(addr _param1): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor2[caller]\n  require _param1 != caller\n  if not _param1:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  if not _param1:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  if not stor0[addr(_param1)]:\n      if not _param1:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      34,\n                      0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                      mem[198 len 30]\n      if not stor1[addr(_param1)]:\n          require stor2[addr(_param1)]\n          if not _param1:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          34,\n                          0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                          mem[198 len 30]\n          if not stor2[addr(_param1)]:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          33,\n                          0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                          mem[197 len 31]\n          stor2[addr(_param1)] = 0\n      else:\n          if not stor1[addr(_param1)]:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          33,\n                          0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                          mem[197 len 31]\n          stor1[addr(_param1)] = 0\n          if not _param1:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          34,\n                          0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                          mem[198 len 30]\n          if stor2[addr(_param1)]:\n              if not _param1:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              34,\n                              0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                              mem[198 len 30]\n              if not stor2[addr(_param1)]:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              33,\n                              0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                              mem[197 len 31]\n              stor2[addr(_param1)] = 0\n  else:\n      if not stor0[addr(_param1)]:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      33,\n                      0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                      mem[197 len 31]\n      stor0[addr(_param1)] = 0\n      if not _param1:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      34,\n                      0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                      mem[198 len 30]\n      if not _param1:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      34,\n                      0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                      mem[198 len 30]\n      if stor1[addr(_param1)]:\n          if not stor1[addr(_param1)]:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          33,\n                          0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                          mem[197 len 31]\n          stor1[addr(_param1)] = 0\n      if stor2[addr(_param1)]:\n          if not _param1:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          34,\n                          0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                          mem[198 len 30]\n          if not stor2[addr(_param1)]:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          33,\n                          0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                          mem[197 len 31]\n          stor2[addr(_param1)] = 0\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: # Palkeoramix decompiler. \n\ndef storage:\n  stor0 is mapping of uint8 at storage 0\n  stor1 is mapping of uint8 at storage 1\n  stor2 is mapping of uint8 at storage 2\n  stor3 is bool at storage 3 offset 256\n  stor3 is uint8 at storage 3\n  stor3 is uint8 at storage 3 offset 8\n  stor3 is uint128 at storage 3 offset 176\n  newContractAddress is addr at storage 3 offset 16\n  stor4 is uint8 at storage 4\n  stor4 is uint8 at storage 4 offset 160\n  stor4 is uint8 at storage 4 offset 168\n  stor4 is addr at storage 4\n  unknown0f42c61d is mapping of uint256 at storage 5\n  stor6 is uint256 at storage 6\n\ndef unknown0f42c61d(): # not payable\n  return unknown0f42c61d[caller]\n\ndef paused(): # not payable\n  return bool(uint8(stor3.field_0))\n\ndef newContractAddress(): # not payable\n  return newContractAddress\n\ndef upgraded(): # not payable\n  return bool(uint8(stor3.field_8))\n\n#\n#  Regular functions\n#\n\ndef _fallback() payable: # default function\n  revert\n\ndef unknown9618652c(): # not payable\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor2[caller]\n  if stor6 > eth.balance(this.address):\n      revert with 0, 'SafeMath: subtraction overflow'\n  return (eth.balance(this.address) - stor6)\n\ndef pause(): # not payable\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require not uint8(stor3.field_0)\n  uint8(stor3.field_0) = 1\n  log 0xab35696f \n\ndef deposit() payable: \n  require not uint8(stor3.field_0)\n  require call.value > 0\n  if call.value + unknown0f42c61d[caller] < unknown0f42c61d[caller]:\n      revert with 0, 'SafeMath: addition overflow'\n  unknown0f42c61d[caller] += call.value\n  if call.value + stor6 < stor6:\n      revert with 0, 'SafeMath: addition overflow'\n  stor6 += call.value\n  log 0xe5c9ed74: unknown0f42c61d[caller], caller\n\ndef unpause(): # not payable\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  uint8(stor3.field_0) = 0\n  log 0xe5e3b3fb \n\ndef unknown0b4005e3(): # not payable\n  require unknown0f42c61d[caller]\n  require eth.balance(this.address) >= unknown0f42c61d[caller]\n  unknown0f42c61d[caller] = 0\n  if unknown0f42c61d[caller] > stor6:\n      revert with 0, 'SafeMath: subtraction overflow'\n  stor6 -= unknown0f42c61d[caller]\n  call caller with:\n     value unknown0f42c61d[caller] wei\n       gas 2300 * is_zero(value) wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  log 0xe5c9ed74: 0, caller\n  return unknown0f42c61d[caller]\n\ndef unknown1d946cc4(uint8 _param1): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  require _param1 <= 5\n  uint8(stor4.field_168) = _param1\n  require uint8(stor4.field_168) <= 5\n  log 0x9e37d684: uint8(stor4.field_168)\n\ndef unknown8b2b303c(): # not payable\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor2[caller]\n  if stor6 > eth.balance(this.address):\n      revert with 0, 'SafeMath: subtraction overflow'\n  require eth.balance(this.address) - stor6 > 0\n  call caller with:\n     value eth.balance(this.address) - stor6 wei\n       gas 2300 * is_zero(value) wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  log 0xdaa02d44: (eth.balance(this.address) - stor6), caller\n  return (eth.balance(this.address) - stor6)\n\ndef upgradeContract(address _v2Address): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  require _v2Address\n  uint8(stor3.field_8) = 1\n  newContractAddress = _v2Address\n  Mask(80, 0, stor3.field_176) = 0\n  stor3.field_256 % 1 = 0\n  log ContractUpgrade(address newContract=_v2Address)\n\ndef unknown5fdc4ec6(addr _param1): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  require ext_code.size(_param1)\n  static call _param1.0x950699fe with:\n          gas gas_remaining wei\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 32\n  require ext_call.return_data[0]\n  addr(stor4.field_0) = _param1\n  log 0x703bc787: _param1\n\ndef addOwner(address _owner): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  if not _owner:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  if stor2[addr(_owner)]:\n      revert with 0, 'Roles: account already has role'\n  stor2[addr(_owner)] = 1\n  if not _owner:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor2[addr(_owner)]\n\ndef addMinter(address _minter): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  if not _minter:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  if stor1[addr(_minter)]:\n      revert with 0, 'Roles: account already has role'\n  stor1[addr(_minter)] = 1\n  if not _minter:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor1[addr(_minter)]\n\ndef unknown9a3b58c9(addr _param1): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  if not _param1:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  if stor0[addr(_param1)]:\n      revert with 0, 'Roles: account already has role'\n  stor0[addr(_param1)] = 1\n  if not _param1:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[addr(_param1)]\n\ndef unknown5352a839(uint8 _param1): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  require _param1 <= 4\n  uint8(stor4.field_160) = _param1\n  require uint8(stor4.field_160) <= 4\n  log 0xf6f89c57: uint8(stor4.field_160)\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor0[caller]\n  require uint8(stor3.field_0)\n  require not uint8(stor3.field_8)\n  uint8(stor4.field_168) = 1\n  require uint8(stor4.field_168) <= 5\n  log 0x9e37d684: uint8(stor4.field_168)\n\ndef unknown356282bf(addr _param1, uint256 _param2, uint256 _param3, uint8 _param4, uint8 _param5): # not payable\n  require calldata.size - 4 >= 160\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor1[caller]\n  require not uint8(stor3.field_0)\n  require _param1\n  require _param2 <= unknown0f42c61d[addr(_param1)]\n  require _param4 <= 2\n  require _param4 > 0\n  if _param2 > unknown0f42c61d[addr(_param1)]:\n      revert with 0, 'SafeMath: subtraction overflow'\n  unknown0f42c61d[addr(_param1)] -= _param2\n  if _param2 > stor6:\n      revert with 0, 'SafeMath: subtraction overflow'\n  stor6 -= _param2\n  require uint8(stor4.field_160) <= 4\n  require uint8(stor4.field_168) <= 5\n  require _param4 <= 2\n  require ext_code.size(addr(stor4.field_0))\n  call addr(stor4.field_0).0xc8c4a80a with:\n       gas gas_remaining wei\n      args addr(_param1), _param3, uint8(stor4.field_0), uint8(stor4.field_0), _param4 << 248, _param5\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  require return_data.size >= 64\n  log 0xe5c9ed74: unknown0f42c61d[addr(_param1)], _param1\n  return ext_call.return_data[0], ext_call.return_data[32]\n\ndef unknown3bdafc43(addr _param1): # not payable\n  require calldata.size - 4 >= 32\n  if not caller:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  require stor2[caller]\n  require _param1 != caller\n  if not _param1:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  if not _param1:\n      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                  32,\n                  34,\n                  0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                  mem[198 len 30]\n  if not stor0[addr(_param1)]:\n      if not _param1:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      34,\n                      0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                      mem[198 len 30]\n      if not stor1[addr(_param1)]:\n          require stor2[addr(_param1)]\n          if not _param1:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          34,\n                          0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                          mem[198 len 30]\n          if not stor2[addr(_param1)]:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          33,\n                          0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                          mem[197 len 31]\n          stor2[addr(_param1)] = 0\n      else:\n          if not stor1[addr(_param1)]:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          33,\n                          0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                          mem[197 len 31]\n          stor1[addr(_param1)] = 0\n          if not _param1:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          34,\n                          0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                          mem[198 len 30]\n          if stor2[addr(_param1)]:\n              if not _param1:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              34,\n                              0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                              mem[198 len 30]\n              if not stor2[addr(_param1)]:\n                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                              32,\n                              33,\n                              0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                              mem[197 len 31]\n              stor2[addr(_param1)] = 0\n  else:\n      if not stor0[addr(_param1)]:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      33,\n                      0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                      mem[197 len 31]\n      stor0[addr(_param1)] = 0\n      if not _param1:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      34,\n                      0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                      mem[198 len 30]\n      if not _param1:\n          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                      32,\n                      34,\n                      0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                      mem[198 len 30]\n      if stor1[addr(_param1)]:\n          if not stor1[addr(_param1)]:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          33,\n                          0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                          mem[197 len 31]\n          stor1[addr(_param1)] = 0\n      if stor2[addr(_param1)]:\n          if not _param1:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          34,\n                          0x65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573,\n                          mem[198 len 30]\n          if not stor2[addr(_param1)]:\n              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, \n                          32,\n                          33,\n                          0xfe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c,\n                          mem[197 len 31]\n          stor2[addr(_param1)] = 0\n\n.",
	"status": "1",
	"time_cost": 70.0223491191864,
	"usage": {
		"completion_tokens": 645,
		"prompt_tokens": 5511,
		"total_tokens": 6156
	}
}