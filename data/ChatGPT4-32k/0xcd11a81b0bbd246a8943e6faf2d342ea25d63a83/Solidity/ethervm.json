{
	"address": "0xcd11a81b0bbd246a8943e6faf2d342ea25d63a83",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "The decompiled code provided is complex and contains EVM bytecode specific operations that cannot be directly represented in Solidity. However, based on the decompiled code, it seems like the contract is implementing a functionality similar to an ERC20 token. Here is a simplified version of a Solidity contract that has similar features:\n\n```solidity\npragma solidity ^0.6.0;\n\ncontract MyToken {\n    mapping(address => uint256) private _balances;\n    mapping(address => mapping(address => uint256)) private _allowances;\n    \n    uint256 private _totalSupply;\n    address private _owner;\n\n    constructor() public {\n        _owner = msg.sender;\n    }\n    \n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        require(msg.sender != address(0), \"ERC20: sender address is zero address\");\n        require(recipient != address(0), \"ERC20: recipient address is zero address\");\n        require(_balances[msg.sender] >= amount, \"ERC20: sender doesn't have enough tokens\");\n\n        _balances[msg.sender] -= amount;\n        _balances[recipient] += amount;\n\n        return true;\n    }\n    \n    function mint(address account, uint256 amount) public {\n        require(msg.sender == _owner, \"ERC20: Only owner can mint tokens\");\n        \n        _totalSupply += amount;\n        _balances[account] += amount;\n    }\n    \n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n    \n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = value;\n    }\n}\n```\n\nPlease note that the above code is a simplification and doesn't cover all the logic in the provided decompiled code. Certain aspects like the assembly level operations, and complex logic conditions are not represented in the Solidity code. The actual contract from the decompiled code is likely implementing more complex functionality.",
				"role": "assistant"
			}
		}
	],
	"created": 1700474846,
	"id": "chatcmpl-8MvTaoI8RhNcIKa3QsKKeYBBypydo",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }\n    \n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] != 0xd547cfb7) {\n            if (memory[0x00:0x20] != 0xc87b56dd) {\n                if (memory[0x00:0x20] != 0x4f558e79) {\n                    if (memory[0x00:0x20] != 0x18160ddd) {\n                        if (memory[0x00:0x20] != 0xf1753550) {\n                            if (memory[0x00:0x20] != 0x70a08231) {\n                                if (memory[0x00:0x20] != 0x6352211e) {\n                                    if (memory[0x00:0x20] != 0x4f6ccce7) {\n                                        if (memory[0x00:0x20] != 0x2f745c59) {\n                                            if (memory[0x00:0x20] != 0x081812fc) {\n                                                if (memory[0x00:0x20] != 0x3bd18a3b) {\n                                                    if (memory[0x00:0x20] != 0x6efacc1c) {\n                                                        if (memory[0x00:0x20] != 0xe985e9c5) {\n                                                            if (0x00) {\n                                                                memory[0x0180:0x01a0] = var-1;\n                                                                memory[0x0140:0x0160] = var-2;\n                                                                memory[0x0160:0x0180] = var-3;\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                                memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0x01c0:0x01e0] = memory[0x01a0:0x01c0] == memory[0x0140:0x0160];\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x04;\n                                                                memory[0x01e0:0x0200] = memory[0x0140:0x0160] == storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                var temp46 = keccak256(memory[0xc0:0x0100]);\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = temp46;\n                                                                memory[0x0200:0x0220] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0x00:0x20] = memory[0x01c0:0x01e0] | memory[0x01e0:0x0200] | memory[0x0200:0x0220];\n                                                                var-3 = memory[0x00:0x20];\n                                                                // Error: Could not resolve jump destination!\n                                                            } else if (0x00) {\n                                                                memory[0x0180:0x01a0] = var-1;\n                                                                memory[0x0140:0x0160] = var-2;\n                                                                memory[0x0160:0x0180] = var-3;\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var temp41 = memory[0x0140:0x0160];\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                                storage[keccak256(memory[0xc0:0x0100])] = temp41;\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x0a;\n                                                                var temp42 = storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x07;\n                                                                storage[keccak256(memory[0xc0:0x0100])] = temp42;\n                                                                var temp43 = memory[0x0160:0x0180];\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x09;\n                                                                var temp44 = keccak256(memory[0xc0:0x0100]);\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x0a;\n                                                                memory[0xe0:0x0100] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0xc0:0xe0] = temp44;\n                                                                storage[keccak256(memory[0xc0:0x0100])] = temp43;\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x0a;\n                                                                var-3 = keccak256(memory[0xc0:0x0100]);\n                                                                var temp45 = storage[var-3];\n                                                                var-2 = temp45;\n                                                                var-1 = 0x01;\n                                                            \n                                                                if (var-2 + var-1 < var-2) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                storage[var-3] = var-2 + var-1;\n                                                                // Error: Could not resolve jump destination!\n                                                            } else if (0x00) {\n                                                                memory[0x0180:0x01a0] = var-1;\n                                                                memory[0x0140:0x0160] = var-2;\n                                                                memory[0x0160:0x0180] = var-3;\n                                                                var temp35 = memory[0x0140:0x0160];\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0x0100])] != temp35) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                                storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x07;\n                                                                memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x0a;\n                                                                var-3 = storage[keccak256(memory[0xc0:0x0100])];\n                                                                var-2 = 0x01;\n                                                            \n                                                                if (var-3 < var-2) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0x01c0:0x01e0] = var-3 - var-2;\n                                                                var temp36 = memory[0x01a0:0x01c0] < memory[0x01c0:0x01e0];\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x0a;\n                                                            \n                                                                if (!((storage[keccak256(memory[0xc0:0x0100])] > 0x01) & temp36)) {\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x0a;\n                                                                    var-3 = keccak256(memory[0xc0:0x0100]);\n                                                                    var-2 = storage[var-3];\n                                                                    var-1 = 0x01;\n                                                                \n                                                                    if (var-2 < var-1) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                label_0A57:\n                                                                    storage[var-3] = var-2 - var-1;\n                                                                    // Error: Could not resolve jump destination!\n                                                                } else {\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x09;\n                                                                    var temp37 = keccak256(memory[0xc0:0x0100]);\n                                                                    memory[0xe0:0x0100] = memory[0x01c0:0x01e0];\n                                                                    memory[0xc0:0xe0] = temp37;\n                                                                    memory[0x01e0:0x0200] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                    var temp38 = memory[0x01e0:0x0200];\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x09;\n                                                                    var temp39 = keccak256(memory[0xc0:0x0100]);\n                                                                    memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n                                                                    memory[0xc0:0xe0] = temp39;\n                                                                    storage[keccak256(memory[0xc0:0x0100])] = temp38;\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x09;\n                                                                    var temp40 = keccak256(memory[0xc0:0x0100]);\n                                                                    memory[0xe0:0x0100] = memory[0x01c0:0x01e0];\n                                                                    memory[0xc0:0xe0] = temp40;\n                                                                    storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x0a;\n                                                                    var-3 = keccak256(memory[0xc0:0x0100]);\n                                                                    var-2 = storage[var-3];\n                                                                    var-1 = 0x01;\n                                                                \n                                                                    if (var-2 >= var-1) { goto label_0A57; }\n                                                                    else { revert(memory[0x00:0x00]); }\n                                                                }\n                                                            } else if (0x00) {\n                                                                memory[0x0180:0x01a0] = var-1;\n                                                                memory[0x0140:0x0160] = var-2;\n                                                                memory[0x0160:0x0180] = var-3;\n                                                                var temp34 = memory[0x0140:0x0160];\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0x0100])] != temp34) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x04;\n                                                            \n                                                                if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) {\n                                                                    // Error: Could not resolve jump destination!\n                                                                } else {\n                                                                    memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                    memory[0xc0:0xe0] = 0x04;\n                                                                    storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                                    // Error: Could not resolve jump destination!\n                                                                }\n                                                            } else if (0x00) {\n                                                                // Error: StackRead before write???\n                                                                var var-1;\n                                                                // Error: StackRead before write???\n                                                                var var-3;\n                                                                // Error: StackRead before write???\n                                                                var var-2;\n                                                                // Error: StackRead before write???\n                                                                var var-5;\n                                                                // Error: StackRead before write???\n                                                                var var-4;\n                                                                memory[0x01c0:0x01e0] = var-1;\n                                                                memory[0x0140:0x0160] = var-2;\n                                                                memory[0x0160:0x0180] = var-3;\n                                                                memory[0x0180:0x01a0] = var-4;\n                                                                memory[0x01a0:0x01c0] = var-5;\n                                                                var-5 = memory[0x0140:0x0160];\n                                                                var-4 = memory[0x0160:0x0180];\n                                                                var-3 = memory[0x0180:0x01a0];\n                                                                var-2 = memory[0x01a0:0x01c0];\n                                                                var-1 = memory[0x01c0:0x01e0];\n                                                                memory[0x0200:0x0220] = 0x4cdc9549;\n                                                                memory[0x0220:0x0240] = memory[0x01a0:0x01c0];\n                                                                memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n                                                                var0 = memory[0x0240:0x0260];\n                                                                var1 = memory[0x0220:0x0240];\n                                                                var2 = 0x06;\n                                                                // Unhandled termination\n                                                            } else if (memory[0x00:0x20] != 0x23b872dd) {\n                                                                if (memory[0x00:0x20] == 0x42842e0e) {\n                                                                    memory[0x0580:0x05a0] = 0x00;\n                                                                    var0 = 0x0580;\n                                                                    var temp32 = memory[var0:var0 + 0x20] + 0x20;\n                                                                    var1 = temp32;\n                                                                    var temp33;\n                                                                    temp33, memory[0x0140:0x0140 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                                \n                                                                    if (temp33) { goto label_0E20; }\n                                                                    else { revert(memory[0x00:0x00]); }\n                                                                } else if (memory[0x00:0x20] == 0xb88d4fde) {\n                                                                    memory[0x0140:0x0560] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0420];\n                                                                \n                                                                    if (msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x20] > 0x0400) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x0140:0x0580] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0440];\n                                                                    goto label_0E20;\n                                                                } else if (0x00) {\n                                                                label_0E20:\n                                                                \n                                                                    if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var0 = msg.data[0x04:0x24];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var0 = msg.data[0x24:0x44];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x05c0:0x05e0] = 0x0140;\n                                                                    var0 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                                    memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                                \n                                                                    if (memory[0x05c0:0x05e0] >= 0x05c0) {\n                                                                    label_0E79:\n                                                                        memory[0x05e0:0x0600] = 0x092863fe;\n                                                                        memory[0x0600:0x0620] = msg.data[0x04:0x24];\n                                                                        memory[0x0620:0x0640] = msg.data[0x24:0x44];\n                                                                        memory[0x0640:0x0660] = msg.data[0x44:0x64];\n                                                                        memory[0x0660:0x0680] = msg.sender;\n                                                                        var1 = memory[0x0660:0x0680];\n                                                                        var2 = memory[0x0640:0x0660];\n                                                                        var3 = memory[0x0620:0x0640];\n                                                                        var4 = memory[0x0600:0x0620];\n                                                                        var5 = 0x06;\n                                                                        // Unhandled termination\n                                                                    } else {\n                                                                    label_0E75:\n                                                                        var1 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                                        memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                                    \n                                                                        if (memory[0x05c0:0x05e0] >= 0x05c0) { goto label_0E79; }\n                                                                        else { goto label_0E75; }\n                                                                    }\n                                                                } else if (memory[0x00:0x20] != 0x095ea7b3) {\n                                                                    if (memory[0x00:0x20] != 0x6de53001) {\n                                                                        if (memory[0x00:0x20] != 0xa22cb465) {\n                                                                            if (memory[0x00:0x20] != 0xf4dfe7c5) {\n                                                                                if (memory[0x00:0x20] != 0xfe475f6b) {\n                                                                                    if (memory[0x00:0x20] != 0x655391c9) {\n                                                                                        if (memory[0x00:0x20] != 0xbc04f0af) {\n                                                                                            if (memory[0x00:0x20] != 0x06fdde03) {\n                                                                                                if (memory[0x00:0x20] != 0x95d89b41) {\n                                                                                                    if (memory[0x00:0x20] != 0x313ce567) { revert(memory[0x00:0x00]); }\n                                                                                                \n                                                                                                    if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                                                \n                                                                                                    memory[0x00:0x20] = storage[0x02];\n                                                                                                    return memory[0x00:0x20];\n                                                                                                } else if (!msg.value) {\n                                                                                                    var var0 = 0x01;\n                                                                                                    memory[0xc0:0xe0] = var0;\n                                                                                                    var var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                                    var var2 = 0x0180;\n                                                                                                    var temp0 = storage[var1] + 0x20;\n                                                                                                    var var3 = temp0;\n                                                                                                    var var4 = 0x0120;\n                                                                                                    memory[var4:var4 + 0x20] = 0x00;\n                                                                                                    var var5 = 0x02;\n                                                                                                \n                                                                                                    if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_17E4; }\n                                                                                                \n                                                                                                label_17E8:\n                                                                                                    memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                                    var temp1 = var4;\n                                                                                                    var temp2 = memory[temp1:temp1 + 0x20] + 0x01;\n                                                                                                    memory[temp1:temp1 + 0x20] = temp2;\n                                                                                                \n                                                                                                    if (var5 == temp2) { goto label_180A; }\n                                                                                                \n                                                                                                    if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_17E8; }\n                                                                                                \n                                                                                                label_17E4:\n                                                                                                \n                                                                                                label_180A:\n                                                                                                    var temp3 = memory[0x0180:0x01a0];\n                                                                                                    var temp4 = (temp3 + 0x1f) - temp3 - 0x01 % 0x20 - temp3;\n                                                                                                    memory[temp3 + 0x01a0:temp3 + 0x01a0 + temp4] = msg.data[msg.data.length:msg.data.length + temp4];\n                                                                                                    memory[0x0160:0x0180] = 0x20;\n                                                                                                    var temp5 = memory[0x0180:0x01a0] + 0x40;\n                                                                                                    return memory[0x0160:0x0160 + (temp5 + 0x1f) - temp5 - 0x01 % 0x20];\n                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                            } else if (!msg.value) {\n                                                                                                var0 = 0x00;\n                                                                                                memory[0xc0:0xe0] = var0;\n                                                                                                var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                                var2 = 0x0180;\n                                                                                                var temp6 = storage[var1] + 0x20;\n                                                                                                var3 = temp6;\n                                                                                                var4 = 0x0120;\n                                                                                                memory[var4:var4 + 0x20] = 0x00;\n                                                                                                var5 = 0x02;\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_1730; }\n                                                                                            \n                                                                                            label_1734:\n                                                                                                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                                var temp7 = var4;\n                                                                                                var temp8 = memory[temp7:temp7 + 0x20] + 0x01;\n                                                                                                memory[temp7:temp7 + 0x20] = temp8;\n                                                                                            \n                                                                                                if (var5 == temp8) { goto label_1756; }\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_1734; }\n                                                                                            \n                                                                                            label_1730:\n                                                                                            \n                                                                                            label_1756:\n                                                                                                var temp9 = memory[0x0180:0x01a0];\n                                                                                                var temp10 = (temp9 + 0x1f) - temp9 - 0x01 % 0x20 - temp9;\n                                                                                                memory[temp9 + 0x01a0:temp9 + 0x01a0 + temp10] = msg.data[msg.data.length:msg.data.length + temp10];\n                                                                                                memory[0x0160:0x0180] = 0x20;\n                                                                                                var temp11 = memory[0x0180:0x01a0] + 0x40;\n                                                                                                return memory[0x0160:0x0160 + (temp11 + 0x1f) - temp11 - 0x01 % 0x20];\n                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                        } else if (!msg.value) {\n                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                        \n                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            if (msg.sender != storage[0x0d]) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            if (msg.data[0x24:0x44] < 0x28) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            var0 = msg.data[0x24:0x44];\n                                                                                            var1 = 0x28;\n                                                                                            var2 = var1;\n                                                                                        \n                                                                                            if (!var2) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x0140:0x0160] = var0 / var2;\n                                                                                            var0 = msg.data[0x24:0x44];\n                                                                                            var1 = memory[0x0140:0x0160];\n                                                                                        \n                                                                                            if (var0 < var1) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x0160:0x0180] = var0 - var1;\n                                                                                        \n                                                                                            if (!address(storage[0x0d]).code.length) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            if (!(address(this) ~ storage[0x0d])) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x01a0:0x01c0] = 0xa9059cbb;\n                                                                                            memory[0x01c0:0x01e0] = storage[0x0e];\n                                                                                            memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n                                                                                            var temp12;\n                                                                                            temp12, memory[0x0240:0x0260] = address(storage[0x0d]).call.gas(msg.gas)(memory[0x01bc:0x0200]);\n                                                                                        \n                                                                                            if (!temp12) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x0180:0x01a0] = memory[0x0240:0x0260];\n                                                                                        \n                                                                                            if (!address(storage[0x0d]).code.length) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            if (!(address(this) ~ storage[0x0d])) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x0260:0x0280] = 0x42966c68;\n                                                                                            memory[0x0280:0x02a0] = memory[0x0160:0x0180];\n                                                                                            var temp13;\n                                                                                            temp13, memory[0x00:0x00] = address(storage[0x0d]).call.gas(msg.gas)(memory[0x027c:0x02a0]);\n                                                                                        \n                                                                                            if (!temp13) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            if (!memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            var0 = 0x0f;\n                                                                                            var temp14 = storage[var0];\n                                                                                            var1 = temp14;\n                                                                                            var2 = 0x01;\n                                                                                        \n                                                                                            if (var1 + var2 < var1) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            storage[var0] = var1 + var2;\n                                                                                            var temp15 = memory[0x0160:0x0180];\n                                                                                            memory[0xe0:0x0100] = storage[0x0f];\n                                                                                            memory[0xc0:0xe0] = 0x06;\n                                                                                            storage[keccak256(memory[0xc0:0x0100])] = temp15;\n                                                                                            memory[0x02e0:0x0300] = 0x0140;\n                                                                                            var0 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                            memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                                        \n                                                                                            if (memory[0x02e0:0x0300] >= 0x02e0) {\n                                                                                            label_1683:\n                                                                                                memory[0x0300:0x0320] = 0xff5ce378;\n                                                                                                memory[0x0320:0x0340] = msg.data[0x04:0x24];\n                                                                                                memory[0x0340:0x0360] = storage[0x0f];\n                                                                                                var1 = memory[0x0340:0x0360];\n                                                                                                var2 = memory[0x0320:0x0340];\n                                                                                                var3 = 0x06;\n                                                                                                // Unhandled termination\n                                                                                            } else {\n                                                                                            label_167F:\n                                                                                                var1 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                                memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                                            \n                                                                                                if (memory[0x02e0:0x0300] >= 0x02e0) { goto label_1683; }\n                                                                                                else { goto label_167F; }\n                                                                                            }\n                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                    } else if (!msg.value) {\n                                                                                        memory[0x0140:0x01a0] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x60];\n                                                                                    \n                                                                                        if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x40) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (msg.sender != storage[0x0e]) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        var0 = 0x0140;\n                                                                                        var1 = var0;\n                                                                                        memory[0xc0:0xe0] = 0x10;\n                                                                                        var2 = keccak256(memory[0xc0:0xe0]);\n                                                                                        var temp16 = memory[var1:var1 + 0x20] + 0x20;\n                                                                                        var3 = temp16;\n                                                                                        var4 = 0x0120;\n                                                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                                                        var5 = 0x03;\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_14CB; }\n                                                                                    \n                                                                                    label_14CF:\n                                                                                        storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                                        var temp17 = var4;\n                                                                                        var temp18 = memory[temp17:temp17 + 0x20] + 0x01;\n                                                                                        memory[temp17:temp17 + 0x20] = temp18;\n                                                                                    \n                                                                                        if (var5 == temp18) { stop(); }\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_14CF; }\n                                                                                    \n                                                                                    label_14CB:\n                                                                                        stop();\n                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                } else if (!msg.value) {\n                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                \n                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                \n                                                                                    if (msg.sender != storage[0x0e]) { revert(memory[0x00:0x00]); }\n                                                                                \n                                                                                    storage[0x0e] = msg.data[0x04:0x24];\n                                                                                    stop();\n                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                            } else if (!msg.value) {\n                                                                                memory[0x0140:0x0260] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x0120];\n                                                                            \n                                                                                if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x0100) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                                memory[0xc0:0xe0] = 0x03;\n                                                                            \n                                                                                if (storage[keccak256(memory[0xc0:0x0100])] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x02c0:0x02e0] = 0x00;\n                                                                            \n                                                                                if (!(keccak256(memory[0x0140 + 0x20:0x0140 + 0x20 + memory[0x0140:0x0160]]) ~ keccak256(memory[0x02c0 + 0x20:0x02c0 + 0x20 + memory[0x02c0:0x02e0]]))) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0340:0x0360] = 0x00;\n                                                                                var0 = keccak256(memory[0x0340 + 0x20:0x0340 + 0x20 + memory[0x0340:0x0360]]);\n                                                                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                                memory[0xc0:0xe0] = 0x05;\n                                                                                var1 = keccak256(memory[0xc0:0x0100]);\n                                                                                var2 = var1;\n                                                                                memory[0xc0:0xe0] = var2;\n                                                                                var3 = keccak256(memory[0xc0:0xe0]);\n                                                                                var4 = 0x0380;\n                                                                                var temp19 = storage[var3] + 0x20;\n                                                                                var5 = temp19;\n                                                                                var var6 = 0x0120;\n                                                                                memory[var6:var6 + 0x20] = 0x00;\n                                                                                var var7 = 0x09;\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 > var5) { goto label_1297; }\n                                                                            \n                                                                            label_129B:\n                                                                                memory[var4 + memory[0x0120:0x0140] * 0x20:var4 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var3 + memory[0x0120:0x0140]];\n                                                                                var temp20 = var6;\n                                                                                var temp21 = memory[temp20:temp20 + 0x20] + 0x01;\n                                                                                memory[temp20:temp20 + 0x20] = temp21;\n                                                                            \n                                                                                if (var7 == temp21) { goto label_12BD; }\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 <= var5) { goto label_129B; }\n                                                                            \n                                                                            label_1297:\n                                                                            \n                                                                            label_12BD:\n                                                                                memory[0xc0:0xe0] = var1;\n                                                                            \n                                                                                if (keccak256(memory[0x03a0:0x03a0 + storage[keccak256(memory[0xc0:0xe0])]]) != var0) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0xe0:0x0100] = keccak256(memory[0x0160:0x0160 + memory[0x0140:0x0160]]);\n                                                                                memory[0xc0:0xe0] = 0x08;\n                                                                            \n                                                                                if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                var0 = 0x0140;\n                                                                                var1 = var0;\n                                                                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                                memory[0xc0:0xe0] = 0x05;\n                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                var2 = keccak256(memory[0xc0:0xe0]);\n                                                                                var temp22 = memory[var1:var1 + 0x20] + 0x20;\n                                                                                var3 = temp22;\n                                                                                var4 = 0x0120;\n                                                                                memory[var4:var4 + 0x20] = 0x00;\n                                                                                var5 = 0x09;\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_1339; }\n                                                                            \n                                                                            label_133D:\n                                                                                storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                                var temp23 = var4;\n                                                                                var temp24 = memory[temp23:temp23 + 0x20] + 0x01;\n                                                                                memory[temp23:temp23 + 0x20] = temp24;\n                                                                            \n                                                                                if (var5 == temp24) { goto label_135F; }\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_133D; }\n                                                                            \n                                                                            label_1339:\n                                                                            \n                                                                            label_135F:\n                                                                                memory[0x04c0:0x04e0] = 0x20;\n                                                                                memory[0x0500:0x0520] = memory[0x04c0:0x04e0];\n                                                                                var0 = 0x0140;\n                                                                                var temp25 = memory[var0:var0 + 0x20] + 0x20;\n                                                                                var1 = temp25;\n                                                                                var temp26;\n                                                                                temp26, memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                                            \n                                                                                if (!temp26) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                var temp27 = memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + 0x20];\n                                                                                var temp28 = (temp27 + 0x1f) - temp27 - 0x01 % 0x20 - temp27;\n                                                                                memory[memory[0x04c0:0x04e0] + 0x0500 + 0x20 + temp27:memory[0x04c0:0x04e0] + 0x0500 + 0x20 + temp27 + temp28] = msg.data[msg.data.length:msg.data.length + temp28];\n                                                                                var temp29 = memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + 0x20];\n                                                                                memory[0x04c0:0x04e0] = memory[0x04c0:0x04e0] + ((temp29 + 0x1f) - temp29 - 0x01 % 0x20) + 0x20;\n                                                                                log(memory[0x0500:0x0500 + memory[0x04c0:0x04e0]], [0xba7bf0735ae69190abdc36da67134e0ba2ac14f12f5e54cf4bced3bf11c298cf, msg.sender, msg.data[0x24:0x44]]);\n                                                                                stop();\n                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                        } else if (!msg.value) {\n                                                                            var0 = msg.data[0x04:0x24];\n                                                                        \n                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            var0 = msg.data[0x24:0x44];\n                                                                        \n                                                                            if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            if (!(msg.data[0x04:0x24] ~ msg.sender)) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            memory[0xe0:0x0100] = msg.sender;\n                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                            var temp30 = keccak256(memory[0xc0:0x0100]);\n                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                            memory[0xc0:0xe0] = temp30;\n                                                                            storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x24:0x44];\n                                                                            memory[0x0140:0x0160] = msg.data[0x24:0x44];\n                                                                            log(memory[0x0140:0x0160], [0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, msg.sender, msg.data[0x04:0x24]]);\n                                                                            stop();\n                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                    } else if (!msg.value) {\n                                                                        var0 = msg.data[0x04:0x24];\n                                                                    \n                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x03;\n                                                                        memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                    \n                                                                        if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        if (memory[0x0140:0x0160] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        var0 = memory[0x0140:0x0160];\n                                                                        memory[0x0180:0x01a0] = 0x91127c1f;\n                                                                        memory[0x01a0:0x01c0] = msg.data[0x04:0x24];\n                                                                        memory[0x01c0:0x01e0] = msg.data[0x24:0x44];\n                                                                        var1 = memory[0x01c0:0x01e0];\n                                                                        var2 = memory[0x01a0:0x01c0];\n                                                                        var3 = 0x06;\n                                                                        // Unhandled termination\n                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                } else if (!msg.value) {\n                                                                    var0 = msg.data[0x04:0x24];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x03;\n                                                                    memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                \n                                                                    if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    if (!(msg.data[0x04:0x24] ~ memory[0x0140:0x0160])) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x03;\n                                                                    memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0x0100])] == msg.sender;\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                    var temp31 = keccak256(memory[0xc0:0x0100]);\n                                                                    memory[0xe0:0x0100] = msg.sender;\n                                                                    memory[0xc0:0xe0] = temp31;\n                                                                    memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                \n                                                                    if (!(memory[0x0160:0x0180] | memory[0x0180:0x01a0])) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x04;\n                                                                    storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x04:0x24];\n                                                                    log(memory[0x00:0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, memory[0x0140:0x0160], msg.data[0x04:0x24], msg.data[0x24:0x44]]);\n                                                                    stop();\n                                                                } else { revert(memory[0x00:0x00]); }\n                                                            } else if (!msg.value) {\n                                                                var0 = msg.data[0x04:0x24];\n                                                            \n                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var0 = msg.data[0x24:0x44];\n                                                            \n                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0x0140:0x0160] = 0x092863fe;\n                                                                memory[0x0160:0x0180] = msg.data[0x04:0x24];\n                                                                memory[0x0180:0x01a0] = msg.data[0x24:0x44];\n                                                                memory[0x01a0:0x01c0] = msg.data[0x44:0x64];\n                                                                memory[0x01c0:0x01e0] = msg.sender;\n                                                                var0 = memory[0x01c0:0x01e0];\n                                                                var1 = memory[0x01a0:0x01c0];\n                                                                var2 = memory[0x0180:0x01a0];\n                                                                var3 = memory[0x0160:0x0180];\n                                                                var4 = 0x06;\n                                                                // Unhandled termination\n                                                            } else { revert(memory[0x00:0x00]); }\n                                                        } else if (!msg.value) {\n                                                            var0 = msg.data[0x04:0x24];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            var0 = msg.data[0x24:0x44];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                            memory[0xc0:0xe0] = 0x0b;\n                                                            var temp47 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = temp47;\n                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                            return memory[0x00:0x20];\n                                                        } else { revert(memory[0x00:0x00]); }\n                                                    } else if (!msg.value) {\n                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                    \n                                                        if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                        memory[0xc0:0xe0] = 0x05;\n                                                        var0 = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0xc0:0xe0] = var0;\n                                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                                        var2 = 0x01a0;\n                                                        var temp48 = storage[var1] + 0x20;\n                                                        var3 = temp48;\n                                                        var4 = 0x0120;\n                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                        var5 = 0x09;\n                                                    \n                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_06E1; }\n                                                    \n                                                    label_06E5:\n                                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                        var temp49 = var4;\n                                                        var temp50 = memory[temp49:temp49 + 0x20] + 0x01;\n                                                        memory[temp49:temp49 + 0x20] = temp50;\n                                                    \n                                                        if (var5 == temp50) { goto label_0707; }\n                                                    \n                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_06E5; }\n                                                    \n                                                    label_06E1:\n                                                    \n                                                    label_0707:\n                                                        var temp51 = memory[0x01a0:0x01c0];\n                                                        var temp52 = (temp51 + 0x1f) - temp51 - 0x01 % 0x20 - temp51;\n                                                        memory[temp51 + 0x01c0:temp51 + 0x01c0 + temp52] = msg.data[msg.data.length:msg.data.length + temp52];\n                                                        memory[0x0180:0x01a0] = 0x20;\n                                                        var temp53 = memory[0x01a0:0x01c0] + 0x40;\n                                                        return memory[0x0180:0x0180 + (temp53 + 0x1f) - temp53 - 0x01 % 0x20];\n                                                    } else { revert(memory[0x00:0x00]); }\n                                                } else if (!msg.value) {\n                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                    memory[0xc0:0xe0] = 0x03;\n                                                \n                                                    if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                \n                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                    memory[0xc0:0xe0] = 0x06;\n                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                    return memory[0x00:0x20];\n                                                } else { revert(memory[0x00:0x00]); }\n                                            } else if (!msg.value) {\n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x03;\n                                            \n                                                if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                            \n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x04;\n                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                return memory[0x00:0x20];\n                                            } else { revert(memory[0x00:0x00]); }\n                                        } else if (!msg.value) {\n                                            var0 = msg.data[0x04:0x24];\n                                        \n                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                        \n                                            if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x0a;\n                                        \n                                            if (msg.data[0x24:0x44] >= storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x09;\n                                            var temp54 = keccak256(memory[0xc0:0x0100]);\n                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                            memory[0xc0:0xe0] = temp54;\n                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                            return memory[0x00:0x20];\n                                        } else { revert(memory[0x00:0x00]); }\n                                    } else if (!msg.value) {\n                                        if (msg.data[0x04:0x24] >= storage[0x0f]) { revert(memory[0x00:0x00]); }\n                                    \n                                        var temp55 = msg.data[0x04:0x24];\n                                        var0 = temp55;\n                                        var1 = 0x01;\n                                    \n                                        if (var0 + var1 < var0) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0x00:0x20] = var0 + var1;\n                                        return memory[0x00:0x20];\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                    memory[0xc0:0xe0] = 0x03;\n                                    memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                \n                                    if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                \n                                    memory[0x00:0x20] = memory[0x0140:0x0160];\n                                    return memory[0x00:0x20];\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                var0 = msg.data[0x04:0x24];\n                            \n                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                            \n                                if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                memory[0xc0:0xe0] = 0x0a;\n                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                            memory[0xc0:0xe0] = 0x0c;\n                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                            return memory[0x00:0x20];\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0x00:0x20] = storage[0x0f];\n                        return memory[0x00:0x20];\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                    memory[0xc0:0xe0] = 0x03;\n                    memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                    memory[0x00:0x20] = memory[0x0140:0x0160] != 0x00;\n                    return memory[0x00:0x20];\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                memory[0xc0:0xe0] = 0x03;\n            \n                if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n            \n                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                memory[0xc0:0xe0] = 0x05;\n                var0 = keccak256(memory[0xc0:0x0100]);\n                memory[0xc0:0xe0] = var0;\n                var1 = keccak256(memory[0xc0:0xe0]);\n                var2 = 0x0140;\n                var temp56 = storage[var1] + 0x20;\n                var3 = temp56;\n                var4 = 0x0120;\n                memory[var4:var4 + 0x20] = 0x00;\n                var5 = 0x09;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_01C7; }\n            \n            label_01CB:\n                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                var temp57 = var4;\n                var temp58 = memory[temp57:temp57 + 0x20] + 0x01;\n                memory[temp57:temp57 + 0x20] = temp58;\n            \n                if (var5 == temp58) { goto label_01ED; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_01CB; }\n            \n            label_01C7:\n            \n            label_01ED:\n                memory[0x02c0:0x02e0] = 0x00;\n            \n                if (keccak256(memory[0x0140 + 0x20:0x0140 + 0x20 + memory[0x0140:0x0160]]) != keccak256(memory[0x02c0 + 0x20:0x02c0 + 0x20 + memory[0x02c0:0x02e0]])) {\n                    var0 = 0x00;\n                    var1 = 0x10;\n                    memory[0xc0:0xe0] = var1;\n                    var2 = keccak256(memory[0xc0:0xe0]) + 0x01;\n                    var3 = var0 + 0x03c0 + 0x20;\n                    memory[0xc0:0xe0] = var1;\n                    var temp59 = storage[keccak256(memory[0xc0:0xe0])];\n                    var4 = temp59;\n                    var5 = 0x0120;\n                    memory[var5:var5 + 0x20] = 0x00;\n                    var6 = 0x02;\n                \n                    if (memory[0x0120:0x0140] * 0x20 > var4) { goto label_02EE; }\n                \n                label_02F2:\n                    memory[var3 + memory[0x0120:0x0140] * 0x20:var3 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var2 + memory[0x0120:0x0140]];\n                    var temp60 = var5;\n                    var temp61 = memory[temp60:temp60 + 0x20] + 0x01;\n                    memory[temp60:temp60 + 0x20] = temp61;\n                \n                    if (var6 == temp61) { goto label_0314; }\n                \n                    if (memory[0x0120:0x0140] * 0x20 <= var4) { goto label_02F2; }\n                \n                label_02EE:\n                \n                label_0314:\n                    memory[0xc0:0xe0] = var1;\n                    var temp62 = var0 + storage[keccak256(memory[0xc0:0xe0])];\n                    memory[temp62 + 0x03c0 + 0x20:temp62 + 0x03c0 + 0x20 + 0x0100] = address(0x04).call.gas(msg.gas)(memory[0x0160:0x0260]);\n                    memory[0x03c0:0x03e0] = temp62 + memory[0x0140:0x0160];\n                    var0 = 0x03c0;\n                    var temp63 = memory[var0:var0 + 0x20] + 0x20;\n                    var1 = temp63;\n                    var temp64;\n                    temp64, memory[0x0580:0x0580 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                \n                    if (!temp64) { revert(memory[0x00:0x00]); }\n                \n                    var temp65 = memory[0x0580:0x05a0];\n                    var temp66 = (temp65 + 0x1f) - temp65 - 0x01 % 0x20 - temp65;\n                    memory[temp65 + 0x05a0:temp65 + 0x05a0 + temp66] = msg.data[msg.data.length:msg.data.length + temp66];\n                    memory[0x0560:0x0580] = 0x20;\n                    var temp67 = memory[0x0580:0x05a0] + 0x40;\n                    return memory[0x0560:0x0560 + (temp67 + 0x1f) - temp67 - 0x01 % 0x20];\n                } else {\n                    var0 = 0x10;\n                    memory[0xc0:0xe0] = var0;\n                    var1 = keccak256(memory[0xc0:0xe0]);\n                    var2 = 0x0340;\n                    var temp68 = storage[var1] + 0x20;\n                    var3 = temp68;\n                    var4 = 0x0120;\n                    memory[var4:var4 + 0x20] = 0x00;\n                    var5 = 0x03;\n                \n                    if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0245; }\n                \n                label_0249:\n                    memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                    var temp69 = var4;\n                    var temp70 = memory[temp69:temp69 + 0x20] + 0x01;\n                    memory[temp69:temp69 + 0x20] = temp70;\n                \n                    if (var5 == temp70) { goto label_026B; }\n                \n                    if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0249; }\n                \n                label_0245:\n                \n                label_026B:\n                    var temp71 = memory[0x0340:0x0360];\n                    var temp72 = (temp71 + 0x1f) - temp71 - 0x01 % 0x20 - temp71;\n                    memory[temp71 + 0x0360:temp71 + 0x0360 + temp72] = msg.data[msg.data.length:msg.data.length + temp72];\n                    memory[0x0320:0x0340] = 0x20;\n                    var temp73 = memory[0x0340:0x0360] + 0x40;\n                    return memory[0x0320:0x0320 + (temp73 + 0x1f) - temp73 - 0x01 % 0x20];\n                }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            var0 = 0x10;\n            memory[0xc0:0xe0] = var0;\n            var1 = keccak256(memory[0xc0:0xe0]);\n            var2 = 0x0180;\n            var temp74 = storage[var1] + 0x20;\n            var3 = temp74;\n            var4 = 0x0120;\n            memory[var4:var4 + 0x20] = 0x00;\n            var5 = 0x03;\n        \n            if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_00E8; }\n        \n        label_00EC:\n            memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n            var temp75 = var4;\n            var temp76 = memory[temp75:temp75 + 0x20] + 0x01;\n            memory[temp75:temp75 + 0x20] = temp76;\n        \n            if (var5 == temp76) { goto label_010E; }\n        \n            if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_00EC; }\n        \n        label_00E8:\n        \n        label_010E:\n            var temp77 = memory[0x0180:0x01a0];\n            var temp78 = (temp77 + 0x1f) - temp77 - 0x01 % 0x20 - temp77;\n            memory[temp77 + 0x01a0:temp77 + 0x01a0 + temp78] = msg.data[msg.data.length:msg.data.length + temp78];\n            memory[0x0160:0x0180] = 0x20;\n            var temp79 = memory[0x0180:0x01a0] + 0x40;\n            return memory[0x0160:0x0160 + (temp79 + 0x1f) - temp79 - 0x01 % 0x20];\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }\n    \n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] != 0xd547cfb7) {\n            if (memory[0x00:0x20] != 0xc87b56dd) {\n                if (memory[0x00:0x20] != 0x4f558e79) {\n                    if (memory[0x00:0x20] != 0x18160ddd) {\n                        if (memory[0x00:0x20] != 0xf1753550) {\n                            if (memory[0x00:0x20] != 0x70a08231) {\n                                if (memory[0x00:0x20] != 0x6352211e) {\n                                    if (memory[0x00:0x20] != 0x4f6ccce7) {\n                                        if (memory[0x00:0x20] != 0x2f745c59) {\n                                            if (memory[0x00:0x20] != 0x081812fc) {\n                                                if (memory[0x00:0x20] != 0x3bd18a3b) {\n                                                    if (memory[0x00:0x20] != 0x6efacc1c) {\n                                                        if (memory[0x00:0x20] != 0xe985e9c5) {\n                                                            if (0x00) {\n                                                                memory[0x0180:0x01a0] = var-1;\n                                                                memory[0x0140:0x0160] = var-2;\n                                                                memory[0x0160:0x0180] = var-3;\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                                memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0x01c0:0x01e0] = memory[0x01a0:0x01c0] == memory[0x0140:0x0160];\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x04;\n                                                                memory[0x01e0:0x0200] = memory[0x0140:0x0160] == storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                var temp46 = keccak256(memory[0xc0:0x0100]);\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = temp46;\n                                                                memory[0x0200:0x0220] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0x00:0x20] = memory[0x01c0:0x01e0] | memory[0x01e0:0x0200] | memory[0x0200:0x0220];\n                                                                var-3 = memory[0x00:0x20];\n                                                                // Error: Could not resolve jump destination!\n                                                            } else if (0x00) {\n                                                                memory[0x0180:0x01a0] = var-1;\n                                                                memory[0x0140:0x0160] = var-2;\n                                                                memory[0x0160:0x0180] = var-3;\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var temp41 = memory[0x0140:0x0160];\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                                storage[keccak256(memory[0xc0:0x0100])] = temp41;\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x0a;\n                                                                var temp42 = storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x07;\n                                                                storage[keccak256(memory[0xc0:0x0100])] = temp42;\n                                                                var temp43 = memory[0x0160:0x0180];\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x09;\n                                                                var temp44 = keccak256(memory[0xc0:0x0100]);\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x0a;\n                                                                memory[0xe0:0x0100] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0xc0:0xe0] = temp44;\n                                                                storage[keccak256(memory[0xc0:0x0100])] = temp43;\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x0a;\n                                                                var-3 = keccak256(memory[0xc0:0x0100]);\n                                                                var temp45 = storage[var-3];\n                                                                var-2 = temp45;\n                                                                var-1 = 0x01;\n                                                            \n                                                                if (var-2 + var-1 < var-2) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                storage[var-3] = var-2 + var-1;\n                                                                // Error: Could not resolve jump destination!\n                                                            } else if (0x00) {\n                                                                memory[0x0180:0x01a0] = var-1;\n                                                                memory[0x0140:0x0160] = var-2;\n                                                                memory[0x0160:0x0180] = var-3;\n                                                                var temp35 = memory[0x0140:0x0160];\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0x0100])] != temp35) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                                storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x07;\n                                                                memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x0a;\n                                                                var-3 = storage[keccak256(memory[0xc0:0x0100])];\n                                                                var-2 = 0x01;\n                                                            \n                                                                if (var-3 < var-2) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0x01c0:0x01e0] = var-3 - var-2;\n                                                                var temp36 = memory[0x01a0:0x01c0] < memory[0x01c0:0x01e0];\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x0a;\n                                                            \n                                                                if (!((storage[keccak256(memory[0xc0:0x0100])] > 0x01) & temp36)) {\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x0a;\n                                                                    var-3 = keccak256(memory[0xc0:0x0100]);\n                                                                    var-2 = storage[var-3];\n                                                                    var-1 = 0x01;\n                                                                \n                                                                    if (var-2 < var-1) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                label_0A57:\n                                                                    storage[var-3] = var-2 - var-1;\n                                                                    // Error: Could not resolve jump destination!\n                                                                } else {\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x09;\n                                                                    var temp37 = keccak256(memory[0xc0:0x0100]);\n                                                                    memory[0xe0:0x0100] = memory[0x01c0:0x01e0];\n                                                                    memory[0xc0:0xe0] = temp37;\n                                                                    memory[0x01e0:0x0200] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                    var temp38 = memory[0x01e0:0x0200];\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x09;\n                                                                    var temp39 = keccak256(memory[0xc0:0x0100]);\n                                                                    memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n                                                                    memory[0xc0:0xe0] = temp39;\n                                                                    storage[keccak256(memory[0xc0:0x0100])] = temp38;\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x09;\n                                                                    var temp40 = keccak256(memory[0xc0:0x0100]);\n                                                                    memory[0xe0:0x0100] = memory[0x01c0:0x01e0];\n                                                                    memory[0xc0:0xe0] = temp40;\n                                                                    storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x0a;\n                                                                    var-3 = keccak256(memory[0xc0:0x0100]);\n                                                                    var-2 = storage[var-3];\n                                                                    var-1 = 0x01;\n                                                                \n                                                                    if (var-2 >= var-1) { goto label_0A57; }\n                                                                    else { revert(memory[0x00:0x00]); }\n                                                                }\n                                                            } else if (0x00) {\n                                                                memory[0x0180:0x01a0] = var-1;\n                                                                memory[0x0140:0x0160] = var-2;\n                                                                memory[0x0160:0x0180] = var-3;\n                                                                var temp34 = memory[0x0140:0x0160];\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0x0100])] != temp34) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x04;\n                                                            \n                                                                if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) {\n                                                                    // Error: Could not resolve jump destination!\n                                                                } else {\n                                                                    memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                    memory[0xc0:0xe0] = 0x04;\n                                                                    storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                                    // Error: Could not resolve jump destination!\n                                                                }\n                                                            } else if (0x00) {\n                                                                // Error: StackRead before write???\n                                                                var var-1;\n                                                                // Error: StackRead before write???\n                                                                var var-3;\n                                                                // Error: StackRead before write???\n                                                                var var-2;\n                                                                // Error: StackRead before write???\n                                                                var var-5;\n                                                                // Error: StackRead before write???\n                                                                var var-4;\n                                                                memory[0x01c0:0x01e0] = var-1;\n                                                                memory[0x0140:0x0160] = var-2;\n                                                                memory[0x0160:0x0180] = var-3;\n                                                                memory[0x0180:0x01a0] = var-4;\n                                                                memory[0x01a0:0x01c0] = var-5;\n                                                                var-5 = memory[0x0140:0x0160];\n                                                                var-4 = memory[0x0160:0x0180];\n                                                                var-3 = memory[0x0180:0x01a0];\n                                                                var-2 = memory[0x01a0:0x01c0];\n                                                                var-1 = memory[0x01c0:0x01e0];\n                                                                memory[0x0200:0x0220] = 0x4cdc9549;\n                                                                memory[0x0220:0x0240] = memory[0x01a0:0x01c0];\n                                                                memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n                                                                var0 = memory[0x0240:0x0260];\n                                                                var1 = memory[0x0220:0x0240];\n                                                                var2 = 0x06;\n                                                                // Unhandled termination\n                                                            } else if (memory[0x00:0x20] != 0x23b872dd) {\n                                                                if (memory[0x00:0x20] == 0x42842e0e) {\n                                                                    memory[0x0580:0x05a0] = 0x00;\n                                                                    var0 = 0x0580;\n                                                                    var temp32 = memory[var0:var0 + 0x20] + 0x20;\n                                                                    var1 = temp32;\n                                                                    var temp33;\n                                                                    temp33, memory[0x0140:0x0140 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                                \n                                                                    if (temp33) { goto label_0E20; }\n                                                                    else { revert(memory[0x00:0x00]); }\n                                                                } else if (memory[0x00:0x20] == 0xb88d4fde) {\n                                                                    memory[0x0140:0x0560] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0420];\n                                                                \n                                                                    if (msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x20] > 0x0400) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x0140:0x0580] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0440];\n                                                                    goto label_0E20;\n                                                                } else if (0x00) {\n                                                                label_0E20:\n                                                                \n                                                                    if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var0 = msg.data[0x04:0x24];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var0 = msg.data[0x24:0x44];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x05c0:0x05e0] = 0x0140;\n                                                                    var0 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                                    memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                                \n                                                                    if (memory[0x05c0:0x05e0] >= 0x05c0) {\n                                                                    label_0E79:\n                                                                        memory[0x05e0:0x0600] = 0x092863fe;\n                                                                        memory[0x0600:0x0620] = msg.data[0x04:0x24];\n                                                                        memory[0x0620:0x0640] = msg.data[0x24:0x44];\n                                                                        memory[0x0640:0x0660] = msg.data[0x44:0x64];\n                                                                        memory[0x0660:0x0680] = msg.sender;\n                                                                        var1 = memory[0x0660:0x0680];\n                                                                        var2 = memory[0x0640:0x0660];\n                                                                        var3 = memory[0x0620:0x0640];\n                                                                        var4 = memory[0x0600:0x0620];\n                                                                        var5 = 0x06;\n                                                                        // Unhandled termination\n                                                                    } else {\n                                                                    label_0E75:\n                                                                        var1 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                                        memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                                    \n                                                                        if (memory[0x05c0:0x05e0] >= 0x05c0) { goto label_0E79; }\n                                                                        else { goto label_0E75; }\n                                                                    }\n                                                                } else if (memory[0x00:0x20] != 0x095ea7b3) {\n                                                                    if (memory[0x00:0x20] != 0x6de53001) {\n                                                                        if (memory[0x00:0x20] != 0xa22cb465) {\n                                                                            if (memory[0x00:0x20] != 0xf4dfe7c5) {\n                                                                                if (memory[0x00:0x20] != 0xfe475f6b) {\n                                                                                    if (memory[0x00:0x20] != 0x655391c9) {\n                                                                                        if (memory[0x00:0x20] != 0xbc04f0af) {\n                                                                                            if (memory[0x00:0x20] != 0x06fdde03) {\n                                                                                                if (memory[0x00:0x20] != 0x95d89b41) {\n                                                                                                    if (memory[0x00:0x20] != 0x313ce567) { revert(memory[0x00:0x00]); }\n                                                                                                \n                                                                                                    if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                                                \n                                                                                                    memory[0x00:0x20] = storage[0x02];\n                                                                                                    return memory[0x00:0x20];\n                                                                                                } else if (!msg.value) {\n                                                                                                    var var0 = 0x01;\n                                                                                                    memory[0xc0:0xe0] = var0;\n                                                                                                    var var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                                    var var2 = 0x0180;\n                                                                                                    var temp0 = storage[var1] + 0x20;\n                                                                                                    var var3 = temp0;\n                                                                                                    var var4 = 0x0120;\n                                                                                                    memory[var4:var4 + 0x20] = 0x00;\n                                                                                                    var var5 = 0x02;\n                                                                                                \n                                                                                                    if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_17E4; }\n                                                                                                \n                                                                                                label_17E8:\n                                                                                                    memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                                    var temp1 = var4;\n                                                                                                    var temp2 = memory[temp1:temp1 + 0x20] + 0x01;\n                                                                                                    memory[temp1:temp1 + 0x20] = temp2;\n                                                                                                \n                                                                                                    if (var5 == temp2) { goto label_180A; }\n                                                                                                \n                                                                                                    if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_17E8; }\n                                                                                                \n                                                                                                label_17E4:\n                                                                                                \n                                                                                                label_180A:\n                                                                                                    var temp3 = memory[0x0180:0x01a0];\n                                                                                                    var temp4 = (temp3 + 0x1f) - temp3 - 0x01 % 0x20 - temp3;\n                                                                                                    memory[temp3 + 0x01a0:temp3 + 0x01a0 + temp4] = msg.data[msg.data.length:msg.data.length + temp4];\n                                                                                                    memory[0x0160:0x0180] = 0x20;\n                                                                                                    var temp5 = memory[0x0180:0x01a0] + 0x40;\n                                                                                                    return memory[0x0160:0x0160 + (temp5 + 0x1f) - temp5 - 0x01 % 0x20];\n                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                            } else if (!msg.value) {\n                                                                                                var0 = 0x00;\n                                                                                                memory[0xc0:0xe0] = var0;\n                                                                                                var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                                var2 = 0x0180;\n                                                                                                var temp6 = storage[var1] + 0x20;\n                                                                                                var3 = temp6;\n                                                                                                var4 = 0x0120;\n                                                                                                memory[var4:var4 + 0x20] = 0x00;\n                                                                                                var5 = 0x02;\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_1730; }\n                                                                                            \n                                                                                            label_1734:\n                                                                                                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                                var temp7 = var4;\n                                                                                                var temp8 = memory[temp7:temp7 + 0x20] + 0x01;\n                                                                                                memory[temp7:temp7 + 0x20] = temp8;\n                                                                                            \n                                                                                                if (var5 == temp8) { goto label_1756; }\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_1734; }\n                                                                                            \n                                                                                            label_1730:\n                                                                                            \n                                                                                            label_1756:\n                                                                                                var temp9 = memory[0x0180:0x01a0];\n                                                                                                var temp10 = (temp9 + 0x1f) - temp9 - 0x01 % 0x20 - temp9;\n                                                                                                memory[temp9 + 0x01a0:temp9 + 0x01a0 + temp10] = msg.data[msg.data.length:msg.data.length + temp10];\n                                                                                                memory[0x0160:0x0180] = 0x20;\n                                                                                                var temp11 = memory[0x0180:0x01a0] + 0x40;\n                                                                                                return memory[0x0160:0x0160 + (temp11 + 0x1f) - temp11 - 0x01 % 0x20];\n                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                        } else if (!msg.value) {\n                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                        \n                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            if (msg.sender != storage[0x0d]) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            if (msg.data[0x24:0x44] < 0x28) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            var0 = msg.data[0x24:0x44];\n                                                                                            var1 = 0x28;\n                                                                                            var2 = var1;\n                                                                                        \n                                                                                            if (!var2) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x0140:0x0160] = var0 / var2;\n                                                                                            var0 = msg.data[0x24:0x44];\n                                                                                            var1 = memory[0x0140:0x0160];\n                                                                                        \n                                                                                            if (var0 < var1) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x0160:0x0180] = var0 - var1;\n                                                                                        \n                                                                                            if (!address(storage[0x0d]).code.length) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            if (!(address(this) ~ storage[0x0d])) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x01a0:0x01c0] = 0xa9059cbb;\n                                                                                            memory[0x01c0:0x01e0] = storage[0x0e];\n                                                                                            memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n                                                                                            var temp12;\n                                                                                            temp12, memory[0x0240:0x0260] = address(storage[0x0d]).call.gas(msg.gas)(memory[0x01bc:0x0200]);\n                                                                                        \n                                                                                            if (!temp12) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x0180:0x01a0] = memory[0x0240:0x0260];\n                                                                                        \n                                                                                            if (!address(storage[0x0d]).code.length) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            if (!(address(this) ~ storage[0x0d])) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x0260:0x0280] = 0x42966c68;\n                                                                                            memory[0x0280:0x02a0] = memory[0x0160:0x0180];\n                                                                                            var temp13;\n                                                                                            temp13, memory[0x00:0x00] = address(storage[0x0d]).call.gas(msg.gas)(memory[0x027c:0x02a0]);\n                                                                                        \n                                                                                            if (!temp13) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            if (!memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            var0 = 0x0f;\n                                                                                            var temp14 = storage[var0];\n                                                                                            var1 = temp14;\n                                                                                            var2 = 0x01;\n                                                                                        \n                                                                                            if (var1 + var2 < var1) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            storage[var0] = var1 + var2;\n                                                                                            var temp15 = memory[0x0160:0x0180];\n                                                                                            memory[0xe0:0x0100] = storage[0x0f];\n                                                                                            memory[0xc0:0xe0] = 0x06;\n                                                                                            storage[keccak256(memory[0xc0:0x0100])] = temp15;\n                                                                                            memory[0x02e0:0x0300] = 0x0140;\n                                                                                            var0 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                            memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                                        \n                                                                                            if (memory[0x02e0:0x0300] >= 0x02e0) {\n                                                                                            label_1683:\n                                                                                                memory[0x0300:0x0320] = 0xff5ce378;\n                                                                                                memory[0x0320:0x0340] = msg.data[0x04:0x24];\n                                                                                                memory[0x0340:0x0360] = storage[0x0f];\n                                                                                                var1 = memory[0x0340:0x0360];\n                                                                                                var2 = memory[0x0320:0x0340];\n                                                                                                var3 = 0x06;\n                                                                                                // Unhandled termination\n                                                                                            } else {\n                                                                                            label_167F:\n                                                                                                var1 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                                memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                                            \n                                                                                                if (memory[0x02e0:0x0300] >= 0x02e0) { goto label_1683; }\n                                                                                                else { goto label_167F; }\n                                                                                            }\n                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                    } else if (!msg.value) {\n                                                                                        memory[0x0140:0x01a0] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x60];\n                                                                                    \n                                                                                        if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x40) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (msg.sender != storage[0x0e]) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        var0 = 0x0140;\n                                                                                        var1 = var0;\n                                                                                        memory[0xc0:0xe0] = 0x10;\n                                                                                        var2 = keccak256(memory[0xc0:0xe0]);\n                                                                                        var temp16 = memory[var1:var1 + 0x20] + 0x20;\n                                                                                        var3 = temp16;\n                                                                                        var4 = 0x0120;\n                                                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                                                        var5 = 0x03;\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_14CB; }\n                                                                                    \n                                                                                    label_14CF:\n                                                                                        storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                                        var temp17 = var4;\n                                                                                        var temp18 = memory[temp17:temp17 + 0x20] + 0x01;\n                                                                                        memory[temp17:temp17 + 0x20] = temp18;\n                                                                                    \n                                                                                        if (var5 == temp18) { stop(); }\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_14CF; }\n                                                                                    \n                                                                                    label_14CB:\n                                                                                        stop();\n                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                } else if (!msg.value) {\n                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                \n                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                \n                                                                                    if (msg.sender != storage[0x0e]) { revert(memory[0x00:0x00]); }\n                                                                                \n                                                                                    storage[0x0e] = msg.data[0x04:0x24];\n                                                                                    stop();\n                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                            } else if (!msg.value) {\n                                                                                memory[0x0140:0x0260] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x0120];\n                                                                            \n                                                                                if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x0100) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                                memory[0xc0:0xe0] = 0x03;\n                                                                            \n                                                                                if (storage[keccak256(memory[0xc0:0x0100])] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x02c0:0x02e0] = 0x00;\n                                                                            \n                                                                                if (!(keccak256(memory[0x0140 + 0x20:0x0140 + 0x20 + memory[0x0140:0x0160]]) ~ keccak256(memory[0x02c0 + 0x20:0x02c0 + 0x20 + memory[0x02c0:0x02e0]]))) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0340:0x0360] = 0x00;\n                                                                                var0 = keccak256(memory[0x0340 + 0x20:0x0340 + 0x20 + memory[0x0340:0x0360]]);\n                                                                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                                memory[0xc0:0xe0] = 0x05;\n                                                                                var1 = keccak256(memory[0xc0:0x0100]);\n                                                                                var2 = var1;\n                                                                                memory[0xc0:0xe0] = var2;\n                                                                                var3 = keccak256(memory[0xc0:0xe0]);\n                                                                                var4 = 0x0380;\n                                                                                var temp19 = storage[var3] + 0x20;\n                                                                                var5 = temp19;\n                                                                                var var6 = 0x0120;\n                                                                                memory[var6:var6 + 0x20] = 0x00;\n                                                                                var var7 = 0x09;\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 > var5) { goto label_1297; }\n                                                                            \n                                                                            label_129B:\n                                                                                memory[var4 + memory[0x0120:0x0140] * 0x20:var4 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var3 + memory[0x0120:0x0140]];\n                                                                                var temp20 = var6;\n                                                                                var temp21 = memory[temp20:temp20 + 0x20] + 0x01;\n                                                                                memory[temp20:temp20 + 0x20] = temp21;\n                                                                            \n                                                                                if (var7 == temp21) { goto label_12BD; }\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 <= var5) { goto label_129B; }\n                                                                            \n                                                                            label_1297:\n                                                                            \n                                                                            label_12BD:\n                                                                                memory[0xc0:0xe0] = var1;\n                                                                            \n                                                                                if (keccak256(memory[0x03a0:0x03a0 + storage[keccak256(memory[0xc0:0xe0])]]) != var0) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0xe0:0x0100] = keccak256(memory[0x0160:0x0160 + memory[0x0140:0x0160]]);\n                                                                                memory[0xc0:0xe0] = 0x08;\n                                                                            \n                                                                                if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                var0 = 0x0140;\n                                                                                var1 = var0;\n                                                                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                                memory[0xc0:0xe0] = 0x05;\n                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                var2 = keccak256(memory[0xc0:0xe0]);\n                                                                                var temp22 = memory[var1:var1 + 0x20] + 0x20;\n                                                                                var3 = temp22;\n                                                                                var4 = 0x0120;\n                                                                                memory[var4:var4 + 0x20] = 0x00;\n                                                                                var5 = 0x09;\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_1339; }\n                                                                            \n                                                                            label_133D:\n                                                                                storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                                var temp23 = var4;\n                                                                                var temp24 = memory[temp23:temp23 + 0x20] + 0x01;\n                                                                                memory[temp23:temp23 + 0x20] = temp24;\n                                                                            \n                                                                                if (var5 == temp24) { goto label_135F; }\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_133D; }\n                                                                            \n                                                                            label_1339:\n                                                                            \n                                                                            label_135F:\n                                                                                memory[0x04c0:0x04e0] = 0x20;\n                                                                                memory[0x0500:0x0520] = memory[0x04c0:0x04e0];\n                                                                                var0 = 0x0140;\n                                                                                var temp25 = memory[var0:var0 + 0x20] + 0x20;\n                                                                                var1 = temp25;\n                                                                                var temp26;\n                                                                                temp26, memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                                            \n                                                                                if (!temp26) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                var temp27 = memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + 0x20];\n                                                                                var temp28 = (temp27 + 0x1f) - temp27 - 0x01 % 0x20 - temp27;\n                                                                                memory[memory[0x04c0:0x04e0] + 0x0500 + 0x20 + temp27:memory[0x04c0:0x04e0] + 0x0500 + 0x20 + temp27 + temp28] = msg.data[msg.data.length:msg.data.length + temp28];\n                                                                                var temp29 = memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + 0x20];\n                                                                                memory[0x04c0:0x04e0] = memory[0x04c0:0x04e0] + ((temp29 + 0x1f) - temp29 - 0x01 % 0x20) + 0x20;\n                                                                                log(memory[0x0500:0x0500 + memory[0x04c0:0x04e0]], [0xba7bf0735ae69190abdc36da67134e0ba2ac14f12f5e54cf4bced3bf11c298cf, msg.sender, msg.data[0x24:0x44]]);\n                                                                                stop();\n                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                        } else if (!msg.value) {\n                                                                            var0 = msg.data[0x04:0x24];\n                                                                        \n                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            var0 = msg.data[0x24:0x44];\n                                                                        \n                                                                            if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            if (!(msg.data[0x04:0x24] ~ msg.sender)) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            memory[0xe0:0x0100] = msg.sender;\n                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                            var temp30 = keccak256(memory[0xc0:0x0100]);\n                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                            memory[0xc0:0xe0] = temp30;\n                                                                            storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x24:0x44];\n                                                                            memory[0x0140:0x0160] = msg.data[0x24:0x44];\n                                                                            log(memory[0x0140:0x0160], [0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, msg.sender, msg.data[0x04:0x24]]);\n                                                                            stop();\n                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                    } else if (!msg.value) {\n                                                                        var0 = msg.data[0x04:0x24];\n                                                                    \n                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x03;\n                                                                        memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                    \n                                                                        if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        if (memory[0x0140:0x0160] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        var0 = memory[0x0140:0x0160];\n                                                                        memory[0x0180:0x01a0] = 0x91127c1f;\n                                                                        memory[0x01a0:0x01c0] = msg.data[0x04:0x24];\n                                                                        memory[0x01c0:0x01e0] = msg.data[0x24:0x44];\n                                                                        var1 = memory[0x01c0:0x01e0];\n                                                                        var2 = memory[0x01a0:0x01c0];\n                                                                        var3 = 0x06;\n                                                                        // Unhandled termination\n                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                } else if (!msg.value) {\n                                                                    var0 = msg.data[0x04:0x24];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x03;\n                                                                    memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                \n                                                                    if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    if (!(msg.data[0x04:0x24] ~ memory[0x0140:0x0160])) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x03;\n                                                                    memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0x0100])] == msg.sender;\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                    var temp31 = keccak256(memory[0xc0:0x0100]);\n                                                                    memory[0xe0:0x0100] = msg.sender;\n                                                                    memory[0xc0:0xe0] = temp31;\n                                                                    memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                \n                                                                    if (!(memory[0x0160:0x0180] | memory[0x0180:0x01a0])) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x04;\n                                                                    storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x04:0x24];\n                                                                    log(memory[0x00:0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, memory[0x0140:0x0160], msg.data[0x04:0x24], msg.data[0x24:0x44]]);\n                                                                    stop();\n                                                                } else { revert(memory[0x00:0x00]); }\n                                                            } else if (!msg.value) {\n                                                                var0 = msg.data[0x04:0x24];\n                                                            \n                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var0 = msg.data[0x24:0x44];\n                                                            \n                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0x0140:0x0160] = 0x092863fe;\n                                                                memory[0x0160:0x0180] = msg.data[0x04:0x24];\n                                                                memory[0x0180:0x01a0] = msg.data[0x24:0x44];\n                                                                memory[0x01a0:0x01c0] = msg.data[0x44:0x64];\n                                                                memory[0x01c0:0x01e0] = msg.sender;\n                                                                var0 = memory[0x01c0:0x01e0];\n                                                                var1 = memory[0x01a0:0x01c0];\n                                                                var2 = memory[0x0180:0x01a0];\n                                                                var3 = memory[0x0160:0x0180];\n                                                                var4 = 0x06;\n                                                                // Unhandled termination\n                                                            } else { revert(memory[0x00:0x00]); }\n                                                        } else if (!msg.value) {\n                                                            var0 = msg.data[0x04:0x24];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            var0 = msg.data[0x24:0x44];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                            memory[0xc0:0xe0] = 0x0b;\n                                                            var temp47 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = temp47;\n                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                            return memory[0x00:0x20];\n                                                        } else { revert(memory[0x00:0x00]); }\n                                                    } else if (!msg.value) {\n                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                    \n                                                        if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                        memory[0xc0:0xe0] = 0x05;\n                                                        var0 = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0xc0:0xe0] = var0;\n                                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                                        var2 = 0x01a0;\n                                                        var temp48 = storage[var1] + 0x20;\n                                                        var3 = temp48;\n                                                        var4 = 0x0120;\n                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                        var5 = 0x09;\n                                                    \n                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_06E1; }\n                                                    \n                                                    label_06E5:\n                                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                        var temp49 = var4;\n                                                        var temp50 = memory[temp49:temp49 + 0x20] + 0x01;\n                                                        memory[temp49:temp49 + 0x20] = temp50;\n                                                    \n                                                        if (var5 == temp50) { goto label_0707; }\n                                                    \n                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_06E5; }\n                                                    \n                                                    label_06E1:\n                                                    \n                                                    label_0707:\n                                                        var temp51 = memory[0x01a0:0x01c0];\n                                                        var temp52 = (temp51 + 0x1f) - temp51 - 0x01 % 0x20 - temp51;\n                                                        memory[temp51 + 0x01c0:temp51 + 0x01c0 + temp52] = msg.data[msg.data.length:msg.data.length + temp52];\n                                                        memory[0x0180:0x01a0] = 0x20;\n                                                        var temp53 = memory[0x01a0:0x01c0] + 0x40;\n                                                        return memory[0x0180:0x0180 + (temp53 + 0x1f) - temp53 - 0x01 % 0x20];\n                                                    } else { revert(memory[0x00:0x00]); }\n                                                } else if (!msg.value) {\n                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                    memory[0xc0:0xe0] = 0x03;\n                                                \n                                                    if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                \n                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                    memory[0xc0:0xe0] = 0x06;\n                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                    return memory[0x00:0x20];\n                                                } else { revert(memory[0x00:0x00]); }\n                                            } else if (!msg.value) {\n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x03;\n                                            \n                                                if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                            \n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x04;\n                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                return memory[0x00:0x20];\n                                            } else { revert(memory[0x00:0x00]); }\n                                        } else if (!msg.value) {\n                                            var0 = msg.data[0x04:0x24];\n                                        \n                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                        \n                                            if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x0a;\n                                        \n                                            if (msg.data[0x24:0x44] >= storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x09;\n                                            var temp54 = keccak256(memory[0xc0:0x0100]);\n                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                            memory[0xc0:0xe0] = temp54;\n                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                            return memory[0x00:0x20];\n                                        } else { revert(memory[0x00:0x00]); }\n                                    } else if (!msg.value) {\n                                        if (msg.data[0x04:0x24] >= storage[0x0f]) { revert(memory[0x00:0x00]); }\n                                    \n                                        var temp55 = msg.data[0x04:0x24];\n                                        var0 = temp55;\n                                        var1 = 0x01;\n                                    \n                                        if (var0 + var1 < var0) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0x00:0x20] = var0 + var1;\n                                        return memory[0x00:0x20];\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                    memory[0xc0:0xe0] = 0x03;\n                                    memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                \n                                    if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                \n                                    memory[0x00:0x20] = memory[0x0140:0x0160];\n                                    return memory[0x00:0x20];\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                var0 = msg.data[0x04:0x24];\n                            \n                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                            \n                                if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                memory[0xc0:0xe0] = 0x0a;\n                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                            memory[0xc0:0xe0] = 0x0c;\n                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                            return memory[0x00:0x20];\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0x00:0x20] = storage[0x0f];\n                        return memory[0x00:0x20];\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                    memory[0xc0:0xe0] = 0x03;\n                    memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                    memory[0x00:0x20] = memory[0x0140:0x0160] != 0x00;\n                    return memory[0x00:0x20];\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                memory[0xc0:0xe0] = 0x03;\n            \n                if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n            \n                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                memory[0xc0:0xe0] = 0x05;\n                var0 = keccak256(memory[0xc0:0x0100]);\n                memory[0xc0:0xe0] = var0;\n                var1 = keccak256(memory[0xc0:0xe0]);\n                var2 = 0x0140;\n                var temp56 = storage[var1] + 0x20;\n                var3 = temp56;\n                var4 = 0x0120;\n                memory[var4:var4 + 0x20] = 0x00;\n                var5 = 0x09;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_01C7; }\n            \n            label_01CB:\n                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                var temp57 = var4;\n                var temp58 = memory[temp57:temp57 + 0x20] + 0x01;\n                memory[temp57:temp57 + 0x20] = temp58;\n            \n                if (var5 == temp58) { goto label_01ED; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_01CB; }\n            \n            label_01C7:\n            \n            label_01ED:\n                memory[0x02c0:0x02e0] = 0x00;\n            \n                if (keccak256(memory[0x0140 + 0x20:0x0140 + 0x20 + memory[0x0140:0x0160]]) != keccak256(memory[0x02c0 + 0x20:0x02c0 + 0x20 + memory[0x02c0:0x02e0]])) {\n                    var0 = 0x00;\n                    var1 = 0x10;\n                    memory[0xc0:0xe0] = var1;\n                    var2 = keccak256(memory[0xc0:0xe0]) + 0x01;\n                    var3 = var0 + 0x03c0 + 0x20;\n                    memory[0xc0:0xe0] = var1;\n                    var temp59 = storage[keccak256(memory[0xc0:0xe0])];\n                    var4 = temp59;\n                    var5 = 0x0120;\n                    memory[var5:var5 + 0x20] = 0x00;\n                    var6 = 0x02;\n                \n                    if (memory[0x0120:0x0140] * 0x20 > var4) { goto label_02EE; }\n                \n                label_02F2:\n                    memory[var3 + memory[0x0120:0x0140] * 0x20:var3 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var2 + memory[0x0120:0x0140]];\n                    var temp60 = var5;\n                    var temp61 = memory[temp60:temp60 + 0x20] + 0x01;\n                    memory[temp60:temp60 + 0x20] = temp61;\n                \n                    if (var6 == temp61) { goto label_0314; }\n                \n                    if (memory[0x0120:0x0140] * 0x20 <= var4) { goto label_02F2; }\n                \n                label_02EE:\n                \n                label_0314:\n                    memory[0xc0:0xe0] = var1;\n                    var temp62 = var0 + storage[keccak256(memory[0xc0:0xe0])];\n                    memory[temp62 + 0x03c0 + 0x20:temp62 + 0x03c0 + 0x20 + 0x0100] = address(0x04).call.gas(msg.gas)(memory[0x0160:0x0260]);\n                    memory[0x03c0:0x03e0] = temp62 + memory[0x0140:0x0160];\n                    var0 = 0x03c0;\n                    var temp63 = memory[var0:var0 + 0x20] + 0x20;\n                    var1 = temp63;\n                    var temp64;\n                    temp64, memory[0x0580:0x0580 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                \n                    if (!temp64) { revert(memory[0x00:0x00]); }\n                \n                    var temp65 = memory[0x0580:0x05a0];\n                    var temp66 = (temp65 + 0x1f) - temp65 - 0x01 % 0x20 - temp65;\n                    memory[temp65 + 0x05a0:temp65 + 0x05a0 + temp66] = msg.data[msg.data.length:msg.data.length + temp66];\n                    memory[0x0560:0x0580] = 0x20;\n                    var temp67 = memory[0x0580:0x05a0] + 0x40;\n                    return memory[0x0560:0x0560 + (temp67 + 0x1f) - temp67 - 0x01 % 0x20];\n                } else {\n                    var0 = 0x10;\n                    memory[0xc0:0xe0] = var0;\n                    var1 = keccak256(memory[0xc0:0xe0]);\n                    var2 = 0x0340;\n                    var temp68 = storage[var1] + 0x20;\n                    var3 = temp68;\n                    var4 = 0x0120;\n                    memory[var4:var4 + 0x20] = 0x00;\n                    var5 = 0x03;\n                \n                    if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0245; }\n                \n                label_0249:\n                    memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                    var temp69 = var4;\n                    var temp70 = memory[temp69:temp69 + 0x20] + 0x01;\n                    memory[temp69:temp69 + 0x20] = temp70;\n                \n                    if (var5 == temp70) { goto label_026B; }\n                \n                    if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0249; }\n                \n                label_0245:\n                \n                label_026B:\n                    var temp71 = memory[0x0340:0x0360];\n                    var temp72 = (temp71 + 0x1f) - temp71 - 0x01 % 0x20 - temp71;\n                    memory[temp71 + 0x0360:temp71 + 0x0360 + temp72] = msg.data[msg.data.length:msg.data.length + temp72];\n                    memory[0x0320:0x0340] = 0x20;\n                    var temp73 = memory[0x0340:0x0360] + 0x40;\n                    return memory[0x0320:0x0320 + (temp73 + 0x1f) - temp73 - 0x01 % 0x20];\n                }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            var0 = 0x10;\n            memory[0xc0:0xe0] = var0;\n            var1 = keccak256(memory[0xc0:0xe0]);\n            var2 = 0x0180;\n            var temp74 = storage[var1] + 0x20;\n            var3 = temp74;\n            var4 = 0x0120;\n            memory[var4:var4 + 0x20] = 0x00;\n            var5 = 0x03;\n        \n            if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_00E8; }\n        \n        label_00EC:\n            memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n            var temp75 = var4;\n            var temp76 = memory[temp75:temp75 + 0x20] + 0x01;\n            memory[temp75:temp75 + 0x20] = temp76;\n        \n            if (var5 == temp76) { goto label_010E; }\n        \n            if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_00EC; }\n        \n        label_00E8:\n        \n        label_010E:\n            var temp77 = memory[0x0180:0x01a0];\n            var temp78 = (temp77 + 0x1f) - temp77 - 0x01 % 0x20 - temp77;\n            memory[temp77 + 0x01a0:temp77 + 0x01a0 + temp78] = msg.data[msg.data.length:msg.data.length + temp78];\n            memory[0x0160:0x0180] = 0x20;\n            var temp79 = memory[0x0180:0x01a0] + 0x40;\n            return memory[0x0160:0x0160 + (temp79 + 0x1f) - temp79 - 0x01 % 0x20];\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }\n    \n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] != 0xd547cfb7) {\n            if (memory[0x00:0x20] != 0xc87b56dd) {\n                if (memory[0x00:0x20] != 0x4f558e79) {\n                    if (memory[0x00:0x20] != 0x18160ddd) {\n                        if (memory[0x00:0x20] != 0xf1753550) {\n                            if (memory[0x00:0x20] != 0x70a08231) {\n                                if (memory[0x00:0x20] != 0x6352211e) {\n                                    if (memory[0x00:0x20] != 0x4f6ccce7) {\n                                        if (memory[0x00:0x20] != 0x2f745c59) {\n                                            if (memory[0x00:0x20] != 0x081812fc) {\n                                                if (memory[0x00:0x20] != 0x3bd18a3b) {\n                                                    if (memory[0x00:0x20] != 0x6efacc1c) {\n                                                        if (memory[0x00:0x20] != 0xe985e9c5) {\n                                                            if (0x00) {\n                                                                memory[0x0180:0x01a0] = var-1;\n                                                                memory[0x0140:0x0160] = var-2;\n                                                                memory[0x0160:0x0180] = var-3;\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                                memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0x01c0:0x01e0] = memory[0x01a0:0x01c0] == memory[0x0140:0x0160];\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x04;\n                                                                memory[0x01e0:0x0200] = memory[0x0140:0x0160] == storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n                                                                memory[0xc0:0xe0] = 0x0b;\n                                                                var temp46 = keccak256(memory[0xc0:0x0100]);\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = temp46;\n                                                                memory[0x0200:0x0220] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0x00:0x20] = memory[0x01c0:0x01e0] | memory[0x01e0:0x0200] | memory[0x0200:0x0220];\n                                                                var-3 = memory[0x00:0x20];\n                                                                // Error: Could not resolve jump destination!\n                                                            } else if (0x00) {\n                                                                memory[0x0180:0x01a0] = var-1;\n                                                                memory[0x0140:0x0160] = var-2;\n                                                                memory[0x0160:0x0180] = var-3;\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var temp41 = memory[0x0140:0x0160];\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                                storage[keccak256(memory[0xc0:0x0100])] = temp41;\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x0a;\n                                                                var temp42 = storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x07;\n                                                                storage[keccak256(memory[0xc0:0x0100])] = temp42;\n                                                                var temp43 = memory[0x0160:0x0180];\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x09;\n                                                                var temp44 = keccak256(memory[0xc0:0x0100]);\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x0a;\n                                                                memory[0xe0:0x0100] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0xc0:0xe0] = temp44;\n                                                                storage[keccak256(memory[0xc0:0x0100])] = temp43;\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x0a;\n                                                                var-3 = keccak256(memory[0xc0:0x0100]);\n                                                                var temp45 = storage[var-3];\n                                                                var-2 = temp45;\n                                                                var-1 = 0x01;\n                                                            \n                                                                if (var-2 + var-1 < var-2) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                storage[var-3] = var-2 + var-1;\n                                                                // Error: Could not resolve jump destination!\n                                                            } else if (0x00) {\n                                                                memory[0x0180:0x01a0] = var-1;\n                                                                memory[0x0140:0x0160] = var-2;\n                                                                memory[0x0160:0x0180] = var-3;\n                                                                var temp35 = memory[0x0140:0x0160];\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0x0100])] != temp35) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                                storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x07;\n                                                                memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x0a;\n                                                                var-3 = storage[keccak256(memory[0xc0:0x0100])];\n                                                                var-2 = 0x01;\n                                                            \n                                                                if (var-3 < var-2) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0x01c0:0x01e0] = var-3 - var-2;\n                                                                var temp36 = memory[0x01a0:0x01c0] < memory[0x01c0:0x01e0];\n                                                                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                memory[0xc0:0xe0] = 0x0a;\n                                                            \n                                                                if (!((storage[keccak256(memory[0xc0:0x0100])] > 0x01) & temp36)) {\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x0a;\n                                                                    var-3 = keccak256(memory[0xc0:0x0100]);\n                                                                    var-2 = storage[var-3];\n                                                                    var-1 = 0x01;\n                                                                \n                                                                    if (var-2 < var-1) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                label_0A57:\n                                                                    storage[var-3] = var-2 - var-1;\n                                                                    // Error: Could not resolve jump destination!\n                                                                } else {\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x09;\n                                                                    var temp37 = keccak256(memory[0xc0:0x0100]);\n                                                                    memory[0xe0:0x0100] = memory[0x01c0:0x01e0];\n                                                                    memory[0xc0:0xe0] = temp37;\n                                                                    memory[0x01e0:0x0200] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                    var temp38 = memory[0x01e0:0x0200];\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x09;\n                                                                    var temp39 = keccak256(memory[0xc0:0x0100]);\n                                                                    memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n                                                                    memory[0xc0:0xe0] = temp39;\n                                                                    storage[keccak256(memory[0xc0:0x0100])] = temp38;\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x09;\n                                                                    var temp40 = keccak256(memory[0xc0:0x0100]);\n                                                                    memory[0xe0:0x0100] = memory[0x01c0:0x01e0];\n                                                                    memory[0xc0:0xe0] = temp40;\n                                                                    storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x0a;\n                                                                    var-3 = keccak256(memory[0xc0:0x0100]);\n                                                                    var-2 = storage[var-3];\n                                                                    var-1 = 0x01;\n                                                                \n                                                                    if (var-2 >= var-1) { goto label_0A57; }\n                                                                    else { revert(memory[0x00:0x00]); }\n                                                                }\n                                                            } else if (0x00) {\n                                                                memory[0x0180:0x01a0] = var-1;\n                                                                memory[0x0140:0x0160] = var-2;\n                                                                memory[0x0160:0x0180] = var-3;\n                                                                var temp34 = memory[0x0140:0x0160];\n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                            \n                                                                if (storage[keccak256(memory[0xc0:0x0100])] != temp34) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                memory[0xc0:0xe0] = 0x04;\n                                                            \n                                                                if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) {\n                                                                    // Error: Could not resolve jump destination!\n                                                                } else {\n                                                                    memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                                    memory[0xc0:0xe0] = 0x04;\n                                                                    storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                                    // Error: Could not resolve jump destination!\n                                                                }\n                                                            } else if (0x00) {\n                                                                // Error: StackRead before write???\n                                                                var var-1;\n                                                                // Error: StackRead before write???\n                                                                var var-3;\n                                                                // Error: StackRead before write???\n                                                                var var-2;\n                                                                // Error: StackRead before write???\n                                                                var var-5;\n                                                                // Error: StackRead before write???\n                                                                var var-4;\n                                                                memory[0x01c0:0x01e0] = var-1;\n                                                                memory[0x0140:0x0160] = var-2;\n                                                                memory[0x0160:0x0180] = var-3;\n                                                                memory[0x0180:0x01a0] = var-4;\n                                                                memory[0x01a0:0x01c0] = var-5;\n                                                                var-5 = memory[0x0140:0x0160];\n                                                                var-4 = memory[0x0160:0x0180];\n                                                                var-3 = memory[0x0180:0x01a0];\n                                                                var-2 = memory[0x01a0:0x01c0];\n                                                                var-1 = memory[0x01c0:0x01e0];\n                                                                memory[0x0200:0x0220] = 0x4cdc9549;\n                                                                memory[0x0220:0x0240] = memory[0x01a0:0x01c0];\n                                                                memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n                                                                var0 = memory[0x0240:0x0260];\n                                                                var1 = memory[0x0220:0x0240];\n                                                                var2 = 0x06;\n                                                                // Unhandled termination\n                                                            } else if (memory[0x00:0x20] != 0x23b872dd) {\n                                                                if (memory[0x00:0x20] == 0x42842e0e) {\n                                                                    memory[0x0580:0x05a0] = 0x00;\n                                                                    var0 = 0x0580;\n                                                                    var temp32 = memory[var0:var0 + 0x20] + 0x20;\n                                                                    var1 = temp32;\n                                                                    var temp33;\n                                                                    temp33, memory[0x0140:0x0140 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                                \n                                                                    if (temp33) { goto label_0E20; }\n                                                                    else { revert(memory[0x00:0x00]); }\n                                                                } else if (memory[0x00:0x20] == 0xb88d4fde) {\n                                                                    memory[0x0140:0x0560] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0420];\n                                                                \n                                                                    if (msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x20] > 0x0400) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x0140:0x0580] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0440];\n                                                                    goto label_0E20;\n                                                                } else if (0x00) {\n                                                                label_0E20:\n                                                                \n                                                                    if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var0 = msg.data[0x04:0x24];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var0 = msg.data[0x24:0x44];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0x05c0:0x05e0] = 0x0140;\n                                                                    var0 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                                    memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                                \n                                                                    if (memory[0x05c0:0x05e0] >= 0x05c0) {\n                                                                    label_0E79:\n                                                                        memory[0x05e0:0x0600] = 0x092863fe;\n                                                                        memory[0x0600:0x0620] = msg.data[0x04:0x24];\n                                                                        memory[0x0620:0x0640] = msg.data[0x24:0x44];\n                                                                        memory[0x0640:0x0660] = msg.data[0x44:0x64];\n                                                                        memory[0x0660:0x0680] = msg.sender;\n                                                                        var1 = memory[0x0660:0x0680];\n                                                                        var2 = memory[0x0640:0x0660];\n                                                                        var3 = memory[0x0620:0x0640];\n                                                                        var4 = memory[0x0600:0x0620];\n                                                                        var5 = 0x06;\n                                                                        // Unhandled termination\n                                                                    } else {\n                                                                    label_0E75:\n                                                                        var1 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                                        memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                                    \n                                                                        if (memory[0x05c0:0x05e0] >= 0x05c0) { goto label_0E79; }\n                                                                        else { goto label_0E75; }\n                                                                    }\n                                                                } else if (memory[0x00:0x20] != 0x095ea7b3) {\n                                                                    if (memory[0x00:0x20] != 0x6de53001) {\n                                                                        if (memory[0x00:0x20] != 0xa22cb465) {\n                                                                            if (memory[0x00:0x20] != 0xf4dfe7c5) {\n                                                                                if (memory[0x00:0x20] != 0xfe475f6b) {\n                                                                                    if (memory[0x00:0x20] != 0x655391c9) {\n                                                                                        if (memory[0x00:0x20] != 0xbc04f0af) {\n                                                                                            if (memory[0x00:0x20] != 0x06fdde03) {\n                                                                                                if (memory[0x00:0x20] != 0x95d89b41) {\n                                                                                                    if (memory[0x00:0x20] != 0x313ce567) { revert(memory[0x00:0x00]); }\n                                                                                                \n                                                                                                    if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                                                \n                                                                                                    memory[0x00:0x20] = storage[0x02];\n                                                                                                    return memory[0x00:0x20];\n                                                                                                } else if (!msg.value) {\n                                                                                                    var var0 = 0x01;\n                                                                                                    memory[0xc0:0xe0] = var0;\n                                                                                                    var var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                                    var var2 = 0x0180;\n                                                                                                    var temp0 = storage[var1] + 0x20;\n                                                                                                    var var3 = temp0;\n                                                                                                    var var4 = 0x0120;\n                                                                                                    memory[var4:var4 + 0x20] = 0x00;\n                                                                                                    var var5 = 0x02;\n                                                                                                \n                                                                                                    if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_17E4; }\n                                                                                                \n                                                                                                label_17E8:\n                                                                                                    memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                                    var temp1 = var4;\n                                                                                                    var temp2 = memory[temp1:temp1 + 0x20] + 0x01;\n                                                                                                    memory[temp1:temp1 + 0x20] = temp2;\n                                                                                                \n                                                                                                    if (var5 == temp2) { goto label_180A; }\n                                                                                                \n                                                                                                    if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_17E8; }\n                                                                                                \n                                                                                                label_17E4:\n                                                                                                \n                                                                                                label_180A:\n                                                                                                    var temp3 = memory[0x0180:0x01a0];\n                                                                                                    var temp4 = (temp3 + 0x1f) - temp3 - 0x01 % 0x20 - temp3;\n                                                                                                    memory[temp3 + 0x01a0:temp3 + 0x01a0 + temp4] = msg.data[msg.data.length:msg.data.length + temp4];\n                                                                                                    memory[0x0160:0x0180] = 0x20;\n                                                                                                    var temp5 = memory[0x0180:0x01a0] + 0x40;\n                                                                                                    return memory[0x0160:0x0160 + (temp5 + 0x1f) - temp5 - 0x01 % 0x20];\n                                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                                            } else if (!msg.value) {\n                                                                                                var0 = 0x00;\n                                                                                                memory[0xc0:0xe0] = var0;\n                                                                                                var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                                var2 = 0x0180;\n                                                                                                var temp6 = storage[var1] + 0x20;\n                                                                                                var3 = temp6;\n                                                                                                var4 = 0x0120;\n                                                                                                memory[var4:var4 + 0x20] = 0x00;\n                                                                                                var5 = 0x02;\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_1730; }\n                                                                                            \n                                                                                            label_1734:\n                                                                                                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                                var temp7 = var4;\n                                                                                                var temp8 = memory[temp7:temp7 + 0x20] + 0x01;\n                                                                                                memory[temp7:temp7 + 0x20] = temp8;\n                                                                                            \n                                                                                                if (var5 == temp8) { goto label_1756; }\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_1734; }\n                                                                                            \n                                                                                            label_1730:\n                                                                                            \n                                                                                            label_1756:\n                                                                                                var temp9 = memory[0x0180:0x01a0];\n                                                                                                var temp10 = (temp9 + 0x1f) - temp9 - 0x01 % 0x20 - temp9;\n                                                                                                memory[temp9 + 0x01a0:temp9 + 0x01a0 + temp10] = msg.data[msg.data.length:msg.data.length + temp10];\n                                                                                                memory[0x0160:0x0180] = 0x20;\n                                                                                                var temp11 = memory[0x0180:0x01a0] + 0x40;\n                                                                                                return memory[0x0160:0x0160 + (temp11 + 0x1f) - temp11 - 0x01 % 0x20];\n                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                        } else if (!msg.value) {\n                                                                                            var0 = msg.data[0x04:0x24];\n                                                                                        \n                                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            if (msg.sender != storage[0x0d]) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            if (msg.data[0x24:0x44] < 0x28) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            var0 = msg.data[0x24:0x44];\n                                                                                            var1 = 0x28;\n                                                                                            var2 = var1;\n                                                                                        \n                                                                                            if (!var2) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x0140:0x0160] = var0 / var2;\n                                                                                            var0 = msg.data[0x24:0x44];\n                                                                                            var1 = memory[0x0140:0x0160];\n                                                                                        \n                                                                                            if (var0 < var1) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x0160:0x0180] = var0 - var1;\n                                                                                        \n                                                                                            if (!address(storage[0x0d]).code.length) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            if (!(address(this) ~ storage[0x0d])) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x01a0:0x01c0] = 0xa9059cbb;\n                                                                                            memory[0x01c0:0x01e0] = storage[0x0e];\n                                                                                            memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n                                                                                            var temp12;\n                                                                                            temp12, memory[0x0240:0x0260] = address(storage[0x0d]).call.gas(msg.gas)(memory[0x01bc:0x0200]);\n                                                                                        \n                                                                                            if (!temp12) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x0180:0x01a0] = memory[0x0240:0x0260];\n                                                                                        \n                                                                                            if (!address(storage[0x0d]).code.length) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            if (!(address(this) ~ storage[0x0d])) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            memory[0x0260:0x0280] = 0x42966c68;\n                                                                                            memory[0x0280:0x02a0] = memory[0x0160:0x0180];\n                                                                                            var temp13;\n                                                                                            temp13, memory[0x00:0x00] = address(storage[0x0d]).call.gas(msg.gas)(memory[0x027c:0x02a0]);\n                                                                                        \n                                                                                            if (!temp13) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            if (!memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            var0 = 0x0f;\n                                                                                            var temp14 = storage[var0];\n                                                                                            var1 = temp14;\n                                                                                            var2 = 0x01;\n                                                                                        \n                                                                                            if (var1 + var2 < var1) { revert(memory[0x00:0x00]); }\n                                                                                        \n                                                                                            storage[var0] = var1 + var2;\n                                                                                            var temp15 = memory[0x0160:0x0180];\n                                                                                            memory[0xe0:0x0100] = storage[0x0f];\n                                                                                            memory[0xc0:0xe0] = 0x06;\n                                                                                            storage[keccak256(memory[0xc0:0x0100])] = temp15;\n                                                                                            memory[0x02e0:0x0300] = 0x0140;\n                                                                                            var0 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                            memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                                        \n                                                                                            if (memory[0x02e0:0x0300] >= 0x02e0) {\n                                                                                            label_1683:\n                                                                                                memory[0x0300:0x0320] = 0xff5ce378;\n                                                                                                memory[0x0320:0x0340] = msg.data[0x04:0x24];\n                                                                                                memory[0x0340:0x0360] = storage[0x0f];\n                                                                                                var1 = memory[0x0340:0x0360];\n                                                                                                var2 = memory[0x0320:0x0340];\n                                                                                                var3 = 0x06;\n                                                                                                // Unhandled termination\n                                                                                            } else {\n                                                                                            label_167F:\n                                                                                                var1 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                                memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                                            \n                                                                                                if (memory[0x02e0:0x0300] >= 0x02e0) { goto label_1683; }\n                                                                                                else { goto label_167F; }\n                                                                                            }\n                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                    } else if (!msg.value) {\n                                                                                        memory[0x0140:0x01a0] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x60];\n                                                                                    \n                                                                                        if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x40) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (msg.sender != storage[0x0e]) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        var0 = 0x0140;\n                                                                                        var1 = var0;\n                                                                                        memory[0xc0:0xe0] = 0x10;\n                                                                                        var2 = keccak256(memory[0xc0:0xe0]);\n                                                                                        var temp16 = memory[var1:var1 + 0x20] + 0x20;\n                                                                                        var3 = temp16;\n                                                                                        var4 = 0x0120;\n                                                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                                                        var5 = 0x03;\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_14CB; }\n                                                                                    \n                                                                                    label_14CF:\n                                                                                        storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                                        var temp17 = var4;\n                                                                                        var temp18 = memory[temp17:temp17 + 0x20] + 0x01;\n                                                                                        memory[temp17:temp17 + 0x20] = temp18;\n                                                                                    \n                                                                                        if (var5 == temp18) { stop(); }\n                                                                                    \n                                                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_14CF; }\n                                                                                    \n                                                                                    label_14CB:\n                                                                                        stop();\n                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                } else if (!msg.value) {\n                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                \n                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                \n                                                                                    if (msg.sender != storage[0x0e]) { revert(memory[0x00:0x00]); }\n                                                                                \n                                                                                    storage[0x0e] = msg.data[0x04:0x24];\n                                                                                    stop();\n                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                            } else if (!msg.value) {\n                                                                                memory[0x0140:0x0260] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x0120];\n                                                                            \n                                                                                if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x0100) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                                memory[0xc0:0xe0] = 0x03;\n                                                                            \n                                                                                if (storage[keccak256(memory[0xc0:0x0100])] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x02c0:0x02e0] = 0x00;\n                                                                            \n                                                                                if (!(keccak256(memory[0x0140 + 0x20:0x0140 + 0x20 + memory[0x0140:0x0160]]) ~ keccak256(memory[0x02c0 + 0x20:0x02c0 + 0x20 + memory[0x02c0:0x02e0]]))) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0x0340:0x0360] = 0x00;\n                                                                                var0 = keccak256(memory[0x0340 + 0x20:0x0340 + 0x20 + memory[0x0340:0x0360]]);\n                                                                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                                memory[0xc0:0xe0] = 0x05;\n                                                                                var1 = keccak256(memory[0xc0:0x0100]);\n                                                                                var2 = var1;\n                                                                                memory[0xc0:0xe0] = var2;\n                                                                                var3 = keccak256(memory[0xc0:0xe0]);\n                                                                                var4 = 0x0380;\n                                                                                var temp19 = storage[var3] + 0x20;\n                                                                                var5 = temp19;\n                                                                                var var6 = 0x0120;\n                                                                                memory[var6:var6 + 0x20] = 0x00;\n                                                                                var var7 = 0x09;\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 > var5) { goto label_1297; }\n                                                                            \n                                                                            label_129B:\n                                                                                memory[var4 + memory[0x0120:0x0140] * 0x20:var4 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var3 + memory[0x0120:0x0140]];\n                                                                                var temp20 = var6;\n                                                                                var temp21 = memory[temp20:temp20 + 0x20] + 0x01;\n                                                                                memory[temp20:temp20 + 0x20] = temp21;\n                                                                            \n                                                                                if (var7 == temp21) { goto label_12BD; }\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 <= var5) { goto label_129B; }\n                                                                            \n                                                                            label_1297:\n                                                                            \n                                                                            label_12BD:\n                                                                                memory[0xc0:0xe0] = var1;\n                                                                            \n                                                                                if (keccak256(memory[0x03a0:0x03a0 + storage[keccak256(memory[0xc0:0xe0])]]) != var0) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                memory[0xe0:0x0100] = keccak256(memory[0x0160:0x0160 + memory[0x0140:0x0160]]);\n                                                                                memory[0xc0:0xe0] = 0x08;\n                                                                            \n                                                                                if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                var0 = 0x0140;\n                                                                                var1 = var0;\n                                                                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                                memory[0xc0:0xe0] = 0x05;\n                                                                                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                                var2 = keccak256(memory[0xc0:0xe0]);\n                                                                                var temp22 = memory[var1:var1 + 0x20] + 0x20;\n                                                                                var3 = temp22;\n                                                                                var4 = 0x0120;\n                                                                                memory[var4:var4 + 0x20] = 0x00;\n                                                                                var5 = 0x09;\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_1339; }\n                                                                            \n                                                                            label_133D:\n                                                                                storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                                var temp23 = var4;\n                                                                                var temp24 = memory[temp23:temp23 + 0x20] + 0x01;\n                                                                                memory[temp23:temp23 + 0x20] = temp24;\n                                                                            \n                                                                                if (var5 == temp24) { goto label_135F; }\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_133D; }\n                                                                            \n                                                                            label_1339:\n                                                                            \n                                                                            label_135F:\n                                                                                memory[0x04c0:0x04e0] = 0x20;\n                                                                                memory[0x0500:0x0520] = memory[0x04c0:0x04e0];\n                                                                                var0 = 0x0140;\n                                                                                var temp25 = memory[var0:var0 + 0x20] + 0x20;\n                                                                                var1 = temp25;\n                                                                                var temp26;\n                                                                                temp26, memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                                            \n                                                                                if (!temp26) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                var temp27 = memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + 0x20];\n                                                                                var temp28 = (temp27 + 0x1f) - temp27 - 0x01 % 0x20 - temp27;\n                                                                                memory[memory[0x04c0:0x04e0] + 0x0500 + 0x20 + temp27:memory[0x04c0:0x04e0] + 0x0500 + 0x20 + temp27 + temp28] = msg.data[msg.data.length:msg.data.length + temp28];\n                                                                                var temp29 = memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + 0x20];\n                                                                                memory[0x04c0:0x04e0] = memory[0x04c0:0x04e0] + ((temp29 + 0x1f) - temp29 - 0x01 % 0x20) + 0x20;\n                                                                                log(memory[0x0500:0x0500 + memory[0x04c0:0x04e0]], [0xba7bf0735ae69190abdc36da67134e0ba2ac14f12f5e54cf4bced3bf11c298cf, msg.sender, msg.data[0x24:0x44]]);\n                                                                                stop();\n                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                        } else if (!msg.value) {\n                                                                            var0 = msg.data[0x04:0x24];\n                                                                        \n                                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            var0 = msg.data[0x24:0x44];\n                                                                        \n                                                                            if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            if (!(msg.data[0x04:0x24] ~ msg.sender)) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            memory[0xe0:0x0100] = msg.sender;\n                                                                            memory[0xc0:0xe0] = 0x0b;\n                                                                            var temp30 = keccak256(memory[0xc0:0x0100]);\n                                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                            memory[0xc0:0xe0] = temp30;\n                                                                            storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x24:0x44];\n                                                                            memory[0x0140:0x0160] = msg.data[0x24:0x44];\n                                                                            log(memory[0x0140:0x0160], [0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, msg.sender, msg.data[0x04:0x24]]);\n                                                                            stop();\n                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                    } else if (!msg.value) {\n                                                                        var0 = msg.data[0x04:0x24];\n                                                                    \n                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x03;\n                                                                        memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                    \n                                                                        if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        if (memory[0x0140:0x0160] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        var0 = memory[0x0140:0x0160];\n                                                                        memory[0x0180:0x01a0] = 0x91127c1f;\n                                                                        memory[0x01a0:0x01c0] = msg.data[0x04:0x24];\n                                                                        memory[0x01c0:0x01e0] = msg.data[0x24:0x44];\n                                                                        var1 = memory[0x01c0:0x01e0];\n                                                                        var2 = memory[0x01a0:0x01c0];\n                                                                        var3 = 0x06;\n                                                                        // Unhandled termination\n                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                } else if (!msg.value) {\n                                                                    var0 = msg.data[0x04:0x24];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x03;\n                                                                    memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                \n                                                                    if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    if (!(msg.data[0x04:0x24] ~ memory[0x0140:0x0160])) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x03;\n                                                                    memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0x0100])] == msg.sender;\n                                                                    memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                                    memory[0xc0:0xe0] = 0x0b;\n                                                                    var temp31 = keccak256(memory[0xc0:0x0100]);\n                                                                    memory[0xe0:0x0100] = msg.sender;\n                                                                    memory[0xc0:0xe0] = temp31;\n                                                                    memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                                \n                                                                    if (!(memory[0x0160:0x0180] | memory[0x0180:0x01a0])) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                    memory[0xc0:0xe0] = 0x04;\n                                                                    storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x04:0x24];\n                                                                    log(memory[0x00:0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, memory[0x0140:0x0160], msg.data[0x04:0x24], msg.data[0x24:0x44]]);\n                                                                    stop();\n                                                                } else { revert(memory[0x00:0x00]); }\n                                                            } else if (!msg.value) {\n                                                                var0 = msg.data[0x04:0x24];\n                                                            \n                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var0 = msg.data[0x24:0x44];\n                                                            \n                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0x0140:0x0160] = 0x092863fe;\n                                                                memory[0x0160:0x0180] = msg.data[0x04:0x24];\n                                                                memory[0x0180:0x01a0] = msg.data[0x24:0x44];\n                                                                memory[0x01a0:0x01c0] = msg.data[0x44:0x64];\n                                                                memory[0x01c0:0x01e0] = msg.sender;\n                                                                var0 = memory[0x01c0:0x01e0];\n                                                                var1 = memory[0x01a0:0x01c0];\n                                                                var2 = memory[0x0180:0x01a0];\n                                                                var3 = memory[0x0160:0x0180];\n                                                                var4 = 0x06;\n                                                                // Unhandled termination\n                                                            } else { revert(memory[0x00:0x00]); }\n                                                        } else if (!msg.value) {\n                                                            var0 = msg.data[0x04:0x24];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            var0 = msg.data[0x24:0x44];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                            memory[0xc0:0xe0] = 0x0b;\n                                                            var temp47 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = temp47;\n                                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                            return memory[0x00:0x20];\n                                                        } else { revert(memory[0x00:0x00]); }\n                                                    } else if (!msg.value) {\n                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                    \n                                                        if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                        memory[0xc0:0xe0] = 0x05;\n                                                        var0 = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0xc0:0xe0] = var0;\n                                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                                        var2 = 0x01a0;\n                                                        var temp48 = storage[var1] + 0x20;\n                                                        var3 = temp48;\n                                                        var4 = 0x0120;\n                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                        var5 = 0x09;\n                                                    \n                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_06E1; }\n                                                    \n                                                    label_06E5:\n                                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                        var temp49 = var4;\n                                                        var temp50 = memory[temp49:temp49 + 0x20] + 0x01;\n                                                        memory[temp49:temp49 + 0x20] = temp50;\n                                                    \n                                                        if (var5 == temp50) { goto label_0707; }\n                                                    \n                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_06E5; }\n                                                    \n                                                    label_06E1:\n                                                    \n                                                    label_0707:\n                                                        var temp51 = memory[0x01a0:0x01c0];\n                                                        var temp52 = (temp51 + 0x1f) - temp51 - 0x01 % 0x20 - temp51;\n                                                        memory[temp51 + 0x01c0:temp51 + 0x01c0 + temp52] = msg.data[msg.data.length:msg.data.length + temp52];\n                                                        memory[0x0180:0x01a0] = 0x20;\n                                                        var temp53 = memory[0x01a0:0x01c0] + 0x40;\n                                                        return memory[0x0180:0x0180 + (temp53 + 0x1f) - temp53 - 0x01 % 0x20];\n                                                    } else { revert(memory[0x00:0x00]); }\n                                                } else if (!msg.value) {\n                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                    memory[0xc0:0xe0] = 0x03;\n                                                \n                                                    if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                \n                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                    memory[0xc0:0xe0] = 0x06;\n                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                    return memory[0x00:0x20];\n                                                } else { revert(memory[0x00:0x00]); }\n                                            } else if (!msg.value) {\n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x03;\n                                            \n                                                if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                            \n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x04;\n                                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                return memory[0x00:0x20];\n                                            } else { revert(memory[0x00:0x00]); }\n                                        } else if (!msg.value) {\n                                            var0 = msg.data[0x04:0x24];\n                                        \n                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                        \n                                            if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x0a;\n                                        \n                                            if (msg.data[0x24:0x44] >= storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x09;\n                                            var temp54 = keccak256(memory[0xc0:0x0100]);\n                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                            memory[0xc0:0xe0] = temp54;\n                                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                            return memory[0x00:0x20];\n                                        } else { revert(memory[0x00:0x00]); }\n                                    } else if (!msg.value) {\n                                        if (msg.data[0x04:0x24] >= storage[0x0f]) { revert(memory[0x00:0x00]); }\n                                    \n                                        var temp55 = msg.data[0x04:0x24];\n                                        var0 = temp55;\n                                        var1 = 0x01;\n                                    \n                                        if (var0 + var1 < var0) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0x00:0x20] = var0 + var1;\n                                        return memory[0x00:0x20];\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                    memory[0xc0:0xe0] = 0x03;\n                                    memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                \n                                    if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                \n                                    memory[0x00:0x20] = memory[0x0140:0x0160];\n                                    return memory[0x00:0x20];\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                var0 = msg.data[0x04:0x24];\n                            \n                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                            \n                                if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                memory[0xc0:0xe0] = 0x0a;\n                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                            memory[0xc0:0xe0] = 0x0c;\n                            memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                            return memory[0x00:0x20];\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0x00:0x20] = storage[0x0f];\n                        return memory[0x00:0x20];\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                    memory[0xc0:0xe0] = 0x03;\n                    memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                    memory[0x00:0x20] = memory[0x0140:0x0160] != 0x00;\n                    return memory[0x00:0x20];\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                memory[0xc0:0xe0] = 0x03;\n            \n                if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n            \n                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                memory[0xc0:0xe0] = 0x05;\n                var0 = keccak256(memory[0xc0:0x0100]);\n                memory[0xc0:0xe0] = var0;\n                var1 = keccak256(memory[0xc0:0xe0]);\n                var2 = 0x0140;\n                var temp56 = storage[var1] + 0x20;\n                var3 = temp56;\n                var4 = 0x0120;\n                memory[var4:var4 + 0x20] = 0x00;\n                var5 = 0x09;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_01C7; }\n            \n            label_01CB:\n                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                var temp57 = var4;\n                var temp58 = memory[temp57:temp57 + 0x20] + 0x01;\n                memory[temp57:temp57 + 0x20] = temp58;\n            \n                if (var5 == temp58) { goto label_01ED; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_01CB; }\n            \n            label_01C7:\n            \n            label_01ED:\n                memory[0x02c0:0x02e0] = 0x00;\n            \n                if (keccak256(memory[0x0140 + 0x20:0x0140 + 0x20 + memory[0x0140:0x0160]]) != keccak256(memory[0x02c0 + 0x20:0x02c0 + 0x20 + memory[0x02c0:0x02e0]])) {\n                    var0 = 0x00;\n                    var1 = 0x10;\n                    memory[0xc0:0xe0] = var1;\n                    var2 = keccak256(memory[0xc0:0xe0]) + 0x01;\n                    var3 = var0 + 0x03c0 + 0x20;\n                    memory[0xc0:0xe0] = var1;\n                    var temp59 = storage[keccak256(memory[0xc0:0xe0])];\n                    var4 = temp59;\n                    var5 = 0x0120;\n                    memory[var5:var5 + 0x20] = 0x00;\n                    var6 = 0x02;\n                \n                    if (memory[0x0120:0x0140] * 0x20 > var4) { goto label_02EE; }\n                \n                label_02F2:\n                    memory[var3 + memory[0x0120:0x0140] * 0x20:var3 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var2 + memory[0x0120:0x0140]];\n                    var temp60 = var5;\n                    var temp61 = memory[temp60:temp60 + 0x20] + 0x01;\n                    memory[temp60:temp60 + 0x20] = temp61;\n                \n                    if (var6 == temp61) { goto label_0314; }\n                \n                    if (memory[0x0120:0x0140] * 0x20 <= var4) { goto label_02F2; }\n                \n                label_02EE:\n                \n                label_0314:\n                    memory[0xc0:0xe0] = var1;\n                    var temp62 = var0 + storage[keccak256(memory[0xc0:0xe0])];\n                    memory[temp62 + 0x03c0 + 0x20:temp62 + 0x03c0 + 0x20 + 0x0100] = address(0x04).call.gas(msg.gas)(memory[0x0160:0x0260]);\n                    memory[0x03c0:0x03e0] = temp62 + memory[0x0140:0x0160];\n                    var0 = 0x03c0;\n                    var temp63 = memory[var0:var0 + 0x20] + 0x20;\n                    var1 = temp63;\n                    var temp64;\n                    temp64, memory[0x0580:0x0580 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                \n                    if (!temp64) { revert(memory[0x00:0x00]); }\n                \n                    var temp65 = memory[0x0580:0x05a0];\n                    var temp66 = (temp65 + 0x1f) - temp65 - 0x01 % 0x20 - temp65;\n                    memory[temp65 + 0x05a0:temp65 + 0x05a0 + temp66] = msg.data[msg.data.length:msg.data.length + temp66];\n                    memory[0x0560:0x0580] = 0x20;\n                    var temp67 = memory[0x0580:0x05a0] + 0x40;\n                    return memory[0x0560:0x0560 + (temp67 + 0x1f) - temp67 - 0x01 % 0x20];\n                } else {\n                    var0 = 0x10;\n                    memory[0xc0:0xe0] = var0;\n                    var1 = keccak256(memory[0xc0:0xe0]);\n                    var2 = 0x0340;\n                    var temp68 = storage[var1] + 0x20;\n                    var3 = temp68;\n                    var4 = 0x0120;\n                    memory[var4:var4 + 0x20] = 0x00;\n                    var5 = 0x03;\n                \n                    if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0245; }\n                \n                label_0249:\n                    memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                    var temp69 = var4;\n                    var temp70 = memory[temp69:temp69 + 0x20] + 0x01;\n                    memory[temp69:temp69 + 0x20] = temp70;\n                \n                    if (var5 == temp70) { goto label_026B; }\n                \n                    if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0249; }\n                \n                label_0245:\n                \n                label_026B:\n                    var temp71 = memory[0x0340:0x0360];\n                    var temp72 = (temp71 + 0x1f) - temp71 - 0x01 % 0x20 - temp71;\n                    memory[temp71 + 0x0360:temp71 + 0x0360 + temp72] = msg.data[msg.data.length:msg.data.length + temp72];\n                    memory[0x0320:0x0340] = 0x20;\n                    var temp73 = memory[0x0340:0x0360] + 0x40;\n                    return memory[0x0320:0x0320 + (temp73 + 0x1f) - temp73 - 0x01 % 0x20];\n                }\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            var0 = 0x10;\n            memory[0xc0:0xe0] = var0;\n            var1 = keccak256(memory[0xc0:0xe0]);\n            var2 = 0x0180;\n            var temp74 = storage[var1] + 0x20;\n            var3 = temp74;\n            var4 = 0x0120;\n            memory[var4:var4 + 0x20] = 0x00;\n            var5 = 0x03;\n        \n            if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_00E8; }\n        \n        label_00EC:\n            memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n            var temp75 = var4;\n            var temp76 = memory[temp75:temp75 + 0x20] + 0x01;\n            memory[temp75:temp75 + 0x20] = temp76;\n        \n            if (var5 == temp76) { goto label_010E; }\n        \n            if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_00EC; }\n        \n        label_00E8:\n        \n        label_010E:\n            var temp77 = memory[0x0180:0x01a0];\n            var temp78 = (temp77 + 0x1f) - temp77 - 0x01 % 0x20 - temp77;\n            memory[temp77 + 0x01a0:temp77 + 0x01a0 + temp78] = msg.data[msg.data.length:msg.data.length + temp78];\n            memory[0x0160:0x0180] = 0x20;\n            var temp79 = memory[0x0180:0x01a0] + 0x40;\n            return memory[0x0160:0x0160 + (temp79 + 0x1f) - temp79 - 0x01 % 0x20];\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
	"status": "1",
	"time_cost": 38.144349336624146,
	"usage": {
		"completion_tokens": 523,
		"prompt_tokens": 16454,
		"total_tokens": 16977
	}
}