{
	"address": "0x714c1ef3854591d4118bd6887d4740bc4d5f5412",
	"input_format": "TemplateDescription",
	"ir": "For the acceptOwnershipAPI function.\n- For newownerapi:\n  - the state variable ownerapi will be updated to newownerapi. Afterthat, \n    - the state variable newownerapi will be updated to 0.\n\nFor the approve function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- the allowance from caller to the first argument will be updated to the second argument.\n\nFor the SetNewBlockchainEnabled function.\n- For owner, and decimals2 equals to 0, and paused is not 0:\n  - the state variable decimals2 will be updated to 1.\n  - the state variable deadline4 will be updated to current time.\n\nFor the transferAnyERC20Token function, it has one argument and its type is address.\n- For owner:\n  - it calls an external function balanceOf of the first argument with the address of this contract as the argument, and gets the returned value as v0.\n  - When the call or transfer succeeds:\n    - it calls an external function transfer of the first argument with the following argument list: owner, and v0.\n- For ownerapi, and for users, except for owner:\n  - it calls an external function balanceOf of the first argument with the address of this contract as the argument, and gets the returned value as v0.\n  - When the call or transfer succeeds:\n    - it calls an external function transfer of the first argument with the following argument list: owner, and v0.\n\nFor the payable fallback function.\n- When paused equals to 0, and ispaused is 0:\n  - After enddate:\n    - the state variable tradingdate will be updated to (current time+3600).\n    - the state variable paused will be updated to 1.\n    - it transfers ether valued the balance of the address of this contract to owner.\n    - it transfers the ether just received (i.e., msg.value) to caller.\n  - When the ether just received (i.e., msg.value) is not greater than maxamounteth, and (the ether just received (i.e., msg.value)+the deposits of caller) is not greater than maxamounteth, and before enddate, and the ether just received (i.e., msg.value) is not smaller than minamounteth, and after startdate, and the addresskycstate of caller equals to 1:\n    - Before bonusend20:\n      - When the ether just received (i.e., msg.value) equals to 0:\n        - When ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0x4c4b40, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*13)/10)*10 EXP decimals)) is not greater than maxsellable, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*13)/10)*10 EXP decimals)) is not smaller than soldsupply:\n          - the state variable soldsupply will be updated to (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*13)/10)*10 EXP decimals)).\n          - When (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*13)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n            - the state variable totalSupply2 will be updated to (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*13)/10)*10 EXP decimals)).\n            - When (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*13)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n              - the balance of caller will be updated to (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*13)/10)*10 EXP decimals)).\n              - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n        - When (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*10 EXP decimals)) is not greater than maxsellable, and (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*10 EXP decimals)) is not smaller than soldsupply:\n          - the state variable soldsupply will be updated to (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*10 EXP decimals)).\n          - When (totalSupply2+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*10 EXP decimals)) is not smaller than totalSupply2:\n            - the state variable totalSupply2 will be updated to (totalSupply2+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*10 EXP decimals)).\n            - When (the balance of caller+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*10 EXP decimals)) is not smaller than the balance of caller:\n              - the balance of caller will be updated to (the balance of caller+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*10 EXP decimals)).\n              - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n        - When (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*12)/10)*10 EXP decimals)) is not smaller than soldsupply, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0xf4240, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is smaller than 0x4c4b40, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*12)/10)*10 EXP decimals)) is not greater than maxsellable:\n          - the state variable soldsupply will be updated to (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*12)/10)*10 EXP decimals)).\n          - When (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*12)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n            - the state variable totalSupply2 will be updated to (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*12)/10)*10 EXP decimals)).\n            - When (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*12)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n              - the balance of caller will be updated to (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*12)/10)*10 EXP decimals)).\n              - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n      - When the ether just received (i.e., msg.value) does not equal to 0, and ((the ether just received (i.e., msg.value)*exchangerate)/the ether just received (i.e., msg.value)) equals to exchangerate:\n        - When ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0x4c4b40, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*13)/10)*10 EXP decimals)) is not greater than maxsellable, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*13)/10)*10 EXP decimals)) is not smaller than soldsupply:\n          - the state variable soldsupply will be updated to (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*13)/10)*10 EXP decimals)).\n          - When (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*13)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n            - the state variable totalSupply2 will be updated to (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*13)/10)*10 EXP decimals)).\n            - When (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*13)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n              - the balance of caller will be updated to (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*13)/10)*10 EXP decimals)).\n              - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n        - When (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*10 EXP decimals)) is not greater than maxsellable, and (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*10 EXP decimals)) is not smaller than soldsupply:\n          - the state variable soldsupply will be updated to (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*10 EXP decimals)).\n          - When (totalSupply2+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*10 EXP decimals)) is not smaller than totalSupply2:\n            - the state variable totalSupply2 will be updated to (totalSupply2+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*10 EXP decimals)).\n            - When (the balance of caller+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*10 EXP decimals)) is not smaller than the balance of caller:\n              - the balance of caller will be updated to (the balance of caller+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*10 EXP decimals)).\n              - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n        - When (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*12)/10)*10 EXP decimals)) is not smaller than soldsupply, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0xf4240, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is smaller than 0x4c4b40, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*12)/10)*10 EXP decimals)) is not greater than maxsellable:\n          - the state variable soldsupply will be updated to (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*12)/10)*10 EXP decimals)).\n          - When (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*12)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n            - the state variable totalSupply2 will be updated to (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*12)/10)*10 EXP decimals)).\n            - When (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*12)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n              - the balance of caller will be updated to (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*12)/100)*12)/10)*10 EXP decimals)).\n              - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n    - When the ether just received (i.e., msg.value) equals to 0:\n      - After bonusend20:\n        - Before bonusend10:\n          - When ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0x4c4b40, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*13)/10)*10 EXP decimals)) is not greater than maxsellable, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*13)/10)*10 EXP decimals)) is not smaller than soldsupply:\n            - the state variable soldsupply will be updated to (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*13)/10)*10 EXP decimals)).\n            - When (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*13)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n              - the state variable totalSupply2 will be updated to (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*13)/10)*10 EXP decimals)).\n              - When (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*13)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n                - the balance of caller will be updated to (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*13)/10)*10 EXP decimals)).\n                - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n          - When (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*10 EXP decimals)) is not greater than maxsellable, and (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*10 EXP decimals)) is not smaller than soldsupply:\n            - the state variable soldsupply will be updated to (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*10 EXP decimals)).\n            - When (totalSupply2+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*10 EXP decimals)) is not smaller than totalSupply2:\n              - the state variable totalSupply2 will be updated to (totalSupply2+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*10 EXP decimals)).\n              - When (the balance of caller+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*10 EXP decimals)) is not smaller than the balance of caller:\n                - the balance of caller will be updated to (the balance of caller+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*10 EXP decimals)).\n                - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n          - When (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*12)/10)*10 EXP decimals)) is not smaller than soldsupply, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*12)/10)*10 EXP decimals)) is not greater than maxsellable, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is smaller than 0x4c4b40, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0xf4240:\n            - the state variable soldsupply will be updated to (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*12)/10)*10 EXP decimals)).\n            - When (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*12)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n              - the state variable totalSupply2 will be updated to (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*12)/10)*10 EXP decimals)).\n              - When (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*12)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n                - the balance of caller will be updated to (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*12)/10)*10 EXP decimals)).\n                - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n        - After bonusend10, and before bonusend05:\n          - When (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*13)/10)*10 EXP decimals)) is not smaller than soldsupply, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0x4c4b40, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*13)/10)*10 EXP decimals)) is not greater than maxsellable:\n            - the state variable soldsupply will be updated to (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*13)/10)*10 EXP decimals)).\n            - When (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*13)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n              - the state variable totalSupply2 will be updated to (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*13)/10)*10 EXP decimals)).\n              - When (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*13)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n                - the balance of caller will be updated to (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*13)/10)*10 EXP decimals)).\n                - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n          - When (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*10 EXP decimals)) is not greater than maxsellable, and (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*10 EXP decimals)) is not smaller than soldsupply:\n            - the state variable soldsupply will be updated to (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*10 EXP decimals)).\n            - When (totalSupply2+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*10 EXP decimals)) is not smaller than totalSupply2:\n              - the state variable totalSupply2 will be updated to (totalSupply2+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*10 EXP decimals)).\n              - When (the balance of caller+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*10 EXP decimals)) is not smaller than the balance of caller:\n                - the balance of caller will be updated to (the balance of caller+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*10 EXP decimals)).\n                - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n          - When (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*12)/10)*10 EXP decimals)) is not greater than maxsellable, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is smaller than 0x4c4b40, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*12)/10)*10 EXP decimals)) is not smaller than soldsupply, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0xf4240:\n            - the state variable soldsupply will be updated to (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*12)/10)*10 EXP decimals)).\n            - When (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*12)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n              - the state variable totalSupply2 will be updated to (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*12)/10)*10 EXP decimals)).\n              - When (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*12)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n                - the balance of caller will be updated to (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*12)/10)*10 EXP decimals)).\n                - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n      - When (soldsupply+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*13)/10)*10 EXP decimals)) is not smaller than soldsupply, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0x4c4b40, and (soldsupply+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*13)/10)*10 EXP decimals)) is not greater than maxsellable:\n        - the state variable soldsupply will be updated to (soldsupply+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*13)/10)*10 EXP decimals)).\n        - When (totalSupply2+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*13)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n          - the state variable totalSupply2 will be updated to (totalSupply2+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*13)/10)*10 EXP decimals)).\n          - When (the balance of caller+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*13)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n            - the balance of caller will be updated to (the balance of caller+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*13)/10)*10 EXP decimals)).\n            - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n              - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n              - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n      - When (soldsupply+((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*10 EXP decimals)) is not greater than maxsellable, and (soldsupply+((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*10 EXP decimals)) is not smaller than soldsupply:\n        - the state variable soldsupply will be updated to (soldsupply+((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*10 EXP decimals)).\n        - When (totalSupply2+((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n          - the state variable totalSupply2 will be updated to (totalSupply2+((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*10 EXP decimals)).\n          - When (the balance of caller+((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n            - the balance of caller will be updated to (the balance of caller+((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*10 EXP decimals)).\n            - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n              - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n              - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n      - When (soldsupply+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*12)/10)*10 EXP decimals)) is not greater than maxsellable, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0xf4240, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is smaller than 0x4c4b40, and (soldsupply+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*12)/10)*10 EXP decimals)) is not smaller than soldsupply:\n        - the state variable soldsupply will be updated to (soldsupply+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*12)/10)*10 EXP decimals)).\n        - When (totalSupply2+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*12)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n          - the state variable totalSupply2 will be updated to (totalSupply2+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*12)/10)*10 EXP decimals)).\n          - When (the balance of caller+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*12)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n            - the balance of caller will be updated to (the balance of caller+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*12)/10)*10 EXP decimals)).\n            - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n              - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n              - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n    - When the ether just received (i.e., msg.value) does not equal to 0, and ((the ether just received (i.e., msg.value)*exchangerate)/the ether just received (i.e., msg.value)) equals to exchangerate:\n      - After bonusend20:\n        - Before bonusend10:\n          - When ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0x4c4b40, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*13)/10)*10 EXP decimals)) is not greater than maxsellable, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*13)/10)*10 EXP decimals)) is not smaller than soldsupply:\n            - the state variable soldsupply will be updated to (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*13)/10)*10 EXP decimals)).\n            - When (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*13)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n              - the state variable totalSupply2 will be updated to (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*13)/10)*10 EXP decimals)).\n              - When (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*13)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n                - the balance of caller will be updated to (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*13)/10)*10 EXP decimals)).\n                - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n          - When (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*10 EXP decimals)) is not greater than maxsellable, and (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*10 EXP decimals)) is not smaller than soldsupply:\n            - the state variable soldsupply will be updated to (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*10 EXP decimals)).\n            - When (totalSupply2+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*10 EXP decimals)) is not smaller than totalSupply2:\n              - the state variable totalSupply2 will be updated to (totalSupply2+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*10 EXP decimals)).\n              - When (the balance of caller+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*10 EXP decimals)) is not smaller than the balance of caller:\n                - the balance of caller will be updated to (the balance of caller+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*10 EXP decimals)).\n                - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n          - When (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*12)/10)*10 EXP decimals)) is not smaller than soldsupply, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*12)/10)*10 EXP decimals)) is not greater than maxsellable, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is smaller than 0x4c4b40, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0xf4240:\n            - the state variable soldsupply will be updated to (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*12)/10)*10 EXP decimals)).\n            - When (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*12)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n              - the state variable totalSupply2 will be updated to (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*12)/10)*10 EXP decimals)).\n              - When (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*12)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n                - the balance of caller will be updated to (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*11)/100)*12)/10)*10 EXP decimals)).\n                - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n        - After bonusend10, and before bonusend05:\n          - When (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*13)/10)*10 EXP decimals)) is not smaller than soldsupply, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0x4c4b40, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*13)/10)*10 EXP decimals)) is not greater than maxsellable:\n            - the state variable soldsupply will be updated to (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*13)/10)*10 EXP decimals)).\n            - When (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*13)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n              - the state variable totalSupply2 will be updated to (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*13)/10)*10 EXP decimals)).\n              - When (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*13)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n                - the balance of caller will be updated to (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*13)/10)*10 EXP decimals)).\n                - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n          - When (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*10 EXP decimals)) is not greater than maxsellable, and (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*10 EXP decimals)) is not smaller than soldsupply:\n            - the state variable soldsupply will be updated to (soldsupply+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*10 EXP decimals)).\n            - When (totalSupply2+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*10 EXP decimals)) is not smaller than totalSupply2:\n              - the state variable totalSupply2 will be updated to (totalSupply2+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*10 EXP decimals)).\n              - When (the balance of caller+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*10 EXP decimals)) is not smaller than the balance of caller:\n                - the balance of caller will be updated to (the balance of caller+(((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*10 EXP decimals)).\n                - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n          - When (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*12)/10)*10 EXP decimals)) is not greater than maxsellable, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is smaller than 0x4c4b40, and (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*12)/10)*10 EXP decimals)) is not smaller than soldsupply, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0xf4240:\n            - the state variable soldsupply will be updated to (soldsupply+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*12)/10)*10 EXP decimals)).\n            - When (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*12)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n              - the state variable totalSupply2 will be updated to (totalSupply2+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*12)/10)*10 EXP decimals)).\n              - When (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*12)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n                - the balance of caller will be updated to (the balance of caller+(((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)*105)/1000)*12)/10)*10 EXP decimals)).\n                - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n                  - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n                  - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n      - When (soldsupply+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*13)/10)*10 EXP decimals)) is not smaller than soldsupply, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0x4c4b40, and (soldsupply+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*13)/10)*10 EXP decimals)) is not greater than maxsellable:\n        - the state variable soldsupply will be updated to (soldsupply+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*13)/10)*10 EXP decimals)).\n        - When (totalSupply2+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*13)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n          - the state variable totalSupply2 will be updated to (totalSupply2+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*13)/10)*10 EXP decimals)).\n          - When (the balance of caller+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*13)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n            - the balance of caller will be updated to (the balance of caller+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*13)/10)*10 EXP decimals)).\n            - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n              - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n              - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n      - When (soldsupply+((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*10 EXP decimals)) is not greater than maxsellable, and (soldsupply+((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*10 EXP decimals)) is not smaller than soldsupply:\n        - the state variable soldsupply will be updated to (soldsupply+((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*10 EXP decimals)).\n        - When (totalSupply2+((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n          - the state variable totalSupply2 will be updated to (totalSupply2+((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*10 EXP decimals)).\n          - When (the balance of caller+((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n            - the balance of caller will be updated to (the balance of caller+((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*10 EXP decimals)).\n            - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n              - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n              - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n      - When (soldsupply+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*12)/10)*10 EXP decimals)) is not greater than maxsellable, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is not smaller than 0xf4240, and ((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000) is smaller than 0x4c4b40, and (soldsupply+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*12)/10)*10 EXP decimals)) is not smaller than soldsupply:\n        - the state variable soldsupply will be updated to (soldsupply+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*12)/10)*10 EXP decimals)).\n        - When (totalSupply2+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*12)/10)*10 EXP decimals)) is not smaller than totalSupply2:\n          - the state variable totalSupply2 will be updated to (totalSupply2+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*12)/10)*10 EXP decimals)).\n          - When (the balance of caller+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*12)/10)*10 EXP decimals)) is not smaller than the balance of caller:\n            - the balance of caller will be updated to (the balance of caller+((((((the ether just received (i.e., msg.value)*exchangerate)/0xde0b6b3a7640000)/10)*12)/10)*10 EXP decimals)).\n            - When (the deposits of caller+the ether just received (i.e., msg.value)) is not smaller than the deposits of caller:\n              - the deposits of caller will be updated to (the deposits of caller+the ether just received (i.e., msg.value)).\n              - it transfers ((the ether just received (i.e., msg.value)*15)/100) to ownerapi.\n\nFor the unpause function.\n- For owner, and ispaused is not 0:\n  - the state variable ispaused will be updated to 0.\n\nFor the transferAPIOwnership function, it has one argument and its type is address.\n- For owner:\n  - the state variable newownerapi will be updated to the first argument.\n\nFor the acceptOwnership function.\n- For newowner:\n  - the state variable owner will be updated to newowner. Afterthat, \n    - the state variable newowner will be updated to 0.\n\nFor the transferFrom function, it has 3 arguments and the type of each argument is as follows: address, address, uint256.\n- When ispaused is 0:\n  - When the third argument is not greater than the allowance from the first argument to caller:\n    - After tradingdate:\n      - the allowance from the first argument to caller will be updated to (the allowance from the first argument to caller-the third argument).\n      - When the third argument is not greater than the balance of the first argument:\n        - the balance of the first argument will be updated to (the balance of the first argument-the third argument).\n        - When (the balance of the second argument+the third argument) is not smaller than the balance of the second argument:\n          - the balance of the second argument will be updated to (the balance of the second argument+the third argument).\n    - When the addresskycstate of the second argument equals to 1:\n      - Before tradingdate:\n        - the allowance from the first argument to caller will be updated to (the allowance from the first argument to caller-the third argument).\n        - When the third argument is not greater than the balance of the first argument:\n          - the balance of the first argument will be updated to (the balance of the first argument-the third argument).\n          - When (the balance of the second argument+the third argument) is not smaller than the balance of the second argument:\n            - the balance of the second argument will be updated to (the balance of the second argument+the third argument).\n      - Before tradingdate:\n        - the allowance from the first argument to caller will be updated to (the allowance from the first argument to caller-the third argument).\n        - When the third argument is not greater than the balance of the first argument:\n          - the balance of the first argument will be updated to (the balance of the first argument-the third argument).\n          - When (the balance of the second argument+the third argument) is not smaller than the balance of the second argument:\n            - the balance of the second argument will be updated to (the balance of the second argument+the third argument).\n    - After tradingdate:\n      - the allowance from the first argument to caller will be updated to (the allowance from the first argument to caller-the third argument).\n      - When the third argument is not greater than the balance of the first argument:\n        - the balance of the first argument will be updated to (the balance of the first argument-the third argument).\n        - When (the balance of the second argument+the third argument) is not smaller than the balance of the second argument:\n          - the balance of the second argument will be updated to (the balance of the second argument+the third argument).\n  - When paused equals to 0, and after enddate:\n    - the state variable tradingdate will be updated to (current time+3600).\n    - the state variable paused will be updated to 1.\n    - it transfers ether valued the balance of the address of this contract to owner.\n\nFor the pause function.\n- For owner, and ispaused is 0:\n  - the state variable ispaused will be updated to 1.\n\nFor the BurnMyTokensAndSetAmountForNewBlockchain function.\n- When decimals2 is not 0, and (the burnedbalance of caller+the balance of caller) is not smaller than the burnedbalance of caller:\n  - the burnedbalance of caller will be updated to (the burnedbalance of caller+the balance of caller). Afterthat, \n    - the balance of caller will be updated to 0.\n\nFor the finishMinting function.\n- After enddate:\n  - When paused equals to 0:\n    - the state variable tradingdate will be updated to (current time+3600).\n    - the state variable paused will be updated to 1.\n    - it transfers ether valued the balance of the address of this contract to owner.\n  - When paused does not equal to 0:\n    - When totalSupply2 is not smaller than maxsupply:\n      - the state variable tradingdate will be updated to (current time+3600).\n      - the state variable paused will be updated to 1.\n      - it transfers ether valued the balance of the address of this contract to owner.\n    - When totalSupply2 is smaller than maxsupply, and the balance of the address of this contract is greater than 0:\n      - it transfers ether valued the balance of the address of this contract to owner.\n- When totalSupply2 is not smaller than maxsupply, and before enddate:\n  - the state variable tradingdate will be updated to (current time+3600).\n  - the state variable paused will be updated to 1.\n  - it transfers ether valued the balance of the address of this contract to owner.\n\nFor the updateExchangeRate function, it has one argument and its type is uint256.\n- For owner:\n  - the state variable exchangerate will be updated to the first argument.\n- For ownerapi, and for users, except for owner:\n  - the state variable exchangerate will be updated to the first argument.\n\nFor the approveAndCall function, it has 3 arguments and the type of each argument is as follows: address, uint256, bytes.\n- When ispaused is 0:\n  - the allowance from caller to the first argument will be updated to the second argument.\n  - When 0 is not smaller than the third argument:\n    - it calls an external function receiveApproval of the first argument.\n  - When 0 is smaller than the third argument:\n    - When 32 is not smaller than the third argument:\n      - it calls an external function receiveApproval of the first argument.\n    - When 32 is smaller than the third argument:\n      - When 64 is not smaller than the third argument:\n        - it calls an external function receiveApproval of the first argument.\n      - When 64 is smaller than the third argument:\n        - When 96 is not smaller than the third argument:\n          - it calls an external function receiveApproval of the first argument.\n        - When 96 is smaller than the third argument:\n          - When 128 is not smaller than the third argument:\n            - it calls an external function receiveApproval of the first argument.\n          - When 128 is smaller than the third argument, and 160 is not smaller than the third argument:\n            - it calls an external function receiveApproval of the first argument.\n\nFor the transfer function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- When ispaused is 0:\n  - When the second argument is not greater than the balance of caller:\n    - After tradingdate:\n      - the balance of caller will be updated to (the balance of caller-the second argument).\n      - When (the balance of the first argument+the second argument) is not smaller than the balance of the first argument:\n        - the balance of the first argument will be updated to (the balance of the first argument+the second argument).\n    - Before tradingdate:\n      - When the addresskycstate of the first argument equals to 1:\n        - the balance of caller will be updated to (the balance of caller-the second argument).\n        - When (the balance of the first argument+the second argument) is not smaller than the balance of the first argument:\n          - the balance of the first argument will be updated to (the balance of the first argument+the second argument).\n      - For owner2, and the addresskycstate of the first argument does not equal to 1:\n        - the balance of caller will be updated to (the balance of caller-the second argument).\n        - When (the balance of the first argument+the second argument) is not smaller than the balance of the first argument:\n          - the balance of the first argument will be updated to (the balance of the first argument+the second argument).\n    - After tradingdate:\n      - the balance of caller will be updated to (the balance of caller-the second argument).\n      - When (the balance of the first argument+the second argument) is not smaller than the balance of the first argument:\n        - the balance of the first argument will be updated to (the balance of the first argument+the second argument).\n    - Before tradingdate:\n      - When the addresskycstate of the first argument equals to 1:\n        - the balance of caller will be updated to (the balance of caller-the second argument).\n        - When (the balance of the first argument+the second argument) is not smaller than the balance of the first argument:\n          - the balance of the first argument will be updated to (the balance of the first argument+the second argument).\n      - For owner2, and the addresskycstate of the first argument does not equal to 1:\n        - the balance of caller will be updated to (the balance of caller-the second argument).\n        - When (the balance of the first argument+the second argument) is not smaller than the balance of the first argument:\n          - the balance of the first argument will be updated to (the balance of the first argument+the second argument).\n  - When paused equals to 0, and after enddate:\n    - the state variable tradingdate will be updated to (current time+3600).\n    - the state variable paused will be updated to 1.\n    - it transfers ether valued the balance of the address of this contract to owner.\n\nFor the transferVestingMonthlyAmount function, it has one argument and its type is address.\n- For owner, and the first argument does not equal to 0, and ispaused is 0, and ((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract)) is greater than 0:\n  - When ((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract)) is not greater than the allowance from the address of this contract to caller:\n    - After tradingdate:\n      - the allowance from the address of this contract to caller will be updated to (the allowance from the address of this contract to caller-((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n      - When ((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract)) is not greater than the balance of the address of this contract:\n        - the balance of the address of this contract will be updated to (the balance of the address of this contract-((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n        - When (the balance of the first argument+((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))) is not smaller than the balance of the first argument:\n          - the balance of the first argument will be updated to (the balance of the first argument+((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n          - After (tradingdate+0x3c26700), and the balance of the address of this contract is not greater than the allowance from the address of this contract to caller:\n            - the allowance from the address of this contract to caller will be updated to (the allowance from the address of this contract to caller-the balance of the address of this contract).\n            - When the balance of the address of this contract is not greater than the balance of the address of this contract:\n              - the balance of the address of this contract will be updated to (the balance of the address of this contract-the balance of the address of this contract).\n              - When (the balance of the first argument+the balance of the address of this contract) is not smaller than the balance of the first argument:\n                - the balance of the first argument will be updated to (the balance of the first argument+the balance of the address of this contract).\n    - When the addresskycstate of the first argument equals to 1:\n      - Before tradingdate:\n        - the allowance from the address of this contract to caller will be updated to (the allowance from the address of this contract to caller-((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n        - When ((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract)) is not greater than the balance of the address of this contract:\n          - the balance of the address of this contract will be updated to (the balance of the address of this contract-((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n          - When (the balance of the first argument+((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))) is not smaller than the balance of the first argument:\n            - the balance of the first argument will be updated to (the balance of the first argument+((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n            - After (tradingdate+0x3c26700), and the balance of the address of this contract is not greater than the allowance from the address of this contract to caller:\n              - the allowance from the address of this contract to caller will be updated to (the allowance from the address of this contract to caller-the balance of the address of this contract).\n              - When the balance of the address of this contract is not greater than the balance of the address of this contract:\n                - the balance of the address of this contract will be updated to (the balance of the address of this contract-the balance of the address of this contract).\n                - When (the balance of the first argument+the balance of the address of this contract) is not smaller than the balance of the first argument:\n                  - the balance of the first argument will be updated to (the balance of the first argument+the balance of the address of this contract).\n      - Before tradingdate:\n        - the allowance from the address of this contract to caller will be updated to (the allowance from the address of this contract to caller-((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n        - When ((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract)) is not greater than the balance of the address of this contract:\n          - the balance of the address of this contract will be updated to (the balance of the address of this contract-((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n          - When (the balance of the first argument+((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))) is not smaller than the balance of the first argument:\n            - the balance of the first argument will be updated to (the balance of the first argument+((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n            - After (tradingdate+0x3c26700), and the balance of the address of this contract is not greater than the allowance from the address of this contract to caller:\n              - the allowance from the address of this contract to caller will be updated to (the allowance from the address of this contract to caller-the balance of the address of this contract).\n              - When the balance of the address of this contract is not greater than the balance of the address of this contract:\n                - the balance of the address of this contract will be updated to (the balance of the address of this contract-the balance of the address of this contract).\n                - When (the balance of the first argument+the balance of the address of this contract) is not smaller than the balance of the first argument:\n                  - the balance of the first argument will be updated to (the balance of the first argument+the balance of the address of this contract).\n    - After tradingdate:\n      - the allowance from the address of this contract to caller will be updated to (the allowance from the address of this contract to caller-((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n      - When ((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract)) is not greater than the balance of the address of this contract:\n        - the balance of the address of this contract will be updated to (the balance of the address of this contract-((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n        - When (the balance of the first argument+((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))) is not smaller than the balance of the first argument:\n          - the balance of the first argument will be updated to (the balance of the first argument+((((((((current time-tradingdate)/3600)/24)/30)+1)*((((maxsupply*15)/100)*(100-decimals3))/100))/24)-(((((maxsupply*15)/100)*(100-decimals3))/100)-the balance of the address of this contract))).\n          - After (tradingdate+0x3c26700), and the balance of the address of this contract is not greater than the allowance from the address of this contract to caller:\n            - the allowance from the address of this contract to caller will be updated to (the allowance from the address of this contract to caller-the balance of the address of this contract).\n            - When the balance of the address of this contract is not greater than the balance of the address of this contract:\n              - the balance of the address of this contract will be updated to (the balance of the address of this contract-the balance of the address of this contract).\n              - When (the balance of the first argument+the balance of the address of this contract) is not smaller than the balance of the first argument:\n                - the balance of the first argument will be updated to (the balance of the first argument+the balance of the address of this contract).\n  - When paused equals to 0, and after enddate:\n    - the state variable tradingdate will be updated to (current time+3600).\n    - the state variable paused will be updated to 1.\n    - it transfers ether valued the balance of the address of this contract to owner.\n\nFor the transferAllERC20Token function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- For owner:\n  - it calls an external function transfer of the first argument with the following argument list: owner, and the second argument.\n- For ownerapi, and for users, except for owner:\n  - it calls an external function transfer of the first argument with the following argument list: owner, and the second argument.\n\nFor the transferOwnership function, it has one argument and its type is address.\n- For owner:\n  - the state variable newowner will be updated to the first argument.\n\nFor the BurnTokensAndSetAmountForNewBlockchain function, it has one argument and its type is address.\n- When decimals2 is not 0, and (the burnedbalance of the first argument+the balance of the first argument) is not smaller than the burnedbalance of the first argument:\n  - For owner:\n    - the burnedbalance of the first argument will be updated to (the burnedbalance of the first argument+the balance of the first argument). Afterthat, \n      - the balance of the first argument will be updated to 0.\n  - For ownerapi, and for users, except for owner:\n    - the burnedbalance of the first argument will be updated to (the burnedbalance of the first argument+the balance of the first argument). Afterthat, \n      - the balance of the first argument will be updated to 0.\n\nFor the setAddressKYC function, it has 2 arguments and the type of each argument is as follows: address, bool.\n- For owner:\n  - the addresskycstate of the first argument will be updated to the second argument.\n- For ownerapi, and for users, except for owner:\n  - the addresskycstate of the first argument will be updated to the second argument.\n\nFor the updateEndDate function, it has one argument and its type is uint256.\n- When paused is 0, and decimals2 is 0:\n  - For owner:\n    - the state variable enddate will be updated to the first argument.\n  - For ownerapi, and for users, except for owner:\n    - the state variable enddate will be updated to the first argument.\n\nFor the updateTokenNameSymbolAddress function, it has 3 arguments and the type of each argument is as follows: string, string, address.\n- When ispaused is not 0:\n  - For owner:\n    - the state variable name will be updated to the first argument.\n    - When (SHA3(5)+((31+(name/2))/32)) is not greater than SHA3(5):\n      - the state variable symbol will be updated to the second argument.\n      - When 31 is smaller than the second argument:\n        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n          - the state variable currentrunningaddress will be updated to the third argument.\n          - When 31 is smaller than the first argument:\n            - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n          - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n            - the state variable currentrunningaddress will be updated to the third argument.\n            - When 31 is smaller than the first argument:\n              - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n              - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n      - When 31 is smaller than the first argument:\n        - the state variable symbol will be updated to the second argument.\n    - When (SHA3(5)+((31+(name/2))/32)) is greater than SHA3(5):\n      - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+SHA3(5)):\n        - the state variable symbol will be updated to the second argument.\n        - When 31 is smaller than the second argument:\n          - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n            - the state variable currentrunningaddress will be updated to the third argument.\n            - When 31 is smaller than the first argument:\n              - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n              - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n        - When 31 is smaller than the first argument:\n          - the state variable symbol will be updated to the second argument.\n      - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+SHA3(5)):\n        - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+SHA3(5))):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n          - When 31 is smaller than the first argument:\n            - the state variable symbol will be updated to the second argument.\n        - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))):\n          - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+SHA3(5)))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n            - When 31 is smaller than the first argument:\n              - the state variable symbol will be updated to the second argument.\n          - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n            - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(5))))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable symbol will be updated to the second argument.\n            - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(5)))))):\n              - the state variable symbol will be updated to the second argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable symbol will be updated to the second argument.\n    - When the first argument is not 0, and 31 is smaller than the first argument, and (160+the first argument) is greater than 160:\n      - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+SHA3(5)):\n        - the state variable symbol will be updated to the second argument.\n        - When 31 is smaller than the second argument:\n          - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n            - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+SHA3(5))):\n        - When (160+the first argument) is greater than 192:\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+SHA3(5)))):\n        - When (160+the first argument) is greater than 192:\n          - When (160+the first argument) is greater than 224:\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(5))))):\n        - When (160+the first argument) is greater than 192:\n          - When (160+the first argument) is greater than 224:\n            - When (160+the first argument) is greater than 256:\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(5)))))):\n        - When (160+the first argument) is greater than 192:\n          - When (160+the first argument) is greater than 224:\n            - When (160+the first argument) is greater than 256:\n              - When (160+the first argument) is greater than 288:\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                          - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n                          - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n              - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+(1+SHA3(5)))))):\n        - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+SHA3(5))))))):\n          - When (160+the first argument) is greater than 192:\n            - When (160+the first argument) is greater than 224:\n              - When (160+the first argument) is greater than 256:\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                          - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n                          - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+SHA3(5)):\n            - the state variable symbol will be updated to the second argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n              - the state variable currentrunningaddress will be updated to the third argument.\n        - When (160+the first argument) is greater than 192, and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+SHA3(5))))))):\n          - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))):\n            - When (160+the first argument) is greater than 224:\n              - When (160+the first argument) is greater than 256:\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))):\n              - the state variable symbol will be updated to the second argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n          - When (160+the first argument) is greater than 224, and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))):\n            - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+(1+SHA3(5))))))))):\n              - When (160+the first argument) is greater than 256:\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n                - the state variable symbol will be updated to the second argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+(1+(1+SHA3(5))))))))), and (160+the first argument) is greater than 256:\n              - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))))):\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+(1+(1+(1+SHA3(5))))))))))), and (160+the first argument) is greater than 288, and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))))):\n                - the state variable symbol will be updated to the second argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n  - For ownerapi, and for users, except for owner:\n    - the state variable name will be updated to the first argument.\n    - When (SHA3(5)+((31+(name/2))/32)) is not greater than SHA3(5):\n      - the state variable symbol will be updated to the second argument.\n      - When 31 is smaller than the second argument:\n        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n          - the state variable currentrunningaddress will be updated to the third argument.\n          - When 31 is smaller than the first argument:\n            - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n          - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n            - the state variable currentrunningaddress will be updated to the third argument.\n            - When 31 is smaller than the first argument:\n              - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n              - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n      - When 31 is smaller than the first argument:\n        - the state variable symbol will be updated to the second argument.\n    - When (SHA3(5)+((31+(name/2))/32)) is greater than SHA3(5):\n      - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+SHA3(5)):\n        - the state variable symbol will be updated to the second argument.\n        - When 31 is smaller than the second argument:\n          - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n            - the state variable currentrunningaddress will be updated to the third argument.\n            - When 31 is smaller than the first argument:\n              - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n              - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n        - When 31 is smaller than the first argument:\n          - the state variable symbol will be updated to the second argument.\n      - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+SHA3(5)):\n        - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+SHA3(5))):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n          - When 31 is smaller than the first argument:\n            - the state variable symbol will be updated to the second argument.\n        - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))):\n          - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+SHA3(5)))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n            - When 31 is smaller than the first argument:\n              - the state variable symbol will be updated to the second argument.\n          - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n            - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(5))))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                  - When 31 is smaller than the first argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable symbol will be updated to the second argument.\n            - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(5)))))):\n              - the state variable symbol will be updated to the second argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n                - When 31 is smaller than the first argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n              - When 31 is smaller than the first argument:\n                - the state variable symbol will be updated to the second argument.\n    - When the first argument is not 0, and 31 is smaller than the first argument, and (160+the first argument) is greater than 160:\n      - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+SHA3(5)):\n        - the state variable symbol will be updated to the second argument.\n        - When 31 is smaller than the second argument:\n          - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n            - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+SHA3(5))):\n        - When (160+the first argument) is greater than 192:\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+SHA3(5)))):\n        - When (160+the first argument) is greater than 192:\n          - When (160+the first argument) is greater than 224:\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(5))))):\n        - When (160+the first argument) is greater than 192:\n          - When (160+the first argument) is greater than 224:\n            - When (160+the first argument) is greater than 256:\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(5)))))):\n        - When (160+the first argument) is greater than 192:\n          - When (160+the first argument) is greater than 224:\n            - When (160+the first argument) is greater than 256:\n              - When (160+the first argument) is greater than 288:\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))):\n                          - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n                          - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(4))))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(4)))))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))):\n            - the state variable symbol will be updated to the second argument.\n            - When 31 is smaller than the second argument:\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n        - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+SHA3(5)):\n          - the state variable symbol will be updated to the second argument.\n          - When 31 is smaller than the second argument:\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n              - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n              - the state variable currentrunningaddress will be updated to the third argument.\n      - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+(1+SHA3(5)))))):\n        - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+SHA3(5))))))):\n          - When (160+the first argument) is greater than 192:\n            - When (160+the first argument) is greater than 224:\n              - When (160+the first argument) is greater than 256:\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                          - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n                          - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(4))))):\n                            - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))):\n              - the state variable symbol will be updated to the second argument.\n              - When 31 is smaller than the second argument:\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                  - the state variable currentrunningaddress will be updated to the third argument.\n          - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+SHA3(5)):\n            - the state variable symbol will be updated to the second argument.\n            - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n              - the state variable currentrunningaddress will be updated to the third argument.\n        - When (160+the first argument) is greater than 192, and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+SHA3(5))))))):\n          - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))):\n            - When (160+the first argument) is greater than 224:\n              - When (160+the first argument) is greater than 256:\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                        - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(4)))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(4))):\n                          - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n                - the state variable symbol will be updated to the second argument.\n                - When 31 is smaller than the second argument:\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                    - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+SHA3(5))):\n              - the state variable symbol will be updated to the second argument.\n              - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                - the state variable currentrunningaddress will be updated to the third argument.\n          - When (160+the first argument) is greater than 224, and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))):\n            - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+(1+SHA3(5))))))))):\n              - When (160+the first argument) is greater than 256:\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4):\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                      - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(4))), and (SHA3(4)+((31+(symbol/2))/32)) is greater than (1+SHA3(4)):\n                        - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))), and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(5)))):\n                - the state variable symbol will be updated to the second argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n            - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+(1+(1+SHA3(5))))))))), and (160+the first argument) is greater than 256:\n              - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))))):\n                - When (160+the first argument) is greater than 288:\n                  - the state variable symbol will be updated to the second argument.\n                  - When 31 is smaller than the second argument:\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                    - When (SHA3(4)+((31+(symbol/2))/32)) is greater than SHA3(4), and (SHA3(4)+((31+(symbol/2))/32)) is not greater than (1+SHA3(4)):\n                      - the state variable currentrunningaddress will be updated to the third argument.\n                - When (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(5))))):\n                  - the state variable symbol will be updated to the second argument.\n                  - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                    - the state variable currentrunningaddress will be updated to the third argument.\n              - When (SHA3(5)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+(1+(1+(1+(1+(1+SHA3(5))))))))))), and (160+the first argument) is greater than 288, and (SHA3(5)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+(1+(1+(1+(1+(1+SHA3(5)))))))))):\n                - the state variable symbol will be updated to the second argument.\n                - When (SHA3(4)+((31+(symbol/2))/32)) is not greater than SHA3(4), and 31 is smaller than the second argument:\n                  - the state variable currentrunningaddress will be updated to the third argument.\n\n",
	"language": "Solidity",
	"status": "Error code: 400 - {'error': {'message': \"This model's maximum context length is 32768 tokens. However, your messages resulted in 45654 tokens. Please reduce the length of the messages.\", 'type': 'invalid_request_error', 'param': 'messages', 'code': 'context_length_exceeded'}}"
}