{
	"address": "0x3565f84c8cd841ff9f2773d02f492e3b058aec5e",
	"input_format": "DecompiledCode",
	"ir": "// Decompiled by library.dedaub.com\n// 2022.11.16 18:39 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _fundingGoal; // STORAGE[0x1]\nuint256 _amountRaised; // STORAGE[0x2]\nuint256 _deadline; // STORAGE[0x3]\nuint256 _price; // STORAGE[0x4]\nmapping (uint256 => [uint256]) _balanceOf; // STORAGE[0x6]\nuint256 _beneficiary; // STORAGE[0x0] bytes 0 to 19\nuint256 stor_4_0_0; // STORAGE[0x4] bytes 0 to 0\nuint256 _safeWithdrawal; // STORAGE[0x7] bytes 0 to 0\nuint256 _fallback; // STORAGE[0x7] bytes 1 to 1\nuint256 _tokenReward; // STORAGE[0x5] bytes 0 to 19\n\n// Events\nFundTransfer(address, uint256, bool);\nGoalReached(address, uint256);\n\nfunction checkGoalReached() public nonPayable { \n    if (block.timestamp >= _deadline) {\n        if (_amountRaised >= _fundingGoal) {\n            _safeWithdrawal = 1;\n            emit GoalReached(_beneficiary, _amountRaised);\n        }\n        _fallback = 1;\n    }\n}\n\nfunction deadline() public nonPayable { \n    return _deadline;\n}\n\nfunction beneficiary() public nonPayable { \n    return _beneficiary;\n}\n\nfunction tokenReward() public nonPayable { \n    return _tokenReward;\n}\n\nfunction balanceOf(address varg0) public nonPayable { \n    return _balanceOf[varg0];\n}\n\nfunction fundingGoal() public nonPayable { \n    return _fundingGoal;\n}\n\nfunction amountRaised() public nonPayable { \n    return _amountRaised;\n}\n\nfunction price() public nonPayable { \n    return _price;\n}\n\nfunction safeWithdrawal() public nonPayable { \n    if (block.timestamp >= _deadline) {\n        if (!_safeWithdrawal) {\n            _balanceOf[msg.sender] = 0;\n            if (_balanceOf[msg.sender] > 0) {\n                v0 = msg.sender.call().value(_balanceOf[msg.sender]).gas(2300 * !_balanceOf[msg.sender]);\n                if (!v0) {\n                    _balanceOf[msg.sender] = _balanceOf[msg.sender];\n                } else {\n                    emit FundTransfer(msg.sender, _balanceOf[msg.sender], 0);\n                }\n            }\n        }\n        v1 = v2 = _safeWithdrawal;\n        if (v2) {\n            v1 = msg.sender == _beneficiary;\n        }\n        if (v1) {\n            v3 = _beneficiary.call().value(_amountRaised).gas(2300 * !_amountRaised);\n            if (!v3) {\n                _safeWithdrawal = 0;\n            } else {\n                emit FundTransfer(_beneficiary, _amountRaised, 0);\n            }\n        }\n    }\n}\n\nfunction () public payable { \n    require(!_fallback);\n    _balanceOf[msg.sender] += msg.value;\n    _amountRaised += msg.value;\n    assert(stor_4_0_0);\n    require(_tokenReward.code.size);\n    v0 = _tokenReward.transfer(msg.sender, msg.value * 0xde0b6b3a7640000 / _price).gas(msg.gas);\n    require(v0); // checks call status, propagates error data on error\n    emit FundTransfer(msg.sender, msg.value, 1);\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(bytes4 function_selector) public payable { \n    MEM[64] = 128;\n    if (msg.data.length >= 4) {\n        if (uint32(function_selector >> 224) == 0x1cb3b20) {\n            checkGoalReached();\n        } else if (0x29dcb0cf == uint32(function_selector >> 224)) {\n            deadline();\n        } else if (0x38af3eed == uint32(function_selector >> 224)) {\n            beneficiary();\n        } else if (0x6e66f6e9 == uint32(function_selector >> 224)) {\n            tokenReward();\n        } else if (0x70a08231 == uint32(function_selector >> 224)) {\n            balanceOf(address);\n        } else if (0x7a3a0e84 == uint32(function_selector >> 224)) {\n            fundingGoal();\n        } else if (0x7b3e5e7b == uint32(function_selector >> 224)) {\n            amountRaised();\n        } else if (0xa035b1fe == uint32(function_selector >> 224)) {\n            price();\n        } else if (0xfd6b7ef8 == uint32(function_selector >> 224)) {\n            safeWithdrawal();\n        }\n    }\n    ();\n}\n",
	"language": "Solidity",
	"status": "Connection error."
}