{
	"address": "0xf6e8c835d43895cbf8cba18bdfcb348d7fd2cc58",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Below is the reassembled Solidity code for the provided decompiled code. Note that it may not cover all the functionalities of the original contract since EVM bytecode does not always map one-to-one with Solidity code.\n\n```solidity\npragma solidity ^0.4.24;\n\ncontract Contract {\n    address private owner;\n    address private newOwner;\n    address private recipient;\n    uint256 private amount;\n    mapping(address => uint256) private balances;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function changeOwner(address _newOwner) public {\n        require(msg.sender == owner || msg.sender == newOwner);\n        require(msg.value == 0);\n        newOwner = _newOwner;\n    }\n\n    function changeRecipient(address _recipient) public {\n        require(msg.sender == owner || msg.sender == newOwner);\n        require(msg.value == 0);\n        recipient = _recipient;\n    }\n\n    function deposit() public payable {\n        // some complex logic here, omitted for brevity\n    }\n\n    function withdraw() public {\n        require(msg.sender == owner || msg.sender == newOwner);\n        require(msg.value == 0);\n        uint256 balance = balances[msg.sender];\n        balances[msg.sender] = 0;\n        recipient.transfer(balance);\n    }\n\n    // more methods...\n}\n```\n\nThis Solidity code is a simplified version of the original contract. It includes the basic functionalities such as changing the owner, changing the recipient, depositing funds, and withdrawing funds.\n\nPlease note that the original contract might have more complex logic, especially in the deposit method, which is not reflected in this simplified Solidity code.",
				"role": "assistant"
			}
		}
	],
	"created": 1700474803,
	"id": "chatcmpl-8MvStsWSyWojffnzcJ7BOQT20Sfn1",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] == 0x098e0864) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((storage[0x00] == msg.sender) | (storage[0x01] == msg.sender))) { revert(memory[0x00:0x00]); }\n        \n            storage[0x01] = memory[0x0140:0x0160];\n            stop();\n        } else if (memory[0x00:0x20] == 0xd49f0fa5) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (!((storage[0x00] == msg.sender) | (storage[0x01] == msg.sender))) { revert(memory[0x00:0x00]); }\n        \n            storage[0x03] = memory[0x0140:0x0160];\n            stop();\n        } else if (memory[0x00:0x20] == 0x71054317) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((storage[0x00] == msg.sender) | (storage[0x01] == msg.sender))) { revert(memory[0x00:0x00]); }\n        \n            storage[0x02] = memory[0x0140:0x0160];\n            stop();\n        } else if (memory[0x00:0x20] != 0xf9f80396) {\n            if (memory[0x00:0x20] == 0x1cad5af8) {\n                memory[0x0140:0x0200] = msg.data[0x04:0xc4];\n                var0 = msg.data[0x04:0x24];\n            \n                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n            \n                memory[0x0200:0x0298] = msg.data[msg.data[0x24:0x44] + 0x04:msg.data[0x24:0x44] + 0x04 + 0x98];\n            \n                if (msg.data[msg.data[0x24:0x44] + 0x04:msg.data[0x24:0x44] + 0x04 + 0x20] > 0x78) { revert(memory[0x00:0x00]); }\n            \n                var0 = msg.data[0x44:0x64];\n            \n                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n            \n                memory[0x02c0:0x0358] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x98];\n            \n                if (msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x20] > 0x78) { revert(memory[0x00:0x00]); }\n            \n                memory[0x0380:0x04b8] = msg.data[msg.data[0x84:0xa4] + 0x04:msg.data[0x84:0xa4] + 0x04 + 0x0138];\n            \n                if (msg.data[msg.data[0x84:0xa4] + 0x04:msg.data[0x84:0xa4] + 0x04 + 0x20] > 0x0118) { revert(memory[0x00:0x00]); }\n            \n                memory[0x04e0:0x0618] = msg.data[msg.data[0xa4:0xc4] + 0x04:msg.data[0xa4:0xc4] + 0x04 + 0x0138];\n            \n                if (msg.data[msg.data[0xa4:0xc4] + 0x04:msg.data[0xa4:0xc4] + 0x04 + 0x20] > 0x0118) { revert(memory[0x00:0x00]); }\n            \n                memory[0x0640:0x0660] = storage[0x06];\n                memory[0xc0:0xe0] = memory[0x0640:0x0660];\n                memory[0x0660:0x0680] = keccak256(memory[0xc0:0xe0]);\n            \n                if (memory[0x0140:0x0160] == 0x00) { revert(memory[0x00:0x00]); }\n            \n                if (memory[0x0180:0x01a0] == 0x00) { revert(memory[0x00:0x00]); }\n            \n                if (msg.value < storage[0x03]) { revert(memory[0x00:0x00]); }\n            \n                memory[0xe0:0x0100] = memory[0x0660:0x0680];\n                memory[0xc0:0xe0] = 0x05;\n                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                var temp49 = keccak256(memory[0xc0:0xe0]);\n                var0 = temp49;\n                storage[var0] = memory[0x0140:0x0160];\n                var1 = 0x0200;\n                var2 = var1;\n                memory[0xc0:0xe0] = var0 + 0x01;\n                var3 = keccak256(memory[0xc0:0xe0]);\n                var temp50 = memory[var2:var2 + 0x20] + 0x20;\n                var4 = temp50;\n                var5 = 0x0120;\n                memory[var5:var5 + 0x20] = 0x00;\n                var var6 = 0x05;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var4) { goto label_031E; }\n            \n            label_0322:\n                storage[var3 + memory[0x0120:0x0140]] = memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                var temp51 = var5;\n                var temp52 = memory[temp51:temp51 + 0x20] + 0x01;\n                memory[temp51:temp51 + 0x20] = temp52;\n            \n                if (var6 == temp52) { goto label_0344; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var4) { goto label_0322; }\n            \n            label_031E:\n            \n            label_0344:\n                var temp53 = var0;\n                storage[temp53 + 0x02] = memory[0x0180:0x01a0];\n                var1 = 0x02c0;\n                var2 = var1;\n                memory[0xc0:0xe0] = temp53 + 0x03;\n                var3 = keccak256(memory[0xc0:0xe0]);\n                var temp54 = memory[var2:var2 + 0x20] + 0x20;\n                var4 = temp54;\n                var5 = 0x0120;\n                memory[var5:var5 + 0x20] = 0x00;\n                var6 = 0x05;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var4) { goto label_0383; }\n            \n            label_0387:\n                storage[var3 + memory[0x0120:0x0140]] = memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                var temp55 = var5;\n                var temp56 = memory[temp55:temp55 + 0x20] + 0x01;\n                memory[temp55:temp55 + 0x20] = temp56;\n            \n                if (var6 == temp56) { goto label_03A9; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var4) { goto label_0387; }\n            \n            label_0383:\n            \n            label_03A9:\n                var1 = 0x0380;\n                var2 = var1;\n                memory[0xc0:0xe0] = var0 + 0x04;\n                var3 = keccak256(memory[0xc0:0xe0]);\n                var temp57 = memory[var2:var2 + 0x20] + 0x20;\n                var4 = temp57;\n                var5 = 0x0120;\n                memory[var5:var5 + 0x20] = 0x00;\n                var6 = 0x0a;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var4) { goto label_03DF; }\n            \n            label_03E3:\n                storage[var3 + memory[0x0120:0x0140]] = memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                var temp58 = var5;\n                var temp59 = memory[temp58:temp58 + 0x20] + 0x01;\n                memory[temp58:temp58 + 0x20] = temp59;\n            \n                if (var6 == temp59) { goto label_0405; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var4) { goto label_03E3; }\n            \n            label_03DF:\n            \n            label_0405:\n                var1 = 0x04e0;\n                var2 = var1;\n                memory[0xc0:0xe0] = var0 + 0x05;\n                var3 = keccak256(memory[0xc0:0xe0]);\n                var temp60 = memory[var2:var2 + 0x20] + 0x20;\n                var4 = temp60;\n                var5 = 0x0120;\n                memory[var5:var5 + 0x20] = 0x00;\n                var6 = 0x0a;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var4) { goto label_043B; }\n            \n            label_043F:\n                storage[var3 + memory[0x0120:0x0140]] = memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                var temp61 = var5;\n                var temp62 = memory[temp61:temp61 + 0x20] + 0x01;\n                memory[temp61:temp61 + 0x20] = temp62;\n            \n                if (var6 == temp62) { goto label_0461; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var4) { goto label_043F; }\n            \n            label_043B:\n            \n            label_0461:\n                storage[var0 + 0x06] = 0x01;\n                var0 = 0x0380;\n                var1 = var0;\n                memory[0xe0:0x0100] = memory[0x0640:0x0660];\n                memory[0xc0:0xe0] = 0x07;\n                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                var2 = keccak256(memory[0xc0:0xe0]);\n                var temp63 = memory[var1:var1 + 0x20] + 0x20;\n                var3 = temp63;\n                var4 = 0x0120;\n                memory[var4:var4 + 0x20] = 0x00;\n                var5 = 0x0a;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_04AC; }\n            \n            label_04B0:\n                storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                var temp64 = var4;\n                var temp65 = memory[temp64:temp64 + 0x20] + 0x01;\n                memory[temp64:temp64 + 0x20] = temp65;\n            \n                if (var5 == temp65) { goto label_04D2; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_04B0; }\n            \n            label_04AC:\n            \n            label_04D2:\n                var temp66 = memory[0x0660:0x0680];\n                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                memory[0xc0:0xe0] = 0x08;\n                storage[keccak256(memory[0xc0:0x0100])] = temp66;\n                var0 = 0x0640;\n            \n                if (memory[var0:var0 + 0x20] + 0x01 < memory[var0:var0 + 0x20]) { revert(memory[0x00:0x00]); }\n            \n                var temp67 = var0;\n                memory[temp67:temp67 + 0x20] = memory[temp67:temp67 + 0x20] + 0x01;\n                storage[0x06] = memory[0x0640:0x0660];\n                memory[0x0680:0x06a0] = memory[0x0660:0x0680];\n                log(memory[0x0680:0x06a0], [0x3a43fa40a6b9fb56bbbbaa1478eb0337cf539b51902c9de9ae1ed66367c2aa8a, memory[0x0140:0x0160], memory[0x0180:0x01a0]]);\n                stop();\n            } else if (memory[0x00:0x20] == 0xfe9792ad) {\n                memory[0x0140:0x0160] = msg.data[0x04:0x24];\n            \n                if (msg.value) { revert(memory[0x00:0x00]); }\n            \n                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                memory[0xc0:0xe0] = 0x05;\n                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                var temp48 = storage[keccak256(memory[0xc0:0xe0]) + 0x02] == msg.sender;\n                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                memory[0xc0:0xe0] = 0x05;\n                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            \n                if (!((storage[keccak256(memory[0xc0:0xe0])] == msg.sender) | temp48)) { revert(memory[0x00:0x00]); }\n            \n                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                memory[0xc0:0xe0] = 0x05;\n                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                storage[keccak256(memory[0xc0:0xe0]) + 0x06] = 0x00;\n                stop();\n            } else if (memory[0x00:0x20] != 0xdccce687) {\n                if (memory[0x00:0x20] != 0x73688914) {\n                    if (memory[0x00:0x20] != 0x52709725) {\n                        if (memory[0x00:0x20] != 0x0893bd85) {\n                            if (memory[0x00:0x20] != 0xa035b1fe) {\n                                if (memory[0x00:0x20] != 0x06fdde03) {\n                                    if (memory[0x00:0x20] == 0xac9b8285) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                        return memory[0x00:0x20];\n                                    } else if (memory[0x00:0x20] == 0xcacdac5d) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = keccak256(memory[0xc0:0xe0]) + 0x01;\n                                        memory[0xc0:0xe0] = var0;\n                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                        var2 = 0x01a0;\n                                        var temp32 = storage[var1] + 0x20;\n                                        var3 = temp32;\n                                        var4 = 0x0120;\n                                        memory[var4:var4 + 0x20] = 0x00;\n                                        var5 = 0x05;\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0851; }\n                                    \n                                    label_0855:\n                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                        var temp33 = var4;\n                                        var temp34 = memory[temp33:temp33 + 0x20] + 0x01;\n                                        memory[temp33:temp33 + 0x20] = temp34;\n                                    \n                                        if (var5 == temp34) { goto label_0877; }\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0855; }\n                                    \n                                    label_0851:\n                                    \n                                    label_0877:\n                                        var temp35 = memory[0x01a0:0x01c0];\n                                        var0 = (temp35 + 0x1f) - temp35 - 0x01 % 0x20;\n                                        var1 = 0x0260;\n                                        var temp36 = memory[0x01a0:0x01c0];\n                                        memory[var1:var1 + 0x20] = temp36;\n                                        var2 = temp36 + 0x78;\n                                    \n                                        if (memory[0x0260:0x0280] > var0) { goto label_08A9; }\n                                    \n                                    label_08AD:\n                                        memory[memory[0x0260:0x0280] + 0x01c0:memory[0x0260:0x0280] + 0x01c0 + 0x01] = 0x00;\n                                        var temp37 = var1;\n                                        var temp38 = memory[temp37:temp37 + 0x20] + 0x01;\n                                        memory[temp37:temp37 + 0x20] = temp38;\n                                    \n                                        if (var2 == temp38) { goto label_08C9; }\n                                    \n                                        if (memory[0x0260:0x0280] <= var0) { goto label_08AD; }\n                                    \n                                    label_08A9:\n                                    \n                                    label_08C9:\n                                        memory[0x0180:0x01a0] = 0x20;\n                                        var temp39 = memory[0x01a0:0x01c0] + 0x40;\n                                        return memory[0x0180:0x0180 + (temp39 + 0x1f) - temp39 - 0x01 % 0x20];\n                                    } else if (memory[0x00:0x20] == 0x7d371768) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                        return memory[0x00:0x20];\n                                    } else if (memory[0x00:0x20] == 0xa418bb70) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = keccak256(memory[0xc0:0xe0]) + 0x03;\n                                        memory[0xc0:0xe0] = var0;\n                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                        var2 = 0x01a0;\n                                        var temp24 = storage[var1] + 0x20;\n                                        var3 = temp24;\n                                        var4 = 0x0120;\n                                        memory[var4:var4 + 0x20] = 0x00;\n                                        var5 = 0x05;\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_099E; }\n                                    \n                                    label_09A2:\n                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                        var temp25 = var4;\n                                        var temp26 = memory[temp25:temp25 + 0x20] + 0x01;\n                                        memory[temp25:temp25 + 0x20] = temp26;\n                                    \n                                        if (var5 == temp26) { goto label_09C4; }\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_09A2; }\n                                    \n                                    label_099E:\n                                    \n                                    label_09C4:\n                                        var temp27 = memory[0x01a0:0x01c0];\n                                        var0 = (temp27 + 0x1f) - temp27 - 0x01 % 0x20;\n                                        var1 = 0x0260;\n                                        var temp28 = memory[0x01a0:0x01c0];\n                                        memory[var1:var1 + 0x20] = temp28;\n                                        var2 = temp28 + 0x78;\n                                    \n                                        if (memory[0x0260:0x0280] > var0) { goto label_09F6; }\n                                    \n                                    label_09FA:\n                                        memory[memory[0x0260:0x0280] + 0x01c0:memory[0x0260:0x0280] + 0x01c0 + 0x01] = 0x00;\n                                        var temp29 = var1;\n                                        var temp30 = memory[temp29:temp29 + 0x20] + 0x01;\n                                        memory[temp29:temp29 + 0x20] = temp30;\n                                    \n                                        if (var2 == temp30) { goto label_0A16; }\n                                    \n                                        if (memory[0x0260:0x0280] <= var0) { goto label_09FA; }\n                                    \n                                    label_09F6:\n                                    \n                                    label_0A16:\n                                        memory[0x0180:0x01a0] = 0x20;\n                                        var temp31 = memory[0x01a0:0x01c0] + 0x40;\n                                        return memory[0x0180:0x0180 + (temp31 + 0x1f) - temp31 - 0x01 % 0x20];\n                                    } else if (memory[0x00:0x20] == 0xbe06f9f4) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = keccak256(memory[0xc0:0xe0]) + 0x04;\n                                        memory[0xc0:0xe0] = var0;\n                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                        var2 = 0x01a0;\n                                        var temp16 = storage[var1] + 0x20;\n                                        var3 = temp16;\n                                        var4 = 0x0120;\n                                        memory[var4:var4 + 0x20] = 0x00;\n                                        var5 = 0x0a;\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0AA3; }\n                                    \n                                    label_0AA7:\n                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                        var temp17 = var4;\n                                        var temp18 = memory[temp17:temp17 + 0x20] + 0x01;\n                                        memory[temp17:temp17 + 0x20] = temp18;\n                                    \n                                        if (var5 == temp18) { goto label_0AC9; }\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0AA7; }\n                                    \n                                    label_0AA3:\n                                    \n                                    label_0AC9:\n                                        var temp19 = memory[0x01a0:0x01c0];\n                                        var0 = (temp19 + 0x1f) - temp19 - 0x01 % 0x20;\n                                        var1 = 0x0300;\n                                        var temp20 = memory[0x01a0:0x01c0];\n                                        memory[var1:var1 + 0x20] = temp20;\n                                        var2 = temp20 + 0x0118;\n                                    \n                                        if (memory[0x0300:0x0320] > var0) { goto label_0AFC; }\n                                    \n                                    label_0B00:\n                                        memory[memory[0x0300:0x0320] + 0x01c0:memory[0x0300:0x0320] + 0x01c0 + 0x01] = 0x00;\n                                        var temp21 = var1;\n                                        var temp22 = memory[temp21:temp21 + 0x20] + 0x01;\n                                        memory[temp21:temp21 + 0x20] = temp22;\n                                    \n                                        if (var2 == temp22) { goto label_0B1C; }\n                                    \n                                        if (memory[0x0300:0x0320] <= var0) { goto label_0B00; }\n                                    \n                                    label_0AFC:\n                                    \n                                    label_0B1C:\n                                        memory[0x0180:0x01a0] = 0x20;\n                                        var temp23 = memory[0x01a0:0x01c0] + 0x40;\n                                        return memory[0x0180:0x0180 + (temp23 + 0x1f) - temp23 - 0x01 % 0x20];\n                                    } else if (memory[0x00:0x20] == 0x56cb5715) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = keccak256(memory[0xc0:0xe0]) + 0x05;\n                                        memory[0xc0:0xe0] = var0;\n                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                        var2 = 0x01a0;\n                                        var temp8 = storage[var1] + 0x20;\n                                        var3 = temp8;\n                                        var4 = 0x0120;\n                                        memory[var4:var4 + 0x20] = 0x00;\n                                        var5 = 0x0a;\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0BA9; }\n                                    \n                                    label_0BAD:\n                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                        var temp9 = var4;\n                                        var temp10 = memory[temp9:temp9 + 0x20] + 0x01;\n                                        memory[temp9:temp9 + 0x20] = temp10;\n                                    \n                                        if (var5 == temp10) { goto label_0BCF; }\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0BAD; }\n                                    \n                                    label_0BA9:\n                                    \n                                    label_0BCF:\n                                        var temp11 = memory[0x01a0:0x01c0];\n                                        var0 = (temp11 + 0x1f) - temp11 - 0x01 % 0x20;\n                                        var1 = 0x0300;\n                                        var temp12 = memory[0x01a0:0x01c0];\n                                        memory[var1:var1 + 0x20] = temp12;\n                                        var2 = temp12 + 0x0118;\n                                    \n                                        if (memory[0x0300:0x0320] > var0) { goto label_0C02; }\n                                    \n                                    label_0C06:\n                                        memory[memory[0x0300:0x0320] + 0x01c0:memory[0x0300:0x0320] + 0x01c0 + 0x01] = 0x00;\n                                        var temp13 = var1;\n                                        var temp14 = memory[temp13:temp13 + 0x20] + 0x01;\n                                        memory[temp13:temp13 + 0x20] = temp14;\n                                    \n                                        if (var2 == temp14) { goto label_0C22; }\n                                    \n                                        if (memory[0x0300:0x0320] <= var0) { goto label_0C06; }\n                                    \n                                    label_0C02:\n                                    \n                                    label_0C22:\n                                        memory[0x0180:0x01a0] = 0x20;\n                                        var temp15 = memory[0x01a0:0x01c0] + 0x40;\n                                        return memory[0x0180:0x0180 + (temp15 + 0x1f) - temp15 - 0x01 % 0x20];\n                                    } else if (memory[0x00:0x20] == 0xc8c7879d) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x06];\n                                        return memory[0x00:0x20];\n                                    } else if (memory[0x00:0x20] != 0x86f816e4) {\n                                        if (memory[0x00:0x20] != 0x4e78b58f) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        var var0 = keccak256(memory[0xc0:0x0100]);\n                                        memory[0xc0:0xe0] = var0;\n                                        var var1 = keccak256(memory[0xc0:0xe0]);\n                                        var var2 = 0x01a0;\n                                        var temp0 = storage[var1] + 0x20;\n                                        var var3 = temp0;\n                                        var var4 = 0x0120;\n                                        memory[var4:var4 + 0x20] = 0x00;\n                                        var var5 = 0x0a;\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0D12; }\n                                    \n                                    label_0D16:\n                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                        var temp1 = var4;\n                                        var temp2 = memory[temp1:temp1 + 0x20] + 0x01;\n                                        memory[temp1:temp1 + 0x20] = temp2;\n                                    \n                                        if (var5 == temp2) { goto label_0D38; }\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0D16; }\n                                    \n                                    label_0D12:\n                                    \n                                    label_0D38:\n                                        var temp3 = memory[0x01a0:0x01c0];\n                                        var0 = (temp3 + 0x1f) - temp3 - 0x01 % 0x20;\n                                        var1 = 0x0300;\n                                        var temp4 = memory[0x01a0:0x01c0];\n                                        memory[var1:var1 + 0x20] = temp4;\n                                        var2 = temp4 + 0x0118;\n                                    \n                                        if (memory[0x0300:0x0320] > var0) { goto label_0D6B; }\n                                    \n                                    label_0D6F:\n                                        memory[memory[0x0300:0x0320] + 0x01c0:memory[0x0300:0x0320] + 0x01c0 + 0x01] = 0x00;\n                                        var temp5 = var1;\n                                        var temp6 = memory[temp5:temp5 + 0x20] + 0x01;\n                                        memory[temp5:temp5 + 0x20] = temp6;\n                                    \n                                        if (var2 == temp6) { goto label_0D8B; }\n                                    \n                                        if (memory[0x0300:0x0320] <= var0) { goto label_0D6F; }\n                                    \n                                    label_0D6B:\n                                    \n                                    label_0D8B:\n                                        memory[0x0180:0x01a0] = 0x20;\n                                        var temp7 = memory[0x01a0:0x01c0] + 0x40;\n                                        return memory[0x0180:0x0180 + (temp7 + 0x1f) - temp7 - 0x01 % 0x20];\n                                    } else if (!msg.value) {\n                                        memory[0x00:0x20] = storage[0x06];\n                                        return memory[0x00:0x20];\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    var0 = 0x04;\n                                    memory[0xc0:0xe0] = var0;\n                                    var1 = keccak256(memory[0xc0:0xe0]);\n                                    var2 = 0x0180;\n                                    var temp40 = storage[var1] + 0x20;\n                                    var3 = temp40;\n                                    var4 = 0x0120;\n                                    memory[var4:var4 + 0x20] = 0x00;\n                                    var5 = 0x03;\n                                \n                                    if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0707; }\n                                \n                                label_070B:\n                                    memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                    var temp41 = var4;\n                                    var temp42 = memory[temp41:temp41 + 0x20] + 0x01;\n                                    memory[temp41:temp41 + 0x20] = temp42;\n                                \n                                    if (var5 == temp42) { goto label_072D; }\n                                \n                                    if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_070B; }\n                                \n                                label_0707:\n                                \n                                label_072D:\n                                    var temp43 = memory[0x0180:0x01a0];\n                                    var0 = (temp43 + 0x1f) - temp43 - 0x01 % 0x20;\n                                    var1 = 0x0200;\n                                    var temp44 = memory[0x0180:0x01a0];\n                                    memory[var1:var1 + 0x20] = temp44;\n                                    var2 = temp44 + 0x40;\n                                \n                                    if (memory[0x0200:0x0220] > var0) { goto label_075F; }\n                                \n                                label_0763:\n                                    memory[memory[0x0200:0x0220] + 0x01a0:memory[0x0200:0x0220] + 0x01a0 + 0x01] = 0x00;\n                                    var temp45 = var1;\n                                    var temp46 = memory[temp45:temp45 + 0x20] + 0x01;\n                                    memory[temp45:temp45 + 0x20] = temp46;\n                                \n                                    if (var2 == temp46) { goto label_077F; }\n                                \n                                    if (memory[0x0200:0x0220] <= var0) { goto label_0763; }\n                                \n                                label_075F:\n                                \n                                label_077F:\n                                    memory[0x0160:0x0180] = 0x20;\n                                    var temp47 = memory[0x0180:0x01a0] + 0x40;\n                                    return memory[0x0160:0x0160 + (temp47 + 0x1f) - temp47 - 0x01 % 0x20];\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                memory[0x00:0x20] = storage[0x03];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            memory[0x00:0x20] = storage[0x02];\n                            return memory[0x00:0x20];\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0x00:0x20] = storage[0x01];\n                        return memory[0x00:0x20];\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    memory[0x00:0x20] = storage[0x00];\n                    return memory[0x00:0x20];\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0xe0:0x0100] = msg.sender;\n                memory[0xc0:0xe0] = 0x08;\n                memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                log(memory[0x0140:0x0160], [0xc16017e1ef11a1208b66fc8f44887c2c3cab99ab42ae8cb5a483089e2b4b8030, msg.sender]);\n                stop();\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            if (!((storage[0x00] == msg.sender) | (storage[0x01] == msg.sender))) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0140:0x0160] = storage[0x02];\n            memory[0x0160:0x0180] = address(this).balance;\n            var temp68;\n            temp68, memory[0x00:0x00] = address(memory[0x0140:0x0160]).call.gas(0x00).value(memory[0x0160:0x0180])(memory[0x00:0x00]);\n        \n            if (temp68) { stop(); }\n            else { revert(memory[0x00:0x00]); }\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] == 0x098e0864) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((storage[0x00] == msg.sender) | (storage[0x01] == msg.sender))) { revert(memory[0x00:0x00]); }\n        \n            storage[0x01] = memory[0x0140:0x0160];\n            stop();\n        } else if (memory[0x00:0x20] == 0xd49f0fa5) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (!((storage[0x00] == msg.sender) | (storage[0x01] == msg.sender))) { revert(memory[0x00:0x00]); }\n        \n            storage[0x03] = memory[0x0140:0x0160];\n            stop();\n        } else if (memory[0x00:0x20] == 0x71054317) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((storage[0x00] == msg.sender) | (storage[0x01] == msg.sender))) { revert(memory[0x00:0x00]); }\n        \n            storage[0x02] = memory[0x0140:0x0160];\n            stop();\n        } else if (memory[0x00:0x20] != 0xf9f80396) {\n            if (memory[0x00:0x20] == 0x1cad5af8) {\n                memory[0x0140:0x0200] = msg.data[0x04:0xc4];\n                var0 = msg.data[0x04:0x24];\n            \n                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n            \n                memory[0x0200:0x0298] = msg.data[msg.data[0x24:0x44] + 0x04:msg.data[0x24:0x44] + 0x04 + 0x98];\n            \n                if (msg.data[msg.data[0x24:0x44] + 0x04:msg.data[0x24:0x44] + 0x04 + 0x20] > 0x78) { revert(memory[0x00:0x00]); }\n            \n                var0 = msg.data[0x44:0x64];\n            \n                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n            \n                memory[0x02c0:0x0358] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x98];\n            \n                if (msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x20] > 0x78) { revert(memory[0x00:0x00]); }\n            \n                memory[0x0380:0x04b8] = msg.data[msg.data[0x84:0xa4] + 0x04:msg.data[0x84:0xa4] + 0x04 + 0x0138];\n            \n                if (msg.data[msg.data[0x84:0xa4] + 0x04:msg.data[0x84:0xa4] + 0x04 + 0x20] > 0x0118) { revert(memory[0x00:0x00]); }\n            \n                memory[0x04e0:0x0618] = msg.data[msg.data[0xa4:0xc4] + 0x04:msg.data[0xa4:0xc4] + 0x04 + 0x0138];\n            \n                if (msg.data[msg.data[0xa4:0xc4] + 0x04:msg.data[0xa4:0xc4] + 0x04 + 0x20] > 0x0118) { revert(memory[0x00:0x00]); }\n            \n                memory[0x0640:0x0660] = storage[0x06];\n                memory[0xc0:0xe0] = memory[0x0640:0x0660];\n                memory[0x0660:0x0680] = keccak256(memory[0xc0:0xe0]);\n            \n                if (memory[0x0140:0x0160] == 0x00) { revert(memory[0x00:0x00]); }\n            \n                if (memory[0x0180:0x01a0] == 0x00) { revert(memory[0x00:0x00]); }\n            \n                if (msg.value < storage[0x03]) { revert(memory[0x00:0x00]); }\n            \n                memory[0xe0:0x0100] = memory[0x0660:0x0680];\n                memory[0xc0:0xe0] = 0x05;\n                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                var temp49 = keccak256(memory[0xc0:0xe0]);\n                var0 = temp49;\n                storage[var0] = memory[0x0140:0x0160];\n                var1 = 0x0200;\n                var2 = var1;\n                memory[0xc0:0xe0] = var0 + 0x01;\n                var3 = keccak256(memory[0xc0:0xe0]);\n                var temp50 = memory[var2:var2 + 0x20] + 0x20;\n                var4 = temp50;\n                var5 = 0x0120;\n                memory[var5:var5 + 0x20] = 0x00;\n                var var6 = 0x05;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var4) { goto label_031E; }\n            \n            label_0322:\n                storage[var3 + memory[0x0120:0x0140]] = memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                var temp51 = var5;\n                var temp52 = memory[temp51:temp51 + 0x20] + 0x01;\n                memory[temp51:temp51 + 0x20] = temp52;\n            \n                if (var6 == temp52) { goto label_0344; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var4) { goto label_0322; }\n            \n            label_031E:\n            \n            label_0344:\n                var temp53 = var0;\n                storage[temp53 + 0x02] = memory[0x0180:0x01a0];\n                var1 = 0x02c0;\n                var2 = var1;\n                memory[0xc0:0xe0] = temp53 + 0x03;\n                var3 = keccak256(memory[0xc0:0xe0]);\n                var temp54 = memory[var2:var2 + 0x20] + 0x20;\n                var4 = temp54;\n                var5 = 0x0120;\n                memory[var5:var5 + 0x20] = 0x00;\n                var6 = 0x05;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var4) { goto label_0383; }\n            \n            label_0387:\n                storage[var3 + memory[0x0120:0x0140]] = memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                var temp55 = var5;\n                var temp56 = memory[temp55:temp55 + 0x20] + 0x01;\n                memory[temp55:temp55 + 0x20] = temp56;\n            \n                if (var6 == temp56) { goto label_03A9; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var4) { goto label_0387; }\n            \n            label_0383:\n            \n            label_03A9:\n                var1 = 0x0380;\n                var2 = var1;\n                memory[0xc0:0xe0] = var0 + 0x04;\n                var3 = keccak256(memory[0xc0:0xe0]);\n                var temp57 = memory[var2:var2 + 0x20] + 0x20;\n                var4 = temp57;\n                var5 = 0x0120;\n                memory[var5:var5 + 0x20] = 0x00;\n                var6 = 0x0a;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var4) { goto label_03DF; }\n            \n            label_03E3:\n                storage[var3 + memory[0x0120:0x0140]] = memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                var temp58 = var5;\n                var temp59 = memory[temp58:temp58 + 0x20] + 0x01;\n                memory[temp58:temp58 + 0x20] = temp59;\n            \n                if (var6 == temp59) { goto label_0405; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var4) { goto label_03E3; }\n            \n            label_03DF:\n            \n            label_0405:\n                var1 = 0x04e0;\n                var2 = var1;\n                memory[0xc0:0xe0] = var0 + 0x05;\n                var3 = keccak256(memory[0xc0:0xe0]);\n                var temp60 = memory[var2:var2 + 0x20] + 0x20;\n                var4 = temp60;\n                var5 = 0x0120;\n                memory[var5:var5 + 0x20] = 0x00;\n                var6 = 0x0a;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var4) { goto label_043B; }\n            \n            label_043F:\n                storage[var3 + memory[0x0120:0x0140]] = memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                var temp61 = var5;\n                var temp62 = memory[temp61:temp61 + 0x20] + 0x01;\n                memory[temp61:temp61 + 0x20] = temp62;\n            \n                if (var6 == temp62) { goto label_0461; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var4) { goto label_043F; }\n            \n            label_043B:\n            \n            label_0461:\n                storage[var0 + 0x06] = 0x01;\n                var0 = 0x0380;\n                var1 = var0;\n                memory[0xe0:0x0100] = memory[0x0640:0x0660];\n                memory[0xc0:0xe0] = 0x07;\n                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                var2 = keccak256(memory[0xc0:0xe0]);\n                var temp63 = memory[var1:var1 + 0x20] + 0x20;\n                var3 = temp63;\n                var4 = 0x0120;\n                memory[var4:var4 + 0x20] = 0x00;\n                var5 = 0x0a;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_04AC; }\n            \n            label_04B0:\n                storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                var temp64 = var4;\n                var temp65 = memory[temp64:temp64 + 0x20] + 0x01;\n                memory[temp64:temp64 + 0x20] = temp65;\n            \n                if (var5 == temp65) { goto label_04D2; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_04B0; }\n            \n            label_04AC:\n            \n            label_04D2:\n                var temp66 = memory[0x0660:0x0680];\n                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                memory[0xc0:0xe0] = 0x08;\n                storage[keccak256(memory[0xc0:0x0100])] = temp66;\n                var0 = 0x0640;\n            \n                if (memory[var0:var0 + 0x20] + 0x01 < memory[var0:var0 + 0x20]) { revert(memory[0x00:0x00]); }\n            \n                var temp67 = var0;\n                memory[temp67:temp67 + 0x20] = memory[temp67:temp67 + 0x20] + 0x01;\n                storage[0x06] = memory[0x0640:0x0660];\n                memory[0x0680:0x06a0] = memory[0x0660:0x0680];\n                log(memory[0x0680:0x06a0], [0x3a43fa40a6b9fb56bbbbaa1478eb0337cf539b51902c9de9ae1ed66367c2aa8a, memory[0x0140:0x0160], memory[0x0180:0x01a0]]);\n                stop();\n            } else if (memory[0x00:0x20] == 0xfe9792ad) {\n                memory[0x0140:0x0160] = msg.data[0x04:0x24];\n            \n                if (msg.value) { revert(memory[0x00:0x00]); }\n            \n                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                memory[0xc0:0xe0] = 0x05;\n                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                var temp48 = storage[keccak256(memory[0xc0:0xe0]) + 0x02] == msg.sender;\n                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                memory[0xc0:0xe0] = 0x05;\n                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            \n                if (!((storage[keccak256(memory[0xc0:0xe0])] == msg.sender) | temp48)) { revert(memory[0x00:0x00]); }\n            \n                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                memory[0xc0:0xe0] = 0x05;\n                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                storage[keccak256(memory[0xc0:0xe0]) + 0x06] = 0x00;\n                stop();\n            } else if (memory[0x00:0x20] != 0xdccce687) {\n                if (memory[0x00:0x20] != 0x73688914) {\n                    if (memory[0x00:0x20] != 0x52709725) {\n                        if (memory[0x00:0x20] != 0x0893bd85) {\n                            if (memory[0x00:0x20] != 0xa035b1fe) {\n                                if (memory[0x00:0x20] != 0x06fdde03) {\n                                    if (memory[0x00:0x20] == 0xac9b8285) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                        return memory[0x00:0x20];\n                                    } else if (memory[0x00:0x20] == 0xcacdac5d) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = keccak256(memory[0xc0:0xe0]) + 0x01;\n                                        memory[0xc0:0xe0] = var0;\n                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                        var2 = 0x01a0;\n                                        var temp32 = storage[var1] + 0x20;\n                                        var3 = temp32;\n                                        var4 = 0x0120;\n                                        memory[var4:var4 + 0x20] = 0x00;\n                                        var5 = 0x05;\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0851; }\n                                    \n                                    label_0855:\n                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                        var temp33 = var4;\n                                        var temp34 = memory[temp33:temp33 + 0x20] + 0x01;\n                                        memory[temp33:temp33 + 0x20] = temp34;\n                                    \n                                        if (var5 == temp34) { goto label_0877; }\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0855; }\n                                    \n                                    label_0851:\n                                    \n                                    label_0877:\n                                        var temp35 = memory[0x01a0:0x01c0];\n                                        var0 = (temp35 + 0x1f) - temp35 - 0x01 % 0x20;\n                                        var1 = 0x0260;\n                                        var temp36 = memory[0x01a0:0x01c0];\n                                        memory[var1:var1 + 0x20] = temp36;\n                                        var2 = temp36 + 0x78;\n                                    \n                                        if (memory[0x0260:0x0280] > var0) { goto label_08A9; }\n                                    \n                                    label_08AD:\n                                        memory[memory[0x0260:0x0280] + 0x01c0:memory[0x0260:0x0280] + 0x01c0 + 0x01] = 0x00;\n                                        var temp37 = var1;\n                                        var temp38 = memory[temp37:temp37 + 0x20] + 0x01;\n                                        memory[temp37:temp37 + 0x20] = temp38;\n                                    \n                                        if (var2 == temp38) { goto label_08C9; }\n                                    \n                                        if (memory[0x0260:0x0280] <= var0) { goto label_08AD; }\n                                    \n                                    label_08A9:\n                                    \n                                    label_08C9:\n                                        memory[0x0180:0x01a0] = 0x20;\n                                        var temp39 = memory[0x01a0:0x01c0] + 0x40;\n                                        return memory[0x0180:0x0180 + (temp39 + 0x1f) - temp39 - 0x01 % 0x20];\n                                    } else if (memory[0x00:0x20] == 0x7d371768) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                        return memory[0x00:0x20];\n                                    } else if (memory[0x00:0x20] == 0xa418bb70) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = keccak256(memory[0xc0:0xe0]) + 0x03;\n                                        memory[0xc0:0xe0] = var0;\n                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                        var2 = 0x01a0;\n                                        var temp24 = storage[var1] + 0x20;\n                                        var3 = temp24;\n                                        var4 = 0x0120;\n                                        memory[var4:var4 + 0x20] = 0x00;\n                                        var5 = 0x05;\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_099E; }\n                                    \n                                    label_09A2:\n                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                        var temp25 = var4;\n                                        var temp26 = memory[temp25:temp25 + 0x20] + 0x01;\n                                        memory[temp25:temp25 + 0x20] = temp26;\n                                    \n                                        if (var5 == temp26) { goto label_09C4; }\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_09A2; }\n                                    \n                                    label_099E:\n                                    \n                                    label_09C4:\n                                        var temp27 = memory[0x01a0:0x01c0];\n                                        var0 = (temp27 + 0x1f) - temp27 - 0x01 % 0x20;\n                                        var1 = 0x0260;\n                                        var temp28 = memory[0x01a0:0x01c0];\n                                        memory[var1:var1 + 0x20] = temp28;\n                                        var2 = temp28 + 0x78;\n                                    \n                                        if (memory[0x0260:0x0280] > var0) { goto label_09F6; }\n                                    \n                                    label_09FA:\n                                        memory[memory[0x0260:0x0280] + 0x01c0:memory[0x0260:0x0280] + 0x01c0 + 0x01] = 0x00;\n                                        var temp29 = var1;\n                                        var temp30 = memory[temp29:temp29 + 0x20] + 0x01;\n                                        memory[temp29:temp29 + 0x20] = temp30;\n                                    \n                                        if (var2 == temp30) { goto label_0A16; }\n                                    \n                                        if (memory[0x0260:0x0280] <= var0) { goto label_09FA; }\n                                    \n                                    label_09F6:\n                                    \n                                    label_0A16:\n                                        memory[0x0180:0x01a0] = 0x20;\n                                        var temp31 = memory[0x01a0:0x01c0] + 0x40;\n                                        return memory[0x0180:0x0180 + (temp31 + 0x1f) - temp31 - 0x01 % 0x20];\n                                    } else if (memory[0x00:0x20] == 0xbe06f9f4) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = keccak256(memory[0xc0:0xe0]) + 0x04;\n                                        memory[0xc0:0xe0] = var0;\n                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                        var2 = 0x01a0;\n                                        var temp16 = storage[var1] + 0x20;\n                                        var3 = temp16;\n                                        var4 = 0x0120;\n                                        memory[var4:var4 + 0x20] = 0x00;\n                                        var5 = 0x0a;\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0AA3; }\n                                    \n                                    label_0AA7:\n                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                        var temp17 = var4;\n                                        var temp18 = memory[temp17:temp17 + 0x20] + 0x01;\n                                        memory[temp17:temp17 + 0x20] = temp18;\n                                    \n                                        if (var5 == temp18) { goto label_0AC9; }\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0AA7; }\n                                    \n                                    label_0AA3:\n                                    \n                                    label_0AC9:\n                                        var temp19 = memory[0x01a0:0x01c0];\n                                        var0 = (temp19 + 0x1f) - temp19 - 0x01 % 0x20;\n                                        var1 = 0x0300;\n                                        var temp20 = memory[0x01a0:0x01c0];\n                                        memory[var1:var1 + 0x20] = temp20;\n                                        var2 = temp20 + 0x0118;\n                                    \n                                        if (memory[0x0300:0x0320] > var0) { goto label_0AFC; }\n                                    \n                                    label_0B00:\n                                        memory[memory[0x0300:0x0320] + 0x01c0:memory[0x0300:0x0320] + 0x01c0 + 0x01] = 0x00;\n                                        var temp21 = var1;\n                                        var temp22 = memory[temp21:temp21 + 0x20] + 0x01;\n                                        memory[temp21:temp21 + 0x20] = temp22;\n                                    \n                                        if (var2 == temp22) { goto label_0B1C; }\n                                    \n                                        if (memory[0x0300:0x0320] <= var0) { goto label_0B00; }\n                                    \n                                    label_0AFC:\n                                    \n                                    label_0B1C:\n                                        memory[0x0180:0x01a0] = 0x20;\n                                        var temp23 = memory[0x01a0:0x01c0] + 0x40;\n                                        return memory[0x0180:0x0180 + (temp23 + 0x1f) - temp23 - 0x01 % 0x20];\n                                    } else if (memory[0x00:0x20] == 0x56cb5715) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = keccak256(memory[0xc0:0xe0]) + 0x05;\n                                        memory[0xc0:0xe0] = var0;\n                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                        var2 = 0x01a0;\n                                        var temp8 = storage[var1] + 0x20;\n                                        var3 = temp8;\n                                        var4 = 0x0120;\n                                        memory[var4:var4 + 0x20] = 0x00;\n                                        var5 = 0x0a;\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0BA9; }\n                                    \n                                    label_0BAD:\n                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                        var temp9 = var4;\n                                        var temp10 = memory[temp9:temp9 + 0x20] + 0x01;\n                                        memory[temp9:temp9 + 0x20] = temp10;\n                                    \n                                        if (var5 == temp10) { goto label_0BCF; }\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0BAD; }\n                                    \n                                    label_0BA9:\n                                    \n                                    label_0BCF:\n                                        var temp11 = memory[0x01a0:0x01c0];\n                                        var0 = (temp11 + 0x1f) - temp11 - 0x01 % 0x20;\n                                        var1 = 0x0300;\n                                        var temp12 = memory[0x01a0:0x01c0];\n                                        memory[var1:var1 + 0x20] = temp12;\n                                        var2 = temp12 + 0x0118;\n                                    \n                                        if (memory[0x0300:0x0320] > var0) { goto label_0C02; }\n                                    \n                                    label_0C06:\n                                        memory[memory[0x0300:0x0320] + 0x01c0:memory[0x0300:0x0320] + 0x01c0 + 0x01] = 0x00;\n                                        var temp13 = var1;\n                                        var temp14 = memory[temp13:temp13 + 0x20] + 0x01;\n                                        memory[temp13:temp13 + 0x20] = temp14;\n                                    \n                                        if (var2 == temp14) { goto label_0C22; }\n                                    \n                                        if (memory[0x0300:0x0320] <= var0) { goto label_0C06; }\n                                    \n                                    label_0C02:\n                                    \n                                    label_0C22:\n                                        memory[0x0180:0x01a0] = 0x20;\n                                        var temp15 = memory[0x01a0:0x01c0] + 0x40;\n                                        return memory[0x0180:0x0180 + (temp15 + 0x1f) - temp15 - 0x01 % 0x20];\n                                    } else if (memory[0x00:0x20] == 0xc8c7879d) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x06];\n                                        return memory[0x00:0x20];\n                                    } else if (memory[0x00:0x20] != 0x86f816e4) {\n                                        if (memory[0x00:0x20] != 0x4e78b58f) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        var var0 = keccak256(memory[0xc0:0x0100]);\n                                        memory[0xc0:0xe0] = var0;\n                                        var var1 = keccak256(memory[0xc0:0xe0]);\n                                        var var2 = 0x01a0;\n                                        var temp0 = storage[var1] + 0x20;\n                                        var var3 = temp0;\n                                        var var4 = 0x0120;\n                                        memory[var4:var4 + 0x20] = 0x00;\n                                        var var5 = 0x0a;\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0D12; }\n                                    \n                                    label_0D16:\n                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                        var temp1 = var4;\n                                        var temp2 = memory[temp1:temp1 + 0x20] + 0x01;\n                                        memory[temp1:temp1 + 0x20] = temp2;\n                                    \n                                        if (var5 == temp2) { goto label_0D38; }\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0D16; }\n                                    \n                                    label_0D12:\n                                    \n                                    label_0D38:\n                                        var temp3 = memory[0x01a0:0x01c0];\n                                        var0 = (temp3 + 0x1f) - temp3 - 0x01 % 0x20;\n                                        var1 = 0x0300;\n                                        var temp4 = memory[0x01a0:0x01c0];\n                                        memory[var1:var1 + 0x20] = temp4;\n                                        var2 = temp4 + 0x0118;\n                                    \n                                        if (memory[0x0300:0x0320] > var0) { goto label_0D6B; }\n                                    \n                                    label_0D6F:\n                                        memory[memory[0x0300:0x0320] + 0x01c0:memory[0x0300:0x0320] + 0x01c0 + 0x01] = 0x00;\n                                        var temp5 = var1;\n                                        var temp6 = memory[temp5:temp5 + 0x20] + 0x01;\n                                        memory[temp5:temp5 + 0x20] = temp6;\n                                    \n                                        if (var2 == temp6) { goto label_0D8B; }\n                                    \n                                        if (memory[0x0300:0x0320] <= var0) { goto label_0D6F; }\n                                    \n                                    label_0D6B:\n                                    \n                                    label_0D8B:\n                                        memory[0x0180:0x01a0] = 0x20;\n                                        var temp7 = memory[0x01a0:0x01c0] + 0x40;\n                                        return memory[0x0180:0x0180 + (temp7 + 0x1f) - temp7 - 0x01 % 0x20];\n                                    } else if (!msg.value) {\n                                        memory[0x00:0x20] = storage[0x06];\n                                        return memory[0x00:0x20];\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    var0 = 0x04;\n                                    memory[0xc0:0xe0] = var0;\n                                    var1 = keccak256(memory[0xc0:0xe0]);\n                                    var2 = 0x0180;\n                                    var temp40 = storage[var1] + 0x20;\n                                    var3 = temp40;\n                                    var4 = 0x0120;\n                                    memory[var4:var4 + 0x20] = 0x00;\n                                    var5 = 0x03;\n                                \n                                    if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0707; }\n                                \n                                label_070B:\n                                    memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                    var temp41 = var4;\n                                    var temp42 = memory[temp41:temp41 + 0x20] + 0x01;\n                                    memory[temp41:temp41 + 0x20] = temp42;\n                                \n                                    if (var5 == temp42) { goto label_072D; }\n                                \n                                    if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_070B; }\n                                \n                                label_0707:\n                                \n                                label_072D:\n                                    var temp43 = memory[0x0180:0x01a0];\n                                    var0 = (temp43 + 0x1f) - temp43 - 0x01 % 0x20;\n                                    var1 = 0x0200;\n                                    var temp44 = memory[0x0180:0x01a0];\n                                    memory[var1:var1 + 0x20] = temp44;\n                                    var2 = temp44 + 0x40;\n                                \n                                    if (memory[0x0200:0x0220] > var0) { goto label_075F; }\n                                \n                                label_0763:\n                                    memory[memory[0x0200:0x0220] + 0x01a0:memory[0x0200:0x0220] + 0x01a0 + 0x01] = 0x00;\n                                    var temp45 = var1;\n                                    var temp46 = memory[temp45:temp45 + 0x20] + 0x01;\n                                    memory[temp45:temp45 + 0x20] = temp46;\n                                \n                                    if (var2 == temp46) { goto label_077F; }\n                                \n                                    if (memory[0x0200:0x0220] <= var0) { goto label_0763; }\n                                \n                                label_075F:\n                                \n                                label_077F:\n                                    memory[0x0160:0x0180] = 0x20;\n                                    var temp47 = memory[0x0180:0x01a0] + 0x40;\n                                    return memory[0x0160:0x0160 + (temp47 + 0x1f) - temp47 - 0x01 % 0x20];\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                memory[0x00:0x20] = storage[0x03];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            memory[0x00:0x20] = storage[0x02];\n                            return memory[0x00:0x20];\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0x00:0x20] = storage[0x01];\n                        return memory[0x00:0x20];\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    memory[0x00:0x20] = storage[0x00];\n                    return memory[0x00:0x20];\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0xe0:0x0100] = msg.sender;\n                memory[0xc0:0xe0] = 0x08;\n                memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                log(memory[0x0140:0x0160], [0xc16017e1ef11a1208b66fc8f44887c2c3cab99ab42ae8cb5a483089e2b4b8030, msg.sender]);\n                stop();\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            if (!((storage[0x00] == msg.sender) | (storage[0x01] == msg.sender))) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0140:0x0160] = storage[0x02];\n            memory[0x0160:0x0180] = address(this).balance;\n            var temp68;\n            temp68, memory[0x00:0x00] = address(memory[0x0140:0x0160]).call.gas(0x00).value(memory[0x0160:0x0180])(memory[0x00:0x00]);\n        \n            if (temp68) { stop(); }\n            else { revert(memory[0x00:0x00]); }\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] == 0x098e0864) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((storage[0x00] == msg.sender) | (storage[0x01] == msg.sender))) { revert(memory[0x00:0x00]); }\n        \n            storage[0x01] = memory[0x0140:0x0160];\n            stop();\n        } else if (memory[0x00:0x20] == 0xd49f0fa5) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            if (!((storage[0x00] == msg.sender) | (storage[0x01] == msg.sender))) { revert(memory[0x00:0x00]); }\n        \n            storage[0x03] = memory[0x0140:0x0160];\n            stop();\n        } else if (memory[0x00:0x20] == 0x71054317) {\n            memory[0x0140:0x0160] = msg.data[0x04:0x24];\n        \n            if (msg.value) { revert(memory[0x00:0x00]); }\n        \n            var0 = msg.data[0x04:0x24];\n        \n            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n        \n            if (!((storage[0x00] == msg.sender) | (storage[0x01] == msg.sender))) { revert(memory[0x00:0x00]); }\n        \n            storage[0x02] = memory[0x0140:0x0160];\n            stop();\n        } else if (memory[0x00:0x20] != 0xf9f80396) {\n            if (memory[0x00:0x20] == 0x1cad5af8) {\n                memory[0x0140:0x0200] = msg.data[0x04:0xc4];\n                var0 = msg.data[0x04:0x24];\n            \n                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n            \n                memory[0x0200:0x0298] = msg.data[msg.data[0x24:0x44] + 0x04:msg.data[0x24:0x44] + 0x04 + 0x98];\n            \n                if (msg.data[msg.data[0x24:0x44] + 0x04:msg.data[0x24:0x44] + 0x04 + 0x20] > 0x78) { revert(memory[0x00:0x00]); }\n            \n                var0 = msg.data[0x44:0x64];\n            \n                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n            \n                memory[0x02c0:0x0358] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x98];\n            \n                if (msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x20] > 0x78) { revert(memory[0x00:0x00]); }\n            \n                memory[0x0380:0x04b8] = msg.data[msg.data[0x84:0xa4] + 0x04:msg.data[0x84:0xa4] + 0x04 + 0x0138];\n            \n                if (msg.data[msg.data[0x84:0xa4] + 0x04:msg.data[0x84:0xa4] + 0x04 + 0x20] > 0x0118) { revert(memory[0x00:0x00]); }\n            \n                memory[0x04e0:0x0618] = msg.data[msg.data[0xa4:0xc4] + 0x04:msg.data[0xa4:0xc4] + 0x04 + 0x0138];\n            \n                if (msg.data[msg.data[0xa4:0xc4] + 0x04:msg.data[0xa4:0xc4] + 0x04 + 0x20] > 0x0118) { revert(memory[0x00:0x00]); }\n            \n                memory[0x0640:0x0660] = storage[0x06];\n                memory[0xc0:0xe0] = memory[0x0640:0x0660];\n                memory[0x0660:0x0680] = keccak256(memory[0xc0:0xe0]);\n            \n                if (memory[0x0140:0x0160] == 0x00) { revert(memory[0x00:0x00]); }\n            \n                if (memory[0x0180:0x01a0] == 0x00) { revert(memory[0x00:0x00]); }\n            \n                if (msg.value < storage[0x03]) { revert(memory[0x00:0x00]); }\n            \n                memory[0xe0:0x0100] = memory[0x0660:0x0680];\n                memory[0xc0:0xe0] = 0x05;\n                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                var temp49 = keccak256(memory[0xc0:0xe0]);\n                var0 = temp49;\n                storage[var0] = memory[0x0140:0x0160];\n                var1 = 0x0200;\n                var2 = var1;\n                memory[0xc0:0xe0] = var0 + 0x01;\n                var3 = keccak256(memory[0xc0:0xe0]);\n                var temp50 = memory[var2:var2 + 0x20] + 0x20;\n                var4 = temp50;\n                var5 = 0x0120;\n                memory[var5:var5 + 0x20] = 0x00;\n                var var6 = 0x05;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var4) { goto label_031E; }\n            \n            label_0322:\n                storage[var3 + memory[0x0120:0x0140]] = memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                var temp51 = var5;\n                var temp52 = memory[temp51:temp51 + 0x20] + 0x01;\n                memory[temp51:temp51 + 0x20] = temp52;\n            \n                if (var6 == temp52) { goto label_0344; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var4) { goto label_0322; }\n            \n            label_031E:\n            \n            label_0344:\n                var temp53 = var0;\n                storage[temp53 + 0x02] = memory[0x0180:0x01a0];\n                var1 = 0x02c0;\n                var2 = var1;\n                memory[0xc0:0xe0] = temp53 + 0x03;\n                var3 = keccak256(memory[0xc0:0xe0]);\n                var temp54 = memory[var2:var2 + 0x20] + 0x20;\n                var4 = temp54;\n                var5 = 0x0120;\n                memory[var5:var5 + 0x20] = 0x00;\n                var6 = 0x05;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var4) { goto label_0383; }\n            \n            label_0387:\n                storage[var3 + memory[0x0120:0x0140]] = memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                var temp55 = var5;\n                var temp56 = memory[temp55:temp55 + 0x20] + 0x01;\n                memory[temp55:temp55 + 0x20] = temp56;\n            \n                if (var6 == temp56) { goto label_03A9; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var4) { goto label_0387; }\n            \n            label_0383:\n            \n            label_03A9:\n                var1 = 0x0380;\n                var2 = var1;\n                memory[0xc0:0xe0] = var0 + 0x04;\n                var3 = keccak256(memory[0xc0:0xe0]);\n                var temp57 = memory[var2:var2 + 0x20] + 0x20;\n                var4 = temp57;\n                var5 = 0x0120;\n                memory[var5:var5 + 0x20] = 0x00;\n                var6 = 0x0a;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var4) { goto label_03DF; }\n            \n            label_03E3:\n                storage[var3 + memory[0x0120:0x0140]] = memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                var temp58 = var5;\n                var temp59 = memory[temp58:temp58 + 0x20] + 0x01;\n                memory[temp58:temp58 + 0x20] = temp59;\n            \n                if (var6 == temp59) { goto label_0405; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var4) { goto label_03E3; }\n            \n            label_03DF:\n            \n            label_0405:\n                var1 = 0x04e0;\n                var2 = var1;\n                memory[0xc0:0xe0] = var0 + 0x05;\n                var3 = keccak256(memory[0xc0:0xe0]);\n                var temp60 = memory[var2:var2 + 0x20] + 0x20;\n                var4 = temp60;\n                var5 = 0x0120;\n                memory[var5:var5 + 0x20] = 0x00;\n                var6 = 0x0a;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var4) { goto label_043B; }\n            \n            label_043F:\n                storage[var3 + memory[0x0120:0x0140]] = memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                var temp61 = var5;\n                var temp62 = memory[temp61:temp61 + 0x20] + 0x01;\n                memory[temp61:temp61 + 0x20] = temp62;\n            \n                if (var6 == temp62) { goto label_0461; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var4) { goto label_043F; }\n            \n            label_043B:\n            \n            label_0461:\n                storage[var0 + 0x06] = 0x01;\n                var0 = 0x0380;\n                var1 = var0;\n                memory[0xe0:0x0100] = memory[0x0640:0x0660];\n                memory[0xc0:0xe0] = 0x07;\n                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                var2 = keccak256(memory[0xc0:0xe0]);\n                var temp63 = memory[var1:var1 + 0x20] + 0x20;\n                var3 = temp63;\n                var4 = 0x0120;\n                memory[var4:var4 + 0x20] = 0x00;\n                var5 = 0x0a;\n            \n                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_04AC; }\n            \n            label_04B0:\n                storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                var temp64 = var4;\n                var temp65 = memory[temp64:temp64 + 0x20] + 0x01;\n                memory[temp64:temp64 + 0x20] = temp65;\n            \n                if (var5 == temp65) { goto label_04D2; }\n            \n                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_04B0; }\n            \n            label_04AC:\n            \n            label_04D2:\n                var temp66 = memory[0x0660:0x0680];\n                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                memory[0xc0:0xe0] = 0x08;\n                storage[keccak256(memory[0xc0:0x0100])] = temp66;\n                var0 = 0x0640;\n            \n                if (memory[var0:var0 + 0x20] + 0x01 < memory[var0:var0 + 0x20]) { revert(memory[0x00:0x00]); }\n            \n                var temp67 = var0;\n                memory[temp67:temp67 + 0x20] = memory[temp67:temp67 + 0x20] + 0x01;\n                storage[0x06] = memory[0x0640:0x0660];\n                memory[0x0680:0x06a0] = memory[0x0660:0x0680];\n                log(memory[0x0680:0x06a0], [0x3a43fa40a6b9fb56bbbbaa1478eb0337cf539b51902c9de9ae1ed66367c2aa8a, memory[0x0140:0x0160], memory[0x0180:0x01a0]]);\n                stop();\n            } else if (memory[0x00:0x20] == 0xfe9792ad) {\n                memory[0x0140:0x0160] = msg.data[0x04:0x24];\n            \n                if (msg.value) { revert(memory[0x00:0x00]); }\n            \n                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                memory[0xc0:0xe0] = 0x05;\n                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                var temp48 = storage[keccak256(memory[0xc0:0xe0]) + 0x02] == msg.sender;\n                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                memory[0xc0:0xe0] = 0x05;\n                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n            \n                if (!((storage[keccak256(memory[0xc0:0xe0])] == msg.sender) | temp48)) { revert(memory[0x00:0x00]); }\n            \n                memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                memory[0xc0:0xe0] = 0x05;\n                memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                storage[keccak256(memory[0xc0:0xe0]) + 0x06] = 0x00;\n                stop();\n            } else if (memory[0x00:0x20] != 0xdccce687) {\n                if (memory[0x00:0x20] != 0x73688914) {\n                    if (memory[0x00:0x20] != 0x52709725) {\n                        if (memory[0x00:0x20] != 0x0893bd85) {\n                            if (memory[0x00:0x20] != 0xa035b1fe) {\n                                if (memory[0x00:0x20] != 0x06fdde03) {\n                                    if (memory[0x00:0x20] == 0xac9b8285) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0])];\n                                        return memory[0x00:0x20];\n                                    } else if (memory[0x00:0x20] == 0xcacdac5d) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = keccak256(memory[0xc0:0xe0]) + 0x01;\n                                        memory[0xc0:0xe0] = var0;\n                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                        var2 = 0x01a0;\n                                        var temp32 = storage[var1] + 0x20;\n                                        var3 = temp32;\n                                        var4 = 0x0120;\n                                        memory[var4:var4 + 0x20] = 0x00;\n                                        var5 = 0x05;\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0851; }\n                                    \n                                    label_0855:\n                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                        var temp33 = var4;\n                                        var temp34 = memory[temp33:temp33 + 0x20] + 0x01;\n                                        memory[temp33:temp33 + 0x20] = temp34;\n                                    \n                                        if (var5 == temp34) { goto label_0877; }\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0855; }\n                                    \n                                    label_0851:\n                                    \n                                    label_0877:\n                                        var temp35 = memory[0x01a0:0x01c0];\n                                        var0 = (temp35 + 0x1f) - temp35 - 0x01 % 0x20;\n                                        var1 = 0x0260;\n                                        var temp36 = memory[0x01a0:0x01c0];\n                                        memory[var1:var1 + 0x20] = temp36;\n                                        var2 = temp36 + 0x78;\n                                    \n                                        if (memory[0x0260:0x0280] > var0) { goto label_08A9; }\n                                    \n                                    label_08AD:\n                                        memory[memory[0x0260:0x0280] + 0x01c0:memory[0x0260:0x0280] + 0x01c0 + 0x01] = 0x00;\n                                        var temp37 = var1;\n                                        var temp38 = memory[temp37:temp37 + 0x20] + 0x01;\n                                        memory[temp37:temp37 + 0x20] = temp38;\n                                    \n                                        if (var2 == temp38) { goto label_08C9; }\n                                    \n                                        if (memory[0x0260:0x0280] <= var0) { goto label_08AD; }\n                                    \n                                    label_08A9:\n                                    \n                                    label_08C9:\n                                        memory[0x0180:0x01a0] = 0x20;\n                                        var temp39 = memory[0x01a0:0x01c0] + 0x40;\n                                        return memory[0x0180:0x0180 + (temp39 + 0x1f) - temp39 - 0x01 % 0x20];\n                                    } else if (memory[0x00:0x20] == 0x7d371768) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x02];\n                                        return memory[0x00:0x20];\n                                    } else if (memory[0x00:0x20] == 0xa418bb70) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = keccak256(memory[0xc0:0xe0]) + 0x03;\n                                        memory[0xc0:0xe0] = var0;\n                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                        var2 = 0x01a0;\n                                        var temp24 = storage[var1] + 0x20;\n                                        var3 = temp24;\n                                        var4 = 0x0120;\n                                        memory[var4:var4 + 0x20] = 0x00;\n                                        var5 = 0x05;\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_099E; }\n                                    \n                                    label_09A2:\n                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                        var temp25 = var4;\n                                        var temp26 = memory[temp25:temp25 + 0x20] + 0x01;\n                                        memory[temp25:temp25 + 0x20] = temp26;\n                                    \n                                        if (var5 == temp26) { goto label_09C4; }\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_09A2; }\n                                    \n                                    label_099E:\n                                    \n                                    label_09C4:\n                                        var temp27 = memory[0x01a0:0x01c0];\n                                        var0 = (temp27 + 0x1f) - temp27 - 0x01 % 0x20;\n                                        var1 = 0x0260;\n                                        var temp28 = memory[0x01a0:0x01c0];\n                                        memory[var1:var1 + 0x20] = temp28;\n                                        var2 = temp28 + 0x78;\n                                    \n                                        if (memory[0x0260:0x0280] > var0) { goto label_09F6; }\n                                    \n                                    label_09FA:\n                                        memory[memory[0x0260:0x0280] + 0x01c0:memory[0x0260:0x0280] + 0x01c0 + 0x01] = 0x00;\n                                        var temp29 = var1;\n                                        var temp30 = memory[temp29:temp29 + 0x20] + 0x01;\n                                        memory[temp29:temp29 + 0x20] = temp30;\n                                    \n                                        if (var2 == temp30) { goto label_0A16; }\n                                    \n                                        if (memory[0x0260:0x0280] <= var0) { goto label_09FA; }\n                                    \n                                    label_09F6:\n                                    \n                                    label_0A16:\n                                        memory[0x0180:0x01a0] = 0x20;\n                                        var temp31 = memory[0x01a0:0x01c0] + 0x40;\n                                        return memory[0x0180:0x0180 + (temp31 + 0x1f) - temp31 - 0x01 % 0x20];\n                                    } else if (memory[0x00:0x20] == 0xbe06f9f4) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = keccak256(memory[0xc0:0xe0]) + 0x04;\n                                        memory[0xc0:0xe0] = var0;\n                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                        var2 = 0x01a0;\n                                        var temp16 = storage[var1] + 0x20;\n                                        var3 = temp16;\n                                        var4 = 0x0120;\n                                        memory[var4:var4 + 0x20] = 0x00;\n                                        var5 = 0x0a;\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0AA3; }\n                                    \n                                    label_0AA7:\n                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                        var temp17 = var4;\n                                        var temp18 = memory[temp17:temp17 + 0x20] + 0x01;\n                                        memory[temp17:temp17 + 0x20] = temp18;\n                                    \n                                        if (var5 == temp18) { goto label_0AC9; }\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0AA7; }\n                                    \n                                    label_0AA3:\n                                    \n                                    label_0AC9:\n                                        var temp19 = memory[0x01a0:0x01c0];\n                                        var0 = (temp19 + 0x1f) - temp19 - 0x01 % 0x20;\n                                        var1 = 0x0300;\n                                        var temp20 = memory[0x01a0:0x01c0];\n                                        memory[var1:var1 + 0x20] = temp20;\n                                        var2 = temp20 + 0x0118;\n                                    \n                                        if (memory[0x0300:0x0320] > var0) { goto label_0AFC; }\n                                    \n                                    label_0B00:\n                                        memory[memory[0x0300:0x0320] + 0x01c0:memory[0x0300:0x0320] + 0x01c0 + 0x01] = 0x00;\n                                        var temp21 = var1;\n                                        var temp22 = memory[temp21:temp21 + 0x20] + 0x01;\n                                        memory[temp21:temp21 + 0x20] = temp22;\n                                    \n                                        if (var2 == temp22) { goto label_0B1C; }\n                                    \n                                        if (memory[0x0300:0x0320] <= var0) { goto label_0B00; }\n                                    \n                                    label_0AFC:\n                                    \n                                    label_0B1C:\n                                        memory[0x0180:0x01a0] = 0x20;\n                                        var temp23 = memory[0x01a0:0x01c0] + 0x40;\n                                        return memory[0x0180:0x0180 + (temp23 + 0x1f) - temp23 - 0x01 % 0x20];\n                                    } else if (memory[0x00:0x20] == 0x56cb5715) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        var0 = keccak256(memory[0xc0:0xe0]) + 0x05;\n                                        memory[0xc0:0xe0] = var0;\n                                        var1 = keccak256(memory[0xc0:0xe0]);\n                                        var2 = 0x01a0;\n                                        var temp8 = storage[var1] + 0x20;\n                                        var3 = temp8;\n                                        var4 = 0x0120;\n                                        memory[var4:var4 + 0x20] = 0x00;\n                                        var5 = 0x0a;\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0BA9; }\n                                    \n                                    label_0BAD:\n                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                        var temp9 = var4;\n                                        var temp10 = memory[temp9:temp9 + 0x20] + 0x01;\n                                        memory[temp9:temp9 + 0x20] = temp10;\n                                    \n                                        if (var5 == temp10) { goto label_0BCF; }\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0BAD; }\n                                    \n                                    label_0BA9:\n                                    \n                                    label_0BCF:\n                                        var temp11 = memory[0x01a0:0x01c0];\n                                        var0 = (temp11 + 0x1f) - temp11 - 0x01 % 0x20;\n                                        var1 = 0x0300;\n                                        var temp12 = memory[0x01a0:0x01c0];\n                                        memory[var1:var1 + 0x20] = temp12;\n                                        var2 = temp12 + 0x0118;\n                                    \n                                        if (memory[0x0300:0x0320] > var0) { goto label_0C02; }\n                                    \n                                    label_0C06:\n                                        memory[memory[0x0300:0x0320] + 0x01c0:memory[0x0300:0x0320] + 0x01c0 + 0x01] = 0x00;\n                                        var temp13 = var1;\n                                        var temp14 = memory[temp13:temp13 + 0x20] + 0x01;\n                                        memory[temp13:temp13 + 0x20] = temp14;\n                                    \n                                        if (var2 == temp14) { goto label_0C22; }\n                                    \n                                        if (memory[0x0300:0x0320] <= var0) { goto label_0C06; }\n                                    \n                                    label_0C02:\n                                    \n                                    label_0C22:\n                                        memory[0x0180:0x01a0] = 0x20;\n                                        var temp15 = memory[0x01a0:0x01c0] + 0x40;\n                                        return memory[0x0180:0x0180 + (temp15 + 0x1f) - temp15 - 0x01 % 0x20];\n                                    } else if (memory[0x00:0x20] == 0xc8c7879d) {\n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x05;\n                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0xe0]) + 0x06];\n                                        return memory[0x00:0x20];\n                                    } else if (memory[0x00:0x20] != 0x86f816e4) {\n                                        if (memory[0x00:0x20] != 0x4e78b58f) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0x0140:0x0160] = msg.data[0x04:0x24];\n                                    \n                                        if (msg.value) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        var var0 = keccak256(memory[0xc0:0x0100]);\n                                        memory[0xc0:0xe0] = var0;\n                                        var var1 = keccak256(memory[0xc0:0xe0]);\n                                        var var2 = 0x01a0;\n                                        var temp0 = storage[var1] + 0x20;\n                                        var var3 = temp0;\n                                        var var4 = 0x0120;\n                                        memory[var4:var4 + 0x20] = 0x00;\n                                        var var5 = 0x0a;\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0D12; }\n                                    \n                                    label_0D16:\n                                        memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                        var temp1 = var4;\n                                        var temp2 = memory[temp1:temp1 + 0x20] + 0x01;\n                                        memory[temp1:temp1 + 0x20] = temp2;\n                                    \n                                        if (var5 == temp2) { goto label_0D38; }\n                                    \n                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0D16; }\n                                    \n                                    label_0D12:\n                                    \n                                    label_0D38:\n                                        var temp3 = memory[0x01a0:0x01c0];\n                                        var0 = (temp3 + 0x1f) - temp3 - 0x01 % 0x20;\n                                        var1 = 0x0300;\n                                        var temp4 = memory[0x01a0:0x01c0];\n                                        memory[var1:var1 + 0x20] = temp4;\n                                        var2 = temp4 + 0x0118;\n                                    \n                                        if (memory[0x0300:0x0320] > var0) { goto label_0D6B; }\n                                    \n                                    label_0D6F:\n                                        memory[memory[0x0300:0x0320] + 0x01c0:memory[0x0300:0x0320] + 0x01c0 + 0x01] = 0x00;\n                                        var temp5 = var1;\n                                        var temp6 = memory[temp5:temp5 + 0x20] + 0x01;\n                                        memory[temp5:temp5 + 0x20] = temp6;\n                                    \n                                        if (var2 == temp6) { goto label_0D8B; }\n                                    \n                                        if (memory[0x0300:0x0320] <= var0) { goto label_0D6F; }\n                                    \n                                    label_0D6B:\n                                    \n                                    label_0D8B:\n                                        memory[0x0180:0x01a0] = 0x20;\n                                        var temp7 = memory[0x01a0:0x01c0] + 0x40;\n                                        return memory[0x0180:0x0180 + (temp7 + 0x1f) - temp7 - 0x01 % 0x20];\n                                    } else if (!msg.value) {\n                                        memory[0x00:0x20] = storage[0x06];\n                                        return memory[0x00:0x20];\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    var0 = 0x04;\n                                    memory[0xc0:0xe0] = var0;\n                                    var1 = keccak256(memory[0xc0:0xe0]);\n                                    var2 = 0x0180;\n                                    var temp40 = storage[var1] + 0x20;\n                                    var3 = temp40;\n                                    var4 = 0x0120;\n                                    memory[var4:var4 + 0x20] = 0x00;\n                                    var5 = 0x03;\n                                \n                                    if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0707; }\n                                \n                                label_070B:\n                                    memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                    var temp41 = var4;\n                                    var temp42 = memory[temp41:temp41 + 0x20] + 0x01;\n                                    memory[temp41:temp41 + 0x20] = temp42;\n                                \n                                    if (var5 == temp42) { goto label_072D; }\n                                \n                                    if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_070B; }\n                                \n                                label_0707:\n                                \n                                label_072D:\n                                    var temp43 = memory[0x0180:0x01a0];\n                                    var0 = (temp43 + 0x1f) - temp43 - 0x01 % 0x20;\n                                    var1 = 0x0200;\n                                    var temp44 = memory[0x0180:0x01a0];\n                                    memory[var1:var1 + 0x20] = temp44;\n                                    var2 = temp44 + 0x40;\n                                \n                                    if (memory[0x0200:0x0220] > var0) { goto label_075F; }\n                                \n                                label_0763:\n                                    memory[memory[0x0200:0x0220] + 0x01a0:memory[0x0200:0x0220] + 0x01a0 + 0x01] = 0x00;\n                                    var temp45 = var1;\n                                    var temp46 = memory[temp45:temp45 + 0x20] + 0x01;\n                                    memory[temp45:temp45 + 0x20] = temp46;\n                                \n                                    if (var2 == temp46) { goto label_077F; }\n                                \n                                    if (memory[0x0200:0x0220] <= var0) { goto label_0763; }\n                                \n                                label_075F:\n                                \n                                label_077F:\n                                    memory[0x0160:0x0180] = 0x20;\n                                    var temp47 = memory[0x0180:0x01a0] + 0x40;\n                                    return memory[0x0160:0x0160 + (temp47 + 0x1f) - temp47 - 0x01 % 0x20];\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                memory[0x00:0x20] = storage[0x03];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            memory[0x00:0x20] = storage[0x02];\n                            return memory[0x00:0x20];\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0x00:0x20] = storage[0x01];\n                        return memory[0x00:0x20];\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    memory[0x00:0x20] = storage[0x00];\n                    return memory[0x00:0x20];\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0xe0:0x0100] = msg.sender;\n                memory[0xc0:0xe0] = 0x08;\n                memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                log(memory[0x0140:0x0160], [0xc16017e1ef11a1208b66fc8f44887c2c3cab99ab42ae8cb5a483089e2b4b8030, msg.sender]);\n                stop();\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            if (!((storage[0x00] == msg.sender) | (storage[0x01] == msg.sender))) { revert(memory[0x00:0x00]); }\n        \n            memory[0x0140:0x0160] = storage[0x02];\n            memory[0x0160:0x0180] = address(this).balance;\n            var temp68;\n            temp68, memory[0x00:0x00] = address(memory[0x0140:0x0160]).call.gas(0x00).value(memory[0x0160:0x0180])(memory[0x00:0x00]);\n        \n            if (temp68) { stop(); }\n            else { revert(memory[0x00:0x00]); }\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
	"status": "1",
	"time_cost": 31.53976321220398,
	"usage": {
		"completion_tokens": 334,
		"prompt_tokens": 10617,
		"total_tokens": 10951
	}
}