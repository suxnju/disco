{
	"address": "0xb640fc5ada87b4b53054b1a303ba0ad50a97e491",
	"input_format": "TemplateDescription",
	"ir": "For the changeHouseAddress function, it has one argument and its type is address.\n- For owner:\n  - the state variable owner2 will be updated to the first argument.\n\nFor the changeAirDroper function, it has one argument and its type is address.\n- For owner:\n  - the state variable owner1 will be updated to the first argument.\n\nFor the sundown function.\n- When blocksleftincurrentkick is smaller than the current block's number, and for owner:\n  - the state variable gameissundown will be updated to 1.\n  - the state variable sundowngracetargetblock will be updated to (the current block's number+0x186a0).\n\nFor the payable fallback function.\n- When gameissundown is 0, and the ether just received (i.e., msg.value) equals to costtokick:\n  - the state variable totalSupply will be updated to (totalSupply+1). Afterthat, \n    - the state variable totalSupply will be updated to (totalSupply+1).\n  - the state variable lastkicker will be updated to caller.\n  - the state variable blocksleftincurrentkick will be updated to (the current block's number+numberofblocksperkick).\n  - the state variable lastkicker will be updated to caller.\n  - the state variable blocksleftincurrentkick will be updated to (the current block's number+numberofblocksperkick).\n  - When totalSupply equals to 1:\n    - the state variable currentvalue will be updated to the ether just received (i.e., msg.value).\n    - the state variable owner3 will be updated to caller.\n  - When totalSupply does not equal to 1:\n    - When totalSupply equals to 2:\n      - the state variable currentvalue will be updated to (currentvalue+the ether just received (i.e., msg.value)).\n      - the state variable owner4 will be updated to caller.\n    - When totalSupply does not equal to 2:\n      - the state variable currentvalue will be updated to (currentvalue+((the ether just received (i.e., msg.value)*950)/1000)).\n      - the checkshares of owner2 will be updated to (the checkshares of owner2+((the ether just received (i.e., msg.value)*10)/1000)).\n      - the checkshares of owner3 will be updated to (the checkshares of owner3+((the ether just received (i.e., msg.value)*25)/1000)).\n      - the checkshares of owner4 will be updated to (the checkshares of owner4+((the ether just received (i.e., msg.value)*15)/1000)).\n  - When blocksleftincurrentkick is smaller than the current block's number, and currentvalue is greater than 0:\n    - the checkshares of lastkicker will be updated to (the checkshares of lastkicker+currentvalue). Afterthat, \n      - the state variable currentvalue will be updated to 0.\n      - the state variable currentvalue will be updated to 0.\n    - the state variable gameindex will be updated to (gameindex+1).\n    - the state variable blocksleftincurrentkick will be updated to 0.\n    - the state variable totalSupply will be updated to 0.\n    - the state variable owner3 will be updated to 0.\n    - the state variable owner4 will be updated to 0.\n    - the state variable lastkicker will be updated to 0.\n  - When totalSupply equals to 1:\n    - the state variable currentvalue will be updated to the ether just received (i.e., msg.value).\n    - the state variable owner3 will be updated to caller.\n  - When totalSupply does not equal to 1:\n    - When totalSupply equals to 2:\n      - the state variable currentvalue will be updated to (currentvalue+the ether just received (i.e., msg.value)).\n      - the state variable owner4 will be updated to caller.\n    - When totalSupply does not equal to 2:\n      - the state variable currentvalue will be updated to (currentvalue+((the ether just received (i.e., msg.value)*950)/1000)).\n      - the checkshares of owner2 will be updated to (the checkshares of owner2+((the ether just received (i.e., msg.value)*10)/1000)).\n      - the checkshares of owner3 will be updated to (the checkshares of owner3+((the ether just received (i.e., msg.value)*25)/1000)).\n      - the checkshares of owner4 will be updated to (the checkshares of owner4+((the ether just received (i.e., msg.value)*15)/1000)).\n\nFor the clear function.\n- When gameissundown is not 0, and sundowngracetargetblock is smaller than the current block's number, and sundowngracetargetblock does not equal to 0:\n  - it transfers ether valued the balance of the address of this contract to owner2.\n\nFor the changeGameParameters function, it has 2 arguments and the type of each argument is as follows: uint256, uint256.\n- When blocksleftincurrentkick is smaller than the current block's number, and for owner:\n  - the state variable costtokick will be updated to the first argument.\n  - the state variable numberofblocksperkick will be updated to the second argument.\n\nFor the changeOwner function, it has one argument and its type is address.\n- For owner:\n  - the state variable owner will be updated to the first argument.\n\nFor the payable airDrop function, it has one argument and its type is address.\n- For owner1:\n  - it transfers ether valued 1 to the first argument.\n  - When the call or transfer succeeds, and the ether just received (i.e., msg.value) is greater than 1:\n    - it transfers (the ether just received (i.e., msg.value)-1) to caller.\n\nFor the pullShares function, it has one argument and its type is address.\n- When the checkshares of the first argument does not equal to 0:\n  - it transfers ether valued the checkshares of the first argument to the first argument. Afterthat, \n    - the checkshares of the first argument will be updated to 0.\n\nFor the withdrawShares function.\n- For users, except the checkshares of caller equals to 0:\n  - it transfers ether valued the checkshares of caller to caller. Afterthat, \n    - the checkshares of caller will be updated to 0.\n- When blocksleftincurrentkick is smaller than the current block's number, and currentvalue is greater than 0:\n  - the checkshares of lastkicker will be updated to (the checkshares of lastkicker+currentvalue). Afterthat, \n    - the state variable currentvalue will be updated to 0.\n    - the state variable currentvalue will be updated to 0.\n  - the state variable gameindex will be updated to (gameindex+1).\n  - the state variable blocksleftincurrentkick will be updated to 0.\n  - the state variable totalSupply will be updated to 0.\n  - the state variable owner3 will be updated to 0.\n  - the state variable owner4 will be updated to 0.\n  - the state variable lastkicker will be updated to 0.\n\nFor the payable kickTheCoin function.\n- When gameissundown is 0, and the ether just received (i.e., msg.value) equals to costtokick:\n  - the state variable totalSupply will be updated to (totalSupply+1). Afterthat, \n    - the state variable totalSupply will be updated to (totalSupply+1).\n  - the state variable lastkicker will be updated to caller.\n  - the state variable blocksleftincurrentkick will be updated to (the current block's number+numberofblocksperkick).\n  - the state variable lastkicker will be updated to caller.\n  - the state variable blocksleftincurrentkick will be updated to (the current block's number+numberofblocksperkick).\n  - When totalSupply equals to 1:\n    - the state variable currentvalue will be updated to the ether just received (i.e., msg.value).\n    - the state variable owner3 will be updated to caller.\n  - When totalSupply does not equal to 1:\n    - When totalSupply equals to 2:\n      - the state variable currentvalue will be updated to (currentvalue+the ether just received (i.e., msg.value)).\n      - the state variable owner4 will be updated to caller.\n    - When totalSupply does not equal to 2:\n      - the state variable currentvalue will be updated to (currentvalue+((the ether just received (i.e., msg.value)*950)/1000)).\n      - the checkshares of owner2 will be updated to (the checkshares of owner2+((the ether just received (i.e., msg.value)*10)/1000)).\n      - the checkshares of owner3 will be updated to (the checkshares of owner3+((the ether just received (i.e., msg.value)*25)/1000)).\n      - the checkshares of owner4 will be updated to (the checkshares of owner4+((the ether just received (i.e., msg.value)*15)/1000)).\n  - When blocksleftincurrentkick is smaller than the current block's number, and currentvalue is greater than 0:\n    - the checkshares of lastkicker will be updated to (the checkshares of lastkicker+currentvalue). Afterthat, \n      - the state variable currentvalue will be updated to 0.\n      - the state variable currentvalue will be updated to 0.\n    - the state variable gameindex will be updated to (gameindex+1).\n    - the state variable blocksleftincurrentkick will be updated to 0.\n    - the state variable totalSupply will be updated to 0.\n    - the state variable owner3 will be updated to 0.\n    - the state variable owner4 will be updated to 0.\n    - the state variable lastkicker will be updated to 0.\n  - When totalSupply equals to 1:\n    - the state variable currentvalue will be updated to the ether just received (i.e., msg.value).\n    - the state variable owner3 will be updated to caller.\n  - When totalSupply does not equal to 1:\n    - When totalSupply equals to 2:\n      - the state variable currentvalue will be updated to (currentvalue+the ether just received (i.e., msg.value)).\n      - the state variable owner4 will be updated to caller.\n    - When totalSupply does not equal to 2:\n      - the state variable currentvalue will be updated to (currentvalue+((the ether just received (i.e., msg.value)*950)/1000)).\n      - the checkshares of owner2 will be updated to (the checkshares of owner2+((the ether just received (i.e., msg.value)*10)/1000)).\n      - the checkshares of owner3 will be updated to (the checkshares of owner3+((the ether just received (i.e., msg.value)*25)/1000)).\n      - the checkshares of owner4 will be updated to (the checkshares of owner4+((the ether just received (i.e., msg.value)*15)/1000)).\n\nFor the sunrise function.\n- When blocksleftincurrentkick is smaller than the current block's number, and for owner:\n  - the state variable gameissundown will be updated to 0.\n  - the state variable sundowngracetargetblock will be updated to 0.\n\n",
	"language": "Solidity",
	"status": "Connection error."
}