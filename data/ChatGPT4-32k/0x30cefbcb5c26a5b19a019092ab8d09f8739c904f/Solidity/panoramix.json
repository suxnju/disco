{
	"address": "0x30cefbcb5c26a5b19a019092ab8d09f8739c904f",
	"input_format": "DecompiledCode",
	"ir": "# Palkeoramix decompiler. \n\nconst decimals = 18\nconst START_DATE = (417417 * 3600)\nconst MAX_ETH_FUND = 77519379844961240310077\nconst MIN_ETH_FUND = 7751937984496124031007\nconst MAX_USD_FUND = 20 * 10^6\nconst KYC_ETH_LMT = 38759689922480620155\nconst MIN_USD_FUND = 2 * 10^6\nconst USD_PER_ETH = 258\nconst TOKENS_PER_ETH = 774\nconst KYC_USD_LMT = 10000\nconst TOKENS_PER_USD = 3\nconst MAX_TOKENS = 300 * 10^6\nconst FUNDING_PERIOD = (672 * 24 * 3600)\n\ndef storage:\n  stor0 is uint8 at storage 0\n  totalSupply is uint256 at storage 1\n  balanceOf is mapping of uint256 at storage 3\n  allowance is mapping of uint256 at storage 4\n  __abortFuse is uint8 at storage 5\n  icoSuccessful is uint8 at storage 5 offset 8\n  newOwner is address at storage 5 offset 16\n  veredictumAddress is address at storage 6\n  etherRaised is uint256 at storage 7\n  stor8 is mapping of uint8 at storage 8\n  etherContributed is mapping of uint256 at storage 9\n  name is array of uint256 at storage 10\n  symbol is array of uint256 at storage 11\n  owner is address at storage 12\n  fundWalletAddress is address at storage 13\n  END_DATE is uint256 at storage 14\n\ndef name(): # not payable\n  return name[0 len name.length]\n\ndef totalSupply(): # not payable\n  return totalSupply\n\ndef veredictum(): # not payable\n  return veredictumAddress\n\ndef END_DATE(): # not payable\n  return END_DATE\n\ndef fundWallet(): # not payable\n  return fundWalletAddress\n\ndef __abortFuse(): # not payable\n  return bool(__abortFuse)\n\ndef balanceOf(address account): # not payable\n  return balanceOf[address(account)]\n\ndef icoSuccessful(): # not payable\n  return bool(icoSuccessful)\n\ndef kycAddresses(address ): # not payable\n  return bool(stor8[])\n\ndef owner(): # not payable\n  return owner\n\ndef symbol(): # not payable\n  return symbol[0 len symbol.length]\n\ndef etherContributed(address ): # not payable\n  return etherContributed[]\n\ndef etherRaised(): # not payable\n  return etherRaised\n\ndef newOwner(): # not payable\n  return newOwner\n\ndef allowance(address owner, address spender): # not payable\n  return allowance[address(owner)][address(spender)]\n\n#\n#  Regular functions\n#\n\ndef destroy(): # not payable\n  require not stor0\n  require owner == caller\n  require not __abortFuse\n  require not eth.balance(this.address)\n  selfdestruct(owner)\n\ndef abort(): # not payable\n  require not stor0\n  require owner == caller\n  require not icoSuccessful\n  __abortFuse = 0\n  return 1\n\ndef usdRaised(): # not payable\n  require 258 * etherRaised / 258 == etherRaised\n  return (258 * etherRaised / 10^18)\n\ndef changeVeredictum(address _addr): # not payable\n  require not stor0\n  require owner == caller\n  veredictumAddress = _addr\n  return 1\n\ndef ethToUsd(uint256 ethAmount): # not payable\n  require 258 * ethAmount / 258 == ethAmount\n  return (258 * ethAmount / 10^18)\n\ndef acceptOwnership(): # not payable\n  require not stor0\n  require newOwner == caller\n  log 0x2748503f: owner, newOwner\n  owner = newOwner\n  return 1\n\ndef fundSucceeded(): # not payable\n  if not __abortFuse:\n      return bool(__abortFuse)\n  if block.timestamp > END_DATE:\n  return etherRaised >= 7751937984496124031007\n\ndef changeOwner(address _newOwner): # not payable\n  require not stor0\n  require owner == caller\n  log 0xbc48fdad: _newOwner\n  newOwner = _newOwner\n  return 1\n\ndef fundFailed(): # not payable\n  if not __abortFuse:\n      return not bool(__abortFuse)\n  if block.timestamp <= END_DATE:\n      return (block.timestamp > END_DATE)\n  return (etherRaised < 7751937984496124031007)\n\ndef usdToEth(uint256 _usd): # not payable\n  if not _usd:\n      return (10^18 * _usd / 258)\n  require _usd\n  require 10^18 * _usd / _usd == 10^18\n  return (10^18 * _usd / 258)\n\ndef approve(address spender, uint256 amount): # not payable\n  require not stor0\n  require icoSuccessful\n  allowance[caller][address(spender)] = amount\n  log 0x8c5be1e5: amount, caller, spender\n  return 1\n\ndef addKycAddress(address _addr, bool _kyc): # not payable\n  require not stor0\n  require owner == caller\n  require __abortFuse\n  if block.timestamp > END_DATE:\n      require etherRaised >= 7751937984496124031007\n  stor8[address(_addr)] = uint8(_kyc)\n  log 0xccc39d7d: _addr, _kyc\n  return 1\n\ndef transferAnyERC20Token(address tokenAddress, uint256 tokens): # not payable\n  require owner == caller\n  require not stor0\n  stor0 = 1\n  require ext_code.size(tokenAddress)\n  call tokenAddress.transfer(address ecipient, uint256 mount) with:\n       gas gas_remaining - 710 wei\n      args owner, tokens\n  require ext_call.success\n  require ext_call.return_data[0]\n  stor0 = 0\n  return 1\n\ndef finaliseICO(): # not payable\n  require owner == caller\n  require not stor0\n  stor0 = 1\n  require __abortFuse\n  require etherRaised >= 7751937984496124031007\n  icoSuccessful = 1\n  log 0x8c9a4f13: fundWalletAddress, eth.balance(this.address)\n  call fundWalletAddress with:\n     value eth.balance(this.address) wei\n       gas 2300 * is_zero(value) wei\n  require ext_call.success\n  stor0 = 0\n  return 1\n\ndef transfer(address recipient, uint256 amount): # not payable\n  require not stor0\n  stor0 = 1\n  require icoSuccessful\n  require amount <= balanceOf[caller]\n  log 0xddf252ad: amount, caller, recipient\n  if amount:\n      require balanceOf[caller] - amount <= balanceOf[caller]\n      balanceOf[caller] -= amount\n      require amount + balanceOf[recipient] >= balanceOf[recipient]\n      balanceOf[address(recipient)] = amount + balanceOf[recipient]\n  if veredictumAddress == recipient:\n      require ext_code.size(veredictumAddress)\n      call veredictumAddress.notify(address from, uint256 value) with:\n           gas gas_remaining - 710 wei\n          args caller, amount\n      require ext_call.success\n      require ext_call.return_data[0]\n  stor0 = 0\n  return 1\n\ndef refund(address investor): # not payable\n  require not stor0\n  stor0 = 1\n  if __abortFuse:\n      require block.timestamp > END_DATE\n      require etherRaised < 7751937984496124031007\n  require balanceOf[address(investor)] <= balanceOf[address(investor)]\n  log 0xddf252ad: balanceOf[address(investor)], investor, fundWalletAddress\n  if balanceOf[address(investor)]:\n      require 0 <= balanceOf[address(investor)]\n      balanceOf[address(investor)] = 0\n      require balanceOf[address(investor)] + balanceOf[stor13] >= balanceOf[stor13]\n      balanceOf[stor13] += balanceOf[address(investor)]\n  etherContributed[address(investor)] = 0\n  stor8[address(investor)] = 0\n  log 0xd7dee270: investor, etherContributed[address(investor)]\n  if etherContributed[address(investor)] > 0:\n      call investor with:\n         value etherContributed[address(investor)] wei\n           gas 2300 * is_zero(value) wei\n      require ext_call.success\n  stor0 = 0\n  return 1\n\ndef transferFrom(address sender, address recipient, uint256 amount): # not payable\n  require not stor0\n  stor0 = 1\n  require icoSuccessful\n  require amount <= allowance[address(sender)][caller]\n  require allowance[address(sender)][caller] - amount <= allowance[address(sender)][caller]\n  allowance[address(sender)][caller] -= amount\n  require amount <= balanceOf[address(sender)]\n  log 0xddf252ad: amount, sender, recipient\n  if amount:\n      require balanceOf[address(sender)] - amount <= balanceOf[address(sender)]\n      balanceOf[address(sender)] -= amount\n      require amount + balanceOf[recipient] >= balanceOf[recipient]\n      balanceOf[address(recipient)] = amount + balanceOf[recipient]\n  if veredictumAddress == recipient:\n      require ext_code.size(veredictumAddress)\n      call veredictumAddress.notify(address from, uint256 value) with:\n           gas gas_remaining - 710 wei\n          args caller, amount\n      require ext_call.success\n      require ext_call.return_data[0]\n  stor0 = 0\n  return 1\n\ndef ethToTokens(uint256 _eth): # not payable\n  require 258 * _eth / 258 == _eth\n  if 258 * _eth / 10^18 >= 2 * 10^6:\n      if not _eth:\n          if not 774 * _eth:\n              return (104490 * _eth / 100)\n          if 774 * _eth:\n              if 104490 * _eth / 774 * _eth == 135:\n                  return (104490 * _eth / 100)\n      else:\n          if _eth:\n              if 774 * _eth / _eth == 774:\n                  if not 774 * _eth:\n                      return (104490 * _eth / 100)\n                  if 774 * _eth:\n                      if 104490 * _eth / 774 * _eth == 135:\n                          return (104490 * _eth / 100)\n  else:\n      if 258 * _eth / 10^18 >= 500000:\n          if not _eth:\n              if not 774 * _eth:\n                  return (100620 * _eth / 100)\n              if 774 * _eth:\n                  if 100620 * _eth / 774 * _eth == 130:\n                      return (100620 * _eth / 100)\n          else:\n              if _eth:\n                  if 774 * _eth / _eth == 774:\n                      if not 774 * _eth:\n                          return (100620 * _eth / 100)\n                      if 774 * _eth:\n                          if 100620 * _eth / 774 * _eth == 130:\n                              return (100620 * _eth / 100)\n      else:\n          if 258 * _eth / 10^18 >= 100000:\n              if not _eth:\n                  if not 774 * _eth:\n                      return (92880 * _eth / 100)\n                  if 774 * _eth:\n                      if 92880 * _eth / 774 * _eth == 120:\n                          return (92880 * _eth / 100)\n              else:\n                  if _eth:\n                      if 774 * _eth / _eth == 774:\n                          if not 774 * _eth:\n                              return (92880 * _eth / 100)\n                          if 774 * _eth:\n                              if 92880 * _eth / 774 * _eth == 120:\n                                  return (92880 * _eth / 100)\n          else:\n              if 258 * _eth / 10^18 >= 25000:\n                  if not _eth:\n                      if not 774 * _eth:\n                          return (89010 * _eth / 100)\n                      if 774 * _eth:\n                          if 89010 * _eth / 774 * _eth == 115:\n                              return (89010 * _eth / 100)\n                  else:\n                      if _eth:\n                          if 774 * _eth / _eth == 774:\n                              if not 774 * _eth:\n                                  return (89010 * _eth / 100)\n                              if 774 * _eth:\n                                  if 89010 * _eth / 774 * _eth == 115:\n                                      return (89010 * _eth / 100)\n              else:\n                  if 258 * _eth / 10^18 >= 10000:\n                      if not _eth:\n                          if not 774 * _eth:\n                              return (85140 * _eth / 100)\n                          if 774 * _eth:\n                              if 85140 * _eth / 774 * _eth == 110:\n                                  return (85140 * _eth / 100)\n                      else:\n                          if _eth:\n                              if 774 * _eth / _eth == 774:\n                                  if not 774 * _eth:\n                                      return (85140 * _eth / 100)\n                                  if 774 * _eth:\n                                      if 85140 * _eth / 774 * _eth == 110:\n                                          return (85140 * _eth / 100)\n                  else:\n                      if 258 * _eth / 10^18 >= 5000:\n                          if not _eth:\n                              if not 774 * _eth:\n                                  return (81270 * _eth / 100)\n                              if 774 * _eth:\n                                  if 81270 * _eth / 774 * _eth == 105:\n                                      return (81270 * _eth / 100)\n                          else:\n                              if _eth:\n                                  if 774 * _eth / _eth == 774:\n                                      if not 774 * _eth:\n                                          return (81270 * _eth / 100)\n                                      if 774 * _eth:\n                                          if 81270 * _eth / 774 * _eth == 105:\n                                              return (81270 * _eth / 100)\n                      else:\n                          if not _eth:\n                              if not 774 * _eth:\n                                  return (77400 * _eth / 100)\n                              if 774 * _eth:\n                                  if 77400 * _eth / 774 * _eth == 100:\n                                      return (77400 * _eth / 100)\n                          else:\n                              if _eth:\n                                  if 774 * _eth / _eth == 774:\n                                      if not 774 * _eth:\n                                          return (77400 * _eth / 100)\n                                      if 774 * _eth:\n                                          if 77400 * _eth / 774 * _eth == 100:\n                                              return (77400 * _eth / 100)\n  revert\n\ndef _fallback() payable: # default function\n  require not stor0\n  require __abortFuse\n  if block.timestamp <= END_DATE:\n      require not icoSuccessful\n      require block.timestamp <= END_DATE\n      require call.value > 0\n      if stor8[caller]:\n          require 258 * call.value / 258 == call.value\n          if 258 * call.value / 10^18 >= 2 * 10^6:\n              if not call.value:\n                  if not 774 * call.value:\n                      require 104490 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n                      if not 104490 * call.value / 100:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                          stop\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                      balanceOf[caller] = (104490 * call.value / 100) + balanceOf[caller]\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      etherRaised += call.value\n                      require etherRaised <= 77519379844961240310077\n                  else:\n                      require 774 * call.value\n                      require 104490 * call.value / 774 * call.value == 135\n                      require 104490 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n                      if not 104490 * call.value / 100:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                          stop\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                      balanceOf[caller] = (104490 * call.value / 100) + balanceOf[caller]\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      etherRaised += call.value\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if call.value:\n                  if 774 * call.value / call.value == 774:\n                      if not 774 * call.value:\n                          require 104490 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n                          if not 104490 * call.value / 100:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                              require etherRaised <= 77519379844961240310077\n                              stop\n                          require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 104490 * call.value / 100\n                          require (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                          balanceOf[caller] = (104490 * call.value / 100) + balanceOf[caller]\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if 774 * call.value:\n                          if 104490 * call.value / 774 * call.value == 135:\n                              require 104490 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n                              if not 104490 * call.value / 100:\n                                  require call.value + etherContributed[caller] >= etherContributed[caller]\n                                  etherContributed[caller] += call.value\n                                  require call.value + etherRaised >= etherRaised\n                                  etherRaised += call.value\n                                  require etherRaised <= 77519379844961240310077\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]:\n                                  balanceOf[stor13] -= 104490 * call.value / 100\n                                  if (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]:\n                                      balanceOf[caller] = (104490 * call.value / 100) + balanceOf[caller]\n                                      if call.value + etherContributed[caller] >= etherContributed[caller]:\n                                          etherContributed[caller] += call.value\n                                          if call.value + etherRaised >= etherRaised:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          else:\n              if 258 * call.value / 10^18 >= 500000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 100620 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n                          if not 100620 * call.value / 100:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                              require etherRaised <= 77519379844961240310077\n                              stop\n                          require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 100620 * call.value / 100\n                          require (100620 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                          balanceOf[caller] = (100620 * call.value / 100) + balanceOf[caller]\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 774 * call.value\n                      require 100620 * call.value / 774 * call.value == 130\n                      require 100620 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n                      if not 100620 * call.value / 100:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 100620 * call.value / 100\n                      require (100620 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                      balanceOf[caller] = (100620 * call.value / 100) + balanceOf[caller]\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require call.value\n                  require 774 * call.value / call.value == 774\n                  if not 774 * call.value:\n                      require 100620 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n                      if not 100620 * call.value / 100:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 100620 * call.value / 100\n                      require (100620 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                      balanceOf[caller] = (100620 * call.value / 100) + balanceOf[caller]\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require 774 * call.value\n                  require 100620 * call.value / 774 * call.value == 130\n                  require 100620 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n                  if not 100620 * call.value / 100:\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      etherRaised += call.value\n                      require etherRaised <= 77519379844961240310077\n                  else:\n                      require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 100620 * call.value / 100\n                      require (100620 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                      balanceOf[caller] = (100620 * call.value / 100) + balanceOf[caller]\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if 258 * call.value / 10^18 >= 100000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                          if not 92880 * call.value / 100:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                              require etherRaised <= 77519379844961240310077\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 92880 * call.value / 100\n                          require (92880 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                          balanceOf[caller] = (92880 * call.value / 100) + balanceOf[caller]\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 774 * call.value\n                      require 92880 * call.value / 774 * call.value == 120\n                      require 92880 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                      if not 92880 * call.value / 100:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                      else:\n                          require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 92880 * call.value / 100\n                          require (92880 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                          balanceOf[caller] = (92880 * call.value / 100) + balanceOf[caller]\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                  else:\n                      require call.value\n                      require 774 * call.value / call.value == 774\n                      if not 774 * call.value:\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                          if not 92880 * call.value / 100:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                              require etherRaised <= 77519379844961240310077\n                          else:\n                              require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 92880 * call.value / 100\n                              require (92880 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (92880 * call.value / 100) + balanceOf[caller]\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                      else:\n                          require 774 * call.value\n                          require 92880 * call.value / 774 * call.value == 120\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                          if 92880 * call.value / 100:\n                              require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 92880 * call.value / 100\n                              require (92880 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (92880 * call.value / 100) + balanceOf[caller]\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if 258 * call.value / 10^18 >= 25000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 89010 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n                          if not 89010 * call.value / 100:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                              require etherRaised <= 77519379844961240310077\n                          else:\n                              require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 89010 * call.value / 100\n                              require (89010 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (89010 * call.value / 100) + balanceOf[caller]\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                      else:\n                          require 774 * call.value\n                          require 89010 * call.value / 774 * call.value == 115\n                          require 89010 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n                          if 89010 * call.value / 100:\n                              require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 89010 * call.value / 100\n                              require (89010 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (89010 * call.value / 100) + balanceOf[caller]\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                  else:\n                      require call.value\n                      require 774 * call.value / call.value == 774\n                      if not 774 * call.value:\n                          require 89010 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n                          if 89010 * call.value / 100:\n                              require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 89010 * call.value / 100\n                              require (89010 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (89010 * call.value / 100) + balanceOf[caller]\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                      else:\n                          require 774 * call.value\n                          require 89010 * call.value / 774 * call.value == 115\n                          require 89010 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n                          if 89010 * call.value / 100:\n                              require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 89010 * call.value / 100\n                              require (89010 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (89010 * call.value / 100) + balanceOf[caller]\n                          else:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if 258 * call.value / 10^18 >= 10000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 85140 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, caller\n                          if 85140 * call.value / 100:\n                              require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 85140 * call.value / 100\n                              require (85140 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (85140 * call.value / 100) + balanceOf[caller]\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                      else:\n                          require 774 * call.value\n                          require 85140 * call.value / 774 * call.value == 110\n                          require 85140 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, caller\n                          if 85140 * call.value / 100:\n                              require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 85140 * call.value / 100\n                              require (85140 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (85140 * call.value / 100) + balanceOf[caller]\n                          else:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                  else:\n                      require call.value\n                      require 774 * call.value / call.value == 774\n                      if not 774 * call.value:\n                          require 85140 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, caller\n                          if 85140 * call.value / 100:\n                              require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 85140 * call.value / 100\n                              require (85140 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (85140 * call.value / 100) + balanceOf[caller]\n                          else:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                      else:\n                          require 774 * call.value\n                          require 85140 * call.value / 774 * call.value == 110\n                          require 85140 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, caller\n                          if not 85140 * call.value / 100:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 85140 * call.value / 100\n                          require (85140 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                          balanceOf[caller] = (85140 * call.value / 100) + balanceOf[caller]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if 258 * call.value / 10^18 >= 5000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 81270 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, caller\n                          if 81270 * call.value / 100:\n                              require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 81270 * call.value / 100\n                              require (81270 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (81270 * call.value / 100) + balanceOf[caller]\n                          else:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                      else:\n                          require 774 * call.value\n                          require 81270 * call.value / 774 * call.value == 105\n                          require 81270 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, caller\n                          if not 81270 * call.value / 100:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 81270 * call.value / 100\n                          require (81270 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                          balanceOf[caller] = (81270 * call.value / 100) + balanceOf[caller]\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if call.value:\n                      if 774 * call.value / call.value == 774:\n                          if not 774 * call.value:\n                              require 81270 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, caller\n                              if not 81270 * call.value / 100:\n                                  require call.value + etherContributed[caller] >= etherContributed[caller]\n                                  etherContributed[caller] += call.value\n                                  require call.value + etherRaised >= etherRaised\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 81270 * call.value / 100\n                              require (81270 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (81270 * call.value / 100) + balanceOf[caller]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if 774 * call.value:\n                              if 81270 * call.value / 774 * call.value == 105:\n                                  require 81270 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, caller\n                                  if not 81270 * call.value / 100:\n                                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                                      etherContributed[caller] += call.value\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]:\n                                      balanceOf[stor13] -= 81270 * call.value / 100\n                                      if (81270 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              else:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 77400 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, caller\n                          if 77400 * call.value / 100:\n                              require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 77400 * call.value / 100\n                              require (77400 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (77400 * call.value / 100) + balanceOf[caller]\n                          else:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                      else:\n                          require 774 * call.value\n                          require 77400 * call.value / 774 * call.value == 100\n                          require 77400 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, caller\n                          if not 77400 * call.value / 100:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 77400 * call.value / 100\n                          require (77400 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                          balanceOf[caller] = (77400 * call.value / 100) + balanceOf[caller]\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if call.value:\n                      if 774 * call.value / call.value == 774:\n                          if not 774 * call.value:\n                              require 77400 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, caller\n                              if not 77400 * call.value / 100:\n                                  require call.value + etherContributed[caller] >= etherContributed[caller]\n                                  etherContributed[caller] += call.value\n                                  require call.value + etherRaised >= etherRaised\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 77400 * call.value / 100\n                              require (77400 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (77400 * call.value / 100) + balanceOf[caller]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if 774 * call.value:\n                              if 77400 * call.value / 774 * call.value == 100:\n                                  require 77400 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, caller\n                                  if not 77400 * call.value / 100:\n                                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                                      etherContributed[caller] += call.value\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]:\n                                      balanceOf[stor13] -= 77400 * call.value / 100\n                                      if (77400 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          revert\n      require block.timestamp >= 417417 * 3600\n      require call.value + etherContributed[caller] >= etherContributed[caller]\n      require call.value + etherContributed[caller] <= 38759689922480620155\n      require 258 * call.value / 258 == call.value\n      if 258 * call.value / 10^18 >= 2 * 10^6:\n          if not call.value:\n              if not 774 * call.value:\n                  require 104490 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n                  if 104490 * call.value / 100:\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                      balanceOf[caller] = (104490 * call.value / 100) + balanceOf[caller]\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require call.value + etherContributed[caller] >= etherContributed[caller]\n                  etherContributed[caller] += call.value\n                  require call.value + etherRaised >= etherRaised\n                  etherRaised += call.value\n                  require etherRaised <= 77519379844961240310077\n              else:\n                  require 774 * call.value\n                  require 104490 * call.value / 774 * call.value == 135\n                  require 104490 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n                  if 104490 * call.value / 100:\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                      balanceOf[caller] = (104490 * call.value / 100) + balanceOf[caller]\n                  else:\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      etherRaised += call.value\n          else:\n              require call.value\n              require 774 * call.value / call.value == 774\n              if not 774 * call.value:\n                  require 104490 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n                  if 104490 * call.value / 100:\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                      balanceOf[caller] = (104490 * call.value / 100) + balanceOf[caller]\n                  else:\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      etherRaised += call.value\n              else:\n                  require 774 * call.value\n                  require 104490 * call.value / 774 * call.value == 135\n                  require 104490 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n                  if not 104490 * call.value / 100:\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                  balanceOf[stor13] -= 104490 * call.value / 100\n                  require (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                  balanceOf[caller] = (104490 * call.value / 100) + balanceOf[caller]\n      else:\n          if 258 * call.value / 10^18 >= 500000:\n              if not call.value:\n                  if not 774 * call.value:\n                      require 100620 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n                      if 100620 * call.value / 100:\n                          require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 100620 * call.value / 100\n                          require (100620 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                          balanceOf[caller] = (100620 * call.value / 100) + balanceOf[caller]\n                      else:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                  else:\n                      require 774 * call.value\n                      require 100620 * call.value / 774 * call.value == 130\n                      require 100620 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n                      if not 100620 * call.value / 100:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 100620 * call.value / 100\n                      require (100620 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                      balanceOf[caller] = (100620 * call.value / 100) + balanceOf[caller]\n              else:\n                  require call.value\n                  require 774 * call.value / call.value == 774\n                  if not 774 * call.value:\n                      require 100620 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n                      if not 100620 * call.value / 100:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 100620 * call.value / 100\n                      require (100620 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                      balanceOf[caller] = (100620 * call.value / 100) + balanceOf[caller]\n                  else:\n                      require 774 * call.value\n                      require 100620 * call.value / 774 * call.value == 130\n                      require 100620 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n                      if 100620 * call.value / 100:\n                          require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 100620 * call.value / 100\n                          require (100620 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n          else:\n              if 258 * call.value / 10^18 >= 100000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                          if not 92880 * call.value / 100:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 92880 * call.value / 100\n                          require (92880 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                          balanceOf[caller] = (92880 * call.value / 100) + balanceOf[caller]\n                      else:\n                          require 774 * call.value\n                          require 92880 * call.value / 774 * call.value == 120\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                          if 92880 * call.value / 100:\n                              require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 92880 * call.value / 100\n                              require (92880 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                  else:\n                      require call.value\n                      require 774 * call.value / call.value == 774\n                      if not 774 * call.value:\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                          if 92880 * call.value / 100:\n                              require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 92880 * call.value / 100\n                              require (92880 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                      else:\n                          require 774 * call.value\n                          require 92880 * call.value / 774 * call.value == 120\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                          if not 92880 * call.value / 100:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 92880 * call.value / 100\n              else:\n                  if 258 * call.value / 10^18 >= 25000:\n                      if not call.value:\n                          if not 774 * call.value:\n                              require 89010 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n                              if 89010 * call.value / 100:\n                                  require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                                  balanceOf[stor13] -= 89010 * call.value / 100\n                                  require (89010 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                          else:\n                              require 774 * call.value\n                              require 89010 * call.value / 774 * call.value == 115\n                              require 89010 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n                              if not 89010 * call.value / 100:\n                                  require call.value + etherContributed[caller] >= etherContributed[caller]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 89010 * call.value / 100\n                      else:\n                          require call.value\n                          require 774 * call.value / call.value == 774\n                          if not 774 * call.value:\n                              require 89010 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n                              if not 89010 * call.value / 100:\n                                  require call.value + etherContributed[caller] >= etherContributed[caller]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 89010 * call.value / 100\n                          else:\n                              require 774 * call.value\n                              require 89010 * call.value / 774 * call.value == 115\n                              require 89010 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n                              if 89010 * call.value / 100:\n                                  require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if 258 * call.value / 10^18 >= 10000:\n                          if not call.value:\n                              if not 774 * call.value:\n                                  require 85140 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, caller\n                                  if not 85140 * call.value / 100:\n                                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                                  balanceOf[stor13] -= 85140 * call.value / 100\n                              else:\n                                  require 774 * call.value\n                                  require 85140 * call.value / 774 * call.value == 110\n                                  require 85140 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, caller\n                                  if 85140 * call.value / 100:\n                                      require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              require call.value\n                              require 774 * call.value / call.value == 774\n                              if not 774 * call.value:\n                                  require 85140 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, caller\n                                  if 85140 * call.value / 100:\n                                      require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  require 774 * call.value\n                                  require 85140 * call.value / 774 * call.value == 110\n                                  require 85140 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, caller\n                                  if 85140 * call.value / 100:\n                      else:\n                          if 258 * call.value / 10^18 >= 5000:\n                              if not call.value:\n                                  if not 774 * call.value:\n                                      require 81270 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, caller\n                                      if 81270 * call.value / 100:\n                                          require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      require 774 * call.value\n                                      require 81270 * call.value / 774 * call.value == 105\n                                      require 81270 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, caller\n                                      if 81270 * call.value / 100:\n                              else:\n                                  require call.value\n                                  require 774 * call.value / call.value == 774\n                                  if not 774 * call.value:\n                                      require 81270 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, caller\n                                      if 81270 * call.value / 100:\n                                  else:\n                                      require 774 * call.value\n                                      require 81270 * call.value / 774 * call.value == 105\n                                      require 81270 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, caller\n                          else:\n                              if not call.value:\n                                  if not 774 * call.value:\n                                      require 77400 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, caller\n                                      if 77400 * call.value / 100:\n                                          require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      require 774 * call.value\n                                      require 77400 * call.value / 774 * call.value == 100\n                                      require 77400 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, caller\n                                      if 77400 * call.value / 100:\n                              else:\n                                  require call.value\n                                  require 774 * call.value / call.value == 774\n                                  if not 774 * call.value:\n                                      require 77400 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, caller\n                                      if 77400 * call.value / 100:\n                                  else:\n                                      require 774 * call.value\n                                      require 77400 * call.value / 774 * call.value == 100\n                                      require 77400 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, caller\n  else:\n      require etherRaised >= 7751937984496124031007\n      require not icoSuccessful\n      require block.timestamp <= END_DATE\n      require call.value > 0\n      if not stor8[caller]:\n          require block.timestamp >= 417417 * 3600\n          require call.value + etherContributed[caller] >= etherContributed[caller]\n          require call.value + etherContributed[caller] <= 38759689922480620155\n          require 258 * call.value / 258 == call.value\n          if 258 * call.value / 10^18 >= 2 * 10^6:\n              if not call.value:\n                  if not 774 * call.value:\n                      require 104490 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n                      if 104490 * call.value / 100:\n                          require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 104490 * call.value / 100\n                          require (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                          balanceOf[caller] = (104490 * call.value / 100) + balanceOf[caller]\n                      else:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                  else:\n                      require 774 * call.value\n                      require 104490 * call.value / 774 * call.value == 135\n                      require 104490 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n                      if not 104490 * call.value / 100:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                      balanceOf[caller] = (104490 * call.value / 100) + balanceOf[caller]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require call.value\n              require 774 * call.value / call.value == 774\n              if not 774 * call.value:\n                  require 104490 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n                  if not 104490 * call.value / 100:\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                  balanceOf[stor13] -= 104490 * call.value / 100\n                  require (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                  balanceOf[caller] = (104490 * call.value / 100) + balanceOf[caller]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require 774 * call.value\n              require 104490 * call.value / 774 * call.value == 135\n              require 104490 * call.value / 100 <= balanceOf[stor13]\n              log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n              if not 104490 * call.value / 100:\n                  require call.value + etherContributed[caller] >= etherContributed[caller]\n                  etherContributed[caller] += call.value\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n              balanceOf[stor13] -= 104490 * call.value / 100\n              require (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          if 258 * call.value / 10^18 >= 500000:\n              if not call.value:\n                  if not 774 * call.value:\n                      require 100620 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n                      if not 100620 * call.value / 100:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 100620 * call.value / 100\n                      require (100620 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                      balanceOf[caller] = (100620 * call.value / 100) + balanceOf[caller]\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require 774 * call.value\n                  require 100620 * call.value / 774 * call.value == 130\n                  require 100620 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n                  if not 100620 * call.value / 100:\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                  balanceOf[stor13] -= 100620 * call.value / 100\n                  require (100620 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require call.value\n              require 774 * call.value / call.value == 774\n              if not 774 * call.value:\n                  require 100620 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n                  if not 100620 * call.value / 100:\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                  balanceOf[stor13] -= 100620 * call.value / 100\n                  require (100620 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require 774 * call.value\n              require 100620 * call.value / 774 * call.value == 130\n              require 100620 * call.value / 100 <= balanceOf[stor13]\n              log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n              if not 100620 * call.value / 100:\n                  require call.value + etherContributed[caller] >= etherContributed[caller]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n              balanceOf[stor13] -= 100620 * call.value / 100\n          else:\n              if 258 * call.value / 10^18 >= 100000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                          if not 92880 * call.value / 100:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 92880 * call.value / 100\n                          require (92880 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 774 * call.value\n                      require 92880 * call.value / 774 * call.value == 120\n                      require 92880 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                      if not 92880 * call.value / 100:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 92880 * call.value / 100\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require call.value\n                  require 774 * call.value / call.value == 774\n                  if not 774 * call.value:\n                      require 92880 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                      if not 92880 * call.value / 100:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 92880 * call.value / 100\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require 774 * call.value\n                  require 92880 * call.value / 774 * call.value == 120\n                  require 92880 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                  if not 92880 * call.value / 100:\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if 258 * call.value / 10^18 < 25000:\n                  if 258 * call.value / 10^18 >= 10000:\n                      if not call.value:\n                          if not 774 * call.value:\n                              require 85140 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, caller\n                              if not 85140 * call.value / 100:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 774 * call.value\n                          require 85140 * call.value / 774 * call.value == 110\n                          require 85140 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, caller\n                      else:\n                          require call.value\n                          require 774 * call.value / call.value == 774\n                          if not 774 * call.value:\n                              require 85140 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, caller\n                          else:\n                              require 774 * call.value\n                              require 85140 * call.value / 774 * call.value == 110\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if 258 * call.value / 10^18 >= 5000:\n                      if not call.value:\n                          if not 774 * call.value:\n                              require 81270 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, caller\n                          else:\n                              require 774 * call.value\n                              require 81270 * call.value / 774 * call.value == 105\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if call.value:\n                          if 774 * call.value / call.value == 774:\n                              if not 774 * call.value:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if 774 * call.value:\n                                  if 81270 * call.value / 774 * call.value == 105:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if not call.value:\n                          if not 774 * call.value:\n                              require 77400 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, caller\n                          else:\n                              require 774 * call.value\n                              require 77400 * call.value / 774 * call.value == 100\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if call.value:\n                          if 774 * call.value / call.value == 774:\n                              if not 774 * call.value:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if 774 * call.value:\n                                  if 77400 * call.value / 774 * call.value == 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  revert\n              if not call.value:\n                  if not 774 * call.value:\n                      require 89010 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n                      if not 89010 * call.value / 100:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 89010 * call.value / 100\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require 774 * call.value\n                  require 89010 * call.value / 774 * call.value == 115\n                  require 89010 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n                  if not 89010 * call.value / 100:\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require call.value\n              require 774 * call.value / call.value == 774\n              if not 774 * call.value:\n                  require 89010 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n                  if not 89010 * call.value / 100:\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require 774 * call.value\n              require 89010 * call.value / 774 * call.value == 115\n              require 89010 * call.value / 100 <= balanceOf[stor13]\n              log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n      else:\n          require 258 * call.value / 258 == call.value\n          if 258 * call.value / 10^18 >= 2 * 10^6:\n              if not call.value:\n                  if not 774 * call.value:\n                      require 104490 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n                      if not 104490 * call.value / 100:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                          stop\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                      balanceOf[caller] = (104490 * call.value / 100) + balanceOf[caller]\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require 774 * call.value\n                  require 104490 * call.value / 774 * call.value == 135\n                  require 104490 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n                  if not 104490 * call.value / 100:\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      etherRaised += call.value\n                      require etherRaised <= 77519379844961240310077\n                  else:\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                      balanceOf[caller] = (104490 * call.value / 100) + balanceOf[caller]\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n              else:\n                  require call.value\n                  require 774 * call.value / call.value == 774\n                  if not 774 * call.value:\n                      require 104490 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n                      if not 104490 * call.value / 100:\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                      else:\n                          require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 104490 * call.value / 100\n                          require (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                          balanceOf[caller] = (104490 * call.value / 100) + balanceOf[caller]\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                  else:\n                      require 774 * call.value\n                      require 104490 * call.value / 774 * call.value == 135\n                      require 104490 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, caller\n                      if 104490 * call.value / 100:\n                          require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 104490 * call.value / 100\n                          require (104490 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                          balanceOf[caller] = (104490 * call.value / 100) + balanceOf[caller]\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                      etherContributed[caller] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      etherRaised += call.value\n                      require etherRaised <= 77519379844961240310077\n          else:\n              if 258 * call.value / 10^18 >= 500000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 100620 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n                          if not 100620 * call.value / 100:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                              require etherRaised <= 77519379844961240310077\n                          else:\n                              require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 100620 * call.value / 100\n                              require (100620 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (100620 * call.value / 100) + balanceOf[caller]\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                      else:\n                          require 774 * call.value\n                          require 100620 * call.value / 774 * call.value == 130\n                          require 100620 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n                          if 100620 * call.value / 100:\n                              require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 100620 * call.value / 100\n                              require (100620 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (100620 * call.value / 100) + balanceOf[caller]\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                  else:\n                      require call.value\n                      require 774 * call.value / call.value == 774\n                      if not 774 * call.value:\n                          require 100620 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n                          if 100620 * call.value / 100:\n                              require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 100620 * call.value / 100\n                              require (100620 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (100620 * call.value / 100) + balanceOf[caller]\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                          etherContributed[caller] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                      else:\n                          require 774 * call.value\n                          require 100620 * call.value / 774 * call.value == 130\n                          require 100620 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, caller\n                          if 100620 * call.value / 100:\n                              require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 100620 * call.value / 100\n                              require (100620 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (100620 * call.value / 100) + balanceOf[caller]\n                          else:\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n              else:\n                  if 258 * call.value / 10^18 >= 100000:\n                      if not call.value:\n                          if not 774 * call.value:\n                              require 92880 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                              if 92880 * call.value / 100:\n                                  require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                                  balanceOf[stor13] -= 92880 * call.value / 100\n                                  require (92880 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                                  balanceOf[caller] = (92880 * call.value / 100) + balanceOf[caller]\n                                  require call.value + etherContributed[caller] >= etherContributed[caller]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                              etherContributed[caller] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                              require etherRaised <= 77519379844961240310077\n                          else:\n                              require 774 * call.value\n                              require 92880 * call.value / 774 * call.value == 120\n                              require 92880 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                              if 92880 * call.value / 100:\n                                  require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                                  balanceOf[stor13] -= 92880 * call.value / 100\n                                  require (92880 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                                  balanceOf[caller] = (92880 * call.value / 100) + balanceOf[caller]\n                              else:\n                                  require call.value + etherContributed[caller] >= etherContributed[caller]\n                                  etherContributed[caller] += call.value\n                                  require call.value + etherRaised >= etherRaised\n                                  etherRaised += call.value\n                      else:\n                          require call.value\n                          require 774 * call.value / call.value == 774\n                          if not 774 * call.value:\n                              require 92880 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                              if 92880 * call.value / 100:\n                                  require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                                  balanceOf[stor13] -= 92880 * call.value / 100\n                                  require (92880 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                                  balanceOf[caller] = (92880 * call.value / 100) + balanceOf[caller]\n                              else:\n                                  require call.value + etherContributed[caller] >= etherContributed[caller]\n                                  etherContributed[caller] += call.value\n                                  require call.value + etherRaised >= etherRaised\n                                  etherRaised += call.value\n                          else:\n                              require 774 * call.value\n                              require 92880 * call.value / 774 * call.value == 120\n                              require 92880 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, caller\n                              if not 92880 * call.value / 100:\n                                  require call.value + etherContributed[caller] >= etherContributed[caller]\n                                  etherContributed[caller] += call.value\n                                  require call.value + etherRaised >= etherRaised\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 92880 * call.value / 100\n                              require (92880 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                              balanceOf[caller] = (92880 * call.value / 100) + balanceOf[caller]\n                  else:\n                      if 258 * call.value / 10^18 >= 25000:\n                          if not call.value:\n                              if not 774 * call.value:\n                                  require 89010 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n                                  if 89010 * call.value / 100:\n                                      require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                                      balanceOf[stor13] -= 89010 * call.value / 100\n                                      require (89010 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                                      balanceOf[caller] = (89010 * call.value / 100) + balanceOf[caller]\n                                  else:\n                                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                                      etherContributed[caller] += call.value\n                                      require call.value + etherRaised >= etherRaised\n                                      etherRaised += call.value\n                              else:\n                                  require 774 * call.value\n                                  require 89010 * call.value / 774 * call.value == 115\n                                  require 89010 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n                                  if not 89010 * call.value / 100:\n                                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                                      etherContributed[caller] += call.value\n                                      require call.value + etherRaised >= etherRaised\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                                  balanceOf[stor13] -= 89010 * call.value / 100\n                                  require (89010 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                                  balanceOf[caller] = (89010 * call.value / 100) + balanceOf[caller]\n                          else:\n                              require call.value\n                              require 774 * call.value / call.value == 774\n                              if not 774 * call.value:\n                                  require 89010 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n                                  if not 89010 * call.value / 100:\n                                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                                      etherContributed[caller] += call.value\n                                      require call.value + etherRaised >= etherRaised\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                                  balanceOf[stor13] -= 89010 * call.value / 100\n                                  require (89010 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                                  balanceOf[caller] = (89010 * call.value / 100) + balanceOf[caller]\n                              else:\n                                  require 774 * call.value\n                                  require 89010 * call.value / 774 * call.value == 115\n                                  require 89010 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, caller\n                                  if 89010 * call.value / 100:\n                                      require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                                      balanceOf[stor13] -= 89010 * call.value / 100\n                                      require (89010 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.value + etherContributed[caller] >= etherContributed[caller]\n                                  etherContributed[caller] += call.value\n                      else:\n                          if 258 * call.value / 10^18 < 10000:\n                              if 258 * call.value / 10^18 >= 5000:\n                                  if not call.value:\n                                      if not 774 * call.value:\n                                          require 81270 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, caller\n                                          if 81270 * call.value / 100:\n                                              require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                                              balanceOf[stor13] -= 81270 * call.value / 100\n                                              require (81270 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                                          etherContributed[caller] += call.value\n                                      else:\n                                          require 774 * call.value\n                                          require 81270 * call.value / 774 * call.value == 105\n                                          require 81270 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, caller\n                                          if not 81270 * call.value / 100:\n                                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                                          balanceOf[stor13] -= 81270 * call.value / 100\n                                  else:\n                                      require call.value\n                                      require 774 * call.value / call.value == 774\n                                      if not 774 * call.value:\n                                          require 81270 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, caller\n                                          if not 81270 * call.value / 100:\n                                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                                          balanceOf[stor13] -= 81270 * call.value / 100\n                                      else:\n                                          require 774 * call.value\n                                          require 81270 * call.value / 774 * call.value == 105\n                                          require 81270 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, caller\n                                          if 81270 * call.value / 100:\n                                              require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if not call.value:\n                                      if not 774 * call.value:\n                                          require 77400 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, caller\n                                          if 77400 * call.value / 100:\n                                              require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                                              balanceOf[stor13] -= 77400 * call.value / 100\n                                              require (77400 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                                          etherContributed[caller] += call.value\n                                      else:\n                                          require 774 * call.value\n                                          require 77400 * call.value / 774 * call.value == 100\n                                          require 77400 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, caller\n                                          if not 77400 * call.value / 100:\n                                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                                          balanceOf[stor13] -= 77400 * call.value / 100\n                                  else:\n                                      require call.value\n                                      require 774 * call.value / call.value == 774\n                                      if not 774 * call.value:\n                                          require 77400 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, caller\n                                          if not 77400 * call.value / 100:\n                                              require call.value + etherContributed[caller] >= etherContributed[caller]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                                          balanceOf[stor13] -= 77400 * call.value / 100\n                                      else:\n                                          require 774 * call.value\n                                          require 77400 * call.value / 774 * call.value == 100\n                                          require 77400 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, caller\n                                          if 77400 * call.value / 100:\n                                              require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if not call.value:\n                                  if not 774 * call.value:\n                                      require 85140 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, caller\n                                      if not 85140 * call.value / 100:\n                                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                                          etherContributed[caller] += call.value\n                                          require call.value + etherRaised >= etherRaised\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                                      balanceOf[stor13] -= 85140 * call.value / 100\n                                      require (85140 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                                      balanceOf[caller] = (85140 * call.value / 100) + balanceOf[caller]\n                                  else:\n                                      require 774 * call.value\n                                      require 85140 * call.value / 774 * call.value == 110\n                                      require 85140 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, caller\n                                      if 85140 * call.value / 100:\n                                          require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                                          balanceOf[stor13] -= 85140 * call.value / 100\n                                          require (85140 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                                      etherContributed[caller] += call.value\n                              else:\n                                  require call.value\n                                  require 774 * call.value / call.value == 774\n                                  if not 774 * call.value:\n                                      require 85140 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, caller\n                                      if 85140 * call.value / 100:\n                                          require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                                          balanceOf[stor13] -= 85140 * call.value / 100\n                                          require (85140 * call.value / 100) + balanceOf[caller] >= balanceOf[caller]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require call.value + etherContributed[caller] >= etherContributed[caller]\n                                      etherContributed[caller] += call.value\n                                  else:\n                                      require 774 * call.value\n                                      require 85140 * call.value / 774 * call.value == 110\n                                      require 85140 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, caller\n                                      if not 85140 * call.value / 100:\n                                          require call.value + etherContributed[caller] >= etherContributed[caller]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                                      balanceOf[stor13] -= 85140 * call.value / 100\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\ndef proxyPurchase(address _addr) payable: \n  require not stor0\n  require __abortFuse\n  if block.timestamp <= END_DATE:\n      require not icoSuccessful\n      require block.timestamp <= END_DATE\n      require call.value > 0\n      if stor8[address(_addr)]:\n          require 258 * call.value / 258 == call.value\n          if 258 * call.value / 10^18 >= 2 * 10^6:\n              if not call.value:\n                  if not 774 * call.value:\n                      require 104490 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n                      if not 104490 * call.value / 100:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                          return 1\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                      balanceOf[address(_addr)] = (104490 * call.value / 100) + balanceOf[_addr]\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      etherRaised += call.value\n                      require etherRaised <= 77519379844961240310077\n                  else:\n                      require 774 * call.value\n                      require 104490 * call.value / 774 * call.value == 135\n                      require 104490 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n                      if not 104490 * call.value / 100:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                          return 1\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                      balanceOf[address(_addr)] = (104490 * call.value / 100) + balanceOf[_addr]\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      etherRaised += call.value\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if call.value:\n                  if 774 * call.value / call.value == 774:\n                      if not 774 * call.value:\n                          require 104490 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n                          if not 104490 * call.value / 100:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                              require etherRaised <= 77519379844961240310077\n                              return 1\n                          require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 104490 * call.value / 100\n                          require (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                          balanceOf[address(_addr)] = (104490 * call.value / 100) + balanceOf[_addr]\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if 774 * call.value:\n                          if 104490 * call.value / 774 * call.value == 135:\n                              require 104490 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n                              if not 104490 * call.value / 100:\n                                  require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                  etherContributed[address(_addr)] += call.value\n                                  require call.value + etherRaised >= etherRaised\n                                  etherRaised += call.value\n                                  require etherRaised <= 77519379844961240310077\n                                  return 1\n                              if balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]:\n                                  balanceOf[stor13] -= 104490 * call.value / 100\n                                  if (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]:\n                                      balanceOf[address(_addr)] = (104490 * call.value / 100) + balanceOf[_addr]\n                                      if call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]:\n                                          etherContributed[address(_addr)] += call.value\n                                          if call.value + etherRaised >= etherRaised:\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          else:\n              if 258 * call.value / 10^18 >= 500000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 100620 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n                          if not 100620 * call.value / 100:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                              require etherRaised <= 77519379844961240310077\n                              return 1\n                          require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 100620 * call.value / 100\n                          require (100620 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                          balanceOf[address(_addr)] = (100620 * call.value / 100) + balanceOf[_addr]\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 774 * call.value\n                      require 100620 * call.value / 774 * call.value == 130\n                      require 100620 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n                      if not 100620 * call.value / 100:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                          return 1\n                      require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 100620 * call.value / 100\n                      require (100620 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                      balanceOf[address(_addr)] = (100620 * call.value / 100) + balanceOf[_addr]\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require call.value\n                  require 774 * call.value / call.value == 774\n                  if not 774 * call.value:\n                      require 100620 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n                      if not 100620 * call.value / 100:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                          return 1\n                      require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 100620 * call.value / 100\n                      require (100620 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                      balanceOf[address(_addr)] = (100620 * call.value / 100) + balanceOf[_addr]\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require 774 * call.value\n                  require 100620 * call.value / 774 * call.value == 130\n                  require 100620 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n                  if not 100620 * call.value / 100:\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      etherRaised += call.value\n                      require etherRaised <= 77519379844961240310077\n                  else:\n                      require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 100620 * call.value / 100\n                      require (100620 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                      balanceOf[address(_addr)] = (100620 * call.value / 100) + balanceOf[_addr]\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if 258 * call.value / 10^18 >= 100000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                          if not 92880 * call.value / 100:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                              require etherRaised <= 77519379844961240310077\n                              return 1\n                          require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 92880 * call.value / 100\n                          require (92880 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                          balanceOf[address(_addr)] = (92880 * call.value / 100) + balanceOf[_addr]\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 774 * call.value\n                      require 92880 * call.value / 774 * call.value == 120\n                      require 92880 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                      if not 92880 * call.value / 100:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                      else:\n                          require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 92880 * call.value / 100\n                          require (92880 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                          balanceOf[address(_addr)] = (92880 * call.value / 100) + balanceOf[_addr]\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                  else:\n                      require call.value\n                      require 774 * call.value / call.value == 774\n                      if not 774 * call.value:\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                          if not 92880 * call.value / 100:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                              require etherRaised <= 77519379844961240310077\n                          else:\n                              require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 92880 * call.value / 100\n                              require (92880 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (92880 * call.value / 100) + balanceOf[_addr]\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                      else:\n                          require 774 * call.value\n                          require 92880 * call.value / 774 * call.value == 120\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                          if 92880 * call.value / 100:\n                              require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 92880 * call.value / 100\n                              require (92880 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (92880 * call.value / 100) + balanceOf[_addr]\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if 258 * call.value / 10^18 >= 25000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 89010 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n                          if not 89010 * call.value / 100:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                              require etherRaised <= 77519379844961240310077\n                          else:\n                              require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 89010 * call.value / 100\n                              require (89010 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (89010 * call.value / 100) + balanceOf[_addr]\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                      else:\n                          require 774 * call.value\n                          require 89010 * call.value / 774 * call.value == 115\n                          require 89010 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n                          if 89010 * call.value / 100:\n                              require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 89010 * call.value / 100\n                              require (89010 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (89010 * call.value / 100) + balanceOf[_addr]\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                  else:\n                      require call.value\n                      require 774 * call.value / call.value == 774\n                      if not 774 * call.value:\n                          require 89010 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n                          if 89010 * call.value / 100:\n                              require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 89010 * call.value / 100\n                              require (89010 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (89010 * call.value / 100) + balanceOf[_addr]\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                      else:\n                          require 774 * call.value\n                          require 89010 * call.value / 774 * call.value == 115\n                          require 89010 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n                          if 89010 * call.value / 100:\n                              require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 89010 * call.value / 100\n                              require (89010 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (89010 * call.value / 100) + balanceOf[_addr]\n                          else:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if 258 * call.value / 10^18 >= 10000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 85140 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, _addr\n                          if 85140 * call.value / 100:\n                              require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 85140 * call.value / 100\n                              require (85140 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (85140 * call.value / 100) + balanceOf[_addr]\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                      else:\n                          require 774 * call.value\n                          require 85140 * call.value / 774 * call.value == 110\n                          require 85140 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, _addr\n                          if 85140 * call.value / 100:\n                              require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 85140 * call.value / 100\n                              require (85140 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (85140 * call.value / 100) + balanceOf[_addr]\n                          else:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                  else:\n                      require call.value\n                      require 774 * call.value / call.value == 774\n                      if not 774 * call.value:\n                          require 85140 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, _addr\n                          if 85140 * call.value / 100:\n                              require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 85140 * call.value / 100\n                              require (85140 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (85140 * call.value / 100) + balanceOf[_addr]\n                          else:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                      else:\n                          require 774 * call.value\n                          require 85140 * call.value / 774 * call.value == 110\n                          require 85140 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, _addr\n                          if not 85140 * call.value / 100:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 85140 * call.value / 100\n                          require (85140 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                          balanceOf[address(_addr)] = (85140 * call.value / 100) + balanceOf[_addr]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if 258 * call.value / 10^18 >= 5000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 81270 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, _addr\n                          if 81270 * call.value / 100:\n                              require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 81270 * call.value / 100\n                              require (81270 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (81270 * call.value / 100) + balanceOf[_addr]\n                          else:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                      else:\n                          require 774 * call.value\n                          require 81270 * call.value / 774 * call.value == 105\n                          require 81270 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, _addr\n                          if not 81270 * call.value / 100:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 81270 * call.value / 100\n                          require (81270 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                          balanceOf[address(_addr)] = (81270 * call.value / 100) + balanceOf[_addr]\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if call.value:\n                      if 774 * call.value / call.value == 774:\n                          if not 774 * call.value:\n                              require 81270 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, _addr\n                              if not 81270 * call.value / 100:\n                                  require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                  etherContributed[address(_addr)] += call.value\n                                  require call.value + etherRaised >= etherRaised\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 81270 * call.value / 100\n                              require (81270 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (81270 * call.value / 100) + balanceOf[_addr]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if 774 * call.value:\n                              if 81270 * call.value / 774 * call.value == 105:\n                                  require 81270 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, _addr\n                                  if not 81270 * call.value / 100:\n                                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                      etherContributed[address(_addr)] += call.value\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]:\n                                      balanceOf[stor13] -= 81270 * call.value / 100\n                                      if (81270 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              else:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 77400 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, _addr\n                          if 77400 * call.value / 100:\n                              require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 77400 * call.value / 100\n                              require (77400 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (77400 * call.value / 100) + balanceOf[_addr]\n                          else:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                      else:\n                          require 774 * call.value\n                          require 77400 * call.value / 774 * call.value == 100\n                          require 77400 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, _addr\n                          if not 77400 * call.value / 100:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 77400 * call.value / 100\n                          require (77400 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                          balanceOf[address(_addr)] = (77400 * call.value / 100) + balanceOf[_addr]\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if call.value:\n                      if 774 * call.value / call.value == 774:\n                          if not 774 * call.value:\n                              require 77400 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, _addr\n                              if not 77400 * call.value / 100:\n                                  require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                  etherContributed[address(_addr)] += call.value\n                                  require call.value + etherRaised >= etherRaised\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 77400 * call.value / 100\n                              require (77400 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (77400 * call.value / 100) + balanceOf[_addr]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          if 774 * call.value:\n                              if 77400 * call.value / 774 * call.value == 100:\n                                  require 77400 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, _addr\n                                  if not 77400 * call.value / 100:\n                                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                      etherContributed[address(_addr)] += call.value\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  if balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]:\n                                      balanceOf[stor13] -= 77400 * call.value / 100\n                                      if (77400 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]:\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          revert\n      require block.timestamp >= 417417 * 3600\n      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n      require call.value + etherContributed[address(_addr)] <= 38759689922480620155\n      require 258 * call.value / 258 == call.value\n      if 258 * call.value / 10^18 >= 2 * 10^6:\n          if not call.value:\n              if not 774 * call.value:\n                  require 104490 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n                  if 104490 * call.value / 100:\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                      balanceOf[address(_addr)] = (104490 * call.value / 100) + balanceOf[_addr]\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                  etherContributed[address(_addr)] += call.value\n                  require call.value + etherRaised >= etherRaised\n                  etherRaised += call.value\n                  require etherRaised <= 77519379844961240310077\n              else:\n                  require 774 * call.value\n                  require 104490 * call.value / 774 * call.value == 135\n                  require 104490 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n                  if 104490 * call.value / 100:\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                      balanceOf[address(_addr)] = (104490 * call.value / 100) + balanceOf[_addr]\n                  else:\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      etherRaised += call.value\n          else:\n              require call.value\n              require 774 * call.value / call.value == 774\n              if not 774 * call.value:\n                  require 104490 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n                  if 104490 * call.value / 100:\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                      balanceOf[address(_addr)] = (104490 * call.value / 100) + balanceOf[_addr]\n                  else:\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      etherRaised += call.value\n              else:\n                  require 774 * call.value\n                  require 104490 * call.value / 774 * call.value == 135\n                  require 104490 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n                  if not 104490 * call.value / 100:\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                  balanceOf[stor13] -= 104490 * call.value / 100\n                  require (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                  balanceOf[address(_addr)] = (104490 * call.value / 100) + balanceOf[_addr]\n      else:\n          if 258 * call.value / 10^18 >= 500000:\n              if not call.value:\n                  if not 774 * call.value:\n                      require 100620 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n                      if 100620 * call.value / 100:\n                          require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 100620 * call.value / 100\n                          require (100620 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                          balanceOf[address(_addr)] = (100620 * call.value / 100) + balanceOf[_addr]\n                      else:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                  else:\n                      require 774 * call.value\n                      require 100620 * call.value / 774 * call.value == 130\n                      require 100620 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n                      if not 100620 * call.value / 100:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 100620 * call.value / 100\n                      require (100620 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                      balanceOf[address(_addr)] = (100620 * call.value / 100) + balanceOf[_addr]\n              else:\n                  require call.value\n                  require 774 * call.value / call.value == 774\n                  if not 774 * call.value:\n                      require 100620 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n                      if not 100620 * call.value / 100:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 100620 * call.value / 100\n                      require (100620 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                      balanceOf[address(_addr)] = (100620 * call.value / 100) + balanceOf[_addr]\n                  else:\n                      require 774 * call.value\n                      require 100620 * call.value / 774 * call.value == 130\n                      require 100620 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n                      if 100620 * call.value / 100:\n                          require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 100620 * call.value / 100\n                          require (100620 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n          else:\n              if 258 * call.value / 10^18 >= 100000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                          if not 92880 * call.value / 100:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 92880 * call.value / 100\n                          require (92880 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                          balanceOf[address(_addr)] = (92880 * call.value / 100) + balanceOf[_addr]\n                      else:\n                          require 774 * call.value\n                          require 92880 * call.value / 774 * call.value == 120\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                          if 92880 * call.value / 100:\n                              require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 92880 * call.value / 100\n                              require (92880 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                  else:\n                      require call.value\n                      require 774 * call.value / call.value == 774\n                      if not 774 * call.value:\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                          if 92880 * call.value / 100:\n                              require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 92880 * call.value / 100\n                              require (92880 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                      else:\n                          require 774 * call.value\n                          require 92880 * call.value / 774 * call.value == 120\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                          if not 92880 * call.value / 100:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 92880 * call.value / 100\n              else:\n                  if 258 * call.value / 10^18 >= 25000:\n                      if not call.value:\n                          if not 774 * call.value:\n                              require 89010 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n                              if 89010 * call.value / 100:\n                                  require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                                  balanceOf[stor13] -= 89010 * call.value / 100\n                                  require (89010 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                          else:\n                              require 774 * call.value\n                              require 89010 * call.value / 774 * call.value == 115\n                              require 89010 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n                              if not 89010 * call.value / 100:\n                                  require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 89010 * call.value / 100\n                      else:\n                          require call.value\n                          require 774 * call.value / call.value == 774\n                          if not 774 * call.value:\n                              require 89010 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n                              if not 89010 * call.value / 100:\n                                  require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 89010 * call.value / 100\n                          else:\n                              require 774 * call.value\n                              require 89010 * call.value / 774 * call.value == 115\n                              require 89010 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n                              if 89010 * call.value / 100:\n                                  require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if 258 * call.value / 10^18 >= 10000:\n                          if not call.value:\n                              if not 774 * call.value:\n                                  require 85140 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, _addr\n                                  if not 85140 * call.value / 100:\n                                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                                  balanceOf[stor13] -= 85140 * call.value / 100\n                              else:\n                                  require 774 * call.value\n                                  require 85140 * call.value / 774 * call.value == 110\n                                  require 85140 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, _addr\n                                  if 85140 * call.value / 100:\n                                      require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              require call.value\n                              require 774 * call.value / call.value == 774\n                              if not 774 * call.value:\n                                  require 85140 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, _addr\n                                  if 85140 * call.value / 100:\n                                      require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  require 774 * call.value\n                                  require 85140 * call.value / 774 * call.value == 110\n                                  require 85140 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, _addr\n                                  if 85140 * call.value / 100:\n                      else:\n                          if 258 * call.value / 10^18 >= 5000:\n                              if not call.value:\n                                  if not 774 * call.value:\n                                      require 81270 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, _addr\n                                      if 81270 * call.value / 100:\n                                          require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      require 774 * call.value\n                                      require 81270 * call.value / 774 * call.value == 105\n                                      require 81270 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, _addr\n                                      if 81270 * call.value / 100:\n                              else:\n                                  require call.value\n                                  require 774 * call.value / call.value == 774\n                                  if not 774 * call.value:\n                                      require 81270 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, _addr\n                                      if 81270 * call.value / 100:\n                                  else:\n                                      require 774 * call.value\n                                      require 81270 * call.value / 774 * call.value == 105\n                                      require 81270 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, _addr\n                          else:\n                              if not call.value:\n                                  if not 774 * call.value:\n                                      require 77400 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, _addr\n                                      if 77400 * call.value / 100:\n                                          require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  else:\n                                      require 774 * call.value\n                                      require 77400 * call.value / 774 * call.value == 100\n                                      require 77400 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, _addr\n                                      if 77400 * call.value / 100:\n                              else:\n                                  require call.value\n                                  require 774 * call.value / call.value == 774\n                                  if not 774 * call.value:\n                                      require 77400 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, _addr\n                                      if 77400 * call.value / 100:\n                                  else:\n                                      require 774 * call.value\n                                      require 77400 * call.value / 774 * call.value == 100\n                                      require 77400 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, _addr\n  else:\n      require etherRaised >= 7751937984496124031007\n      require not icoSuccessful\n      require block.timestamp <= END_DATE\n      require call.value > 0\n      if not stor8[address(_addr)]:\n          require block.timestamp >= 417417 * 3600\n          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n          require call.value + etherContributed[address(_addr)] <= 38759689922480620155\n          require 258 * call.value / 258 == call.value\n          if 258 * call.value / 10^18 >= 2 * 10^6:\n              if not call.value:\n                  if not 774 * call.value:\n                      require 104490 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n                      if 104490 * call.value / 100:\n                          require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 104490 * call.value / 100\n                          require (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                          balanceOf[address(_addr)] = (104490 * call.value / 100) + balanceOf[_addr]\n                      else:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                  else:\n                      require 774 * call.value\n                      require 104490 * call.value / 774 * call.value == 135\n                      require 104490 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n                      if not 104490 * call.value / 100:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                      balanceOf[address(_addr)] = (104490 * call.value / 100) + balanceOf[_addr]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require call.value\n              require 774 * call.value / call.value == 774\n              if not 774 * call.value:\n                  require 104490 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n                  if not 104490 * call.value / 100:\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                  balanceOf[stor13] -= 104490 * call.value / 100\n                  require (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                  balanceOf[address(_addr)] = (104490 * call.value / 100) + balanceOf[_addr]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require 774 * call.value\n              require 104490 * call.value / 774 * call.value == 135\n              require 104490 * call.value / 100 <= balanceOf[stor13]\n              log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n              if not 104490 * call.value / 100:\n                  require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                  etherContributed[address(_addr)] += call.value\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n              balanceOf[stor13] -= 104490 * call.value / 100\n              require (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n          if 258 * call.value / 10^18 >= 500000:\n              if not call.value:\n                  if not 774 * call.value:\n                      require 100620 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n                      if not 100620 * call.value / 100:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 100620 * call.value / 100\n                      require (100620 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                      balanceOf[address(_addr)] = (100620 * call.value / 100) + balanceOf[_addr]\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require 774 * call.value\n                  require 100620 * call.value / 774 * call.value == 130\n                  require 100620 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n                  if not 100620 * call.value / 100:\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                  balanceOf[stor13] -= 100620 * call.value / 100\n                  require (100620 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require call.value\n              require 774 * call.value / call.value == 774\n              if not 774 * call.value:\n                  require 100620 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n                  if not 100620 * call.value / 100:\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                  balanceOf[stor13] -= 100620 * call.value / 100\n                  require (100620 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require 774 * call.value\n              require 100620 * call.value / 774 * call.value == 130\n              require 100620 * call.value / 100 <= balanceOf[stor13]\n              log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n              if not 100620 * call.value / 100:\n                  require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n              balanceOf[stor13] -= 100620 * call.value / 100\n          else:\n              if 258 * call.value / 10^18 >= 100000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 92880 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                          if not 92880 * call.value / 100:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 92880 * call.value / 100\n                          require (92880 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require 774 * call.value\n                      require 92880 * call.value / 774 * call.value == 120\n                      require 92880 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                      if not 92880 * call.value / 100:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 92880 * call.value / 100\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require call.value\n                  require 774 * call.value / call.value == 774\n                  if not 774 * call.value:\n                      require 92880 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                      if not 92880 * call.value / 100:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 92880 * call.value / 100\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require 774 * call.value\n                  require 92880 * call.value / 774 * call.value == 120\n                  require 92880 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                  if not 92880 * call.value / 100:\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              if 258 * call.value / 10^18 < 25000:\n                  if 258 * call.value / 10^18 >= 10000:\n                      if not call.value:\n                          if not 774 * call.value:\n                              require 85140 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, _addr\n                              if not 85140 * call.value / 100:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require 774 * call.value\n                          require 85140 * call.value / 774 * call.value == 110\n                          require 85140 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, _addr\n                      else:\n                          require call.value\n                          require 774 * call.value / call.value == 774\n                          if not 774 * call.value:\n                              require 85140 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, _addr\n                          else:\n                              require 774 * call.value\n                              require 85140 * call.value / 774 * call.value == 110\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  if 258 * call.value / 10^18 >= 5000:\n                      if not call.value:\n                          if not 774 * call.value:\n                              require 81270 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, _addr\n                          else:\n                              require 774 * call.value\n                              require 81270 * call.value / 774 * call.value == 105\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if call.value:\n                          if 774 * call.value / call.value == 774:\n                              if not 774 * call.value:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if 774 * call.value:\n                                  if 81270 * call.value / 774 * call.value == 105:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  else:\n                      if not call.value:\n                          if not 774 * call.value:\n                              require 77400 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, _addr\n                          else:\n                              require 774 * call.value\n                              require 77400 * call.value / 774 * call.value == 100\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      if call.value:\n                          if 774 * call.value / call.value == 774:\n                              if not 774 * call.value:\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              if 774 * call.value:\n                                  if 77400 * call.value / 774 * call.value == 100:\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  revert\n              if not call.value:\n                  if not 774 * call.value:\n                      require 89010 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n                      if not 89010 * call.value / 100:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 89010 * call.value / 100\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require 774 * call.value\n                  require 89010 * call.value / 774 * call.value == 115\n                  require 89010 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n                  if not 89010 * call.value / 100:\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require call.value\n              require 774 * call.value / call.value == 774\n              if not 774 * call.value:\n                  require 89010 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n                  if not 89010 * call.value / 100:\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n              require 774 * call.value\n              require 89010 * call.value / 774 * call.value == 115\n              require 89010 * call.value / 100 <= balanceOf[stor13]\n              log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n      else:\n          require 258 * call.value / 258 == call.value\n          if 258 * call.value / 10^18 >= 2 * 10^6:\n              if not call.value:\n                  if not 774 * call.value:\n                      require 104490 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n                      if not 104490 * call.value / 100:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                          return 1\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                      balanceOf[address(_addr)] = (104490 * call.value / 100) + balanceOf[_addr]\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                  require 774 * call.value\n                  require 104490 * call.value / 774 * call.value == 135\n                  require 104490 * call.value / 100 <= balanceOf[stor13]\n                  log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n                  if not 104490 * call.value / 100:\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      etherRaised += call.value\n                      require etherRaised <= 77519379844961240310077\n                      return 1\n                  require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                  balanceOf[stor13] -= 104490 * call.value / 100\n                  require (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                  balanceOf[address(_addr)] = (104490 * call.value / 100) + balanceOf[_addr]\n                  require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                  etherContributed[address(_addr)] += call.value\n              else:\n                  require call.value\n                  require 774 * call.value / call.value == 774\n                  if not 774 * call.value:\n                      require 104490 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n                      if not 104490 * call.value / 100:\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                          return 1\n                      require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                      balanceOf[stor13] -= 104490 * call.value / 100\n                      require (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                      balanceOf[address(_addr)] = (104490 * call.value / 100) + balanceOf[_addr]\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                  else:\n                      require 774 * call.value\n                      require 104490 * call.value / 774 * call.value == 135\n                      require 104490 * call.value / 100 <= balanceOf[stor13]\n                      log 0xddf252ad: (104490 * call.value / 100), fundWalletAddress, _addr\n                      if 104490 * call.value / 100:\n                          require balanceOf[stor13] - (104490 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 104490 * call.value / 100\n                          require (104490 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                          balanceOf[address(_addr)] = (104490 * call.value / 100) + balanceOf[_addr]\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                      etherContributed[address(_addr)] += call.value\n                      require call.value + etherRaised >= etherRaised\n                      etherRaised += call.value\n                      require etherRaised <= 77519379844961240310077\n          else:\n              if 258 * call.value / 10^18 >= 500000:\n                  if not call.value:\n                      if not 774 * call.value:\n                          require 100620 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n                          if not 100620 * call.value / 100:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                              require etherRaised <= 77519379844961240310077\n                              return 1\n                          require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                          balanceOf[stor13] -= 100620 * call.value / 100\n                          require (100620 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                          balanceOf[address(_addr)] = (100620 * call.value / 100) + balanceOf[_addr]\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                      else:\n                          require 774 * call.value\n                          require 100620 * call.value / 774 * call.value == 130\n                          require 100620 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n                          if 100620 * call.value / 100:\n                              require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 100620 * call.value / 100\n                              require (100620 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (100620 * call.value / 100) + balanceOf[_addr]\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                  else:\n                      require call.value\n                      require 774 * call.value / call.value == 774\n                      if not 774 * call.value:\n                          require 100620 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n                          if 100620 * call.value / 100:\n                              require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 100620 * call.value / 100\n                              require (100620 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (100620 * call.value / 100) + balanceOf[_addr]\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                          etherContributed[address(_addr)] += call.value\n                          require call.value + etherRaised >= etherRaised\n                          etherRaised += call.value\n                          require etherRaised <= 77519379844961240310077\n                      else:\n                          require 774 * call.value\n                          require 100620 * call.value / 774 * call.value == 130\n                          require 100620 * call.value / 100 <= balanceOf[stor13]\n                          log 0xddf252ad: (100620 * call.value / 100), fundWalletAddress, _addr\n                          if 100620 * call.value / 100:\n                              require balanceOf[stor13] - (100620 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 100620 * call.value / 100\n                              require (100620 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (100620 * call.value / 100) + balanceOf[_addr]\n                          else:\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n              else:\n                  if 258 * call.value / 10^18 >= 100000:\n                      if not call.value:\n                          if not 774 * call.value:\n                              require 92880 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                              if 92880 * call.value / 100:\n                                  require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                                  balanceOf[stor13] -= 92880 * call.value / 100\n                                  require (92880 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                                  balanceOf[address(_addr)] = (92880 * call.value / 100) + balanceOf[_addr]\n                                  require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                              etherContributed[address(_addr)] += call.value\n                              require call.value + etherRaised >= etherRaised\n                              etherRaised += call.value\n                              require etherRaised <= 77519379844961240310077\n                          else:\n                              require 774 * call.value\n                              require 92880 * call.value / 774 * call.value == 120\n                              require 92880 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                              if 92880 * call.value / 100:\n                                  require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                                  balanceOf[stor13] -= 92880 * call.value / 100\n                                  require (92880 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                                  balanceOf[address(_addr)] = (92880 * call.value / 100) + balanceOf[_addr]\n                              else:\n                                  require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                  etherContributed[address(_addr)] += call.value\n                                  require call.value + etherRaised >= etherRaised\n                                  etherRaised += call.value\n                      else:\n                          require call.value\n                          require 774 * call.value / call.value == 774\n                          if not 774 * call.value:\n                              require 92880 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                              if 92880 * call.value / 100:\n                                  require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                                  balanceOf[stor13] -= 92880 * call.value / 100\n                                  require (92880 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                                  balanceOf[address(_addr)] = (92880 * call.value / 100) + balanceOf[_addr]\n                              else:\n                                  require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                  etherContributed[address(_addr)] += call.value\n                                  require call.value + etherRaised >= etherRaised\n                                  etherRaised += call.value\n                          else:\n                              require 774 * call.value\n                              require 92880 * call.value / 774 * call.value == 120\n                              require 92880 * call.value / 100 <= balanceOf[stor13]\n                              log 0xddf252ad: (92880 * call.value / 100), fundWalletAddress, _addr\n                              if not 92880 * call.value / 100:\n                                  require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                  etherContributed[address(_addr)] += call.value\n                                  require call.value + etherRaised >= etherRaised\n                                  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              require balanceOf[stor13] - (92880 * call.value / 100) <= balanceOf[stor13]\n                              balanceOf[stor13] -= 92880 * call.value / 100\n                              require (92880 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                              balanceOf[address(_addr)] = (92880 * call.value / 100) + balanceOf[_addr]\n                  else:\n                      if 258 * call.value / 10^18 >= 25000:\n                          if not call.value:\n                              if not 774 * call.value:\n                                  require 89010 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n                                  if 89010 * call.value / 100:\n                                      require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                                      balanceOf[stor13] -= 89010 * call.value / 100\n                                      require (89010 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                                      balanceOf[address(_addr)] = (89010 * call.value / 100) + balanceOf[_addr]\n                                  else:\n                                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                      etherContributed[address(_addr)] += call.value\n                                      require call.value + etherRaised >= etherRaised\n                                      etherRaised += call.value\n                              else:\n                                  require 774 * call.value\n                                  require 89010 * call.value / 774 * call.value == 115\n                                  require 89010 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n                                  if not 89010 * call.value / 100:\n                                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                      etherContributed[address(_addr)] += call.value\n                                      require call.value + etherRaised >= etherRaised\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                                  balanceOf[stor13] -= 89010 * call.value / 100\n                                  require (89010 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                                  balanceOf[address(_addr)] = (89010 * call.value / 100) + balanceOf[_addr]\n                          else:\n                              require call.value\n                              require 774 * call.value / call.value == 774\n                              if not 774 * call.value:\n                                  require 89010 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n                                  if not 89010 * call.value / 100:\n                                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                      etherContributed[address(_addr)] += call.value\n                                      require call.value + etherRaised >= etherRaised\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                                  balanceOf[stor13] -= 89010 * call.value / 100\n                                  require (89010 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                                  balanceOf[address(_addr)] = (89010 * call.value / 100) + balanceOf[_addr]\n                              else:\n                                  require 774 * call.value\n                                  require 89010 * call.value / 774 * call.value == 115\n                                  require 89010 * call.value / 100 <= balanceOf[stor13]\n                                  log 0xddf252ad: (89010 * call.value / 100), fundWalletAddress, _addr\n                                  if 89010 * call.value / 100:\n                                      require balanceOf[stor13] - (89010 * call.value / 100) <= balanceOf[stor13]\n                                      balanceOf[stor13] -= 89010 * call.value / 100\n                                      require (89010 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                                      ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                  require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                  etherContributed[address(_addr)] += call.value\n                      else:\n                          if 258 * call.value / 10^18 < 10000:\n                              if 258 * call.value / 10^18 >= 5000:\n                                  if not call.value:\n                                      if not 774 * call.value:\n                                          require 81270 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, _addr\n                                          if 81270 * call.value / 100:\n                                              require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                                              balanceOf[stor13] -= 81270 * call.value / 100\n                                              require (81270 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                          etherContributed[address(_addr)] += call.value\n                                      else:\n                                          require 774 * call.value\n                                          require 81270 * call.value / 774 * call.value == 105\n                                          require 81270 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, _addr\n                                          if not 81270 * call.value / 100:\n                                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                                          balanceOf[stor13] -= 81270 * call.value / 100\n                                  else:\n                                      require call.value\n                                      require 774 * call.value / call.value == 774\n                                      if not 774 * call.value:\n                                          require 81270 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, _addr\n                                          if not 81270 * call.value / 100:\n                                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                                          balanceOf[stor13] -= 81270 * call.value / 100\n                                      else:\n                                          require 774 * call.value\n                                          require 81270 * call.value / 774 * call.value == 105\n                                          require 81270 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (81270 * call.value / 100), fundWalletAddress, _addr\n                                          if 81270 * call.value / 100:\n                                              require balanceOf[stor13] - (81270 * call.value / 100) <= balanceOf[stor13]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                              else:\n                                  if not call.value:\n                                      if not 774 * call.value:\n                                          require 77400 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, _addr\n                                          if 77400 * call.value / 100:\n                                              require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                                              balanceOf[stor13] -= 77400 * call.value / 100\n                                              require (77400 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                          etherContributed[address(_addr)] += call.value\n                                      else:\n                                          require 774 * call.value\n                                          require 77400 * call.value / 774 * call.value == 100\n                                          require 77400 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, _addr\n                                          if not 77400 * call.value / 100:\n                                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                                          balanceOf[stor13] -= 77400 * call.value / 100\n                                  else:\n                                      require call.value\n                                      require 774 * call.value / call.value == 774\n                                      if not 774 * call.value:\n                                          require 77400 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, _addr\n                                          if not 77400 * call.value / 100:\n                                              require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                          require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                                          balanceOf[stor13] -= 77400 * call.value / 100\n                                      else:\n                                          require 774 * call.value\n                                          require 77400 * call.value / 774 * call.value == 100\n                                          require 77400 * call.value / 100 <= balanceOf[stor13]\n                                          log 0xddf252ad: (77400 * call.value / 100), fundWalletAddress, _addr\n                                          if 77400 * call.value / 100:\n                                              require balanceOf[stor13] - (77400 * call.value / 100) <= balanceOf[stor13]\n                                              ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                          else:\n                              if not call.value:\n                                  if not 774 * call.value:\n                                      require 85140 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, _addr\n                                      if not 85140 * call.value / 100:\n                                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                          etherContributed[address(_addr)] += call.value\n                                          require call.value + etherRaised >= etherRaised\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                                      balanceOf[stor13] -= 85140 * call.value / 100\n                                      require (85140 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                                      balanceOf[address(_addr)] = (85140 * call.value / 100) + balanceOf[_addr]\n                                  else:\n                                      require 774 * call.value\n                                      require 85140 * call.value / 774 * call.value == 110\n                                      require 85140 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, _addr\n                                      if 85140 * call.value / 100:\n                                          require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                                          balanceOf[stor13] -= 85140 * call.value / 100\n                                          require (85140 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                      etherContributed[address(_addr)] += call.value\n                              else:\n                                  require call.value\n                                  require 774 * call.value / call.value == 774\n                                  if not 774 * call.value:\n                                      require 85140 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, _addr\n                                      if 85140 * call.value / 100:\n                                          require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                                          balanceOf[stor13] -= 85140 * call.value / 100\n                                          require (85140 * call.value / 100) + balanceOf[_addr] >= balanceOf[_addr]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                      etherContributed[address(_addr)] += call.value\n                                  else:\n                                      require 774 * call.value\n                                      require 85140 * call.value / 774 * call.value == 110\n                                      require 85140 * call.value / 100 <= balanceOf[stor13]\n                                      log 0xddf252ad: (85140 * call.value / 100), fundWalletAddress, _addr\n                                      if not 85140 * call.value / 100:\n                                          require call.value + etherContributed[address(_addr)] >= etherContributed[address(_addr)]\n                                          ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n                                      require balanceOf[stor13] - (85140 * call.value / 100) <= balanceOf[stor13]\n                                      balanceOf[stor13] -= 85140 * call.value / 100\n  ...  # Decompilation aborted, sorry: (\"decompilation didn't finish\",)\n\n",
	"language": "Solidity",
	"status": "This model's maximum context length is 32768 tokens. However, your messages resulted in 49174 tokens. Please reduce the length of the messages."
}