{
	"address": "0x42f1935bae7a16eac35a9f05e485ecf42a111e00",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is a Solidity implementation of the given decompiled code:\n\n```solidity\npragma solidity ^0.8.0;\n\ncontract MyContract {\n    uint256 private _endTime; \n    uint256 private _addTime; \n    address private _owner; \n    address private _latestBidder; \n    address private _latestWinner;\n\n    event Bid(address indexed bidder, uint256 endTime, uint256 addTime, uint256 balance);\n\n    function latestBidder() public view returns (address) { \n        return _latestBidder;\n    }\n\n    function addTime() public view returns (uint256) { \n        return _addTime;\n    }\n\n    function owner() public view returns (address) { \n        return _owner;\n    }\n\n    function latestWinner() public view returns (address) { \n        return _latestWinner;\n    }\n\n    function bid() public payable { \n        require(msg.value == 0x11c37937e08000);\n        if (_endTime == 0) {\n            _endTime = block.timestamp + _addTime;\n        }\n        bool v0 = _endTime > block.timestamp;\n        if (v0) {\n            _addTime -= 10;\n            _endTime = block.timestamp + _addTime;\n            _latestBidder = msg.sender;\n            emit Bid(_latestBidder, _endTime, _addTime, address(this).balance);\n        }\n        if (_addTime == 0 || _endTime <= block.timestamp) {\n            _latestWinner = _latestBidder;\n            _addTime = 7200;\n            _endTime = block.timestamp + _addTime;\n            _latestBidder = msg.sender;\n            emit Bid(_latestBidder, _endTime, _addTime, address(this).balance / 20 * 17 + 0x11c37937e08000);\n            (bool v4,) = _owner.call{value: address(this).balance / 20, gas: 2300}(\"\");\n            require(v4);\n            (bool v5,) = _latestWinner.call{value: (address(this).balance - 0x11c37937e08000) / 10 << 3, gas: 2300}(\"\");\n            require(v5);\n        }\n    }\n\n    function endTime() public view returns (uint256) { \n        return _endTime;\n    }\n\n    fallback() external payable {}\n}\n```\n\nPlease note that the `__function_selector__` function was not implemented in this version because it is not necessary in Solidity. Function selection is handled automatically by the language based on the function signature.",
				"role": "assistant"
			}
		}
	],
	"created": 1701461989,
	"id": "chatcmpl-8R4HF9kfOT9BhWt2E3ANqSSAwNdig",
	"input_format": "DecompiledCode",
	"ir": "// Decompiled at www.contract-library.com\n// 2021.08.24 12:52 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _endTime; // STORAGE[0x3]\nuint256 _addTime; // STORAGE[0x4]\naddress _owner; // STORAGE[0x0] bytes 0 to 19\naddress _latestBidder; // STORAGE[0x1] bytes 0 to 19\naddress _latestWinner; // STORAGE[0x2] bytes 0 to 19\n\n// Events\nBid(address, uint256, uint256, uint256);\n\nfunction latestBidder() public nonPayable { \n    return _latestBidder;\n}\n\nfunction addTime() public nonPayable { \n    return _addTime;\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction fallback() public payable { \n}\n\nfunction latestWinner() public nonPayable { \n    return _latestWinner;\n}\n\nfunction bid() public payable { \n    require(msg.value == 0x11c37937e08000);\n    if (_endTime == 0) {\n        _endTime = block.timestamp + _addTime;\n    }\n    v0 = v1 = _endTime != 0;\n    if (v1) {\n        v0 = _endTime > block.timestamp;\n    }\n    if (v0) {\n        _addTime = _addTime - 10;\n        _endTime = block.timestamp + _addTime;\n        _latestBidder = msg.sender;\n        emit Bid(_latestBidder, _endTime, _addTime, (address(this)).balance);\n    }\n    v2 = v3 = _addTime == 0;\n    if (_addTime != 0) {\n        v2 = _endTime <= block.timestamp;\n    }\n    if (v2) {\n        _latestWinner = _latestBidder;\n        _addTime = 7200;\n        _endTime = block.timestamp + _addTime;\n        _latestBidder = msg.sender;\n        emit Bid(_latestBidder, _endTime, _addTime, (address(this)).balance / 20 * 17 + 0x11c37937e08000);\n        v4 = _owner.call().value((address(this)).balance / 20).gas(!((address(this)).balance / 20) * 2300);\n        require(v4);\n        v5 = _latestWinner.call().value(((address(this)).balance - 0x11c37937e08000) / 10 << 3).gas(!(((address(this)).balance - 0x11c37937e08000) / 10 << 3) * 2300);\n        require(v5);\n    }\n}\n\nfunction endTime() public nonPayable { \n    return _endTime;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length >= 4) {\n        if (0x6ef53e0 == function_selector) {\n            latestWinner();\n        } else if (0x1998aeef == function_selector) {\n            bid();\n        } else if (0x3197cbb6 == function_selector) {\n            endTime();\n        } else if (0x67a884e5 == function_selector) {\n            latestBidder();\n        } else if (0x8941db65 == function_selector) {\n            addTime();\n        } else if (0x8da5cb5b == function_selector) {\n            owner();\n        }\n    }\n    fallback();\n}\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.24 12:52 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _endTime; // STORAGE[0x3]\nuint256 _addTime; // STORAGE[0x4]\naddress _owner; // STORAGE[0x0] bytes 0 to 19\naddress _latestBidder; // STORAGE[0x1] bytes 0 to 19\naddress _latestWinner; // STORAGE[0x2] bytes 0 to 19\n\n// Events\nBid(address, uint256, uint256, uint256);\n\nfunction latestBidder() public nonPayable { \n    return _latestBidder;\n}\n\nfunction addTime() public nonPayable { \n    return _addTime;\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction fallback() public payable { \n}\n\nfunction latestWinner() public nonPayable { \n    return _latestWinner;\n}\n\nfunction bid() public payable { \n    require(msg.value == 0x11c37937e08000);\n    if (_endTime == 0) {\n        _endTime = block.timestamp + _addTime;\n    }\n    v0 = v1 = _endTime != 0;\n    if (v1) {\n        v0 = _endTime > block.timestamp;\n    }\n    if (v0) {\n        _addTime = _addTime - 10;\n        _endTime = block.timestamp + _addTime;\n        _latestBidder = msg.sender;\n        emit Bid(_latestBidder, _endTime, _addTime, (address(this)).balance);\n    }\n    v2 = v3 = _addTime == 0;\n    if (_addTime != 0) {\n        v2 = _endTime <= block.timestamp;\n    }\n    if (v2) {\n        _latestWinner = _latestBidder;\n        _addTime = 7200;\n        _endTime = block.timestamp + _addTime;\n        _latestBidder = msg.sender;\n        emit Bid(_latestBidder, _endTime, _addTime, (address(this)).balance / 20 * 17 + 0x11c37937e08000);\n        v4 = _owner.call().value((address(this)).balance / 20).gas(!((address(this)).balance / 20) * 2300);\n        require(v4);\n        v5 = _latestWinner.call().value(((address(this)).balance - 0x11c37937e08000) / 10 << 3).gas(!(((address(this)).balance - 0x11c37937e08000) / 10 << 3) * 2300);\n        require(v5);\n    }\n}\n\nfunction endTime() public nonPayable { \n    return _endTime;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length >= 4) {\n        if (0x6ef53e0 == function_selector) {\n            latestWinner();\n        } else if (0x1998aeef == function_selector) {\n            bid();\n        } else if (0x3197cbb6 == function_selector) {\n            endTime();\n        } else if (0x67a884e5 == function_selector) {\n            latestBidder();\n        } else if (0x8941db65 == function_selector) {\n            addTime();\n        } else if (0x8da5cb5b == function_selector) {\n            owner();\n        }\n    }\n    fallback();\n}\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: // Decompiled at www.contract-library.com\n// 2021.08.24 12:52 UTC\n\n// Data structures and variables inferred from the use of storage instructions\nuint256 _endTime; // STORAGE[0x3]\nuint256 _addTime; // STORAGE[0x4]\naddress _owner; // STORAGE[0x0] bytes 0 to 19\naddress _latestBidder; // STORAGE[0x1] bytes 0 to 19\naddress _latestWinner; // STORAGE[0x2] bytes 0 to 19\n\n// Events\nBid(address, uint256, uint256, uint256);\n\nfunction latestBidder() public nonPayable { \n    return _latestBidder;\n}\n\nfunction addTime() public nonPayable { \n    return _addTime;\n}\n\nfunction owner() public nonPayable { \n    return _owner;\n}\n\nfunction fallback() public payable { \n}\n\nfunction latestWinner() public nonPayable { \n    return _latestWinner;\n}\n\nfunction bid() public payable { \n    require(msg.value == 0x11c37937e08000);\n    if (_endTime == 0) {\n        _endTime = block.timestamp + _addTime;\n    }\n    v0 = v1 = _endTime != 0;\n    if (v1) {\n        v0 = _endTime > block.timestamp;\n    }\n    if (v0) {\n        _addTime = _addTime - 10;\n        _endTime = block.timestamp + _addTime;\n        _latestBidder = msg.sender;\n        emit Bid(_latestBidder, _endTime, _addTime, (address(this)).balance);\n    }\n    v2 = v3 = _addTime == 0;\n    if (_addTime != 0) {\n        v2 = _endTime <= block.timestamp;\n    }\n    if (v2) {\n        _latestWinner = _latestBidder;\n        _addTime = 7200;\n        _endTime = block.timestamp + _addTime;\n        _latestBidder = msg.sender;\n        emit Bid(_latestBidder, _endTime, _addTime, (address(this)).balance / 20 * 17 + 0x11c37937e08000);\n        v4 = _owner.call().value((address(this)).balance / 20).gas(!((address(this)).balance / 20) * 2300);\n        require(v4);\n        v5 = _latestWinner.call().value(((address(this)).balance - 0x11c37937e08000) / 10 << 3).gas(!(((address(this)).balance - 0x11c37937e08000) / 10 << 3) * 2300);\n        require(v5);\n    }\n}\n\nfunction endTime() public nonPayable { \n    return _endTime;\n}\n\n// Note: The function selector is not present in the original solidity code.\n// However, we display it for the sake of completeness.\n\nfunction __function_selector__(uint32 function_selector) public payable { \n    MEM[64] = 96;\n    if (msg.data.length >= 4) {\n        if (0x6ef53e0 == function_selector) {\n            latestWinner();\n        } else if (0x1998aeef == function_selector) {\n            bid();\n        } else if (0x3197cbb6 == function_selector) {\n            endTime();\n        } else if (0x67a884e5 == function_selector) {\n            latestBidder();\n        } else if (0x8941db65 == function_selector) {\n            addTime();\n        } else if (0x8da5cb5b == function_selector) {\n            owner();\n        }\n    }\n    fallback();\n}\n.",
	"status": "1",
	"time_cost": 26.837392568588257,
	"usage": {
		"completion_tokens": 537,
		"prompt_tokens": 838,
		"total_tokens": 1375
	}
}