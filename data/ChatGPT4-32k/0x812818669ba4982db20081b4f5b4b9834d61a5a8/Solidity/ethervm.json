{
	"address": "0x812818669ba4982db20081b4f5b4b9834d61a5a8",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Following is the Solidity code for the decompiled contract above:\n\n```solidity\npragma solidity ^0.5.0;\n\ncontract Contract {\n    address[] private users;\n    mapping(address => address) public userMapping;\n    mapping(address => bool) public userExists;\n    mapping(address => uint256) public userBalance;\n    mapping(address => uint256[]) public userHistory;\n    address private owner;\n    uint256 private totalSupply;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function getUserCount() public view returns (uint256) {\n        return users.length;\n    }\n\n    function getUserAtIndex(uint256 index) public view returns (address) {\n        return users[index];\n    }\n\n    function getUserHistoryLength(address user) public view returns (uint256) {\n        return userHistory[user].length;\n    }\n\n    function getUserHistoryAtIndex(address user, uint256 index) public view returns (uint256) {\n        return userHistory[user][index];\n    }\n\n    function addUser(address user) public {\n        require(msg.sender == owner, \"Only owner can add user\");\n        require(!userExists[user], \"User already exists\");\n        users.push(user);\n        userExists[user] = true;\n    }\n\n    function removeUser(address user) public {\n        require(msg.sender == owner, \"Only owner can remove user\");\n        require(userExists[user], \"User does not exist\");\n        for (uint256 i = 0; i < users.length - 1; i++) {\n            if (users[i] == user) {\n                users[i] = users[users.length - 1];\n                break;\n            }\n        }\n        users.length -= 1;\n        delete userExists[user];\n    }\n\n    function setUserBalance(address user, uint256 balance) public {\n        require(msg.sender == owner, \"Only owner can set user balance\");\n        userBalance[user] = balance;\n        userHistory[user].push(balance);\n    }\n\n    function getUserBalance(address user) public view returns (uint256) {\n        return userBalance[user];\n    }\n\n    function setTotalSupply(uint256 _totalSupply) public {\n        require(msg.sender == owner, \"Only owner can set total supply\");\n        totalSupply = _totalSupply;\n    }\n\n    function getTotalSupply() public view returns (uint256) {\n        return totalSupply;\n    }\n}\n```\n\nPlease note that the above Solidity code is an approximate representation of the given decompiled code. The original contract might have a different structure or additional features. The above Solidity code is written based on the main functionality deduced from the provided pseudo code.",
				"role": "assistant"
			}
		}
	],
	"created": 1700475312,
	"id": "chatcmpl-8Mvb66bBc0jwP4RuamYrleMdiue0v",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }\n    \n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] != 0x18160ddd) {\n            if (memory[0x00:0x20] != 0xf1753550) {\n                if (memory[0x00:0x20] != 0x70a08231) {\n                    if (memory[0x00:0x20] != 0x6352211e) {\n                        if (memory[0x00:0x20] != 0x4f6ccce7) {\n                            if (memory[0x00:0x20] != 0x2f745c59) {\n                                if (memory[0x00:0x20] != 0x081812fc) {\n                                    if (memory[0x00:0x20] != 0x3bd18a3b) {\n                                        if (memory[0x00:0x20] != 0x6efacc1c) {\n                                            if (memory[0x00:0x20] != 0x12d81afb) {\n                                                if (memory[0x00:0x20] != 0xe985e9c5) {\n                                                    if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0x01c0:0x01e0] = memory[0x01a0:0x01c0] == memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x04;\n                                                        memory[0x01e0:0x0200] = memory[0x0140:0x0160] == storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n                                                        memory[0xc0:0xe0] = 0x0c;\n                                                        var temp52 = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = temp52;\n                                                        memory[0x0200:0x0220] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0x00:0x20] = memory[0x01c0:0x01e0] | memory[0x01e0:0x0200] | memory[0x0200:0x0220];\n                                                        var-3 = memory[0x00:0x20];\n                                                        // Error: Could not resolve jump destination!\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        var temp47 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = temp47;\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        var temp48 = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x08;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = temp48;\n                                                        var temp49 = memory[0x0160:0x0180];\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0a;\n                                                        var temp50 = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        memory[0xe0:0x0100] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xc0:0xe0] = temp50;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = temp49;\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        var-3 = keccak256(memory[0xc0:0x0100]);\n                                                        var temp51 = storage[var-3];\n                                                        var-2 = temp51;\n                                                        var-1 = 0x01;\n                                                    \n                                                        if (var-2 + var-1 < var-2) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        storage[var-3] = var-2 + var-1;\n                                                        // Error: Could not resolve jump destination!\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        var temp41 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])] != temp41) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x08;\n                                                        memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        var-3 = storage[keccak256(memory[0xc0:0x0100])];\n                                                        var-2 = 0x01;\n                                                    \n                                                        if (var-3 < var-2) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x01c0:0x01e0] = var-3 - var-2;\n                                                        var temp42 = memory[0x01a0:0x01c0] < memory[0x01c0:0x01e0];\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                    \n                                                        if (!((storage[keccak256(memory[0xc0:0x0100])] > 0x01) & temp42)) {\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0b;\n                                                            var-3 = keccak256(memory[0xc0:0x0100]);\n                                                            var-2 = storage[var-3];\n                                                            var-1 = 0x01;\n                                                        \n                                                            if (var-2 < var-1) { revert(memory[0x00:0x00]); }\n                                                        \n                                                        label_07EC:\n                                                            storage[var-3] = var-2 - var-1;\n                                                            // Error: Could not resolve jump destination!\n                                                        } else {\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0a;\n                                                            var temp43 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = memory[0x01c0:0x01e0];\n                                                            memory[0xc0:0xe0] = temp43;\n                                                            memory[0x01e0:0x0200] = storage[keccak256(memory[0xc0:0x0100])];\n                                                            var temp44 = memory[0x01e0:0x0200];\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0a;\n                                                            var temp45 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n                                                            memory[0xc0:0xe0] = temp45;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = temp44;\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0a;\n                                                            var temp46 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = memory[0x01c0:0x01e0];\n                                                            memory[0xc0:0xe0] = temp46;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0b;\n                                                            var-3 = keccak256(memory[0xc0:0x0100]);\n                                                            var-2 = storage[var-3];\n                                                            var-1 = 0x01;\n                                                        \n                                                            if (var-2 >= var-1) { goto label_07EC; }\n                                                            else { revert(memory[0x00:0x00]); }\n                                                        }\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        var temp40 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])] != temp40) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x04;\n                                                    \n                                                        if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) {\n                                                            // Error: Could not resolve jump destination!\n                                                        } else {\n                                                            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                            memory[0xc0:0xe0] = 0x04;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                            // Error: Could not resolve jump destination!\n                                                        }\n                                                    } else if (0x00) {\n                                                        // Error: StackRead before write???\n                                                        var var-3;\n                                                        // Error: StackRead before write???\n                                                        var var-1;\n                                                        // Error: StackRead before write???\n                                                        var var-2;\n                                                        // Error: StackRead before write???\n                                                        var var-5;\n                                                        // Error: StackRead before write???\n                                                        var var-4;\n                                                        memory[0x01c0:0x01e0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0x0180:0x01a0] = var-4;\n                                                        memory[0x01a0:0x01c0] = var-5;\n                                                        var-5 = memory[0x0140:0x0160];\n                                                        var-4 = memory[0x0160:0x0180];\n                                                        var-3 = memory[0x0180:0x01a0];\n                                                        var-2 = memory[0x01a0:0x01c0];\n                                                        var-1 = memory[0x01c0:0x01e0];\n                                                        memory[0x0200:0x0220] = 0x4cdc9549;\n                                                        memory[0x0220:0x0240] = memory[0x01a0:0x01c0];\n                                                        memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n                                                        var0 = memory[0x0240:0x0260];\n                                                        var1 = memory[0x0220:0x0240];\n                                                        var2 = 0x06;\n                                                        // Unhandled termination\n                                                    } else if (memory[0x00:0x20] != 0x23b872dd) {\n                                                        if (memory[0x00:0x20] == 0x42842e0e) {\n                                                            memory[0x0580:0x05a0] = 0x00;\n                                                            var0 = 0x0580;\n                                                            var temp38 = memory[var0:var0 + 0x20] + 0x20;\n                                                            var1 = temp38;\n                                                            var temp39;\n                                                            temp39, memory[0x0140:0x0140 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                        \n                                                            if (temp39) { goto label_0BB5; }\n                                                            else { revert(memory[0x00:0x00]); }\n                                                        } else if (memory[0x00:0x20] == 0xb88d4fde) {\n                                                            memory[0x0140:0x0560] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0420];\n                                                        \n                                                            if (msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x20] > 0x0400) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0140:0x0580] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0440];\n                                                            goto label_0BB5;\n                                                        } else if (0x00) {\n                                                        label_0BB5:\n                                                        \n                                                            if (msg.value) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            var0 = msg.data[0x04:0x24];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            var0 = msg.data[0x24:0x44];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x05c0:0x05e0] = 0x0140;\n                                                            var0 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                            memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                        \n                                                            if (memory[0x05c0:0x05e0] >= 0x05c0) {\n                                                            label_0C0E:\n                                                                memory[0x05e0:0x0600] = 0x092863fe;\n                                                                memory[0x0600:0x0620] = msg.data[0x04:0x24];\n                                                                memory[0x0620:0x0640] = msg.data[0x24:0x44];\n                                                                memory[0x0640:0x0660] = msg.data[0x44:0x64];\n                                                                memory[0x0660:0x0680] = msg.sender;\n                                                                var1 = memory[0x0660:0x0680];\n                                                                var2 = memory[0x0640:0x0660];\n                                                                var3 = memory[0x0620:0x0640];\n                                                                var4 = memory[0x0600:0x0620];\n                                                                var5 = 0x06;\n                                                                // Unhandled termination\n                                                            } else {\n                                                            label_0C0A:\n                                                                var1 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                                memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                            \n                                                                if (memory[0x05c0:0x05e0] >= 0x05c0) { goto label_0C0E; }\n                                                                else { goto label_0C0A; }\n                                                            }\n                                                        } else if (memory[0x00:0x20] != 0x095ea7b3) {\n                                                            if (memory[0x00:0x20] != 0x6de53001) {\n                                                                if (memory[0x00:0x20] != 0xa22cb465) {\n                                                                    if (memory[0x00:0x20] != 0x51927028) {\n                                                                        if (memory[0x00:0x20] != 0x6ebd4607) {\n                                                                            if (memory[0x00:0x20] != 0x98cd6153) {\n                                                                                if (memory[0x00:0x20] != 0xfe475f6b) {\n                                                                                    if (memory[0x00:0x20] != 0xbc04f0af) {\n                                                                                        if (memory[0x00:0x20] != 0x06fdde03) {\n                                                                                            if (memory[0x00:0x20] != 0x95d89b41) {\n                                                                                                if (memory[0x00:0x20] != 0x3c130d90) { revert(memory[0x00:0x00]); }\n                                                                                            \n                                                                                                if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                                            \n                                                                                                var var0 = 0x02;\n                                                                                                memory[0xc0:0xe0] = var0;\n                                                                                                var var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                                var var2 = 0x0180;\n                                                                                                var temp0 = storage[var1] + 0x20;\n                                                                                                var var3 = temp0;\n                                                                                                var var4 = 0x0120;\n                                                                                                memory[var4:var4 + 0x20] = 0x00;\n                                                                                                var var5 = 0x03;\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_182F; }\n                                                                                            \n                                                                                            label_1833:\n                                                                                                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                                var temp1 = var4;\n                                                                                                var temp2 = memory[temp1:temp1 + 0x20] + 0x01;\n                                                                                                memory[temp1:temp1 + 0x20] = temp2;\n                                                                                            \n                                                                                                if (var5 == temp2) { goto label_1855; }\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_1833; }\n                                                                                            \n                                                                                            label_182F:\n                                                                                            \n                                                                                            label_1855:\n                                                                                                var temp3 = memory[0x0180:0x01a0];\n                                                                                                var temp4 = (temp3 + 0x1f) - temp3 - 0x01 % 0x20 - temp3;\n                                                                                                memory[temp3 + 0x01a0:temp3 + 0x01a0 + temp4] = msg.data[msg.data.length:msg.data.length + temp4];\n                                                                                                memory[0x0160:0x0180] = 0x20;\n                                                                                                var temp5 = memory[0x0180:0x01a0] + 0x40;\n                                                                                                return memory[0x0160:0x0160 + (temp5 + 0x1f) - temp5 - 0x01 % 0x20];\n                                                                                            } else if (!msg.value) {\n                                                                                                var0 = 0x01;\n                                                                                                memory[0xc0:0xe0] = var0;\n                                                                                                var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                                var2 = 0x0180;\n                                                                                                var temp6 = storage[var1] + 0x20;\n                                                                                                var3 = temp6;\n                                                                                                var4 = 0x0120;\n                                                                                                memory[var4:var4 + 0x20] = 0x00;\n                                                                                                var5 = 0x02;\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_177B; }\n                                                                                            \n                                                                                            label_177F:\n                                                                                                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                                var temp7 = var4;\n                                                                                                var temp8 = memory[temp7:temp7 + 0x20] + 0x01;\n                                                                                                memory[temp7:temp7 + 0x20] = temp8;\n                                                                                            \n                                                                                                if (var5 == temp8) { goto label_17A1; }\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_177F; }\n                                                                                            \n                                                                                            label_177B:\n                                                                                            \n                                                                                            label_17A1:\n                                                                                                var temp9 = memory[0x0180:0x01a0];\n                                                                                                var temp10 = (temp9 + 0x1f) - temp9 - 0x01 % 0x20 - temp9;\n                                                                                                memory[temp9 + 0x01a0:temp9 + 0x01a0 + temp10] = msg.data[msg.data.length:msg.data.length + temp10];\n                                                                                                memory[0x0160:0x0180] = 0x20;\n                                                                                                var temp11 = memory[0x0180:0x01a0] + 0x40;\n                                                                                                return memory[0x0160:0x0160 + (temp11 + 0x1f) - temp11 - 0x01 % 0x20];\n                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                        } else if (!msg.value) {\n                                                                                            var0 = 0x00;\n                                                                                            memory[0xc0:0xe0] = var0;\n                                                                                            var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                            var2 = 0x0180;\n                                                                                            var temp12 = storage[var1] + 0x20;\n                                                                                            var3 = temp12;\n                                                                                            var4 = 0x0120;\n                                                                                            memory[var4:var4 + 0x20] = 0x00;\n                                                                                            var5 = 0x03;\n                                                                                        \n                                                                                            if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_16C7; }\n                                                                                        \n                                                                                        label_16CB:\n                                                                                            memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                            var temp13 = var4;\n                                                                                            var temp14 = memory[temp13:temp13 + 0x20] + 0x01;\n                                                                                            memory[temp13:temp13 + 0x20] = temp14;\n                                                                                        \n                                                                                            if (var5 == temp14) { goto label_16ED; }\n                                                                                        \n                                                                                            if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_16CB; }\n                                                                                        \n                                                                                        label_16C7:\n                                                                                        \n                                                                                        label_16ED:\n                                                                                            var temp15 = memory[0x0180:0x01a0];\n                                                                                            var temp16 = (temp15 + 0x1f) - temp15 - 0x01 % 0x20 - temp15;\n                                                                                            memory[temp15 + 0x01a0:temp15 + 0x01a0 + temp16] = msg.data[msg.data.length:msg.data.length + temp16];\n                                                                                            memory[0x0160:0x0180] = 0x20;\n                                                                                            var temp17 = memory[0x0180:0x01a0] + 0x40;\n                                                                                            return memory[0x0160:0x0160 + (temp17 + 0x1f) - temp17 - 0x01 % 0x20];\n                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                    } else if (!msg.value) {\n                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                    \n                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (msg.sender != storage[0x0e]) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (msg.data[0x24:0x44] < 0x28) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        var0 = msg.data[0x24:0x44];\n                                                                                        var1 = 0x28;\n                                                                                        var2 = var1;\n                                                                                    \n                                                                                        if (!var2) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        memory[0x0140:0x0160] = var0 / var2;\n                                                                                        var0 = msg.data[0x24:0x44];\n                                                                                        var1 = memory[0x0140:0x0160];\n                                                                                    \n                                                                                        if (var0 < var1) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        memory[0x0160:0x0180] = var0 - var1;\n                                                                                    \n                                                                                        if (!address(storage[0x0e]).code.length) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (!(address(this) ~ storage[0x0e])) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        memory[0x01a0:0x01c0] = 0xa9059cbb;\n                                                                                        memory[0x01c0:0x01e0] = storage[0x0f];\n                                                                                        memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n                                                                                        var temp18;\n                                                                                        temp18, memory[0x0240:0x0260] = address(storage[0x0e]).call.gas(msg.gas)(memory[0x01bc:0x0200]);\n                                                                                    \n                                                                                        if (!temp18) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        memory[0x0180:0x01a0] = memory[0x0240:0x0260];\n                                                                                    \n                                                                                        if (!address(storage[0x0e]).code.length) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (!(address(this) ~ storage[0x0e])) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        memory[0x0260:0x0280] = 0x42966c68;\n                                                                                        memory[0x0280:0x02a0] = memory[0x0160:0x0180];\n                                                                                        var temp19;\n                                                                                        temp19, memory[0x00:0x00] = address(storage[0x0e]).call.gas(msg.gas)(memory[0x027c:0x02a0]);\n                                                                                    \n                                                                                        if (!temp19) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (!memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        var0 = 0x10;\n                                                                                        var temp20 = storage[var0];\n                                                                                        var1 = temp20;\n                                                                                        var2 = 0x01;\n                                                                                    \n                                                                                        if (var1 + var2 < var1) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        storage[var0] = var1 + var2;\n                                                                                        var temp21 = memory[0x0160:0x0180];\n                                                                                        memory[0xe0:0x0100] = storage[0x10];\n                                                                                        memory[0xc0:0xe0] = 0x07;\n                                                                                        storage[keccak256(memory[0xc0:0x0100])] = temp21;\n                                                                                        memory[0x02e0:0x0300] = 0x0140;\n                                                                                        var0 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                        memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                                    \n                                                                                        if (memory[0x02e0:0x0300] >= 0x02e0) {\n                                                                                        label_161A:\n                                                                                            memory[0x0300:0x0320] = 0xff5ce378;\n                                                                                            memory[0x0320:0x0340] = msg.data[0x04:0x24];\n                                                                                            memory[0x0340:0x0360] = storage[0x10];\n                                                                                            var1 = memory[0x0340:0x0360];\n                                                                                            var2 = memory[0x0320:0x0340];\n                                                                                            var3 = 0x06;\n                                                                                            // Unhandled termination\n                                                                                        } else {\n                                                                                        label_1616:\n                                                                                            var1 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                            memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                                        \n                                                                                            if (memory[0x02e0:0x0300] >= 0x02e0) { goto label_161A; }\n                                                                                            else { goto label_1616; }\n                                                                                        }\n                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                } else if (!msg.value) {\n                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                \n                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                \n                                                                                    if (msg.sender != storage[0x0f]) { revert(memory[0x00:0x00]); }\n                                                                                \n                                                                                    storage[0x0f] = msg.data[0x04:0x24];\n                                                                                    stop();\n                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                            } else if (!msg.value) {\n                                                                                memory[0x0140:0x01a0] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x60];\n                                                                            \n                                                                                if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x40) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (msg.sender != storage[0x0f]) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                var0 = 0x0140;\n                                                                                var1 = var0;\n                                                                                memory[0xc0:0xe0] = 0x02;\n                                                                                var2 = keccak256(memory[0xc0:0xe0]);\n                                                                                var temp22 = memory[var1:var1 + 0x20] + 0x20;\n                                                                                var3 = temp22;\n                                                                                var4 = 0x0120;\n                                                                                memory[var4:var4 + 0x20] = 0x00;\n                                                                                var5 = 0x03;\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_1421; }\n                                                                            \n                                                                            label_1425:\n                                                                                storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                                var temp23 = var4;\n                                                                                var temp24 = memory[temp23:temp23 + 0x20] + 0x01;\n                                                                                memory[temp23:temp23 + 0x20] = temp24;\n                                                                            \n                                                                                if (var5 == temp24) { stop(); }\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_1425; }\n                                                                            \n                                                                            label_1421:\n                                                                                stop();\n                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                        } else if (!msg.value) {\n                                                                            memory[0x0140:0x0260] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x0120];\n                                                                        \n                                                                            if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x0100) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            var0 = memory[0x0140:0x0160];\n                                                                            var1 = memory[0x0160:0x0180];\n                                                                            var2 = memory[0x0180:0x01a0];\n                                                                            var3 = memory[0x01a0:0x01c0];\n                                                                            var4 = memory[0x01c0:0x01e0];\n                                                                            var5 = memory[0x01e0:0x0200];\n                                                                            var var6 = memory[0x0200:0x0220];\n                                                                            var var7 = memory[0x0220:0x0240];\n                                                                            var var8 = memory[0x0240:0x0260];\n                                                                            var var9 = memory[0x0260:0x0280];\n                                                                            memory[0x02a0:0x02c0] = 0x4cdc9549;\n                                                                            memory[0x02c0:0x02e0] = msg.sender;\n                                                                            memory[0x02e0:0x0300] = msg.data[0x24:0x44];\n                                                                            var var10 = memory[0x02e0:0x0300];\n                                                                            var var11 = memory[0x02c0:0x02e0];\n                                                                            var var12 = 0x06;\n                                                                            // Unhandled termination\n                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                    } else if (!msg.value) {\n                                                                        memory[0x0140:0x0260] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x0120];\n                                                                    \n                                                                        if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x0100) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x03;\n                                                                    \n                                                                        if (storage[keccak256(memory[0xc0:0x0100])] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0x02c0:0x02e0] = 0x00;\n                                                                    \n                                                                        if (!(keccak256(memory[0x0140 + 0x20:0x0140 + 0x20 + memory[0x0140:0x0160]]) ~ keccak256(memory[0x02c0 + 0x20:0x02c0 + 0x20 + memory[0x02c0:0x02e0]]))) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0x0340:0x0360] = 0x00;\n                                                                        var0 = keccak256(memory[0x0340 + 0x20:0x0340 + 0x20 + memory[0x0340:0x0360]]);\n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x06;\n                                                                        var1 = keccak256(memory[0xc0:0x0100]);\n                                                                        var2 = var1;\n                                                                        memory[0xc0:0xe0] = var2;\n                                                                        var3 = keccak256(memory[0xc0:0xe0]);\n                                                                        var4 = 0x0380;\n                                                                        var temp25 = storage[var3] + 0x20;\n                                                                        var5 = temp25;\n                                                                        var6 = 0x0120;\n                                                                        memory[var6:var6 + 0x20] = 0x00;\n                                                                        var7 = 0x09;\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 > var5) { goto label_102C; }\n                                                                    \n                                                                    label_1030:\n                                                                        memory[var4 + memory[0x0120:0x0140] * 0x20:var4 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var3 + memory[0x0120:0x0140]];\n                                                                        var temp26 = var6;\n                                                                        var temp27 = memory[temp26:temp26 + 0x20] + 0x01;\n                                                                        memory[temp26:temp26 + 0x20] = temp27;\n                                                                    \n                                                                        if (var7 == temp27) { goto label_1052; }\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 <= var5) { goto label_1030; }\n                                                                    \n                                                                    label_102C:\n                                                                    \n                                                                    label_1052:\n                                                                        memory[0xc0:0xe0] = var1;\n                                                                    \n                                                                        if (keccak256(memory[0x03a0:0x03a0 + storage[keccak256(memory[0xc0:0xe0])]]) != var0) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0xe0:0x0100] = keccak256(memory[0x0160:0x0160 + memory[0x0140:0x0160]]);\n                                                                        memory[0xc0:0xe0] = 0x09;\n                                                                    \n                                                                        if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        var0 = 0x0140;\n                                                                        var1 = var0;\n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x06;\n                                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                        var2 = keccak256(memory[0xc0:0xe0]);\n                                                                        var temp28 = memory[var1:var1 + 0x20] + 0x20;\n                                                                        var3 = temp28;\n                                                                        var4 = 0x0120;\n                                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                                        var5 = 0x09;\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_10CE; }\n                                                                    \n                                                                    label_10D2:\n                                                                        storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                        var temp29 = var4;\n                                                                        var temp30 = memory[temp29:temp29 + 0x20] + 0x01;\n                                                                        memory[temp29:temp29 + 0x20] = temp30;\n                                                                    \n                                                                        if (var5 == temp30) { goto label_10F4; }\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_10D2; }\n                                                                    \n                                                                    label_10CE:\n                                                                    \n                                                                    label_10F4:\n                                                                        memory[0x04c0:0x04e0] = 0x20;\n                                                                        memory[0x0500:0x0520] = memory[0x04c0:0x04e0];\n                                                                        var0 = 0x0140;\n                                                                        var temp31 = memory[var0:var0 + 0x20] + 0x20;\n                                                                        var1 = temp31;\n                                                                        var temp32;\n                                                                        temp32, memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                                    \n                                                                        if (!temp32) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        var temp33 = memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + 0x20];\n                                                                        var temp34 = (temp33 + 0x1f) - temp33 - 0x01 % 0x20 - temp33;\n                                                                        memory[memory[0x04c0:0x04e0] + 0x0500 + 0x20 + temp33:memory[0x04c0:0x04e0] + 0x0500 + 0x20 + temp33 + temp34] = msg.data[msg.data.length:msg.data.length + temp34];\n                                                                        var temp35 = memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + 0x20];\n                                                                        memory[0x04c0:0x04e0] = memory[0x04c0:0x04e0] + ((temp35 + 0x1f) - temp35 - 0x01 % 0x20) + 0x20;\n                                                                        log(memory[0x0500:0x0500 + memory[0x04c0:0x04e0]], [0xec91067115fbcd85e5d9f3128d79abbbd79dd06ed35d47422db17c6de0f07647, msg.sender, msg.data[0x24:0x44]]);\n                                                                        stop();\n                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                } else if (!msg.value) {\n                                                                    var0 = msg.data[0x04:0x24];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var0 = msg.data[0x24:0x44];\n                                                                \n                                                                    if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    if (!(msg.data[0x04:0x24] ~ msg.sender)) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.sender;\n                                                                    memory[0xc0:0xe0] = 0x0c;\n                                                                    var temp36 = keccak256(memory[0xc0:0x0100]);\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = temp36;\n                                                                    storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x24:0x44];\n                                                                    memory[0x0140:0x0160] = msg.data[0x24:0x44];\n                                                                    log(memory[0x0140:0x0160], [0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, msg.sender, msg.data[0x04:0x24]]);\n                                                                    stop();\n                                                                } else { revert(memory[0x00:0x00]); }\n                                                            } else if (!msg.value) {\n                                                                var0 = msg.data[0x04:0x24];\n                                                            \n                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                                memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                            \n                                                                if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                if (memory[0x0140:0x0160] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var0 = memory[0x0140:0x0160];\n                                                                memory[0x0180:0x01a0] = 0x91127c1f;\n                                                                memory[0x01a0:0x01c0] = msg.data[0x04:0x24];\n                                                                memory[0x01c0:0x01e0] = msg.data[0x24:0x44];\n                                                                var1 = memory[0x01c0:0x01e0];\n                                                                var2 = memory[0x01a0:0x01c0];\n                                                                var3 = 0x06;\n                                                                // Unhandled termination\n                                                            } else { revert(memory[0x00:0x00]); }\n                                                        } else if (!msg.value) {\n                                                            var0 = msg.data[0x04:0x24];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x03;\n                                                            memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        \n                                                            if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            if (!(msg.data[0x04:0x24] ~ memory[0x0140:0x0160])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x03;\n                                                            memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0x0100])] == msg.sender;\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0c;\n                                                            var temp37 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = msg.sender;\n                                                            memory[0xc0:0xe0] = temp37;\n                                                            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        \n                                                            if (!(memory[0x0160:0x0180] | memory[0x0180:0x01a0])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x04;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x04:0x24];\n                                                            log(memory[0x00:0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, memory[0x0140:0x0160], msg.data[0x04:0x24], msg.data[0x24:0x44]]);\n                                                            stop();\n                                                        } else { revert(memory[0x00:0x00]); }\n                                                    } else if (!msg.value) {\n                                                        var0 = msg.data[0x04:0x24];\n                                                    \n                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        var0 = msg.data[0x24:0x44];\n                                                    \n                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0140:0x0160] = 0x092863fe;\n                                                        memory[0x0160:0x0180] = msg.data[0x04:0x24];\n                                                        memory[0x0180:0x01a0] = msg.data[0x24:0x44];\n                                                        memory[0x01a0:0x01c0] = msg.data[0x44:0x64];\n                                                        memory[0x01c0:0x01e0] = msg.sender;\n                                                        var0 = memory[0x01c0:0x01e0];\n                                                        var1 = memory[0x01a0:0x01c0];\n                                                        var2 = memory[0x0180:0x01a0];\n                                                        var3 = memory[0x0160:0x0180];\n                                                        var4 = 0x06;\n                                                        // Unhandled termination\n                                                    } else { revert(memory[0x00:0x00]); }\n                                                } else if (!msg.value) {\n                                                    var0 = msg.data[0x04:0x24];\n                                                \n                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                \n                                                    var0 = msg.data[0x24:0x44];\n                                                \n                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                \n                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                    memory[0xc0:0xe0] = 0x0c;\n                                                    var temp53 = keccak256(memory[0xc0:0x0100]);\n                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                    memory[0xc0:0xe0] = temp53;\n                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                    return memory[0x00:0x20];\n                                                } else { revert(memory[0x00:0x00]); }\n                                            } else if (!msg.value) {\n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                            \n                                                if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                            \n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x06;\n                                                var0 = keccak256(memory[0xc0:0x0100]);\n                                                memory[0xc0:0xe0] = var0;\n                                                var1 = keccak256(memory[0xc0:0xe0]);\n                                                var2 = 0x01a0;\n                                                var temp54 = storage[var1] + 0x20;\n                                                var3 = temp54;\n                                                var4 = 0x0120;\n                                                memory[var4:var4 + 0x20] = 0x00;\n                                                var5 = 0x09;\n                                            \n                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0476; }\n                                            \n                                            label_047A:\n                                                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                var temp55 = var4;\n                                                var temp56 = memory[temp55:temp55 + 0x20] + 0x01;\n                                                memory[temp55:temp55 + 0x20] = temp56;\n                                            \n                                                if (var5 == temp56) { goto label_049C; }\n                                            \n                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_047A; }\n                                            \n                                            label_0476:\n                                            \n                                            label_049C:\n                                                var temp57 = memory[0x01a0:0x01c0];\n                                                var temp58 = (temp57 + 0x1f) - temp57 - 0x01 % 0x20 - temp57;\n                                                memory[temp57 + 0x01c0:temp57 + 0x01c0 + temp58] = msg.data[msg.data.length:msg.data.length + temp58];\n                                                memory[0x0180:0x01a0] = 0x20;\n                                                var temp59 = memory[0x01a0:0x01c0] + 0x40;\n                                                return memory[0x0180:0x0180 + (temp59 + 0x1f) - temp59 - 0x01 % 0x20];\n                                            } else { revert(memory[0x00:0x00]); }\n                                        } else if (!msg.value) {\n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                        \n                                            if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x05;\n                                            var0 = keccak256(memory[0xc0:0x0100]);\n                                            memory[0xc0:0xe0] = var0;\n                                            var1 = keccak256(memory[0xc0:0xe0]);\n                                            var2 = 0x01a0;\n                                            var temp60 = storage[var1] + 0x20;\n                                            var3 = temp60;\n                                            var4 = 0x0120;\n                                            memory[var4:var4 + 0x20] = 0x00;\n                                            var5 = 0x09;\n                                        \n                                            if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_038F; }\n                                        \n                                        label_0393:\n                                            memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                            var temp61 = var4;\n                                            var temp62 = memory[temp61:temp61 + 0x20] + 0x01;\n                                            memory[temp61:temp61 + 0x20] = temp62;\n                                        \n                                            if (var5 == temp62) { goto label_03B5; }\n                                        \n                                            if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0393; }\n                                        \n                                        label_038F:\n                                        \n                                        label_03B5:\n                                            var temp63 = memory[0x01a0:0x01c0];\n                                            var temp64 = (temp63 + 0x1f) - temp63 - 0x01 % 0x20 - temp63;\n                                            memory[temp63 + 0x01c0:temp63 + 0x01c0 + temp64] = msg.data[msg.data.length:msg.data.length + temp64];\n                                            memory[0x0180:0x01a0] = 0x20;\n                                            var temp65 = memory[0x01a0:0x01c0] + 0x40;\n                                            return memory[0x0180:0x0180 + (temp65 + 0x1f) - temp65 - 0x01 % 0x20];\n                                        } else { revert(memory[0x00:0x00]); }\n                                    } else if (!msg.value) {\n                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                        memory[0xc0:0xe0] = 0x03;\n                                    \n                                        if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                        return memory[0x00:0x20];\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                    memory[0xc0:0xe0] = 0x03;\n                                \n                                    if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                \n                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                    memory[0xc0:0xe0] = 0x04;\n                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                    return memory[0x00:0x20];\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                var0 = msg.data[0x04:0x24];\n                            \n                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                            \n                                if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                memory[0xc0:0xe0] = 0x0b;\n                            \n                                if (msg.data[0x24:0x44] >= storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                memory[0xc0:0xe0] = 0x0a;\n                                var temp66 = keccak256(memory[0xc0:0x0100]);\n                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                memory[0xc0:0xe0] = temp66;\n                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            if (msg.data[0x04:0x24] >= storage[0x10]) { revert(memory[0x00:0x00]); }\n                        \n                            var temp67 = msg.data[0x04:0x24];\n                            var0 = temp67;\n                            var1 = 0x01;\n                        \n                            if (var0 + var1 < var0) { revert(memory[0x00:0x00]); }\n                        \n                            memory[0x00:0x20] = var0 + var1;\n                            return memory[0x00:0x20];\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                        memory[0xc0:0xe0] = 0x03;\n                        memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                    \n                        if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                    \n                        memory[0x00:0x20] = memory[0x0140:0x0160];\n                        return memory[0x00:0x20];\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                    memory[0xc0:0xe0] = 0x0b;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                memory[0xc0:0xe0] = 0x0d;\n                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                return memory[0x00:0x20];\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x00:0x20] = storage[0x10];\n            return memory[0x00:0x20];\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }\n    \n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] != 0x18160ddd) {\n            if (memory[0x00:0x20] != 0xf1753550) {\n                if (memory[0x00:0x20] != 0x70a08231) {\n                    if (memory[0x00:0x20] != 0x6352211e) {\n                        if (memory[0x00:0x20] != 0x4f6ccce7) {\n                            if (memory[0x00:0x20] != 0x2f745c59) {\n                                if (memory[0x00:0x20] != 0x081812fc) {\n                                    if (memory[0x00:0x20] != 0x3bd18a3b) {\n                                        if (memory[0x00:0x20] != 0x6efacc1c) {\n                                            if (memory[0x00:0x20] != 0x12d81afb) {\n                                                if (memory[0x00:0x20] != 0xe985e9c5) {\n                                                    if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0x01c0:0x01e0] = memory[0x01a0:0x01c0] == memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x04;\n                                                        memory[0x01e0:0x0200] = memory[0x0140:0x0160] == storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n                                                        memory[0xc0:0xe0] = 0x0c;\n                                                        var temp52 = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = temp52;\n                                                        memory[0x0200:0x0220] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0x00:0x20] = memory[0x01c0:0x01e0] | memory[0x01e0:0x0200] | memory[0x0200:0x0220];\n                                                        var-3 = memory[0x00:0x20];\n                                                        // Error: Could not resolve jump destination!\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        var temp47 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = temp47;\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        var temp48 = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x08;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = temp48;\n                                                        var temp49 = memory[0x0160:0x0180];\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0a;\n                                                        var temp50 = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        memory[0xe0:0x0100] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xc0:0xe0] = temp50;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = temp49;\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        var-3 = keccak256(memory[0xc0:0x0100]);\n                                                        var temp51 = storage[var-3];\n                                                        var-2 = temp51;\n                                                        var-1 = 0x01;\n                                                    \n                                                        if (var-2 + var-1 < var-2) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        storage[var-3] = var-2 + var-1;\n                                                        // Error: Could not resolve jump destination!\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        var temp41 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])] != temp41) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x08;\n                                                        memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        var-3 = storage[keccak256(memory[0xc0:0x0100])];\n                                                        var-2 = 0x01;\n                                                    \n                                                        if (var-3 < var-2) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x01c0:0x01e0] = var-3 - var-2;\n                                                        var temp42 = memory[0x01a0:0x01c0] < memory[0x01c0:0x01e0];\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                    \n                                                        if (!((storage[keccak256(memory[0xc0:0x0100])] > 0x01) & temp42)) {\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0b;\n                                                            var-3 = keccak256(memory[0xc0:0x0100]);\n                                                            var-2 = storage[var-3];\n                                                            var-1 = 0x01;\n                                                        \n                                                            if (var-2 < var-1) { revert(memory[0x00:0x00]); }\n                                                        \n                                                        label_07EC:\n                                                            storage[var-3] = var-2 - var-1;\n                                                            // Error: Could not resolve jump destination!\n                                                        } else {\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0a;\n                                                            var temp43 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = memory[0x01c0:0x01e0];\n                                                            memory[0xc0:0xe0] = temp43;\n                                                            memory[0x01e0:0x0200] = storage[keccak256(memory[0xc0:0x0100])];\n                                                            var temp44 = memory[0x01e0:0x0200];\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0a;\n                                                            var temp45 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n                                                            memory[0xc0:0xe0] = temp45;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = temp44;\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0a;\n                                                            var temp46 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = memory[0x01c0:0x01e0];\n                                                            memory[0xc0:0xe0] = temp46;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0b;\n                                                            var-3 = keccak256(memory[0xc0:0x0100]);\n                                                            var-2 = storage[var-3];\n                                                            var-1 = 0x01;\n                                                        \n                                                            if (var-2 >= var-1) { goto label_07EC; }\n                                                            else { revert(memory[0x00:0x00]); }\n                                                        }\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        var temp40 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])] != temp40) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x04;\n                                                    \n                                                        if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) {\n                                                            // Error: Could not resolve jump destination!\n                                                        } else {\n                                                            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                            memory[0xc0:0xe0] = 0x04;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                            // Error: Could not resolve jump destination!\n                                                        }\n                                                    } else if (0x00) {\n                                                        // Error: StackRead before write???\n                                                        var var-3;\n                                                        // Error: StackRead before write???\n                                                        var var-1;\n                                                        // Error: StackRead before write???\n                                                        var var-2;\n                                                        // Error: StackRead before write???\n                                                        var var-5;\n                                                        // Error: StackRead before write???\n                                                        var var-4;\n                                                        memory[0x01c0:0x01e0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0x0180:0x01a0] = var-4;\n                                                        memory[0x01a0:0x01c0] = var-5;\n                                                        var-5 = memory[0x0140:0x0160];\n                                                        var-4 = memory[0x0160:0x0180];\n                                                        var-3 = memory[0x0180:0x01a0];\n                                                        var-2 = memory[0x01a0:0x01c0];\n                                                        var-1 = memory[0x01c0:0x01e0];\n                                                        memory[0x0200:0x0220] = 0x4cdc9549;\n                                                        memory[0x0220:0x0240] = memory[0x01a0:0x01c0];\n                                                        memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n                                                        var0 = memory[0x0240:0x0260];\n                                                        var1 = memory[0x0220:0x0240];\n                                                        var2 = 0x06;\n                                                        // Unhandled termination\n                                                    } else if (memory[0x00:0x20] != 0x23b872dd) {\n                                                        if (memory[0x00:0x20] == 0x42842e0e) {\n                                                            memory[0x0580:0x05a0] = 0x00;\n                                                            var0 = 0x0580;\n                                                            var temp38 = memory[var0:var0 + 0x20] + 0x20;\n                                                            var1 = temp38;\n                                                            var temp39;\n                                                            temp39, memory[0x0140:0x0140 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                        \n                                                            if (temp39) { goto label_0BB5; }\n                                                            else { revert(memory[0x00:0x00]); }\n                                                        } else if (memory[0x00:0x20] == 0xb88d4fde) {\n                                                            memory[0x0140:0x0560] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0420];\n                                                        \n                                                            if (msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x20] > 0x0400) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0140:0x0580] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0440];\n                                                            goto label_0BB5;\n                                                        } else if (0x00) {\n                                                        label_0BB5:\n                                                        \n                                                            if (msg.value) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            var0 = msg.data[0x04:0x24];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            var0 = msg.data[0x24:0x44];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x05c0:0x05e0] = 0x0140;\n                                                            var0 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                            memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                        \n                                                            if (memory[0x05c0:0x05e0] >= 0x05c0) {\n                                                            label_0C0E:\n                                                                memory[0x05e0:0x0600] = 0x092863fe;\n                                                                memory[0x0600:0x0620] = msg.data[0x04:0x24];\n                                                                memory[0x0620:0x0640] = msg.data[0x24:0x44];\n                                                                memory[0x0640:0x0660] = msg.data[0x44:0x64];\n                                                                memory[0x0660:0x0680] = msg.sender;\n                                                                var1 = memory[0x0660:0x0680];\n                                                                var2 = memory[0x0640:0x0660];\n                                                                var3 = memory[0x0620:0x0640];\n                                                                var4 = memory[0x0600:0x0620];\n                                                                var5 = 0x06;\n                                                                // Unhandled termination\n                                                            } else {\n                                                            label_0C0A:\n                                                                var1 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                                memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                            \n                                                                if (memory[0x05c0:0x05e0] >= 0x05c0) { goto label_0C0E; }\n                                                                else { goto label_0C0A; }\n                                                            }\n                                                        } else if (memory[0x00:0x20] != 0x095ea7b3) {\n                                                            if (memory[0x00:0x20] != 0x6de53001) {\n                                                                if (memory[0x00:0x20] != 0xa22cb465) {\n                                                                    if (memory[0x00:0x20] != 0x51927028) {\n                                                                        if (memory[0x00:0x20] != 0x6ebd4607) {\n                                                                            if (memory[0x00:0x20] != 0x98cd6153) {\n                                                                                if (memory[0x00:0x20] != 0xfe475f6b) {\n                                                                                    if (memory[0x00:0x20] != 0xbc04f0af) {\n                                                                                        if (memory[0x00:0x20] != 0x06fdde03) {\n                                                                                            if (memory[0x00:0x20] != 0x95d89b41) {\n                                                                                                if (memory[0x00:0x20] != 0x3c130d90) { revert(memory[0x00:0x00]); }\n                                                                                            \n                                                                                                if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                                            \n                                                                                                var var0 = 0x02;\n                                                                                                memory[0xc0:0xe0] = var0;\n                                                                                                var var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                                var var2 = 0x0180;\n                                                                                                var temp0 = storage[var1] + 0x20;\n                                                                                                var var3 = temp0;\n                                                                                                var var4 = 0x0120;\n                                                                                                memory[var4:var4 + 0x20] = 0x00;\n                                                                                                var var5 = 0x03;\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_182F; }\n                                                                                            \n                                                                                            label_1833:\n                                                                                                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                                var temp1 = var4;\n                                                                                                var temp2 = memory[temp1:temp1 + 0x20] + 0x01;\n                                                                                                memory[temp1:temp1 + 0x20] = temp2;\n                                                                                            \n                                                                                                if (var5 == temp2) { goto label_1855; }\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_1833; }\n                                                                                            \n                                                                                            label_182F:\n                                                                                            \n                                                                                            label_1855:\n                                                                                                var temp3 = memory[0x0180:0x01a0];\n                                                                                                var temp4 = (temp3 + 0x1f) - temp3 - 0x01 % 0x20 - temp3;\n                                                                                                memory[temp3 + 0x01a0:temp3 + 0x01a0 + temp4] = msg.data[msg.data.length:msg.data.length + temp4];\n                                                                                                memory[0x0160:0x0180] = 0x20;\n                                                                                                var temp5 = memory[0x0180:0x01a0] + 0x40;\n                                                                                                return memory[0x0160:0x0160 + (temp5 + 0x1f) - temp5 - 0x01 % 0x20];\n                                                                                            } else if (!msg.value) {\n                                                                                                var0 = 0x01;\n                                                                                                memory[0xc0:0xe0] = var0;\n                                                                                                var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                                var2 = 0x0180;\n                                                                                                var temp6 = storage[var1] + 0x20;\n                                                                                                var3 = temp6;\n                                                                                                var4 = 0x0120;\n                                                                                                memory[var4:var4 + 0x20] = 0x00;\n                                                                                                var5 = 0x02;\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_177B; }\n                                                                                            \n                                                                                            label_177F:\n                                                                                                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                                var temp7 = var4;\n                                                                                                var temp8 = memory[temp7:temp7 + 0x20] + 0x01;\n                                                                                                memory[temp7:temp7 + 0x20] = temp8;\n                                                                                            \n                                                                                                if (var5 == temp8) { goto label_17A1; }\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_177F; }\n                                                                                            \n                                                                                            label_177B:\n                                                                                            \n                                                                                            label_17A1:\n                                                                                                var temp9 = memory[0x0180:0x01a0];\n                                                                                                var temp10 = (temp9 + 0x1f) - temp9 - 0x01 % 0x20 - temp9;\n                                                                                                memory[temp9 + 0x01a0:temp9 + 0x01a0 + temp10] = msg.data[msg.data.length:msg.data.length + temp10];\n                                                                                                memory[0x0160:0x0180] = 0x20;\n                                                                                                var temp11 = memory[0x0180:0x01a0] + 0x40;\n                                                                                                return memory[0x0160:0x0160 + (temp11 + 0x1f) - temp11 - 0x01 % 0x20];\n                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                        } else if (!msg.value) {\n                                                                                            var0 = 0x00;\n                                                                                            memory[0xc0:0xe0] = var0;\n                                                                                            var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                            var2 = 0x0180;\n                                                                                            var temp12 = storage[var1] + 0x20;\n                                                                                            var3 = temp12;\n                                                                                            var4 = 0x0120;\n                                                                                            memory[var4:var4 + 0x20] = 0x00;\n                                                                                            var5 = 0x03;\n                                                                                        \n                                                                                            if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_16C7; }\n                                                                                        \n                                                                                        label_16CB:\n                                                                                            memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                            var temp13 = var4;\n                                                                                            var temp14 = memory[temp13:temp13 + 0x20] + 0x01;\n                                                                                            memory[temp13:temp13 + 0x20] = temp14;\n                                                                                        \n                                                                                            if (var5 == temp14) { goto label_16ED; }\n                                                                                        \n                                                                                            if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_16CB; }\n                                                                                        \n                                                                                        label_16C7:\n                                                                                        \n                                                                                        label_16ED:\n                                                                                            var temp15 = memory[0x0180:0x01a0];\n                                                                                            var temp16 = (temp15 + 0x1f) - temp15 - 0x01 % 0x20 - temp15;\n                                                                                            memory[temp15 + 0x01a0:temp15 + 0x01a0 + temp16] = msg.data[msg.data.length:msg.data.length + temp16];\n                                                                                            memory[0x0160:0x0180] = 0x20;\n                                                                                            var temp17 = memory[0x0180:0x01a0] + 0x40;\n                                                                                            return memory[0x0160:0x0160 + (temp17 + 0x1f) - temp17 - 0x01 % 0x20];\n                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                    } else if (!msg.value) {\n                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                    \n                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (msg.sender != storage[0x0e]) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (msg.data[0x24:0x44] < 0x28) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        var0 = msg.data[0x24:0x44];\n                                                                                        var1 = 0x28;\n                                                                                        var2 = var1;\n                                                                                    \n                                                                                        if (!var2) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        memory[0x0140:0x0160] = var0 / var2;\n                                                                                        var0 = msg.data[0x24:0x44];\n                                                                                        var1 = memory[0x0140:0x0160];\n                                                                                    \n                                                                                        if (var0 < var1) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        memory[0x0160:0x0180] = var0 - var1;\n                                                                                    \n                                                                                        if (!address(storage[0x0e]).code.length) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (!(address(this) ~ storage[0x0e])) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        memory[0x01a0:0x01c0] = 0xa9059cbb;\n                                                                                        memory[0x01c0:0x01e0] = storage[0x0f];\n                                                                                        memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n                                                                                        var temp18;\n                                                                                        temp18, memory[0x0240:0x0260] = address(storage[0x0e]).call.gas(msg.gas)(memory[0x01bc:0x0200]);\n                                                                                    \n                                                                                        if (!temp18) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        memory[0x0180:0x01a0] = memory[0x0240:0x0260];\n                                                                                    \n                                                                                        if (!address(storage[0x0e]).code.length) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (!(address(this) ~ storage[0x0e])) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        memory[0x0260:0x0280] = 0x42966c68;\n                                                                                        memory[0x0280:0x02a0] = memory[0x0160:0x0180];\n                                                                                        var temp19;\n                                                                                        temp19, memory[0x00:0x00] = address(storage[0x0e]).call.gas(msg.gas)(memory[0x027c:0x02a0]);\n                                                                                    \n                                                                                        if (!temp19) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (!memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        var0 = 0x10;\n                                                                                        var temp20 = storage[var0];\n                                                                                        var1 = temp20;\n                                                                                        var2 = 0x01;\n                                                                                    \n                                                                                        if (var1 + var2 < var1) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        storage[var0] = var1 + var2;\n                                                                                        var temp21 = memory[0x0160:0x0180];\n                                                                                        memory[0xe0:0x0100] = storage[0x10];\n                                                                                        memory[0xc0:0xe0] = 0x07;\n                                                                                        storage[keccak256(memory[0xc0:0x0100])] = temp21;\n                                                                                        memory[0x02e0:0x0300] = 0x0140;\n                                                                                        var0 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                        memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                                    \n                                                                                        if (memory[0x02e0:0x0300] >= 0x02e0) {\n                                                                                        label_161A:\n                                                                                            memory[0x0300:0x0320] = 0xff5ce378;\n                                                                                            memory[0x0320:0x0340] = msg.data[0x04:0x24];\n                                                                                            memory[0x0340:0x0360] = storage[0x10];\n                                                                                            var1 = memory[0x0340:0x0360];\n                                                                                            var2 = memory[0x0320:0x0340];\n                                                                                            var3 = 0x06;\n                                                                                            // Unhandled termination\n                                                                                        } else {\n                                                                                        label_1616:\n                                                                                            var1 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                            memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                                        \n                                                                                            if (memory[0x02e0:0x0300] >= 0x02e0) { goto label_161A; }\n                                                                                            else { goto label_1616; }\n                                                                                        }\n                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                } else if (!msg.value) {\n                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                \n                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                \n                                                                                    if (msg.sender != storage[0x0f]) { revert(memory[0x00:0x00]); }\n                                                                                \n                                                                                    storage[0x0f] = msg.data[0x04:0x24];\n                                                                                    stop();\n                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                            } else if (!msg.value) {\n                                                                                memory[0x0140:0x01a0] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x60];\n                                                                            \n                                                                                if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x40) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (msg.sender != storage[0x0f]) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                var0 = 0x0140;\n                                                                                var1 = var0;\n                                                                                memory[0xc0:0xe0] = 0x02;\n                                                                                var2 = keccak256(memory[0xc0:0xe0]);\n                                                                                var temp22 = memory[var1:var1 + 0x20] + 0x20;\n                                                                                var3 = temp22;\n                                                                                var4 = 0x0120;\n                                                                                memory[var4:var4 + 0x20] = 0x00;\n                                                                                var5 = 0x03;\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_1421; }\n                                                                            \n                                                                            label_1425:\n                                                                                storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                                var temp23 = var4;\n                                                                                var temp24 = memory[temp23:temp23 + 0x20] + 0x01;\n                                                                                memory[temp23:temp23 + 0x20] = temp24;\n                                                                            \n                                                                                if (var5 == temp24) { stop(); }\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_1425; }\n                                                                            \n                                                                            label_1421:\n                                                                                stop();\n                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                        } else if (!msg.value) {\n                                                                            memory[0x0140:0x0260] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x0120];\n                                                                        \n                                                                            if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x0100) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            var0 = memory[0x0140:0x0160];\n                                                                            var1 = memory[0x0160:0x0180];\n                                                                            var2 = memory[0x0180:0x01a0];\n                                                                            var3 = memory[0x01a0:0x01c0];\n                                                                            var4 = memory[0x01c0:0x01e0];\n                                                                            var5 = memory[0x01e0:0x0200];\n                                                                            var var6 = memory[0x0200:0x0220];\n                                                                            var var7 = memory[0x0220:0x0240];\n                                                                            var var8 = memory[0x0240:0x0260];\n                                                                            var var9 = memory[0x0260:0x0280];\n                                                                            memory[0x02a0:0x02c0] = 0x4cdc9549;\n                                                                            memory[0x02c0:0x02e0] = msg.sender;\n                                                                            memory[0x02e0:0x0300] = msg.data[0x24:0x44];\n                                                                            var var10 = memory[0x02e0:0x0300];\n                                                                            var var11 = memory[0x02c0:0x02e0];\n                                                                            var var12 = 0x06;\n                                                                            // Unhandled termination\n                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                    } else if (!msg.value) {\n                                                                        memory[0x0140:0x0260] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x0120];\n                                                                    \n                                                                        if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x0100) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x03;\n                                                                    \n                                                                        if (storage[keccak256(memory[0xc0:0x0100])] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0x02c0:0x02e0] = 0x00;\n                                                                    \n                                                                        if (!(keccak256(memory[0x0140 + 0x20:0x0140 + 0x20 + memory[0x0140:0x0160]]) ~ keccak256(memory[0x02c0 + 0x20:0x02c0 + 0x20 + memory[0x02c0:0x02e0]]))) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0x0340:0x0360] = 0x00;\n                                                                        var0 = keccak256(memory[0x0340 + 0x20:0x0340 + 0x20 + memory[0x0340:0x0360]]);\n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x06;\n                                                                        var1 = keccak256(memory[0xc0:0x0100]);\n                                                                        var2 = var1;\n                                                                        memory[0xc0:0xe0] = var2;\n                                                                        var3 = keccak256(memory[0xc0:0xe0]);\n                                                                        var4 = 0x0380;\n                                                                        var temp25 = storage[var3] + 0x20;\n                                                                        var5 = temp25;\n                                                                        var6 = 0x0120;\n                                                                        memory[var6:var6 + 0x20] = 0x00;\n                                                                        var7 = 0x09;\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 > var5) { goto label_102C; }\n                                                                    \n                                                                    label_1030:\n                                                                        memory[var4 + memory[0x0120:0x0140] * 0x20:var4 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var3 + memory[0x0120:0x0140]];\n                                                                        var temp26 = var6;\n                                                                        var temp27 = memory[temp26:temp26 + 0x20] + 0x01;\n                                                                        memory[temp26:temp26 + 0x20] = temp27;\n                                                                    \n                                                                        if (var7 == temp27) { goto label_1052; }\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 <= var5) { goto label_1030; }\n                                                                    \n                                                                    label_102C:\n                                                                    \n                                                                    label_1052:\n                                                                        memory[0xc0:0xe0] = var1;\n                                                                    \n                                                                        if (keccak256(memory[0x03a0:0x03a0 + storage[keccak256(memory[0xc0:0xe0])]]) != var0) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0xe0:0x0100] = keccak256(memory[0x0160:0x0160 + memory[0x0140:0x0160]]);\n                                                                        memory[0xc0:0xe0] = 0x09;\n                                                                    \n                                                                        if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        var0 = 0x0140;\n                                                                        var1 = var0;\n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x06;\n                                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                        var2 = keccak256(memory[0xc0:0xe0]);\n                                                                        var temp28 = memory[var1:var1 + 0x20] + 0x20;\n                                                                        var3 = temp28;\n                                                                        var4 = 0x0120;\n                                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                                        var5 = 0x09;\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_10CE; }\n                                                                    \n                                                                    label_10D2:\n                                                                        storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                        var temp29 = var4;\n                                                                        var temp30 = memory[temp29:temp29 + 0x20] + 0x01;\n                                                                        memory[temp29:temp29 + 0x20] = temp30;\n                                                                    \n                                                                        if (var5 == temp30) { goto label_10F4; }\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_10D2; }\n                                                                    \n                                                                    label_10CE:\n                                                                    \n                                                                    label_10F4:\n                                                                        memory[0x04c0:0x04e0] = 0x20;\n                                                                        memory[0x0500:0x0520] = memory[0x04c0:0x04e0];\n                                                                        var0 = 0x0140;\n                                                                        var temp31 = memory[var0:var0 + 0x20] + 0x20;\n                                                                        var1 = temp31;\n                                                                        var temp32;\n                                                                        temp32, memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                                    \n                                                                        if (!temp32) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        var temp33 = memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + 0x20];\n                                                                        var temp34 = (temp33 + 0x1f) - temp33 - 0x01 % 0x20 - temp33;\n                                                                        memory[memory[0x04c0:0x04e0] + 0x0500 + 0x20 + temp33:memory[0x04c0:0x04e0] + 0x0500 + 0x20 + temp33 + temp34] = msg.data[msg.data.length:msg.data.length + temp34];\n                                                                        var temp35 = memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + 0x20];\n                                                                        memory[0x04c0:0x04e0] = memory[0x04c0:0x04e0] + ((temp35 + 0x1f) - temp35 - 0x01 % 0x20) + 0x20;\n                                                                        log(memory[0x0500:0x0500 + memory[0x04c0:0x04e0]], [0xec91067115fbcd85e5d9f3128d79abbbd79dd06ed35d47422db17c6de0f07647, msg.sender, msg.data[0x24:0x44]]);\n                                                                        stop();\n                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                } else if (!msg.value) {\n                                                                    var0 = msg.data[0x04:0x24];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var0 = msg.data[0x24:0x44];\n                                                                \n                                                                    if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    if (!(msg.data[0x04:0x24] ~ msg.sender)) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.sender;\n                                                                    memory[0xc0:0xe0] = 0x0c;\n                                                                    var temp36 = keccak256(memory[0xc0:0x0100]);\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = temp36;\n                                                                    storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x24:0x44];\n                                                                    memory[0x0140:0x0160] = msg.data[0x24:0x44];\n                                                                    log(memory[0x0140:0x0160], [0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, msg.sender, msg.data[0x04:0x24]]);\n                                                                    stop();\n                                                                } else { revert(memory[0x00:0x00]); }\n                                                            } else if (!msg.value) {\n                                                                var0 = msg.data[0x04:0x24];\n                                                            \n                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                                memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                            \n                                                                if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                if (memory[0x0140:0x0160] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var0 = memory[0x0140:0x0160];\n                                                                memory[0x0180:0x01a0] = 0x91127c1f;\n                                                                memory[0x01a0:0x01c0] = msg.data[0x04:0x24];\n                                                                memory[0x01c0:0x01e0] = msg.data[0x24:0x44];\n                                                                var1 = memory[0x01c0:0x01e0];\n                                                                var2 = memory[0x01a0:0x01c0];\n                                                                var3 = 0x06;\n                                                                // Unhandled termination\n                                                            } else { revert(memory[0x00:0x00]); }\n                                                        } else if (!msg.value) {\n                                                            var0 = msg.data[0x04:0x24];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x03;\n                                                            memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        \n                                                            if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            if (!(msg.data[0x04:0x24] ~ memory[0x0140:0x0160])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x03;\n                                                            memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0x0100])] == msg.sender;\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0c;\n                                                            var temp37 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = msg.sender;\n                                                            memory[0xc0:0xe0] = temp37;\n                                                            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        \n                                                            if (!(memory[0x0160:0x0180] | memory[0x0180:0x01a0])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x04;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x04:0x24];\n                                                            log(memory[0x00:0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, memory[0x0140:0x0160], msg.data[0x04:0x24], msg.data[0x24:0x44]]);\n                                                            stop();\n                                                        } else { revert(memory[0x00:0x00]); }\n                                                    } else if (!msg.value) {\n                                                        var0 = msg.data[0x04:0x24];\n                                                    \n                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        var0 = msg.data[0x24:0x44];\n                                                    \n                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0140:0x0160] = 0x092863fe;\n                                                        memory[0x0160:0x0180] = msg.data[0x04:0x24];\n                                                        memory[0x0180:0x01a0] = msg.data[0x24:0x44];\n                                                        memory[0x01a0:0x01c0] = msg.data[0x44:0x64];\n                                                        memory[0x01c0:0x01e0] = msg.sender;\n                                                        var0 = memory[0x01c0:0x01e0];\n                                                        var1 = memory[0x01a0:0x01c0];\n                                                        var2 = memory[0x0180:0x01a0];\n                                                        var3 = memory[0x0160:0x0180];\n                                                        var4 = 0x06;\n                                                        // Unhandled termination\n                                                    } else { revert(memory[0x00:0x00]); }\n                                                } else if (!msg.value) {\n                                                    var0 = msg.data[0x04:0x24];\n                                                \n                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                \n                                                    var0 = msg.data[0x24:0x44];\n                                                \n                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                \n                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                    memory[0xc0:0xe0] = 0x0c;\n                                                    var temp53 = keccak256(memory[0xc0:0x0100]);\n                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                    memory[0xc0:0xe0] = temp53;\n                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                    return memory[0x00:0x20];\n                                                } else { revert(memory[0x00:0x00]); }\n                                            } else if (!msg.value) {\n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                            \n                                                if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                            \n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x06;\n                                                var0 = keccak256(memory[0xc0:0x0100]);\n                                                memory[0xc0:0xe0] = var0;\n                                                var1 = keccak256(memory[0xc0:0xe0]);\n                                                var2 = 0x01a0;\n                                                var temp54 = storage[var1] + 0x20;\n                                                var3 = temp54;\n                                                var4 = 0x0120;\n                                                memory[var4:var4 + 0x20] = 0x00;\n                                                var5 = 0x09;\n                                            \n                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0476; }\n                                            \n                                            label_047A:\n                                                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                var temp55 = var4;\n                                                var temp56 = memory[temp55:temp55 + 0x20] + 0x01;\n                                                memory[temp55:temp55 + 0x20] = temp56;\n                                            \n                                                if (var5 == temp56) { goto label_049C; }\n                                            \n                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_047A; }\n                                            \n                                            label_0476:\n                                            \n                                            label_049C:\n                                                var temp57 = memory[0x01a0:0x01c0];\n                                                var temp58 = (temp57 + 0x1f) - temp57 - 0x01 % 0x20 - temp57;\n                                                memory[temp57 + 0x01c0:temp57 + 0x01c0 + temp58] = msg.data[msg.data.length:msg.data.length + temp58];\n                                                memory[0x0180:0x01a0] = 0x20;\n                                                var temp59 = memory[0x01a0:0x01c0] + 0x40;\n                                                return memory[0x0180:0x0180 + (temp59 + 0x1f) - temp59 - 0x01 % 0x20];\n                                            } else { revert(memory[0x00:0x00]); }\n                                        } else if (!msg.value) {\n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                        \n                                            if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x05;\n                                            var0 = keccak256(memory[0xc0:0x0100]);\n                                            memory[0xc0:0xe0] = var0;\n                                            var1 = keccak256(memory[0xc0:0xe0]);\n                                            var2 = 0x01a0;\n                                            var temp60 = storage[var1] + 0x20;\n                                            var3 = temp60;\n                                            var4 = 0x0120;\n                                            memory[var4:var4 + 0x20] = 0x00;\n                                            var5 = 0x09;\n                                        \n                                            if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_038F; }\n                                        \n                                        label_0393:\n                                            memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                            var temp61 = var4;\n                                            var temp62 = memory[temp61:temp61 + 0x20] + 0x01;\n                                            memory[temp61:temp61 + 0x20] = temp62;\n                                        \n                                            if (var5 == temp62) { goto label_03B5; }\n                                        \n                                            if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0393; }\n                                        \n                                        label_038F:\n                                        \n                                        label_03B5:\n                                            var temp63 = memory[0x01a0:0x01c0];\n                                            var temp64 = (temp63 + 0x1f) - temp63 - 0x01 % 0x20 - temp63;\n                                            memory[temp63 + 0x01c0:temp63 + 0x01c0 + temp64] = msg.data[msg.data.length:msg.data.length + temp64];\n                                            memory[0x0180:0x01a0] = 0x20;\n                                            var temp65 = memory[0x01a0:0x01c0] + 0x40;\n                                            return memory[0x0180:0x0180 + (temp65 + 0x1f) - temp65 - 0x01 % 0x20];\n                                        } else { revert(memory[0x00:0x00]); }\n                                    } else if (!msg.value) {\n                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                        memory[0xc0:0xe0] = 0x03;\n                                    \n                                        if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                        return memory[0x00:0x20];\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                    memory[0xc0:0xe0] = 0x03;\n                                \n                                    if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                \n                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                    memory[0xc0:0xe0] = 0x04;\n                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                    return memory[0x00:0x20];\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                var0 = msg.data[0x04:0x24];\n                            \n                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                            \n                                if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                memory[0xc0:0xe0] = 0x0b;\n                            \n                                if (msg.data[0x24:0x44] >= storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                memory[0xc0:0xe0] = 0x0a;\n                                var temp66 = keccak256(memory[0xc0:0x0100]);\n                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                memory[0xc0:0xe0] = temp66;\n                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            if (msg.data[0x04:0x24] >= storage[0x10]) { revert(memory[0x00:0x00]); }\n                        \n                            var temp67 = msg.data[0x04:0x24];\n                            var0 = temp67;\n                            var1 = 0x01;\n                        \n                            if (var0 + var1 < var0) { revert(memory[0x00:0x00]); }\n                        \n                            memory[0x00:0x20] = var0 + var1;\n                            return memory[0x00:0x20];\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                        memory[0xc0:0xe0] = 0x03;\n                        memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                    \n                        if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                    \n                        memory[0x00:0x20] = memory[0x0140:0x0160];\n                        return memory[0x00:0x20];\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                    memory[0xc0:0xe0] = 0x0b;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                memory[0xc0:0xe0] = 0x0d;\n                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                return memory[0x00:0x20];\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x00:0x20] = storage[0x10];\n            return memory[0x00:0x20];\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }\n    \n        memory[0x1c:0x3c] = msg.data[0x00:0x20];\n        memory[0x20:0x40] = 0x010000000000000000000000000000000000000000;\n        memory[0x40:0x60] = 0x7fffffffffffffffffffffffffffffff;\n        memory[0x60:0x80] = 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000;\n        memory[0x80:0xa0] = 0x012a05f1fffffffffffffffffffffffffdabf41c00;\n        memory[0xa0:0xc0] = 0xfffffffffffffffffffffffed5fa0e0000000000000000000000000000000000;\n    \n        if (memory[0x00:0x20] != 0x18160ddd) {\n            if (memory[0x00:0x20] != 0xf1753550) {\n                if (memory[0x00:0x20] != 0x70a08231) {\n                    if (memory[0x00:0x20] != 0x6352211e) {\n                        if (memory[0x00:0x20] != 0x4f6ccce7) {\n                            if (memory[0x00:0x20] != 0x2f745c59) {\n                                if (memory[0x00:0x20] != 0x081812fc) {\n                                    if (memory[0x00:0x20] != 0x3bd18a3b) {\n                                        if (memory[0x00:0x20] != 0x6efacc1c) {\n                                            if (memory[0x00:0x20] != 0x12d81afb) {\n                                                if (memory[0x00:0x20] != 0xe985e9c5) {\n                                                    if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0x01c0:0x01e0] = memory[0x01a0:0x01c0] == memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x04;\n                                                        memory[0x01e0:0x0200] = memory[0x0140:0x0160] == storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n                                                        memory[0xc0:0xe0] = 0x0c;\n                                                        var temp52 = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = temp52;\n                                                        memory[0x0200:0x0220] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0x00:0x20] = memory[0x01c0:0x01e0] | memory[0x01e0:0x0200] | memory[0x0200:0x0220];\n                                                        var-3 = memory[0x00:0x20];\n                                                        // Error: Could not resolve jump destination!\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        var temp47 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = temp47;\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        var temp48 = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x08;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = temp48;\n                                                        var temp49 = memory[0x0160:0x0180];\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0a;\n                                                        var temp50 = keccak256(memory[0xc0:0x0100]);\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        memory[0xe0:0x0100] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xc0:0xe0] = temp50;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = temp49;\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        var-3 = keccak256(memory[0xc0:0x0100]);\n                                                        var temp51 = storage[var-3];\n                                                        var-2 = temp51;\n                                                        var-1 = 0x01;\n                                                    \n                                                        if (var-2 + var-1 < var-2) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        storage[var-3] = var-2 + var-1;\n                                                        // Error: Could not resolve jump destination!\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        var temp41 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])] != temp41) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                        storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x08;\n                                                        memory[0x01a0:0x01c0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                        var-3 = storage[keccak256(memory[0xc0:0x0100])];\n                                                        var-2 = 0x01;\n                                                    \n                                                        if (var-3 < var-2) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x01c0:0x01e0] = var-3 - var-2;\n                                                        var temp42 = memory[0x01a0:0x01c0] < memory[0x01c0:0x01e0];\n                                                        memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                        memory[0xc0:0xe0] = 0x0b;\n                                                    \n                                                        if (!((storage[keccak256(memory[0xc0:0x0100])] > 0x01) & temp42)) {\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0b;\n                                                            var-3 = keccak256(memory[0xc0:0x0100]);\n                                                            var-2 = storage[var-3];\n                                                            var-1 = 0x01;\n                                                        \n                                                            if (var-2 < var-1) { revert(memory[0x00:0x00]); }\n                                                        \n                                                        label_07EC:\n                                                            storage[var-3] = var-2 - var-1;\n                                                            // Error: Could not resolve jump destination!\n                                                        } else {\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0a;\n                                                            var temp43 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = memory[0x01c0:0x01e0];\n                                                            memory[0xc0:0xe0] = temp43;\n                                                            memory[0x01e0:0x0200] = storage[keccak256(memory[0xc0:0x0100])];\n                                                            var temp44 = memory[0x01e0:0x0200];\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0a;\n                                                            var temp45 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = memory[0x01a0:0x01c0];\n                                                            memory[0xc0:0xe0] = temp45;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = temp44;\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0a;\n                                                            var temp46 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = memory[0x01c0:0x01e0];\n                                                            memory[0xc0:0xe0] = temp46;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0b;\n                                                            var-3 = keccak256(memory[0xc0:0x0100]);\n                                                            var-2 = storage[var-3];\n                                                            var-1 = 0x01;\n                                                        \n                                                            if (var-2 >= var-1) { goto label_07EC; }\n                                                            else { revert(memory[0x00:0x00]); }\n                                                        }\n                                                    } else if (0x00) {\n                                                        memory[0x0180:0x01a0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        var temp40 = memory[0x0140:0x0160];\n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x03;\n                                                    \n                                                        if (storage[keccak256(memory[0xc0:0x0100])] != temp40) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                        memory[0xc0:0xe0] = 0x04;\n                                                    \n                                                        if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) {\n                                                            // Error: Could not resolve jump destination!\n                                                        } else {\n                                                            memory[0xe0:0x0100] = memory[0x0160:0x0180];\n                                                            memory[0xc0:0xe0] = 0x04;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = 0x00;\n                                                            // Error: Could not resolve jump destination!\n                                                        }\n                                                    } else if (0x00) {\n                                                        // Error: StackRead before write???\n                                                        var var-3;\n                                                        // Error: StackRead before write???\n                                                        var var-1;\n                                                        // Error: StackRead before write???\n                                                        var var-2;\n                                                        // Error: StackRead before write???\n                                                        var var-5;\n                                                        // Error: StackRead before write???\n                                                        var var-4;\n                                                        memory[0x01c0:0x01e0] = var-1;\n                                                        memory[0x0140:0x0160] = var-2;\n                                                        memory[0x0160:0x0180] = var-3;\n                                                        memory[0x0180:0x01a0] = var-4;\n                                                        memory[0x01a0:0x01c0] = var-5;\n                                                        var-5 = memory[0x0140:0x0160];\n                                                        var-4 = memory[0x0160:0x0180];\n                                                        var-3 = memory[0x0180:0x01a0];\n                                                        var-2 = memory[0x01a0:0x01c0];\n                                                        var-1 = memory[0x01c0:0x01e0];\n                                                        memory[0x0200:0x0220] = 0x4cdc9549;\n                                                        memory[0x0220:0x0240] = memory[0x01a0:0x01c0];\n                                                        memory[0x0240:0x0260] = memory[0x0180:0x01a0];\n                                                        var0 = memory[0x0240:0x0260];\n                                                        var1 = memory[0x0220:0x0240];\n                                                        var2 = 0x06;\n                                                        // Unhandled termination\n                                                    } else if (memory[0x00:0x20] != 0x23b872dd) {\n                                                        if (memory[0x00:0x20] == 0x42842e0e) {\n                                                            memory[0x0580:0x05a0] = 0x00;\n                                                            var0 = 0x0580;\n                                                            var temp38 = memory[var0:var0 + 0x20] + 0x20;\n                                                            var1 = temp38;\n                                                            var temp39;\n                                                            temp39, memory[0x0140:0x0140 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                        \n                                                            if (temp39) { goto label_0BB5; }\n                                                            else { revert(memory[0x00:0x00]); }\n                                                        } else if (memory[0x00:0x20] == 0xb88d4fde) {\n                                                            memory[0x0140:0x0560] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0420];\n                                                        \n                                                            if (msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x20] > 0x0400) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x0140:0x0580] = msg.data[msg.data[0x64:0x84] + 0x04:msg.data[0x64:0x84] + 0x04 + 0x0440];\n                                                            goto label_0BB5;\n                                                        } else if (0x00) {\n                                                        label_0BB5:\n                                                        \n                                                            if (msg.value) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            var0 = msg.data[0x04:0x24];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            var0 = msg.data[0x24:0x44];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0x05c0:0x05e0] = 0x0140;\n                                                            var0 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                            memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                        \n                                                            if (memory[0x05c0:0x05e0] >= 0x05c0) {\n                                                            label_0C0E:\n                                                                memory[0x05e0:0x0600] = 0x092863fe;\n                                                                memory[0x0600:0x0620] = msg.data[0x04:0x24];\n                                                                memory[0x0620:0x0640] = msg.data[0x24:0x44];\n                                                                memory[0x0640:0x0660] = msg.data[0x44:0x64];\n                                                                memory[0x0660:0x0680] = msg.sender;\n                                                                var1 = memory[0x0660:0x0680];\n                                                                var2 = memory[0x0640:0x0660];\n                                                                var3 = memory[0x0620:0x0640];\n                                                                var4 = memory[0x0600:0x0620];\n                                                                var5 = 0x06;\n                                                                // Unhandled termination\n                                                            } else {\n                                                            label_0C0A:\n                                                                var1 = memory[memory[0x05c0:0x05e0]:memory[0x05c0:0x05e0] + 0x20];\n                                                                memory[0x05c0:0x05e0] = memory[0x05c0:0x05e0] + 0x20;\n                                                            \n                                                                if (memory[0x05c0:0x05e0] >= 0x05c0) { goto label_0C0E; }\n                                                                else { goto label_0C0A; }\n                                                            }\n                                                        } else if (memory[0x00:0x20] != 0x095ea7b3) {\n                                                            if (memory[0x00:0x20] != 0x6de53001) {\n                                                                if (memory[0x00:0x20] != 0xa22cb465) {\n                                                                    if (memory[0x00:0x20] != 0x51927028) {\n                                                                        if (memory[0x00:0x20] != 0x6ebd4607) {\n                                                                            if (memory[0x00:0x20] != 0x98cd6153) {\n                                                                                if (memory[0x00:0x20] != 0xfe475f6b) {\n                                                                                    if (memory[0x00:0x20] != 0xbc04f0af) {\n                                                                                        if (memory[0x00:0x20] != 0x06fdde03) {\n                                                                                            if (memory[0x00:0x20] != 0x95d89b41) {\n                                                                                                if (memory[0x00:0x20] != 0x3c130d90) { revert(memory[0x00:0x00]); }\n                                                                                            \n                                                                                                if (msg.value) { revert(memory[0x00:0x00]); }\n                                                                                            \n                                                                                                var var0 = 0x02;\n                                                                                                memory[0xc0:0xe0] = var0;\n                                                                                                var var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                                var var2 = 0x0180;\n                                                                                                var temp0 = storage[var1] + 0x20;\n                                                                                                var var3 = temp0;\n                                                                                                var var4 = 0x0120;\n                                                                                                memory[var4:var4 + 0x20] = 0x00;\n                                                                                                var var5 = 0x03;\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_182F; }\n                                                                                            \n                                                                                            label_1833:\n                                                                                                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                                var temp1 = var4;\n                                                                                                var temp2 = memory[temp1:temp1 + 0x20] + 0x01;\n                                                                                                memory[temp1:temp1 + 0x20] = temp2;\n                                                                                            \n                                                                                                if (var5 == temp2) { goto label_1855; }\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_1833; }\n                                                                                            \n                                                                                            label_182F:\n                                                                                            \n                                                                                            label_1855:\n                                                                                                var temp3 = memory[0x0180:0x01a0];\n                                                                                                var temp4 = (temp3 + 0x1f) - temp3 - 0x01 % 0x20 - temp3;\n                                                                                                memory[temp3 + 0x01a0:temp3 + 0x01a0 + temp4] = msg.data[msg.data.length:msg.data.length + temp4];\n                                                                                                memory[0x0160:0x0180] = 0x20;\n                                                                                                var temp5 = memory[0x0180:0x01a0] + 0x40;\n                                                                                                return memory[0x0160:0x0160 + (temp5 + 0x1f) - temp5 - 0x01 % 0x20];\n                                                                                            } else if (!msg.value) {\n                                                                                                var0 = 0x01;\n                                                                                                memory[0xc0:0xe0] = var0;\n                                                                                                var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                                var2 = 0x0180;\n                                                                                                var temp6 = storage[var1] + 0x20;\n                                                                                                var3 = temp6;\n                                                                                                var4 = 0x0120;\n                                                                                                memory[var4:var4 + 0x20] = 0x00;\n                                                                                                var5 = 0x02;\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_177B; }\n                                                                                            \n                                                                                            label_177F:\n                                                                                                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                                var temp7 = var4;\n                                                                                                var temp8 = memory[temp7:temp7 + 0x20] + 0x01;\n                                                                                                memory[temp7:temp7 + 0x20] = temp8;\n                                                                                            \n                                                                                                if (var5 == temp8) { goto label_17A1; }\n                                                                                            \n                                                                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_177F; }\n                                                                                            \n                                                                                            label_177B:\n                                                                                            \n                                                                                            label_17A1:\n                                                                                                var temp9 = memory[0x0180:0x01a0];\n                                                                                                var temp10 = (temp9 + 0x1f) - temp9 - 0x01 % 0x20 - temp9;\n                                                                                                memory[temp9 + 0x01a0:temp9 + 0x01a0 + temp10] = msg.data[msg.data.length:msg.data.length + temp10];\n                                                                                                memory[0x0160:0x0180] = 0x20;\n                                                                                                var temp11 = memory[0x0180:0x01a0] + 0x40;\n                                                                                                return memory[0x0160:0x0160 + (temp11 + 0x1f) - temp11 - 0x01 % 0x20];\n                                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                                        } else if (!msg.value) {\n                                                                                            var0 = 0x00;\n                                                                                            memory[0xc0:0xe0] = var0;\n                                                                                            var1 = keccak256(memory[0xc0:0xe0]);\n                                                                                            var2 = 0x0180;\n                                                                                            var temp12 = storage[var1] + 0x20;\n                                                                                            var3 = temp12;\n                                                                                            var4 = 0x0120;\n                                                                                            memory[var4:var4 + 0x20] = 0x00;\n                                                                                            var5 = 0x03;\n                                                                                        \n                                                                                            if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_16C7; }\n                                                                                        \n                                                                                        label_16CB:\n                                                                                            memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                                                            var temp13 = var4;\n                                                                                            var temp14 = memory[temp13:temp13 + 0x20] + 0x01;\n                                                                                            memory[temp13:temp13 + 0x20] = temp14;\n                                                                                        \n                                                                                            if (var5 == temp14) { goto label_16ED; }\n                                                                                        \n                                                                                            if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_16CB; }\n                                                                                        \n                                                                                        label_16C7:\n                                                                                        \n                                                                                        label_16ED:\n                                                                                            var temp15 = memory[0x0180:0x01a0];\n                                                                                            var temp16 = (temp15 + 0x1f) - temp15 - 0x01 % 0x20 - temp15;\n                                                                                            memory[temp15 + 0x01a0:temp15 + 0x01a0 + temp16] = msg.data[msg.data.length:msg.data.length + temp16];\n                                                                                            memory[0x0160:0x0180] = 0x20;\n                                                                                            var temp17 = memory[0x0180:0x01a0] + 0x40;\n                                                                                            return memory[0x0160:0x0160 + (temp17 + 0x1f) - temp17 - 0x01 % 0x20];\n                                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                                    } else if (!msg.value) {\n                                                                                        var0 = msg.data[0x04:0x24];\n                                                                                    \n                                                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (msg.sender != storage[0x0e]) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (msg.data[0x24:0x44] < 0x28) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        var0 = msg.data[0x24:0x44];\n                                                                                        var1 = 0x28;\n                                                                                        var2 = var1;\n                                                                                    \n                                                                                        if (!var2) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        memory[0x0140:0x0160] = var0 / var2;\n                                                                                        var0 = msg.data[0x24:0x44];\n                                                                                        var1 = memory[0x0140:0x0160];\n                                                                                    \n                                                                                        if (var0 < var1) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        memory[0x0160:0x0180] = var0 - var1;\n                                                                                    \n                                                                                        if (!address(storage[0x0e]).code.length) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (!(address(this) ~ storage[0x0e])) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        memory[0x01a0:0x01c0] = 0xa9059cbb;\n                                                                                        memory[0x01c0:0x01e0] = storage[0x0f];\n                                                                                        memory[0x01e0:0x0200] = memory[0x0140:0x0160];\n                                                                                        var temp18;\n                                                                                        temp18, memory[0x0240:0x0260] = address(storage[0x0e]).call.gas(msg.gas)(memory[0x01bc:0x0200]);\n                                                                                    \n                                                                                        if (!temp18) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        memory[0x0180:0x01a0] = memory[0x0240:0x0260];\n                                                                                    \n                                                                                        if (!address(storage[0x0e]).code.length) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (!(address(this) ~ storage[0x0e])) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        memory[0x0260:0x0280] = 0x42966c68;\n                                                                                        memory[0x0280:0x02a0] = memory[0x0160:0x0180];\n                                                                                        var temp19;\n                                                                                        temp19, memory[0x00:0x00] = address(storage[0x0e]).call.gas(msg.gas)(memory[0x027c:0x02a0]);\n                                                                                    \n                                                                                        if (!temp19) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        if (!memory[0x0180:0x01a0]) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        var0 = 0x10;\n                                                                                        var temp20 = storage[var0];\n                                                                                        var1 = temp20;\n                                                                                        var2 = 0x01;\n                                                                                    \n                                                                                        if (var1 + var2 < var1) { revert(memory[0x00:0x00]); }\n                                                                                    \n                                                                                        storage[var0] = var1 + var2;\n                                                                                        var temp21 = memory[0x0160:0x0180];\n                                                                                        memory[0xe0:0x0100] = storage[0x10];\n                                                                                        memory[0xc0:0xe0] = 0x07;\n                                                                                        storage[keccak256(memory[0xc0:0x0100])] = temp21;\n                                                                                        memory[0x02e0:0x0300] = 0x0140;\n                                                                                        var0 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                        memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                                    \n                                                                                        if (memory[0x02e0:0x0300] >= 0x02e0) {\n                                                                                        label_161A:\n                                                                                            memory[0x0300:0x0320] = 0xff5ce378;\n                                                                                            memory[0x0320:0x0340] = msg.data[0x04:0x24];\n                                                                                            memory[0x0340:0x0360] = storage[0x10];\n                                                                                            var1 = memory[0x0340:0x0360];\n                                                                                            var2 = memory[0x0320:0x0340];\n                                                                                            var3 = 0x06;\n                                                                                            // Unhandled termination\n                                                                                        } else {\n                                                                                        label_1616:\n                                                                                            var1 = memory[memory[0x02e0:0x0300]:memory[0x02e0:0x0300] + 0x20];\n                                                                                            memory[0x02e0:0x0300] = memory[0x02e0:0x0300] + 0x20;\n                                                                                        \n                                                                                            if (memory[0x02e0:0x0300] >= 0x02e0) { goto label_161A; }\n                                                                                            else { goto label_1616; }\n                                                                                        }\n                                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                                } else if (!msg.value) {\n                                                                                    var0 = msg.data[0x04:0x24];\n                                                                                \n                                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                                \n                                                                                    if (msg.sender != storage[0x0f]) { revert(memory[0x00:0x00]); }\n                                                                                \n                                                                                    storage[0x0f] = msg.data[0x04:0x24];\n                                                                                    stop();\n                                                                                } else { revert(memory[0x00:0x00]); }\n                                                                            } else if (!msg.value) {\n                                                                                memory[0x0140:0x01a0] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x60];\n                                                                            \n                                                                                if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x40) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                if (msg.sender != storage[0x0f]) { revert(memory[0x00:0x00]); }\n                                                                            \n                                                                                var0 = 0x0140;\n                                                                                var1 = var0;\n                                                                                memory[0xc0:0xe0] = 0x02;\n                                                                                var2 = keccak256(memory[0xc0:0xe0]);\n                                                                                var temp22 = memory[var1:var1 + 0x20] + 0x20;\n                                                                                var3 = temp22;\n                                                                                var4 = 0x0120;\n                                                                                memory[var4:var4 + 0x20] = 0x00;\n                                                                                var5 = 0x03;\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_1421; }\n                                                                            \n                                                                            label_1425:\n                                                                                storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                                var temp23 = var4;\n                                                                                var temp24 = memory[temp23:temp23 + 0x20] + 0x01;\n                                                                                memory[temp23:temp23 + 0x20] = temp24;\n                                                                            \n                                                                                if (var5 == temp24) { stop(); }\n                                                                            \n                                                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_1425; }\n                                                                            \n                                                                            label_1421:\n                                                                                stop();\n                                                                            } else { revert(memory[0x00:0x00]); }\n                                                                        } else if (!msg.value) {\n                                                                            memory[0x0140:0x0260] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x0120];\n                                                                        \n                                                                            if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x0100) { revert(memory[0x00:0x00]); }\n                                                                        \n                                                                            var0 = memory[0x0140:0x0160];\n                                                                            var1 = memory[0x0160:0x0180];\n                                                                            var2 = memory[0x0180:0x01a0];\n                                                                            var3 = memory[0x01a0:0x01c0];\n                                                                            var4 = memory[0x01c0:0x01e0];\n                                                                            var5 = memory[0x01e0:0x0200];\n                                                                            var var6 = memory[0x0200:0x0220];\n                                                                            var var7 = memory[0x0220:0x0240];\n                                                                            var var8 = memory[0x0240:0x0260];\n                                                                            var var9 = memory[0x0260:0x0280];\n                                                                            memory[0x02a0:0x02c0] = 0x4cdc9549;\n                                                                            memory[0x02c0:0x02e0] = msg.sender;\n                                                                            memory[0x02e0:0x0300] = msg.data[0x24:0x44];\n                                                                            var var10 = memory[0x02e0:0x0300];\n                                                                            var var11 = memory[0x02c0:0x02e0];\n                                                                            var var12 = 0x06;\n                                                                            // Unhandled termination\n                                                                        } else { revert(memory[0x00:0x00]); }\n                                                                    } else if (!msg.value) {\n                                                                        memory[0x0140:0x0260] = msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x0120];\n                                                                    \n                                                                        if (msg.data[msg.data[0x04:0x24] + 0x04:msg.data[0x04:0x24] + 0x04 + 0x20] > 0x0100) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x03;\n                                                                    \n                                                                        if (storage[keccak256(memory[0xc0:0x0100])] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0x02c0:0x02e0] = 0x00;\n                                                                    \n                                                                        if (!(keccak256(memory[0x0140 + 0x20:0x0140 + 0x20 + memory[0x0140:0x0160]]) ~ keccak256(memory[0x02c0 + 0x20:0x02c0 + 0x20 + memory[0x02c0:0x02e0]]))) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0x0340:0x0360] = 0x00;\n                                                                        var0 = keccak256(memory[0x0340 + 0x20:0x0340 + 0x20 + memory[0x0340:0x0360]]);\n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x06;\n                                                                        var1 = keccak256(memory[0xc0:0x0100]);\n                                                                        var2 = var1;\n                                                                        memory[0xc0:0xe0] = var2;\n                                                                        var3 = keccak256(memory[0xc0:0xe0]);\n                                                                        var4 = 0x0380;\n                                                                        var temp25 = storage[var3] + 0x20;\n                                                                        var5 = temp25;\n                                                                        var6 = 0x0120;\n                                                                        memory[var6:var6 + 0x20] = 0x00;\n                                                                        var7 = 0x09;\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 > var5) { goto label_102C; }\n                                                                    \n                                                                    label_1030:\n                                                                        memory[var4 + memory[0x0120:0x0140] * 0x20:var4 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var3 + memory[0x0120:0x0140]];\n                                                                        var temp26 = var6;\n                                                                        var temp27 = memory[temp26:temp26 + 0x20] + 0x01;\n                                                                        memory[temp26:temp26 + 0x20] = temp27;\n                                                                    \n                                                                        if (var7 == temp27) { goto label_1052; }\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 <= var5) { goto label_1030; }\n                                                                    \n                                                                    label_102C:\n                                                                    \n                                                                    label_1052:\n                                                                        memory[0xc0:0xe0] = var1;\n                                                                    \n                                                                        if (keccak256(memory[0x03a0:0x03a0 + storage[keccak256(memory[0xc0:0xe0])]]) != var0) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        memory[0xe0:0x0100] = keccak256(memory[0x0160:0x0160 + memory[0x0140:0x0160]]);\n                                                                        memory[0xc0:0xe0] = 0x09;\n                                                                    \n                                                                        if (storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        var0 = 0x0140;\n                                                                        var1 = var0;\n                                                                        memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                        memory[0xc0:0xe0] = 0x06;\n                                                                        memory[0xc0:0xe0] = keccak256(memory[0xc0:0x0100]);\n                                                                        var2 = keccak256(memory[0xc0:0xe0]);\n                                                                        var temp28 = memory[var1:var1 + 0x20] + 0x20;\n                                                                        var3 = temp28;\n                                                                        var4 = 0x0120;\n                                                                        memory[var4:var4 + 0x20] = 0x00;\n                                                                        var5 = 0x09;\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_10CE; }\n                                                                    \n                                                                    label_10D2:\n                                                                        storage[var2 + memory[0x0120:0x0140]] = memory[var1 + memory[0x0120:0x0140] * 0x20:var1 + memory[0x0120:0x0140] * 0x20 + 0x20];\n                                                                        var temp29 = var4;\n                                                                        var temp30 = memory[temp29:temp29 + 0x20] + 0x01;\n                                                                        memory[temp29:temp29 + 0x20] = temp30;\n                                                                    \n                                                                        if (var5 == temp30) { goto label_10F4; }\n                                                                    \n                                                                        if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_10D2; }\n                                                                    \n                                                                    label_10CE:\n                                                                    \n                                                                    label_10F4:\n                                                                        memory[0x04c0:0x04e0] = 0x20;\n                                                                        memory[0x0500:0x0520] = memory[0x04c0:0x04e0];\n                                                                        var0 = 0x0140;\n                                                                        var temp31 = memory[var0:var0 + 0x20] + 0x20;\n                                                                        var1 = temp31;\n                                                                        var temp32;\n                                                                        temp32, memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + var1] = address(0x04).call.gas(msg.gas)(memory[var0:var0 + var1]);\n                                                                    \n                                                                        if (!temp32) { revert(memory[0x00:0x00]); }\n                                                                    \n                                                                        var temp33 = memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + 0x20];\n                                                                        var temp34 = (temp33 + 0x1f) - temp33 - 0x01 % 0x20 - temp33;\n                                                                        memory[memory[0x04c0:0x04e0] + 0x0500 + 0x20 + temp33:memory[0x04c0:0x04e0] + 0x0500 + 0x20 + temp33 + temp34] = msg.data[msg.data.length:msg.data.length + temp34];\n                                                                        var temp35 = memory[memory[0x04c0:0x04e0] + 0x0500:memory[0x04c0:0x04e0] + 0x0500 + 0x20];\n                                                                        memory[0x04c0:0x04e0] = memory[0x04c0:0x04e0] + ((temp35 + 0x1f) - temp35 - 0x01 % 0x20) + 0x20;\n                                                                        log(memory[0x0500:0x0500 + memory[0x04c0:0x04e0]], [0xec91067115fbcd85e5d9f3128d79abbbd79dd06ed35d47422db17c6de0f07647, msg.sender, msg.data[0x24:0x44]]);\n                                                                        stop();\n                                                                    } else { revert(memory[0x00:0x00]); }\n                                                                } else if (!msg.value) {\n                                                                    var0 = msg.data[0x04:0x24];\n                                                                \n                                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    var0 = msg.data[0x24:0x44];\n                                                                \n                                                                    if (var0 >= 0x02) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    if (!(msg.data[0x04:0x24] ~ msg.sender)) { revert(memory[0x00:0x00]); }\n                                                                \n                                                                    memory[0xe0:0x0100] = msg.sender;\n                                                                    memory[0xc0:0xe0] = 0x0c;\n                                                                    var temp36 = keccak256(memory[0xc0:0x0100]);\n                                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                                    memory[0xc0:0xe0] = temp36;\n                                                                    storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x24:0x44];\n                                                                    memory[0x0140:0x0160] = msg.data[0x24:0x44];\n                                                                    log(memory[0x0140:0x0160], [0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, msg.sender, msg.data[0x04:0x24]]);\n                                                                    stop();\n                                                                } else { revert(memory[0x00:0x00]); }\n                                                            } else if (!msg.value) {\n                                                                var0 = msg.data[0x04:0x24];\n                                                            \n                                                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                                memory[0xc0:0xe0] = 0x03;\n                                                                memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                            \n                                                                if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                if (memory[0x0140:0x0160] != msg.sender) { revert(memory[0x00:0x00]); }\n                                                            \n                                                                var0 = memory[0x0140:0x0160];\n                                                                memory[0x0180:0x01a0] = 0x91127c1f;\n                                                                memory[0x01a0:0x01c0] = msg.data[0x04:0x24];\n                                                                memory[0x01c0:0x01e0] = msg.data[0x24:0x44];\n                                                                var1 = memory[0x01c0:0x01e0];\n                                                                var2 = memory[0x01a0:0x01c0];\n                                                                var3 = 0x06;\n                                                                // Unhandled termination\n                                                            } else { revert(memory[0x00:0x00]); }\n                                                        } else if (!msg.value) {\n                                                            var0 = msg.data[0x04:0x24];\n                                                        \n                                                            if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x03;\n                                                            memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        \n                                                            if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            if (!(msg.data[0x04:0x24] ~ memory[0x0140:0x0160])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x03;\n                                                            memory[0x0160:0x0180] = storage[keccak256(memory[0xc0:0x0100])] == msg.sender;\n                                                            memory[0xe0:0x0100] = memory[0x0140:0x0160];\n                                                            memory[0xc0:0xe0] = 0x0c;\n                                                            var temp37 = keccak256(memory[0xc0:0x0100]);\n                                                            memory[0xe0:0x0100] = msg.sender;\n                                                            memory[0xc0:0xe0] = temp37;\n                                                            memory[0x0180:0x01a0] = storage[keccak256(memory[0xc0:0x0100])];\n                                                        \n                                                            if (!(memory[0x0160:0x0180] | memory[0x0180:0x01a0])) { revert(memory[0x00:0x00]); }\n                                                        \n                                                            memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                            memory[0xc0:0xe0] = 0x04;\n                                                            storage[keccak256(memory[0xc0:0x0100])] = msg.data[0x04:0x24];\n                                                            log(memory[0x00:0x00], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, memory[0x0140:0x0160], msg.data[0x04:0x24], msg.data[0x24:0x44]]);\n                                                            stop();\n                                                        } else { revert(memory[0x00:0x00]); }\n                                                    } else if (!msg.value) {\n                                                        var0 = msg.data[0x04:0x24];\n                                                    \n                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        var0 = msg.data[0x24:0x44];\n                                                    \n                                                        if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                    \n                                                        memory[0x0140:0x0160] = 0x092863fe;\n                                                        memory[0x0160:0x0180] = msg.data[0x04:0x24];\n                                                        memory[0x0180:0x01a0] = msg.data[0x24:0x44];\n                                                        memory[0x01a0:0x01c0] = msg.data[0x44:0x64];\n                                                        memory[0x01c0:0x01e0] = msg.sender;\n                                                        var0 = memory[0x01c0:0x01e0];\n                                                        var1 = memory[0x01a0:0x01c0];\n                                                        var2 = memory[0x0180:0x01a0];\n                                                        var3 = memory[0x0160:0x0180];\n                                                        var4 = 0x06;\n                                                        // Unhandled termination\n                                                    } else { revert(memory[0x00:0x00]); }\n                                                } else if (!msg.value) {\n                                                    var0 = msg.data[0x04:0x24];\n                                                \n                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                \n                                                    var0 = msg.data[0x24:0x44];\n                                                \n                                                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                                                \n                                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                    memory[0xc0:0xe0] = 0x0c;\n                                                    var temp53 = keccak256(memory[0xc0:0x0100]);\n                                                    memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                                    memory[0xc0:0xe0] = temp53;\n                                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                                    return memory[0x00:0x20];\n                                                } else { revert(memory[0x00:0x00]); }\n                                            } else if (!msg.value) {\n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x03;\n                                                memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                            \n                                                if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                            \n                                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                                memory[0xc0:0xe0] = 0x06;\n                                                var0 = keccak256(memory[0xc0:0x0100]);\n                                                memory[0xc0:0xe0] = var0;\n                                                var1 = keccak256(memory[0xc0:0xe0]);\n                                                var2 = 0x01a0;\n                                                var temp54 = storage[var1] + 0x20;\n                                                var3 = temp54;\n                                                var4 = 0x0120;\n                                                memory[var4:var4 + 0x20] = 0x00;\n                                                var5 = 0x09;\n                                            \n                                                if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_0476; }\n                                            \n                                            label_047A:\n                                                memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                                var temp55 = var4;\n                                                var temp56 = memory[temp55:temp55 + 0x20] + 0x01;\n                                                memory[temp55:temp55 + 0x20] = temp56;\n                                            \n                                                if (var5 == temp56) { goto label_049C; }\n                                            \n                                                if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_047A; }\n                                            \n                                            label_0476:\n                                            \n                                            label_049C:\n                                                var temp57 = memory[0x01a0:0x01c0];\n                                                var temp58 = (temp57 + 0x1f) - temp57 - 0x01 % 0x20 - temp57;\n                                                memory[temp57 + 0x01c0:temp57 + 0x01c0 + temp58] = msg.data[msg.data.length:msg.data.length + temp58];\n                                                memory[0x0180:0x01a0] = 0x20;\n                                                var temp59 = memory[0x01a0:0x01c0] + 0x40;\n                                                return memory[0x0180:0x0180 + (temp59 + 0x1f) - temp59 - 0x01 % 0x20];\n                                            } else { revert(memory[0x00:0x00]); }\n                                        } else if (!msg.value) {\n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x03;\n                                            memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                                        \n                                            if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                        \n                                            memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                            memory[0xc0:0xe0] = 0x05;\n                                            var0 = keccak256(memory[0xc0:0x0100]);\n                                            memory[0xc0:0xe0] = var0;\n                                            var1 = keccak256(memory[0xc0:0xe0]);\n                                            var2 = 0x01a0;\n                                            var temp60 = storage[var1] + 0x20;\n                                            var3 = temp60;\n                                            var4 = 0x0120;\n                                            memory[var4:var4 + 0x20] = 0x00;\n                                            var5 = 0x09;\n                                        \n                                            if (memory[0x0120:0x0140] * 0x20 > var3) { goto label_038F; }\n                                        \n                                        label_0393:\n                                            memory[var2 + memory[0x0120:0x0140] * 0x20:var2 + memory[0x0120:0x0140] * 0x20 + 0x20] = storage[var1 + memory[0x0120:0x0140]];\n                                            var temp61 = var4;\n                                            var temp62 = memory[temp61:temp61 + 0x20] + 0x01;\n                                            memory[temp61:temp61 + 0x20] = temp62;\n                                        \n                                            if (var5 == temp62) { goto label_03B5; }\n                                        \n                                            if (memory[0x0120:0x0140] * 0x20 <= var3) { goto label_0393; }\n                                        \n                                        label_038F:\n                                        \n                                        label_03B5:\n                                            var temp63 = memory[0x01a0:0x01c0];\n                                            var temp64 = (temp63 + 0x1f) - temp63 - 0x01 % 0x20 - temp63;\n                                            memory[temp63 + 0x01c0:temp63 + 0x01c0 + temp64] = msg.data[msg.data.length:msg.data.length + temp64];\n                                            memory[0x0180:0x01a0] = 0x20;\n                                            var temp65 = memory[0x01a0:0x01c0] + 0x40;\n                                            return memory[0x0180:0x0180 + (temp65 + 0x1f) - temp65 - 0x01 % 0x20];\n                                        } else { revert(memory[0x00:0x00]); }\n                                    } else if (!msg.value) {\n                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                        memory[0xc0:0xe0] = 0x03;\n                                    \n                                        if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                    \n                                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                        memory[0xc0:0xe0] = 0x07;\n                                        memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                        return memory[0x00:0x20];\n                                    } else { revert(memory[0x00:0x00]); }\n                                } else if (!msg.value) {\n                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                    memory[0xc0:0xe0] = 0x03;\n                                \n                                    if (!(storage[keccak256(memory[0xc0:0x0100])] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                                \n                                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                    memory[0xc0:0xe0] = 0x04;\n                                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                    return memory[0x00:0x20];\n                                } else { revert(memory[0x00:0x00]); }\n                            } else if (!msg.value) {\n                                var0 = msg.data[0x04:0x24];\n                            \n                                if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                            \n                                if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                memory[0xc0:0xe0] = 0x0b;\n                            \n                                if (msg.data[0x24:0x44] >= storage[keccak256(memory[0xc0:0x0100])]) { revert(memory[0x00:0x00]); }\n                            \n                                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                                memory[0xc0:0xe0] = 0x0a;\n                                var temp66 = keccak256(memory[0xc0:0x0100]);\n                                memory[0xe0:0x0100] = msg.data[0x24:0x44];\n                                memory[0xc0:0xe0] = temp66;\n                                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                                return memory[0x00:0x20];\n                            } else { revert(memory[0x00:0x00]); }\n                        } else if (!msg.value) {\n                            if (msg.data[0x04:0x24] >= storage[0x10]) { revert(memory[0x00:0x00]); }\n                        \n                            var temp67 = msg.data[0x04:0x24];\n                            var0 = temp67;\n                            var1 = 0x01;\n                        \n                            if (var0 + var1 < var0) { revert(memory[0x00:0x00]); }\n                        \n                            memory[0x00:0x20] = var0 + var1;\n                            return memory[0x00:0x20];\n                        } else { revert(memory[0x00:0x00]); }\n                    } else if (!msg.value) {\n                        memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                        memory[0xc0:0xe0] = 0x03;\n                        memory[0x0140:0x0160] = storage[keccak256(memory[0xc0:0x0100])];\n                    \n                        if (!(memory[0x0140:0x0160] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                    \n                        memory[0x00:0x20] = memory[0x0140:0x0160];\n                        return memory[0x00:0x20];\n                    } else { revert(memory[0x00:0x00]); }\n                } else if (!msg.value) {\n                    var0 = msg.data[0x04:0x24];\n                \n                    if (var0 >= memory[0x20:0x40]) { revert(memory[0x00:0x00]); }\n                \n                    if (!(msg.data[0x04:0x24] ~ 0x00)) { revert(memory[0x00:0x00]); }\n                \n                    memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                    memory[0xc0:0xe0] = 0x0b;\n                    memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                    return memory[0x00:0x20];\n                } else { revert(memory[0x00:0x00]); }\n            } else if (!msg.value) {\n                memory[0xe0:0x0100] = msg.data[0x04:0x24];\n                memory[0xc0:0xe0] = 0x0d;\n                memory[0x00:0x20] = storage[keccak256(memory[0xc0:0x0100])];\n                return memory[0x00:0x20];\n            } else { revert(memory[0x00:0x00]); }\n        } else if (!msg.value) {\n            memory[0x00:0x20] = storage[0x10];\n            return memory[0x00:0x20];\n        } else { revert(memory[0x00:0x00]); }\n    }\n}\n\n.",
	"status": "1",
	"time_cost": 40.933353424072266,
	"usage": {
		"completion_tokens": 531,
		"prompt_tokens": 15445,
		"total_tokens": 15976
	}
}