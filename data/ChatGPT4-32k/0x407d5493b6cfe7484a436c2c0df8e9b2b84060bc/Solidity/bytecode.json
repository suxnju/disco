{
	"address": "0x407d5493b6cfe7484a436c2c0df8e9b2b84060bc",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is the Solidity code for the given bytecode:\n\n```solidity\npragma solidity ^0.8.1;\n\ncontract ERC20 {\n    mapping (address => uint256) private _balances;\n    mapping (address => mapping (address => uint256)) private _allowances;\n    \n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n    uint256 private _totalSupply;\n\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n        _balances[msg.sender] -= amount;\n        _balances[recipient] += amount;\n        emit Transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) public returns (bool) {\n        _allowances[msg.sender][spender] = amount;\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n        _allowances[sender][msg.sender] -= amount;\n        _balances[sender] -= amount;\n        _balances[recipient] += amount;\n        emit Transfer(sender, recipient, amount);\n        return true;\n    }\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n```\n\nPlease note that the above code is not guaranteed to be 100% correct. The bytecode you provided is a low-level representation of a Solidity program, and it is not always possible to accurately recreate the original high-level source code. This is especially true if the contract uses complex features like inline assembly or if the contract was optimized during compilation.\n",
				"role": "assistant"
			}
		}
	],
	"created": 1701469440,
	"id": "chatcmpl-8R6DQVKCnLmgOAyU0Uksiyxub3NQz",
	"input_format": "Bytecode",
	"ir": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80636ed699f0116100ad57806395d89b411161007157806395d89b4114610265578063a457c2d71461026d578063a9059cbb14610280578063bc4c851c14610293578063dd62ed3e146102a657600080fd5b80636ed699f0146101e557806370a0823114610210578063715018a61461023957806380b2122e146102415780638da5cb5b1461025457600080fd5b806323b872dd116100f457806323b872dd1461018657806324119c0c14610199578063313ce567146101b957806339509351146101c85780635a49db78146101db57600080fd5b806306fdde0314610126578063095ea7b31461014457806317dd48551461016757806318160ddd1461017e575b600080fd5b61012e6102b9565b60405161013b91906109f5565b60405180910390f35b610157610152366004610a5f565b61034b565b604051901515815260200161013b565b610170600a5481565b60405190815260200161013b565b600354610170565b610157610194366004610a89565b610362565b6101706101a7366004610ac5565b60086020526000908152604090205481565b6040516012815260200161013b565b6101576101d6366004610a5f565b610386565b6101e36103b2565b005b6002546101f8906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61017061021e366004610ac5565b6001600160a01b031660009081526006602052604090205490565b6101e36103ff565b6101e361024f366004610ac5565b610413565b6000546001600160a01b03166101f8565b61012e610451565b61015761027b366004610a5f565b610460565b61015761028e366004610a5f565b6104e2565b6101e36102a1366004610ac5565b6104ef565b6101706102b4366004610ae7565b610529565b6060600480546102c890610b1a565b80601f01602080910402602001604051908101604052809291908181526020018280546102f490610b1a565b80156103415780601f1061031657610100808354040283529160200191610341565b820191906000526020600020905b81548152906001019060200180831161032457829003601f168201915b5050505050905090565b6000610358338484610554565b5060015b92915050565b600033610370858285610678565b61037b8585856106f4565b506001949350505050565b6000336103a88185856103998383610529565b6103a39190610b6a565b610554565b5060019392505050565b60095433600081815260066020526040812080549293929091906103d7908490610b6a565b90915550506002546001600160a01b0316336001600160a01b0316146103fc57600080fd5b50565b61040761094b565b61041160006109a5565b565b6002546001600160a01b0316336001600160a01b03161461043357600080fd5b6001600160a01b03166000908152600860205260409020612fc99055565b6060600580546102c890610b1a565b6000338161046e8286610529565b9050838110156104d35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61037b82866103a38785610b7d565b60006103583384846106f4565b6002546001600160a01b0316336001600160a01b03161461050f57600080fd5b6001600160a01b0316600090815260086020526040812055565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b6001600160a01b0383166105b65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104ca565b6001600160a01b0382166106175760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104ca565b6001600160a01b0383811660008181526007602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006106848484610529565b905060001981146106ee57818110156106df5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104ca565b6106ee84846103a38585610b7d565b50505050565b6001600160a01b038316600090815260086020526040902054600a5484919003610756576001600160a01b03811660009081526006602090815260408083205460089092529091205460019161074991610b6a565b6107539190610b7d565b91505b6001600160a01b0384166107ba5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104ca565b6001600160a01b03831661081c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104ca565b6001600160a01b038416600090815260066020526040902054828110156108945760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104ca565b6001600160a01b0385166000908152600660205260409020546108b8908490610b7d565b6001600160a01b0380871660009081526006602052604080822093909355908616815220546108e8908490610b6a565b6001600160a01b0380861660008181526006602052604090819020939093559151908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061093c9087815260200190565b60405180910390a35050505050565b6000546001600160a01b031633146104115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104ca565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208083528351808285015260005b81811015610a2257858101830151858201604001528201610a06565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a5a57600080fd5b919050565b60008060408385031215610a7257600080fd5b610a7b83610a43565b946020939093013593505050565b600080600060608486031215610a9e57600080fd5b610aa784610a43565b9250610ab560208501610a43565b9150604084013590509250925092565b600060208284031215610ad757600080fd5b610ae082610a43565b9392505050565b60008060408385031215610afa57600080fd5b610b0383610a43565b9150610b1160208401610a43565b90509250929050565b600181811c90821680610b2e57607f821691505b602082108103610b4e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561035c5761035c610b54565b8181038181111561035c5761035c610b5456fea26469706673582212201f3004a949e31c2359699bfca17a6972de299f52c69c6e69654ed13cf7265b9d64736f6c63430008130033",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following smart contract bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the bytecode: 0x608060405234801561001057600080fd5b50600436106101215760003560e01c80636ed699f0116100ad57806395d89b411161007157806395d89b4114610265578063a457c2d71461026d578063a9059cbb14610280578063bc4c851c14610293578063dd62ed3e146102a657600080fd5b80636ed699f0146101e557806370a0823114610210578063715018a61461023957806380b2122e146102415780638da5cb5b1461025457600080fd5b806323b872dd116100f457806323b872dd1461018657806324119c0c14610199578063313ce567146101b957806339509351146101c85780635a49db78146101db57600080fd5b806306fdde0314610126578063095ea7b31461014457806317dd48551461016757806318160ddd1461017e575b600080fd5b61012e6102b9565b60405161013b91906109f5565b60405180910390f35b610157610152366004610a5f565b61034b565b604051901515815260200161013b565b610170600a5481565b60405190815260200161013b565b600354610170565b610157610194366004610a89565b610362565b6101706101a7366004610ac5565b60086020526000908152604090205481565b6040516012815260200161013b565b6101576101d6366004610a5f565b610386565b6101e36103b2565b005b6002546101f8906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61017061021e366004610ac5565b6001600160a01b031660009081526006602052604090205490565b6101e36103ff565b6101e361024f366004610ac5565b610413565b6000546001600160a01b03166101f8565b61012e610451565b61015761027b366004610a5f565b610460565b61015761028e366004610a5f565b6104e2565b6101e36102a1366004610ac5565b6104ef565b6101706102b4366004610ae7565b610529565b6060600480546102c890610b1a565b80601f01602080910402602001604051908101604052809291908181526020018280546102f490610b1a565b80156103415780601f1061031657610100808354040283529160200191610341565b820191906000526020600020905b81548152906001019060200180831161032457829003601f168201915b5050505050905090565b6000610358338484610554565b5060015b92915050565b600033610370858285610678565b61037b8585856106f4565b506001949350505050565b6000336103a88185856103998383610529565b6103a39190610b6a565b610554565b5060019392505050565b60095433600081815260066020526040812080549293929091906103d7908490610b6a565b90915550506002546001600160a01b0316336001600160a01b0316146103fc57600080fd5b50565b61040761094b565b61041160006109a5565b565b6002546001600160a01b0316336001600160a01b03161461043357600080fd5b6001600160a01b03166000908152600860205260409020612fc99055565b6060600580546102c890610b1a565b6000338161046e8286610529565b9050838110156104d35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61037b82866103a38785610b7d565b60006103583384846106f4565b6002546001600160a01b0316336001600160a01b03161461050f57600080fd5b6001600160a01b0316600090815260086020526040812055565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b6001600160a01b0383166105b65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104ca565b6001600160a01b0382166106175760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104ca565b6001600160a01b0383811660008181526007602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006106848484610529565b905060001981146106ee57818110156106df5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104ca565b6106ee84846103a38585610b7d565b50505050565b6001600160a01b038316600090815260086020526040902054600a5484919003610756576001600160a01b03811660009081526006602090815260408083205460089092529091205460019161074991610b6a565b6107539190610b7d565b91505b6001600160a01b0384166107ba5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104ca565b6001600160a01b03831661081c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104ca565b6001600160a01b038416600090815260066020526040902054828110156108945760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104ca565b6001600160a01b0385166000908152600660205260409020546108b8908490610b7d565b6001600160a01b0380871660009081526006602052604080822093909355908616815220546108e8908490610b6a565b6001600160a01b0380861660008181526006602052604090819020939093559151908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061093c9087815260200190565b60405180910390a35050505050565b6000546001600160a01b031633146104115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104ca565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208083528351808285015260005b81811015610a2257858101830151858201604001528201610a06565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a5a57600080fd5b919050565b60008060408385031215610a7257600080fd5b610a7b83610a43565b946020939093013593505050565b600080600060608486031215610a9e57600080fd5b610aa784610a43565b9250610ab560208501610a43565b9150604084013590509250925092565b600060208284031215610ad757600080fd5b610ae082610a43565b9392505050565b60008060408385031215610afa57600080fd5b610b0383610a43565b9150610b1160208401610a43565b90509250929050565b600181811c90821680610b2e57607f821691505b602082108103610b4e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561035c5761035c610b54565b8181038181111561035c5761035c610b5456fea26469706673582212201f3004a949e31c2359699bfca17a6972de299f52c69c6e69654ed13cf7265b9d64736f6c63430008130033.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following smart contract bytecode.The following is the bytecode: 0x608060405234801561001057600080fd5b50600436106101215760003560e01c80636ed699f0116100ad57806395d89b411161007157806395d89b4114610265578063a457c2d71461026d578063a9059cbb14610280578063bc4c851c14610293578063dd62ed3e146102a657600080fd5b80636ed699f0146101e557806370a0823114610210578063715018a61461023957806380b2122e146102415780638da5cb5b1461025457600080fd5b806323b872dd116100f457806323b872dd1461018657806324119c0c14610199578063313ce567146101b957806339509351146101c85780635a49db78146101db57600080fd5b806306fdde0314610126578063095ea7b31461014457806317dd48551461016757806318160ddd1461017e575b600080fd5b61012e6102b9565b60405161013b91906109f5565b60405180910390f35b610157610152366004610a5f565b61034b565b604051901515815260200161013b565b610170600a5481565b60405190815260200161013b565b600354610170565b610157610194366004610a89565b610362565b6101706101a7366004610ac5565b60086020526000908152604090205481565b6040516012815260200161013b565b6101576101d6366004610a5f565b610386565b6101e36103b2565b005b6002546101f8906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61017061021e366004610ac5565b6001600160a01b031660009081526006602052604090205490565b6101e36103ff565b6101e361024f366004610ac5565b610413565b6000546001600160a01b03166101f8565b61012e610451565b61015761027b366004610a5f565b610460565b61015761028e366004610a5f565b6104e2565b6101e36102a1366004610ac5565b6104ef565b6101706102b4366004610ae7565b610529565b6060600480546102c890610b1a565b80601f01602080910402602001604051908101604052809291908181526020018280546102f490610b1a565b80156103415780601f1061031657610100808354040283529160200191610341565b820191906000526020600020905b81548152906001019060200180831161032457829003601f168201915b5050505050905090565b6000610358338484610554565b5060015b92915050565b600033610370858285610678565b61037b8585856106f4565b506001949350505050565b6000336103a88185856103998383610529565b6103a39190610b6a565b610554565b5060019392505050565b60095433600081815260066020526040812080549293929091906103d7908490610b6a565b90915550506002546001600160a01b0316336001600160a01b0316146103fc57600080fd5b50565b61040761094b565b61041160006109a5565b565b6002546001600160a01b0316336001600160a01b03161461043357600080fd5b6001600160a01b03166000908152600860205260409020612fc99055565b6060600580546102c890610b1a565b6000338161046e8286610529565b9050838110156104d35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61037b82866103a38785610b7d565b60006103583384846106f4565b6002546001600160a01b0316336001600160a01b03161461050f57600080fd5b6001600160a01b0316600090815260086020526040812055565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b6001600160a01b0383166105b65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104ca565b6001600160a01b0382166106175760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104ca565b6001600160a01b0383811660008181526007602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006106848484610529565b905060001981146106ee57818110156106df5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104ca565b6106ee84846103a38585610b7d565b50505050565b6001600160a01b038316600090815260086020526040902054600a5484919003610756576001600160a01b03811660009081526006602090815260408083205460089092529091205460019161074991610b6a565b6107539190610b7d565b91505b6001600160a01b0384166107ba5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104ca565b6001600160a01b03831661081c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104ca565b6001600160a01b038416600090815260066020526040902054828110156108945760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104ca565b6001600160a01b0385166000908152600660205260409020546108b8908490610b7d565b6001600160a01b0380871660009081526006602052604080822093909355908616815220546108e8908490610b6a565b6001600160a01b0380861660008181526006602052604090819020939093559151908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061093c9087815260200190565b60405180910390a35050505050565b6000546001600160a01b031633146104115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104ca565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208083528351808285015260005b81811015610a2257858101830151858201604001528201610a06565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a5a57600080fd5b919050565b60008060408385031215610a7257600080fd5b610a7b83610a43565b946020939093013593505050565b600080600060608486031215610a9e57600080fd5b610aa784610a43565b9250610ab560208501610a43565b9150604084013590509250925092565b600060208284031215610ad757600080fd5b610ae082610a43565b9392505050565b60008060408385031215610afa57600080fd5b610b0383610a43565b9150610b1160208401610a43565b90509250929050565b600181811c90821680610b2e57607f821691505b602082108103610b4e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561035c5761035c610b54565b8181038181111561035c5761035c610b5456fea26469706673582212201f3004a949e31c2359699bfca17a6972de299f52c69c6e69654ed13cf7265b9d64736f6c63430008130033.",
	"status": "1",
	"time_cost": 21.27006983757019,
	"usage": {
		"completion_tokens": 570,
		"prompt_tokens": 2616,
		"total_tokens": 3186
	}
}