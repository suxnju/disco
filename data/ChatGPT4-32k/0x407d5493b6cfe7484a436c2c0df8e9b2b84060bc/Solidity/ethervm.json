{
	"address": "0x407d5493b6cfe7484a436c2c0df8e9b2b84060bc",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is Solidity code developed from the given pseudocode:\n\n```solidity\npragma solidity >=0.5.0 <0.9.0;\n\ncontract Contract {\n    mapping(address => mapping(address => uint256)) private allowances;\n    mapping(address => uint256) private balances;\n    uint256 private totalSupply_;\n    address private owner_;\n    uint8 private constant decimals_ = 18;\n    string private constant name_ = \"Token\";\n    string private constant symbol_ = \"TKN\";\n    \n    modifier onlyOwner {\n        require(msg.sender == owner_, \"Only owner can call this function.\");\n        _;\n    }\n    \n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        require(balances[msg.sender] >= _value);\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(balances[_from] >= _value && allowances[_from][msg.sender] >= _value);\n        balances[_from] -= _value;\n        balances[_to] += _value;\n        allowances[_from][msg.sender] -= _value;\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowances[msg.sender][_spender] = _value;\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        return allowances[_owner][_spender];\n    }\n    \n    function totalSupply() public view returns (uint256) {\n        return totalSupply_;\n    }\n    \n    function name() public view returns (string memory) {\n        return name_;\n    }\n    \n    function symbol() public view returns (string memory) {\n        return symbol_;\n    }\n    \n    function decimals() public view returns (uint8) {\n        return decimals_;\n    }\n    \n    function owner() public view returns (address) {\n        return owner_;\n    }\n    \n    function renounceOwnership() public onlyOwner {\n        owner_ = address(0);\n    }\n}\n```\n\nPlease note that the above Solidity code may not reflect the exact functionality of the given pseudocode, as there are some parts in the pseudocode that can't be directly translated into Solidity. Some functions are not well defined and don't match typical patterns seen in smart contract development. Additionally, the pseudocode has some unresolved jump destinations and method call return addresses, which could not be translated into Solidity.",
				"role": "assistant"
			}
		}
	],
	"created": 1700631856,
	"id": "chatcmpl-8NaK0jAK9c2PWK0OgANljsW1itdbl",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x80;\n        var var0 = msg.value;\n    \n        if (var0) { revert(memory[0x00:0x00]); }\n    \n        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }\n    \n        var0 = msg.data[0x00:0x20] >> 0xe0;\n    \n        if (0x6ed699f0 > var0) {\n            if (0x23b872dd > var0) {\n                if (var0 == 0x06fdde03) {\n                    // Dispatch table entry for name()\n                    var var1 = 0x012e;\n                    var1 = func_02B9();\n                \n                label_012E:\n                    var temp0 = var1;\n                    var1 = 0x013b;\n                    var var2 = temp0;\n                    var var3 = memory[0x40:0x60];\n                    var1 = func_09F5(var2, var3);\n                \n                label_013B:\n                    var temp1 = memory[0x40:0x60];\n                    return memory[temp1:temp1 + var1 - temp1];\n                } else if (var0 == 0x095ea7b3) {\n                    // Dispatch table entry for approve(address,uint256)\n                    var1 = 0x0157;\n                    var2 = 0x0152;\n                    var3 = msg.data.length;\n                    var var4 = 0x04;\n                    var2, var3 = func_0A5F(var3, var4);\n                    var4 = 0x00;\n                    var var5 = 0x0358;\n                    var var6 = msg.sender;\n                    var var7 = var2;\n                    var var8 = var3;\n                    func_0554(var6, var7, var8);\n                \n                label_0358:\n                    var4 = 0x01;\n                    var1 = var4;\n                    // Error: Could not resolve jump destination!\n                } else if (var0 == 0x17dd4855) {\n                    // Dispatch table entry for 0x17dd4855 (unknown)\n                    var1 = 0x0170;\n                    var2 = storage[0x0a];\n                \n                label_0170:\n                    var temp2 = memory[0x40:0x60];\n                    memory[temp2:temp2 + 0x20] = var2;\n                    var2 = temp2 + 0x20;\n                    goto label_013B;\n                } else if (var0 == 0x18160ddd) {\n                    // Dispatch table entry for totalSupply()\n                    var1 = storage[0x03];\n                    goto label_0170;\n                } else { revert(memory[0x00:0x00]); }\n            } else if (var0 == 0x23b872dd) {\n                // Dispatch table entry for transferFrom(address,address,uint256)\n                var1 = 0x0157;\n                var2 = 0x0194;\n                var3 = msg.data.length;\n                var4 = 0x04;\n                var2, var3, var4 = func_0A89(var3, var4);\n                var5 = 0x00;\n                var6 = msg.sender;\n                var7 = 0x0370;\n                var8 = var2;\n                var var9 = var6;\n                var var10 = var4;\n                func_0678(var8, var9, var10);\n                var7 = 0x037b;\n                var8 = var2;\n                var9 = var3;\n                var10 = var4;\n                func_06F4(var8, var9, var10);\n                var1 = 0x01;\n                // Error: Could not resolve jump destination!\n            } else if (var0 == 0x24119c0c) {\n                // Dispatch table entry for 0x24119c0c (unknown)\n                var1 = 0x0170;\n                var2 = 0x01a7;\n                var3 = msg.data.length;\n                var4 = 0x04;\n                var2 = func_0AC5(var3, var4);\n                var2 = func_01A7(var2);\n                goto label_0170;\n            } else if (var0 == 0x313ce567) {\n                // Dispatch table entry for decimals()\n                var temp3 = memory[0x40:0x60];\n                memory[temp3:temp3 + 0x20] = 0x12;\n                var1 = temp3 + 0x20;\n                goto label_013B;\n            } else if (var0 == 0x39509351) {\n                // Dispatch table entry for increaseAllowance(address,uint256)\n                var1 = 0x0157;\n                var2 = 0x01d6;\n                var3 = msg.data.length;\n                var4 = 0x04;\n                var2, var3 = func_0A5F(var3, var4);\n                var1 = func_01D6(var2, var3);\n            \n            label_0157:\n                var temp4 = memory[0x40:0x60];\n                memory[temp4:temp4 + 0x20] = !!var1;\n                var1 = temp4 + 0x20;\n                goto label_013B;\n            } else if (var0 == 0x5a49db78) {\n                // Dispatch table entry for 0x5a49db78 (unknown)\n                var1 = 0x01e3;\n                func_03B2();\n                stop();\n            } else { revert(memory[0x00:0x00]); }\n        } else if (0x95d89b41 > var0) {\n            if (var0 == 0x6ed699f0) {\n                // Dispatch table entry for 0x6ed699f0 (unknown)\n                var1 = 0x01f8;\n                var2 = storage[0x02] & (0x01 << 0xa0) - 0x01;\n            \n            label_01F8:\n                var temp5 = memory[0x40:0x60];\n                memory[temp5:temp5 + 0x20] = var2 & (0x01 << 0xa0) - 0x01;\n                var2 = temp5 + 0x20;\n                goto label_013B;\n            } else if (var0 == 0x70a08231) {\n                // Dispatch table entry for balanceOf(address)\n                var1 = 0x0170;\n                var2 = 0x021e;\n                var3 = msg.data.length;\n                var4 = 0x04;\n                var2 = func_0AC5(var3, var4);\n                var1 = func_021E(var2);\n                goto label_0170;\n            } else if (var0 == 0x715018a6) {\n                // Dispatch table entry for renounceOwnership()\n                var1 = 0x01e3;\n                var2 = 0x0407;\n                func_094B();\n                var2 = 0x0411;\n                var3 = 0x00;\n                func_09A5(var3);\n                // Error: Could not resolve jump destination!\n            } else if (var0 == 0x80b2122e) {\n                // Dispatch table entry for decreaseAllowance(address)\n                var1 = 0x01e3;\n                var2 = 0x024f;\n                var3 = msg.data.length;\n                var4 = 0x04;\n                var2 = func_0AC5(var3, var4);\n                func_024F(var2);\n                stop();\n            } else if (var0 == 0x8da5cb5b) {\n                // Dispatch table entry for owner()\n                var1 = storage[0x00] & (0x01 << 0xa0) - 0x01;\n                goto label_01F8;\n            } else { revert(memory[0x00:0x00]); }\n        } else if (var0 == 0x95d89b41) {\n            // Dispatch table entry for symbol()\n            var1 = 0x012e;\n            var1 = symbol();\n            goto label_012E;\n        } else if (var0 == 0xa457c2d7) {\n            // Dispatch table entry for decreaseAllowance(address,uint256)\n            var1 = 0x0157;\n            var2 = 0x027b;\n            var3 = msg.data.length;\n            var4 = 0x04;\n            var2, var3 = func_0A5F(var3, var4);\n            var1 = func_027B(var2, var3);\n            goto label_0157;\n        } else if (var0 == 0xa9059cbb) {\n            // Dispatch table entry for transfer(address,uint256)\n            var1 = 0x0157;\n            var2 = 0x028e;\n            var3 = msg.data.length;\n            var4 = 0x04;\n            var2, var3 = func_0A5F(var3, var4);\n            var4 = 0x00;\n            var5 = 0x0358;\n            var6 = msg.sender;\n            var7 = var2;\n            var8 = var3;\n            func_06F4(var6, var7, var8);\n            goto label_0358;\n        } else if (var0 == 0xbc4c851c) {\n            // Dispatch table entry for 0xbc4c851c (unknown)\n            var1 = 0x01e3;\n            var2 = 0x02a1;\n            var3 = msg.data.length;\n            var4 = 0x04;\n            var2 = func_0AC5(var3, var4);\n            func_02A1(var2);\n            stop();\n        } else if (var0 == 0xdd62ed3e) {\n            // Dispatch table entry for allowance(address,address)\n            var1 = 0x0170;\n            var2 = 0x02b4;\n            var3 = msg.data.length;\n            var4 = 0x04;\n            var2, var3 = func_0AE7(var3, var4);\n            var1 = func_02B4(var2, var3);\n            goto label_0170;\n        } else { revert(memory[0x00:0x00]); }\n    }\n    \n    function func_01A7(var arg0) returns (var arg0) {\n        memory[0x20:0x40] = 0x08;\n        memory[0x00:0x20] = arg0;\n        return storage[keccak256(memory[0x00:0x40])];\n    }\n    \n    function func_01D6(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = msg.sender;\n        var var2 = 0x03a8;\n        var var3 = var1;\n        var var4 = arg0;\n        var var5 = arg1;\n        var var6 = 0x0399;\n        var var7 = var3;\n        var var8 = var4;\n        var6 = func_0529(var7, var8);\n        func_0399(var3, var4, var5, var6);\n        return 0x01;\n    }\n    \n    function func_021E(var arg0) returns (var r0) {\n        memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n        memory[0x20:0x40] = 0x06;\n        return storage[keccak256(memory[0x00:0x40])];\n    }\n    \n    function func_024F(var arg0) {\n        if (msg.sender != storage[0x02] & (0x01 << 0xa0) - 0x01) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n        memory[0x20:0x40] = 0x08;\n        storage[keccak256(memory[0x00:0x40])] = 0x2fc9;\n    }\n    \n    function func_027B(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = msg.sender;\n        var var2 = var0;\n        var var3 = 0x046e;\n        var var4 = var1;\n        var var5 = arg0;\n        var3 = func_0529(var4, var5);\n        var2 = var3;\n    \n        if (var2 >= arg1) {\n            var3 = 0x037b;\n            var4 = var1;\n            var5 = arg0;\n            var var6 = 0x03a3;\n            var var7 = arg1;\n            var var8 = var2;\n            var6 = func_0B7D(var7, var8);\n            func_03A3(var4, var5, var6);\n            return 0x01;\n        } else {\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = 0x461bcd << 0xe5;\n            memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = 0x20;\n            memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = 0x25;\n            memory[temp0 + 0x44:temp0 + 0x44 + 0x20] = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n            memory[temp0 + 0x64:temp0 + 0x64 + 0x20] = 0x207a65726f << 0xd8;\n            var3 = temp0 + 0x84;\n            var temp1 = memory[0x40:0x60];\n            revert(memory[temp1:temp1 + var3 - temp1]);\n        }\n    }\n    \n    function func_02A1(var arg0) {\n        if (msg.sender != storage[0x02] & (0x01 << 0xa0) - 0x01) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n        memory[0x20:0x40] = 0x08;\n        storage[keccak256(memory[0x00:0x40])] = 0x00;\n    }\n    \n    function func_02B4(var arg0, var arg1) returns (var r0) {\n        r0 = func_0529(arg0, arg1);\n        // Error: Could not resolve method call return address!\n    }\n    \n    function func_02B9() returns (var r0) {\n        var var0 = 0x60;\n        var var1 = 0x04;\n        var var2 = 0x02c8;\n        var var3 = storage[var1];\n        var2 = func_0B1A(var3);\n        var temp0 = var2;\n        var temp1 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp1 + (temp0 + 0x1f) / 0x20 * 0x20 + 0x20;\n        var temp2 = var1;\n        var1 = temp1;\n        var2 = temp2;\n        var3 = temp0;\n        memory[var1:var1 + 0x20] = var3;\n        var var4 = var1 + 0x20;\n        var var5 = var2;\n        var var7 = storage[var5];\n        var var6 = 0x02f4;\n        var6 = func_0B1A(var7);\n    \n        if (!var6) {\n        label_0341:\n            return var1;\n        } else if (0x1f < var6) {\n            var temp3 = var4;\n            var temp4 = temp3 + var6;\n            var4 = temp4;\n            memory[0x00:0x20] = var5;\n            var temp5 = keccak256(memory[0x00:0x20]);\n            memory[temp3:temp3 + 0x20] = storage[temp5];\n            var5 = temp5 + 0x01;\n            var6 = temp3 + 0x20;\n        \n            if (var4 <= var6) { goto label_0338; }\n        \n        label_0324:\n            var temp6 = var5;\n            var temp7 = var6;\n            memory[temp7:temp7 + 0x20] = storage[temp6];\n            var5 = temp6 + 0x01;\n            var6 = temp7 + 0x20;\n        \n            if (var4 > var6) { goto label_0324; }\n        \n        label_0338:\n            var temp8 = var4;\n            var temp9 = temp8 + (var6 - temp8 & 0x1f);\n            var6 = temp8;\n            var4 = temp9;\n            goto label_0341;\n        } else {\n            var temp10 = var4;\n            memory[temp10:temp10 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n            var4 = temp10 + 0x20;\n            var6 = var6;\n            goto label_0341;\n        }\n    }\n    \n    function func_0399(var arg0, var arg1, var arg2, var arg3) {\n        var temp0 = arg2;\n        arg2 = 0x03a3;\n        var temp1 = arg3;\n        arg3 = temp0;\n        var var0 = temp1;\n        arg2 = func_0B6A(arg3, var0);\n        func_03A3(arg0, arg1, arg2);\n        // Error: Could not resolve method call return address!\n    }\n    \n    function func_03A3(var arg0, var arg1, var arg2) {\n        func_0554(arg0, arg1, arg2);\n        // Error: Could not resolve method call return address!\n    }\n    \n    function func_03B2() {\n        memory[0x00:0x20] = msg.sender;\n        memory[0x20:0x40] = 0x06;\n        var var0 = msg.sender;\n        var var1 = storage[0x09];\n        var var2 = keccak256(memory[0x00:0x40]);\n        var var3 = 0x00;\n        var var4 = 0x03d7;\n        var var5 = var1;\n        var var6 = storage[var2];\n        var4 = func_0B6A(var5, var6);\n        storage[var2] = var4;\n    \n        if (msg.sender == storage[0x02] & (0x01 << 0xa0) - 0x01) { return; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function symbol() returns (var r0) {\n        var var0 = 0x60;\n        var var1 = 0x05;\n        var var2 = 0x02c8;\n        var var3 = storage[var1];\n        var2 = func_0B1A(var3);\n        var temp0 = var2;\n        var temp1 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp1 + (temp0 + 0x1f) / 0x20 * 0x20 + 0x20;\n        var temp2 = var1;\n        var1 = temp1;\n        var2 = temp2;\n        var3 = temp0;\n        memory[var1:var1 + 0x20] = var3;\n        var var4 = var1 + 0x20;\n        var var5 = var2;\n        var var7 = storage[var5];\n        var var6 = 0x02f4;\n        var6 = func_0B1A(var7);\n    \n        if (!var6) {\n        label_0341:\n            return var1;\n        } else if (0x1f < var6) {\n            var temp3 = var4;\n            var temp4 = temp3 + var6;\n            var4 = temp4;\n            memory[0x00:0x20] = var5;\n            var temp5 = keccak256(memory[0x00:0x20]);\n            memory[temp3:temp3 + 0x20] = storage[temp5];\n            var5 = temp5 + 0x01;\n            var6 = temp3 + 0x20;\n        \n            if (var4 <= var6) { goto label_0338; }\n        \n        label_0324:\n            var temp6 = var5;\n            var temp7 = var6;\n            memory[temp7:temp7 + 0x20] = storage[temp6];\n            var5 = temp6 + 0x01;\n            var6 = temp7 + 0x20;\n        \n            if (var4 > var6) { goto label_0324; }\n        \n        label_0338:\n            var temp8 = var4;\n            var temp9 = temp8 + (var6 - temp8 & 0x1f);\n            var6 = temp8;\n            var4 = temp9;\n            goto label_0341;\n        } else {\n            var temp10 = var4;\n            memory[temp10:temp10 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n            var4 = temp10 + 0x20;\n            var6 = var6;\n            goto label_0341;\n        }\n    }\n    \n    function func_0529(var arg0, var arg1) returns (var r0) {\n        var temp0 = (0x01 << 0xa0) - 0x01;\n        memory[0x00:0x20] = temp0 & arg0;\n        memory[0x20:0x40] = 0x07;\n        var temp1 = keccak256(memory[0x00:0x40]);\n        memory[0x00:0x20] = temp0 & arg1;\n        memory[0x20:0x40] = temp1;\n        return storage[keccak256(memory[0x00:0x40])];\n    }\n    \n    function func_0554(var arg0, var arg1, var arg2) {\n        if (!(arg0 & (0x01 << 0xa0) - 0x01)) {\n            var temp9 = memory[0x40:0x60];\n            memory[temp9:temp9 + 0x20] = 0x461bcd << 0xe5;\n            memory[temp9 + 0x04:temp9 + 0x04 + 0x20] = 0x20;\n            memory[temp9 + 0x24:temp9 + 0x24 + 0x20] = 0x24;\n            memory[temp9 + 0x44:temp9 + 0x44 + 0x20] = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n            memory[temp9 + 0x64:temp9 + 0x64 + 0x20] = 0x72657373 << 0xe0;\n            var0 = temp9 + 0x84;\n            goto label_04CA;\n        } else if (arg1 & (0x01 << 0xa0) - 0x01) {\n            var temp0 = (0x01 << 0xa0) - 0x01;\n            var temp1 = temp0 & arg0;\n            memory[0x00:0x20] = temp1;\n            memory[0x20:0x40] = 0x07;\n            var temp2 = keccak256(memory[0x00:0x40]);\n            var temp3 = arg1 & temp0;\n            memory[0x00:0x20] = temp3;\n            memory[0x20:0x40] = temp2;\n            var temp4 = arg2;\n            storage[keccak256(memory[0x00:0x40])] = temp4;\n            var temp5 = memory[0x40:0x60];\n            memory[temp5:temp5 + 0x20] = temp4;\n            var temp6 = memory[0x40:0x60];\n            log(memory[temp6:temp6 + (temp5 + 0x20) - temp6], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, stack[-3] & (0x01 << 0xa0) - 0x01, stack[-2] & (0x01 << 0xa0) - 0x01]);\n            return;\n        } else {\n            var temp7 = memory[0x40:0x60];\n            memory[temp7:temp7 + 0x20] = 0x461bcd << 0xe5;\n            memory[temp7 + 0x04:temp7 + 0x04 + 0x20] = 0x20;\n            memory[temp7 + 0x24:temp7 + 0x24 + 0x20] = 0x22;\n            memory[temp7 + 0x44:temp7 + 0x44 + 0x20] = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n            memory[temp7 + 0x64:temp7 + 0x64 + 0x20] = 0x7373 << 0xf0;\n            var var0 = temp7 + 0x84;\n        \n        label_04CA:\n            var temp8 = memory[0x40:0x60];\n            revert(memory[temp8:temp8 + var0 - temp8]);\n        }\n    }\n    \n    function func_0678(var arg0, var arg1, var arg2) {\n        var var0 = 0x00;\n        var var1 = 0x0684;\n        var var2 = arg0;\n        var var3 = arg1;\n        var1 = func_0529(var2, var3);\n        var0 = var1;\n    \n        if (var0 == ~0x00) {\n        label_06EE:\n            return;\n        } else if (var0 >= arg2) {\n            var1 = 0x06ee;\n            var2 = arg0;\n            var3 = arg1;\n            var var4 = 0x03a3;\n            var var5 = arg2;\n            var var6 = var0;\n            var4 = func_0B7D(var5, var6);\n            func_03A3(var2, var3, var4);\n            goto label_06EE;\n        } else {\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = 0x461bcd << 0xe5;\n            memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = 0x20;\n            memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = 0x1d;\n            memory[temp0 + 0x44:temp0 + 0x44 + 0x20] = 0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000;\n            var1 = temp0 + 0x64;\n            var temp1 = memory[0x40:0x60];\n            revert(memory[temp1:temp1 + var1 - temp1]);\n        }\n    }\n    \n    function func_06F4(var arg0, var arg1, var arg2) {\n        memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n        memory[0x20:0x40] = 0x08;\n        var var0 = arg0;\n    \n        if (storage[0x0a] - storage[keccak256(memory[0x00:0x40])]) {\n        label_0756:\n        \n            if (!(arg0 & (0x01 << 0xa0) - 0x01)) {\n                var temp7 = memory[0x40:0x60];\n                memory[temp7:temp7 + 0x20] = 0x461bcd << 0xe5;\n                memory[temp7 + 0x04:temp7 + 0x04 + 0x20] = 0x20;\n                memory[temp7 + 0x24:temp7 + 0x24 + 0x20] = 0x25;\n                memory[temp7 + 0x44:temp7 + 0x44 + 0x20] = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n                memory[temp7 + 0x64:temp7 + 0x64 + 0x20] = 0x6472657373 << 0xd8;\n                var1 = temp7 + 0x84;\n                goto label_04CA;\n            } else if (arg1 & (0x01 << 0xa0) - 0x01) {\n                memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n                memory[0x20:0x40] = 0x06;\n                var var1 = storage[keccak256(memory[0x00:0x40])];\n            \n                if (var1 >= arg2) {\n                    memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n                    memory[0x20:0x40] = 0x06;\n                    var var2 = 0x08b8;\n                    var var4 = storage[keccak256(memory[0x00:0x40])];\n                    var var3 = arg2;\n                    var2 = func_0B7D(var3, var4);\n                    var temp0 = (0x01 << 0xa0) - 0x01;\n                    memory[0x00:0x20] = arg0 & temp0;\n                    memory[0x20:0x40] = 0x06;\n                    storage[keccak256(memory[0x00:0x40])] = var2;\n                    memory[0x00:0x20] = arg1 & temp0;\n                    var2 = 0x08e8;\n                    var3 = arg2;\n                    var4 = storage[keccak256(memory[0x00:0x40])];\n                    var2 = func_0B6A(var3, var4);\n                    var temp1 = (0x01 << 0xa0) - 0x01;\n                    memory[0x00:0x20] = arg1 & temp1;\n                    memory[0x20:0x40] = 0x06;\n                    storage[keccak256(memory[0x00:0x40])] = var2;\n                    var2 = arg1 & temp1;\n                    var temp2 = memory[0x40:0x60];\n                    var3 = arg0 & temp1;\n                    var4 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n                    memory[temp2:temp2 + 0x20] = arg2;\n                    var var5 = temp2 + 0x20;\n                    var temp3 = memory[0x40:0x60];\n                    log(memory[temp3:temp3 + var5 - temp3], [stack[-2], stack[-3], stack[-4]]);\n                    return;\n                } else {\n                    var temp4 = memory[0x40:0x60];\n                    memory[temp4:temp4 + 0x20] = 0x461bcd << 0xe5;\n                    memory[temp4 + 0x04:temp4 + 0x04 + 0x20] = 0x20;\n                    memory[temp4 + 0x24:temp4 + 0x24 + 0x20] = 0x26;\n                    memory[temp4 + 0x44:temp4 + 0x44 + 0x20] = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n                    memory[temp4 + 0x64:temp4 + 0x64 + 0x20] = 0x616c616e6365 << 0xd0;\n                    var2 = temp4 + 0x84;\n                \n                label_04CA:\n                    var temp5 = memory[0x40:0x60];\n                    revert(memory[temp5:temp5 + var2 - temp5]);\n                }\n            } else {\n                var temp6 = memory[0x40:0x60];\n                memory[temp6:temp6 + 0x20] = 0x461bcd << 0xe5;\n                memory[temp6 + 0x04:temp6 + 0x04 + 0x20] = 0x20;\n                memory[temp6 + 0x24:temp6 + 0x24 + 0x20] = 0x23;\n                memory[temp6 + 0x44:temp6 + 0x44 + 0x20] = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n                memory[temp6 + 0x64:temp6 + 0x64 + 0x20] = 0x657373 << 0xe8;\n                var1 = temp6 + 0x84;\n                goto label_04CA;\n            }\n        } else {\n            memory[0x00:0x20] = var0 & (0x01 << 0xa0) - 0x01;\n            memory[0x20:0x40] = 0x06;\n            var temp8 = storage[keccak256(memory[0x00:0x40])];\n            memory[0x20:0x40] = 0x08;\n            var1 = 0x01;\n            var3 = temp8;\n            var4 = storage[keccak256(memory[0x00:0x40])];\n            var2 = 0x0749;\n            var2 = func_0B6A(var3, var4);\n            var temp9 = var1;\n            var1 = 0x0753;\n            var temp10 = var2;\n            var2 = temp9;\n            var3 = temp10;\n            var1 = func_0B7D(var2, var3);\n            arg2 = var1;\n            goto label_0756;\n        }\n    }\n    \n    function func_094B() {\n        if (msg.sender == storage[0x00] & (0x01 << 0xa0) - 0x01) { return; }\n    \n        var temp0 = memory[0x40:0x60];\n        memory[temp0:temp0 + 0x20] = 0x461bcd << 0xe5;\n        memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = 0x20;\n        memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = 0x20;\n        memory[temp0 + 0x44:temp0 + 0x44 + 0x20] = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var var0 = temp0 + 0x64;\n        var temp1 = memory[0x40:0x60];\n        revert(memory[temp1:temp1 + var0 - temp1]);\n    }\n    \n    function func_09A5(var arg0) {\n        var temp0 = storage[0x00];\n        var temp1 = (0x01 << 0xa0) - 0x01;\n        var temp2 = temp1 & arg0;\n        storage[0x00] = temp2 | (temp0 & ~((0x01 << 0xa0) - 0x01));\n        log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, storage[0x00] & (0x01 << 0xa0) - 0x01, stack[-1] & (0x01 << 0xa0) - 0x01]);\n    }\n    \n    function func_09F5(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = 0x20;\n        var temp0 = arg1;\n        memory[temp0:temp0 + 0x20] = var1;\n        var temp1 = memory[arg0:arg0 + 0x20];\n        var var2 = temp1;\n        memory[temp0 + var1:temp0 + var1 + 0x20] = var2;\n        var var3 = 0x00;\n    \n        if (var3 >= var2) {\n        label_0A22:\n            var temp2 = var2;\n            var temp3 = arg1;\n            memory[temp3 + temp2 + 0x40:temp3 + temp2 + 0x40 + 0x20] = 0x00;\n            return temp3 + (temp2 + 0x1f & ~0x1f) + 0x40;\n        } else {\n        label_0A0F:\n            var temp4 = var3;\n            var temp5 = var1;\n            memory[temp4 + arg1 + 0x40:temp4 + arg1 + 0x40 + 0x20] = memory[temp5 + temp4 + arg0:temp5 + temp4 + arg0 + 0x20];\n            var3 = temp5 + temp4;\n        \n            if (var3 >= var2) { goto label_0A22; }\n            else { goto label_0A0F; }\n        }\n    }\n    \n    function func_0A43(var arg0) returns (var r0) {\n        var temp0 = msg.data[arg0:arg0 + 0x20];\n        var var0 = temp0;\n    \n        if (var0 == var0 & (0x01 << 0xa0) - 0x01) { return var0; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function func_0A5F(var arg0, var arg1) returns (var r0, var arg0) {\n        var var0 = 0x00;\n        var var1 = var0;\n    \n        if (arg0 - arg1 i< 0x40) { revert(memory[0x00:0x00]); }\n    \n        var var2 = 0x0a7b;\n        var var3 = arg1;\n        var2 = func_0A43(var3);\n        r0 = var2;\n        arg0 = msg.data[arg1 + 0x20:arg1 + 0x20 + 0x20];\n        return r0, arg0;\n    }\n    \n    function func_0A89(var arg0, var arg1) returns (var r0, var arg0, var arg1) {\n        var var0 = 0x00;\n        var var1 = var0;\n        var var2 = 0x00;\n    \n        if (arg0 - arg1 i< 0x60) { revert(memory[0x00:0x00]); }\n    \n        var var3 = 0x0aa7;\n        var var4 = arg1;\n        var3 = func_0A43(var4);\n        var0 = var3;\n        var3 = 0x0ab5;\n        var4 = arg1 + 0x20;\n        var3 = func_0A43(var4);\n        arg1 = msg.data[arg1 + 0x40:arg1 + 0x40 + 0x20];\n        arg0 = var3;\n        r0 = var0;\n        return r0, arg0, arg1;\n    }\n    \n    function func_0AC5(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n    \n        if (arg0 - arg1 i< 0x20) { revert(memory[0x00:0x00]); }\n    \n        var var1 = 0x0ae0;\n        var var2 = arg1;\n        return func_0A43(var2);\n    }\n    \n    function func_0AE7(var arg0, var arg1) returns (var r0, var arg0) {\n        var var0 = 0x00;\n        var var1 = var0;\n    \n        if (arg0 - arg1 i< 0x40) { revert(memory[0x00:0x00]); }\n    \n        var var2 = 0x0b03;\n        var var3 = arg1;\n        var2 = func_0A43(var3);\n        var0 = var2;\n        var2 = 0x0b11;\n        var3 = arg1 + 0x20;\n        var2 = func_0A43(var3);\n        arg0 = var2;\n        r0 = var0;\n        return r0, arg0;\n    }\n    \n    function func_0B1A(var arg0) returns (var r0) {\n        var temp0 = arg0;\n        var var0 = temp0 >> 0x01;\n        var var1 = temp0 & 0x01;\n    \n        if (!var1) {\n            var temp1 = var0 & 0x7f;\n            var0 = temp1;\n        \n            if (var1 - (var0 < 0x20)) { goto label_0B4E; }\n            else { goto label_0B39; }\n        } else if (var1 - (var0 < 0x20)) {\n        label_0B4E:\n            return var0;\n        } else {\n        label_0B39:\n            memory[0x00:0x20] = 0x4e487b71 << 0xe0;\n            memory[0x04:0x24] = 0x22;\n            revert(memory[0x00:0x24]);\n        }\n    }\n    \n    function func_0B6A(var arg0, var arg1) returns (var r0) {\n        var temp0 = arg1;\n        var var0 = arg0 + temp0;\n    \n        if (temp0 <= var0) { return var0; }\n    \n        var var1 = 0x035c;\n        memory[0x00:0x20] = 0x4e487b71 << 0xe0;\n        memory[0x04:0x24] = 0x11;\n        revert(memory[0x00:0x24]);\n    }\n    \n    function func_0B7D(var arg0, var arg1) returns (var r0) {\n        var temp0 = arg1;\n        var var0 = temp0 - arg0;\n    \n        if (var0 <= temp0) { return var0; }\n    \n        var var1 = 0x035c;\n        memory[0x00:0x20] = 0x4e487b71 << 0xe0;\n        memory[0x04:0x24] = 0x11;\n        revert(memory[0x00:0x24]);\n    }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x80;\n        var var0 = msg.value;\n    \n        if (var0) { revert(memory[0x00:0x00]); }\n    \n        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }\n    \n        var0 = msg.data[0x00:0x20] >> 0xe0;\n    \n        if (0x6ed699f0 > var0) {\n            if (0x23b872dd > var0) {\n                if (var0 == 0x06fdde03) {\n                    // Dispatch table entry for name()\n                    var var1 = 0x012e;\n                    var1 = func_02B9();\n                \n                label_012E:\n                    var temp0 = var1;\n                    var1 = 0x013b;\n                    var var2 = temp0;\n                    var var3 = memory[0x40:0x60];\n                    var1 = func_09F5(var2, var3);\n                \n                label_013B:\n                    var temp1 = memory[0x40:0x60];\n                    return memory[temp1:temp1 + var1 - temp1];\n                } else if (var0 == 0x095ea7b3) {\n                    // Dispatch table entry for approve(address,uint256)\n                    var1 = 0x0157;\n                    var2 = 0x0152;\n                    var3 = msg.data.length;\n                    var var4 = 0x04;\n                    var2, var3 = func_0A5F(var3, var4);\n                    var4 = 0x00;\n                    var var5 = 0x0358;\n                    var var6 = msg.sender;\n                    var var7 = var2;\n                    var var8 = var3;\n                    func_0554(var6, var7, var8);\n                \n                label_0358:\n                    var4 = 0x01;\n                    var1 = var4;\n                    // Error: Could not resolve jump destination!\n                } else if (var0 == 0x17dd4855) {\n                    // Dispatch table entry for 0x17dd4855 (unknown)\n                    var1 = 0x0170;\n                    var2 = storage[0x0a];\n                \n                label_0170:\n                    var temp2 = memory[0x40:0x60];\n                    memory[temp2:temp2 + 0x20] = var2;\n                    var2 = temp2 + 0x20;\n                    goto label_013B;\n                } else if (var0 == 0x18160ddd) {\n                    // Dispatch table entry for totalSupply()\n                    var1 = storage[0x03];\n                    goto label_0170;\n                } else { revert(memory[0x00:0x00]); }\n            } else if (var0 == 0x23b872dd) {\n                // Dispatch table entry for transferFrom(address,address,uint256)\n                var1 = 0x0157;\n                var2 = 0x0194;\n                var3 = msg.data.length;\n                var4 = 0x04;\n                var2, var3, var4 = func_0A89(var3, var4);\n                var5 = 0x00;\n                var6 = msg.sender;\n                var7 = 0x0370;\n                var8 = var2;\n                var var9 = var6;\n                var var10 = var4;\n                func_0678(var8, var9, var10);\n                var7 = 0x037b;\n                var8 = var2;\n                var9 = var3;\n                var10 = var4;\n                func_06F4(var8, var9, var10);\n                var1 = 0x01;\n                // Error: Could not resolve jump destination!\n            } else if (var0 == 0x24119c0c) {\n                // Dispatch table entry for 0x24119c0c (unknown)\n                var1 = 0x0170;\n                var2 = 0x01a7;\n                var3 = msg.data.length;\n                var4 = 0x04;\n                var2 = func_0AC5(var3, var4);\n                var2 = func_01A7(var2);\n                goto label_0170;\n            } else if (var0 == 0x313ce567) {\n                // Dispatch table entry for decimals()\n                var temp3 = memory[0x40:0x60];\n                memory[temp3:temp3 + 0x20] = 0x12;\n                var1 = temp3 + 0x20;\n                goto label_013B;\n            } else if (var0 == 0x39509351) {\n                // Dispatch table entry for increaseAllowance(address,uint256)\n                var1 = 0x0157;\n                var2 = 0x01d6;\n                var3 = msg.data.length;\n                var4 = 0x04;\n                var2, var3 = func_0A5F(var3, var4);\n                var1 = func_01D6(var2, var3);\n            \n            label_0157:\n                var temp4 = memory[0x40:0x60];\n                memory[temp4:temp4 + 0x20] = !!var1;\n                var1 = temp4 + 0x20;\n                goto label_013B;\n            } else if (var0 == 0x5a49db78) {\n                // Dispatch table entry for 0x5a49db78 (unknown)\n                var1 = 0x01e3;\n                func_03B2();\n                stop();\n            } else { revert(memory[0x00:0x00]); }\n        } else if (0x95d89b41 > var0) {\n            if (var0 == 0x6ed699f0) {\n                // Dispatch table entry for 0x6ed699f0 (unknown)\n                var1 = 0x01f8;\n                var2 = storage[0x02] & (0x01 << 0xa0) - 0x01;\n            \n            label_01F8:\n                var temp5 = memory[0x40:0x60];\n                memory[temp5:temp5 + 0x20] = var2 & (0x01 << 0xa0) - 0x01;\n                var2 = temp5 + 0x20;\n                goto label_013B;\n            } else if (var0 == 0x70a08231) {\n                // Dispatch table entry for balanceOf(address)\n                var1 = 0x0170;\n                var2 = 0x021e;\n                var3 = msg.data.length;\n                var4 = 0x04;\n                var2 = func_0AC5(var3, var4);\n                var1 = func_021E(var2);\n                goto label_0170;\n            } else if (var0 == 0x715018a6) {\n                // Dispatch table entry for renounceOwnership()\n                var1 = 0x01e3;\n                var2 = 0x0407;\n                func_094B();\n                var2 = 0x0411;\n                var3 = 0x00;\n                func_09A5(var3);\n                // Error: Could not resolve jump destination!\n            } else if (var0 == 0x80b2122e) {\n                // Dispatch table entry for decreaseAllowance(address)\n                var1 = 0x01e3;\n                var2 = 0x024f;\n                var3 = msg.data.length;\n                var4 = 0x04;\n                var2 = func_0AC5(var3, var4);\n                func_024F(var2);\n                stop();\n            } else if (var0 == 0x8da5cb5b) {\n                // Dispatch table entry for owner()\n                var1 = storage[0x00] & (0x01 << 0xa0) - 0x01;\n                goto label_01F8;\n            } else { revert(memory[0x00:0x00]); }\n        } else if (var0 == 0x95d89b41) {\n            // Dispatch table entry for symbol()\n            var1 = 0x012e;\n            var1 = symbol();\n            goto label_012E;\n        } else if (var0 == 0xa457c2d7) {\n            // Dispatch table entry for decreaseAllowance(address,uint256)\n            var1 = 0x0157;\n            var2 = 0x027b;\n            var3 = msg.data.length;\n            var4 = 0x04;\n            var2, var3 = func_0A5F(var3, var4);\n            var1 = func_027B(var2, var3);\n            goto label_0157;\n        } else if (var0 == 0xa9059cbb) {\n            // Dispatch table entry for transfer(address,uint256)\n            var1 = 0x0157;\n            var2 = 0x028e;\n            var3 = msg.data.length;\n            var4 = 0x04;\n            var2, var3 = func_0A5F(var3, var4);\n            var4 = 0x00;\n            var5 = 0x0358;\n            var6 = msg.sender;\n            var7 = var2;\n            var8 = var3;\n            func_06F4(var6, var7, var8);\n            goto label_0358;\n        } else if (var0 == 0xbc4c851c) {\n            // Dispatch table entry for 0xbc4c851c (unknown)\n            var1 = 0x01e3;\n            var2 = 0x02a1;\n            var3 = msg.data.length;\n            var4 = 0x04;\n            var2 = func_0AC5(var3, var4);\n            func_02A1(var2);\n            stop();\n        } else if (var0 == 0xdd62ed3e) {\n            // Dispatch table entry for allowance(address,address)\n            var1 = 0x0170;\n            var2 = 0x02b4;\n            var3 = msg.data.length;\n            var4 = 0x04;\n            var2, var3 = func_0AE7(var3, var4);\n            var1 = func_02B4(var2, var3);\n            goto label_0170;\n        } else { revert(memory[0x00:0x00]); }\n    }\n    \n    function func_01A7(var arg0) returns (var arg0) {\n        memory[0x20:0x40] = 0x08;\n        memory[0x00:0x20] = arg0;\n        return storage[keccak256(memory[0x00:0x40])];\n    }\n    \n    function func_01D6(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = msg.sender;\n        var var2 = 0x03a8;\n        var var3 = var1;\n        var var4 = arg0;\n        var var5 = arg1;\n        var var6 = 0x0399;\n        var var7 = var3;\n        var var8 = var4;\n        var6 = func_0529(var7, var8);\n        func_0399(var3, var4, var5, var6);\n        return 0x01;\n    }\n    \n    function func_021E(var arg0) returns (var r0) {\n        memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n        memory[0x20:0x40] = 0x06;\n        return storage[keccak256(memory[0x00:0x40])];\n    }\n    \n    function func_024F(var arg0) {\n        if (msg.sender != storage[0x02] & (0x01 << 0xa0) - 0x01) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n        memory[0x20:0x40] = 0x08;\n        storage[keccak256(memory[0x00:0x40])] = 0x2fc9;\n    }\n    \n    function func_027B(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = msg.sender;\n        var var2 = var0;\n        var var3 = 0x046e;\n        var var4 = var1;\n        var var5 = arg0;\n        var3 = func_0529(var4, var5);\n        var2 = var3;\n    \n        if (var2 >= arg1) {\n            var3 = 0x037b;\n            var4 = var1;\n            var5 = arg0;\n            var var6 = 0x03a3;\n            var var7 = arg1;\n            var var8 = var2;\n            var6 = func_0B7D(var7, var8);\n            func_03A3(var4, var5, var6);\n            return 0x01;\n        } else {\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = 0x461bcd << 0xe5;\n            memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = 0x20;\n            memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = 0x25;\n            memory[temp0 + 0x44:temp0 + 0x44 + 0x20] = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n            memory[temp0 + 0x64:temp0 + 0x64 + 0x20] = 0x207a65726f << 0xd8;\n            var3 = temp0 + 0x84;\n            var temp1 = memory[0x40:0x60];\n            revert(memory[temp1:temp1 + var3 - temp1]);\n        }\n    }\n    \n    function func_02A1(var arg0) {\n        if (msg.sender != storage[0x02] & (0x01 << 0xa0) - 0x01) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n        memory[0x20:0x40] = 0x08;\n        storage[keccak256(memory[0x00:0x40])] = 0x00;\n    }\n    \n    function func_02B4(var arg0, var arg1) returns (var r0) {\n        r0 = func_0529(arg0, arg1);\n        // Error: Could not resolve method call return address!\n    }\n    \n    function func_02B9() returns (var r0) {\n        var var0 = 0x60;\n        var var1 = 0x04;\n        var var2 = 0x02c8;\n        var var3 = storage[var1];\n        var2 = func_0B1A(var3);\n        var temp0 = var2;\n        var temp1 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp1 + (temp0 + 0x1f) / 0x20 * 0x20 + 0x20;\n        var temp2 = var1;\n        var1 = temp1;\n        var2 = temp2;\n        var3 = temp0;\n        memory[var1:var1 + 0x20] = var3;\n        var var4 = var1 + 0x20;\n        var var5 = var2;\n        var var7 = storage[var5];\n        var var6 = 0x02f4;\n        var6 = func_0B1A(var7);\n    \n        if (!var6) {\n        label_0341:\n            return var1;\n        } else if (0x1f < var6) {\n            var temp3 = var4;\n            var temp4 = temp3 + var6;\n            var4 = temp4;\n            memory[0x00:0x20] = var5;\n            var temp5 = keccak256(memory[0x00:0x20]);\n            memory[temp3:temp3 + 0x20] = storage[temp5];\n            var5 = temp5 + 0x01;\n            var6 = temp3 + 0x20;\n        \n            if (var4 <= var6) { goto label_0338; }\n        \n        label_0324:\n            var temp6 = var5;\n            var temp7 = var6;\n            memory[temp7:temp7 + 0x20] = storage[temp6];\n            var5 = temp6 + 0x01;\n            var6 = temp7 + 0x20;\n        \n            if (var4 > var6) { goto label_0324; }\n        \n        label_0338:\n            var temp8 = var4;\n            var temp9 = temp8 + (var6 - temp8 & 0x1f);\n            var6 = temp8;\n            var4 = temp9;\n            goto label_0341;\n        } else {\n            var temp10 = var4;\n            memory[temp10:temp10 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n            var4 = temp10 + 0x20;\n            var6 = var6;\n            goto label_0341;\n        }\n    }\n    \n    function func_0399(var arg0, var arg1, var arg2, var arg3) {\n        var temp0 = arg2;\n        arg2 = 0x03a3;\n        var temp1 = arg3;\n        arg3 = temp0;\n        var var0 = temp1;\n        arg2 = func_0B6A(arg3, var0);\n        func_03A3(arg0, arg1, arg2);\n        // Error: Could not resolve method call return address!\n    }\n    \n    function func_03A3(var arg0, var arg1, var arg2) {\n        func_0554(arg0, arg1, arg2);\n        // Error: Could not resolve method call return address!\n    }\n    \n    function func_03B2() {\n        memory[0x00:0x20] = msg.sender;\n        memory[0x20:0x40] = 0x06;\n        var var0 = msg.sender;\n        var var1 = storage[0x09];\n        var var2 = keccak256(memory[0x00:0x40]);\n        var var3 = 0x00;\n        var var4 = 0x03d7;\n        var var5 = var1;\n        var var6 = storage[var2];\n        var4 = func_0B6A(var5, var6);\n        storage[var2] = var4;\n    \n        if (msg.sender == storage[0x02] & (0x01 << 0xa0) - 0x01) { return; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function symbol() returns (var r0) {\n        var var0 = 0x60;\n        var var1 = 0x05;\n        var var2 = 0x02c8;\n        var var3 = storage[var1];\n        var2 = func_0B1A(var3);\n        var temp0 = var2;\n        var temp1 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp1 + (temp0 + 0x1f) / 0x20 * 0x20 + 0x20;\n        var temp2 = var1;\n        var1 = temp1;\n        var2 = temp2;\n        var3 = temp0;\n        memory[var1:var1 + 0x20] = var3;\n        var var4 = var1 + 0x20;\n        var var5 = var2;\n        var var7 = storage[var5];\n        var var6 = 0x02f4;\n        var6 = func_0B1A(var7);\n    \n        if (!var6) {\n        label_0341:\n            return var1;\n        } else if (0x1f < var6) {\n            var temp3 = var4;\n            var temp4 = temp3 + var6;\n            var4 = temp4;\n            memory[0x00:0x20] = var5;\n            var temp5 = keccak256(memory[0x00:0x20]);\n            memory[temp3:temp3 + 0x20] = storage[temp5];\n            var5 = temp5 + 0x01;\n            var6 = temp3 + 0x20;\n        \n            if (var4 <= var6) { goto label_0338; }\n        \n        label_0324:\n            var temp6 = var5;\n            var temp7 = var6;\n            memory[temp7:temp7 + 0x20] = storage[temp6];\n            var5 = temp6 + 0x01;\n            var6 = temp7 + 0x20;\n        \n            if (var4 > var6) { goto label_0324; }\n        \n        label_0338:\n            var temp8 = var4;\n            var temp9 = temp8 + (var6 - temp8 & 0x1f);\n            var6 = temp8;\n            var4 = temp9;\n            goto label_0341;\n        } else {\n            var temp10 = var4;\n            memory[temp10:temp10 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n            var4 = temp10 + 0x20;\n            var6 = var6;\n            goto label_0341;\n        }\n    }\n    \n    function func_0529(var arg0, var arg1) returns (var r0) {\n        var temp0 = (0x01 << 0xa0) - 0x01;\n        memory[0x00:0x20] = temp0 & arg0;\n        memory[0x20:0x40] = 0x07;\n        var temp1 = keccak256(memory[0x00:0x40]);\n        memory[0x00:0x20] = temp0 & arg1;\n        memory[0x20:0x40] = temp1;\n        return storage[keccak256(memory[0x00:0x40])];\n    }\n    \n    function func_0554(var arg0, var arg1, var arg2) {\n        if (!(arg0 & (0x01 << 0xa0) - 0x01)) {\n            var temp9 = memory[0x40:0x60];\n            memory[temp9:temp9 + 0x20] = 0x461bcd << 0xe5;\n            memory[temp9 + 0x04:temp9 + 0x04 + 0x20] = 0x20;\n            memory[temp9 + 0x24:temp9 + 0x24 + 0x20] = 0x24;\n            memory[temp9 + 0x44:temp9 + 0x44 + 0x20] = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n            memory[temp9 + 0x64:temp9 + 0x64 + 0x20] = 0x72657373 << 0xe0;\n            var0 = temp9 + 0x84;\n            goto label_04CA;\n        } else if (arg1 & (0x01 << 0xa0) - 0x01) {\n            var temp0 = (0x01 << 0xa0) - 0x01;\n            var temp1 = temp0 & arg0;\n            memory[0x00:0x20] = temp1;\n            memory[0x20:0x40] = 0x07;\n            var temp2 = keccak256(memory[0x00:0x40]);\n            var temp3 = arg1 & temp0;\n            memory[0x00:0x20] = temp3;\n            memory[0x20:0x40] = temp2;\n            var temp4 = arg2;\n            storage[keccak256(memory[0x00:0x40])] = temp4;\n            var temp5 = memory[0x40:0x60];\n            memory[temp5:temp5 + 0x20] = temp4;\n            var temp6 = memory[0x40:0x60];\n            log(memory[temp6:temp6 + (temp5 + 0x20) - temp6], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, stack[-3] & (0x01 << 0xa0) - 0x01, stack[-2] & (0x01 << 0xa0) - 0x01]);\n            return;\n        } else {\n            var temp7 = memory[0x40:0x60];\n            memory[temp7:temp7 + 0x20] = 0x461bcd << 0xe5;\n            memory[temp7 + 0x04:temp7 + 0x04 + 0x20] = 0x20;\n            memory[temp7 + 0x24:temp7 + 0x24 + 0x20] = 0x22;\n            memory[temp7 + 0x44:temp7 + 0x44 + 0x20] = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n            memory[temp7 + 0x64:temp7 + 0x64 + 0x20] = 0x7373 << 0xf0;\n            var var0 = temp7 + 0x84;\n        \n        label_04CA:\n            var temp8 = memory[0x40:0x60];\n            revert(memory[temp8:temp8 + var0 - temp8]);\n        }\n    }\n    \n    function func_0678(var arg0, var arg1, var arg2) {\n        var var0 = 0x00;\n        var var1 = 0x0684;\n        var var2 = arg0;\n        var var3 = arg1;\n        var1 = func_0529(var2, var3);\n        var0 = var1;\n    \n        if (var0 == ~0x00) {\n        label_06EE:\n            return;\n        } else if (var0 >= arg2) {\n            var1 = 0x06ee;\n            var2 = arg0;\n            var3 = arg1;\n            var var4 = 0x03a3;\n            var var5 = arg2;\n            var var6 = var0;\n            var4 = func_0B7D(var5, var6);\n            func_03A3(var2, var3, var4);\n            goto label_06EE;\n        } else {\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = 0x461bcd << 0xe5;\n            memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = 0x20;\n            memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = 0x1d;\n            memory[temp0 + 0x44:temp0 + 0x44 + 0x20] = 0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000;\n            var1 = temp0 + 0x64;\n            var temp1 = memory[0x40:0x60];\n            revert(memory[temp1:temp1 + var1 - temp1]);\n        }\n    }\n    \n    function func_06F4(var arg0, var arg1, var arg2) {\n        memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n        memory[0x20:0x40] = 0x08;\n        var var0 = arg0;\n    \n        if (storage[0x0a] - storage[keccak256(memory[0x00:0x40])]) {\n        label_0756:\n        \n            if (!(arg0 & (0x01 << 0xa0) - 0x01)) {\n                var temp7 = memory[0x40:0x60];\n                memory[temp7:temp7 + 0x20] = 0x461bcd << 0xe5;\n                memory[temp7 + 0x04:temp7 + 0x04 + 0x20] = 0x20;\n                memory[temp7 + 0x24:temp7 + 0x24 + 0x20] = 0x25;\n                memory[temp7 + 0x44:temp7 + 0x44 + 0x20] = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n                memory[temp7 + 0x64:temp7 + 0x64 + 0x20] = 0x6472657373 << 0xd8;\n                var1 = temp7 + 0x84;\n                goto label_04CA;\n            } else if (arg1 & (0x01 << 0xa0) - 0x01) {\n                memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n                memory[0x20:0x40] = 0x06;\n                var var1 = storage[keccak256(memory[0x00:0x40])];\n            \n                if (var1 >= arg2) {\n                    memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n                    memory[0x20:0x40] = 0x06;\n                    var var2 = 0x08b8;\n                    var var4 = storage[keccak256(memory[0x00:0x40])];\n                    var var3 = arg2;\n                    var2 = func_0B7D(var3, var4);\n                    var temp0 = (0x01 << 0xa0) - 0x01;\n                    memory[0x00:0x20] = arg0 & temp0;\n                    memory[0x20:0x40] = 0x06;\n                    storage[keccak256(memory[0x00:0x40])] = var2;\n                    memory[0x00:0x20] = arg1 & temp0;\n                    var2 = 0x08e8;\n                    var3 = arg2;\n                    var4 = storage[keccak256(memory[0x00:0x40])];\n                    var2 = func_0B6A(var3, var4);\n                    var temp1 = (0x01 << 0xa0) - 0x01;\n                    memory[0x00:0x20] = arg1 & temp1;\n                    memory[0x20:0x40] = 0x06;\n                    storage[keccak256(memory[0x00:0x40])] = var2;\n                    var2 = arg1 & temp1;\n                    var temp2 = memory[0x40:0x60];\n                    var3 = arg0 & temp1;\n                    var4 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n                    memory[temp2:temp2 + 0x20] = arg2;\n                    var var5 = temp2 + 0x20;\n                    var temp3 = memory[0x40:0x60];\n                    log(memory[temp3:temp3 + var5 - temp3], [stack[-2], stack[-3], stack[-4]]);\n                    return;\n                } else {\n                    var temp4 = memory[0x40:0x60];\n                    memory[temp4:temp4 + 0x20] = 0x461bcd << 0xe5;\n                    memory[temp4 + 0x04:temp4 + 0x04 + 0x20] = 0x20;\n                    memory[temp4 + 0x24:temp4 + 0x24 + 0x20] = 0x26;\n                    memory[temp4 + 0x44:temp4 + 0x44 + 0x20] = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n                    memory[temp4 + 0x64:temp4 + 0x64 + 0x20] = 0x616c616e6365 << 0xd0;\n                    var2 = temp4 + 0x84;\n                \n                label_04CA:\n                    var temp5 = memory[0x40:0x60];\n                    revert(memory[temp5:temp5 + var2 - temp5]);\n                }\n            } else {\n                var temp6 = memory[0x40:0x60];\n                memory[temp6:temp6 + 0x20] = 0x461bcd << 0xe5;\n                memory[temp6 + 0x04:temp6 + 0x04 + 0x20] = 0x20;\n                memory[temp6 + 0x24:temp6 + 0x24 + 0x20] = 0x23;\n                memory[temp6 + 0x44:temp6 + 0x44 + 0x20] = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n                memory[temp6 + 0x64:temp6 + 0x64 + 0x20] = 0x657373 << 0xe8;\n                var1 = temp6 + 0x84;\n                goto label_04CA;\n            }\n        } else {\n            memory[0x00:0x20] = var0 & (0x01 << 0xa0) - 0x01;\n            memory[0x20:0x40] = 0x06;\n            var temp8 = storage[keccak256(memory[0x00:0x40])];\n            memory[0x20:0x40] = 0x08;\n            var1 = 0x01;\n            var3 = temp8;\n            var4 = storage[keccak256(memory[0x00:0x40])];\n            var2 = 0x0749;\n            var2 = func_0B6A(var3, var4);\n            var temp9 = var1;\n            var1 = 0x0753;\n            var temp10 = var2;\n            var2 = temp9;\n            var3 = temp10;\n            var1 = func_0B7D(var2, var3);\n            arg2 = var1;\n            goto label_0756;\n        }\n    }\n    \n    function func_094B() {\n        if (msg.sender == storage[0x00] & (0x01 << 0xa0) - 0x01) { return; }\n    \n        var temp0 = memory[0x40:0x60];\n        memory[temp0:temp0 + 0x20] = 0x461bcd << 0xe5;\n        memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = 0x20;\n        memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = 0x20;\n        memory[temp0 + 0x44:temp0 + 0x44 + 0x20] = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var var0 = temp0 + 0x64;\n        var temp1 = memory[0x40:0x60];\n        revert(memory[temp1:temp1 + var0 - temp1]);\n    }\n    \n    function func_09A5(var arg0) {\n        var temp0 = storage[0x00];\n        var temp1 = (0x01 << 0xa0) - 0x01;\n        var temp2 = temp1 & arg0;\n        storage[0x00] = temp2 | (temp0 & ~((0x01 << 0xa0) - 0x01));\n        log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, storage[0x00] & (0x01 << 0xa0) - 0x01, stack[-1] & (0x01 << 0xa0) - 0x01]);\n    }\n    \n    function func_09F5(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = 0x20;\n        var temp0 = arg1;\n        memory[temp0:temp0 + 0x20] = var1;\n        var temp1 = memory[arg0:arg0 + 0x20];\n        var var2 = temp1;\n        memory[temp0 + var1:temp0 + var1 + 0x20] = var2;\n        var var3 = 0x00;\n    \n        if (var3 >= var2) {\n        label_0A22:\n            var temp2 = var2;\n            var temp3 = arg1;\n            memory[temp3 + temp2 + 0x40:temp3 + temp2 + 0x40 + 0x20] = 0x00;\n            return temp3 + (temp2 + 0x1f & ~0x1f) + 0x40;\n        } else {\n        label_0A0F:\n            var temp4 = var3;\n            var temp5 = var1;\n            memory[temp4 + arg1 + 0x40:temp4 + arg1 + 0x40 + 0x20] = memory[temp5 + temp4 + arg0:temp5 + temp4 + arg0 + 0x20];\n            var3 = temp5 + temp4;\n        \n            if (var3 >= var2) { goto label_0A22; }\n            else { goto label_0A0F; }\n        }\n    }\n    \n    function func_0A43(var arg0) returns (var r0) {\n        var temp0 = msg.data[arg0:arg0 + 0x20];\n        var var0 = temp0;\n    \n        if (var0 == var0 & (0x01 << 0xa0) - 0x01) { return var0; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function func_0A5F(var arg0, var arg1) returns (var r0, var arg0) {\n        var var0 = 0x00;\n        var var1 = var0;\n    \n        if (arg0 - arg1 i< 0x40) { revert(memory[0x00:0x00]); }\n    \n        var var2 = 0x0a7b;\n        var var3 = arg1;\n        var2 = func_0A43(var3);\n        r0 = var2;\n        arg0 = msg.data[arg1 + 0x20:arg1 + 0x20 + 0x20];\n        return r0, arg0;\n    }\n    \n    function func_0A89(var arg0, var arg1) returns (var r0, var arg0, var arg1) {\n        var var0 = 0x00;\n        var var1 = var0;\n        var var2 = 0x00;\n    \n        if (arg0 - arg1 i< 0x60) { revert(memory[0x00:0x00]); }\n    \n        var var3 = 0x0aa7;\n        var var4 = arg1;\n        var3 = func_0A43(var4);\n        var0 = var3;\n        var3 = 0x0ab5;\n        var4 = arg1 + 0x20;\n        var3 = func_0A43(var4);\n        arg1 = msg.data[arg1 + 0x40:arg1 + 0x40 + 0x20];\n        arg0 = var3;\n        r0 = var0;\n        return r0, arg0, arg1;\n    }\n    \n    function func_0AC5(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n    \n        if (arg0 - arg1 i< 0x20) { revert(memory[0x00:0x00]); }\n    \n        var var1 = 0x0ae0;\n        var var2 = arg1;\n        return func_0A43(var2);\n    }\n    \n    function func_0AE7(var arg0, var arg1) returns (var r0, var arg0) {\n        var var0 = 0x00;\n        var var1 = var0;\n    \n        if (arg0 - arg1 i< 0x40) { revert(memory[0x00:0x00]); }\n    \n        var var2 = 0x0b03;\n        var var3 = arg1;\n        var2 = func_0A43(var3);\n        var0 = var2;\n        var2 = 0x0b11;\n        var3 = arg1 + 0x20;\n        var2 = func_0A43(var3);\n        arg0 = var2;\n        r0 = var0;\n        return r0, arg0;\n    }\n    \n    function func_0B1A(var arg0) returns (var r0) {\n        var temp0 = arg0;\n        var var0 = temp0 >> 0x01;\n        var var1 = temp0 & 0x01;\n    \n        if (!var1) {\n            var temp1 = var0 & 0x7f;\n            var0 = temp1;\n        \n            if (var1 - (var0 < 0x20)) { goto label_0B4E; }\n            else { goto label_0B39; }\n        } else if (var1 - (var0 < 0x20)) {\n        label_0B4E:\n            return var0;\n        } else {\n        label_0B39:\n            memory[0x00:0x20] = 0x4e487b71 << 0xe0;\n            memory[0x04:0x24] = 0x22;\n            revert(memory[0x00:0x24]);\n        }\n    }\n    \n    function func_0B6A(var arg0, var arg1) returns (var r0) {\n        var temp0 = arg1;\n        var var0 = arg0 + temp0;\n    \n        if (temp0 <= var0) { return var0; }\n    \n        var var1 = 0x035c;\n        memory[0x00:0x20] = 0x4e487b71 << 0xe0;\n        memory[0x04:0x24] = 0x11;\n        revert(memory[0x00:0x24]);\n    }\n    \n    function func_0B7D(var arg0, var arg1) returns (var r0) {\n        var temp0 = arg1;\n        var var0 = temp0 - arg0;\n    \n        if (var0 <= temp0) { return var0; }\n    \n        var var1 = 0x035c;\n        memory[0x00:0x20] = 0x4e487b71 << 0xe0;\n        memory[0x04:0x24] = 0x11;\n        revert(memory[0x00:0x24]);\n    }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x80;\n        var var0 = msg.value;\n    \n        if (var0) { revert(memory[0x00:0x00]); }\n    \n        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }\n    \n        var0 = msg.data[0x00:0x20] >> 0xe0;\n    \n        if (0x6ed699f0 > var0) {\n            if (0x23b872dd > var0) {\n                if (var0 == 0x06fdde03) {\n                    // Dispatch table entry for name()\n                    var var1 = 0x012e;\n                    var1 = func_02B9();\n                \n                label_012E:\n                    var temp0 = var1;\n                    var1 = 0x013b;\n                    var var2 = temp0;\n                    var var3 = memory[0x40:0x60];\n                    var1 = func_09F5(var2, var3);\n                \n                label_013B:\n                    var temp1 = memory[0x40:0x60];\n                    return memory[temp1:temp1 + var1 - temp1];\n                } else if (var0 == 0x095ea7b3) {\n                    // Dispatch table entry for approve(address,uint256)\n                    var1 = 0x0157;\n                    var2 = 0x0152;\n                    var3 = msg.data.length;\n                    var var4 = 0x04;\n                    var2, var3 = func_0A5F(var3, var4);\n                    var4 = 0x00;\n                    var var5 = 0x0358;\n                    var var6 = msg.sender;\n                    var var7 = var2;\n                    var var8 = var3;\n                    func_0554(var6, var7, var8);\n                \n                label_0358:\n                    var4 = 0x01;\n                    var1 = var4;\n                    // Error: Could not resolve jump destination!\n                } else if (var0 == 0x17dd4855) {\n                    // Dispatch table entry for 0x17dd4855 (unknown)\n                    var1 = 0x0170;\n                    var2 = storage[0x0a];\n                \n                label_0170:\n                    var temp2 = memory[0x40:0x60];\n                    memory[temp2:temp2 + 0x20] = var2;\n                    var2 = temp2 + 0x20;\n                    goto label_013B;\n                } else if (var0 == 0x18160ddd) {\n                    // Dispatch table entry for totalSupply()\n                    var1 = storage[0x03];\n                    goto label_0170;\n                } else { revert(memory[0x00:0x00]); }\n            } else if (var0 == 0x23b872dd) {\n                // Dispatch table entry for transferFrom(address,address,uint256)\n                var1 = 0x0157;\n                var2 = 0x0194;\n                var3 = msg.data.length;\n                var4 = 0x04;\n                var2, var3, var4 = func_0A89(var3, var4);\n                var5 = 0x00;\n                var6 = msg.sender;\n                var7 = 0x0370;\n                var8 = var2;\n                var var9 = var6;\n                var var10 = var4;\n                func_0678(var8, var9, var10);\n                var7 = 0x037b;\n                var8 = var2;\n                var9 = var3;\n                var10 = var4;\n                func_06F4(var8, var9, var10);\n                var1 = 0x01;\n                // Error: Could not resolve jump destination!\n            } else if (var0 == 0x24119c0c) {\n                // Dispatch table entry for 0x24119c0c (unknown)\n                var1 = 0x0170;\n                var2 = 0x01a7;\n                var3 = msg.data.length;\n                var4 = 0x04;\n                var2 = func_0AC5(var3, var4);\n                var2 = func_01A7(var2);\n                goto label_0170;\n            } else if (var0 == 0x313ce567) {\n                // Dispatch table entry for decimals()\n                var temp3 = memory[0x40:0x60];\n                memory[temp3:temp3 + 0x20] = 0x12;\n                var1 = temp3 + 0x20;\n                goto label_013B;\n            } else if (var0 == 0x39509351) {\n                // Dispatch table entry for increaseAllowance(address,uint256)\n                var1 = 0x0157;\n                var2 = 0x01d6;\n                var3 = msg.data.length;\n                var4 = 0x04;\n                var2, var3 = func_0A5F(var3, var4);\n                var1 = func_01D6(var2, var3);\n            \n            label_0157:\n                var temp4 = memory[0x40:0x60];\n                memory[temp4:temp4 + 0x20] = !!var1;\n                var1 = temp4 + 0x20;\n                goto label_013B;\n            } else if (var0 == 0x5a49db78) {\n                // Dispatch table entry for 0x5a49db78 (unknown)\n                var1 = 0x01e3;\n                func_03B2();\n                stop();\n            } else { revert(memory[0x00:0x00]); }\n        } else if (0x95d89b41 > var0) {\n            if (var0 == 0x6ed699f0) {\n                // Dispatch table entry for 0x6ed699f0 (unknown)\n                var1 = 0x01f8;\n                var2 = storage[0x02] & (0x01 << 0xa0) - 0x01;\n            \n            label_01F8:\n                var temp5 = memory[0x40:0x60];\n                memory[temp5:temp5 + 0x20] = var2 & (0x01 << 0xa0) - 0x01;\n                var2 = temp5 + 0x20;\n                goto label_013B;\n            } else if (var0 == 0x70a08231) {\n                // Dispatch table entry for balanceOf(address)\n                var1 = 0x0170;\n                var2 = 0x021e;\n                var3 = msg.data.length;\n                var4 = 0x04;\n                var2 = func_0AC5(var3, var4);\n                var1 = func_021E(var2);\n                goto label_0170;\n            } else if (var0 == 0x715018a6) {\n                // Dispatch table entry for renounceOwnership()\n                var1 = 0x01e3;\n                var2 = 0x0407;\n                func_094B();\n                var2 = 0x0411;\n                var3 = 0x00;\n                func_09A5(var3);\n                // Error: Could not resolve jump destination!\n            } else if (var0 == 0x80b2122e) {\n                // Dispatch table entry for decreaseAllowance(address)\n                var1 = 0x01e3;\n                var2 = 0x024f;\n                var3 = msg.data.length;\n                var4 = 0x04;\n                var2 = func_0AC5(var3, var4);\n                func_024F(var2);\n                stop();\n            } else if (var0 == 0x8da5cb5b) {\n                // Dispatch table entry for owner()\n                var1 = storage[0x00] & (0x01 << 0xa0) - 0x01;\n                goto label_01F8;\n            } else { revert(memory[0x00:0x00]); }\n        } else if (var0 == 0x95d89b41) {\n            // Dispatch table entry for symbol()\n            var1 = 0x012e;\n            var1 = symbol();\n            goto label_012E;\n        } else if (var0 == 0xa457c2d7) {\n            // Dispatch table entry for decreaseAllowance(address,uint256)\n            var1 = 0x0157;\n            var2 = 0x027b;\n            var3 = msg.data.length;\n            var4 = 0x04;\n            var2, var3 = func_0A5F(var3, var4);\n            var1 = func_027B(var2, var3);\n            goto label_0157;\n        } else if (var0 == 0xa9059cbb) {\n            // Dispatch table entry for transfer(address,uint256)\n            var1 = 0x0157;\n            var2 = 0x028e;\n            var3 = msg.data.length;\n            var4 = 0x04;\n            var2, var3 = func_0A5F(var3, var4);\n            var4 = 0x00;\n            var5 = 0x0358;\n            var6 = msg.sender;\n            var7 = var2;\n            var8 = var3;\n            func_06F4(var6, var7, var8);\n            goto label_0358;\n        } else if (var0 == 0xbc4c851c) {\n            // Dispatch table entry for 0xbc4c851c (unknown)\n            var1 = 0x01e3;\n            var2 = 0x02a1;\n            var3 = msg.data.length;\n            var4 = 0x04;\n            var2 = func_0AC5(var3, var4);\n            func_02A1(var2);\n            stop();\n        } else if (var0 == 0xdd62ed3e) {\n            // Dispatch table entry for allowance(address,address)\n            var1 = 0x0170;\n            var2 = 0x02b4;\n            var3 = msg.data.length;\n            var4 = 0x04;\n            var2, var3 = func_0AE7(var3, var4);\n            var1 = func_02B4(var2, var3);\n            goto label_0170;\n        } else { revert(memory[0x00:0x00]); }\n    }\n    \n    function func_01A7(var arg0) returns (var arg0) {\n        memory[0x20:0x40] = 0x08;\n        memory[0x00:0x20] = arg0;\n        return storage[keccak256(memory[0x00:0x40])];\n    }\n    \n    function func_01D6(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = msg.sender;\n        var var2 = 0x03a8;\n        var var3 = var1;\n        var var4 = arg0;\n        var var5 = arg1;\n        var var6 = 0x0399;\n        var var7 = var3;\n        var var8 = var4;\n        var6 = func_0529(var7, var8);\n        func_0399(var3, var4, var5, var6);\n        return 0x01;\n    }\n    \n    function func_021E(var arg0) returns (var r0) {\n        memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n        memory[0x20:0x40] = 0x06;\n        return storage[keccak256(memory[0x00:0x40])];\n    }\n    \n    function func_024F(var arg0) {\n        if (msg.sender != storage[0x02] & (0x01 << 0xa0) - 0x01) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n        memory[0x20:0x40] = 0x08;\n        storage[keccak256(memory[0x00:0x40])] = 0x2fc9;\n    }\n    \n    function func_027B(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = msg.sender;\n        var var2 = var0;\n        var var3 = 0x046e;\n        var var4 = var1;\n        var var5 = arg0;\n        var3 = func_0529(var4, var5);\n        var2 = var3;\n    \n        if (var2 >= arg1) {\n            var3 = 0x037b;\n            var4 = var1;\n            var5 = arg0;\n            var var6 = 0x03a3;\n            var var7 = arg1;\n            var var8 = var2;\n            var6 = func_0B7D(var7, var8);\n            func_03A3(var4, var5, var6);\n            return 0x01;\n        } else {\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = 0x461bcd << 0xe5;\n            memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = 0x20;\n            memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = 0x25;\n            memory[temp0 + 0x44:temp0 + 0x44 + 0x20] = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n            memory[temp0 + 0x64:temp0 + 0x64 + 0x20] = 0x207a65726f << 0xd8;\n            var3 = temp0 + 0x84;\n            var temp1 = memory[0x40:0x60];\n            revert(memory[temp1:temp1 + var3 - temp1]);\n        }\n    }\n    \n    function func_02A1(var arg0) {\n        if (msg.sender != storage[0x02] & (0x01 << 0xa0) - 0x01) { revert(memory[0x00:0x00]); }\n    \n        memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n        memory[0x20:0x40] = 0x08;\n        storage[keccak256(memory[0x00:0x40])] = 0x00;\n    }\n    \n    function func_02B4(var arg0, var arg1) returns (var r0) {\n        r0 = func_0529(arg0, arg1);\n        // Error: Could not resolve method call return address!\n    }\n    \n    function func_02B9() returns (var r0) {\n        var var0 = 0x60;\n        var var1 = 0x04;\n        var var2 = 0x02c8;\n        var var3 = storage[var1];\n        var2 = func_0B1A(var3);\n        var temp0 = var2;\n        var temp1 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp1 + (temp0 + 0x1f) / 0x20 * 0x20 + 0x20;\n        var temp2 = var1;\n        var1 = temp1;\n        var2 = temp2;\n        var3 = temp0;\n        memory[var1:var1 + 0x20] = var3;\n        var var4 = var1 + 0x20;\n        var var5 = var2;\n        var var7 = storage[var5];\n        var var6 = 0x02f4;\n        var6 = func_0B1A(var7);\n    \n        if (!var6) {\n        label_0341:\n            return var1;\n        } else if (0x1f < var6) {\n            var temp3 = var4;\n            var temp4 = temp3 + var6;\n            var4 = temp4;\n            memory[0x00:0x20] = var5;\n            var temp5 = keccak256(memory[0x00:0x20]);\n            memory[temp3:temp3 + 0x20] = storage[temp5];\n            var5 = temp5 + 0x01;\n            var6 = temp3 + 0x20;\n        \n            if (var4 <= var6) { goto label_0338; }\n        \n        label_0324:\n            var temp6 = var5;\n            var temp7 = var6;\n            memory[temp7:temp7 + 0x20] = storage[temp6];\n            var5 = temp6 + 0x01;\n            var6 = temp7 + 0x20;\n        \n            if (var4 > var6) { goto label_0324; }\n        \n        label_0338:\n            var temp8 = var4;\n            var temp9 = temp8 + (var6 - temp8 & 0x1f);\n            var6 = temp8;\n            var4 = temp9;\n            goto label_0341;\n        } else {\n            var temp10 = var4;\n            memory[temp10:temp10 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n            var4 = temp10 + 0x20;\n            var6 = var6;\n            goto label_0341;\n        }\n    }\n    \n    function func_0399(var arg0, var arg1, var arg2, var arg3) {\n        var temp0 = arg2;\n        arg2 = 0x03a3;\n        var temp1 = arg3;\n        arg3 = temp0;\n        var var0 = temp1;\n        arg2 = func_0B6A(arg3, var0);\n        func_03A3(arg0, arg1, arg2);\n        // Error: Could not resolve method call return address!\n    }\n    \n    function func_03A3(var arg0, var arg1, var arg2) {\n        func_0554(arg0, arg1, arg2);\n        // Error: Could not resolve method call return address!\n    }\n    \n    function func_03B2() {\n        memory[0x00:0x20] = msg.sender;\n        memory[0x20:0x40] = 0x06;\n        var var0 = msg.sender;\n        var var1 = storage[0x09];\n        var var2 = keccak256(memory[0x00:0x40]);\n        var var3 = 0x00;\n        var var4 = 0x03d7;\n        var var5 = var1;\n        var var6 = storage[var2];\n        var4 = func_0B6A(var5, var6);\n        storage[var2] = var4;\n    \n        if (msg.sender == storage[0x02] & (0x01 << 0xa0) - 0x01) { return; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function symbol() returns (var r0) {\n        var var0 = 0x60;\n        var var1 = 0x05;\n        var var2 = 0x02c8;\n        var var3 = storage[var1];\n        var2 = func_0B1A(var3);\n        var temp0 = var2;\n        var temp1 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp1 + (temp0 + 0x1f) / 0x20 * 0x20 + 0x20;\n        var temp2 = var1;\n        var1 = temp1;\n        var2 = temp2;\n        var3 = temp0;\n        memory[var1:var1 + 0x20] = var3;\n        var var4 = var1 + 0x20;\n        var var5 = var2;\n        var var7 = storage[var5];\n        var var6 = 0x02f4;\n        var6 = func_0B1A(var7);\n    \n        if (!var6) {\n        label_0341:\n            return var1;\n        } else if (0x1f < var6) {\n            var temp3 = var4;\n            var temp4 = temp3 + var6;\n            var4 = temp4;\n            memory[0x00:0x20] = var5;\n            var temp5 = keccak256(memory[0x00:0x20]);\n            memory[temp3:temp3 + 0x20] = storage[temp5];\n            var5 = temp5 + 0x01;\n            var6 = temp3 + 0x20;\n        \n            if (var4 <= var6) { goto label_0338; }\n        \n        label_0324:\n            var temp6 = var5;\n            var temp7 = var6;\n            memory[temp7:temp7 + 0x20] = storage[temp6];\n            var5 = temp6 + 0x01;\n            var6 = temp7 + 0x20;\n        \n            if (var4 > var6) { goto label_0324; }\n        \n        label_0338:\n            var temp8 = var4;\n            var temp9 = temp8 + (var6 - temp8 & 0x1f);\n            var6 = temp8;\n            var4 = temp9;\n            goto label_0341;\n        } else {\n            var temp10 = var4;\n            memory[temp10:temp10 + 0x20] = storage[var5] / 0x0100 * 0x0100;\n            var4 = temp10 + 0x20;\n            var6 = var6;\n            goto label_0341;\n        }\n    }\n    \n    function func_0529(var arg0, var arg1) returns (var r0) {\n        var temp0 = (0x01 << 0xa0) - 0x01;\n        memory[0x00:0x20] = temp0 & arg0;\n        memory[0x20:0x40] = 0x07;\n        var temp1 = keccak256(memory[0x00:0x40]);\n        memory[0x00:0x20] = temp0 & arg1;\n        memory[0x20:0x40] = temp1;\n        return storage[keccak256(memory[0x00:0x40])];\n    }\n    \n    function func_0554(var arg0, var arg1, var arg2) {\n        if (!(arg0 & (0x01 << 0xa0) - 0x01)) {\n            var temp9 = memory[0x40:0x60];\n            memory[temp9:temp9 + 0x20] = 0x461bcd << 0xe5;\n            memory[temp9 + 0x04:temp9 + 0x04 + 0x20] = 0x20;\n            memory[temp9 + 0x24:temp9 + 0x24 + 0x20] = 0x24;\n            memory[temp9 + 0x44:temp9 + 0x44 + 0x20] = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n            memory[temp9 + 0x64:temp9 + 0x64 + 0x20] = 0x72657373 << 0xe0;\n            var0 = temp9 + 0x84;\n            goto label_04CA;\n        } else if (arg1 & (0x01 << 0xa0) - 0x01) {\n            var temp0 = (0x01 << 0xa0) - 0x01;\n            var temp1 = temp0 & arg0;\n            memory[0x00:0x20] = temp1;\n            memory[0x20:0x40] = 0x07;\n            var temp2 = keccak256(memory[0x00:0x40]);\n            var temp3 = arg1 & temp0;\n            memory[0x00:0x20] = temp3;\n            memory[0x20:0x40] = temp2;\n            var temp4 = arg2;\n            storage[keccak256(memory[0x00:0x40])] = temp4;\n            var temp5 = memory[0x40:0x60];\n            memory[temp5:temp5 + 0x20] = temp4;\n            var temp6 = memory[0x40:0x60];\n            log(memory[temp6:temp6 + (temp5 + 0x20) - temp6], [0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, stack[-3] & (0x01 << 0xa0) - 0x01, stack[-2] & (0x01 << 0xa0) - 0x01]);\n            return;\n        } else {\n            var temp7 = memory[0x40:0x60];\n            memory[temp7:temp7 + 0x20] = 0x461bcd << 0xe5;\n            memory[temp7 + 0x04:temp7 + 0x04 + 0x20] = 0x20;\n            memory[temp7 + 0x24:temp7 + 0x24 + 0x20] = 0x22;\n            memory[temp7 + 0x44:temp7 + 0x44 + 0x20] = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n            memory[temp7 + 0x64:temp7 + 0x64 + 0x20] = 0x7373 << 0xf0;\n            var var0 = temp7 + 0x84;\n        \n        label_04CA:\n            var temp8 = memory[0x40:0x60];\n            revert(memory[temp8:temp8 + var0 - temp8]);\n        }\n    }\n    \n    function func_0678(var arg0, var arg1, var arg2) {\n        var var0 = 0x00;\n        var var1 = 0x0684;\n        var var2 = arg0;\n        var var3 = arg1;\n        var1 = func_0529(var2, var3);\n        var0 = var1;\n    \n        if (var0 == ~0x00) {\n        label_06EE:\n            return;\n        } else if (var0 >= arg2) {\n            var1 = 0x06ee;\n            var2 = arg0;\n            var3 = arg1;\n            var var4 = 0x03a3;\n            var var5 = arg2;\n            var var6 = var0;\n            var4 = func_0B7D(var5, var6);\n            func_03A3(var2, var3, var4);\n            goto label_06EE;\n        } else {\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = 0x461bcd << 0xe5;\n            memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = 0x20;\n            memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = 0x1d;\n            memory[temp0 + 0x44:temp0 + 0x44 + 0x20] = 0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000;\n            var1 = temp0 + 0x64;\n            var temp1 = memory[0x40:0x60];\n            revert(memory[temp1:temp1 + var1 - temp1]);\n        }\n    }\n    \n    function func_06F4(var arg0, var arg1, var arg2) {\n        memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n        memory[0x20:0x40] = 0x08;\n        var var0 = arg0;\n    \n        if (storage[0x0a] - storage[keccak256(memory[0x00:0x40])]) {\n        label_0756:\n        \n            if (!(arg0 & (0x01 << 0xa0) - 0x01)) {\n                var temp7 = memory[0x40:0x60];\n                memory[temp7:temp7 + 0x20] = 0x461bcd << 0xe5;\n                memory[temp7 + 0x04:temp7 + 0x04 + 0x20] = 0x20;\n                memory[temp7 + 0x24:temp7 + 0x24 + 0x20] = 0x25;\n                memory[temp7 + 0x44:temp7 + 0x44 + 0x20] = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n                memory[temp7 + 0x64:temp7 + 0x64 + 0x20] = 0x6472657373 << 0xd8;\n                var1 = temp7 + 0x84;\n                goto label_04CA;\n            } else if (arg1 & (0x01 << 0xa0) - 0x01) {\n                memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n                memory[0x20:0x40] = 0x06;\n                var var1 = storage[keccak256(memory[0x00:0x40])];\n            \n                if (var1 >= arg2) {\n                    memory[0x00:0x20] = arg0 & (0x01 << 0xa0) - 0x01;\n                    memory[0x20:0x40] = 0x06;\n                    var var2 = 0x08b8;\n                    var var4 = storage[keccak256(memory[0x00:0x40])];\n                    var var3 = arg2;\n                    var2 = func_0B7D(var3, var4);\n                    var temp0 = (0x01 << 0xa0) - 0x01;\n                    memory[0x00:0x20] = arg0 & temp0;\n                    memory[0x20:0x40] = 0x06;\n                    storage[keccak256(memory[0x00:0x40])] = var2;\n                    memory[0x00:0x20] = arg1 & temp0;\n                    var2 = 0x08e8;\n                    var3 = arg2;\n                    var4 = storage[keccak256(memory[0x00:0x40])];\n                    var2 = func_0B6A(var3, var4);\n                    var temp1 = (0x01 << 0xa0) - 0x01;\n                    memory[0x00:0x20] = arg1 & temp1;\n                    memory[0x20:0x40] = 0x06;\n                    storage[keccak256(memory[0x00:0x40])] = var2;\n                    var2 = arg1 & temp1;\n                    var temp2 = memory[0x40:0x60];\n                    var3 = arg0 & temp1;\n                    var4 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n                    memory[temp2:temp2 + 0x20] = arg2;\n                    var var5 = temp2 + 0x20;\n                    var temp3 = memory[0x40:0x60];\n                    log(memory[temp3:temp3 + var5 - temp3], [stack[-2], stack[-3], stack[-4]]);\n                    return;\n                } else {\n                    var temp4 = memory[0x40:0x60];\n                    memory[temp4:temp4 + 0x20] = 0x461bcd << 0xe5;\n                    memory[temp4 + 0x04:temp4 + 0x04 + 0x20] = 0x20;\n                    memory[temp4 + 0x24:temp4 + 0x24 + 0x20] = 0x26;\n                    memory[temp4 + 0x44:temp4 + 0x44 + 0x20] = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n                    memory[temp4 + 0x64:temp4 + 0x64 + 0x20] = 0x616c616e6365 << 0xd0;\n                    var2 = temp4 + 0x84;\n                \n                label_04CA:\n                    var temp5 = memory[0x40:0x60];\n                    revert(memory[temp5:temp5 + var2 - temp5]);\n                }\n            } else {\n                var temp6 = memory[0x40:0x60];\n                memory[temp6:temp6 + 0x20] = 0x461bcd << 0xe5;\n                memory[temp6 + 0x04:temp6 + 0x04 + 0x20] = 0x20;\n                memory[temp6 + 0x24:temp6 + 0x24 + 0x20] = 0x23;\n                memory[temp6 + 0x44:temp6 + 0x44 + 0x20] = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n                memory[temp6 + 0x64:temp6 + 0x64 + 0x20] = 0x657373 << 0xe8;\n                var1 = temp6 + 0x84;\n                goto label_04CA;\n            }\n        } else {\n            memory[0x00:0x20] = var0 & (0x01 << 0xa0) - 0x01;\n            memory[0x20:0x40] = 0x06;\n            var temp8 = storage[keccak256(memory[0x00:0x40])];\n            memory[0x20:0x40] = 0x08;\n            var1 = 0x01;\n            var3 = temp8;\n            var4 = storage[keccak256(memory[0x00:0x40])];\n            var2 = 0x0749;\n            var2 = func_0B6A(var3, var4);\n            var temp9 = var1;\n            var1 = 0x0753;\n            var temp10 = var2;\n            var2 = temp9;\n            var3 = temp10;\n            var1 = func_0B7D(var2, var3);\n            arg2 = var1;\n            goto label_0756;\n        }\n    }\n    \n    function func_094B() {\n        if (msg.sender == storage[0x00] & (0x01 << 0xa0) - 0x01) { return; }\n    \n        var temp0 = memory[0x40:0x60];\n        memory[temp0:temp0 + 0x20] = 0x461bcd << 0xe5;\n        memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = 0x20;\n        memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = 0x20;\n        memory[temp0 + 0x44:temp0 + 0x44 + 0x20] = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var var0 = temp0 + 0x64;\n        var temp1 = memory[0x40:0x60];\n        revert(memory[temp1:temp1 + var0 - temp1]);\n    }\n    \n    function func_09A5(var arg0) {\n        var temp0 = storage[0x00];\n        var temp1 = (0x01 << 0xa0) - 0x01;\n        var temp2 = temp1 & arg0;\n        storage[0x00] = temp2 | (temp0 & ~((0x01 << 0xa0) - 0x01));\n        log(memory[memory[0x40:0x60]:memory[0x40:0x60] + 0x00], [0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, storage[0x00] & (0x01 << 0xa0) - 0x01, stack[-1] & (0x01 << 0xa0) - 0x01]);\n    }\n    \n    function func_09F5(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = 0x20;\n        var temp0 = arg1;\n        memory[temp0:temp0 + 0x20] = var1;\n        var temp1 = memory[arg0:arg0 + 0x20];\n        var var2 = temp1;\n        memory[temp0 + var1:temp0 + var1 + 0x20] = var2;\n        var var3 = 0x00;\n    \n        if (var3 >= var2) {\n        label_0A22:\n            var temp2 = var2;\n            var temp3 = arg1;\n            memory[temp3 + temp2 + 0x40:temp3 + temp2 + 0x40 + 0x20] = 0x00;\n            return temp3 + (temp2 + 0x1f & ~0x1f) + 0x40;\n        } else {\n        label_0A0F:\n            var temp4 = var3;\n            var temp5 = var1;\n            memory[temp4 + arg1 + 0x40:temp4 + arg1 + 0x40 + 0x20] = memory[temp5 + temp4 + arg0:temp5 + temp4 + arg0 + 0x20];\n            var3 = temp5 + temp4;\n        \n            if (var3 >= var2) { goto label_0A22; }\n            else { goto label_0A0F; }\n        }\n    }\n    \n    function func_0A43(var arg0) returns (var r0) {\n        var temp0 = msg.data[arg0:arg0 + 0x20];\n        var var0 = temp0;\n    \n        if (var0 == var0 & (0x01 << 0xa0) - 0x01) { return var0; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function func_0A5F(var arg0, var arg1) returns (var r0, var arg0) {\n        var var0 = 0x00;\n        var var1 = var0;\n    \n        if (arg0 - arg1 i< 0x40) { revert(memory[0x00:0x00]); }\n    \n        var var2 = 0x0a7b;\n        var var3 = arg1;\n        var2 = func_0A43(var3);\n        r0 = var2;\n        arg0 = msg.data[arg1 + 0x20:arg1 + 0x20 + 0x20];\n        return r0, arg0;\n    }\n    \n    function func_0A89(var arg0, var arg1) returns (var r0, var arg0, var arg1) {\n        var var0 = 0x00;\n        var var1 = var0;\n        var var2 = 0x00;\n    \n        if (arg0 - arg1 i< 0x60) { revert(memory[0x00:0x00]); }\n    \n        var var3 = 0x0aa7;\n        var var4 = arg1;\n        var3 = func_0A43(var4);\n        var0 = var3;\n        var3 = 0x0ab5;\n        var4 = arg1 + 0x20;\n        var3 = func_0A43(var4);\n        arg1 = msg.data[arg1 + 0x40:arg1 + 0x40 + 0x20];\n        arg0 = var3;\n        r0 = var0;\n        return r0, arg0, arg1;\n    }\n    \n    function func_0AC5(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n    \n        if (arg0 - arg1 i< 0x20) { revert(memory[0x00:0x00]); }\n    \n        var var1 = 0x0ae0;\n        var var2 = arg1;\n        return func_0A43(var2);\n    }\n    \n    function func_0AE7(var arg0, var arg1) returns (var r0, var arg0) {\n        var var0 = 0x00;\n        var var1 = var0;\n    \n        if (arg0 - arg1 i< 0x40) { revert(memory[0x00:0x00]); }\n    \n        var var2 = 0x0b03;\n        var var3 = arg1;\n        var2 = func_0A43(var3);\n        var0 = var2;\n        var2 = 0x0b11;\n        var3 = arg1 + 0x20;\n        var2 = func_0A43(var3);\n        arg0 = var2;\n        r0 = var0;\n        return r0, arg0;\n    }\n    \n    function func_0B1A(var arg0) returns (var r0) {\n        var temp0 = arg0;\n        var var0 = temp0 >> 0x01;\n        var var1 = temp0 & 0x01;\n    \n        if (!var1) {\n            var temp1 = var0 & 0x7f;\n            var0 = temp1;\n        \n            if (var1 - (var0 < 0x20)) { goto label_0B4E; }\n            else { goto label_0B39; }\n        } else if (var1 - (var0 < 0x20)) {\n        label_0B4E:\n            return var0;\n        } else {\n        label_0B39:\n            memory[0x00:0x20] = 0x4e487b71 << 0xe0;\n            memory[0x04:0x24] = 0x22;\n            revert(memory[0x00:0x24]);\n        }\n    }\n    \n    function func_0B6A(var arg0, var arg1) returns (var r0) {\n        var temp0 = arg1;\n        var var0 = arg0 + temp0;\n    \n        if (temp0 <= var0) { return var0; }\n    \n        var var1 = 0x035c;\n        memory[0x00:0x20] = 0x4e487b71 << 0xe0;\n        memory[0x04:0x24] = 0x11;\n        revert(memory[0x00:0x24]);\n    }\n    \n    function func_0B7D(var arg0, var arg1) returns (var r0) {\n        var temp0 = arg1;\n        var var0 = temp0 - arg0;\n    \n        if (var0 <= temp0) { return var0; }\n    \n        var var1 = 0x035c;\n        memory[0x00:0x20] = 0x4e487b71 << 0xe0;\n        memory[0x04:0x24] = 0x11;\n        revert(memory[0x00:0x24]);\n    }\n}\n\n.",
	"status": "1",
	"time_cost": 27.75327467918396,
	"usage": {
		"completion_tokens": 559,
		"prompt_tokens": 9982,
		"total_tokens": 10541
	}
}