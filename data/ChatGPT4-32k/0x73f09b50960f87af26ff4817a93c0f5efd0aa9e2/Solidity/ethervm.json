{
	"address": "0x73f09b50960f87af26ff4817a93c0f5efd0aa9e2",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is the Solidity Contract code of the given decompiled code:\n\n```solidity\npragma solidity ^0.5.0;\n\ncontract Contract {\n    \n    uint256 storage0;\n    uint256 storage1;\n    uint256 storage2;\n    uint256 storage3;\n    uint256 storage4;\n    uint256 storage5;\n    uint256 storage6;\n    uint256 storage7;\n    uint256 storage8;\n    uint256 storage9;\n\n    function transferSafety() public view returns (uint256) {\n        return storage9;\n    }\n\n    function directorB() public view returns (uint256) {\n        return storage1 & 0x02 ** 0xa0 - 0x01;\n    }\n\n    function proposalAmount() public view returns (uint256) {\n        return storage5;\n    }\n\n    function accept(uint256 arg0) public {\n        require(msg.sender == storage2 || msg.sender == storage1, \"Caller is not a director\");\n        require(arg0 == storage7, \"Invalid proposal nonce\");\n        require(storage5 > 0, \"Amount must be greater than zero\");\n        require(storage4 != 0, \"Invalid destination address\");\n\n        if (msg.sender != storage0) {\n            require(block.number >= storage6, \"Block number is not yet reached\");\n        }\n\n        // Reset the proposal\n        storage2 = 0;\n        storage3 = 0;\n        storage4 = 0;\n        storage5 = 0;\n        storage6 = 0;\n        storage7 = storage7 + 1;\n    }\n\n    function proposalBlock() public view returns (uint256) {\n        return storage6;\n    }\n\n    function proposalContract() public view returns (uint256) {\n        return storage3 & 0x02 ** 0xa0 - 0x01;\n    }\n\n    function proposalDestination() public view returns (uint256) {\n        return storage4 & 0x02 ** 0xa0 - 0x01;\n    }\n\n    function proposal(uint256 arg0, uint256 arg1, address arg2) public {\n        require(msg.sender == storage0 || msg.sender == storage1, \"Caller is not a director\");\n        storage2 = msg.sender;\n        storage3 = arg0;\n        storage4 = uint256(arg2);\n        storage5 = arg1;\n        storage6 = block.number + storage8;\n        storage7 = storage7 + 1;\n    }\n\n    function transferDirectorB(address arg0) public {\n        require(msg.sender == storage1, \"Caller is not director B\");\n        require(msg.value == storage9, \"Incorrect transfer value\");\n        storage1 = uint256(arg0);\n    }\n\n    function proposalAuthor() public view returns (uint256) {\n        return storage2 & 0x02 ** 0xa0 - 0x01;\n    }\n\n    function overrideBlock() public view returns (uint256) {\n        return storage8;\n    }\n\n    function proposalNonce() public view returns (uint256) {\n        return storage7;\n    }\n\n    function directorA() public view returns (uint256) {\n        return storage0 & 0x02 ** 0xa0 - 0x01;\n    }\n\n    function reset() public {\n        require(msg.sender == storage0 || msg.sender == storage1, \"Caller is not a director\");\n        storage2 = 0;\n        storage3 = 0;\n        storage4 = 0;\n        storage5 = 0;\n        storage6 = 0;\n        storage7 = storage7 + 1;\n    }\n\n    function transferDirectorA(address arg0) public {\n        require(msg.sender == storage0, \"Caller is not director A\");\n        require(msg.value == storage9, \"Incorrect transfer value\");\n        storage0 = uint256(arg0);\n    }\n}\n```\n\nPlease note that this code is a rough translation from the decompiled EVM bytecode you've provided. It doesn't include any events or the logic for calling specific functions based on input data as in the decompiled code, and there may be some inaccuracies. It is always recommended to use the original Solidity source code, when available.",
				"role": "assistant"
			}
		}
	],
	"created": 1700471995,
	"id": "chatcmpl-8MujbkENppRXNLjaApZKdpck8VQQo",
	"input_format": "DecompiledCode",
	"ir": "contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x80;\n    \n        if (msg.data.length < 0x04) { stop(); }\n    \n        var var0 = msg.data[0x00:0x20] / 0x0100000000000000000000000000000000000000000000000000000000 & 0xffffffff;\n    \n        if (var0 == 0x1284c8f5) {\n            // Dispatch table entry for transferSafety()\n            var var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00f1;\n            var var2 = transferSafety();\n        \n        label_00F1:\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = var2;\n            var temp1 = memory[0x40:0x60];\n            return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n        } else if (var0 == 0x14139904) {\n            // Dispatch table entry for directorB()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0118;\n            var2 = directorB();\n        \n        label_0118:\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n            var temp3 = memory[0x40:0x60];\n            return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n        } else if (var0 == 0x173a2b5c) {\n            // Dispatch table entry for proposalAmount()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00f1;\n            var2 = proposalAmount();\n            goto label_00F1;\n        } else if (var0 == 0x19b05f49) {\n            // Dispatch table entry for accept(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00da;\n            var2 = msg.data[0x04:0x24];\n            accept(var2);\n            stop();\n        } else if (var0 == 0x216aa0ba) {\n            // Dispatch table entry for proposalBlock()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00f1;\n            var2 = proposalBlock();\n            goto label_00F1;\n        } else if (var0 == 0x3aef3900) {\n            // Dispatch table entry for proposalContract()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0118;\n            var2 = proposalContract();\n            goto label_0118;\n        } else if (var0 == 0x3e8a9439) {\n            // Dispatch table entry for proposalDestination()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0118;\n            var2 = proposalDestination();\n            goto label_0118;\n        } else if (var0 == 0x6e3f3f1a) {\n            // Dispatch table entry for proposal(address,uint256,address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00da;\n            var temp4 = 0x02 ** 0xa0 - 0x01;\n            var2 = temp4 & msg.data[0x04:0x24];\n            var var3 = msg.data[0x24:0x44];\n            var var4 = msg.data[0x44:0x64] & temp4;\n            proposal(var2, var3, var4);\n            stop();\n        } else if (var0 == 0x72c1df4c) {\n            // Dispatch table entry for transferDirectorB(address)\n            var1 = 0x00da;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            transferDirectorB(var2);\n            stop();\n        } else if (var0 == 0x8485b90c) {\n            // Dispatch table entry for proposalAuthor()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0118;\n            var2 = proposalAuthor();\n            goto label_0118;\n        } else if (var0 == 0x92abb859) {\n            // Dispatch table entry for overrideBlock()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00f1;\n            var2 = overrideBlock();\n            goto label_00F1;\n        } else if (var0 == 0xcc3c74a1) {\n            // Dispatch table entry for proposalNonce()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00f1;\n            var2 = proposalNonce();\n            goto label_00F1;\n        } else if (var0 == 0xd05efd40) {\n            // Dispatch table entry for directorA()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0118;\n            var2 = directorA();\n            goto label_0118;\n        } else if (var0 == 0xd826f88f) {\n            // Dispatch table entry for reset()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00da;\n            reset();\n            stop();\n        } else if (var0 == 0xdd34abd3) {\n            // Dispatch table entry for transferDirectorA(address)\n            var1 = 0x00da;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            transferDirectorA(var2);\n            stop();\n        } else { stop(); }\n    }\n    \n    function transferSafety() returns (var r0) { return storage[0x09]; }\n    \n    function directorB() returns (var r0) { return storage[0x01] & 0x02 ** 0xa0 - 0x01; }\n    \n    function proposalAmount() returns (var r0) { return storage[0x05]; }\n    \n    function accept(var arg0) {\n        var var0 = 0x00;\n        var var1 = var0;\n        var var2 = var1;\n        var var3 = var2;\n        var var4 = msg.sender == storage[var3] & 0x02 ** 0xa0 - 0x01;\n    \n        if (var4) {\n            if (!var4) { revert(memory[0x00:0x00]); }\n        \n        label_02AC:\n        \n            if (arg0 != storage[0x07]) { revert(memory[0x00:0x00]); }\n        \n            if (0x00 >= storage[0x05]) { revert(memory[0x00:0x00]); }\n        \n            if (!(storage[0x04] & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n        \n            var4 = msg.sender != storage[0x02] & 0x02 ** 0xa0 - 0x01;\n        \n            if (var4) {\n                if (!var4) { revert(memory[0x00:0x00]); }\n            \n            label_0307:\n                var temp0 = 0x02 ** 0xa0 - 0x01;\n                var0 = temp0 & storage[0x03];\n                var1 = temp0 & storage[0x04];\n                var2 = storage[0x05];\n                var4 = 0x032b;\n                reset();\n            \n                if (var0 & 0x02 ** 0xa0 - 0x01) {\n                    var temp1 = memory[0x40:0x60];\n                    memory[temp1:temp1 + 0x20] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n                    var temp2 = 0x02 ** 0xa0 - 0x01;\n                    memory[temp1 + 0x04:temp1 + 0x04 + 0x20] = temp2 & var1;\n                    memory[temp1 + 0x24:temp1 + 0x24 + 0x20] = var2;\n                    var3 = var0;\n                    var4 = var3 & temp2;\n                    var var5 = 0xa9059cbb;\n                    var var6 = temp1 + 0x44;\n                    var var7 = 0x00;\n                    var var8 = memory[0x40:0x60];\n                    var var9 = temp1 - var8 + 0x44;\n                    var var10 = var8;\n                    var var11 = var7;\n                    var var12 = var4;\n                    var var13 = !address(var12).code.length;\n                \n                    if (var13) { revert(memory[0x00:0x00]); }\n                \n                    var temp3;\n                    temp3, memory[var8:var8 + var7] = address(var12).call.gas(msg.gas).value(var11)(memory[var10:var10 + var9]);\n                    var7 = !temp3;\n                \n                    if (!var7) {\n                        var temp4 = memory[0x40:0x60];\n                        memory[temp4:temp4 + 0x20] = arg0;\n                        var temp5 = memory[0x40:0x60];\n                        log(memory[temp5:temp5 + temp4 - temp5 + 0x20], [0xa573f6e77cec35b255a3fb35b673473461473d63e293d50c5eba0d7d18942383]);\n                        return;\n                    } else {\n                        var temp6 = returndata.length;\n                        memory[0x00:0x00 + temp6] = returndata[0x00:0x00 + temp6];\n                        revert(memory[0x00:0x00 + returndata.length]);\n                    }\n                } else if (var2 <= address(this).balance) {\n                    var temp7 = memory[0x40:0x60];\n                    var temp8 = var2;\n                    var temp9;\n                    temp9, memory[temp7:temp7 + 0x00] = address(var1 & 0x02 ** 0xa0 - 0x01).call.gas(!temp8 * 0x08fc).value(temp8)(memory[temp7:temp7 + 0x00]);\n                    var4 = !temp9;\n                \n                    if (!var4) {\n                        var temp10 = memory[0x40:0x60];\n                        memory[temp10:temp10 + 0x20] = arg0;\n                        var temp11 = memory[0x40:0x60];\n                        log(memory[temp11:temp11 + temp10 - temp11 + 0x20], [0xa573f6e77cec35b255a3fb35b673473461473d63e293d50c5eba0d7d18942383]);\n                        return;\n                    } else {\n                        var temp12 = returndata.length;\n                        memory[0x00:0x00 + temp12] = returndata[0x00:0x00 + temp12];\n                        revert(memory[0x00:0x00 + returndata.length]);\n                    }\n                } else { revert(memory[0x00:0x00]); }\n            } else if (block.number >= storage[0x06]) { goto label_0307; }\n            else { revert(memory[0x00:0x00]); }\n        } else if (msg.sender == storage[0x01] & 0x02 ** 0xa0 - 0x01) { goto label_02AC; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function proposalBlock() returns (var r0) { return storage[0x06]; }\n    \n    function proposalContract() returns (var r0) { return storage[0x03] & 0x02 ** 0xa0 - 0x01; }\n    \n    function proposalDestination() returns (var r0) { return storage[0x04] & 0x02 ** 0xa0 - 0x01; }\n    \n    function proposal(var arg0, var arg1, var arg2) {\n        var var0 = msg.sender == storage[0x00] & 0x02 ** 0xa0 - 0x01;\n    \n        if (var0) {\n            if (!var0) { revert(memory[0x00:0x00]); }\n        \n        label_0496:\n            var temp0 = storage[0x07] + 0x01;\n            storage[0x07] = temp0;\n            var temp1 = ~0xffffffffffffffffffffffffffffffffffffffff;\n            var temp2 = (temp1 & storage[0x02]) | msg.sender;\n            storage[0x02] = temp2;\n            var temp3 = 0x02 ** 0xa0 - 0x01;\n            var temp4 = (temp3 & arg0) | (temp1 & storage[0x03]);\n            storage[0x03] = temp4;\n            var temp5 = arg1;\n            storage[0x05] = temp5;\n            var temp6 = (temp3 & arg2) | (temp1 & storage[0x04]);\n            storage[0x04] = temp6;\n            var temp7 = block.number + storage[0x08];\n            storage[0x06] = temp7;\n            var temp8 = memory[0x40:0x60];\n            memory[temp8:temp8 + 0x20] = temp0;\n            memory[temp8 + 0x20:temp8 + 0x20 + 0x20] = temp3 & temp2;\n            memory[temp8 + 0x40:temp8 + 0x40 + 0x20] = temp3 & temp4;\n            memory[temp8 + 0x60:temp8 + 0x60 + 0x20] = temp5;\n            memory[temp8 + 0x80:temp8 + 0x80 + 0x20] = temp3 & temp6;\n            memory[temp8 + 0xa0:temp8 + 0xa0 + 0x20] = temp7;\n            var temp9 = memory[0x40:0x60];\n            log(memory[temp9:temp9 + temp8 - temp9 + 0xc0], [0xc4edd54a9f95c32a4b15457b7427b13ebb01696e4ba5163153b70f5cc8bb93c4]);\n            return;\n        } else if (msg.sender == storage[0x01] & 0x02 ** 0xa0 - 0x01) { goto label_0496; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function transferDirectorB(var arg0) {\n        if (msg.sender != storage[0x01] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        if (msg.value != storage[0x09]) { revert(memory[0x00:0x00]); }\n    \n        var temp0 = storage[0x09];\n        var temp1 = memory[0x40:0x60];\n        var temp2;\n        temp2, memory[temp1:temp1 + 0x00] = address(storage[0x01] & 0x02 ** 0xa0 - 0x01).call.gas(!temp0 * 0x08fc).value(temp0)(memory[temp1:temp1 + 0x00]);\n        var var0 = !temp2;\n    \n        if (!var0) {\n            var0 = 0x05c1;\n            reset();\n            var temp3 = 0x02 ** 0xa0 - 0x01;\n            var temp4 = (temp3 & arg0) | (storage[0x01] & ~0xffffffffffffffffffffffffffffffffffffffff);\n            storage[0x01] = temp4;\n            var temp5 = memory[0x40:0x60];\n            memory[temp5:temp5 + 0x20] = temp3 & temp4;\n            var temp6 = memory[0x40:0x60];\n            log(memory[temp6:temp6 + temp5 - temp6 + 0x20], [0x8a77cbe0c7cf02f4277c58f952726d98e488a397059e9a58c0637d7486ae0f3e]);\n            return;\n        } else {\n            var temp7 = returndata.length;\n            memory[0x00:0x00 + temp7] = returndata[0x00:0x00 + temp7];\n            revert(memory[0x00:0x00 + returndata.length]);\n        }\n    }\n    \n    function proposalAuthor() returns (var r0) { return storage[0x02] & 0x02 ** 0xa0 - 0x01; }\n    \n    function overrideBlock() returns (var r0) { return storage[0x08]; }\n    \n    function proposalNonce() returns (var r0) { return storage[0x07]; }\n    \n    function directorA() returns (var r0) { return storage[0x00] & 0x02 ** 0xa0 - 0x01; }\n    \n    function reset() {\n        var var0 = msg.sender == storage[0x00] & 0x02 ** 0xa0 - 0x01;\n    \n        if (var0) {\n            if (!var0) { revert(memory[0x00:0x00]); }\n        \n        label_0680:\n            var temp0 = storage[0x07] + 0x01;\n            storage[0x07] = temp0;\n        \n            if (0x0f4240 >= temp0) {\n                var temp1 = ~0xffffffffffffffffffffffffffffffffffffffff;\n                storage[0x02] = temp1 & storage[0x02];\n                storage[0x03] = temp1 & storage[0x03];\n                storage[0x05] = 0x00;\n                storage[0x04] = temp1 & storage[0x04];\n                storage[0x06] = 0x00;\n                return;\n            } else {\n                storage[0x07] = 0x00;\n                var temp2 = ~0xffffffffffffffffffffffffffffffffffffffff;\n                storage[0x02] = temp2 & storage[0x02];\n                storage[0x03] = temp2 & storage[0x03];\n                storage[0x05] = 0x00;\n                storage[0x04] = temp2 & storage[0x04];\n                storage[0x06] = 0x00;\n                return;\n            }\n        } else if (msg.sender == storage[0x01] & 0x02 ** 0xa0 - 0x01) { goto label_0680; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function transferDirectorA(var arg0) {\n        if (msg.sender != storage[0x00] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        if (msg.value != storage[0x09]) { revert(memory[0x00:0x00]); }\n    \n        var temp0 = storage[0x09];\n        var temp1 = memory[0x40:0x60];\n        var temp2;\n        temp2, memory[temp1:temp1 + 0x00] = address(storage[0x00] & 0x02 ** 0xa0 - 0x01).call.gas(!temp0 * 0x08fc).value(temp0)(memory[temp1:temp1 + 0x00]);\n        var var0 = !temp2;\n    \n        if (!var0) {\n            var0 = 0x0742;\n            reset();\n            var temp3 = 0x02 ** 0xa0 - 0x01;\n            var temp4 = (temp3 & arg0) | (storage[0x00] & ~0xffffffffffffffffffffffffffffffffffffffff);\n            storage[0x00] = temp4;\n            var temp5 = memory[0x40:0x60];\n            memory[temp5:temp5 + 0x20] = temp3 & temp4;\n            var temp6 = memory[0x40:0x60];\n            log(memory[temp6:temp6 + temp5 - temp6 + 0x20], [0x80419656043a70fa57ed1372d16ac1eb1ac05cd428a6d9c52b218d77b19fc06d]);\n            return;\n        } else {\n            var temp7 = returndata.length;\n            memory[0x00:0x00 + temp7] = returndata[0x00:0x00 + temp7];\n            revert(memory[0x00:0x00 + returndata.length]);\n        }\n    }\n}\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x80;\n    \n        if (msg.data.length < 0x04) { stop(); }\n    \n        var var0 = msg.data[0x00:0x20] / 0x0100000000000000000000000000000000000000000000000000000000 & 0xffffffff;\n    \n        if (var0 == 0x1284c8f5) {\n            // Dispatch table entry for transferSafety()\n            var var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00f1;\n            var var2 = transferSafety();\n        \n        label_00F1:\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = var2;\n            var temp1 = memory[0x40:0x60];\n            return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n        } else if (var0 == 0x14139904) {\n            // Dispatch table entry for directorB()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0118;\n            var2 = directorB();\n        \n        label_0118:\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n            var temp3 = memory[0x40:0x60];\n            return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n        } else if (var0 == 0x173a2b5c) {\n            // Dispatch table entry for proposalAmount()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00f1;\n            var2 = proposalAmount();\n            goto label_00F1;\n        } else if (var0 == 0x19b05f49) {\n            // Dispatch table entry for accept(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00da;\n            var2 = msg.data[0x04:0x24];\n            accept(var2);\n            stop();\n        } else if (var0 == 0x216aa0ba) {\n            // Dispatch table entry for proposalBlock()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00f1;\n            var2 = proposalBlock();\n            goto label_00F1;\n        } else if (var0 == 0x3aef3900) {\n            // Dispatch table entry for proposalContract()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0118;\n            var2 = proposalContract();\n            goto label_0118;\n        } else if (var0 == 0x3e8a9439) {\n            // Dispatch table entry for proposalDestination()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0118;\n            var2 = proposalDestination();\n            goto label_0118;\n        } else if (var0 == 0x6e3f3f1a) {\n            // Dispatch table entry for proposal(address,uint256,address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00da;\n            var temp4 = 0x02 ** 0xa0 - 0x01;\n            var2 = temp4 & msg.data[0x04:0x24];\n            var var3 = msg.data[0x24:0x44];\n            var var4 = msg.data[0x44:0x64] & temp4;\n            proposal(var2, var3, var4);\n            stop();\n        } else if (var0 == 0x72c1df4c) {\n            // Dispatch table entry for transferDirectorB(address)\n            var1 = 0x00da;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            transferDirectorB(var2);\n            stop();\n        } else if (var0 == 0x8485b90c) {\n            // Dispatch table entry for proposalAuthor()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0118;\n            var2 = proposalAuthor();\n            goto label_0118;\n        } else if (var0 == 0x92abb859) {\n            // Dispatch table entry for overrideBlock()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00f1;\n            var2 = overrideBlock();\n            goto label_00F1;\n        } else if (var0 == 0xcc3c74a1) {\n            // Dispatch table entry for proposalNonce()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00f1;\n            var2 = proposalNonce();\n            goto label_00F1;\n        } else if (var0 == 0xd05efd40) {\n            // Dispatch table entry for directorA()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0118;\n            var2 = directorA();\n            goto label_0118;\n        } else if (var0 == 0xd826f88f) {\n            // Dispatch table entry for reset()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00da;\n            reset();\n            stop();\n        } else if (var0 == 0xdd34abd3) {\n            // Dispatch table entry for transferDirectorA(address)\n            var1 = 0x00da;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            transferDirectorA(var2);\n            stop();\n        } else { stop(); }\n    }\n    \n    function transferSafety() returns (var r0) { return storage[0x09]; }\n    \n    function directorB() returns (var r0) { return storage[0x01] & 0x02 ** 0xa0 - 0x01; }\n    \n    function proposalAmount() returns (var r0) { return storage[0x05]; }\n    \n    function accept(var arg0) {\n        var var0 = 0x00;\n        var var1 = var0;\n        var var2 = var1;\n        var var3 = var2;\n        var var4 = msg.sender == storage[var3] & 0x02 ** 0xa0 - 0x01;\n    \n        if (var4) {\n            if (!var4) { revert(memory[0x00:0x00]); }\n        \n        label_02AC:\n        \n            if (arg0 != storage[0x07]) { revert(memory[0x00:0x00]); }\n        \n            if (0x00 >= storage[0x05]) { revert(memory[0x00:0x00]); }\n        \n            if (!(storage[0x04] & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n        \n            var4 = msg.sender != storage[0x02] & 0x02 ** 0xa0 - 0x01;\n        \n            if (var4) {\n                if (!var4) { revert(memory[0x00:0x00]); }\n            \n            label_0307:\n                var temp0 = 0x02 ** 0xa0 - 0x01;\n                var0 = temp0 & storage[0x03];\n                var1 = temp0 & storage[0x04];\n                var2 = storage[0x05];\n                var4 = 0x032b;\n                reset();\n            \n                if (var0 & 0x02 ** 0xa0 - 0x01) {\n                    var temp1 = memory[0x40:0x60];\n                    memory[temp1:temp1 + 0x20] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n                    var temp2 = 0x02 ** 0xa0 - 0x01;\n                    memory[temp1 + 0x04:temp1 + 0x04 + 0x20] = temp2 & var1;\n                    memory[temp1 + 0x24:temp1 + 0x24 + 0x20] = var2;\n                    var3 = var0;\n                    var4 = var3 & temp2;\n                    var var5 = 0xa9059cbb;\n                    var var6 = temp1 + 0x44;\n                    var var7 = 0x00;\n                    var var8 = memory[0x40:0x60];\n                    var var9 = temp1 - var8 + 0x44;\n                    var var10 = var8;\n                    var var11 = var7;\n                    var var12 = var4;\n                    var var13 = !address(var12).code.length;\n                \n                    if (var13) { revert(memory[0x00:0x00]); }\n                \n                    var temp3;\n                    temp3, memory[var8:var8 + var7] = address(var12).call.gas(msg.gas).value(var11)(memory[var10:var10 + var9]);\n                    var7 = !temp3;\n                \n                    if (!var7) {\n                        var temp4 = memory[0x40:0x60];\n                        memory[temp4:temp4 + 0x20] = arg0;\n                        var temp5 = memory[0x40:0x60];\n                        log(memory[temp5:temp5 + temp4 - temp5 + 0x20], [0xa573f6e77cec35b255a3fb35b673473461473d63e293d50c5eba0d7d18942383]);\n                        return;\n                    } else {\n                        var temp6 = returndata.length;\n                        memory[0x00:0x00 + temp6] = returndata[0x00:0x00 + temp6];\n                        revert(memory[0x00:0x00 + returndata.length]);\n                    }\n                } else if (var2 <= address(this).balance) {\n                    var temp7 = memory[0x40:0x60];\n                    var temp8 = var2;\n                    var temp9;\n                    temp9, memory[temp7:temp7 + 0x00] = address(var1 & 0x02 ** 0xa0 - 0x01).call.gas(!temp8 * 0x08fc).value(temp8)(memory[temp7:temp7 + 0x00]);\n                    var4 = !temp9;\n                \n                    if (!var4) {\n                        var temp10 = memory[0x40:0x60];\n                        memory[temp10:temp10 + 0x20] = arg0;\n                        var temp11 = memory[0x40:0x60];\n                        log(memory[temp11:temp11 + temp10 - temp11 + 0x20], [0xa573f6e77cec35b255a3fb35b673473461473d63e293d50c5eba0d7d18942383]);\n                        return;\n                    } else {\n                        var temp12 = returndata.length;\n                        memory[0x00:0x00 + temp12] = returndata[0x00:0x00 + temp12];\n                        revert(memory[0x00:0x00 + returndata.length]);\n                    }\n                } else { revert(memory[0x00:0x00]); }\n            } else if (block.number >= storage[0x06]) { goto label_0307; }\n            else { revert(memory[0x00:0x00]); }\n        } else if (msg.sender == storage[0x01] & 0x02 ** 0xa0 - 0x01) { goto label_02AC; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function proposalBlock() returns (var r0) { return storage[0x06]; }\n    \n    function proposalContract() returns (var r0) { return storage[0x03] & 0x02 ** 0xa0 - 0x01; }\n    \n    function proposalDestination() returns (var r0) { return storage[0x04] & 0x02 ** 0xa0 - 0x01; }\n    \n    function proposal(var arg0, var arg1, var arg2) {\n        var var0 = msg.sender == storage[0x00] & 0x02 ** 0xa0 - 0x01;\n    \n        if (var0) {\n            if (!var0) { revert(memory[0x00:0x00]); }\n        \n        label_0496:\n            var temp0 = storage[0x07] + 0x01;\n            storage[0x07] = temp0;\n            var temp1 = ~0xffffffffffffffffffffffffffffffffffffffff;\n            var temp2 = (temp1 & storage[0x02]) | msg.sender;\n            storage[0x02] = temp2;\n            var temp3 = 0x02 ** 0xa0 - 0x01;\n            var temp4 = (temp3 & arg0) | (temp1 & storage[0x03]);\n            storage[0x03] = temp4;\n            var temp5 = arg1;\n            storage[0x05] = temp5;\n            var temp6 = (temp3 & arg2) | (temp1 & storage[0x04]);\n            storage[0x04] = temp6;\n            var temp7 = block.number + storage[0x08];\n            storage[0x06] = temp7;\n            var temp8 = memory[0x40:0x60];\n            memory[temp8:temp8 + 0x20] = temp0;\n            memory[temp8 + 0x20:temp8 + 0x20 + 0x20] = temp3 & temp2;\n            memory[temp8 + 0x40:temp8 + 0x40 + 0x20] = temp3 & temp4;\n            memory[temp8 + 0x60:temp8 + 0x60 + 0x20] = temp5;\n            memory[temp8 + 0x80:temp8 + 0x80 + 0x20] = temp3 & temp6;\n            memory[temp8 + 0xa0:temp8 + 0xa0 + 0x20] = temp7;\n            var temp9 = memory[0x40:0x60];\n            log(memory[temp9:temp9 + temp8 - temp9 + 0xc0], [0xc4edd54a9f95c32a4b15457b7427b13ebb01696e4ba5163153b70f5cc8bb93c4]);\n            return;\n        } else if (msg.sender == storage[0x01] & 0x02 ** 0xa0 - 0x01) { goto label_0496; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function transferDirectorB(var arg0) {\n        if (msg.sender != storage[0x01] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        if (msg.value != storage[0x09]) { revert(memory[0x00:0x00]); }\n    \n        var temp0 = storage[0x09];\n        var temp1 = memory[0x40:0x60];\n        var temp2;\n        temp2, memory[temp1:temp1 + 0x00] = address(storage[0x01] & 0x02 ** 0xa0 - 0x01).call.gas(!temp0 * 0x08fc).value(temp0)(memory[temp1:temp1 + 0x00]);\n        var var0 = !temp2;\n    \n        if (!var0) {\n            var0 = 0x05c1;\n            reset();\n            var temp3 = 0x02 ** 0xa0 - 0x01;\n            var temp4 = (temp3 & arg0) | (storage[0x01] & ~0xffffffffffffffffffffffffffffffffffffffff);\n            storage[0x01] = temp4;\n            var temp5 = memory[0x40:0x60];\n            memory[temp5:temp5 + 0x20] = temp3 & temp4;\n            var temp6 = memory[0x40:0x60];\n            log(memory[temp6:temp6 + temp5 - temp6 + 0x20], [0x8a77cbe0c7cf02f4277c58f952726d98e488a397059e9a58c0637d7486ae0f3e]);\n            return;\n        } else {\n            var temp7 = returndata.length;\n            memory[0x00:0x00 + temp7] = returndata[0x00:0x00 + temp7];\n            revert(memory[0x00:0x00 + returndata.length]);\n        }\n    }\n    \n    function proposalAuthor() returns (var r0) { return storage[0x02] & 0x02 ** 0xa0 - 0x01; }\n    \n    function overrideBlock() returns (var r0) { return storage[0x08]; }\n    \n    function proposalNonce() returns (var r0) { return storage[0x07]; }\n    \n    function directorA() returns (var r0) { return storage[0x00] & 0x02 ** 0xa0 - 0x01; }\n    \n    function reset() {\n        var var0 = msg.sender == storage[0x00] & 0x02 ** 0xa0 - 0x01;\n    \n        if (var0) {\n            if (!var0) { revert(memory[0x00:0x00]); }\n        \n        label_0680:\n            var temp0 = storage[0x07] + 0x01;\n            storage[0x07] = temp0;\n        \n            if (0x0f4240 >= temp0) {\n                var temp1 = ~0xffffffffffffffffffffffffffffffffffffffff;\n                storage[0x02] = temp1 & storage[0x02];\n                storage[0x03] = temp1 & storage[0x03];\n                storage[0x05] = 0x00;\n                storage[0x04] = temp1 & storage[0x04];\n                storage[0x06] = 0x00;\n                return;\n            } else {\n                storage[0x07] = 0x00;\n                var temp2 = ~0xffffffffffffffffffffffffffffffffffffffff;\n                storage[0x02] = temp2 & storage[0x02];\n                storage[0x03] = temp2 & storage[0x03];\n                storage[0x05] = 0x00;\n                storage[0x04] = temp2 & storage[0x04];\n                storage[0x06] = 0x00;\n                return;\n            }\n        } else if (msg.sender == storage[0x01] & 0x02 ** 0xa0 - 0x01) { goto label_0680; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function transferDirectorA(var arg0) {\n        if (msg.sender != storage[0x00] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        if (msg.value != storage[0x09]) { revert(memory[0x00:0x00]); }\n    \n        var temp0 = storage[0x09];\n        var temp1 = memory[0x40:0x60];\n        var temp2;\n        temp2, memory[temp1:temp1 + 0x00] = address(storage[0x00] & 0x02 ** 0xa0 - 0x01).call.gas(!temp0 * 0x08fc).value(temp0)(memory[temp1:temp1 + 0x00]);\n        var var0 = !temp2;\n    \n        if (!var0) {\n            var0 = 0x0742;\n            reset();\n            var temp3 = 0x02 ** 0xa0 - 0x01;\n            var temp4 = (temp3 & arg0) | (storage[0x00] & ~0xffffffffffffffffffffffffffffffffffffffff);\n            storage[0x00] = temp4;\n            var temp5 = memory[0x40:0x60];\n            memory[temp5:temp5 + 0x20] = temp3 & temp4;\n            var temp6 = memory[0x40:0x60];\n            log(memory[temp6:temp6 + temp5 - temp6 + 0x20], [0x80419656043a70fa57ed1372d16ac1eb1ac05cd428a6d9c52b218d77b19fc06d]);\n            return;\n        } else {\n            var temp7 = returndata.length;\n            memory[0x00:0x00 + temp7] = returndata[0x00:0x00 + temp7];\n            revert(memory[0x00:0x00 + returndata.length]);\n        }\n    }\n}\n\n.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following decompiled code lifted from EVM Bytecode.The following is the decompiled code: contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x80;\n    \n        if (msg.data.length < 0x04) { stop(); }\n    \n        var var0 = msg.data[0x00:0x20] / 0x0100000000000000000000000000000000000000000000000000000000 & 0xffffffff;\n    \n        if (var0 == 0x1284c8f5) {\n            // Dispatch table entry for transferSafety()\n            var var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00f1;\n            var var2 = transferSafety();\n        \n        label_00F1:\n            var temp0 = memory[0x40:0x60];\n            memory[temp0:temp0 + 0x20] = var2;\n            var temp1 = memory[0x40:0x60];\n            return memory[temp1:temp1 + temp0 - temp1 + 0x20];\n        } else if (var0 == 0x14139904) {\n            // Dispatch table entry for directorB()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0118;\n            var2 = directorB();\n        \n        label_0118:\n            var temp2 = memory[0x40:0x60];\n            memory[temp2:temp2 + 0x20] = var2 & 0x02 ** 0xa0 - 0x01;\n            var temp3 = memory[0x40:0x60];\n            return memory[temp3:temp3 + temp2 - temp3 + 0x20];\n        } else if (var0 == 0x173a2b5c) {\n            // Dispatch table entry for proposalAmount()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00f1;\n            var2 = proposalAmount();\n            goto label_00F1;\n        } else if (var0 == 0x19b05f49) {\n            // Dispatch table entry for accept(uint256)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00da;\n            var2 = msg.data[0x04:0x24];\n            accept(var2);\n            stop();\n        } else if (var0 == 0x216aa0ba) {\n            // Dispatch table entry for proposalBlock()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00f1;\n            var2 = proposalBlock();\n            goto label_00F1;\n        } else if (var0 == 0x3aef3900) {\n            // Dispatch table entry for proposalContract()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0118;\n            var2 = proposalContract();\n            goto label_0118;\n        } else if (var0 == 0x3e8a9439) {\n            // Dispatch table entry for proposalDestination()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0118;\n            var2 = proposalDestination();\n            goto label_0118;\n        } else if (var0 == 0x6e3f3f1a) {\n            // Dispatch table entry for proposal(address,uint256,address)\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00da;\n            var temp4 = 0x02 ** 0xa0 - 0x01;\n            var2 = temp4 & msg.data[0x04:0x24];\n            var var3 = msg.data[0x24:0x44];\n            var var4 = msg.data[0x44:0x64] & temp4;\n            proposal(var2, var3, var4);\n            stop();\n        } else if (var0 == 0x72c1df4c) {\n            // Dispatch table entry for transferDirectorB(address)\n            var1 = 0x00da;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            transferDirectorB(var2);\n            stop();\n        } else if (var0 == 0x8485b90c) {\n            // Dispatch table entry for proposalAuthor()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0118;\n            var2 = proposalAuthor();\n            goto label_0118;\n        } else if (var0 == 0x92abb859) {\n            // Dispatch table entry for overrideBlock()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00f1;\n            var2 = overrideBlock();\n            goto label_00F1;\n        } else if (var0 == 0xcc3c74a1) {\n            // Dispatch table entry for proposalNonce()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00f1;\n            var2 = proposalNonce();\n            goto label_00F1;\n        } else if (var0 == 0xd05efd40) {\n            // Dispatch table entry for directorA()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x0118;\n            var2 = directorA();\n            goto label_0118;\n        } else if (var0 == 0xd826f88f) {\n            // Dispatch table entry for reset()\n            var1 = msg.value;\n        \n            if (var1) { revert(memory[0x00:0x00]); }\n        \n            var1 = 0x00da;\n            reset();\n            stop();\n        } else if (var0 == 0xdd34abd3) {\n            // Dispatch table entry for transferDirectorA(address)\n            var1 = 0x00da;\n            var2 = msg.data[0x04:0x24] & 0x02 ** 0xa0 - 0x01;\n            transferDirectorA(var2);\n            stop();\n        } else { stop(); }\n    }\n    \n    function transferSafety() returns (var r0) { return storage[0x09]; }\n    \n    function directorB() returns (var r0) { return storage[0x01] & 0x02 ** 0xa0 - 0x01; }\n    \n    function proposalAmount() returns (var r0) { return storage[0x05]; }\n    \n    function accept(var arg0) {\n        var var0 = 0x00;\n        var var1 = var0;\n        var var2 = var1;\n        var var3 = var2;\n        var var4 = msg.sender == storage[var3] & 0x02 ** 0xa0 - 0x01;\n    \n        if (var4) {\n            if (!var4) { revert(memory[0x00:0x00]); }\n        \n        label_02AC:\n        \n            if (arg0 != storage[0x07]) { revert(memory[0x00:0x00]); }\n        \n            if (0x00 >= storage[0x05]) { revert(memory[0x00:0x00]); }\n        \n            if (!(storage[0x04] & 0x02 ** 0xa0 - 0x01)) { revert(memory[0x00:0x00]); }\n        \n            var4 = msg.sender != storage[0x02] & 0x02 ** 0xa0 - 0x01;\n        \n            if (var4) {\n                if (!var4) { revert(memory[0x00:0x00]); }\n            \n            label_0307:\n                var temp0 = 0x02 ** 0xa0 - 0x01;\n                var0 = temp0 & storage[0x03];\n                var1 = temp0 & storage[0x04];\n                var2 = storage[0x05];\n                var4 = 0x032b;\n                reset();\n            \n                if (var0 & 0x02 ** 0xa0 - 0x01) {\n                    var temp1 = memory[0x40:0x60];\n                    memory[temp1:temp1 + 0x20] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n                    var temp2 = 0x02 ** 0xa0 - 0x01;\n                    memory[temp1 + 0x04:temp1 + 0x04 + 0x20] = temp2 & var1;\n                    memory[temp1 + 0x24:temp1 + 0x24 + 0x20] = var2;\n                    var3 = var0;\n                    var4 = var3 & temp2;\n                    var var5 = 0xa9059cbb;\n                    var var6 = temp1 + 0x44;\n                    var var7 = 0x00;\n                    var var8 = memory[0x40:0x60];\n                    var var9 = temp1 - var8 + 0x44;\n                    var var10 = var8;\n                    var var11 = var7;\n                    var var12 = var4;\n                    var var13 = !address(var12).code.length;\n                \n                    if (var13) { revert(memory[0x00:0x00]); }\n                \n                    var temp3;\n                    temp3, memory[var8:var8 + var7] = address(var12).call.gas(msg.gas).value(var11)(memory[var10:var10 + var9]);\n                    var7 = !temp3;\n                \n                    if (!var7) {\n                        var temp4 = memory[0x40:0x60];\n                        memory[temp4:temp4 + 0x20] = arg0;\n                        var temp5 = memory[0x40:0x60];\n                        log(memory[temp5:temp5 + temp4 - temp5 + 0x20], [0xa573f6e77cec35b255a3fb35b673473461473d63e293d50c5eba0d7d18942383]);\n                        return;\n                    } else {\n                        var temp6 = returndata.length;\n                        memory[0x00:0x00 + temp6] = returndata[0x00:0x00 + temp6];\n                        revert(memory[0x00:0x00 + returndata.length]);\n                    }\n                } else if (var2 <= address(this).balance) {\n                    var temp7 = memory[0x40:0x60];\n                    var temp8 = var2;\n                    var temp9;\n                    temp9, memory[temp7:temp7 + 0x00] = address(var1 & 0x02 ** 0xa0 - 0x01).call.gas(!temp8 * 0x08fc).value(temp8)(memory[temp7:temp7 + 0x00]);\n                    var4 = !temp9;\n                \n                    if (!var4) {\n                        var temp10 = memory[0x40:0x60];\n                        memory[temp10:temp10 + 0x20] = arg0;\n                        var temp11 = memory[0x40:0x60];\n                        log(memory[temp11:temp11 + temp10 - temp11 + 0x20], [0xa573f6e77cec35b255a3fb35b673473461473d63e293d50c5eba0d7d18942383]);\n                        return;\n                    } else {\n                        var temp12 = returndata.length;\n                        memory[0x00:0x00 + temp12] = returndata[0x00:0x00 + temp12];\n                        revert(memory[0x00:0x00 + returndata.length]);\n                    }\n                } else { revert(memory[0x00:0x00]); }\n            } else if (block.number >= storage[0x06]) { goto label_0307; }\n            else { revert(memory[0x00:0x00]); }\n        } else if (msg.sender == storage[0x01] & 0x02 ** 0xa0 - 0x01) { goto label_02AC; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function proposalBlock() returns (var r0) { return storage[0x06]; }\n    \n    function proposalContract() returns (var r0) { return storage[0x03] & 0x02 ** 0xa0 - 0x01; }\n    \n    function proposalDestination() returns (var r0) { return storage[0x04] & 0x02 ** 0xa0 - 0x01; }\n    \n    function proposal(var arg0, var arg1, var arg2) {\n        var var0 = msg.sender == storage[0x00] & 0x02 ** 0xa0 - 0x01;\n    \n        if (var0) {\n            if (!var0) { revert(memory[0x00:0x00]); }\n        \n        label_0496:\n            var temp0 = storage[0x07] + 0x01;\n            storage[0x07] = temp0;\n            var temp1 = ~0xffffffffffffffffffffffffffffffffffffffff;\n            var temp2 = (temp1 & storage[0x02]) | msg.sender;\n            storage[0x02] = temp2;\n            var temp3 = 0x02 ** 0xa0 - 0x01;\n            var temp4 = (temp3 & arg0) | (temp1 & storage[0x03]);\n            storage[0x03] = temp4;\n            var temp5 = arg1;\n            storage[0x05] = temp5;\n            var temp6 = (temp3 & arg2) | (temp1 & storage[0x04]);\n            storage[0x04] = temp6;\n            var temp7 = block.number + storage[0x08];\n            storage[0x06] = temp7;\n            var temp8 = memory[0x40:0x60];\n            memory[temp8:temp8 + 0x20] = temp0;\n            memory[temp8 + 0x20:temp8 + 0x20 + 0x20] = temp3 & temp2;\n            memory[temp8 + 0x40:temp8 + 0x40 + 0x20] = temp3 & temp4;\n            memory[temp8 + 0x60:temp8 + 0x60 + 0x20] = temp5;\n            memory[temp8 + 0x80:temp8 + 0x80 + 0x20] = temp3 & temp6;\n            memory[temp8 + 0xa0:temp8 + 0xa0 + 0x20] = temp7;\n            var temp9 = memory[0x40:0x60];\n            log(memory[temp9:temp9 + temp8 - temp9 + 0xc0], [0xc4edd54a9f95c32a4b15457b7427b13ebb01696e4ba5163153b70f5cc8bb93c4]);\n            return;\n        } else if (msg.sender == storage[0x01] & 0x02 ** 0xa0 - 0x01) { goto label_0496; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function transferDirectorB(var arg0) {\n        if (msg.sender != storage[0x01] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        if (msg.value != storage[0x09]) { revert(memory[0x00:0x00]); }\n    \n        var temp0 = storage[0x09];\n        var temp1 = memory[0x40:0x60];\n        var temp2;\n        temp2, memory[temp1:temp1 + 0x00] = address(storage[0x01] & 0x02 ** 0xa0 - 0x01).call.gas(!temp0 * 0x08fc).value(temp0)(memory[temp1:temp1 + 0x00]);\n        var var0 = !temp2;\n    \n        if (!var0) {\n            var0 = 0x05c1;\n            reset();\n            var temp3 = 0x02 ** 0xa0 - 0x01;\n            var temp4 = (temp3 & arg0) | (storage[0x01] & ~0xffffffffffffffffffffffffffffffffffffffff);\n            storage[0x01] = temp4;\n            var temp5 = memory[0x40:0x60];\n            memory[temp5:temp5 + 0x20] = temp3 & temp4;\n            var temp6 = memory[0x40:0x60];\n            log(memory[temp6:temp6 + temp5 - temp6 + 0x20], [0x8a77cbe0c7cf02f4277c58f952726d98e488a397059e9a58c0637d7486ae0f3e]);\n            return;\n        } else {\n            var temp7 = returndata.length;\n            memory[0x00:0x00 + temp7] = returndata[0x00:0x00 + temp7];\n            revert(memory[0x00:0x00 + returndata.length]);\n        }\n    }\n    \n    function proposalAuthor() returns (var r0) { return storage[0x02] & 0x02 ** 0xa0 - 0x01; }\n    \n    function overrideBlock() returns (var r0) { return storage[0x08]; }\n    \n    function proposalNonce() returns (var r0) { return storage[0x07]; }\n    \n    function directorA() returns (var r0) { return storage[0x00] & 0x02 ** 0xa0 - 0x01; }\n    \n    function reset() {\n        var var0 = msg.sender == storage[0x00] & 0x02 ** 0xa0 - 0x01;\n    \n        if (var0) {\n            if (!var0) { revert(memory[0x00:0x00]); }\n        \n        label_0680:\n            var temp0 = storage[0x07] + 0x01;\n            storage[0x07] = temp0;\n        \n            if (0x0f4240 >= temp0) {\n                var temp1 = ~0xffffffffffffffffffffffffffffffffffffffff;\n                storage[0x02] = temp1 & storage[0x02];\n                storage[0x03] = temp1 & storage[0x03];\n                storage[0x05] = 0x00;\n                storage[0x04] = temp1 & storage[0x04];\n                storage[0x06] = 0x00;\n                return;\n            } else {\n                storage[0x07] = 0x00;\n                var temp2 = ~0xffffffffffffffffffffffffffffffffffffffff;\n                storage[0x02] = temp2 & storage[0x02];\n                storage[0x03] = temp2 & storage[0x03];\n                storage[0x05] = 0x00;\n                storage[0x04] = temp2 & storage[0x04];\n                storage[0x06] = 0x00;\n                return;\n            }\n        } else if (msg.sender == storage[0x01] & 0x02 ** 0xa0 - 0x01) { goto label_0680; }\n        else { revert(memory[0x00:0x00]); }\n    }\n    \n    function transferDirectorA(var arg0) {\n        if (msg.sender != storage[0x00] & 0x02 ** 0xa0 - 0x01) { revert(memory[0x00:0x00]); }\n    \n        if (msg.value != storage[0x09]) { revert(memory[0x00:0x00]); }\n    \n        var temp0 = storage[0x09];\n        var temp1 = memory[0x40:0x60];\n        var temp2;\n        temp2, memory[temp1:temp1 + 0x00] = address(storage[0x00] & 0x02 ** 0xa0 - 0x01).call.gas(!temp0 * 0x08fc).value(temp0)(memory[temp1:temp1 + 0x00]);\n        var var0 = !temp2;\n    \n        if (!var0) {\n            var0 = 0x0742;\n            reset();\n            var temp3 = 0x02 ** 0xa0 - 0x01;\n            var temp4 = (temp3 & arg0) | (storage[0x00] & ~0xffffffffffffffffffffffffffffffffffffffff);\n            storage[0x00] = temp4;\n            var temp5 = memory[0x40:0x60];\n            memory[temp5:temp5 + 0x20] = temp3 & temp4;\n            var temp6 = memory[0x40:0x60];\n            log(memory[temp6:temp6 + temp5 - temp6 + 0x20], [0x80419656043a70fa57ed1372d16ac1eb1ac05cd428a6d9c52b218d77b19fc06d]);\n            return;\n        } else {\n            var temp7 = returndata.length;\n            memory[0x00:0x00 + temp7] = returndata[0x00:0x00 + temp7];\n            revert(memory[0x00:0x00 + returndata.length]);\n        }\n    }\n}\n\n.",
	"status": "1",
	"time_cost": 41.41906690597534,
	"usage": {
		"completion_tokens": 857,
		"prompt_tokens": 4993,
		"total_tokens": 5850
	}
}